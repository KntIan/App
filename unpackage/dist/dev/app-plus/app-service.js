var __defProp = Object.defineProperty;
var __defNormalProp = (obj, key, value) => key in obj ? __defProp(obj, key, { enumerable: true, configurable: true, writable: true, value }) : obj[key] = value;
var __publicField = (obj, key, value) => {
  __defNormalProp(obj, typeof key !== "symbol" ? key + "" : key, value);
  return value;
};
if (typeof Promise !== "undefined" && !Promise.prototype.finally) {
  Promise.prototype.finally = function(callback) {
    const promise = this.constructor;
    return this.then(
      (value) => promise.resolve(callback()).then(() => value),
      (reason) => promise.resolve(callback()).then(() => {
        throw reason;
      })
    );
  };
}
;
if (typeof uni !== "undefined" && uni && uni.requireGlobal) {
  const global2 = uni.requireGlobal();
  ArrayBuffer = global2.ArrayBuffer;
  Int8Array = global2.Int8Array;
  Uint8Array = global2.Uint8Array;
  Uint8ClampedArray = global2.Uint8ClampedArray;
  Int16Array = global2.Int16Array;
  Uint16Array = global2.Uint16Array;
  Int32Array = global2.Int32Array;
  Uint32Array = global2.Uint32Array;
  Float32Array = global2.Float32Array;
  Float64Array = global2.Float64Array;
  BigInt64Array = global2.BigInt64Array;
  BigUint64Array = global2.BigUint64Array;
}
;
if (uni.restoreGlobal) {
  uni.restoreGlobal(Vue, weex, plus, setTimeout, clearTimeout, setInterval, clearInterval);
}
(function(vue) {
  "use strict";
  var _e2, _f, _g, _h, _i2, _j, _k, _l, _m, _n2, _o2, _p, _q, _r2, _s, _t2, _u, _v;
  const ON_SHOW = "onShow";
  const ON_HIDE = "onHide";
  const ON_LOAD = "onLoad";
  const ON_READY = "onReady";
  const ON_UNLOAD = "onUnload";
  const ON_REACH_BOTTOM = "onReachBottom";
  const ON_PULL_DOWN_REFRESH = "onPullDownRefresh";
  const ON_NAVIGATION_BAR_BUTTON_TAP = "onNavigationBarButtonTap";
  function requireNativePlugin(name) {
    return weex.requireModule(name);
  }
  function formatAppLog(type, filename, ...args) {
    if (uni.__log__) {
      uni.__log__(type, filename, ...args);
    } else {
      console[type].apply(console, [...args, filename]);
    }
  }
  function resolveEasycom(component2, easycom) {
    return typeof component2 === "string" ? easycom : component2;
  }
  const createHook = (lifecycle) => (hook, target = vue.getCurrentInstance()) => {
    !vue.isInSSRComponentSetup && vue.injectHook(lifecycle, hook, target);
  };
  const onShow = /* @__PURE__ */ createHook(ON_SHOW);
  const onHide = /* @__PURE__ */ createHook(ON_HIDE);
  const onLoad = /* @__PURE__ */ createHook(ON_LOAD);
  const onReady = /* @__PURE__ */ createHook(ON_READY);
  const onUnload = /* @__PURE__ */ createHook(ON_UNLOAD);
  const onReachBottom = /* @__PURE__ */ createHook(ON_REACH_BOTTOM);
  const onPullDownRefresh = /* @__PURE__ */ createHook(ON_PULL_DOWN_REFRESH);
  const onNavigationBarButtonTap = /* @__PURE__ */ createHook(ON_NAVIGATION_BAR_BUTTON_TAP);
  const _export_sfc = (sfc, props2) => {
    const target = sfc.__vccOpts || sfc;
    for (const [key, val] of props2) {
      target[key] = val;
    }
    return target;
  };
  const _sfc_main$2Q = {
    data() {
      return {
        constants: {}
      };
    },
    onLoad() {
      const hasViewed = uni.getStorageSync("hasViewedStartupPage");
      let isNavigating = false;
      if (!hasViewed) {
        uni.setStorageSync("hasViewedStartupPage", true);
        setTimeout(() => {
          formatAppLog("log", "at pages/index/index.vue:31", "跳转到登录页");
          if (!isNavigating) {
            isNavigating = true;
            uni.navigateTo({
              url: "/pages/login/login",
              success: () => {
                formatAppLog("log", "at pages/index/index.vue:37", "成功跳转到登录页");
              },
              fail: (error2) => {
                formatAppLog("error", "at pages/index/index.vue:40", "跳转失败:", error2);
                isNavigating = false;
              }
            });
          }
        }, 3e3);
      } else {
        formatAppLog("log", "at pages/index/index.vue:47", "1111跳转到登录页");
        if (!isNavigating) {
          isNavigating = true;
          uni.navigateTo({
            url: "/pages/login/login",
            // 跳转到登录页或其他页面
            success: () => {
              formatAppLog("log", "at pages/index/index.vue:53", "成功跳转到登录页");
            },
            fail: (error2) => {
              formatAppLog("error", "at pages/index/index.vue:56", "跳转失败:", error2);
              isNavigating = false;
            }
          });
        }
      }
    },
    methods: {}
  };
  function _sfc_render$2P(_ctx, _cache, $props, $setup, $data, $options) {
    return vue.openBlock(), vue.createElementBlock("view", { class: "page" }, [
      vue.createElementVNode("view", { class: "box1" }, [
        vue.createElementVNode("image", {
          class: "image_2",
          referrerpolicy: "no-referrer",
          src: "https://lanhu.oss-cn-beijing.aliyuncs.com/SketchPng4253829e1a377894ca42c94d7edf9cdfd758b5bf890e937604ce7635bfc36c30"
        }),
        vue.createElementVNode("text", { class: "text-group_2" }, "练习书法 习得一手好字")
      ]),
      vue.createElementVNode("view", { class: "box2" }, [
        vue.createElementVNode("view", { class: "box_2 flex-col" }),
        vue.createElementVNode("text", { class: "text2" }, "泽熙书画")
      ])
    ]);
  }
  const PagesIndexIndex = /* @__PURE__ */ _export_sfc(_sfc_main$2Q, [["render", _sfc_render$2P], ["__file", "C:/Users/Administrator/Desktop/Project Folder/ZXHand/ZXHandwritting_APP_uniapp/pages/index/index.vue"]]);
  var isVue2 = false;
  function set$1(target, key, val) {
    if (Array.isArray(target)) {
      target.length = Math.max(target.length, key);
      target.splice(key, 1, val);
      return val;
    }
    target[key] = val;
    return val;
  }
  function del(target, key) {
    if (Array.isArray(target)) {
      target.splice(key, 1);
      return;
    }
    delete target[key];
  }
  function getDevtoolsGlobalHook() {
    return getTarget().__VUE_DEVTOOLS_GLOBAL_HOOK__;
  }
  function getTarget() {
    return typeof navigator !== "undefined" && typeof window !== "undefined" ? window : typeof global !== "undefined" ? global : {};
  }
  const isProxyAvailable = typeof Proxy === "function";
  const HOOK_SETUP = "devtools-plugin:setup";
  const HOOK_PLUGIN_SETTINGS_SET = "plugin:settings:set";
  let supported;
  let perf;
  function isPerformanceSupported() {
    var _a;
    if (supported !== void 0) {
      return supported;
    }
    if (typeof window !== "undefined" && window.performance) {
      supported = true;
      perf = window.performance;
    } else if (typeof global !== "undefined" && ((_a = global.perf_hooks) === null || _a === void 0 ? void 0 : _a.performance)) {
      supported = true;
      perf = global.perf_hooks.performance;
    } else {
      supported = false;
    }
    return supported;
  }
  function now() {
    return isPerformanceSupported() ? perf.now() : Date.now();
  }
  class ApiProxy {
    constructor(plugin, hook) {
      this.target = null;
      this.targetQueue = [];
      this.onQueue = [];
      this.plugin = plugin;
      this.hook = hook;
      const defaultSettings = {};
      if (plugin.settings) {
        for (const id in plugin.settings) {
          const item = plugin.settings[id];
          defaultSettings[id] = item.defaultValue;
        }
      }
      const localSettingsSaveId = `__vue-devtools-plugin-settings__${plugin.id}`;
      let currentSettings = Object.assign({}, defaultSettings);
      try {
        const raw = localStorage.getItem(localSettingsSaveId);
        const data = JSON.parse(raw);
        Object.assign(currentSettings, data);
      } catch (e2) {
      }
      this.fallbacks = {
        getSettings() {
          return currentSettings;
        },
        setSettings(value) {
          try {
            localStorage.setItem(localSettingsSaveId, JSON.stringify(value));
          } catch (e2) {
          }
          currentSettings = value;
        },
        now() {
          return now();
        }
      };
      if (hook) {
        hook.on(HOOK_PLUGIN_SETTINGS_SET, (pluginId, value) => {
          if (pluginId === this.plugin.id) {
            this.fallbacks.setSettings(value);
          }
        });
      }
      this.proxiedOn = new Proxy({}, {
        get: (_target, prop) => {
          if (this.target) {
            return this.target.on[prop];
          } else {
            return (...args) => {
              this.onQueue.push({
                method: prop,
                args
              });
            };
          }
        }
      });
      this.proxiedTarget = new Proxy({}, {
        get: (_target, prop) => {
          if (this.target) {
            return this.target[prop];
          } else if (prop === "on") {
            return this.proxiedOn;
          } else if (Object.keys(this.fallbacks).includes(prop)) {
            return (...args) => {
              this.targetQueue.push({
                method: prop,
                args,
                resolve: () => {
                }
              });
              return this.fallbacks[prop](...args);
            };
          } else {
            return (...args) => {
              return new Promise((resolve) => {
                this.targetQueue.push({
                  method: prop,
                  args,
                  resolve
                });
              });
            };
          }
        }
      });
    }
    async setRealTarget(target) {
      this.target = target;
      for (const item of this.onQueue) {
        this.target.on[item.method](...item.args);
      }
      for (const item of this.targetQueue) {
        item.resolve(await this.target[item.method](...item.args));
      }
    }
  }
  function setupDevtoolsPlugin(pluginDescriptor, setupFn) {
    const descriptor = pluginDescriptor;
    const target = getTarget();
    const hook = getDevtoolsGlobalHook();
    const enableProxy = isProxyAvailable && descriptor.enableEarlyProxy;
    if (hook && (target.__VUE_DEVTOOLS_PLUGIN_API_AVAILABLE__ || !enableProxy)) {
      hook.emit(HOOK_SETUP, pluginDescriptor, setupFn);
    } else {
      const proxy = enableProxy ? new ApiProxy(descriptor, hook) : null;
      const list = target.__VUE_DEVTOOLS_PLUGINS__ = target.__VUE_DEVTOOLS_PLUGINS__ || [];
      list.push({
        pluginDescriptor: descriptor,
        setupFn,
        proxy
      });
      if (proxy)
        setupFn(proxy.proxiedTarget);
    }
  }
  /*!
   * pinia v2.1.7
   * (c) 2023 Eduardo San Martin Morote
   * @license MIT
   */
  let activePinia;
  const setActivePinia = (pinia) => activePinia = pinia;
  const piniaSymbol = Symbol("pinia");
  function isPlainObject(o2) {
    return o2 && typeof o2 === "object" && Object.prototype.toString.call(o2) === "[object Object]" && typeof o2.toJSON !== "function";
  }
  var MutationType;
  (function(MutationType2) {
    MutationType2["direct"] = "direct";
    MutationType2["patchObject"] = "patch object";
    MutationType2["patchFunction"] = "patch function";
  })(MutationType || (MutationType = {}));
  const IS_CLIENT = typeof window !== "undefined";
  const USE_DEVTOOLS = IS_CLIENT;
  const _global = /* @__PURE__ */ (() => typeof window === "object" && window.window === window ? window : typeof self === "object" && self.self === self ? self : typeof global === "object" && global.global === global ? global : typeof globalThis === "object" ? globalThis : { HTMLElement: null })();
  function bom(blob, { autoBom = false } = {}) {
    if (autoBom && /^\s*(?:text\/\S*|application\/xml|\S*\/\S*\+xml)\s*;.*charset\s*=\s*utf-8/i.test(blob.type)) {
      return new Blob([String.fromCharCode(65279), blob], { type: blob.type });
    }
    return blob;
  }
  function download(url2, name, opts) {
    const xhr = new XMLHttpRequest();
    xhr.open("GET", url2);
    xhr.responseType = "blob";
    xhr.onload = function() {
      saveAs(xhr.response, name, opts);
    };
    xhr.onerror = function() {
      console.error("could not download file");
    };
    xhr.send();
  }
  function corsEnabled(url2) {
    const xhr = new XMLHttpRequest();
    xhr.open("HEAD", url2, false);
    try {
      xhr.send();
    } catch (e2) {
    }
    return xhr.status >= 200 && xhr.status <= 299;
  }
  function click(node) {
    try {
      node.dispatchEvent(new MouseEvent("click"));
    } catch (e2) {
      const evt = document.createEvent("MouseEvents");
      evt.initMouseEvent("click", true, true, window, 0, 0, 0, 80, 20, false, false, false, false, 0, null);
      node.dispatchEvent(evt);
    }
  }
  const _navigator = typeof navigator === "object" ? navigator : { userAgent: "" };
  const isMacOSWebView = /* @__PURE__ */ (() => /Macintosh/.test(_navigator.userAgent) && /AppleWebKit/.test(_navigator.userAgent) && !/Safari/.test(_navigator.userAgent))();
  const saveAs = !IS_CLIENT ? () => {
  } : (
    // Use download attribute first if possible (#193 Lumia mobile) unless this is a macOS WebView or mini program
    typeof HTMLAnchorElement !== "undefined" && "download" in HTMLAnchorElement.prototype && !isMacOSWebView ? downloadSaveAs : (
      // Use msSaveOrOpenBlob as a second approach
      "msSaveOrOpenBlob" in _navigator ? msSaveAs : (
        // Fallback to using FileReader and a popup
        fileSaverSaveAs
      )
    )
  );
  function downloadSaveAs(blob, name = "download", opts) {
    const a2 = document.createElement("a");
    a2.download = name;
    a2.rel = "noopener";
    if (typeof blob === "string") {
      a2.href = blob;
      if (a2.origin !== location.origin) {
        if (corsEnabled(a2.href)) {
          download(blob, name, opts);
        } else {
          a2.target = "_blank";
          click(a2);
        }
      } else {
        click(a2);
      }
    } else {
      a2.href = URL.createObjectURL(blob);
      setTimeout(function() {
        URL.revokeObjectURL(a2.href);
      }, 4e4);
      setTimeout(function() {
        click(a2);
      }, 0);
    }
  }
  function msSaveAs(blob, name = "download", opts) {
    if (typeof blob === "string") {
      if (corsEnabled(blob)) {
        download(blob, name, opts);
      } else {
        const a2 = document.createElement("a");
        a2.href = blob;
        a2.target = "_blank";
        setTimeout(function() {
          click(a2);
        });
      }
    } else {
      navigator.msSaveOrOpenBlob(bom(blob, opts), name);
    }
  }
  function fileSaverSaveAs(blob, name, opts, popup) {
    popup = popup || open("", "_blank");
    if (popup) {
      popup.document.title = popup.document.body.innerText = "downloading...";
    }
    if (typeof blob === "string")
      return download(blob, name, opts);
    const force = blob.type === "application/octet-stream";
    const isSafari = /constructor/i.test(String(_global.HTMLElement)) || "safari" in _global;
    const isChromeIOS = /CriOS\/[\d]+/.test(navigator.userAgent);
    if ((isChromeIOS || force && isSafari || isMacOSWebView) && typeof FileReader !== "undefined") {
      const reader = new FileReader();
      reader.onloadend = function() {
        let url2 = reader.result;
        if (typeof url2 !== "string") {
          popup = null;
          throw new Error("Wrong reader.result type");
        }
        url2 = isChromeIOS ? url2 : url2.replace(/^data:[^;]*;/, "data:attachment/file;");
        if (popup) {
          popup.location.href = url2;
        } else {
          location.assign(url2);
        }
        popup = null;
      };
      reader.readAsDataURL(blob);
    } else {
      const url2 = URL.createObjectURL(blob);
      if (popup)
        popup.location.assign(url2);
      else
        location.href = url2;
      popup = null;
      setTimeout(function() {
        URL.revokeObjectURL(url2);
      }, 4e4);
    }
  }
  function toastMessage(message2, type) {
    const piniaMessage = "🍍 " + message2;
    if (typeof __VUE_DEVTOOLS_TOAST__ === "function") {
      __VUE_DEVTOOLS_TOAST__(piniaMessage, type);
    } else if (type === "error") {
      console.error(piniaMessage);
    } else if (type === "warn") {
      console.warn(piniaMessage);
    } else {
      console.log(piniaMessage);
    }
  }
  function isPinia(o2) {
    return "_a" in o2 && "install" in o2;
  }
  function checkClipboardAccess() {
    if (!("clipboard" in navigator)) {
      toastMessage(`Your browser doesn't support the Clipboard API`, "error");
      return true;
    }
  }
  function checkNotFocusedError(error2) {
    if (error2 instanceof Error && error2.message.toLowerCase().includes("document is not focused")) {
      toastMessage('You need to activate the "Emulate a focused page" setting in the "Rendering" panel of devtools.', "warn");
      return true;
    }
    return false;
  }
  async function actionGlobalCopyState(pinia) {
    if (checkClipboardAccess())
      return;
    try {
      await navigator.clipboard.writeText(JSON.stringify(pinia.state.value));
      toastMessage("Global state copied to clipboard.");
    } catch (error2) {
      if (checkNotFocusedError(error2))
        return;
      toastMessage(`Failed to serialize the state. Check the console for more details.`, "error");
      console.error(error2);
    }
  }
  async function actionGlobalPasteState(pinia) {
    if (checkClipboardAccess())
      return;
    try {
      loadStoresState(pinia, JSON.parse(await navigator.clipboard.readText()));
      toastMessage("Global state pasted from clipboard.");
    } catch (error2) {
      if (checkNotFocusedError(error2))
        return;
      toastMessage(`Failed to deserialize the state from clipboard. Check the console for more details.`, "error");
      console.error(error2);
    }
  }
  async function actionGlobalSaveState(pinia) {
    try {
      saveAs(new Blob([JSON.stringify(pinia.state.value)], {
        type: "text/plain;charset=utf-8"
      }), "pinia-state.json");
    } catch (error2) {
      toastMessage(`Failed to export the state as JSON. Check the console for more details.`, "error");
      console.error(error2);
    }
  }
  let fileInput;
  function getFileOpener() {
    if (!fileInput) {
      fileInput = document.createElement("input");
      fileInput.type = "file";
      fileInput.accept = ".json";
    }
    function openFile() {
      return new Promise((resolve, reject) => {
        fileInput.onchange = async () => {
          const files2 = fileInput.files;
          if (!files2)
            return resolve(null);
          const file = files2.item(0);
          if (!file)
            return resolve(null);
          return resolve({ text: await file.text(), file });
        };
        fileInput.oncancel = () => resolve(null);
        fileInput.onerror = reject;
        fileInput.click();
      });
    }
    return openFile;
  }
  async function actionGlobalOpenStateFile(pinia) {
    try {
      const open2 = getFileOpener();
      const result = await open2();
      if (!result)
        return;
      const { text, file } = result;
      loadStoresState(pinia, JSON.parse(text));
      toastMessage(`Global state imported from "${file.name}".`);
    } catch (error2) {
      toastMessage(`Failed to import the state from JSON. Check the console for more details.`, "error");
      console.error(error2);
    }
  }
  function loadStoresState(pinia, state) {
    for (const key in state) {
      const storeState = pinia.state.value[key];
      if (storeState) {
        Object.assign(storeState, state[key]);
      } else {
        pinia.state.value[key] = state[key];
      }
    }
  }
  function formatDisplay(display) {
    return {
      _custom: {
        display
      }
    };
  }
  const PINIA_ROOT_LABEL = "🍍 Pinia (root)";
  const PINIA_ROOT_ID = "_root";
  function formatStoreForInspectorTree(store) {
    return isPinia(store) ? {
      id: PINIA_ROOT_ID,
      label: PINIA_ROOT_LABEL
    } : {
      id: store.$id,
      label: store.$id
    };
  }
  function formatStoreForInspectorState(store) {
    if (isPinia(store)) {
      const storeNames = Array.from(store._s.keys());
      const storeMap = store._s;
      const state2 = {
        state: storeNames.map((storeId) => ({
          editable: true,
          key: storeId,
          value: store.state.value[storeId]
        })),
        getters: storeNames.filter((id) => storeMap.get(id)._getters).map((id) => {
          const store2 = storeMap.get(id);
          return {
            editable: false,
            key: id,
            value: store2._getters.reduce((getters, key) => {
              getters[key] = store2[key];
              return getters;
            }, {})
          };
        })
      };
      return state2;
    }
    const state = {
      state: Object.keys(store.$state).map((key) => ({
        editable: true,
        key,
        value: store.$state[key]
      }))
    };
    if (store._getters && store._getters.length) {
      state.getters = store._getters.map((getterName) => ({
        editable: false,
        key: getterName,
        value: store[getterName]
      }));
    }
    if (store._customProperties.size) {
      state.customProperties = Array.from(store._customProperties).map((key) => ({
        editable: true,
        key,
        value: store[key]
      }));
    }
    return state;
  }
  function formatEventData(events) {
    if (!events)
      return {};
    if (Array.isArray(events)) {
      return events.reduce((data, event) => {
        data.keys.push(event.key);
        data.operations.push(event.type);
        data.oldValue[event.key] = event.oldValue;
        data.newValue[event.key] = event.newValue;
        return data;
      }, {
        oldValue: {},
        keys: [],
        operations: [],
        newValue: {}
      });
    } else {
      return {
        operation: formatDisplay(events.type),
        key: formatDisplay(events.key),
        oldValue: events.oldValue,
        newValue: events.newValue
      };
    }
  }
  function formatMutationType(type) {
    switch (type) {
      case MutationType.direct:
        return "mutation";
      case MutationType.patchFunction:
        return "$patch";
      case MutationType.patchObject:
        return "$patch";
      default:
        return "unknown";
    }
  }
  let isTimelineActive = true;
  const componentStateTypes = [];
  const MUTATIONS_LAYER_ID = "pinia:mutations";
  const INSPECTOR_ID = "pinia";
  const { assign: assign$1 } = Object;
  const getStoreType = (id) => "🍍 " + id;
  function registerPiniaDevtools(app, pinia) {
    setupDevtoolsPlugin({
      id: "dev.esm.pinia",
      label: "Pinia 🍍",
      logo: "https://pinia.vuejs.org/logo.svg",
      packageName: "pinia",
      homepage: "https://pinia.vuejs.org",
      componentStateTypes,
      app
    }, (api) => {
      if (typeof api.now !== "function") {
        toastMessage("You seem to be using an outdated version of Vue Devtools. Are you still using the Beta release instead of the stable one? You can find the links at https://devtools.vuejs.org/guide/installation.html.");
      }
      api.addTimelineLayer({
        id: MUTATIONS_LAYER_ID,
        label: `Pinia 🍍`,
        color: 15064968
      });
      api.addInspector({
        id: INSPECTOR_ID,
        label: "Pinia 🍍",
        icon: "storage",
        treeFilterPlaceholder: "Search stores",
        actions: [
          {
            icon: "content_copy",
            action: () => {
              actionGlobalCopyState(pinia);
            },
            tooltip: "Serialize and copy the state"
          },
          {
            icon: "content_paste",
            action: async () => {
              await actionGlobalPasteState(pinia);
              api.sendInspectorTree(INSPECTOR_ID);
              api.sendInspectorState(INSPECTOR_ID);
            },
            tooltip: "Replace the state with the content of your clipboard"
          },
          {
            icon: "save",
            action: () => {
              actionGlobalSaveState(pinia);
            },
            tooltip: "Save the state as a JSON file"
          },
          {
            icon: "folder_open",
            action: async () => {
              await actionGlobalOpenStateFile(pinia);
              api.sendInspectorTree(INSPECTOR_ID);
              api.sendInspectorState(INSPECTOR_ID);
            },
            tooltip: "Import the state from a JSON file"
          }
        ],
        nodeActions: [
          {
            icon: "restore",
            tooltip: 'Reset the state (with "$reset")',
            action: (nodeId) => {
              const store = pinia._s.get(nodeId);
              if (!store) {
                toastMessage(`Cannot reset "${nodeId}" store because it wasn't found.`, "warn");
              } else if (typeof store.$reset !== "function") {
                toastMessage(`Cannot reset "${nodeId}" store because it doesn't have a "$reset" method implemented.`, "warn");
              } else {
                store.$reset();
                toastMessage(`Store "${nodeId}" reset.`);
              }
            }
          }
        ]
      });
      api.on.inspectComponent((payload, ctx) => {
        const proxy = payload.componentInstance && payload.componentInstance.proxy;
        if (proxy && proxy._pStores) {
          const piniaStores = payload.componentInstance.proxy._pStores;
          Object.values(piniaStores).forEach((store) => {
            payload.instanceData.state.push({
              type: getStoreType(store.$id),
              key: "state",
              editable: true,
              value: store._isOptionsAPI ? {
                _custom: {
                  value: vue.toRaw(store.$state),
                  actions: [
                    {
                      icon: "restore",
                      tooltip: "Reset the state of this store",
                      action: () => store.$reset()
                    }
                  ]
                }
              } : (
                // NOTE: workaround to unwrap transferred refs
                Object.keys(store.$state).reduce((state, key) => {
                  state[key] = store.$state[key];
                  return state;
                }, {})
              )
            });
            if (store._getters && store._getters.length) {
              payload.instanceData.state.push({
                type: getStoreType(store.$id),
                key: "getters",
                editable: false,
                value: store._getters.reduce((getters, key) => {
                  try {
                    getters[key] = store[key];
                  } catch (error2) {
                    getters[key] = error2;
                  }
                  return getters;
                }, {})
              });
            }
          });
        }
      });
      api.on.getInspectorTree((payload) => {
        if (payload.app === app && payload.inspectorId === INSPECTOR_ID) {
          let stores = [pinia];
          stores = stores.concat(Array.from(pinia._s.values()));
          payload.rootNodes = (payload.filter ? stores.filter((store) => "$id" in store ? store.$id.toLowerCase().includes(payload.filter.toLowerCase()) : PINIA_ROOT_LABEL.toLowerCase().includes(payload.filter.toLowerCase())) : stores).map(formatStoreForInspectorTree);
        }
      });
      api.on.getInspectorState((payload) => {
        if (payload.app === app && payload.inspectorId === INSPECTOR_ID) {
          const inspectedStore = payload.nodeId === PINIA_ROOT_ID ? pinia : pinia._s.get(payload.nodeId);
          if (!inspectedStore) {
            return;
          }
          if (inspectedStore) {
            payload.state = formatStoreForInspectorState(inspectedStore);
          }
        }
      });
      api.on.editInspectorState((payload, ctx) => {
        if (payload.app === app && payload.inspectorId === INSPECTOR_ID) {
          const inspectedStore = payload.nodeId === PINIA_ROOT_ID ? pinia : pinia._s.get(payload.nodeId);
          if (!inspectedStore) {
            return toastMessage(`store "${payload.nodeId}" not found`, "error");
          }
          const { path } = payload;
          if (!isPinia(inspectedStore)) {
            if (path.length !== 1 || !inspectedStore._customProperties.has(path[0]) || path[0] in inspectedStore.$state) {
              path.unshift("$state");
            }
          } else {
            path.unshift("state");
          }
          isTimelineActive = false;
          payload.set(inspectedStore, path, payload.state.value);
          isTimelineActive = true;
        }
      });
      api.on.editComponentState((payload) => {
        if (payload.type.startsWith("🍍")) {
          const storeId = payload.type.replace(/^🍍\s*/, "");
          const store = pinia._s.get(storeId);
          if (!store) {
            return toastMessage(`store "${storeId}" not found`, "error");
          }
          const { path } = payload;
          if (path[0] !== "state") {
            return toastMessage(`Invalid path for store "${storeId}":
${path}
Only state can be modified.`);
          }
          path[0] = "$state";
          isTimelineActive = false;
          payload.set(store, path, payload.state.value);
          isTimelineActive = true;
        }
      });
    });
  }
  function addStoreToDevtools(app, store) {
    if (!componentStateTypes.includes(getStoreType(store.$id))) {
      componentStateTypes.push(getStoreType(store.$id));
    }
    setupDevtoolsPlugin({
      id: "dev.esm.pinia",
      label: "Pinia 🍍",
      logo: "https://pinia.vuejs.org/logo.svg",
      packageName: "pinia",
      homepage: "https://pinia.vuejs.org",
      componentStateTypes,
      app,
      settings: {
        logStoreChanges: {
          label: "Notify about new/deleted stores",
          type: "boolean",
          defaultValue: true
        }
        // useEmojis: {
        //   label: 'Use emojis in messages ⚡️',
        //   type: 'boolean',
        //   defaultValue: true,
        // },
      }
    }, (api) => {
      const now2 = typeof api.now === "function" ? api.now.bind(api) : Date.now;
      store.$onAction(({ after, onError, name, args }) => {
        const groupId = runningActionId++;
        api.addTimelineEvent({
          layerId: MUTATIONS_LAYER_ID,
          event: {
            time: now2(),
            title: "🛫 " + name,
            subtitle: "start",
            data: {
              store: formatDisplay(store.$id),
              action: formatDisplay(name),
              args
            },
            groupId
          }
        });
        after((result) => {
          activeAction = void 0;
          api.addTimelineEvent({
            layerId: MUTATIONS_LAYER_ID,
            event: {
              time: now2(),
              title: "🛬 " + name,
              subtitle: "end",
              data: {
                store: formatDisplay(store.$id),
                action: formatDisplay(name),
                args,
                result
              },
              groupId
            }
          });
        });
        onError((error2) => {
          activeAction = void 0;
          api.addTimelineEvent({
            layerId: MUTATIONS_LAYER_ID,
            event: {
              time: now2(),
              logType: "error",
              title: "💥 " + name,
              subtitle: "end",
              data: {
                store: formatDisplay(store.$id),
                action: formatDisplay(name),
                args,
                error: error2
              },
              groupId
            }
          });
        });
      }, true);
      store._customProperties.forEach((name) => {
        vue.watch(() => vue.unref(store[name]), (newValue, oldValue) => {
          api.notifyComponentUpdate();
          api.sendInspectorState(INSPECTOR_ID);
          if (isTimelineActive) {
            api.addTimelineEvent({
              layerId: MUTATIONS_LAYER_ID,
              event: {
                time: now2(),
                title: "Change",
                subtitle: name,
                data: {
                  newValue,
                  oldValue
                },
                groupId: activeAction
              }
            });
          }
        }, { deep: true });
      });
      store.$subscribe(({ events, type }, state) => {
        api.notifyComponentUpdate();
        api.sendInspectorState(INSPECTOR_ID);
        if (!isTimelineActive)
          return;
        const eventData = {
          time: now2(),
          title: formatMutationType(type),
          data: assign$1({ store: formatDisplay(store.$id) }, formatEventData(events)),
          groupId: activeAction
        };
        if (type === MutationType.patchFunction) {
          eventData.subtitle = "⤵️";
        } else if (type === MutationType.patchObject) {
          eventData.subtitle = "🧩";
        } else if (events && !Array.isArray(events)) {
          eventData.subtitle = events.type;
        }
        if (events) {
          eventData.data["rawEvent(s)"] = {
            _custom: {
              display: "DebuggerEvent",
              type: "object",
              tooltip: "raw DebuggerEvent[]",
              value: events
            }
          };
        }
        api.addTimelineEvent({
          layerId: MUTATIONS_LAYER_ID,
          event: eventData
        });
      }, { detached: true, flush: "sync" });
      const hotUpdate = store._hotUpdate;
      store._hotUpdate = vue.markRaw((newStore) => {
        hotUpdate(newStore);
        api.addTimelineEvent({
          layerId: MUTATIONS_LAYER_ID,
          event: {
            time: now2(),
            title: "🔥 " + store.$id,
            subtitle: "HMR update",
            data: {
              store: formatDisplay(store.$id),
              info: formatDisplay(`HMR update`)
            }
          }
        });
        api.notifyComponentUpdate();
        api.sendInspectorTree(INSPECTOR_ID);
        api.sendInspectorState(INSPECTOR_ID);
      });
      const { $dispose } = store;
      store.$dispose = () => {
        $dispose();
        api.notifyComponentUpdate();
        api.sendInspectorTree(INSPECTOR_ID);
        api.sendInspectorState(INSPECTOR_ID);
        api.getSettings().logStoreChanges && toastMessage(`Disposed "${store.$id}" store 🗑`);
      };
      api.notifyComponentUpdate();
      api.sendInspectorTree(INSPECTOR_ID);
      api.sendInspectorState(INSPECTOR_ID);
      api.getSettings().logStoreChanges && toastMessage(`"${store.$id}" store installed 🆕`);
    });
  }
  let runningActionId = 0;
  let activeAction;
  function patchActionForGrouping(store, actionNames, wrapWithProxy) {
    const actions = actionNames.reduce((storeActions, actionName) => {
      storeActions[actionName] = vue.toRaw(store)[actionName];
      return storeActions;
    }, {});
    for (const actionName in actions) {
      store[actionName] = function() {
        const _actionId = runningActionId;
        const trackedStore = wrapWithProxy ? new Proxy(store, {
          get(...args) {
            activeAction = _actionId;
            return Reflect.get(...args);
          },
          set(...args) {
            activeAction = _actionId;
            return Reflect.set(...args);
          }
        }) : store;
        activeAction = _actionId;
        const retValue = actions[actionName].apply(trackedStore, arguments);
        activeAction = void 0;
        return retValue;
      };
    }
  }
  function devtoolsPlugin({ app, store, options }) {
    if (store.$id.startsWith("__hot:")) {
      return;
    }
    store._isOptionsAPI = !!options.state;
    patchActionForGrouping(store, Object.keys(options.actions), store._isOptionsAPI);
    const originalHotUpdate = store._hotUpdate;
    vue.toRaw(store)._hotUpdate = function(newStore) {
      originalHotUpdate.apply(this, arguments);
      patchActionForGrouping(store, Object.keys(newStore._hmrPayload.actions), !!store._isOptionsAPI);
    };
    addStoreToDevtools(
      app,
      // FIXME: is there a way to allow the assignment from Store<Id, S, G, A> to StoreGeneric?
      store
    );
  }
  function createPinia() {
    const scope = vue.effectScope(true);
    const state = scope.run(() => vue.ref({}));
    let _p2 = [];
    let toBeInstalled = [];
    const pinia = vue.markRaw({
      install(app) {
        setActivePinia(pinia);
        {
          pinia._a = app;
          app.provide(piniaSymbol, pinia);
          app.config.globalProperties.$pinia = pinia;
          if (USE_DEVTOOLS) {
            registerPiniaDevtools(app, pinia);
          }
          toBeInstalled.forEach((plugin) => _p2.push(plugin));
          toBeInstalled = [];
        }
      },
      use(plugin) {
        if (!this._a && !isVue2) {
          toBeInstalled.push(plugin);
        } else {
          _p2.push(plugin);
        }
        return this;
      },
      _p: _p2,
      // it's actually undefined here
      // @ts-expect-error
      _a: null,
      _e: scope,
      _s: /* @__PURE__ */ new Map(),
      state
    });
    if (USE_DEVTOOLS && typeof Proxy !== "undefined") {
      pinia.use(devtoolsPlugin);
    }
    return pinia;
  }
  function patchObject(newState, oldState) {
    for (const key in oldState) {
      const subPatch = oldState[key];
      if (!(key in newState)) {
        continue;
      }
      const targetValue = newState[key];
      if (isPlainObject(targetValue) && isPlainObject(subPatch) && !vue.isRef(subPatch) && !vue.isReactive(subPatch)) {
        newState[key] = patchObject(targetValue, subPatch);
      } else {
        {
          newState[key] = subPatch;
        }
      }
    }
    return newState;
  }
  const noop = () => {
  };
  function addSubscription(subscriptions, callback, detached, onCleanup = noop) {
    subscriptions.push(callback);
    const removeSubscription = () => {
      const idx = subscriptions.indexOf(callback);
      if (idx > -1) {
        subscriptions.splice(idx, 1);
        onCleanup();
      }
    };
    if (!detached && vue.getCurrentScope()) {
      vue.onScopeDispose(removeSubscription);
    }
    return removeSubscription;
  }
  function triggerSubscriptions(subscriptions, ...args) {
    subscriptions.slice().forEach((callback) => {
      callback(...args);
    });
  }
  const fallbackRunWithContext = (fn2) => fn2();
  function mergeReactiveObjects(target, patchToApply) {
    if (target instanceof Map && patchToApply instanceof Map) {
      patchToApply.forEach((value, key) => target.set(key, value));
    }
    if (target instanceof Set && patchToApply instanceof Set) {
      patchToApply.forEach(target.add, target);
    }
    for (const key in patchToApply) {
      if (!patchToApply.hasOwnProperty(key))
        continue;
      const subPatch = patchToApply[key];
      const targetValue = target[key];
      if (isPlainObject(targetValue) && isPlainObject(subPatch) && target.hasOwnProperty(key) && !vue.isRef(subPatch) && !vue.isReactive(subPatch)) {
        target[key] = mergeReactiveObjects(targetValue, subPatch);
      } else {
        target[key] = subPatch;
      }
    }
    return target;
  }
  const skipHydrateSymbol = Symbol("pinia:skipHydration");
  function shouldHydrate(obj) {
    return !isPlainObject(obj) || !obj.hasOwnProperty(skipHydrateSymbol);
  }
  const { assign } = Object;
  function isComputed(o2) {
    return !!(vue.isRef(o2) && o2.effect);
  }
  function createOptionsStore(id, options, pinia, hot) {
    const { state, actions, getters } = options;
    const initialState = pinia.state.value[id];
    let store;
    function setup() {
      if (!initialState && !hot) {
        {
          pinia.state.value[id] = state ? state() : {};
        }
      }
      const localState = hot ? (
        // use ref() to unwrap refs inside state TODO: check if this is still necessary
        vue.toRefs(vue.ref(state ? state() : {}).value)
      ) : vue.toRefs(pinia.state.value[id]);
      return assign(localState, actions, Object.keys(getters || {}).reduce((computedGetters, name) => {
        if (name in localState) {
          console.warn(`[🍍]: A getter cannot have the same name as another state property. Rename one of them. Found with "${name}" in store "${id}".`);
        }
        computedGetters[name] = vue.markRaw(vue.computed(() => {
          setActivePinia(pinia);
          const store2 = pinia._s.get(id);
          return getters[name].call(store2, store2);
        }));
        return computedGetters;
      }, {}));
    }
    store = createSetupStore(id, setup, options, pinia, hot, true);
    return store;
  }
  function createSetupStore($id, setup, options = {}, pinia, hot, isOptionsStore) {
    let scope;
    const optionsForPlugin = assign({ actions: {} }, options);
    if (!pinia._e.active) {
      throw new Error("Pinia destroyed");
    }
    const $subscribeOptions = {
      deep: true
      // flush: 'post',
    };
    {
      $subscribeOptions.onTrigger = (event) => {
        if (isListening) {
          debuggerEvents = event;
        } else if (isListening == false && !store._hotUpdating) {
          if (Array.isArray(debuggerEvents)) {
            debuggerEvents.push(event);
          } else {
            console.error("🍍 debuggerEvents should be an array. This is most likely an internal Pinia bug.");
          }
        }
      };
    }
    let isListening;
    let isSyncListening;
    let subscriptions = [];
    let actionSubscriptions = [];
    let debuggerEvents;
    const initialState = pinia.state.value[$id];
    if (!isOptionsStore && !initialState && !hot) {
      {
        pinia.state.value[$id] = {};
      }
    }
    const hotState = vue.ref({});
    let activeListener;
    function $patch(partialStateOrMutator) {
      let subscriptionMutation;
      isListening = isSyncListening = false;
      {
        debuggerEvents = [];
      }
      if (typeof partialStateOrMutator === "function") {
        partialStateOrMutator(pinia.state.value[$id]);
        subscriptionMutation = {
          type: MutationType.patchFunction,
          storeId: $id,
          events: debuggerEvents
        };
      } else {
        mergeReactiveObjects(pinia.state.value[$id], partialStateOrMutator);
        subscriptionMutation = {
          type: MutationType.patchObject,
          payload: partialStateOrMutator,
          storeId: $id,
          events: debuggerEvents
        };
      }
      const myListenerId = activeListener = Symbol();
      vue.nextTick().then(() => {
        if (activeListener === myListenerId) {
          isListening = true;
        }
      });
      isSyncListening = true;
      triggerSubscriptions(subscriptions, subscriptionMutation, pinia.state.value[$id]);
    }
    const $reset = isOptionsStore ? function $reset2() {
      const { state } = options;
      const newState = state ? state() : {};
      this.$patch(($state) => {
        assign($state, newState);
      });
    } : (
      /* istanbul ignore next */
      () => {
        throw new Error(`🍍: Store "${$id}" is built using the setup syntax and does not implement $reset().`);
      }
    );
    function $dispose() {
      scope.stop();
      subscriptions = [];
      actionSubscriptions = [];
      pinia._s.delete($id);
    }
    function wrapAction(name, action) {
      return function() {
        setActivePinia(pinia);
        const args = Array.from(arguments);
        const afterCallbackList = [];
        const onErrorCallbackList = [];
        function after(callback) {
          afterCallbackList.push(callback);
        }
        function onError(callback) {
          onErrorCallbackList.push(callback);
        }
        triggerSubscriptions(actionSubscriptions, {
          args,
          name,
          store,
          after,
          onError
        });
        let ret;
        try {
          ret = action.apply(this && this.$id === $id ? this : store, args);
        } catch (error2) {
          triggerSubscriptions(onErrorCallbackList, error2);
          throw error2;
        }
        if (ret instanceof Promise) {
          return ret.then((value) => {
            triggerSubscriptions(afterCallbackList, value);
            return value;
          }).catch((error2) => {
            triggerSubscriptions(onErrorCallbackList, error2);
            return Promise.reject(error2);
          });
        }
        triggerSubscriptions(afterCallbackList, ret);
        return ret;
      };
    }
    const _hmrPayload = /* @__PURE__ */ vue.markRaw({
      actions: {},
      getters: {},
      state: [],
      hotState
    });
    const partialStore = {
      _p: pinia,
      // _s: scope,
      $id,
      $onAction: addSubscription.bind(null, actionSubscriptions),
      $patch,
      $reset,
      $subscribe(callback, options2 = {}) {
        const removeSubscription = addSubscription(subscriptions, callback, options2.detached, () => stopWatcher());
        const stopWatcher = scope.run(() => vue.watch(() => pinia.state.value[$id], (state) => {
          if (options2.flush === "sync" ? isSyncListening : isListening) {
            callback({
              storeId: $id,
              type: MutationType.direct,
              events: debuggerEvents
            }, state);
          }
        }, assign({}, $subscribeOptions, options2)));
        return removeSubscription;
      },
      $dispose
    };
    const store = vue.reactive(assign(
      {
        _hmrPayload,
        _customProperties: vue.markRaw(/* @__PURE__ */ new Set())
        // devtools custom properties
      },
      partialStore
      // must be added later
      // setupStore
    ));
    pinia._s.set($id, store);
    const runWithContext = pinia._a && pinia._a.runWithContext || fallbackRunWithContext;
    const setupStore = runWithContext(() => pinia._e.run(() => (scope = vue.effectScope()).run(setup)));
    for (const key in setupStore) {
      const prop = setupStore[key];
      if (vue.isRef(prop) && !isComputed(prop) || vue.isReactive(prop)) {
        if (hot) {
          set$1(hotState.value, key, vue.toRef(setupStore, key));
        } else if (!isOptionsStore) {
          if (initialState && shouldHydrate(prop)) {
            if (vue.isRef(prop)) {
              prop.value = initialState[key];
            } else {
              mergeReactiveObjects(prop, initialState[key]);
            }
          }
          {
            pinia.state.value[$id][key] = prop;
          }
        }
        {
          _hmrPayload.state.push(key);
        }
      } else if (typeof prop === "function") {
        const actionValue = hot ? prop : wrapAction(key, prop);
        {
          setupStore[key] = actionValue;
        }
        {
          _hmrPayload.actions[key] = prop;
        }
        optionsForPlugin.actions[key] = prop;
      } else {
        if (isComputed(prop)) {
          _hmrPayload.getters[key] = isOptionsStore ? (
            // @ts-expect-error
            options.getters[key]
          ) : prop;
          if (IS_CLIENT) {
            const getters = setupStore._getters || // @ts-expect-error: same
            (setupStore._getters = vue.markRaw([]));
            getters.push(key);
          }
        }
      }
    }
    {
      assign(store, setupStore);
      assign(vue.toRaw(store), setupStore);
    }
    Object.defineProperty(store, "$state", {
      get: () => hot ? hotState.value : pinia.state.value[$id],
      set: (state) => {
        if (hot) {
          throw new Error("cannot set hotState");
        }
        $patch(($state) => {
          assign($state, state);
        });
      }
    });
    {
      store._hotUpdate = vue.markRaw((newStore) => {
        store._hotUpdating = true;
        newStore._hmrPayload.state.forEach((stateKey) => {
          if (stateKey in store.$state) {
            const newStateTarget = newStore.$state[stateKey];
            const oldStateSource = store.$state[stateKey];
            if (typeof newStateTarget === "object" && isPlainObject(newStateTarget) && isPlainObject(oldStateSource)) {
              patchObject(newStateTarget, oldStateSource);
            } else {
              newStore.$state[stateKey] = oldStateSource;
            }
          }
          set$1(store, stateKey, vue.toRef(newStore.$state, stateKey));
        });
        Object.keys(store.$state).forEach((stateKey) => {
          if (!(stateKey in newStore.$state)) {
            del(store, stateKey);
          }
        });
        isListening = false;
        isSyncListening = false;
        pinia.state.value[$id] = vue.toRef(newStore._hmrPayload, "hotState");
        isSyncListening = true;
        vue.nextTick().then(() => {
          isListening = true;
        });
        for (const actionName in newStore._hmrPayload.actions) {
          const action = newStore[actionName];
          set$1(store, actionName, wrapAction(actionName, action));
        }
        for (const getterName in newStore._hmrPayload.getters) {
          const getter = newStore._hmrPayload.getters[getterName];
          const getterValue = isOptionsStore ? (
            // special handling of options api
            vue.computed(() => {
              setActivePinia(pinia);
              return getter.call(store, store);
            })
          ) : getter;
          set$1(store, getterName, getterValue);
        }
        Object.keys(store._hmrPayload.getters).forEach((key) => {
          if (!(key in newStore._hmrPayload.getters)) {
            del(store, key);
          }
        });
        Object.keys(store._hmrPayload.actions).forEach((key) => {
          if (!(key in newStore._hmrPayload.actions)) {
            del(store, key);
          }
        });
        store._hmrPayload = newStore._hmrPayload;
        store._getters = newStore._getters;
        store._hotUpdating = false;
      });
    }
    if (USE_DEVTOOLS) {
      const nonEnumerable = {
        writable: true,
        configurable: true,
        // avoid warning on devtools trying to display this property
        enumerable: false
      };
      ["_p", "_hmrPayload", "_getters", "_customProperties"].forEach((p2) => {
        Object.defineProperty(store, p2, assign({ value: store[p2] }, nonEnumerable));
      });
    }
    pinia._p.forEach((extender) => {
      if (USE_DEVTOOLS) {
        const extensions = scope.run(() => extender({
          store,
          app: pinia._a,
          pinia,
          options: optionsForPlugin
        }));
        Object.keys(extensions || {}).forEach((key) => store._customProperties.add(key));
        assign(store, extensions);
      } else {
        assign(store, scope.run(() => extender({
          store,
          app: pinia._a,
          pinia,
          options: optionsForPlugin
        })));
      }
    });
    if (store.$state && typeof store.$state === "object" && typeof store.$state.constructor === "function" && !store.$state.constructor.toString().includes("[native code]")) {
      console.warn(`[🍍]: The "state" must be a plain object. It cannot be
	state: () => new MyClass()
Found in store "${store.$id}".`);
    }
    if (initialState && isOptionsStore && options.hydrate) {
      options.hydrate(store.$state, initialState);
    }
    isListening = true;
    isSyncListening = true;
    return store;
  }
  function defineStore(idOrOptions, setup, setupOptions) {
    let id;
    let options;
    const isSetupStore = typeof setup === "function";
    if (typeof idOrOptions === "string") {
      id = idOrOptions;
      options = isSetupStore ? setupOptions : setup;
    } else {
      options = idOrOptions;
      id = idOrOptions.id;
      if (typeof id !== "string") {
        throw new Error(`[🍍]: "defineStore()" must be passed a store id as its first argument.`);
      }
    }
    function useStore2(pinia, hot) {
      const hasContext = vue.hasInjectionContext();
      pinia = // in test mode, ignore the argument provided as we can always retrieve a
      // pinia instance with getActivePinia()
      pinia || (hasContext ? vue.inject(piniaSymbol, null) : null);
      if (pinia)
        setActivePinia(pinia);
      if (!activePinia) {
        throw new Error(`[🍍]: "getActivePinia()" was called but there was no active Pinia. Are you trying to use a store before calling "app.use(pinia)"?
See https://pinia.vuejs.org/core-concepts/outside-component-usage.html for help.
This will fail in production.`);
      }
      pinia = activePinia;
      if (!pinia._s.has(id)) {
        if (isSetupStore) {
          createSetupStore(id, setup, options, pinia);
        } else {
          createOptionsStore(id, options, pinia);
        }
        {
          useStore2._pinia = pinia;
        }
      }
      const store = pinia._s.get(id);
      if (hot) {
        const hotId = "__hot:" + id;
        const newStore = isSetupStore ? createSetupStore(hotId, setup, options, pinia, true) : createOptionsStore(hotId, assign({}, options), pinia, true);
        hot._hotUpdate(newStore);
        delete pinia.state.value[hotId];
        pinia._s.delete(hotId);
      }
      if (IS_CLIENT) {
        const currentInstance = vue.getCurrentInstance();
        if (currentInstance && currentInstance.proxy && // avoid adding stores that are just built for hot module replacement
        !hot) {
          const vm = currentInstance.proxy;
          const cache = "_pStores" in vm ? vm._pStores : vm._pStores = {};
          cache[id] = store;
        }
      }
      return store;
    }
    useStore2.$id = id;
    return useStore2;
  }
  const httpRequest = (method) => async (url2, data) => {
    return new Promise((resolve, reject) => {
      uni.request({
        url: `http://admin.zexishuhua.com/api${url2}`,
        // API基础URL需加在这里
        //   url: `http://www.zexiart.com/api${url}`, // API基础URL需加在这里
        // url: `http://zexiart.com/api${url}`, // API基础URL需加在这里
        method: method.toUpperCase(),
        sslVerify: false,
        // 关闭SSL验证
        data,
        header: {
          token: uni.getStorageSync("token") || ""
          // 添加token到请求头
        },
        success: (response) => {
          if (response.statusCode === 200) {
            resolve(response.data);
          } else {
            reject(new Error(`API错误: ${response.statusCode}`));
          }
        },
        fail: (error2) => {
          formatAppLog("error", "at utils/request.js:22", `请求 ${method.toUpperCase()} ${url2} 时出错:`, error2);
          reject(error2);
        }
      });
    });
  };
  const get$1 = httpRequest("get");
  const post = httpRequest("post");
  const loginUser = async (adminlist) => {
    if (!adminlist) {
      throw new Error("adminlist不能为空");
    }
    return await post("/user/login", adminlist);
  };
  const fetchClassData = (params) => get$1("/user/classly", params);
  const fetchCampusData = () => get$1("/user/school");
  const fetchVerificationCode = (data) => post("/sms/send", data);
  const fetchFindPassword = (data) => post("/user/resetpwd", data);
  const submitRegisterInfo = (data) => post("/user/register", data);
  const fetchActivityCourseList = (params) => get$1("/activity/list", params);
  const fetchBannerList = (params) => get$1("/adv/list?position_mark=index", params);
  const fetchNewsList = (params) => get$1("/news/list", params);
  const fetchMatchDetail = (id) => get$1("/match/detail?match_id=" + id);
  const submitComplaint = (data) => post("/user/feedback", data);
  const uploadImage = (data) => post("/common/upload", data);
  const fetchNoticeList = (params) => get$1("/user/notice", params);
  const fetchUserInfo = () => get$1("/user/personal");
  const fetchMyCourseList = (params) => get$1("/user/lessons", params);
  const fetchMyRecentCourse = (params) => get$1("/user/lessonrecent", params);
  const fetchMyStyle = (params) => post("/index/index", params);
  const fetchMyTeacher = (params) => get$1("/user/myteachers", params);
  const fetchMyHistoryHomework = (params) => get$1("/user/homeworkpast", params);
  const fetchMyTemporaryHomework = (params) => get$1("/user/homeworknow", params);
  const fetchHomeworkAudio = (id) => get$1("/user/dohomework?homework_id=1");
  const signUpActivity = (data) => post("/activity/signup", data);
  const fetchAboutUs = () => get$1("/user/aboutus");
  const fetchContactUs = () => get$1("/user/contact");
  const updatePhone = (data) => post("/user/changemobile", data);
  const goStudy = (data) => get$1("/user/gostudy", data);
  const fetchMyAIWork = (params) => get$1("/user/homeworkai", params);
  const message$2 = {
    "tip": {
      "群成员": "group members",
      "加入群组": "joined the group",
      "退出群组": "left the group",
      "被": "by",
      "踢出群组": "was kicked out of the group",
      "成为管理员": "was set as an admin",
      "被撤销管理员": "was revoked",
      "被禁言": " was muted",
      "被取消禁言": "cancel the prohibition",
      "群提示消息": "group prompt message",
      "管理员": "The admin",
      "开启全员禁言": "enabled Mute All",
      "取消全员禁言": "disabled Mute All",
      "成为新的群主": "became the new group owner",
      "修改群名为": "changed the group name to",
      "发布新公告": "posted a new notice",
      "把群公告修改为": "changed the group notice to",
      "申请加入群组": "requested to join the group",
      "成功加入群组": "Successfully joined the group",
      "被拒绝": "The request to join the group was refused",
      "你被管理员": "You",
      "群": "group",
      "解散": "disbanded",
      "创建群": "created the group",
      "邀请你加群": "invite you to join the group",
      "你退出群组": "You left the group",
      "你被": "You were",
      "设置为群": "set as group",
      "的管理员": "as an admin",
      "撤销群": "revoked",
      "的管理员身份": "admin role of the group",
      "同意加群": "agreed to join the group",
      "拒接加群": "refused to join the group",
      "自定义群系统通知": "Custom group system notification"
    },
    "custom": {
      "自定义消息": "Custom message",
      "通话时长": "Call duration",
      "通话结束": "Call End",
      "切换语音通话": "Switch voice call",
      "切换视频通话": "Switch video call",
      "发起通话": "Start a call",
      "取消通话": "Cancel",
      "已接听": "Answered",
      "拒绝通话": "Decline",
      "无应答": "No answer",
      "已取消": "Canceled",
      "对方已取消": "Call canceled by caller",
      "已拒绝": "Declined",
      "对方已拒绝": "Call declined by user",
      "对方忙线中": "Line busy",
      "忙线未接听": "	Line busy. Call not received.",
      "对方无应答": "Call wasn't answered",
      "超时无应答": "Call not answered",
      "对本次服务评价": "Rate this service",
      "查看详情>>": "View details >>"
    }
  };
  const useStore = defineStore("main", {
    unistorage: true,
    // 是否持久化
    state: () => ({
      // 保留需要的状态
      token: null,
      privacyPolicy: "",
      userAgreement: "",
      listdataIndex: [],
      // 新增状态用于存储列表数据
      images: [],
      // 新增状态用于存储图片数据
      selectedSwiperIndex: null,
      campusData: [],
      classData: [],
      userinfo: null,
      resultDivData: null,
      messageList: [],
      infoList: [],
      evaluationDesc: null,
      onlineOngoingActivities: null,
      offlineOngoingActivities: null
    }),
    actions: {
      // 登录
      // async login(adminlist) {
      //   try {
      //     const response = await api.loginUser(adminlist) // 调用 API 方法进行登录
      //     alert(11111)
      //     __f__('log','at store/index.js:31','登录请求成功:', response)
      //     if (response.code === 1) {
      //       const userinfo = response.data.userinfo // 获取用户信息
      //       const { token } = userinfo // 解构获取 token 和 userinfo
      //       this.token = token // 存储登录成功后的 token
      //       this.userinfo = userinfo // 存储用户信息
      //       uni.setStorageSync('token', token) // 将 token 存储在 localStorage
      //       // 提示登录成功
      //       uni.showToast({
      //         title: response.msg,
      //         icon: 'success', // 图标类型，可选 'success', 'loading', 'none'
      //         duration: 2000, // 提示显示时间，默认为1500ms
      //         complete: () => {
      //           // 提示完成后跳转页面
      //           uni.switchTab({ url: '/pages/pagesall/home' })
      //         },
      //       })
      //       return userinfo // 返回数据
      //     }
      //     throw new Error(response.msg || '登录失败') // 如果登录失败，抛出错误
      //   } catch (error) {
      //     __f__('error','at store/index.js:52','登录请求错误:', error)
      //     throw error // 抛出错误供调用方处理
      //   }
      // },
      // // 获取隐私政策
      // async fetchPrivacyPolicy() {
      //   return this.fetchPolicy(api.fetchPrivacyPolicy, '隐私政策')
      // },
      // // 获取用户协议
      // async fetchUserAgreement() {
      //   return this.fetchPolicy(api.fetchUserAgreement, '用户协议')
      // },
      // 通用获取政策的方法
      // async fetchPolicy(fetchFunction, policyType) {
      //   try {
      //     const response = await fetchFunction()
      //     if (response.status === 200) {
      //       this[policyType === '隐私政策' ? 'privacyPolicy' : 'userAgreement'] =
      //         response.data // 设置相应的政策
      //     } else {
      //       __f__('error','at store/index.js:75',`获取${policyType}失败: ${response.status}`)
      //     }
      //   } catch (error) {
      //     __f__('error','at store/index.js:78',`获取${policyType}出现错误: ${error.message}`)
      //   }
      // },
      // 新增方法以设置列表数据
      //存储token
      setToken(token) {
        this.token = token;
      },
      //存储userinfo
      setUserinfo(userinfo) {
        this.userinfo = userinfo;
      },
      setListdataIndex(data) {
        this.listdataIndex = data;
      },
      setInfoList(data) {
        this.infoList = data;
      },
      setMessageList(data) {
        this.messageList = data;
      },
      // 新增方法以设置图片数据
      setImages(data) {
        this.images = data;
      },
      setSelectedSwiperIndex(index2) {
        this.selectedSwiperIndex = index2;
      },
      setCampusData(data) {
        this.campusData = data;
      },
      setClassData(data) {
        this.classData = data;
      },
      setResultDiv(div) {
        this.resultDivData = div;
        formatAppLog("log", "at store/index.js:117", "resultDivData:", this.resultDivData);
      },
      setEvaluationDesc(data) {
        this.evaluationDesc = data;
      },
      setOnlineOngoingActivities(data) {
        this.onlineOngoingActivities = data;
      },
      setOfflineOngoingActivities(data) {
        this.offlineOngoingActivities = data;
      }
    }
  });
  var e$2 = "undefined" != typeof global ? global : "undefined" != typeof self ? self : "undefined" != typeof window ? window : {}, t$4 = [], r$3 = [], n$3 = "undefined" != typeof Uint8Array ? Uint8Array : Array, i$3 = false;
  function o$3() {
    i$3 = true;
    for (var e2 = "ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/", n2 = 0, o2 = e2.length; n2 < o2; ++n2)
      t$4[n2] = e2[n2], r$3[e2.charCodeAt(n2)] = n2;
    r$3["-".charCodeAt(0)] = 62, r$3["_".charCodeAt(0)] = 63;
  }
  function a$3(e2, r2, n2) {
    for (var i2, o2, a2 = [], s2 = r2; s2 < n2; s2 += 3)
      i2 = (e2[s2] << 16) + (e2[s2 + 1] << 8) + e2[s2 + 2], a2.push(t$4[(o2 = i2) >> 18 & 63] + t$4[o2 >> 12 & 63] + t$4[o2 >> 6 & 63] + t$4[63 & o2]);
    return a2.join("");
  }
  function s$2(e2) {
    var r2;
    i$3 || o$3();
    for (var n2 = e2.length, s2 = n2 % 3, h2 = "", l2 = [], f2 = 0, c2 = n2 - s2; f2 < c2; f2 += 16383)
      l2.push(a$3(e2, f2, f2 + 16383 > c2 ? c2 : f2 + 16383));
    return 1 === s2 ? (r2 = e2[n2 - 1], h2 += t$4[r2 >> 2], h2 += t$4[r2 << 4 & 63], h2 += "==") : 2 === s2 && (r2 = (e2[n2 - 2] << 8) + e2[n2 - 1], h2 += t$4[r2 >> 10], h2 += t$4[r2 >> 4 & 63], h2 += t$4[r2 << 2 & 63], h2 += "="), l2.push(h2), l2.join("");
  }
  function h$3(e2, t2, r2, n2, i2) {
    var o2, a2, s2 = 8 * i2 - n2 - 1, h2 = (1 << s2) - 1, l2 = h2 >> 1, f2 = -7, c2 = r2 ? i2 - 1 : 0, u2 = r2 ? -1 : 1, d2 = e2[t2 + c2];
    for (c2 += u2, o2 = d2 & (1 << -f2) - 1, d2 >>= -f2, f2 += s2; f2 > 0; o2 = 256 * o2 + e2[t2 + c2], c2 += u2, f2 -= 8)
      ;
    for (a2 = o2 & (1 << -f2) - 1, o2 >>= -f2, f2 += n2; f2 > 0; a2 = 256 * a2 + e2[t2 + c2], c2 += u2, f2 -= 8)
      ;
    if (0 === o2)
      o2 = 1 - l2;
    else {
      if (o2 === h2)
        return a2 ? NaN : 1 / 0 * (d2 ? -1 : 1);
      a2 += Math.pow(2, n2), o2 -= l2;
    }
    return (d2 ? -1 : 1) * a2 * Math.pow(2, o2 - n2);
  }
  function l$3(e2, t2, r2, n2, i2, o2) {
    var a2, s2, h2, l2 = 8 * o2 - i2 - 1, f2 = (1 << l2) - 1, c2 = f2 >> 1, u2 = 23 === i2 ? Math.pow(2, -24) - Math.pow(2, -77) : 0, d2 = n2 ? 0 : o2 - 1, p2 = n2 ? 1 : -1, _2 = t2 < 0 || 0 === t2 && 1 / t2 < 0 ? 1 : 0;
    for (t2 = Math.abs(t2), isNaN(t2) || t2 === 1 / 0 ? (s2 = isNaN(t2) ? 1 : 0, a2 = f2) : (a2 = Math.floor(Math.log(t2) / Math.LN2), t2 * (h2 = Math.pow(2, -a2)) < 1 && (a2--, h2 *= 2), (t2 += a2 + c2 >= 1 ? u2 / h2 : u2 * Math.pow(2, 1 - c2)) * h2 >= 2 && (a2++, h2 /= 2), a2 + c2 >= f2 ? (s2 = 0, a2 = f2) : a2 + c2 >= 1 ? (s2 = (t2 * h2 - 1) * Math.pow(2, i2), a2 += c2) : (s2 = t2 * Math.pow(2, c2 - 1) * Math.pow(2, i2), a2 = 0)); i2 >= 8; e2[r2 + d2] = 255 & s2, d2 += p2, s2 /= 256, i2 -= 8)
      ;
    for (a2 = a2 << i2 | s2, l2 += i2; l2 > 0; e2[r2 + d2] = 255 & a2, d2 += p2, a2 /= 256, l2 -= 8)
      ;
    e2[r2 + d2 - p2] |= 128 * _2;
  }
  var f$2 = {}.toString, c$3 = Array.isArray || function(e2) {
    return "[object Array]" == f$2.call(e2);
  };
  function u$3() {
    return p$2.TYPED_ARRAY_SUPPORT ? 2147483647 : 1073741823;
  }
  function d$2(e2, t2) {
    if (u$3() < t2)
      throw new RangeError("Invalid typed array length");
    return p$2.TYPED_ARRAY_SUPPORT ? (e2 = new Uint8Array(t2)).__proto__ = p$2.prototype : (null === e2 && (e2 = new p$2(t2)), e2.length = t2), e2;
  }
  function p$2(e2, t2, r2) {
    if (!(p$2.TYPED_ARRAY_SUPPORT || this instanceof p$2))
      return new p$2(e2, t2, r2);
    if ("number" == typeof e2) {
      if ("string" == typeof t2)
        throw new Error("If encoding is specified then the first argument must be a string");
      return v$3(this, e2);
    }
    return _$2(this, e2, t2, r2);
  }
  function _$2(e2, t2, r2, n2) {
    if ("number" == typeof t2)
      throw new TypeError('"value" argument must not be a number');
    return "undefined" != typeof ArrayBuffer && t2 instanceof ArrayBuffer ? function(e3, t3, r3, n3) {
      if (t3.byteLength, r3 < 0 || t3.byteLength < r3)
        throw new RangeError("'offset' is out of bounds");
      if (t3.byteLength < r3 + (n3 || 0))
        throw new RangeError("'length' is out of bounds");
      t3 = void 0 === r3 && void 0 === n3 ? new Uint8Array(t3) : void 0 === n3 ? new Uint8Array(t3, r3) : new Uint8Array(t3, r3, n3);
      p$2.TYPED_ARRAY_SUPPORT ? (e3 = t3).__proto__ = p$2.prototype : e3 = w$2(e3, t3);
      return e3;
    }(e2, t2, r2, n2) : "string" == typeof t2 ? function(e3, t3, r3) {
      "string" == typeof r3 && "" !== r3 || (r3 = "utf8");
      if (!p$2.isEncoding(r3))
        throw new TypeError('"encoding" must be a valid string encoding');
      var n3 = 0 | m$2(t3, r3), i2 = (e3 = d$2(e3, n3)).write(t3, r3);
      i2 !== n3 && (e3 = e3.slice(0, i2));
      return e3;
    }(e2, t2, r2) : function(e3, t3) {
      if (y$1(t3)) {
        var r3 = 0 | b$2(t3.length);
        return 0 === (e3 = d$2(e3, r3)).length ? e3 : (t3.copy(e3, 0, 0, r3), e3);
      }
      if (t3) {
        if ("undefined" != typeof ArrayBuffer && t3.buffer instanceof ArrayBuffer || "length" in t3)
          return "number" != typeof t3.length || (n3 = t3.length) != n3 ? d$2(e3, 0) : w$2(e3, t3);
        if ("Buffer" === t3.type && c$3(t3.data))
          return w$2(e3, t3.data);
      }
      var n3;
      throw new TypeError("First argument must be a string, Buffer, ArrayBuffer, Array, or array-like object.");
    }(e2, t2);
  }
  function g$3(e2) {
    if ("number" != typeof e2)
      throw new TypeError('"size" argument must be a number');
    if (e2 < 0)
      throw new RangeError('"size" argument must not be negative');
  }
  function v$3(e2, t2) {
    if (g$3(t2), e2 = d$2(e2, t2 < 0 ? 0 : 0 | b$2(t2)), !p$2.TYPED_ARRAY_SUPPORT)
      for (var r2 = 0; r2 < t2; ++r2)
        e2[r2] = 0;
    return e2;
  }
  function w$2(e2, t2) {
    var r2 = t2.length < 0 ? 0 : 0 | b$2(t2.length);
    e2 = d$2(e2, r2);
    for (var n2 = 0; n2 < r2; n2 += 1)
      e2[n2] = 255 & t2[n2];
    return e2;
  }
  function b$2(e2) {
    if (e2 >= u$3())
      throw new RangeError("Attempt to allocate Buffer larger than maximum size: 0x" + u$3().toString(16) + " bytes");
    return 0 | e2;
  }
  function y$1(e2) {
    return !(null == e2 || !e2._isBuffer);
  }
  function m$2(e2, t2) {
    if (y$1(e2))
      return e2.length;
    if ("undefined" != typeof ArrayBuffer && "function" == typeof ArrayBuffer.isView && (ArrayBuffer.isView(e2) || e2 instanceof ArrayBuffer))
      return e2.byteLength;
    "string" != typeof e2 && (e2 = "" + e2);
    var r2 = e2.length;
    if (0 === r2)
      return 0;
    for (var n2 = false; ; )
      switch (t2) {
        case "ascii":
        case "latin1":
        case "binary":
          return r2;
        case "utf8":
        case "utf-8":
        case void 0:
          return q$1(e2).length;
        case "ucs2":
        case "ucs-2":
        case "utf16le":
        case "utf-16le":
          return 2 * r2;
        case "hex":
          return r2 >>> 1;
        case "base64":
          return V$1(e2).length;
        default:
          if (n2)
            return q$1(e2).length;
          t2 = ("" + t2).toLowerCase(), n2 = true;
      }
  }
  function k$1(e2, t2, r2) {
    var n2 = false;
    if ((void 0 === t2 || t2 < 0) && (t2 = 0), t2 > this.length)
      return "";
    if ((void 0 === r2 || r2 > this.length) && (r2 = this.length), r2 <= 0)
      return "";
    if ((r2 >>>= 0) <= (t2 >>>= 0))
      return "";
    for (e2 || (e2 = "utf8"); ; )
      switch (e2) {
        case "hex":
          return O$1(this, t2, r2);
        case "utf8":
        case "utf-8":
          return C$3(this, t2, r2);
        case "ascii":
          return I$3(this, t2, r2);
        case "latin1":
        case "binary":
          return P$1(this, t2, r2);
        case "base64":
          return M$2(this, t2, r2);
        case "ucs2":
        case "ucs-2":
        case "utf16le":
        case "utf-16le":
          return U$2(this, t2, r2);
        default:
          if (n2)
            throw new TypeError("Unknown encoding: " + e2);
          e2 = (e2 + "").toLowerCase(), n2 = true;
      }
  }
  function E$3(e2, t2, r2) {
    var n2 = e2[t2];
    e2[t2] = e2[r2], e2[r2] = n2;
  }
  function S$2(e2, t2, r2, n2, i2) {
    if (0 === e2.length)
      return -1;
    if ("string" == typeof r2 ? (n2 = r2, r2 = 0) : r2 > 2147483647 ? r2 = 2147483647 : r2 < -2147483648 && (r2 = -2147483648), r2 = +r2, isNaN(r2) && (r2 = i2 ? 0 : e2.length - 1), r2 < 0 && (r2 = e2.length + r2), r2 >= e2.length) {
      if (i2)
        return -1;
      r2 = e2.length - 1;
    } else if (r2 < 0) {
      if (!i2)
        return -1;
      r2 = 0;
    }
    if ("string" == typeof t2 && (t2 = p$2.from(t2, n2)), y$1(t2))
      return 0 === t2.length ? -1 : x$1(e2, t2, r2, n2, i2);
    if ("number" == typeof t2)
      return t2 &= 255, p$2.TYPED_ARRAY_SUPPORT && "function" == typeof Uint8Array.prototype.indexOf ? i2 ? Uint8Array.prototype.indexOf.call(e2, t2, r2) : Uint8Array.prototype.lastIndexOf.call(e2, t2, r2) : x$1(e2, [t2], r2, n2, i2);
    throw new TypeError("val must be string, number or Buffer");
  }
  function x$1(e2, t2, r2, n2, i2) {
    var o2, a2 = 1, s2 = e2.length, h2 = t2.length;
    if (void 0 !== n2 && ("ucs2" === (n2 = String(n2).toLowerCase()) || "ucs-2" === n2 || "utf16le" === n2 || "utf-16le" === n2)) {
      if (e2.length < 2 || t2.length < 2)
        return -1;
      a2 = 2, s2 /= 2, h2 /= 2, r2 /= 2;
    }
    function l2(e3, t3) {
      return 1 === a2 ? e3[t3] : e3.readUInt16BE(t3 * a2);
    }
    if (i2) {
      var f2 = -1;
      for (o2 = r2; o2 < s2; o2++)
        if (l2(e2, o2) === l2(t2, -1 === f2 ? 0 : o2 - f2)) {
          if (-1 === f2 && (f2 = o2), o2 - f2 + 1 === h2)
            return f2 * a2;
        } else
          -1 !== f2 && (o2 -= o2 - f2), f2 = -1;
    } else
      for (r2 + h2 > s2 && (r2 = s2 - h2), o2 = r2; o2 >= 0; o2--) {
        for (var c2 = true, u2 = 0; u2 < h2; u2++)
          if (l2(e2, o2 + u2) !== l2(t2, u2)) {
            c2 = false;
            break;
          }
        if (c2)
          return o2;
      }
    return -1;
  }
  function R$3(e2, t2, r2, n2) {
    r2 = Number(r2) || 0;
    var i2 = e2.length - r2;
    n2 ? (n2 = Number(n2)) > i2 && (n2 = i2) : n2 = i2;
    var o2 = t2.length;
    if (o2 % 2 != 0)
      throw new TypeError("Invalid hex string");
    n2 > o2 / 2 && (n2 = o2 / 2);
    for (var a2 = 0; a2 < n2; ++a2) {
      var s2 = parseInt(t2.substr(2 * a2, 2), 16);
      if (isNaN(s2))
        return a2;
      e2[r2 + a2] = s2;
    }
    return a2;
  }
  function A$2(e2, t2, r2, n2) {
    return G$1(q$1(t2, e2.length - r2), e2, r2, n2);
  }
  function B$1(e2, t2, r2, n2) {
    return G$1(function(e3) {
      for (var t3 = [], r3 = 0; r3 < e3.length; ++r3)
        t3.push(255 & e3.charCodeAt(r3));
      return t3;
    }(t2), e2, r2, n2);
  }
  function z$1(e2, t2, r2, n2) {
    return B$1(e2, t2, r2, n2);
  }
  function L$1(e2, t2, r2, n2) {
    return G$1(V$1(t2), e2, r2, n2);
  }
  function T$3(e2, t2, r2, n2) {
    return G$1(function(e3, t3) {
      for (var r3, n3, i2, o2 = [], a2 = 0; a2 < e3.length && !((t3 -= 2) < 0); ++a2)
        r3 = e3.charCodeAt(a2), n3 = r3 >> 8, i2 = r3 % 256, o2.push(i2), o2.push(n3);
      return o2;
    }(t2, e2.length - r2), e2, r2, n2);
  }
  function M$2(e2, t2, r2) {
    return 0 === t2 && r2 === e2.length ? s$2(e2) : s$2(e2.slice(t2, r2));
  }
  function C$3(e2, t2, r2) {
    r2 = Math.min(e2.length, r2);
    for (var n2 = [], i2 = t2; i2 < r2; ) {
      var o2, a2, s2, h2, l2 = e2[i2], f2 = null, c2 = l2 > 239 ? 4 : l2 > 223 ? 3 : l2 > 191 ? 2 : 1;
      if (i2 + c2 <= r2)
        switch (c2) {
          case 1:
            l2 < 128 && (f2 = l2);
            break;
          case 2:
            128 == (192 & (o2 = e2[i2 + 1])) && (h2 = (31 & l2) << 6 | 63 & o2) > 127 && (f2 = h2);
            break;
          case 3:
            o2 = e2[i2 + 1], a2 = e2[i2 + 2], 128 == (192 & o2) && 128 == (192 & a2) && (h2 = (15 & l2) << 12 | (63 & o2) << 6 | 63 & a2) > 2047 && (h2 < 55296 || h2 > 57343) && (f2 = h2);
            break;
          case 4:
            o2 = e2[i2 + 1], a2 = e2[i2 + 2], s2 = e2[i2 + 3], 128 == (192 & o2) && 128 == (192 & a2) && 128 == (192 & s2) && (h2 = (15 & l2) << 18 | (63 & o2) << 12 | (63 & a2) << 6 | 63 & s2) > 65535 && h2 < 1114112 && (f2 = h2);
        }
      null === f2 ? (f2 = 65533, c2 = 1) : f2 > 65535 && (f2 -= 65536, n2.push(f2 >>> 10 & 1023 | 55296), f2 = 56320 | 1023 & f2), n2.push(f2), i2 += c2;
    }
    return function(e3) {
      var t3 = e3.length;
      if (t3 <= D$1)
        return String.fromCharCode.apply(String, e3);
      var r3 = "", n3 = 0;
      for (; n3 < t3; )
        r3 += String.fromCharCode.apply(String, e3.slice(n3, n3 += D$1));
      return r3;
    }(n2);
  }
  p$2.TYPED_ARRAY_SUPPORT = void 0 === e$2.TYPED_ARRAY_SUPPORT || e$2.TYPED_ARRAY_SUPPORT, p$2.poolSize = 8192, p$2._augment = function(e2) {
    return e2.__proto__ = p$2.prototype, e2;
  }, p$2.from = function(e2, t2, r2) {
    return _$2(null, e2, t2, r2);
  }, p$2.TYPED_ARRAY_SUPPORT && (p$2.prototype.__proto__ = Uint8Array.prototype, p$2.__proto__ = Uint8Array), p$2.alloc = function(e2, t2, r2) {
    return function(e3, t3, r3, n2) {
      return g$3(t3), t3 <= 0 ? d$2(e3, t3) : void 0 !== r3 ? "string" == typeof n2 ? d$2(e3, t3).fill(r3, n2) : d$2(e3, t3).fill(r3) : d$2(e3, t3);
    }(null, e2, t2, r2);
  }, p$2.allocUnsafe = function(e2) {
    return v$3(null, e2);
  }, p$2.allocUnsafeSlow = function(e2) {
    return v$3(null, e2);
  }, p$2.isBuffer = $$1, p$2.compare = function(e2, t2) {
    if (!y$1(e2) || !y$1(t2))
      throw new TypeError("Arguments must be Buffers");
    if (e2 === t2)
      return 0;
    for (var r2 = e2.length, n2 = t2.length, i2 = 0, o2 = Math.min(r2, n2); i2 < o2; ++i2)
      if (e2[i2] !== t2[i2]) {
        r2 = e2[i2], n2 = t2[i2];
        break;
      }
    return r2 < n2 ? -1 : n2 < r2 ? 1 : 0;
  }, p$2.isEncoding = function(e2) {
    switch (String(e2).toLowerCase()) {
      case "hex":
      case "utf8":
      case "utf-8":
      case "ascii":
      case "latin1":
      case "binary":
      case "base64":
      case "ucs2":
      case "ucs-2":
      case "utf16le":
      case "utf-16le":
        return true;
      default:
        return false;
    }
  }, p$2.concat = function(e2, t2) {
    if (!c$3(e2))
      throw new TypeError('"list" argument must be an Array of Buffers');
    if (0 === e2.length)
      return p$2.alloc(0);
    var r2;
    if (void 0 === t2)
      for (t2 = 0, r2 = 0; r2 < e2.length; ++r2)
        t2 += e2[r2].length;
    var n2 = p$2.allocUnsafe(t2), i2 = 0;
    for (r2 = 0; r2 < e2.length; ++r2) {
      var o2 = e2[r2];
      if (!y$1(o2))
        throw new TypeError('"list" argument must be an Array of Buffers');
      o2.copy(n2, i2), i2 += o2.length;
    }
    return n2;
  }, p$2.byteLength = m$2, p$2.prototype._isBuffer = true, p$2.prototype.swap16 = function() {
    var e2 = this.length;
    if (e2 % 2 != 0)
      throw new RangeError("Buffer size must be a multiple of 16-bits");
    for (var t2 = 0; t2 < e2; t2 += 2)
      E$3(this, t2, t2 + 1);
    return this;
  }, p$2.prototype.swap32 = function() {
    var e2 = this.length;
    if (e2 % 4 != 0)
      throw new RangeError("Buffer size must be a multiple of 32-bits");
    for (var t2 = 0; t2 < e2; t2 += 4)
      E$3(this, t2, t2 + 3), E$3(this, t2 + 1, t2 + 2);
    return this;
  }, p$2.prototype.swap64 = function() {
    var e2 = this.length;
    if (e2 % 8 != 0)
      throw new RangeError("Buffer size must be a multiple of 64-bits");
    for (var t2 = 0; t2 < e2; t2 += 8)
      E$3(this, t2, t2 + 7), E$3(this, t2 + 1, t2 + 6), E$3(this, t2 + 2, t2 + 5), E$3(this, t2 + 3, t2 + 4);
    return this;
  }, p$2.prototype.toString = function() {
    var e2 = 0 | this.length;
    return 0 === e2 ? "" : 0 === arguments.length ? C$3(this, 0, e2) : k$1.apply(this, arguments);
  }, p$2.prototype.equals = function(e2) {
    if (!y$1(e2))
      throw new TypeError("Argument must be a Buffer");
    return this === e2 || 0 === p$2.compare(this, e2);
  }, p$2.prototype.inspect = function() {
    var e2 = "";
    return this.length > 0 && (e2 = this.toString("hex", 0, 50).match(/.{2}/g).join(" "), this.length > 50 && (e2 += " ... ")), "<Buffer " + e2 + ">";
  }, p$2.prototype.compare = function(e2, t2, r2, n2, i2) {
    if (!y$1(e2))
      throw new TypeError("Argument must be a Buffer");
    if (void 0 === t2 && (t2 = 0), void 0 === r2 && (r2 = e2 ? e2.length : 0), void 0 === n2 && (n2 = 0), void 0 === i2 && (i2 = this.length), t2 < 0 || r2 > e2.length || n2 < 0 || i2 > this.length)
      throw new RangeError("out of range index");
    if (n2 >= i2 && t2 >= r2)
      return 0;
    if (n2 >= i2)
      return -1;
    if (t2 >= r2)
      return 1;
    if (this === e2)
      return 0;
    for (var o2 = (i2 >>>= 0) - (n2 >>>= 0), a2 = (r2 >>>= 0) - (t2 >>>= 0), s2 = Math.min(o2, a2), h2 = this.slice(n2, i2), l2 = e2.slice(t2, r2), f2 = 0; f2 < s2; ++f2)
      if (h2[f2] !== l2[f2]) {
        o2 = h2[f2], a2 = l2[f2];
        break;
      }
    return o2 < a2 ? -1 : a2 < o2 ? 1 : 0;
  }, p$2.prototype.includes = function(e2, t2, r2) {
    return -1 !== this.indexOf(e2, t2, r2);
  }, p$2.prototype.indexOf = function(e2, t2, r2) {
    return S$2(this, e2, t2, r2, true);
  }, p$2.prototype.lastIndexOf = function(e2, t2, r2) {
    return S$2(this, e2, t2, r2, false);
  }, p$2.prototype.write = function(e2, t2, r2, n2) {
    if (void 0 === t2)
      n2 = "utf8", r2 = this.length, t2 = 0;
    else if (void 0 === r2 && "string" == typeof t2)
      n2 = t2, r2 = this.length, t2 = 0;
    else {
      if (!isFinite(t2))
        throw new Error("Buffer.write(string, encoding, offset[, length]) is no longer supported");
      t2 |= 0, isFinite(r2) ? (r2 |= 0, void 0 === n2 && (n2 = "utf8")) : (n2 = r2, r2 = void 0);
    }
    var i2 = this.length - t2;
    if ((void 0 === r2 || r2 > i2) && (r2 = i2), e2.length > 0 && (r2 < 0 || t2 < 0) || t2 > this.length)
      throw new RangeError("Attempt to write outside buffer bounds");
    n2 || (n2 = "utf8");
    for (var o2 = false; ; )
      switch (n2) {
        case "hex":
          return R$3(this, e2, t2, r2);
        case "utf8":
        case "utf-8":
          return A$2(this, e2, t2, r2);
        case "ascii":
          return B$1(this, e2, t2, r2);
        case "latin1":
        case "binary":
          return z$1(this, e2, t2, r2);
        case "base64":
          return L$1(this, e2, t2, r2);
        case "ucs2":
        case "ucs-2":
        case "utf16le":
        case "utf-16le":
          return T$3(this, e2, t2, r2);
        default:
          if (o2)
            throw new TypeError("Unknown encoding: " + n2);
          n2 = ("" + n2).toLowerCase(), o2 = true;
      }
  }, p$2.prototype.toJSON = function() {
    return { type: "Buffer", data: Array.prototype.slice.call(this._arr || this, 0) };
  };
  var D$1 = 4096;
  function I$3(e2, t2, r2) {
    var n2 = "";
    r2 = Math.min(e2.length, r2);
    for (var i2 = t2; i2 < r2; ++i2)
      n2 += String.fromCharCode(127 & e2[i2]);
    return n2;
  }
  function P$1(e2, t2, r2) {
    var n2 = "";
    r2 = Math.min(e2.length, r2);
    for (var i2 = t2; i2 < r2; ++i2)
      n2 += String.fromCharCode(e2[i2]);
    return n2;
  }
  function O$1(e2, t2, r2) {
    var n2 = e2.length;
    (!t2 || t2 < 0) && (t2 = 0), (!r2 || r2 < 0 || r2 > n2) && (r2 = n2);
    for (var i2 = "", o2 = t2; o2 < r2; ++o2)
      i2 += X$1(e2[o2]);
    return i2;
  }
  function U$2(e2, t2, r2) {
    for (var n2 = e2.slice(t2, r2), i2 = "", o2 = 0; o2 < n2.length; o2 += 2)
      i2 += String.fromCharCode(n2[o2] + 256 * n2[o2 + 1]);
    return i2;
  }
  function H$1(e2, t2, r2) {
    if (e2 % 1 != 0 || e2 < 0)
      throw new RangeError("offset is not uint");
    if (e2 + t2 > r2)
      throw new RangeError("Trying to access beyond buffer length");
  }
  function F$1(e2, t2, r2, n2, i2, o2) {
    if (!y$1(e2))
      throw new TypeError('"buffer" argument must be a Buffer instance');
    if (t2 > i2 || t2 < o2)
      throw new RangeError('"value" argument is out of bounds');
    if (r2 + n2 > e2.length)
      throw new RangeError("Index out of range");
  }
  function N$2(e2, t2, r2, n2) {
    t2 < 0 && (t2 = 65535 + t2 + 1);
    for (var i2 = 0, o2 = Math.min(e2.length - r2, 2); i2 < o2; ++i2)
      e2[r2 + i2] = (t2 & 255 << 8 * (n2 ? i2 : 1 - i2)) >>> 8 * (n2 ? i2 : 1 - i2);
  }
  function Z$1(e2, t2, r2, n2) {
    t2 < 0 && (t2 = 4294967295 + t2 + 1);
    for (var i2 = 0, o2 = Math.min(e2.length - r2, 4); i2 < o2; ++i2)
      e2[r2 + i2] = t2 >>> 8 * (n2 ? i2 : 3 - i2) & 255;
  }
  function j$1(e2, t2, r2, n2, i2, o2) {
    if (r2 + n2 > e2.length)
      throw new RangeError("Index out of range");
    if (r2 < 0)
      throw new RangeError("Index out of range");
  }
  function W$1(e2, t2, r2, n2, i2) {
    return i2 || j$1(e2, 0, r2, 4), l$3(e2, t2, r2, n2, 23, 4), r2 + 4;
  }
  function Y$1(e2, t2, r2, n2, i2) {
    return i2 || j$1(e2, 0, r2, 8), l$3(e2, t2, r2, n2, 52, 8), r2 + 8;
  }
  p$2.prototype.slice = function(e2, t2) {
    var r2, n2 = this.length;
    if ((e2 = ~~e2) < 0 ? (e2 += n2) < 0 && (e2 = 0) : e2 > n2 && (e2 = n2), (t2 = void 0 === t2 ? n2 : ~~t2) < 0 ? (t2 += n2) < 0 && (t2 = 0) : t2 > n2 && (t2 = n2), t2 < e2 && (t2 = e2), p$2.TYPED_ARRAY_SUPPORT)
      (r2 = this.subarray(e2, t2)).__proto__ = p$2.prototype;
    else {
      var i2 = t2 - e2;
      r2 = new p$2(i2, void 0);
      for (var o2 = 0; o2 < i2; ++o2)
        r2[o2] = this[o2 + e2];
    }
    return r2;
  }, p$2.prototype.readUIntLE = function(e2, t2, r2) {
    e2 |= 0, t2 |= 0, r2 || H$1(e2, t2, this.length);
    for (var n2 = this[e2], i2 = 1, o2 = 0; ++o2 < t2 && (i2 *= 256); )
      n2 += this[e2 + o2] * i2;
    return n2;
  }, p$2.prototype.readUIntBE = function(e2, t2, r2) {
    e2 |= 0, t2 |= 0, r2 || H$1(e2, t2, this.length);
    for (var n2 = this[e2 + --t2], i2 = 1; t2 > 0 && (i2 *= 256); )
      n2 += this[e2 + --t2] * i2;
    return n2;
  }, p$2.prototype.readUInt8 = function(e2, t2) {
    return t2 || H$1(e2, 1, this.length), this[e2];
  }, p$2.prototype.readUInt16LE = function(e2, t2) {
    return t2 || H$1(e2, 2, this.length), this[e2] | this[e2 + 1] << 8;
  }, p$2.prototype.readUInt16BE = function(e2, t2) {
    return t2 || H$1(e2, 2, this.length), this[e2] << 8 | this[e2 + 1];
  }, p$2.prototype.readUInt32LE = function(e2, t2) {
    return t2 || H$1(e2, 4, this.length), (this[e2] | this[e2 + 1] << 8 | this[e2 + 2] << 16) + 16777216 * this[e2 + 3];
  }, p$2.prototype.readUInt32BE = function(e2, t2) {
    return t2 || H$1(e2, 4, this.length), 16777216 * this[e2] + (this[e2 + 1] << 16 | this[e2 + 2] << 8 | this[e2 + 3]);
  }, p$2.prototype.readIntLE = function(e2, t2, r2) {
    e2 |= 0, t2 |= 0, r2 || H$1(e2, t2, this.length);
    for (var n2 = this[e2], i2 = 1, o2 = 0; ++o2 < t2 && (i2 *= 256); )
      n2 += this[e2 + o2] * i2;
    return n2 >= (i2 *= 128) && (n2 -= Math.pow(2, 8 * t2)), n2;
  }, p$2.prototype.readIntBE = function(e2, t2, r2) {
    e2 |= 0, t2 |= 0, r2 || H$1(e2, t2, this.length);
    for (var n2 = t2, i2 = 1, o2 = this[e2 + --n2]; n2 > 0 && (i2 *= 256); )
      o2 += this[e2 + --n2] * i2;
    return o2 >= (i2 *= 128) && (o2 -= Math.pow(2, 8 * t2)), o2;
  }, p$2.prototype.readInt8 = function(e2, t2) {
    return t2 || H$1(e2, 1, this.length), 128 & this[e2] ? -1 * (255 - this[e2] + 1) : this[e2];
  }, p$2.prototype.readInt16LE = function(e2, t2) {
    t2 || H$1(e2, 2, this.length);
    var r2 = this[e2] | this[e2 + 1] << 8;
    return 32768 & r2 ? 4294901760 | r2 : r2;
  }, p$2.prototype.readInt16BE = function(e2, t2) {
    t2 || H$1(e2, 2, this.length);
    var r2 = this[e2 + 1] | this[e2] << 8;
    return 32768 & r2 ? 4294901760 | r2 : r2;
  }, p$2.prototype.readInt32LE = function(e2, t2) {
    return t2 || H$1(e2, 4, this.length), this[e2] | this[e2 + 1] << 8 | this[e2 + 2] << 16 | this[e2 + 3] << 24;
  }, p$2.prototype.readInt32BE = function(e2, t2) {
    return t2 || H$1(e2, 4, this.length), this[e2] << 24 | this[e2 + 1] << 16 | this[e2 + 2] << 8 | this[e2 + 3];
  }, p$2.prototype.readFloatLE = function(e2, t2) {
    return t2 || H$1(e2, 4, this.length), h$3(this, e2, true, 23, 4);
  }, p$2.prototype.readFloatBE = function(e2, t2) {
    return t2 || H$1(e2, 4, this.length), h$3(this, e2, false, 23, 4);
  }, p$2.prototype.readDoubleLE = function(e2, t2) {
    return t2 || H$1(e2, 8, this.length), h$3(this, e2, true, 52, 8);
  }, p$2.prototype.readDoubleBE = function(e2, t2) {
    return t2 || H$1(e2, 8, this.length), h$3(this, e2, false, 52, 8);
  }, p$2.prototype.writeUIntLE = function(e2, t2, r2, n2) {
    (e2 = +e2, t2 |= 0, r2 |= 0, n2) || F$1(this, e2, t2, r2, Math.pow(2, 8 * r2) - 1, 0);
    var i2 = 1, o2 = 0;
    for (this[t2] = 255 & e2; ++o2 < r2 && (i2 *= 256); )
      this[t2 + o2] = e2 / i2 & 255;
    return t2 + r2;
  }, p$2.prototype.writeUIntBE = function(e2, t2, r2, n2) {
    (e2 = +e2, t2 |= 0, r2 |= 0, n2) || F$1(this, e2, t2, r2, Math.pow(2, 8 * r2) - 1, 0);
    var i2 = r2 - 1, o2 = 1;
    for (this[t2 + i2] = 255 & e2; --i2 >= 0 && (o2 *= 256); )
      this[t2 + i2] = e2 / o2 & 255;
    return t2 + r2;
  }, p$2.prototype.writeUInt8 = function(e2, t2, r2) {
    return e2 = +e2, t2 |= 0, r2 || F$1(this, e2, t2, 1, 255, 0), p$2.TYPED_ARRAY_SUPPORT || (e2 = Math.floor(e2)), this[t2] = 255 & e2, t2 + 1;
  }, p$2.prototype.writeUInt16LE = function(e2, t2, r2) {
    return e2 = +e2, t2 |= 0, r2 || F$1(this, e2, t2, 2, 65535, 0), p$2.TYPED_ARRAY_SUPPORT ? (this[t2] = 255 & e2, this[t2 + 1] = e2 >>> 8) : N$2(this, e2, t2, true), t2 + 2;
  }, p$2.prototype.writeUInt16BE = function(e2, t2, r2) {
    return e2 = +e2, t2 |= 0, r2 || F$1(this, e2, t2, 2, 65535, 0), p$2.TYPED_ARRAY_SUPPORT ? (this[t2] = e2 >>> 8, this[t2 + 1] = 255 & e2) : N$2(this, e2, t2, false), t2 + 2;
  }, p$2.prototype.writeUInt32LE = function(e2, t2, r2) {
    return e2 = +e2, t2 |= 0, r2 || F$1(this, e2, t2, 4, 4294967295, 0), p$2.TYPED_ARRAY_SUPPORT ? (this[t2 + 3] = e2 >>> 24, this[t2 + 2] = e2 >>> 16, this[t2 + 1] = e2 >>> 8, this[t2] = 255 & e2) : Z$1(this, e2, t2, true), t2 + 4;
  }, p$2.prototype.writeUInt32BE = function(e2, t2, r2) {
    return e2 = +e2, t2 |= 0, r2 || F$1(this, e2, t2, 4, 4294967295, 0), p$2.TYPED_ARRAY_SUPPORT ? (this[t2] = e2 >>> 24, this[t2 + 1] = e2 >>> 16, this[t2 + 2] = e2 >>> 8, this[t2 + 3] = 255 & e2) : Z$1(this, e2, t2, false), t2 + 4;
  }, p$2.prototype.writeIntLE = function(e2, t2, r2, n2) {
    if (e2 = +e2, t2 |= 0, !n2) {
      var i2 = Math.pow(2, 8 * r2 - 1);
      F$1(this, e2, t2, r2, i2 - 1, -i2);
    }
    var o2 = 0, a2 = 1, s2 = 0;
    for (this[t2] = 255 & e2; ++o2 < r2 && (a2 *= 256); )
      e2 < 0 && 0 === s2 && 0 !== this[t2 + o2 - 1] && (s2 = 1), this[t2 + o2] = (e2 / a2 >> 0) - s2 & 255;
    return t2 + r2;
  }, p$2.prototype.writeIntBE = function(e2, t2, r2, n2) {
    if (e2 = +e2, t2 |= 0, !n2) {
      var i2 = Math.pow(2, 8 * r2 - 1);
      F$1(this, e2, t2, r2, i2 - 1, -i2);
    }
    var o2 = r2 - 1, a2 = 1, s2 = 0;
    for (this[t2 + o2] = 255 & e2; --o2 >= 0 && (a2 *= 256); )
      e2 < 0 && 0 === s2 && 0 !== this[t2 + o2 + 1] && (s2 = 1), this[t2 + o2] = (e2 / a2 >> 0) - s2 & 255;
    return t2 + r2;
  }, p$2.prototype.writeInt8 = function(e2, t2, r2) {
    return e2 = +e2, t2 |= 0, r2 || F$1(this, e2, t2, 1, 127, -128), p$2.TYPED_ARRAY_SUPPORT || (e2 = Math.floor(e2)), e2 < 0 && (e2 = 255 + e2 + 1), this[t2] = 255 & e2, t2 + 1;
  }, p$2.prototype.writeInt16LE = function(e2, t2, r2) {
    return e2 = +e2, t2 |= 0, r2 || F$1(this, e2, t2, 2, 32767, -32768), p$2.TYPED_ARRAY_SUPPORT ? (this[t2] = 255 & e2, this[t2 + 1] = e2 >>> 8) : N$2(this, e2, t2, true), t2 + 2;
  }, p$2.prototype.writeInt16BE = function(e2, t2, r2) {
    return e2 = +e2, t2 |= 0, r2 || F$1(this, e2, t2, 2, 32767, -32768), p$2.TYPED_ARRAY_SUPPORT ? (this[t2] = e2 >>> 8, this[t2 + 1] = 255 & e2) : N$2(this, e2, t2, false), t2 + 2;
  }, p$2.prototype.writeInt32LE = function(e2, t2, r2) {
    return e2 = +e2, t2 |= 0, r2 || F$1(this, e2, t2, 4, 2147483647, -2147483648), p$2.TYPED_ARRAY_SUPPORT ? (this[t2] = 255 & e2, this[t2 + 1] = e2 >>> 8, this[t2 + 2] = e2 >>> 16, this[t2 + 3] = e2 >>> 24) : Z$1(this, e2, t2, true), t2 + 4;
  }, p$2.prototype.writeInt32BE = function(e2, t2, r2) {
    return e2 = +e2, t2 |= 0, r2 || F$1(this, e2, t2, 4, 2147483647, -2147483648), e2 < 0 && (e2 = 4294967295 + e2 + 1), p$2.TYPED_ARRAY_SUPPORT ? (this[t2] = e2 >>> 24, this[t2 + 1] = e2 >>> 16, this[t2 + 2] = e2 >>> 8, this[t2 + 3] = 255 & e2) : Z$1(this, e2, t2, false), t2 + 4;
  }, p$2.prototype.writeFloatLE = function(e2, t2, r2) {
    return W$1(this, e2, t2, true, r2);
  }, p$2.prototype.writeFloatBE = function(e2, t2, r2) {
    return W$1(this, e2, t2, false, r2);
  }, p$2.prototype.writeDoubleLE = function(e2, t2, r2) {
    return Y$1(this, e2, t2, true, r2);
  }, p$2.prototype.writeDoubleBE = function(e2, t2, r2) {
    return Y$1(this, e2, t2, false, r2);
  }, p$2.prototype.copy = function(e2, t2, r2, n2) {
    if (r2 || (r2 = 0), n2 || 0 === n2 || (n2 = this.length), t2 >= e2.length && (t2 = e2.length), t2 || (t2 = 0), n2 > 0 && n2 < r2 && (n2 = r2), n2 === r2)
      return 0;
    if (0 === e2.length || 0 === this.length)
      return 0;
    if (t2 < 0)
      throw new RangeError("targetStart out of bounds");
    if (r2 < 0 || r2 >= this.length)
      throw new RangeError("sourceStart out of bounds");
    if (n2 < 0)
      throw new RangeError("sourceEnd out of bounds");
    n2 > this.length && (n2 = this.length), e2.length - t2 < n2 - r2 && (n2 = e2.length - t2 + r2);
    var i2, o2 = n2 - r2;
    if (this === e2 && r2 < t2 && t2 < n2)
      for (i2 = o2 - 1; i2 >= 0; --i2)
        e2[i2 + t2] = this[i2 + r2];
    else if (o2 < 1e3 || !p$2.TYPED_ARRAY_SUPPORT)
      for (i2 = 0; i2 < o2; ++i2)
        e2[i2 + t2] = this[i2 + r2];
    else
      Uint8Array.prototype.set.call(e2, this.subarray(r2, r2 + o2), t2);
    return o2;
  }, p$2.prototype.fill = function(e2, t2, r2, n2) {
    if ("string" == typeof e2) {
      if ("string" == typeof t2 ? (n2 = t2, t2 = 0, r2 = this.length) : "string" == typeof r2 && (n2 = r2, r2 = this.length), 1 === e2.length) {
        var i2 = e2.charCodeAt(0);
        i2 < 256 && (e2 = i2);
      }
      if (void 0 !== n2 && "string" != typeof n2)
        throw new TypeError("encoding must be a string");
      if ("string" == typeof n2 && !p$2.isEncoding(n2))
        throw new TypeError("Unknown encoding: " + n2);
    } else
      "number" == typeof e2 && (e2 &= 255);
    if (t2 < 0 || this.length < t2 || this.length < r2)
      throw new RangeError("Out of range index");
    if (r2 <= t2)
      return this;
    var o2;
    if (t2 >>>= 0, r2 = void 0 === r2 ? this.length : r2 >>> 0, e2 || (e2 = 0), "number" == typeof e2)
      for (o2 = t2; o2 < r2; ++o2)
        this[o2] = e2;
    else {
      var a2 = y$1(e2) ? e2 : q$1(new p$2(e2, n2).toString()), s2 = a2.length;
      for (o2 = 0; o2 < r2 - t2; ++o2)
        this[o2 + t2] = a2[o2 % s2];
    }
    return this;
  };
  var K$1 = /[^+\/0-9A-Za-z-_]/g;
  function X$1(e2) {
    return e2 < 16 ? "0" + e2.toString(16) : e2.toString(16);
  }
  function q$1(e2, t2) {
    var r2;
    t2 = t2 || 1 / 0;
    for (var n2 = e2.length, i2 = null, o2 = [], a2 = 0; a2 < n2; ++a2) {
      if ((r2 = e2.charCodeAt(a2)) > 55295 && r2 < 57344) {
        if (!i2) {
          if (r2 > 56319) {
            (t2 -= 3) > -1 && o2.push(239, 191, 189);
            continue;
          }
          if (a2 + 1 === n2) {
            (t2 -= 3) > -1 && o2.push(239, 191, 189);
            continue;
          }
          i2 = r2;
          continue;
        }
        if (r2 < 56320) {
          (t2 -= 3) > -1 && o2.push(239, 191, 189), i2 = r2;
          continue;
        }
        r2 = 65536 + (i2 - 55296 << 10 | r2 - 56320);
      } else
        i2 && (t2 -= 3) > -1 && o2.push(239, 191, 189);
      if (i2 = null, r2 < 128) {
        if ((t2 -= 1) < 0)
          break;
        o2.push(r2);
      } else if (r2 < 2048) {
        if ((t2 -= 2) < 0)
          break;
        o2.push(r2 >> 6 | 192, 63 & r2 | 128);
      } else if (r2 < 65536) {
        if ((t2 -= 3) < 0)
          break;
        o2.push(r2 >> 12 | 224, r2 >> 6 & 63 | 128, 63 & r2 | 128);
      } else {
        if (!(r2 < 1114112))
          throw new Error("Invalid code point");
        if ((t2 -= 4) < 0)
          break;
        o2.push(r2 >> 18 | 240, r2 >> 12 & 63 | 128, r2 >> 6 & 63 | 128, 63 & r2 | 128);
      }
    }
    return o2;
  }
  function V$1(e2) {
    return function(e3) {
      var t2, a2, s2, h2, l2, f2;
      i$3 || o$3();
      var c2 = e3.length;
      if (c2 % 4 > 0)
        throw new Error("Invalid string. Length must be a multiple of 4");
      l2 = "=" === e3[c2 - 2] ? 2 : "=" === e3[c2 - 1] ? 1 : 0, f2 = new n$3(3 * c2 / 4 - l2), s2 = l2 > 0 ? c2 - 4 : c2;
      var u2 = 0;
      for (t2 = 0, a2 = 0; t2 < s2; t2 += 4, a2 += 3)
        h2 = r$3[e3.charCodeAt(t2)] << 18 | r$3[e3.charCodeAt(t2 + 1)] << 12 | r$3[e3.charCodeAt(t2 + 2)] << 6 | r$3[e3.charCodeAt(t2 + 3)], f2[u2++] = h2 >> 16 & 255, f2[u2++] = h2 >> 8 & 255, f2[u2++] = 255 & h2;
      return 2 === l2 ? (h2 = r$3[e3.charCodeAt(t2)] << 2 | r$3[e3.charCodeAt(t2 + 1)] >> 4, f2[u2++] = 255 & h2) : 1 === l2 && (h2 = r$3[e3.charCodeAt(t2)] << 10 | r$3[e3.charCodeAt(t2 + 1)] << 4 | r$3[e3.charCodeAt(t2 + 2)] >> 2, f2[u2++] = h2 >> 8 & 255, f2[u2++] = 255 & h2), f2;
    }(function(e3) {
      if ((e3 = function(e4) {
        return e4.trim ? e4.trim() : e4.replace(/^\s+|\s+$/g, "");
      }(e3).replace(K$1, "")).length < 2)
        return "";
      for (; e3.length % 4 != 0; )
        e3 += "=";
      return e3;
    }(e2));
  }
  function G$1(e2, t2, r2, n2) {
    for (var i2 = 0; i2 < n2 && !(i2 + r2 >= t2.length || i2 >= e2.length); ++i2)
      t2[i2 + r2] = e2[i2];
    return i2;
  }
  function $$1(e2) {
    return null != e2 && (!!e2._isBuffer || J$1(e2) || function(e3) {
      return "function" == typeof e3.readFloatLE && "function" == typeof e3.slice && J$1(e3.slice(0, 0));
    }(e2));
  }
  function J$1(e2) {
    return !!e2.constructor && "function" == typeof e2.constructor.isBuffer && e2.constructor.isBuffer(e2);
  }
  function Q$1(e2, t2) {
    return e2(t2 = { exports: {} }, t2.exports), t2.exports;
  }
  var ee$1 = Q$1(function(e2, t2) {
    var r2;
    e2.exports = (r2 = r2 || function(e3, t3) {
      var r3 = Object.create || /* @__PURE__ */ function() {
        function e4() {
        }
        return function(t4) {
          var r4;
          return e4.prototype = t4, r4 = new e4(), e4.prototype = null, r4;
        };
      }(), n2 = {}, i2 = n2.lib = {}, o2 = i2.Base = { extend: function(e4) {
        var t4 = r3(this);
        return e4 && t4.mixIn(e4), t4.hasOwnProperty("init") && this.init !== t4.init || (t4.init = function() {
          t4.$super.init.apply(this, arguments);
        }), t4.init.prototype = t4, t4.$super = this, t4;
      }, create: function() {
        var e4 = this.extend();
        return e4.init.apply(e4, arguments), e4;
      }, init: function() {
      }, mixIn: function(e4) {
        for (var t4 in e4)
          e4.hasOwnProperty(t4) && (this[t4] = e4[t4]);
        e4.hasOwnProperty("toString") && (this.toString = e4.toString);
      }, clone: function() {
        return this.init.prototype.extend(this);
      } }, a2 = i2.WordArray = o2.extend({ init: function(e4, t4) {
        e4 = this.words = e4 || [], this.sigBytes = null != t4 ? t4 : 4 * e4.length;
      }, toString: function(e4) {
        return (e4 || h2).stringify(this);
      }, concat: function(e4) {
        var t4 = this.words, r4 = e4.words, n3 = this.sigBytes, i3 = e4.sigBytes;
        if (this.clamp(), n3 % 4)
          for (var o3 = 0; o3 < i3; o3++) {
            var a3 = r4[o3 >>> 2] >>> 24 - o3 % 4 * 8 & 255;
            t4[n3 + o3 >>> 2] |= a3 << 24 - (n3 + o3) % 4 * 8;
          }
        else
          for (var o3 = 0; o3 < i3; o3 += 4)
            t4[n3 + o3 >>> 2] = r4[o3 >>> 2];
        return this.sigBytes += i3, this;
      }, clamp: function() {
        var t4 = this.words, r4 = this.sigBytes;
        t4[r4 >>> 2] &= 4294967295 << 32 - r4 % 4 * 8, t4.length = e3.ceil(r4 / 4);
      }, clone: function() {
        var e4 = o2.clone.call(this);
        return e4.words = this.words.slice(0), e4;
      }, random: function(t4) {
        for (var r4, n3 = [], i3 = function(t5) {
          var t5 = t5, r5 = 987654321, n4 = 4294967295;
          return function() {
            var i4 = ((r5 = 36969 * (65535 & r5) + (r5 >> 16) & n4) << 16) + (t5 = 18e3 * (65535 & t5) + (t5 >> 16) & n4) & n4;
            return i4 /= 4294967296, (i4 += 0.5) * (e3.random() > 0.5 ? 1 : -1);
          };
        }, o3 = 0; o3 < t4; o3 += 4) {
          var s3 = i3(4294967296 * (r4 || e3.random()));
          r4 = 987654071 * s3(), n3.push(4294967296 * s3() | 0);
        }
        return new a2.init(n3, t4);
      } }), s2 = n2.enc = {}, h2 = s2.Hex = { stringify: function(e4) {
        for (var t4 = e4.words, r4 = e4.sigBytes, n3 = [], i3 = 0; i3 < r4; i3++) {
          var o3 = t4[i3 >>> 2] >>> 24 - i3 % 4 * 8 & 255;
          n3.push((o3 >>> 4).toString(16)), n3.push((15 & o3).toString(16));
        }
        return n3.join("");
      }, parse: function(e4) {
        for (var t4 = e4.length, r4 = [], n3 = 0; n3 < t4; n3 += 2)
          r4[n3 >>> 3] |= parseInt(e4.substr(n3, 2), 16) << 24 - n3 % 8 * 4;
        return new a2.init(r4, t4 / 2);
      } }, l2 = s2.Latin1 = { stringify: function(e4) {
        for (var t4 = e4.words, r4 = e4.sigBytes, n3 = [], i3 = 0; i3 < r4; i3++) {
          var o3 = t4[i3 >>> 2] >>> 24 - i3 % 4 * 8 & 255;
          n3.push(String.fromCharCode(o3));
        }
        return n3.join("");
      }, parse: function(e4) {
        for (var t4 = e4.length, r4 = [], n3 = 0; n3 < t4; n3++)
          r4[n3 >>> 2] |= (255 & e4.charCodeAt(n3)) << 24 - n3 % 4 * 8;
        return new a2.init(r4, t4);
      } }, f2 = s2.Utf8 = { stringify: function(e4) {
        try {
          return decodeURIComponent(escape(l2.stringify(e4)));
        } catch (e5) {
          throw new Error("Malformed UTF-8 data");
        }
      }, parse: function(e4) {
        return l2.parse(unescape(encodeURIComponent(e4)));
      } }, c2 = i2.BufferedBlockAlgorithm = o2.extend({ reset: function() {
        this._data = new a2.init(), this._nDataBytes = 0;
      }, _append: function(e4) {
        "string" == typeof e4 && (e4 = f2.parse(e4)), this._data.concat(e4), this._nDataBytes += e4.sigBytes;
      }, _process: function(t4) {
        var r4 = this._data, n3 = r4.words, i3 = r4.sigBytes, o3 = this.blockSize, s3 = 4 * o3, h3 = i3 / s3, l3 = (h3 = t4 ? e3.ceil(h3) : e3.max((0 | h3) - this._minBufferSize, 0)) * o3, f3 = e3.min(4 * l3, i3);
        if (l3) {
          for (var c3 = 0; c3 < l3; c3 += o3)
            this._doProcessBlock(n3, c3);
          var u3 = n3.splice(0, l3);
          r4.sigBytes -= f3;
        }
        return new a2.init(u3, f3);
      }, clone: function() {
        var e4 = o2.clone.call(this);
        return e4._data = this._data.clone(), e4;
      }, _minBufferSize: 0 }), u2 = (i2.Hasher = c2.extend({ cfg: o2.extend(), init: function(e4) {
        this.cfg = this.cfg.extend(e4), this.reset();
      }, reset: function() {
        c2.reset.call(this), this._doReset();
      }, update: function(e4) {
        return this._append(e4), this._process(), this;
      }, finalize: function(e4) {
        e4 && this._append(e4);
        var t4 = this._doFinalize();
        return t4;
      }, blockSize: 16, _createHelper: function(e4) {
        return function(t4, r4) {
          return new e4.init(r4).finalize(t4);
        };
      }, _createHmacHelper: function(e4) {
        return function(t4, r4) {
          return new u2.HMAC.init(e4, r4).finalize(t4);
        };
      } }), n2.algo = {});
      return n2;
    }(Math), r2);
  }), te$1 = (Q$1(function(e2, t2) {
    var r2, n2, i2, o2, a2, s2;
    e2.exports = (i2 = (n2 = r2 = ee$1).lib, o2 = i2.Base, a2 = i2.WordArray, (s2 = n2.x64 = {}).Word = o2.extend({ init: function(e3, t3) {
      this.high = e3, this.low = t3;
    } }), s2.WordArray = o2.extend({ init: function(e3, t3) {
      e3 = this.words = e3 || [], this.sigBytes = null != t3 ? t3 : 8 * e3.length;
    }, toX32: function() {
      for (var e3 = this.words, t3 = e3.length, r3 = [], n3 = 0; n3 < t3; n3++) {
        var i3 = e3[n3];
        r3.push(i3.high), r3.push(i3.low);
      }
      return a2.create(r3, this.sigBytes);
    }, clone: function() {
      for (var e3 = o2.clone.call(this), t3 = e3.words = this.words.slice(0), r3 = t3.length, n3 = 0; n3 < r3; n3++)
        t3[n3] = t3[n3].clone();
      return e3;
    } }), r2);
  }), Q$1(function(e2, t2) {
    var r2;
    e2.exports = (r2 = ee$1, function() {
      if ("function" == typeof ArrayBuffer) {
        var e3 = r2.lib.WordArray, t3 = e3.init;
        (e3.init = function(e4) {
          if (e4 instanceof ArrayBuffer && (e4 = new Uint8Array(e4)), (e4 instanceof Int8Array || "undefined" != typeof Uint8ClampedArray && e4 instanceof Uint8ClampedArray || e4 instanceof Int16Array || e4 instanceof Uint16Array || e4 instanceof Int32Array || e4 instanceof Uint32Array || e4 instanceof Float32Array || e4 instanceof Float64Array) && (e4 = new Uint8Array(e4.buffer, e4.byteOffset, e4.byteLength)), e4 instanceof Uint8Array) {
            for (var r3 = e4.byteLength, n2 = [], i2 = 0; i2 < r3; i2++)
              n2[i2 >>> 2] |= e4[i2] << 24 - i2 % 4 * 8;
            t3.call(this, n2, r3);
          } else
            t3.apply(this, arguments);
        }).prototype = e3;
      }
    }(), r2.lib.WordArray);
  }), Q$1(function(e2, t2) {
    var r2;
    e2.exports = (r2 = ee$1, function() {
      var e3 = r2, t3 = e3.lib.WordArray, n2 = e3.enc;
      function i2(e4) {
        return e4 << 8 & 4278255360 | e4 >>> 8 & 16711935;
      }
      n2.Utf16 = n2.Utf16BE = { stringify: function(e4) {
        for (var t4 = e4.words, r3 = e4.sigBytes, n3 = [], i3 = 0; i3 < r3; i3 += 2) {
          var o2 = t4[i3 >>> 2] >>> 16 - i3 % 4 * 8 & 65535;
          n3.push(String.fromCharCode(o2));
        }
        return n3.join("");
      }, parse: function(e4) {
        for (var r3 = e4.length, n3 = [], i3 = 0; i3 < r3; i3++)
          n3[i3 >>> 1] |= e4.charCodeAt(i3) << 16 - i3 % 2 * 16;
        return t3.create(n3, 2 * r3);
      } }, n2.Utf16LE = { stringify: function(e4) {
        for (var t4 = e4.words, r3 = e4.sigBytes, n3 = [], o2 = 0; o2 < r3; o2 += 2) {
          var a2 = i2(t4[o2 >>> 2] >>> 16 - o2 % 4 * 8 & 65535);
          n3.push(String.fromCharCode(a2));
        }
        return n3.join("");
      }, parse: function(e4) {
        for (var r3 = e4.length, n3 = [], o2 = 0; o2 < r3; o2++)
          n3[o2 >>> 1] |= i2(e4.charCodeAt(o2) << 16 - o2 % 2 * 16);
        return t3.create(n3, 2 * r3);
      } };
    }(), r2.enc.Utf16);
  }), Q$1(function(e2, t2) {
    var r2, n2, i2;
    e2.exports = (i2 = (n2 = r2 = ee$1).lib.WordArray, n2.enc.Base64 = { stringify: function(e3) {
      var t3 = e3.words, r3 = e3.sigBytes, n3 = this._map;
      e3.clamp();
      for (var i3 = [], o2 = 0; o2 < r3; o2 += 3)
        for (var a2 = (t3[o2 >>> 2] >>> 24 - o2 % 4 * 8 & 255) << 16 | (t3[o2 + 1 >>> 2] >>> 24 - (o2 + 1) % 4 * 8 & 255) << 8 | t3[o2 + 2 >>> 2] >>> 24 - (o2 + 2) % 4 * 8 & 255, s2 = 0; s2 < 4 && o2 + 0.75 * s2 < r3; s2++)
          i3.push(n3.charAt(a2 >>> 6 * (3 - s2) & 63));
      var h2 = n3.charAt(64);
      if (h2)
        for (; i3.length % 4; )
          i3.push(h2);
      return i3.join("");
    }, parse: function(e3) {
      var t3 = e3.length, r3 = this._map, n3 = this._reverseMap;
      if (!n3) {
        n3 = this._reverseMap = [];
        for (var o2 = 0; o2 < r3.length; o2++)
          n3[r3.charCodeAt(o2)] = o2;
      }
      var a2 = r3.charAt(64);
      if (a2) {
        var s2 = e3.indexOf(a2);
        -1 !== s2 && (t3 = s2);
      }
      return function(e4, t4, r4) {
        for (var n4 = [], o3 = 0, a3 = 0; a3 < t4; a3++)
          if (a3 % 4) {
            var s3 = r4[e4.charCodeAt(a3 - 1)] << a3 % 4 * 2, h2 = r4[e4.charCodeAt(a3)] >>> 6 - a3 % 4 * 2;
            n4[o3 >>> 2] |= (s3 | h2) << 24 - o3 % 4 * 8, o3++;
          }
        return i2.create(n4, o3);
      }(e3, t3, n3);
    }, _map: "ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/=" }, r2.enc.Base64);
  }), Q$1(function(e2, t2) {
    var r2;
    e2.exports = (r2 = ee$1, function(e3) {
      var t3 = r2, n2 = t3.lib, i2 = n2.WordArray, o2 = n2.Hasher, a2 = t3.algo, s2 = [];
      !function() {
        for (var t4 = 0; t4 < 64; t4++)
          s2[t4] = 4294967296 * e3.abs(e3.sin(t4 + 1)) | 0;
      }();
      var h2 = a2.MD5 = o2.extend({ _doReset: function() {
        this._hash = new i2.init([1732584193, 4023233417, 2562383102, 271733878]);
      }, _doProcessBlock: function(e4, t4) {
        for (var r3 = 0; r3 < 16; r3++) {
          var n3 = t4 + r3, i3 = e4[n3];
          e4[n3] = 16711935 & (i3 << 8 | i3 >>> 24) | 4278255360 & (i3 << 24 | i3 >>> 8);
        }
        var o3 = this._hash.words, a3 = e4[t4 + 0], h3 = e4[t4 + 1], d2 = e4[t4 + 2], p2 = e4[t4 + 3], _2 = e4[t4 + 4], g2 = e4[t4 + 5], v2 = e4[t4 + 6], w2 = e4[t4 + 7], b2 = e4[t4 + 8], y2 = e4[t4 + 9], m2 = e4[t4 + 10], k2 = e4[t4 + 11], E2 = e4[t4 + 12], S2 = e4[t4 + 13], x2 = e4[t4 + 14], R2 = e4[t4 + 15], A2 = o3[0], B2 = o3[1], z2 = o3[2], L2 = o3[3];
        A2 = l2(A2, B2, z2, L2, a3, 7, s2[0]), L2 = l2(L2, A2, B2, z2, h3, 12, s2[1]), z2 = l2(z2, L2, A2, B2, d2, 17, s2[2]), B2 = l2(B2, z2, L2, A2, p2, 22, s2[3]), A2 = l2(A2, B2, z2, L2, _2, 7, s2[4]), L2 = l2(L2, A2, B2, z2, g2, 12, s2[5]), z2 = l2(z2, L2, A2, B2, v2, 17, s2[6]), B2 = l2(B2, z2, L2, A2, w2, 22, s2[7]), A2 = l2(A2, B2, z2, L2, b2, 7, s2[8]), L2 = l2(L2, A2, B2, z2, y2, 12, s2[9]), z2 = l2(z2, L2, A2, B2, m2, 17, s2[10]), B2 = l2(B2, z2, L2, A2, k2, 22, s2[11]), A2 = l2(A2, B2, z2, L2, E2, 7, s2[12]), L2 = l2(L2, A2, B2, z2, S2, 12, s2[13]), z2 = l2(z2, L2, A2, B2, x2, 17, s2[14]), A2 = f2(A2, B2 = l2(B2, z2, L2, A2, R2, 22, s2[15]), z2, L2, h3, 5, s2[16]), L2 = f2(L2, A2, B2, z2, v2, 9, s2[17]), z2 = f2(z2, L2, A2, B2, k2, 14, s2[18]), B2 = f2(B2, z2, L2, A2, a3, 20, s2[19]), A2 = f2(A2, B2, z2, L2, g2, 5, s2[20]), L2 = f2(L2, A2, B2, z2, m2, 9, s2[21]), z2 = f2(z2, L2, A2, B2, R2, 14, s2[22]), B2 = f2(B2, z2, L2, A2, _2, 20, s2[23]), A2 = f2(A2, B2, z2, L2, y2, 5, s2[24]), L2 = f2(L2, A2, B2, z2, x2, 9, s2[25]), z2 = f2(z2, L2, A2, B2, p2, 14, s2[26]), B2 = f2(B2, z2, L2, A2, b2, 20, s2[27]), A2 = f2(A2, B2, z2, L2, S2, 5, s2[28]), L2 = f2(L2, A2, B2, z2, d2, 9, s2[29]), z2 = f2(z2, L2, A2, B2, w2, 14, s2[30]), A2 = c2(A2, B2 = f2(B2, z2, L2, A2, E2, 20, s2[31]), z2, L2, g2, 4, s2[32]), L2 = c2(L2, A2, B2, z2, b2, 11, s2[33]), z2 = c2(z2, L2, A2, B2, k2, 16, s2[34]), B2 = c2(B2, z2, L2, A2, x2, 23, s2[35]), A2 = c2(A2, B2, z2, L2, h3, 4, s2[36]), L2 = c2(L2, A2, B2, z2, _2, 11, s2[37]), z2 = c2(z2, L2, A2, B2, w2, 16, s2[38]), B2 = c2(B2, z2, L2, A2, m2, 23, s2[39]), A2 = c2(A2, B2, z2, L2, S2, 4, s2[40]), L2 = c2(L2, A2, B2, z2, a3, 11, s2[41]), z2 = c2(z2, L2, A2, B2, p2, 16, s2[42]), B2 = c2(B2, z2, L2, A2, v2, 23, s2[43]), A2 = c2(A2, B2, z2, L2, y2, 4, s2[44]), L2 = c2(L2, A2, B2, z2, E2, 11, s2[45]), z2 = c2(z2, L2, A2, B2, R2, 16, s2[46]), A2 = u2(A2, B2 = c2(B2, z2, L2, A2, d2, 23, s2[47]), z2, L2, a3, 6, s2[48]), L2 = u2(L2, A2, B2, z2, w2, 10, s2[49]), z2 = u2(z2, L2, A2, B2, x2, 15, s2[50]), B2 = u2(B2, z2, L2, A2, g2, 21, s2[51]), A2 = u2(A2, B2, z2, L2, E2, 6, s2[52]), L2 = u2(L2, A2, B2, z2, p2, 10, s2[53]), z2 = u2(z2, L2, A2, B2, m2, 15, s2[54]), B2 = u2(B2, z2, L2, A2, h3, 21, s2[55]), A2 = u2(A2, B2, z2, L2, b2, 6, s2[56]), L2 = u2(L2, A2, B2, z2, R2, 10, s2[57]), z2 = u2(z2, L2, A2, B2, v2, 15, s2[58]), B2 = u2(B2, z2, L2, A2, S2, 21, s2[59]), A2 = u2(A2, B2, z2, L2, _2, 6, s2[60]), L2 = u2(L2, A2, B2, z2, k2, 10, s2[61]), z2 = u2(z2, L2, A2, B2, d2, 15, s2[62]), B2 = u2(B2, z2, L2, A2, y2, 21, s2[63]), o3[0] = o3[0] + A2 | 0, o3[1] = o3[1] + B2 | 0, o3[2] = o3[2] + z2 | 0, o3[3] = o3[3] + L2 | 0;
      }, _doFinalize: function() {
        var t4 = this._data, r3 = t4.words, n3 = 8 * this._nDataBytes, i3 = 8 * t4.sigBytes;
        r3[i3 >>> 5] |= 128 << 24 - i3 % 32;
        var o3 = e3.floor(n3 / 4294967296), a3 = n3;
        r3[15 + (i3 + 64 >>> 9 << 4)] = 16711935 & (o3 << 8 | o3 >>> 24) | 4278255360 & (o3 << 24 | o3 >>> 8), r3[14 + (i3 + 64 >>> 9 << 4)] = 16711935 & (a3 << 8 | a3 >>> 24) | 4278255360 & (a3 << 24 | a3 >>> 8), t4.sigBytes = 4 * (r3.length + 1), this._process();
        for (var s3 = this._hash, h3 = s3.words, l3 = 0; l3 < 4; l3++) {
          var f3 = h3[l3];
          h3[l3] = 16711935 & (f3 << 8 | f3 >>> 24) | 4278255360 & (f3 << 24 | f3 >>> 8);
        }
        return s3;
      }, clone: function() {
        var e4 = o2.clone.call(this);
        return e4._hash = this._hash.clone(), e4;
      } });
      function l2(e4, t4, r3, n3, i3, o3, a3) {
        var s3 = e4 + (t4 & r3 | ~t4 & n3) + i3 + a3;
        return (s3 << o3 | s3 >>> 32 - o3) + t4;
      }
      function f2(e4, t4, r3, n3, i3, o3, a3) {
        var s3 = e4 + (t4 & n3 | r3 & ~n3) + i3 + a3;
        return (s3 << o3 | s3 >>> 32 - o3) + t4;
      }
      function c2(e4, t4, r3, n3, i3, o3, a3) {
        var s3 = e4 + (t4 ^ r3 ^ n3) + i3 + a3;
        return (s3 << o3 | s3 >>> 32 - o3) + t4;
      }
      function u2(e4, t4, r3, n3, i3, o3, a3) {
        var s3 = e4 + (r3 ^ (t4 | ~n3)) + i3 + a3;
        return (s3 << o3 | s3 >>> 32 - o3) + t4;
      }
      t3.MD5 = o2._createHelper(h2), t3.HmacMD5 = o2._createHmacHelper(h2);
    }(Math), r2.MD5);
  }), Q$1(function(e2, t2) {
    var r2, n2, i2, o2, a2, s2, h2, l2;
    e2.exports = (i2 = (n2 = r2 = ee$1).lib, o2 = i2.WordArray, a2 = i2.Hasher, s2 = n2.algo, h2 = [], l2 = s2.SHA1 = a2.extend({ _doReset: function() {
      this._hash = new o2.init([1732584193, 4023233417, 2562383102, 271733878, 3285377520]);
    }, _doProcessBlock: function(e3, t3) {
      for (var r3 = this._hash.words, n3 = r3[0], i3 = r3[1], o3 = r3[2], a3 = r3[3], s3 = r3[4], l3 = 0; l3 < 80; l3++) {
        if (l3 < 16)
          h2[l3] = 0 | e3[t3 + l3];
        else {
          var f2 = h2[l3 - 3] ^ h2[l3 - 8] ^ h2[l3 - 14] ^ h2[l3 - 16];
          h2[l3] = f2 << 1 | f2 >>> 31;
        }
        var c2 = (n3 << 5 | n3 >>> 27) + s3 + h2[l3];
        c2 += l3 < 20 ? 1518500249 + (i3 & o3 | ~i3 & a3) : l3 < 40 ? 1859775393 + (i3 ^ o3 ^ a3) : l3 < 60 ? (i3 & o3 | i3 & a3 | o3 & a3) - 1894007588 : (i3 ^ o3 ^ a3) - 899497514, s3 = a3, a3 = o3, o3 = i3 << 30 | i3 >>> 2, i3 = n3, n3 = c2;
      }
      r3[0] = r3[0] + n3 | 0, r3[1] = r3[1] + i3 | 0, r3[2] = r3[2] + o3 | 0, r3[3] = r3[3] + a3 | 0, r3[4] = r3[4] + s3 | 0;
    }, _doFinalize: function() {
      var e3 = this._data, t3 = e3.words, r3 = 8 * this._nDataBytes, n3 = 8 * e3.sigBytes;
      return t3[n3 >>> 5] |= 128 << 24 - n3 % 32, t3[14 + (n3 + 64 >>> 9 << 4)] = Math.floor(r3 / 4294967296), t3[15 + (n3 + 64 >>> 9 << 4)] = r3, e3.sigBytes = 4 * t3.length, this._process(), this._hash;
    }, clone: function() {
      var e3 = a2.clone.call(this);
      return e3._hash = this._hash.clone(), e3;
    } }), n2.SHA1 = a2._createHelper(l2), n2.HmacSHA1 = a2._createHmacHelper(l2), r2.SHA1);
  }), Q$1(function(e2, t2) {
    var r2;
    e2.exports = (r2 = ee$1, function(e3) {
      var t3 = r2, n2 = t3.lib, i2 = n2.WordArray, o2 = n2.Hasher, a2 = t3.algo, s2 = [], h2 = [];
      !function() {
        function t4(t5) {
          for (var r4 = e3.sqrt(t5), n4 = 2; n4 <= r4; n4++)
            if (!(t5 % n4))
              return false;
          return true;
        }
        function r3(e4) {
          return 4294967296 * (e4 - (0 | e4)) | 0;
        }
        for (var n3 = 2, i3 = 0; i3 < 64; )
          t4(n3) && (i3 < 8 && (s2[i3] = r3(e3.pow(n3, 0.5))), h2[i3] = r3(e3.pow(n3, 1 / 3)), i3++), n3++;
      }();
      var l2 = [], f2 = a2.SHA256 = o2.extend({ _doReset: function() {
        this._hash = new i2.init(s2.slice(0));
      }, _doProcessBlock: function(e4, t4) {
        for (var r3 = this._hash.words, n3 = r3[0], i3 = r3[1], o3 = r3[2], a3 = r3[3], s3 = r3[4], f3 = r3[5], c2 = r3[6], u2 = r3[7], d2 = 0; d2 < 64; d2++) {
          if (d2 < 16)
            l2[d2] = 0 | e4[t4 + d2];
          else {
            var p2 = l2[d2 - 15], _2 = (p2 << 25 | p2 >>> 7) ^ (p2 << 14 | p2 >>> 18) ^ p2 >>> 3, g2 = l2[d2 - 2], v2 = (g2 << 15 | g2 >>> 17) ^ (g2 << 13 | g2 >>> 19) ^ g2 >>> 10;
            l2[d2] = _2 + l2[d2 - 7] + v2 + l2[d2 - 16];
          }
          var w2 = n3 & i3 ^ n3 & o3 ^ i3 & o3, b2 = (n3 << 30 | n3 >>> 2) ^ (n3 << 19 | n3 >>> 13) ^ (n3 << 10 | n3 >>> 22), y2 = u2 + ((s3 << 26 | s3 >>> 6) ^ (s3 << 21 | s3 >>> 11) ^ (s3 << 7 | s3 >>> 25)) + (s3 & f3 ^ ~s3 & c2) + h2[d2] + l2[d2];
          u2 = c2, c2 = f3, f3 = s3, s3 = a3 + y2 | 0, a3 = o3, o3 = i3, i3 = n3, n3 = y2 + (b2 + w2) | 0;
        }
        r3[0] = r3[0] + n3 | 0, r3[1] = r3[1] + i3 | 0, r3[2] = r3[2] + o3 | 0, r3[3] = r3[3] + a3 | 0, r3[4] = r3[4] + s3 | 0, r3[5] = r3[5] + f3 | 0, r3[6] = r3[6] + c2 | 0, r3[7] = r3[7] + u2 | 0;
      }, _doFinalize: function() {
        var t4 = this._data, r3 = t4.words, n3 = 8 * this._nDataBytes, i3 = 8 * t4.sigBytes;
        return r3[i3 >>> 5] |= 128 << 24 - i3 % 32, r3[14 + (i3 + 64 >>> 9 << 4)] = e3.floor(n3 / 4294967296), r3[15 + (i3 + 64 >>> 9 << 4)] = n3, t4.sigBytes = 4 * r3.length, this._process(), this._hash;
      }, clone: function() {
        var e4 = o2.clone.call(this);
        return e4._hash = this._hash.clone(), e4;
      } });
      t3.SHA256 = o2._createHelper(f2), t3.HmacSHA256 = o2._createHmacHelper(f2);
    }(Math), r2.SHA256);
  }), Q$1(function(e2, t2) {
    var r2, n2, i2, o2, a2, s2;
    e2.exports = (i2 = (n2 = r2 = ee$1).lib.WordArray, o2 = n2.algo, a2 = o2.SHA256, s2 = o2.SHA224 = a2.extend({ _doReset: function() {
      this._hash = new i2.init([3238371032, 914150663, 812702999, 4144912697, 4290775857, 1750603025, 1694076839, 3204075428]);
    }, _doFinalize: function() {
      var e3 = a2._doFinalize.call(this);
      return e3.sigBytes -= 4, e3;
    } }), n2.SHA224 = a2._createHelper(s2), n2.HmacSHA224 = a2._createHmacHelper(s2), r2.SHA224);
  }), Q$1(function(e2, t2) {
    var r2;
    e2.exports = (r2 = ee$1, function() {
      var e3 = r2, t3 = e3.lib.Hasher, n2 = e3.x64, i2 = n2.Word, o2 = n2.WordArray, a2 = e3.algo;
      function s2() {
        return i2.create.apply(i2, arguments);
      }
      var h2 = [s2(1116352408, 3609767458), s2(1899447441, 602891725), s2(3049323471, 3964484399), s2(3921009573, 2173295548), s2(961987163, 4081628472), s2(1508970993, 3053834265), s2(2453635748, 2937671579), s2(2870763221, 3664609560), s2(3624381080, 2734883394), s2(310598401, 1164996542), s2(607225278, 1323610764), s2(1426881987, 3590304994), s2(1925078388, 4068182383), s2(2162078206, 991336113), s2(2614888103, 633803317), s2(3248222580, 3479774868), s2(3835390401, 2666613458), s2(4022224774, 944711139), s2(264347078, 2341262773), s2(604807628, 2007800933), s2(770255983, 1495990901), s2(1249150122, 1856431235), s2(1555081692, 3175218132), s2(1996064986, 2198950837), s2(2554220882, 3999719339), s2(2821834349, 766784016), s2(2952996808, 2566594879), s2(3210313671, 3203337956), s2(3336571891, 1034457026), s2(3584528711, 2466948901), s2(113926993, 3758326383), s2(338241895, 168717936), s2(666307205, 1188179964), s2(773529912, 1546045734), s2(1294757372, 1522805485), s2(1396182291, 2643833823), s2(1695183700, 2343527390), s2(1986661051, 1014477480), s2(2177026350, 1206759142), s2(2456956037, 344077627), s2(2730485921, 1290863460), s2(2820302411, 3158454273), s2(3259730800, 3505952657), s2(3345764771, 106217008), s2(3516065817, 3606008344), s2(3600352804, 1432725776), s2(4094571909, 1467031594), s2(275423344, 851169720), s2(430227734, 3100823752), s2(506948616, 1363258195), s2(659060556, 3750685593), s2(883997877, 3785050280), s2(958139571, 3318307427), s2(1322822218, 3812723403), s2(1537002063, 2003034995), s2(1747873779, 3602036899), s2(1955562222, 1575990012), s2(2024104815, 1125592928), s2(2227730452, 2716904306), s2(2361852424, 442776044), s2(2428436474, 593698344), s2(2756734187, 3733110249), s2(3204031479, 2999351573), s2(3329325298, 3815920427), s2(3391569614, 3928383900), s2(3515267271, 566280711), s2(3940187606, 3454069534), s2(4118630271, 4000239992), s2(116418474, 1914138554), s2(174292421, 2731055270), s2(289380356, 3203993006), s2(460393269, 320620315), s2(685471733, 587496836), s2(852142971, 1086792851), s2(1017036298, 365543100), s2(1126000580, 2618297676), s2(1288033470, 3409855158), s2(1501505948, 4234509866), s2(1607167915, 987167468), s2(1816402316, 1246189591)], l2 = [];
      !function() {
        for (var e4 = 0; e4 < 80; e4++)
          l2[e4] = s2();
      }();
      var f2 = a2.SHA512 = t3.extend({ _doReset: function() {
        this._hash = new o2.init([new i2.init(1779033703, 4089235720), new i2.init(3144134277, 2227873595), new i2.init(1013904242, 4271175723), new i2.init(2773480762, 1595750129), new i2.init(1359893119, 2917565137), new i2.init(2600822924, 725511199), new i2.init(528734635, 4215389547), new i2.init(1541459225, 327033209)]);
      }, _doProcessBlock: function(e4, t4) {
        for (var r3 = this._hash.words, n3 = r3[0], i3 = r3[1], o3 = r3[2], a3 = r3[3], s3 = r3[4], f3 = r3[5], c2 = r3[6], u2 = r3[7], d2 = n3.high, p2 = n3.low, _2 = i3.high, g2 = i3.low, v2 = o3.high, w2 = o3.low, b2 = a3.high, y2 = a3.low, m2 = s3.high, k2 = s3.low, E2 = f3.high, S2 = f3.low, x2 = c2.high, R2 = c2.low, A2 = u2.high, B2 = u2.low, z2 = d2, L2 = p2, T2 = _2, M2 = g2, C2 = v2, D2 = w2, I2 = b2, P2 = y2, O2 = m2, U2 = k2, H2 = E2, F2 = S2, N2 = x2, Z2 = R2, j2 = A2, W2 = B2, Y2 = 0; Y2 < 80; Y2++) {
          var K2 = l2[Y2];
          if (Y2 < 16)
            var X2 = K2.high = 0 | e4[t4 + 2 * Y2], q2 = K2.low = 0 | e4[t4 + 2 * Y2 + 1];
          else {
            var V2 = l2[Y2 - 15], G2 = V2.high, $2 = V2.low, J2 = (G2 >>> 1 | $2 << 31) ^ (G2 >>> 8 | $2 << 24) ^ G2 >>> 7, Q2 = ($2 >>> 1 | G2 << 31) ^ ($2 >>> 8 | G2 << 24) ^ ($2 >>> 7 | G2 << 25), ee2 = l2[Y2 - 2], te2 = ee2.high, re2 = ee2.low, ne2 = (te2 >>> 19 | re2 << 13) ^ (te2 << 3 | re2 >>> 29) ^ te2 >>> 6, ie2 = (re2 >>> 19 | te2 << 13) ^ (re2 << 3 | te2 >>> 29) ^ (re2 >>> 6 | te2 << 26), oe2 = l2[Y2 - 7], ae2 = oe2.high, se2 = oe2.low, he2 = l2[Y2 - 16], le2 = he2.high, fe2 = he2.low;
            X2 = (X2 = (X2 = J2 + ae2 + ((q2 = Q2 + se2) >>> 0 < Q2 >>> 0 ? 1 : 0)) + ne2 + ((q2 += ie2) >>> 0 < ie2 >>> 0 ? 1 : 0)) + le2 + ((q2 += fe2) >>> 0 < fe2 >>> 0 ? 1 : 0), K2.high = X2, K2.low = q2;
          }
          var ce2, ue2 = O2 & H2 ^ ~O2 & N2, de2 = U2 & F2 ^ ~U2 & Z2, pe2 = z2 & T2 ^ z2 & C2 ^ T2 & C2, _e3 = L2 & M2 ^ L2 & D2 ^ M2 & D2, ge2 = (z2 >>> 28 | L2 << 4) ^ (z2 << 30 | L2 >>> 2) ^ (z2 << 25 | L2 >>> 7), ve2 = (L2 >>> 28 | z2 << 4) ^ (L2 << 30 | z2 >>> 2) ^ (L2 << 25 | z2 >>> 7), we2 = (O2 >>> 14 | U2 << 18) ^ (O2 >>> 18 | U2 << 14) ^ (O2 << 23 | U2 >>> 9), be2 = (U2 >>> 14 | O2 << 18) ^ (U2 >>> 18 | O2 << 14) ^ (U2 << 23 | O2 >>> 9), ye2 = h2[Y2], me2 = ye2.high, ke2 = ye2.low, Ee2 = j2 + we2 + ((ce2 = W2 + be2) >>> 0 < W2 >>> 0 ? 1 : 0), Se2 = ve2 + _e3;
          j2 = N2, W2 = Z2, N2 = H2, Z2 = F2, H2 = O2, F2 = U2, O2 = I2 + (Ee2 = (Ee2 = (Ee2 = Ee2 + ue2 + ((ce2 += de2) >>> 0 < de2 >>> 0 ? 1 : 0)) + me2 + ((ce2 += ke2) >>> 0 < ke2 >>> 0 ? 1 : 0)) + X2 + ((ce2 += q2) >>> 0 < q2 >>> 0 ? 1 : 0)) + ((U2 = P2 + ce2 | 0) >>> 0 < P2 >>> 0 ? 1 : 0) | 0, I2 = C2, P2 = D2, C2 = T2, D2 = M2, T2 = z2, M2 = L2, z2 = Ee2 + (ge2 + pe2 + (Se2 >>> 0 < ve2 >>> 0 ? 1 : 0)) + ((L2 = ce2 + Se2 | 0) >>> 0 < ce2 >>> 0 ? 1 : 0) | 0;
        }
        p2 = n3.low = p2 + L2, n3.high = d2 + z2 + (p2 >>> 0 < L2 >>> 0 ? 1 : 0), g2 = i3.low = g2 + M2, i3.high = _2 + T2 + (g2 >>> 0 < M2 >>> 0 ? 1 : 0), w2 = o3.low = w2 + D2, o3.high = v2 + C2 + (w2 >>> 0 < D2 >>> 0 ? 1 : 0), y2 = a3.low = y2 + P2, a3.high = b2 + I2 + (y2 >>> 0 < P2 >>> 0 ? 1 : 0), k2 = s3.low = k2 + U2, s3.high = m2 + O2 + (k2 >>> 0 < U2 >>> 0 ? 1 : 0), S2 = f3.low = S2 + F2, f3.high = E2 + H2 + (S2 >>> 0 < F2 >>> 0 ? 1 : 0), R2 = c2.low = R2 + Z2, c2.high = x2 + N2 + (R2 >>> 0 < Z2 >>> 0 ? 1 : 0), B2 = u2.low = B2 + W2, u2.high = A2 + j2 + (B2 >>> 0 < W2 >>> 0 ? 1 : 0);
      }, _doFinalize: function() {
        var e4 = this._data, t4 = e4.words, r3 = 8 * this._nDataBytes, n3 = 8 * e4.sigBytes;
        return t4[n3 >>> 5] |= 128 << 24 - n3 % 32, t4[30 + (n3 + 128 >>> 10 << 5)] = Math.floor(r3 / 4294967296), t4[31 + (n3 + 128 >>> 10 << 5)] = r3, e4.sigBytes = 4 * t4.length, this._process(), this._hash.toX32();
      }, clone: function() {
        var e4 = t3.clone.call(this);
        return e4._hash = this._hash.clone(), e4;
      }, blockSize: 32 });
      e3.SHA512 = t3._createHelper(f2), e3.HmacSHA512 = t3._createHmacHelper(f2);
    }(), r2.SHA512);
  }), Q$1(function(e2, t2) {
    var r2, n2, i2, o2, a2, s2, h2, l2;
    e2.exports = (i2 = (n2 = r2 = ee$1).x64, o2 = i2.Word, a2 = i2.WordArray, s2 = n2.algo, h2 = s2.SHA512, l2 = s2.SHA384 = h2.extend({ _doReset: function() {
      this._hash = new a2.init([new o2.init(3418070365, 3238371032), new o2.init(1654270250, 914150663), new o2.init(2438529370, 812702999), new o2.init(355462360, 4144912697), new o2.init(1731405415, 4290775857), new o2.init(2394180231, 1750603025), new o2.init(3675008525, 1694076839), new o2.init(1203062813, 3204075428)]);
    }, _doFinalize: function() {
      var e3 = h2._doFinalize.call(this);
      return e3.sigBytes -= 16, e3;
    } }), n2.SHA384 = h2._createHelper(l2), n2.HmacSHA384 = h2._createHmacHelper(l2), r2.SHA384);
  }), Q$1(function(e2, t2) {
    var r2;
    e2.exports = (r2 = ee$1, function(e3) {
      var t3 = r2, n2 = t3.lib, i2 = n2.WordArray, o2 = n2.Hasher, a2 = t3.x64.Word, s2 = t3.algo, h2 = [], l2 = [], f2 = [];
      !function() {
        for (var e4 = 1, t4 = 0, r3 = 0; r3 < 24; r3++) {
          h2[e4 + 5 * t4] = (r3 + 1) * (r3 + 2) / 2 % 64;
          var n3 = (2 * e4 + 3 * t4) % 5;
          e4 = t4 % 5, t4 = n3;
        }
        for (e4 = 0; e4 < 5; e4++)
          for (t4 = 0; t4 < 5; t4++)
            l2[e4 + 5 * t4] = t4 + (2 * e4 + 3 * t4) % 5 * 5;
        for (var i3 = 1, o3 = 0; o3 < 24; o3++) {
          for (var s3 = 0, c3 = 0, u3 = 0; u3 < 7; u3++) {
            if (1 & i3) {
              var d2 = (1 << u3) - 1;
              d2 < 32 ? c3 ^= 1 << d2 : s3 ^= 1 << d2 - 32;
            }
            128 & i3 ? i3 = i3 << 1 ^ 113 : i3 <<= 1;
          }
          f2[o3] = a2.create(s3, c3);
        }
      }();
      var c2 = [];
      !function() {
        for (var e4 = 0; e4 < 25; e4++)
          c2[e4] = a2.create();
      }();
      var u2 = s2.SHA3 = o2.extend({ cfg: o2.cfg.extend({ outputLength: 512 }), _doReset: function() {
        for (var e4 = this._state = [], t4 = 0; t4 < 25; t4++)
          e4[t4] = new a2.init();
        this.blockSize = (1600 - 2 * this.cfg.outputLength) / 32;
      }, _doProcessBlock: function(e4, t4) {
        for (var r3 = this._state, n3 = this.blockSize / 2, i3 = 0; i3 < n3; i3++) {
          var o3 = e4[t4 + 2 * i3], a3 = e4[t4 + 2 * i3 + 1];
          o3 = 16711935 & (o3 << 8 | o3 >>> 24) | 4278255360 & (o3 << 24 | o3 >>> 8), a3 = 16711935 & (a3 << 8 | a3 >>> 24) | 4278255360 & (a3 << 24 | a3 >>> 8), (B2 = r3[i3]).high ^= a3, B2.low ^= o3;
        }
        for (var s3 = 0; s3 < 24; s3++) {
          for (var u3 = 0; u3 < 5; u3++) {
            for (var d2 = 0, p2 = 0, _2 = 0; _2 < 5; _2++)
              d2 ^= (B2 = r3[u3 + 5 * _2]).high, p2 ^= B2.low;
            var g2 = c2[u3];
            g2.high = d2, g2.low = p2;
          }
          for (u3 = 0; u3 < 5; u3++) {
            var v2 = c2[(u3 + 4) % 5], w2 = c2[(u3 + 1) % 5], b2 = w2.high, y2 = w2.low;
            for (d2 = v2.high ^ (b2 << 1 | y2 >>> 31), p2 = v2.low ^ (y2 << 1 | b2 >>> 31), _2 = 0; _2 < 5; _2++)
              (B2 = r3[u3 + 5 * _2]).high ^= d2, B2.low ^= p2;
          }
          for (var m2 = 1; m2 < 25; m2++) {
            var k2 = (B2 = r3[m2]).high, E2 = B2.low, S2 = h2[m2];
            S2 < 32 ? (d2 = k2 << S2 | E2 >>> 32 - S2, p2 = E2 << S2 | k2 >>> 32 - S2) : (d2 = E2 << S2 - 32 | k2 >>> 64 - S2, p2 = k2 << S2 - 32 | E2 >>> 64 - S2);
            var x2 = c2[l2[m2]];
            x2.high = d2, x2.low = p2;
          }
          var R2 = c2[0], A2 = r3[0];
          for (R2.high = A2.high, R2.low = A2.low, u3 = 0; u3 < 5; u3++)
            for (_2 = 0; _2 < 5; _2++) {
              var B2 = r3[m2 = u3 + 5 * _2], z2 = c2[m2], L2 = c2[(u3 + 1) % 5 + 5 * _2], T2 = c2[(u3 + 2) % 5 + 5 * _2];
              B2.high = z2.high ^ ~L2.high & T2.high, B2.low = z2.low ^ ~L2.low & T2.low;
            }
          B2 = r3[0];
          var M2 = f2[s3];
          B2.high ^= M2.high, B2.low ^= M2.low;
        }
      }, _doFinalize: function() {
        var t4 = this._data, r3 = t4.words, n3 = (this._nDataBytes, 8 * t4.sigBytes), o3 = 32 * this.blockSize;
        r3[n3 >>> 5] |= 1 << 24 - n3 % 32, r3[(e3.ceil((n3 + 1) / o3) * o3 >>> 5) - 1] |= 128, t4.sigBytes = 4 * r3.length, this._process();
        for (var a3 = this._state, s3 = this.cfg.outputLength / 8, h3 = s3 / 8, l3 = [], f3 = 0; f3 < h3; f3++) {
          var c3 = a3[f3], u3 = c3.high, d2 = c3.low;
          u3 = 16711935 & (u3 << 8 | u3 >>> 24) | 4278255360 & (u3 << 24 | u3 >>> 8), d2 = 16711935 & (d2 << 8 | d2 >>> 24) | 4278255360 & (d2 << 24 | d2 >>> 8), l3.push(d2), l3.push(u3);
        }
        return new i2.init(l3, s3);
      }, clone: function() {
        for (var e4 = o2.clone.call(this), t4 = e4._state = this._state.slice(0), r3 = 0; r3 < 25; r3++)
          t4[r3] = t4[r3].clone();
        return e4;
      } });
      t3.SHA3 = o2._createHelper(u2), t3.HmacSHA3 = o2._createHmacHelper(u2);
    }(Math), r2.SHA3);
  }), Q$1(function(e2, t2) {
    var r2;
    e2.exports = (r2 = ee$1, function(e3) {
      var t3 = r2, n2 = t3.lib, i2 = n2.WordArray, o2 = n2.Hasher, a2 = t3.algo, s2 = i2.create([0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 7, 4, 13, 1, 10, 6, 15, 3, 12, 0, 9, 5, 2, 14, 11, 8, 3, 10, 14, 4, 9, 15, 8, 1, 2, 7, 0, 6, 13, 11, 5, 12, 1, 9, 11, 10, 0, 8, 12, 4, 13, 3, 7, 15, 14, 5, 6, 2, 4, 0, 5, 9, 7, 12, 2, 10, 14, 1, 3, 8, 11, 6, 15, 13]), h2 = i2.create([5, 14, 7, 0, 9, 2, 11, 4, 13, 6, 15, 8, 1, 10, 3, 12, 6, 11, 3, 7, 0, 13, 5, 10, 14, 15, 8, 12, 4, 9, 1, 2, 15, 5, 1, 3, 7, 14, 6, 9, 11, 8, 12, 2, 10, 0, 4, 13, 8, 6, 4, 1, 3, 11, 15, 0, 5, 12, 2, 13, 9, 7, 10, 14, 12, 15, 10, 4, 1, 5, 8, 7, 6, 2, 13, 14, 0, 3, 9, 11]), l2 = i2.create([11, 14, 15, 12, 5, 8, 7, 9, 11, 13, 14, 15, 6, 7, 9, 8, 7, 6, 8, 13, 11, 9, 7, 15, 7, 12, 15, 9, 11, 7, 13, 12, 11, 13, 6, 7, 14, 9, 13, 15, 14, 8, 13, 6, 5, 12, 7, 5, 11, 12, 14, 15, 14, 15, 9, 8, 9, 14, 5, 6, 8, 6, 5, 12, 9, 15, 5, 11, 6, 8, 13, 12, 5, 12, 13, 14, 11, 8, 5, 6]), f2 = i2.create([8, 9, 9, 11, 13, 15, 15, 5, 7, 7, 8, 11, 14, 14, 12, 6, 9, 13, 15, 7, 12, 8, 9, 11, 7, 7, 12, 7, 6, 15, 13, 11, 9, 7, 15, 11, 8, 6, 6, 14, 12, 13, 5, 14, 13, 13, 7, 5, 15, 5, 8, 11, 14, 14, 6, 14, 6, 9, 12, 9, 12, 5, 15, 8, 8, 5, 12, 9, 12, 5, 14, 6, 8, 13, 6, 5, 15, 13, 11, 11]), c2 = i2.create([0, 1518500249, 1859775393, 2400959708, 2840853838]), u2 = i2.create([1352829926, 1548603684, 1836072691, 2053994217, 0]), d2 = a2.RIPEMD160 = o2.extend({ _doReset: function() {
        this._hash = i2.create([1732584193, 4023233417, 2562383102, 271733878, 3285377520]);
      }, _doProcessBlock: function(e4, t4) {
        for (var r3 = 0; r3 < 16; r3++) {
          var n3 = t4 + r3, i3 = e4[n3];
          e4[n3] = 16711935 & (i3 << 8 | i3 >>> 24) | 4278255360 & (i3 << 24 | i3 >>> 8);
        }
        var o3, a3, d3, y2, m2, k2, E2, S2, x2, R2, A2, B2 = this._hash.words, z2 = c2.words, L2 = u2.words, T2 = s2.words, M2 = h2.words, C2 = l2.words, D2 = f2.words;
        for (k2 = o3 = B2[0], E2 = a3 = B2[1], S2 = d3 = B2[2], x2 = y2 = B2[3], R2 = m2 = B2[4], r3 = 0; r3 < 80; r3 += 1)
          A2 = o3 + e4[t4 + T2[r3]] | 0, A2 += r3 < 16 ? p2(a3, d3, y2) + z2[0] : r3 < 32 ? _2(a3, d3, y2) + z2[1] : r3 < 48 ? g2(a3, d3, y2) + z2[2] : r3 < 64 ? v2(a3, d3, y2) + z2[3] : w2(a3, d3, y2) + z2[4], A2 = (A2 = b2(A2 |= 0, C2[r3])) + m2 | 0, o3 = m2, m2 = y2, y2 = b2(d3, 10), d3 = a3, a3 = A2, A2 = k2 + e4[t4 + M2[r3]] | 0, A2 += r3 < 16 ? w2(E2, S2, x2) + L2[0] : r3 < 32 ? v2(E2, S2, x2) + L2[1] : r3 < 48 ? g2(E2, S2, x2) + L2[2] : r3 < 64 ? _2(E2, S2, x2) + L2[3] : p2(E2, S2, x2) + L2[4], A2 = (A2 = b2(A2 |= 0, D2[r3])) + R2 | 0, k2 = R2, R2 = x2, x2 = b2(S2, 10), S2 = E2, E2 = A2;
        A2 = B2[1] + d3 + x2 | 0, B2[1] = B2[2] + y2 + R2 | 0, B2[2] = B2[3] + m2 + k2 | 0, B2[3] = B2[4] + o3 + E2 | 0, B2[4] = B2[0] + a3 + S2 | 0, B2[0] = A2;
      }, _doFinalize: function() {
        var e4 = this._data, t4 = e4.words, r3 = 8 * this._nDataBytes, n3 = 8 * e4.sigBytes;
        t4[n3 >>> 5] |= 128 << 24 - n3 % 32, t4[14 + (n3 + 64 >>> 9 << 4)] = 16711935 & (r3 << 8 | r3 >>> 24) | 4278255360 & (r3 << 24 | r3 >>> 8), e4.sigBytes = 4 * (t4.length + 1), this._process();
        for (var i3 = this._hash, o3 = i3.words, a3 = 0; a3 < 5; a3++) {
          var s3 = o3[a3];
          o3[a3] = 16711935 & (s3 << 8 | s3 >>> 24) | 4278255360 & (s3 << 24 | s3 >>> 8);
        }
        return i3;
      }, clone: function() {
        var e4 = o2.clone.call(this);
        return e4._hash = this._hash.clone(), e4;
      } });
      function p2(e4, t4, r3) {
        return e4 ^ t4 ^ r3;
      }
      function _2(e4, t4, r3) {
        return e4 & t4 | ~e4 & r3;
      }
      function g2(e4, t4, r3) {
        return (e4 | ~t4) ^ r3;
      }
      function v2(e4, t4, r3) {
        return e4 & r3 | t4 & ~r3;
      }
      function w2(e4, t4, r3) {
        return e4 ^ (t4 | ~r3);
      }
      function b2(e4, t4) {
        return e4 << t4 | e4 >>> 32 - t4;
      }
      t3.RIPEMD160 = o2._createHelper(d2), t3.HmacRIPEMD160 = o2._createHmacHelper(d2);
    }(), r2.RIPEMD160);
  }), Q$1(function(e2, t2) {
    var r2, n2, i2, o2, a2, s2;
    e2.exports = (n2 = (r2 = ee$1).lib, i2 = n2.Base, o2 = r2.enc, a2 = o2.Utf8, s2 = r2.algo, void (s2.HMAC = i2.extend({ init: function(e3, t3) {
      e3 = this._hasher = new e3.init(), "string" == typeof t3 && (t3 = a2.parse(t3));
      var r3 = e3.blockSize, n3 = 4 * r3;
      t3.sigBytes > n3 && (t3 = e3.finalize(t3)), t3.clamp();
      for (var i3 = this._oKey = t3.clone(), o3 = this._iKey = t3.clone(), s3 = i3.words, h2 = o3.words, l2 = 0; l2 < r3; l2++)
        s3[l2] ^= 1549556828, h2[l2] ^= 909522486;
      i3.sigBytes = o3.sigBytes = n3, this.reset();
    }, reset: function() {
      var e3 = this._hasher;
      e3.reset(), e3.update(this._iKey);
    }, update: function(e3) {
      return this._hasher.update(e3), this;
    }, finalize: function(e3) {
      var t3 = this._hasher, r3 = t3.finalize(e3);
      t3.reset();
      var n3 = t3.finalize(this._oKey.clone().concat(r3));
      return n3;
    } })));
  }), Q$1(function(e2, t2) {
    var r2, n2, i2, o2, a2, s2, h2, l2, f2;
    e2.exports = (i2 = (n2 = r2 = ee$1).lib, o2 = i2.Base, a2 = i2.WordArray, s2 = n2.algo, h2 = s2.SHA1, l2 = s2.HMAC, f2 = s2.PBKDF2 = o2.extend({ cfg: o2.extend({ keySize: 4, hasher: h2, iterations: 1 }), init: function(e3) {
      this.cfg = this.cfg.extend(e3);
    }, compute: function(e3, t3) {
      for (var r3 = this.cfg, n3 = l2.create(r3.hasher, e3), i3 = a2.create(), o3 = a2.create([1]), s3 = i3.words, h3 = o3.words, f3 = r3.keySize, c2 = r3.iterations; s3.length < f3; ) {
        var u2 = n3.update(t3).finalize(o3);
        n3.reset();
        for (var d2 = u2.words, p2 = d2.length, _2 = u2, g2 = 1; g2 < c2; g2++) {
          _2 = n3.finalize(_2), n3.reset();
          for (var v2 = _2.words, w2 = 0; w2 < p2; w2++)
            d2[w2] ^= v2[w2];
        }
        i3.concat(u2), h3[0]++;
      }
      return i3.sigBytes = 4 * f3, i3;
    } }), n2.PBKDF2 = function(e3, t3, r3) {
      return f2.create(r3).compute(e3, t3);
    }, r2.PBKDF2);
  }), Q$1(function(e2, t2) {
    var r2, n2, i2, o2, a2, s2, h2, l2;
    e2.exports = (i2 = (n2 = r2 = ee$1).lib, o2 = i2.Base, a2 = i2.WordArray, s2 = n2.algo, h2 = s2.MD5, l2 = s2.EvpKDF = o2.extend({ cfg: o2.extend({ keySize: 4, hasher: h2, iterations: 1 }), init: function(e3) {
      this.cfg = this.cfg.extend(e3);
    }, compute: function(e3, t3) {
      for (var r3 = this.cfg, n3 = r3.hasher.create(), i3 = a2.create(), o3 = i3.words, s3 = r3.keySize, h3 = r3.iterations; o3.length < s3; ) {
        l3 && n3.update(l3);
        var l3 = n3.update(e3).finalize(t3);
        n3.reset();
        for (var f2 = 1; f2 < h3; f2++)
          l3 = n3.finalize(l3), n3.reset();
        i3.concat(l3);
      }
      return i3.sigBytes = 4 * s3, i3;
    } }), n2.EvpKDF = function(e3, t3, r3) {
      return l2.create(r3).compute(e3, t3);
    }, r2.EvpKDF);
  }), Q$1(function(e2, t2) {
    var r2, n2, i2, o2, a2, s2, h2, l2, f2, c2, u2, d2, p2, _2, g2, v2, w2, b2, y2, m2, k2, E2, S2, x2;
    e2.exports = void ((r2 = ee$1).lib.Cipher || (i2 = r2, o2 = i2.lib, a2 = o2.Base, s2 = o2.WordArray, h2 = o2.BufferedBlockAlgorithm, l2 = i2.enc, l2.Utf8, f2 = l2.Base64, c2 = i2.algo, u2 = c2.EvpKDF, d2 = o2.Cipher = h2.extend({ cfg: a2.extend(), createEncryptor: function(e3, t3) {
      return this.create(this._ENC_XFORM_MODE, e3, t3);
    }, createDecryptor: function(e3, t3) {
      return this.create(this._DEC_XFORM_MODE, e3, t3);
    }, init: function(e3, t3, r3) {
      this.cfg = this.cfg.extend(r3), this._xformMode = e3, this._key = t3, this.reset();
    }, reset: function() {
      h2.reset.call(this), this._doReset();
    }, process: function(e3) {
      return this._append(e3), this._process();
    }, finalize: function(e3) {
      e3 && this._append(e3);
      var t3 = this._doFinalize();
      return t3;
    }, keySize: 4, ivSize: 4, _ENC_XFORM_MODE: 1, _DEC_XFORM_MODE: 2, _createHelper: /* @__PURE__ */ function() {
      function e3(e4) {
        return "string" == typeof e4 ? x2 : k2;
      }
      return function(t3) {
        return { encrypt: function(r3, n3, i3) {
          return e3(n3).encrypt(t3, r3, n3, i3);
        }, decrypt: function(r3, n3, i3) {
          return e3(n3).decrypt(t3, r3, n3, i3);
        } };
      };
    }() }), o2.StreamCipher = d2.extend({ _doFinalize: function() {
      var e3 = this._process(true);
      return e3;
    }, blockSize: 1 }), p2 = i2.mode = {}, _2 = o2.BlockCipherMode = a2.extend({ createEncryptor: function(e3, t3) {
      return this.Encryptor.create(e3, t3);
    }, createDecryptor: function(e3, t3) {
      return this.Decryptor.create(e3, t3);
    }, init: function(e3, t3) {
      this._cipher = e3, this._iv = t3;
    } }), g2 = p2.CBC = function() {
      var e3 = _2.extend();
      function t3(e4, t4, r3) {
        var i3 = this._iv;
        if (i3) {
          var o3 = i3;
          this._iv = n2;
        } else
          var o3 = this._prevBlock;
        for (var a3 = 0; a3 < r3; a3++)
          e4[t4 + a3] ^= o3[a3];
      }
      return e3.Encryptor = e3.extend({ processBlock: function(e4, r3) {
        var n3 = this._cipher, i3 = n3.blockSize;
        t3.call(this, e4, r3, i3), n3.encryptBlock(e4, r3), this._prevBlock = e4.slice(r3, r3 + i3);
      } }), e3.Decryptor = e3.extend({ processBlock: function(e4, r3) {
        var n3 = this._cipher, i3 = n3.blockSize, o3 = e4.slice(r3, r3 + i3);
        n3.decryptBlock(e4, r3), t3.call(this, e4, r3, i3), this._prevBlock = o3;
      } }), e3;
    }(), v2 = i2.pad = {}, w2 = v2.Pkcs7 = { pad: function(e3, t3) {
      for (var r3 = 4 * t3, n3 = r3 - e3.sigBytes % r3, i3 = n3 << 24 | n3 << 16 | n3 << 8 | n3, o3 = [], a3 = 0; a3 < n3; a3 += 4)
        o3.push(i3);
      var h3 = s2.create(o3, n3);
      e3.concat(h3);
    }, unpad: function(e3) {
      var t3 = 255 & e3.words[e3.sigBytes - 1 >>> 2];
      e3.sigBytes -= t3;
    } }, o2.BlockCipher = d2.extend({ cfg: d2.cfg.extend({ mode: g2, padding: w2 }), reset: function() {
      d2.reset.call(this);
      var e3 = this.cfg, t3 = e3.iv, r3 = e3.mode;
      if (this._xformMode == this._ENC_XFORM_MODE)
        var n3 = r3.createEncryptor;
      else {
        var n3 = r3.createDecryptor;
        this._minBufferSize = 1;
      }
      this._mode && this._mode.__creator == n3 ? this._mode.init(this, t3 && t3.words) : (this._mode = n3.call(r3, this, t3 && t3.words), this._mode.__creator = n3);
    }, _doProcessBlock: function(e3, t3) {
      this._mode.processBlock(e3, t3);
    }, _doFinalize: function() {
      var e3 = this.cfg.padding;
      if (this._xformMode == this._ENC_XFORM_MODE) {
        e3.pad(this._data, this.blockSize);
        var t3 = this._process(true);
      } else {
        var t3 = this._process(true);
        e3.unpad(t3);
      }
      return t3;
    }, blockSize: 4 }), b2 = o2.CipherParams = a2.extend({ init: function(e3) {
      this.mixIn(e3);
    }, toString: function(e3) {
      return (e3 || this.formatter).stringify(this);
    } }), y2 = i2.format = {}, m2 = y2.OpenSSL = { stringify: function(e3) {
      var t3 = e3.ciphertext, r3 = e3.salt;
      if (r3)
        var n3 = s2.create([1398893684, 1701076831]).concat(r3).concat(t3);
      else
        var n3 = t3;
      return n3.toString(f2);
    }, parse: function(e3) {
      var t3 = f2.parse(e3), r3 = t3.words;
      if (1398893684 == r3[0] && 1701076831 == r3[1]) {
        var n3 = s2.create(r3.slice(2, 4));
        r3.splice(0, 4), t3.sigBytes -= 16;
      }
      return b2.create({ ciphertext: t3, salt: n3 });
    } }, k2 = o2.SerializableCipher = a2.extend({ cfg: a2.extend({ format: m2 }), encrypt: function(e3, t3, r3, n3) {
      n3 = this.cfg.extend(n3);
      var i3 = e3.createEncryptor(r3, n3), o3 = i3.finalize(t3), a3 = i3.cfg;
      return b2.create({ ciphertext: o3, key: r3, iv: a3.iv, algorithm: e3, mode: a3.mode, padding: a3.padding, blockSize: e3.blockSize, formatter: n3.format });
    }, decrypt: function(e3, t3, r3, n3) {
      n3 = this.cfg.extend(n3), t3 = this._parse(t3, n3.format);
      var i3 = e3.createDecryptor(r3, n3).finalize(t3.ciphertext);
      return i3;
    }, _parse: function(e3, t3) {
      return "string" == typeof e3 ? t3.parse(e3, this) : e3;
    } }), E2 = i2.kdf = {}, S2 = E2.OpenSSL = { execute: function(e3, t3, r3, n3) {
      n3 || (n3 = s2.random(8));
      var i3 = u2.create({ keySize: t3 + r3 }).compute(e3, n3), o3 = s2.create(i3.words.slice(t3), 4 * r3);
      return i3.sigBytes = 4 * t3, b2.create({ key: i3, iv: o3, salt: n3 });
    } }, x2 = o2.PasswordBasedCipher = k2.extend({ cfg: k2.cfg.extend({ kdf: S2 }), encrypt: function(e3, t3, r3, n3) {
      var i3 = (n3 = this.cfg.extend(n3)).kdf.execute(r3, e3.keySize, e3.ivSize);
      n3.iv = i3.iv;
      var o3 = k2.encrypt.call(this, e3, t3, i3.key, n3);
      return o3.mixIn(i3), o3;
    }, decrypt: function(e3, t3, r3, n3) {
      n3 = this.cfg.extend(n3), t3 = this._parse(t3, n3.format);
      var i3 = n3.kdf.execute(r3, e3.keySize, e3.ivSize, t3.salt);
      n3.iv = i3.iv;
      var o3 = k2.decrypt.call(this, e3, t3, i3.key, n3);
      return o3;
    } })));
  }), Q$1(function(e2, t2) {
    var r2;
    e2.exports = ((r2 = ee$1).mode.CFB = function() {
      var e3 = r2.lib.BlockCipherMode.extend();
      function t3(e4, t4, r3, n2) {
        var i2 = this._iv;
        if (i2) {
          var o2 = i2.slice(0);
          this._iv = void 0;
        } else
          o2 = this._prevBlock;
        n2.encryptBlock(o2, 0);
        for (var a2 = 0; a2 < r3; a2++)
          e4[t4 + a2] ^= o2[a2];
      }
      return e3.Encryptor = e3.extend({ processBlock: function(e4, r3) {
        var n2 = this._cipher, i2 = n2.blockSize;
        t3.call(this, e4, r3, i2, n2), this._prevBlock = e4.slice(r3, r3 + i2);
      } }), e3.Decryptor = e3.extend({ processBlock: function(e4, r3) {
        var n2 = this._cipher, i2 = n2.blockSize, o2 = e4.slice(r3, r3 + i2);
        t3.call(this, e4, r3, i2, n2), this._prevBlock = o2;
      } }), e3;
    }(), r2.mode.CFB);
  }), Q$1(function(e2, t2) {
    var r2, n2, i2;
    e2.exports = ((r2 = ee$1).mode.CTR = (n2 = r2.lib.BlockCipherMode.extend(), i2 = n2.Encryptor = n2.extend({ processBlock: function(e3, t3) {
      var r3 = this._cipher, n3 = r3.blockSize, i3 = this._iv, o2 = this._counter;
      i3 && (o2 = this._counter = i3.slice(0), this._iv = void 0);
      var a2 = o2.slice(0);
      r3.encryptBlock(a2, 0), o2[n3 - 1] = o2[n3 - 1] + 1 | 0;
      for (var s2 = 0; s2 < n3; s2++)
        e3[t3 + s2] ^= a2[s2];
    } }), n2.Decryptor = i2, n2), r2.mode.CTR);
  }), Q$1(function(e2, t2) {
    var r2;
    e2.exports = ((r2 = ee$1).mode.CTRGladman = function() {
      var e3 = r2.lib.BlockCipherMode.extend();
      function t3(e4) {
        if (255 == (e4 >> 24 & 255)) {
          var t4 = e4 >> 16 & 255, r3 = e4 >> 8 & 255, n3 = 255 & e4;
          255 === t4 ? (t4 = 0, 255 === r3 ? (r3 = 0, 255 === n3 ? n3 = 0 : ++n3) : ++r3) : ++t4, e4 = 0, e4 += t4 << 16, e4 += r3 << 8, e4 += n3;
        } else
          e4 += 1 << 24;
        return e4;
      }
      var n2 = e3.Encryptor = e3.extend({ processBlock: function(e4, r3) {
        var n3 = this._cipher, i2 = n3.blockSize, o2 = this._iv, a2 = this._counter;
        o2 && (a2 = this._counter = o2.slice(0), this._iv = void 0), function(e5) {
          0 === (e5[0] = t3(e5[0])) && (e5[1] = t3(e5[1]));
        }(a2);
        var s2 = a2.slice(0);
        n3.encryptBlock(s2, 0);
        for (var h2 = 0; h2 < i2; h2++)
          e4[r3 + h2] ^= s2[h2];
      } });
      return e3.Decryptor = n2, e3;
    }(), r2.mode.CTRGladman);
  }), Q$1(function(e2, t2) {
    var r2, n2, i2;
    e2.exports = ((r2 = ee$1).mode.OFB = (n2 = r2.lib.BlockCipherMode.extend(), i2 = n2.Encryptor = n2.extend({ processBlock: function(e3, t3) {
      var r3 = this._cipher, n3 = r3.blockSize, i3 = this._iv, o2 = this._keystream;
      i3 && (o2 = this._keystream = i3.slice(0), this._iv = void 0), r3.encryptBlock(o2, 0);
      for (var a2 = 0; a2 < n3; a2++)
        e3[t3 + a2] ^= o2[a2];
    } }), n2.Decryptor = i2, n2), r2.mode.OFB);
  }), Q$1(function(e2, t2) {
    var r2, n2;
    e2.exports = ((r2 = ee$1).mode.ECB = ((n2 = r2.lib.BlockCipherMode.extend()).Encryptor = n2.extend({ processBlock: function(e3, t3) {
      this._cipher.encryptBlock(e3, t3);
    } }), n2.Decryptor = n2.extend({ processBlock: function(e3, t3) {
      this._cipher.decryptBlock(e3, t3);
    } }), n2), r2.mode.ECB);
  }), Q$1(function(e2, t2) {
    var r2;
    e2.exports = ((r2 = ee$1).pad.AnsiX923 = { pad: function(e3, t3) {
      var r3 = e3.sigBytes, n2 = 4 * t3, i2 = n2 - r3 % n2, o2 = r3 + i2 - 1;
      e3.clamp(), e3.words[o2 >>> 2] |= i2 << 24 - o2 % 4 * 8, e3.sigBytes += i2;
    }, unpad: function(e3) {
      var t3 = 255 & e3.words[e3.sigBytes - 1 >>> 2];
      e3.sigBytes -= t3;
    } }, r2.pad.Ansix923);
  }), Q$1(function(e2, t2) {
    var r2;
    e2.exports = ((r2 = ee$1).pad.Iso10126 = { pad: function(e3, t3) {
      var n2 = 4 * t3, i2 = n2 - e3.sigBytes % n2;
      e3.concat(r2.lib.WordArray.random(i2 - 1)).concat(r2.lib.WordArray.create([i2 << 24], 1));
    }, unpad: function(e3) {
      var t3 = 255 & e3.words[e3.sigBytes - 1 >>> 2];
      e3.sigBytes -= t3;
    } }, r2.pad.Iso10126);
  }), Q$1(function(e2, t2) {
    var r2;
    e2.exports = ((r2 = ee$1).pad.Iso97971 = { pad: function(e3, t3) {
      e3.concat(r2.lib.WordArray.create([2147483648], 1)), r2.pad.ZeroPadding.pad(e3, t3);
    }, unpad: function(e3) {
      r2.pad.ZeroPadding.unpad(e3), e3.sigBytes--;
    } }, r2.pad.Iso97971);
  }), Q$1(function(e2, t2) {
    var r2;
    e2.exports = ((r2 = ee$1).pad.ZeroPadding = { pad: function(e3, t3) {
      var r3 = 4 * t3;
      e3.clamp(), e3.sigBytes += r3 - (e3.sigBytes % r3 || r3);
    }, unpad: function(e3) {
      for (var t3 = e3.words, r3 = e3.sigBytes - 1; !(t3[r3 >>> 2] >>> 24 - r3 % 4 * 8 & 255); )
        r3--;
      e3.sigBytes = r3 + 1;
    } }, r2.pad.ZeroPadding);
  }), Q$1(function(e2, t2) {
    var r2;
    e2.exports = ((r2 = ee$1).pad.NoPadding = { pad: function() {
    }, unpad: function() {
    } }, r2.pad.NoPadding);
  }), Q$1(function(e2, t2) {
    var r2, n2, i2, o2;
    e2.exports = (i2 = (n2 = r2 = ee$1).lib.CipherParams, o2 = n2.enc.Hex, n2.format.Hex = { stringify: function(e3) {
      return e3.ciphertext.toString(o2);
    }, parse: function(e3) {
      var t3 = o2.parse(e3);
      return i2.create({ ciphertext: t3 });
    } }, r2.format.Hex);
  }), Q$1(function(e2, t2) {
    var r2;
    e2.exports = (r2 = ee$1, function() {
      var e3 = r2, t3 = e3.lib.BlockCipher, n2 = e3.algo, i2 = [], o2 = [], a2 = [], s2 = [], h2 = [], l2 = [], f2 = [], c2 = [], u2 = [], d2 = [];
      !function() {
        for (var e4 = [], t4 = 0; t4 < 256; t4++)
          e4[t4] = t4 < 128 ? t4 << 1 : t4 << 1 ^ 283;
        var r3 = 0, n3 = 0;
        for (t4 = 0; t4 < 256; t4++) {
          var p3 = n3 ^ n3 << 1 ^ n3 << 2 ^ n3 << 3 ^ n3 << 4;
          p3 = p3 >>> 8 ^ 255 & p3 ^ 99, i2[r3] = p3, o2[p3] = r3;
          var _3 = e4[r3], g2 = e4[_3], v2 = e4[g2], w2 = 257 * e4[p3] ^ 16843008 * p3;
          a2[r3] = w2 << 24 | w2 >>> 8, s2[r3] = w2 << 16 | w2 >>> 16, h2[r3] = w2 << 8 | w2 >>> 24, l2[r3] = w2, w2 = 16843009 * v2 ^ 65537 * g2 ^ 257 * _3 ^ 16843008 * r3, f2[p3] = w2 << 24 | w2 >>> 8, c2[p3] = w2 << 16 | w2 >>> 16, u2[p3] = w2 << 8 | w2 >>> 24, d2[p3] = w2, r3 ? (r3 = _3 ^ e4[e4[e4[v2 ^ _3]]], n3 ^= e4[e4[n3]]) : r3 = n3 = 1;
        }
      }();
      var p2 = [0, 1, 2, 4, 8, 16, 32, 64, 128, 27, 54], _2 = n2.AES = t3.extend({ _doReset: function() {
        if (!this._nRounds || this._keyPriorReset !== this._key) {
          for (var e4 = this._keyPriorReset = this._key, t4 = e4.words, r3 = e4.sigBytes / 4, n3 = 4 * ((this._nRounds = r3 + 6) + 1), o3 = this._keySchedule = [], a3 = 0; a3 < n3; a3++)
            if (a3 < r3)
              o3[a3] = t4[a3];
            else {
              var s3 = o3[a3 - 1];
              a3 % r3 ? r3 > 6 && a3 % r3 == 4 && (s3 = i2[s3 >>> 24] << 24 | i2[s3 >>> 16 & 255] << 16 | i2[s3 >>> 8 & 255] << 8 | i2[255 & s3]) : (s3 = i2[(s3 = s3 << 8 | s3 >>> 24) >>> 24] << 24 | i2[s3 >>> 16 & 255] << 16 | i2[s3 >>> 8 & 255] << 8 | i2[255 & s3], s3 ^= p2[a3 / r3 | 0] << 24), o3[a3] = o3[a3 - r3] ^ s3;
            }
          for (var h3 = this._invKeySchedule = [], l3 = 0; l3 < n3; l3++)
            a3 = n3 - l3, s3 = l3 % 4 ? o3[a3] : o3[a3 - 4], h3[l3] = l3 < 4 || a3 <= 4 ? s3 : f2[i2[s3 >>> 24]] ^ c2[i2[s3 >>> 16 & 255]] ^ u2[i2[s3 >>> 8 & 255]] ^ d2[i2[255 & s3]];
        }
      }, encryptBlock: function(e4, t4) {
        this._doCryptBlock(e4, t4, this._keySchedule, a2, s2, h2, l2, i2);
      }, decryptBlock: function(e4, t4) {
        var r3 = e4[t4 + 1];
        e4[t4 + 1] = e4[t4 + 3], e4[t4 + 3] = r3, this._doCryptBlock(e4, t4, this._invKeySchedule, f2, c2, u2, d2, o2), r3 = e4[t4 + 1], e4[t4 + 1] = e4[t4 + 3], e4[t4 + 3] = r3;
      }, _doCryptBlock: function(e4, t4, r3, n3, i3, o3, a3, s3) {
        for (var h3 = this._nRounds, l3 = e4[t4] ^ r3[0], f3 = e4[t4 + 1] ^ r3[1], c3 = e4[t4 + 2] ^ r3[2], u3 = e4[t4 + 3] ^ r3[3], d3 = 4, p3 = 1; p3 < h3; p3++) {
          var _3 = n3[l3 >>> 24] ^ i3[f3 >>> 16 & 255] ^ o3[c3 >>> 8 & 255] ^ a3[255 & u3] ^ r3[d3++], g2 = n3[f3 >>> 24] ^ i3[c3 >>> 16 & 255] ^ o3[u3 >>> 8 & 255] ^ a3[255 & l3] ^ r3[d3++], v2 = n3[c3 >>> 24] ^ i3[u3 >>> 16 & 255] ^ o3[l3 >>> 8 & 255] ^ a3[255 & f3] ^ r3[d3++], w2 = n3[u3 >>> 24] ^ i3[l3 >>> 16 & 255] ^ o3[f3 >>> 8 & 255] ^ a3[255 & c3] ^ r3[d3++];
          l3 = _3, f3 = g2, c3 = v2, u3 = w2;
        }
        _3 = (s3[l3 >>> 24] << 24 | s3[f3 >>> 16 & 255] << 16 | s3[c3 >>> 8 & 255] << 8 | s3[255 & u3]) ^ r3[d3++], g2 = (s3[f3 >>> 24] << 24 | s3[c3 >>> 16 & 255] << 16 | s3[u3 >>> 8 & 255] << 8 | s3[255 & l3]) ^ r3[d3++], v2 = (s3[c3 >>> 24] << 24 | s3[u3 >>> 16 & 255] << 16 | s3[l3 >>> 8 & 255] << 8 | s3[255 & f3]) ^ r3[d3++], w2 = (s3[u3 >>> 24] << 24 | s3[l3 >>> 16 & 255] << 16 | s3[f3 >>> 8 & 255] << 8 | s3[255 & c3]) ^ r3[d3++], e4[t4] = _3, e4[t4 + 1] = g2, e4[t4 + 2] = v2, e4[t4 + 3] = w2;
      }, keySize: 8 });
      e3.AES = t3._createHelper(_2);
    }(), r2.AES);
  }), Q$1(function(e2, t2) {
    var r2;
    e2.exports = (r2 = ee$1, function() {
      var e3 = r2, t3 = e3.lib, n2 = t3.WordArray, i2 = t3.BlockCipher, o2 = e3.algo, a2 = [57, 49, 41, 33, 25, 17, 9, 1, 58, 50, 42, 34, 26, 18, 10, 2, 59, 51, 43, 35, 27, 19, 11, 3, 60, 52, 44, 36, 63, 55, 47, 39, 31, 23, 15, 7, 62, 54, 46, 38, 30, 22, 14, 6, 61, 53, 45, 37, 29, 21, 13, 5, 28, 20, 12, 4], s2 = [14, 17, 11, 24, 1, 5, 3, 28, 15, 6, 21, 10, 23, 19, 12, 4, 26, 8, 16, 7, 27, 20, 13, 2, 41, 52, 31, 37, 47, 55, 30, 40, 51, 45, 33, 48, 44, 49, 39, 56, 34, 53, 46, 42, 50, 36, 29, 32], h2 = [1, 2, 4, 6, 8, 10, 12, 14, 15, 17, 19, 21, 23, 25, 27, 28], l2 = [{ 0: 8421888, 268435456: 32768, 536870912: 8421378, 805306368: 2, 1073741824: 512, 1342177280: 8421890, 1610612736: 8389122, 1879048192: 8388608, 2147483648: 514, 2415919104: 8389120, 2684354560: 33280, 2952790016: 8421376, 3221225472: 32770, 3489660928: 8388610, 3758096384: 0, 4026531840: 33282, 134217728: 0, 402653184: 8421890, 671088640: 33282, 939524096: 32768, 1207959552: 8421888, 1476395008: 512, 1744830464: 8421378, 2013265920: 2, 2281701376: 8389120, 2550136832: 33280, 2818572288: 8421376, 3087007744: 8389122, 3355443200: 8388610, 3623878656: 32770, 3892314112: 514, 4160749568: 8388608, 1: 32768, 268435457: 2, 536870913: 8421888, 805306369: 8388608, 1073741825: 8421378, 1342177281: 33280, 1610612737: 512, 1879048193: 8389122, 2147483649: 8421890, 2415919105: 8421376, 2684354561: 8388610, 2952790017: 33282, 3221225473: 514, 3489660929: 8389120, 3758096385: 32770, 4026531841: 0, 134217729: 8421890, 402653185: 8421376, 671088641: 8388608, 939524097: 512, 1207959553: 32768, 1476395009: 8388610, 1744830465: 2, 2013265921: 33282, 2281701377: 32770, 2550136833: 8389122, 2818572289: 514, 3087007745: 8421888, 3355443201: 8389120, 3623878657: 0, 3892314113: 33280, 4160749569: 8421378 }, { 0: 1074282512, 16777216: 16384, 33554432: 524288, 50331648: 1074266128, 67108864: 1073741840, 83886080: 1074282496, 100663296: 1073758208, 117440512: 16, 134217728: 540672, 150994944: 1073758224, 167772160: 1073741824, 184549376: 540688, 201326592: 524304, 218103808: 0, 234881024: 16400, 251658240: 1074266112, 8388608: 1073758208, 25165824: 540688, 41943040: 16, 58720256: 1073758224, 75497472: 1074282512, 92274688: 1073741824, 109051904: 524288, 125829120: 1074266128, 142606336: 524304, 159383552: 0, 176160768: 16384, 192937984: 1074266112, 209715200: 1073741840, 226492416: 540672, 243269632: 1074282496, 260046848: 16400, 268435456: 0, 285212672: 1074266128, 301989888: 1073758224, 318767104: 1074282496, 335544320: 1074266112, 352321536: 16, 369098752: 540688, 385875968: 16384, 402653184: 16400, 419430400: 524288, 436207616: 524304, 452984832: 1073741840, 469762048: 540672, 486539264: 1073758208, 503316480: 1073741824, 520093696: 1074282512, 276824064: 540688, 293601280: 524288, 310378496: 1074266112, 327155712: 16384, 343932928: 1073758208, 360710144: 1074282512, 377487360: 16, 394264576: 1073741824, 411041792: 1074282496, 427819008: 1073741840, 444596224: 1073758224, 461373440: 524304, 478150656: 0, 494927872: 16400, 511705088: 1074266128, 528482304: 540672 }, { 0: 260, 1048576: 0, 2097152: 67109120, 3145728: 65796, 4194304: 65540, 5242880: 67108868, 6291456: 67174660, 7340032: 67174400, 8388608: 67108864, 9437184: 67174656, 10485760: 65792, 11534336: 67174404, 12582912: 67109124, 13631488: 65536, 14680064: 4, 15728640: 256, 524288: 67174656, 1572864: 67174404, 2621440: 0, 3670016: 67109120, 4718592: 67108868, 5767168: 65536, 6815744: 65540, 7864320: 260, 8912896: 4, 9961472: 256, 11010048: 67174400, 12058624: 65796, 13107200: 65792, 14155776: 67109124, 15204352: 67174660, 16252928: 67108864, 16777216: 67174656, 17825792: 65540, 18874368: 65536, 19922944: 67109120, 20971520: 256, 22020096: 67174660, 23068672: 67108868, 24117248: 0, 25165824: 67109124, 26214400: 67108864, 27262976: 4, 28311552: 65792, 29360128: 67174400, 30408704: 260, 31457280: 65796, 32505856: 67174404, 17301504: 67108864, 18350080: 260, 19398656: 67174656, 20447232: 0, 21495808: 65540, 22544384: 67109120, 23592960: 256, 24641536: 67174404, 25690112: 65536, 26738688: 67174660, 27787264: 65796, 28835840: 67108868, 29884416: 67109124, 30932992: 67174400, 31981568: 4, 33030144: 65792 }, { 0: 2151682048, 65536: 2147487808, 131072: 4198464, 196608: 2151677952, 262144: 0, 327680: 4198400, 393216: 2147483712, 458752: 4194368, 524288: 2147483648, 589824: 4194304, 655360: 64, 720896: 2147487744, 786432: 2151678016, 851968: 4160, 917504: 4096, 983040: 2151682112, 32768: 2147487808, 98304: 64, 163840: 2151678016, 229376: 2147487744, 294912: 4198400, 360448: 2151682112, 425984: 0, 491520: 2151677952, 557056: 4096, 622592: 2151682048, 688128: 4194304, 753664: 4160, 819200: 2147483648, 884736: 4194368, 950272: 4198464, 1015808: 2147483712, 1048576: 4194368, 1114112: 4198400, 1179648: 2147483712, 1245184: 0, 1310720: 4160, 1376256: 2151678016, 1441792: 2151682048, 1507328: 2147487808, 1572864: 2151682112, 1638400: 2147483648, 1703936: 2151677952, 1769472: 4198464, 1835008: 2147487744, 1900544: 4194304, 1966080: 64, 2031616: 4096, 1081344: 2151677952, 1146880: 2151682112, 1212416: 0, 1277952: 4198400, 1343488: 4194368, 1409024: 2147483648, 1474560: 2147487808, 1540096: 64, 1605632: 2147483712, 1671168: 4096, 1736704: 2147487744, 1802240: 2151678016, 1867776: 4160, 1933312: 2151682048, 1998848: 4194304, 2064384: 4198464 }, { 0: 128, 4096: 17039360, 8192: 262144, 12288: 536870912, 16384: 537133184, 20480: 16777344, 24576: 553648256, 28672: 262272, 32768: 16777216, 36864: 537133056, 40960: 536871040, 45056: 553910400, 49152: 553910272, 53248: 0, 57344: 17039488, 61440: 553648128, 2048: 17039488, 6144: 553648256, 10240: 128, 14336: 17039360, 18432: 262144, 22528: 537133184, 26624: 553910272, 30720: 536870912, 34816: 537133056, 38912: 0, 43008: 553910400, 47104: 16777344, 51200: 536871040, 55296: 553648128, 59392: 16777216, 63488: 262272, 65536: 262144, 69632: 128, 73728: 536870912, 77824: 553648256, 81920: 16777344, 86016: 553910272, 90112: 537133184, 94208: 16777216, 98304: 553910400, 102400: 553648128, 106496: 17039360, 110592: 537133056, 114688: 262272, 118784: 536871040, 122880: 0, 126976: 17039488, 67584: 553648256, 71680: 16777216, 75776: 17039360, 79872: 537133184, 83968: 536870912, 88064: 17039488, 92160: 128, 96256: 553910272, 100352: 262272, 104448: 553910400, 108544: 0, 112640: 553648128, 116736: 16777344, 120832: 262144, 124928: 537133056, 129024: 536871040 }, { 0: 268435464, 256: 8192, 512: 270532608, 768: 270540808, 1024: 268443648, 1280: 2097152, 1536: 2097160, 1792: 268435456, 2048: 0, 2304: 268443656, 2560: 2105344, 2816: 8, 3072: 270532616, 3328: 2105352, 3584: 8200, 3840: 270540800, 128: 270532608, 384: 270540808, 640: 8, 896: 2097152, 1152: 2105352, 1408: 268435464, 1664: 268443648, 1920: 8200, 2176: 2097160, 2432: 8192, 2688: 268443656, 2944: 270532616, 3200: 0, 3456: 270540800, 3712: 2105344, 3968: 268435456, 4096: 268443648, 4352: 270532616, 4608: 270540808, 4864: 8200, 5120: 2097152, 5376: 268435456, 5632: 268435464, 5888: 2105344, 6144: 2105352, 6400: 0, 6656: 8, 6912: 270532608, 7168: 8192, 7424: 268443656, 7680: 270540800, 7936: 2097160, 4224: 8, 4480: 2105344, 4736: 2097152, 4992: 268435464, 5248: 268443648, 5504: 8200, 5760: 270540808, 6016: 270532608, 6272: 270540800, 6528: 270532616, 6784: 8192, 7040: 2105352, 7296: 2097160, 7552: 0, 7808: 268435456, 8064: 268443656 }, { 0: 1048576, 16: 33555457, 32: 1024, 48: 1049601, 64: 34604033, 80: 0, 96: 1, 112: 34603009, 128: 33555456, 144: 1048577, 160: 33554433, 176: 34604032, 192: 34603008, 208: 1025, 224: 1049600, 240: 33554432, 8: 34603009, 24: 0, 40: 33555457, 56: 34604032, 72: 1048576, 88: 33554433, 104: 33554432, 120: 1025, 136: 1049601, 152: 33555456, 168: 34603008, 184: 1048577, 200: 1024, 216: 34604033, 232: 1, 248: 1049600, 256: 33554432, 272: 1048576, 288: 33555457, 304: 34603009, 320: 1048577, 336: 33555456, 352: 34604032, 368: 1049601, 384: 1025, 400: 34604033, 416: 1049600, 432: 1, 448: 0, 464: 34603008, 480: 33554433, 496: 1024, 264: 1049600, 280: 33555457, 296: 34603009, 312: 1, 328: 33554432, 344: 1048576, 360: 1025, 376: 34604032, 392: 33554433, 408: 34603008, 424: 0, 440: 34604033, 456: 1049601, 472: 1024, 488: 33555456, 504: 1048577 }, { 0: 134219808, 1: 131072, 2: 134217728, 3: 32, 4: 131104, 5: 134350880, 6: 134350848, 7: 2048, 8: 134348800, 9: 134219776, 10: 133120, 11: 134348832, 12: 2080, 13: 0, 14: 134217760, 15: 133152, 2147483648: 2048, 2147483649: 134350880, 2147483650: 134219808, 2147483651: 134217728, 2147483652: 134348800, 2147483653: 133120, 2147483654: 133152, 2147483655: 32, 2147483656: 134217760, 2147483657: 2080, 2147483658: 131104, 2147483659: 134350848, 2147483660: 0, 2147483661: 134348832, 2147483662: 134219776, 2147483663: 131072, 16: 133152, 17: 134350848, 18: 32, 19: 2048, 20: 134219776, 21: 134217760, 22: 134348832, 23: 131072, 24: 0, 25: 131104, 26: 134348800, 27: 134219808, 28: 134350880, 29: 133120, 30: 2080, 31: 134217728, 2147483664: 131072, 2147483665: 2048, 2147483666: 134348832, 2147483667: 133152, 2147483668: 32, 2147483669: 134348800, 2147483670: 134217728, 2147483671: 134219808, 2147483672: 134350880, 2147483673: 134217760, 2147483674: 134219776, 2147483675: 0, 2147483676: 133120, 2147483677: 2080, 2147483678: 131104, 2147483679: 134350848 }], f2 = [4160749569, 528482304, 33030144, 2064384, 129024, 8064, 504, 2147483679], c2 = o2.DES = i2.extend({ _doReset: function() {
        for (var e4 = this._key.words, t4 = [], r3 = 0; r3 < 56; r3++) {
          var n3 = a2[r3] - 1;
          t4[r3] = e4[n3 >>> 5] >>> 31 - n3 % 32 & 1;
        }
        for (var i3 = this._subKeys = [], o3 = 0; o3 < 16; o3++) {
          var l3 = i3[o3] = [], f3 = h2[o3];
          for (r3 = 0; r3 < 24; r3++)
            l3[r3 / 6 | 0] |= t4[(s2[r3] - 1 + f3) % 28] << 31 - r3 % 6, l3[4 + (r3 / 6 | 0)] |= t4[28 + (s2[r3 + 24] - 1 + f3) % 28] << 31 - r3 % 6;
          for (l3[0] = l3[0] << 1 | l3[0] >>> 31, r3 = 1; r3 < 7; r3++)
            l3[r3] = l3[r3] >>> 4 * (r3 - 1) + 3;
          l3[7] = l3[7] << 5 | l3[7] >>> 27;
        }
        var c3 = this._invSubKeys = [];
        for (r3 = 0; r3 < 16; r3++)
          c3[r3] = i3[15 - r3];
      }, encryptBlock: function(e4, t4) {
        this._doCryptBlock(e4, t4, this._subKeys);
      }, decryptBlock: function(e4, t4) {
        this._doCryptBlock(e4, t4, this._invSubKeys);
      }, _doCryptBlock: function(e4, t4, r3) {
        this._lBlock = e4[t4], this._rBlock = e4[t4 + 1], u2.call(this, 4, 252645135), u2.call(this, 16, 65535), d2.call(this, 2, 858993459), d2.call(this, 8, 16711935), u2.call(this, 1, 1431655765);
        for (var n3 = 0; n3 < 16; n3++) {
          for (var i3 = r3[n3], o3 = this._lBlock, a3 = this._rBlock, s3 = 0, h3 = 0; h3 < 8; h3++)
            s3 |= l2[h3][((a3 ^ i3[h3]) & f2[h3]) >>> 0];
          this._lBlock = a3, this._rBlock = o3 ^ s3;
        }
        var c3 = this._lBlock;
        this._lBlock = this._rBlock, this._rBlock = c3, u2.call(this, 1, 1431655765), d2.call(this, 8, 16711935), d2.call(this, 2, 858993459), u2.call(this, 16, 65535), u2.call(this, 4, 252645135), e4[t4] = this._lBlock, e4[t4 + 1] = this._rBlock;
      }, keySize: 2, ivSize: 2, blockSize: 2 });
      function u2(e4, t4) {
        var r3 = (this._lBlock >>> e4 ^ this._rBlock) & t4;
        this._rBlock ^= r3, this._lBlock ^= r3 << e4;
      }
      function d2(e4, t4) {
        var r3 = (this._rBlock >>> e4 ^ this._lBlock) & t4;
        this._lBlock ^= r3, this._rBlock ^= r3 << e4;
      }
      e3.DES = i2._createHelper(c2);
      var p2 = o2.TripleDES = i2.extend({ _doReset: function() {
        var e4 = this._key.words;
        this._des1 = c2.createEncryptor(n2.create(e4.slice(0, 2))), this._des2 = c2.createEncryptor(n2.create(e4.slice(2, 4))), this._des3 = c2.createEncryptor(n2.create(e4.slice(4, 6)));
      }, encryptBlock: function(e4, t4) {
        this._des1.encryptBlock(e4, t4), this._des2.decryptBlock(e4, t4), this._des3.encryptBlock(e4, t4);
      }, decryptBlock: function(e4, t4) {
        this._des3.decryptBlock(e4, t4), this._des2.encryptBlock(e4, t4), this._des1.decryptBlock(e4, t4);
      }, keySize: 6, ivSize: 2, blockSize: 2 });
      e3.TripleDES = i2._createHelper(p2);
    }(), r2.TripleDES);
  }), Q$1(function(e2, t2) {
    var r2;
    e2.exports = (r2 = ee$1, function() {
      var e3 = r2, t3 = e3.lib.StreamCipher, n2 = e3.algo, i2 = n2.RC4 = t3.extend({ _doReset: function() {
        for (var e4 = this._key, t4 = e4.words, r3 = e4.sigBytes, n3 = this._S = [], i3 = 0; i3 < 256; i3++)
          n3[i3] = i3;
        i3 = 0;
        for (var o3 = 0; i3 < 256; i3++) {
          var a3 = i3 % r3, s2 = t4[a3 >>> 2] >>> 24 - a3 % 4 * 8 & 255;
          o3 = (o3 + n3[i3] + s2) % 256;
          var h2 = n3[i3];
          n3[i3] = n3[o3], n3[o3] = h2;
        }
        this._i = this._j = 0;
      }, _doProcessBlock: function(e4, t4) {
        e4[t4] ^= o2.call(this);
      }, keySize: 8, ivSize: 0 });
      function o2() {
        for (var e4 = this._S, t4 = this._i, r3 = this._j, n3 = 0, i3 = 0; i3 < 4; i3++) {
          r3 = (r3 + e4[t4 = (t4 + 1) % 256]) % 256;
          var o3 = e4[t4];
          e4[t4] = e4[r3], e4[r3] = o3, n3 |= e4[(e4[t4] + e4[r3]) % 256] << 24 - 8 * i3;
        }
        return this._i = t4, this._j = r3, n3;
      }
      e3.RC4 = t3._createHelper(i2);
      var a2 = n2.RC4Drop = i2.extend({ cfg: i2.cfg.extend({ drop: 192 }), _doReset: function() {
        i2._doReset.call(this);
        for (var e4 = this.cfg.drop; e4 > 0; e4--)
          o2.call(this);
      } });
      e3.RC4Drop = t3._createHelper(a2);
    }(), r2.RC4);
  }), Q$1(function(e2, t2) {
    var r2;
    e2.exports = (r2 = ee$1, function() {
      var e3 = r2, t3 = e3.lib.StreamCipher, n2 = e3.algo, i2 = [], o2 = [], a2 = [], s2 = n2.Rabbit = t3.extend({ _doReset: function() {
        for (var e4 = this._key.words, t4 = this.cfg.iv, r3 = 0; r3 < 4; r3++)
          e4[r3] = 16711935 & (e4[r3] << 8 | e4[r3] >>> 24) | 4278255360 & (e4[r3] << 24 | e4[r3] >>> 8);
        var n3 = this._X = [e4[0], e4[3] << 16 | e4[2] >>> 16, e4[1], e4[0] << 16 | e4[3] >>> 16, e4[2], e4[1] << 16 | e4[0] >>> 16, e4[3], e4[2] << 16 | e4[1] >>> 16], i3 = this._C = [e4[2] << 16 | e4[2] >>> 16, 4294901760 & e4[0] | 65535 & e4[1], e4[3] << 16 | e4[3] >>> 16, 4294901760 & e4[1] | 65535 & e4[2], e4[0] << 16 | e4[0] >>> 16, 4294901760 & e4[2] | 65535 & e4[3], e4[1] << 16 | e4[1] >>> 16, 4294901760 & e4[3] | 65535 & e4[0]];
        for (this._b = 0, r3 = 0; r3 < 4; r3++)
          h2.call(this);
        for (r3 = 0; r3 < 8; r3++)
          i3[r3] ^= n3[r3 + 4 & 7];
        if (t4) {
          var o3 = t4.words, a3 = o3[0], s3 = o3[1], l2 = 16711935 & (a3 << 8 | a3 >>> 24) | 4278255360 & (a3 << 24 | a3 >>> 8), f2 = 16711935 & (s3 << 8 | s3 >>> 24) | 4278255360 & (s3 << 24 | s3 >>> 8), c2 = l2 >>> 16 | 4294901760 & f2, u2 = f2 << 16 | 65535 & l2;
          for (i3[0] ^= l2, i3[1] ^= c2, i3[2] ^= f2, i3[3] ^= u2, i3[4] ^= l2, i3[5] ^= c2, i3[6] ^= f2, i3[7] ^= u2, r3 = 0; r3 < 4; r3++)
            h2.call(this);
        }
      }, _doProcessBlock: function(e4, t4) {
        var r3 = this._X;
        h2.call(this), i2[0] = r3[0] ^ r3[5] >>> 16 ^ r3[3] << 16, i2[1] = r3[2] ^ r3[7] >>> 16 ^ r3[5] << 16, i2[2] = r3[4] ^ r3[1] >>> 16 ^ r3[7] << 16, i2[3] = r3[6] ^ r3[3] >>> 16 ^ r3[1] << 16;
        for (var n3 = 0; n3 < 4; n3++)
          i2[n3] = 16711935 & (i2[n3] << 8 | i2[n3] >>> 24) | 4278255360 & (i2[n3] << 24 | i2[n3] >>> 8), e4[t4 + n3] ^= i2[n3];
      }, blockSize: 4, ivSize: 2 });
      function h2() {
        for (var e4 = this._X, t4 = this._C, r3 = 0; r3 < 8; r3++)
          o2[r3] = t4[r3];
        for (t4[0] = t4[0] + 1295307597 + this._b | 0, t4[1] = t4[1] + 3545052371 + (t4[0] >>> 0 < o2[0] >>> 0 ? 1 : 0) | 0, t4[2] = t4[2] + 886263092 + (t4[1] >>> 0 < o2[1] >>> 0 ? 1 : 0) | 0, t4[3] = t4[3] + 1295307597 + (t4[2] >>> 0 < o2[2] >>> 0 ? 1 : 0) | 0, t4[4] = t4[4] + 3545052371 + (t4[3] >>> 0 < o2[3] >>> 0 ? 1 : 0) | 0, t4[5] = t4[5] + 886263092 + (t4[4] >>> 0 < o2[4] >>> 0 ? 1 : 0) | 0, t4[6] = t4[6] + 1295307597 + (t4[5] >>> 0 < o2[5] >>> 0 ? 1 : 0) | 0, t4[7] = t4[7] + 3545052371 + (t4[6] >>> 0 < o2[6] >>> 0 ? 1 : 0) | 0, this._b = t4[7] >>> 0 < o2[7] >>> 0 ? 1 : 0, r3 = 0; r3 < 8; r3++) {
          var n3 = e4[r3] + t4[r3], i3 = 65535 & n3, s3 = n3 >>> 16, h3 = ((i3 * i3 >>> 17) + i3 * s3 >>> 15) + s3 * s3, l2 = ((4294901760 & n3) * n3 | 0) + ((65535 & n3) * n3 | 0);
          a2[r3] = h3 ^ l2;
        }
        e4[0] = a2[0] + (a2[7] << 16 | a2[7] >>> 16) + (a2[6] << 16 | a2[6] >>> 16) | 0, e4[1] = a2[1] + (a2[0] << 8 | a2[0] >>> 24) + a2[7] | 0, e4[2] = a2[2] + (a2[1] << 16 | a2[1] >>> 16) + (a2[0] << 16 | a2[0] >>> 16) | 0, e4[3] = a2[3] + (a2[2] << 8 | a2[2] >>> 24) + a2[1] | 0, e4[4] = a2[4] + (a2[3] << 16 | a2[3] >>> 16) + (a2[2] << 16 | a2[2] >>> 16) | 0, e4[5] = a2[5] + (a2[4] << 8 | a2[4] >>> 24) + a2[3] | 0, e4[6] = a2[6] + (a2[5] << 16 | a2[5] >>> 16) + (a2[4] << 16 | a2[4] >>> 16) | 0, e4[7] = a2[7] + (a2[6] << 8 | a2[6] >>> 24) + a2[5] | 0;
      }
      e3.Rabbit = t3._createHelper(s2);
    }(), r2.Rabbit);
  }), Q$1(function(e2, t2) {
    var r2;
    e2.exports = (r2 = ee$1, function() {
      var e3 = r2, t3 = e3.lib.StreamCipher, n2 = e3.algo, i2 = [], o2 = [], a2 = [], s2 = n2.RabbitLegacy = t3.extend({ _doReset: function() {
        var e4 = this._key.words, t4 = this.cfg.iv, r3 = this._X = [e4[0], e4[3] << 16 | e4[2] >>> 16, e4[1], e4[0] << 16 | e4[3] >>> 16, e4[2], e4[1] << 16 | e4[0] >>> 16, e4[3], e4[2] << 16 | e4[1] >>> 16], n3 = this._C = [e4[2] << 16 | e4[2] >>> 16, 4294901760 & e4[0] | 65535 & e4[1], e4[3] << 16 | e4[3] >>> 16, 4294901760 & e4[1] | 65535 & e4[2], e4[0] << 16 | e4[0] >>> 16, 4294901760 & e4[2] | 65535 & e4[3], e4[1] << 16 | e4[1] >>> 16, 4294901760 & e4[3] | 65535 & e4[0]];
        this._b = 0;
        for (var i3 = 0; i3 < 4; i3++)
          h2.call(this);
        for (i3 = 0; i3 < 8; i3++)
          n3[i3] ^= r3[i3 + 4 & 7];
        if (t4) {
          var o3 = t4.words, a3 = o3[0], s3 = o3[1], l2 = 16711935 & (a3 << 8 | a3 >>> 24) | 4278255360 & (a3 << 24 | a3 >>> 8), f2 = 16711935 & (s3 << 8 | s3 >>> 24) | 4278255360 & (s3 << 24 | s3 >>> 8), c2 = l2 >>> 16 | 4294901760 & f2, u2 = f2 << 16 | 65535 & l2;
          for (n3[0] ^= l2, n3[1] ^= c2, n3[2] ^= f2, n3[3] ^= u2, n3[4] ^= l2, n3[5] ^= c2, n3[6] ^= f2, n3[7] ^= u2, i3 = 0; i3 < 4; i3++)
            h2.call(this);
        }
      }, _doProcessBlock: function(e4, t4) {
        var r3 = this._X;
        h2.call(this), i2[0] = r3[0] ^ r3[5] >>> 16 ^ r3[3] << 16, i2[1] = r3[2] ^ r3[7] >>> 16 ^ r3[5] << 16, i2[2] = r3[4] ^ r3[1] >>> 16 ^ r3[7] << 16, i2[3] = r3[6] ^ r3[3] >>> 16 ^ r3[1] << 16;
        for (var n3 = 0; n3 < 4; n3++)
          i2[n3] = 16711935 & (i2[n3] << 8 | i2[n3] >>> 24) | 4278255360 & (i2[n3] << 24 | i2[n3] >>> 8), e4[t4 + n3] ^= i2[n3];
      }, blockSize: 4, ivSize: 2 });
      function h2() {
        for (var e4 = this._X, t4 = this._C, r3 = 0; r3 < 8; r3++)
          o2[r3] = t4[r3];
        for (t4[0] = t4[0] + 1295307597 + this._b | 0, t4[1] = t4[1] + 3545052371 + (t4[0] >>> 0 < o2[0] >>> 0 ? 1 : 0) | 0, t4[2] = t4[2] + 886263092 + (t4[1] >>> 0 < o2[1] >>> 0 ? 1 : 0) | 0, t4[3] = t4[3] + 1295307597 + (t4[2] >>> 0 < o2[2] >>> 0 ? 1 : 0) | 0, t4[4] = t4[4] + 3545052371 + (t4[3] >>> 0 < o2[3] >>> 0 ? 1 : 0) | 0, t4[5] = t4[5] + 886263092 + (t4[4] >>> 0 < o2[4] >>> 0 ? 1 : 0) | 0, t4[6] = t4[6] + 1295307597 + (t4[5] >>> 0 < o2[5] >>> 0 ? 1 : 0) | 0, t4[7] = t4[7] + 3545052371 + (t4[6] >>> 0 < o2[6] >>> 0 ? 1 : 0) | 0, this._b = t4[7] >>> 0 < o2[7] >>> 0 ? 1 : 0, r3 = 0; r3 < 8; r3++) {
          var n3 = e4[r3] + t4[r3], i3 = 65535 & n3, s3 = n3 >>> 16, h3 = ((i3 * i3 >>> 17) + i3 * s3 >>> 15) + s3 * s3, l2 = ((4294901760 & n3) * n3 | 0) + ((65535 & n3) * n3 | 0);
          a2[r3] = h3 ^ l2;
        }
        e4[0] = a2[0] + (a2[7] << 16 | a2[7] >>> 16) + (a2[6] << 16 | a2[6] >>> 16) | 0, e4[1] = a2[1] + (a2[0] << 8 | a2[0] >>> 24) + a2[7] | 0, e4[2] = a2[2] + (a2[1] << 16 | a2[1] >>> 16) + (a2[0] << 16 | a2[0] >>> 16) | 0, e4[3] = a2[3] + (a2[2] << 8 | a2[2] >>> 24) + a2[1] | 0, e4[4] = a2[4] + (a2[3] << 16 | a2[3] >>> 16) + (a2[2] << 16 | a2[2] >>> 16) | 0, e4[5] = a2[5] + (a2[4] << 8 | a2[4] >>> 24) + a2[3] | 0, e4[6] = a2[6] + (a2[5] << 16 | a2[5] >>> 16) + (a2[4] << 16 | a2[4] >>> 16) | 0, e4[7] = a2[7] + (a2[6] << 8 | a2[6] >>> 24) + a2[5] | 0;
      }
      e3.RabbitLegacy = t3._createHelper(s2);
    }(), r2.RabbitLegacy);
  }), Q$1(function(e2, t2) {
    e2.exports = ee$1;
  }));
  function re$1() {
    throw new Error("setTimeout has not been defined");
  }
  function ne$1() {
    throw new Error("clearTimeout has not been defined");
  }
  var ie$1 = re$1, oe$1 = ne$1;
  function ae$1(e2) {
    if (ie$1 === setTimeout)
      return setTimeout(e2, 0);
    if ((ie$1 === re$1 || !ie$1) && setTimeout)
      return ie$1 = setTimeout, setTimeout(e2, 0);
    try {
      return ie$1(e2, 0);
    } catch (t2) {
      try {
        return ie$1.call(null, e2, 0);
      } catch (t3) {
        return ie$1.call(this, e2, 0);
      }
    }
  }
  "function" == typeof e$2.setTimeout && (ie$1 = setTimeout), "function" == typeof e$2.clearTimeout && (oe$1 = clearTimeout);
  var se$1, he$1 = [], le$1 = false, fe$1 = -1;
  function ce$1() {
    le$1 && se$1 && (le$1 = false, se$1.length ? he$1 = se$1.concat(he$1) : fe$1 = -1, he$1.length && ue$1());
  }
  function ue$1() {
    if (!le$1) {
      var e2 = ae$1(ce$1);
      le$1 = true;
      for (var t2 = he$1.length; t2; ) {
        for (se$1 = he$1, he$1 = []; ++fe$1 < t2; )
          se$1 && se$1[fe$1].run();
        fe$1 = -1, t2 = he$1.length;
      }
      se$1 = null, le$1 = false, function(e3) {
        if (oe$1 === clearTimeout)
          return clearTimeout(e3);
        if ((oe$1 === ne$1 || !oe$1) && clearTimeout)
          return oe$1 = clearTimeout, clearTimeout(e3);
        try {
          oe$1(e3);
        } catch (t3) {
          try {
            return oe$1.call(null, e3);
          } catch (t4) {
            return oe$1.call(this, e3);
          }
        }
      }(e2);
    }
  }
  function de$1(e2) {
    var t2 = new Array(arguments.length - 1);
    if (arguments.length > 1)
      for (var r2 = 1; r2 < arguments.length; r2++)
        t2[r2 - 1] = arguments[r2];
    he$1.push(new pe$1(e2, t2)), 1 !== he$1.length || le$1 || ae$1(ue$1);
  }
  function pe$1(e2, t2) {
    this.fun = e2, this.array = t2;
  }
  pe$1.prototype.run = function() {
    this.fun.apply(null, this.array);
  };
  var _e$1 = e$2.performance || {};
  _e$1.now || _e$1.mozNow || _e$1.msNow || _e$1.oNow || _e$1.webkitNow;
  function ge$1() {
  }
  function ve$1() {
    ve$1.init.call(this);
  }
  function we$1(e2) {
    return void 0 === e2._maxListeners ? ve$1.defaultMaxListeners : e2._maxListeners;
  }
  function be$1(e2, t2, r2) {
    if (t2)
      e2.call(r2);
    else
      for (var n2 = e2.length, i2 = Ae$1(e2, n2), o2 = 0; o2 < n2; ++o2)
        i2[o2].call(r2);
  }
  function ye$1(e2, t2, r2, n2) {
    if (t2)
      e2.call(r2, n2);
    else
      for (var i2 = e2.length, o2 = Ae$1(e2, i2), a2 = 0; a2 < i2; ++a2)
        o2[a2].call(r2, n2);
  }
  function me$1(e2, t2, r2, n2, i2) {
    if (t2)
      e2.call(r2, n2, i2);
    else
      for (var o2 = e2.length, a2 = Ae$1(e2, o2), s2 = 0; s2 < o2; ++s2)
        a2[s2].call(r2, n2, i2);
  }
  function ke$1(e2, t2, r2, n2, i2, o2) {
    if (t2)
      e2.call(r2, n2, i2, o2);
    else
      for (var a2 = e2.length, s2 = Ae$1(e2, a2), h2 = 0; h2 < a2; ++h2)
        s2[h2].call(r2, n2, i2, o2);
  }
  function Ee$1(e2, t2, r2, n2) {
    if (t2)
      e2.apply(r2, n2);
    else
      for (var i2 = e2.length, o2 = Ae$1(e2, i2), a2 = 0; a2 < i2; ++a2)
        o2[a2].apply(r2, n2);
  }
  function Se$1(e2, t2, r2, n2) {
    var i2, o2, a2, s2;
    if ("function" != typeof r2)
      throw new TypeError('"listener" argument must be a function');
    if ((o2 = e2._events) ? (o2.newListener && (e2.emit("newListener", t2, r2.listener ? r2.listener : r2), o2 = e2._events), a2 = o2[t2]) : (o2 = e2._events = new ge$1(), e2._eventsCount = 0), a2) {
      if ("function" == typeof a2 ? a2 = o2[t2] = n2 ? [r2, a2] : [a2, r2] : n2 ? a2.unshift(r2) : a2.push(r2), !a2.warned && (i2 = we$1(e2)) && i2 > 0 && a2.length > i2) {
        a2.warned = true;
        var h2 = new Error("Possible EventEmitter memory leak detected. " + a2.length + " " + t2 + " listeners added. Use emitter.setMaxListeners() to increase limit");
        h2.name = "MaxListenersExceededWarning", h2.emitter = e2, h2.type = t2, h2.count = a2.length, s2 = h2, "function" == typeof console.warn ? formatAppLog("warn", "at TUIKit/debug/lib-generate-test-usersig-es.min.js:2", s2) : formatAppLog("log", "at TUIKit/debug/lib-generate-test-usersig-es.min.js:2", s2);
      }
    } else
      a2 = o2[t2] = r2, ++e2._eventsCount;
    return e2;
  }
  function xe$1(e2, t2, r2) {
    var n2 = false;
    function i2() {
      e2.removeListener(t2, i2), n2 || (n2 = true, r2.apply(e2, arguments));
    }
    return i2.listener = r2, i2;
  }
  function Re$1(e2) {
    var t2 = this._events;
    if (t2) {
      var r2 = t2[e2];
      if ("function" == typeof r2)
        return 1;
      if (r2)
        return r2.length;
    }
    return 0;
  }
  function Ae$1(e2, t2) {
    for (var r2 = new Array(t2); t2--; )
      r2[t2] = e2[t2];
    return r2;
  }
  ge$1.prototype = /* @__PURE__ */ Object.create(null), ve$1.EventEmitter = ve$1, ve$1.usingDomains = false, ve$1.prototype.domain = void 0, ve$1.prototype._events = void 0, ve$1.prototype._maxListeners = void 0, ve$1.defaultMaxListeners = 10, ve$1.init = function() {
    this.domain = null, ve$1.usingDomains && (void 0).active && (void 0).Domain, this._events && this._events !== Object.getPrototypeOf(this)._events || (this._events = new ge$1(), this._eventsCount = 0), this._maxListeners = this._maxListeners || void 0;
  }, ve$1.prototype.setMaxListeners = function(e2) {
    if ("number" != typeof e2 || e2 < 0 || isNaN(e2))
      throw new TypeError('"n" argument must be a positive number');
    return this._maxListeners = e2, this;
  }, ve$1.prototype.getMaxListeners = function() {
    return we$1(this);
  }, ve$1.prototype.emit = function(e2) {
    var t2, r2, n2, i2, o2, a2, s2, h2 = "error" === e2;
    if (a2 = this._events)
      h2 = h2 && null == a2.error;
    else if (!h2)
      return false;
    if (s2 = this.domain, h2) {
      if (t2 = arguments[1], !s2) {
        if (t2 instanceof Error)
          throw t2;
        var l2 = new Error('Uncaught, unspecified "error" event. (' + t2 + ")");
        throw l2.context = t2, l2;
      }
      return t2 || (t2 = new Error('Uncaught, unspecified "error" event')), t2.domainEmitter = this, t2.domain = s2, t2.domainThrown = false, s2.emit("error", t2), false;
    }
    if (!(r2 = a2[e2]))
      return false;
    var f2 = "function" == typeof r2;
    switch (n2 = arguments.length) {
      case 1:
        be$1(r2, f2, this);
        break;
      case 2:
        ye$1(r2, f2, this, arguments[1]);
        break;
      case 3:
        me$1(r2, f2, this, arguments[1], arguments[2]);
        break;
      case 4:
        ke$1(r2, f2, this, arguments[1], arguments[2], arguments[3]);
        break;
      default:
        for (i2 = new Array(n2 - 1), o2 = 1; o2 < n2; o2++)
          i2[o2 - 1] = arguments[o2];
        Ee$1(r2, f2, this, i2);
    }
    return true;
  }, ve$1.prototype.addListener = function(e2, t2) {
    return Se$1(this, e2, t2, false);
  }, ve$1.prototype.on = ve$1.prototype.addListener, ve$1.prototype.prependListener = function(e2, t2) {
    return Se$1(this, e2, t2, true);
  }, ve$1.prototype.once = function(e2, t2) {
    if ("function" != typeof t2)
      throw new TypeError('"listener" argument must be a function');
    return this.on(e2, xe$1(this, e2, t2)), this;
  }, ve$1.prototype.prependOnceListener = function(e2, t2) {
    if ("function" != typeof t2)
      throw new TypeError('"listener" argument must be a function');
    return this.prependListener(e2, xe$1(this, e2, t2)), this;
  }, ve$1.prototype.removeListener = function(e2, t2) {
    var r2, n2, i2, o2, a2;
    if ("function" != typeof t2)
      throw new TypeError('"listener" argument must be a function');
    if (!(n2 = this._events))
      return this;
    if (!(r2 = n2[e2]))
      return this;
    if (r2 === t2 || r2.listener && r2.listener === t2)
      0 == --this._eventsCount ? this._events = new ge$1() : (delete n2[e2], n2.removeListener && this.emit("removeListener", e2, r2.listener || t2));
    else if ("function" != typeof r2) {
      for (i2 = -1, o2 = r2.length; o2-- > 0; )
        if (r2[o2] === t2 || r2[o2].listener && r2[o2].listener === t2) {
          a2 = r2[o2].listener, i2 = o2;
          break;
        }
      if (i2 < 0)
        return this;
      if (1 === r2.length) {
        if (r2[0] = void 0, 0 == --this._eventsCount)
          return this._events = new ge$1(), this;
        delete n2[e2];
      } else
        !function(e3, t3) {
          for (var r3 = t3, n3 = r3 + 1, i3 = e3.length; n3 < i3; r3 += 1, n3 += 1)
            e3[r3] = e3[n3];
          e3.pop();
        }(r2, i2);
      n2.removeListener && this.emit("removeListener", e2, a2 || t2);
    }
    return this;
  }, ve$1.prototype.removeAllListeners = function(e2) {
    var t2, r2;
    if (!(r2 = this._events))
      return this;
    if (!r2.removeListener)
      return 0 === arguments.length ? (this._events = new ge$1(), this._eventsCount = 0) : r2[e2] && (0 == --this._eventsCount ? this._events = new ge$1() : delete r2[e2]), this;
    if (0 === arguments.length) {
      for (var n2, i2 = Object.keys(r2), o2 = 0; o2 < i2.length; ++o2)
        "removeListener" !== (n2 = i2[o2]) && this.removeAllListeners(n2);
      return this.removeAllListeners("removeListener"), this._events = new ge$1(), this._eventsCount = 0, this;
    }
    if ("function" == typeof (t2 = r2[e2]))
      this.removeListener(e2, t2);
    else if (t2)
      do {
        this.removeListener(e2, t2[t2.length - 1]);
      } while (t2[0]);
    return this;
  }, ve$1.prototype.listeners = function(e2) {
    var t2, r2 = this._events;
    return r2 && (t2 = r2[e2]) ? "function" == typeof t2 ? [t2.listener || t2] : function(e3) {
      for (var t3 = new Array(e3.length), r3 = 0; r3 < t3.length; ++r3)
        t3[r3] = e3[r3].listener || e3[r3];
      return t3;
    }(t2) : [];
  }, ve$1.listenerCount = function(e2, t2) {
    return "function" == typeof e2.listenerCount ? e2.listenerCount(t2) : Re$1.call(e2, t2);
  }, ve$1.prototype.listenerCount = Re$1, ve$1.prototype.eventNames = function() {
    return this._eventsCount > 0 ? Reflect.ownKeys(this._events) : [];
  };
  var Be$1 = "function" == typeof Object.create ? function(e2, t2) {
    e2.super_ = t2, e2.prototype = Object.create(t2.prototype, { constructor: { value: e2, enumerable: false, writable: true, configurable: true } });
  } : function(e2, t2) {
    e2.super_ = t2;
    var r2 = function() {
    };
    r2.prototype = t2.prototype, e2.prototype = new r2(), e2.prototype.constructor = e2;
  }, ze$1 = /%[sdj%]/g;
  function Le$1(e2) {
    if (!Ze$1(e2)) {
      for (var t2 = [], r2 = 0; r2 < arguments.length; r2++)
        t2.push(De$1(arguments[r2]));
      return t2.join(" ");
    }
    r2 = 1;
    for (var n2 = arguments, i2 = n2.length, o2 = String(e2).replace(ze$1, function(e3) {
      if ("%%" === e3)
        return "%";
      if (r2 >= i2)
        return e3;
      switch (e3) {
        case "%s":
          return String(n2[r2++]);
        case "%d":
          return Number(n2[r2++]);
        case "%j":
          try {
            return JSON.stringify(n2[r2++]);
          } catch (e4) {
            return "[Circular]";
          }
        default:
          return e3;
      }
    }), a2 = n2[r2]; r2 < i2; a2 = n2[++r2])
      Ne$1(a2) || !Ye$1(a2) ? o2 += " " + a2 : o2 += " " + De$1(a2);
    return o2;
  }
  function Te$1(t2, r2) {
    if (je$1(e$2.process))
      return function() {
        return Te$1(t2, r2).apply(this, arguments);
      };
    var n2 = false;
    return function() {
      return n2 || (formatAppLog("error", "at TUIKit/debug/lib-generate-test-usersig-es.min.js:2", r2), n2 = true), t2.apply(this, arguments);
    };
  }
  var Me$1, Ce$1 = {};
  function De$1(e2, t2) {
    var r2 = { seen: [], stylize: Pe$1 };
    return arguments.length >= 3 && (r2.depth = arguments[2]), arguments.length >= 4 && (r2.colors = arguments[3]), Fe$1(t2) ? r2.showHidden = t2 : t2 && function(e3, t3) {
      if (!t3 || !Ye$1(t3))
        return e3;
      var r3 = Object.keys(t3), n2 = r3.length;
      for (; n2--; )
        e3[r3[n2]] = t3[r3[n2]];
    }(r2, t2), je$1(r2.showHidden) && (r2.showHidden = false), je$1(r2.depth) && (r2.depth = 2), je$1(r2.colors) && (r2.colors = false), je$1(r2.customInspect) && (r2.customInspect = true), r2.colors && (r2.stylize = Ie$1), Oe$1(r2, e2, r2.depth);
  }
  function Ie$1(e2, t2) {
    var r2 = De$1.styles[t2];
    return r2 ? "\x1B[" + De$1.colors[r2][0] + "m" + e2 + "\x1B[" + De$1.colors[r2][1] + "m" : e2;
  }
  function Pe$1(e2, t2) {
    return e2;
  }
  function Oe$1(e2, t2, r2) {
    if (e2.customInspect && t2 && qe$1(t2.inspect) && t2.inspect !== De$1 && (!t2.constructor || t2.constructor.prototype !== t2)) {
      var n2 = t2.inspect(r2, e2);
      return Ze$1(n2) || (n2 = Oe$1(e2, n2, r2)), n2;
    }
    var i2 = function(e3, t3) {
      if (je$1(t3))
        return e3.stylize("undefined", "undefined");
      if (Ze$1(t3)) {
        var r3 = "'" + JSON.stringify(t3).replace(/^"|"$/g, "").replace(/'/g, "\\'").replace(/\\"/g, '"') + "'";
        return e3.stylize(r3, "string");
      }
      if (n3 = t3, "number" == typeof n3)
        return e3.stylize("" + t3, "number");
      var n3;
      if (Fe$1(t3))
        return e3.stylize("" + t3, "boolean");
      if (Ne$1(t3))
        return e3.stylize("null", "null");
    }(e2, t2);
    if (i2)
      return i2;
    var o2 = Object.keys(t2), a2 = function(e3) {
      var t3 = {};
      return e3.forEach(function(e4, r3) {
        t3[e4] = true;
      }), t3;
    }(o2);
    if (e2.showHidden && (o2 = Object.getOwnPropertyNames(t2)), Xe$1(t2) && (o2.indexOf("message") >= 0 || o2.indexOf("description") >= 0))
      return Ue$1(t2);
    if (0 === o2.length) {
      if (qe$1(t2)) {
        var s2 = t2.name ? ": " + t2.name : "";
        return e2.stylize("[Function" + s2 + "]", "special");
      }
      if (We$1(t2))
        return e2.stylize(RegExp.prototype.toString.call(t2), "regexp");
      if (Ke$1(t2))
        return e2.stylize(Date.prototype.toString.call(t2), "date");
      if (Xe$1(t2))
        return Ue$1(t2);
    }
    var h2, l2, f2 = "", c2 = false, u2 = ["{", "}"];
    (h2 = t2, Array.isArray(h2) && (c2 = true, u2 = ["[", "]"]), qe$1(t2)) && (f2 = " [Function" + (t2.name ? ": " + t2.name : "") + "]");
    return We$1(t2) && (f2 = " " + RegExp.prototype.toString.call(t2)), Ke$1(t2) && (f2 = " " + Date.prototype.toUTCString.call(t2)), Xe$1(t2) && (f2 = " " + Ue$1(t2)), 0 !== o2.length || c2 && 0 != t2.length ? r2 < 0 ? We$1(t2) ? e2.stylize(RegExp.prototype.toString.call(t2), "regexp") : e2.stylize("[Object]", "special") : (e2.seen.push(t2), l2 = c2 ? function(e3, t3, r3, n3, i3) {
      for (var o3 = [], a3 = 0, s3 = t3.length; a3 < s3; ++a3)
        Ge$1(t3, String(a3)) ? o3.push(He$1(e3, t3, r3, n3, String(a3), true)) : o3.push("");
      return i3.forEach(function(i4) {
        i4.match(/^\d+$/) || o3.push(He$1(e3, t3, r3, n3, i4, true));
      }), o3;
    }(e2, t2, r2, a2, o2) : o2.map(function(n3) {
      return He$1(e2, t2, r2, a2, n3, c2);
    }), e2.seen.pop(), function(e3, t3, r3) {
      if (e3.reduce(function(e4, t4) {
        return t4.indexOf("\n"), e4 + t4.replace(/\u001b\[\d\d?m/g, "").length + 1;
      }, 0) > 60)
        return r3[0] + ("" === t3 ? "" : t3 + "\n ") + " " + e3.join(",\n  ") + " " + r3[1];
      return r3[0] + t3 + " " + e3.join(", ") + " " + r3[1];
    }(l2, f2, u2)) : u2[0] + f2 + u2[1];
  }
  function Ue$1(e2) {
    return "[" + Error.prototype.toString.call(e2) + "]";
  }
  function He$1(e2, t2, r2, n2, i2, o2) {
    var a2, s2, h2;
    if ((h2 = Object.getOwnPropertyDescriptor(t2, i2) || { value: t2[i2] }).get ? s2 = h2.set ? e2.stylize("[Getter/Setter]", "special") : e2.stylize("[Getter]", "special") : h2.set && (s2 = e2.stylize("[Setter]", "special")), Ge$1(n2, i2) || (a2 = "[" + i2 + "]"), s2 || (e2.seen.indexOf(h2.value) < 0 ? (s2 = Ne$1(r2) ? Oe$1(e2, h2.value, null) : Oe$1(e2, h2.value, r2 - 1)).indexOf("\n") > -1 && (s2 = o2 ? s2.split("\n").map(function(e3) {
      return "  " + e3;
    }).join("\n").substr(2) : "\n" + s2.split("\n").map(function(e3) {
      return "   " + e3;
    }).join("\n")) : s2 = e2.stylize("[Circular]", "special")), je$1(a2)) {
      if (o2 && i2.match(/^\d+$/))
        return s2;
      (a2 = JSON.stringify("" + i2)).match(/^"([a-zA-Z_][a-zA-Z_0-9]*)"$/) ? (a2 = a2.substr(1, a2.length - 2), a2 = e2.stylize(a2, "name")) : (a2 = a2.replace(/'/g, "\\'").replace(/\\"/g, '"').replace(/(^"|"$)/g, "'"), a2 = e2.stylize(a2, "string"));
    }
    return a2 + ": " + s2;
  }
  function Fe$1(e2) {
    return "boolean" == typeof e2;
  }
  function Ne$1(e2) {
    return null === e2;
  }
  function Ze$1(e2) {
    return "string" == typeof e2;
  }
  function je$1(e2) {
    return void 0 === e2;
  }
  function We$1(e2) {
    return Ye$1(e2) && "[object RegExp]" === Ve$1(e2);
  }
  function Ye$1(e2) {
    return "object" == typeof e2 && null !== e2;
  }
  function Ke$1(e2) {
    return Ye$1(e2) && "[object Date]" === Ve$1(e2);
  }
  function Xe$1(e2) {
    return Ye$1(e2) && ("[object Error]" === Ve$1(e2) || e2 instanceof Error);
  }
  function qe$1(e2) {
    return "function" == typeof e2;
  }
  function Ve$1(e2) {
    return Object.prototype.toString.call(e2);
  }
  function Ge$1(e2, t2) {
    return Object.prototype.hasOwnProperty.call(e2, t2);
  }
  function $e$1() {
    this.head = null, this.tail = null, this.length = 0;
  }
  De$1.colors = { bold: [1, 22], italic: [3, 23], underline: [4, 24], inverse: [7, 27], white: [37, 39], grey: [90, 39], black: [30, 39], blue: [34, 39], cyan: [36, 39], green: [32, 39], magenta: [35, 39], red: [31, 39], yellow: [33, 39] }, De$1.styles = { special: "cyan", number: "yellow", boolean: "yellow", undefined: "grey", null: "bold", string: "green", date: "magenta", regexp: "red" }, $e$1.prototype.push = function(e2) {
    var t2 = { data: e2, next: null };
    this.length > 0 ? this.tail.next = t2 : this.head = t2, this.tail = t2, ++this.length;
  }, $e$1.prototype.unshift = function(e2) {
    var t2 = { data: e2, next: this.head };
    0 === this.length && (this.tail = t2), this.head = t2, ++this.length;
  }, $e$1.prototype.shift = function() {
    if (0 !== this.length) {
      var e2 = this.head.data;
      return 1 === this.length ? this.head = this.tail = null : this.head = this.head.next, --this.length, e2;
    }
  }, $e$1.prototype.clear = function() {
    this.head = this.tail = null, this.length = 0;
  }, $e$1.prototype.join = function(e2) {
    if (0 === this.length)
      return "";
    for (var t2 = this.head, r2 = "" + t2.data; t2 = t2.next; )
      r2 += e2 + t2.data;
    return r2;
  }, $e$1.prototype.concat = function(e2) {
    if (0 === this.length)
      return p$2.alloc(0);
    if (1 === this.length)
      return this.head.data;
    for (var t2 = p$2.allocUnsafe(e2 >>> 0), r2 = this.head, n2 = 0; r2; )
      r2.data.copy(t2, n2), n2 += r2.data.length, r2 = r2.next;
    return t2;
  };
  var Je$1 = p$2.isEncoding || function(e2) {
    switch (e2 && e2.toLowerCase()) {
      case "hex":
      case "utf8":
      case "utf-8":
      case "ascii":
      case "binary":
      case "base64":
      case "ucs2":
      case "ucs-2":
      case "utf16le":
      case "utf-16le":
      case "raw":
        return true;
      default:
        return false;
    }
  };
  function Qe$1(e2) {
    switch (this.encoding = (e2 || "utf8").toLowerCase().replace(/[-_]/, ""), function(e3) {
      if (e3 && !Je$1(e3))
        throw new Error("Unknown encoding: " + e3);
    }(e2), this.encoding) {
      case "utf8":
        this.surrogateSize = 3;
        break;
      case "ucs2":
      case "utf16le":
        this.surrogateSize = 2, this.detectIncompleteChar = tt$2;
        break;
      case "base64":
        this.surrogateSize = 3, this.detectIncompleteChar = rt$1;
        break;
      default:
        return void (this.write = et$1);
    }
    this.charBuffer = new p$2(6), this.charReceived = 0, this.charLength = 0;
  }
  function et$1(e2) {
    return e2.toString(this.encoding);
  }
  function tt$2(e2) {
    this.charReceived = e2.length % 2, this.charLength = this.charReceived ? 2 : 0;
  }
  function rt$1(e2) {
    this.charReceived = e2.length % 3, this.charLength = this.charReceived ? 3 : 0;
  }
  Qe$1.prototype.write = function(e2) {
    for (var t2 = ""; this.charLength; ) {
      var r2 = e2.length >= this.charLength - this.charReceived ? this.charLength - this.charReceived : e2.length;
      if (e2.copy(this.charBuffer, this.charReceived, 0, r2), this.charReceived += r2, this.charReceived < this.charLength)
        return "";
      if (e2 = e2.slice(r2, e2.length), !((i2 = (t2 = this.charBuffer.slice(0, this.charLength).toString(this.encoding)).charCodeAt(t2.length - 1)) >= 55296 && i2 <= 56319)) {
        if (this.charReceived = this.charLength = 0, 0 === e2.length)
          return t2;
        break;
      }
      this.charLength += this.surrogateSize, t2 = "";
    }
    this.detectIncompleteChar(e2);
    var n2 = e2.length;
    this.charLength && (e2.copy(this.charBuffer, 0, e2.length - this.charReceived, n2), n2 -= this.charReceived);
    var i2;
    n2 = (t2 += e2.toString(this.encoding, 0, n2)).length - 1;
    if ((i2 = t2.charCodeAt(n2)) >= 55296 && i2 <= 56319) {
      var o2 = this.surrogateSize;
      return this.charLength += o2, this.charReceived += o2, this.charBuffer.copy(this.charBuffer, o2, 0, o2), e2.copy(this.charBuffer, 0, 0, o2), t2.substring(0, n2);
    }
    return t2;
  }, Qe$1.prototype.detectIncompleteChar = function(e2) {
    for (var t2 = e2.length >= 3 ? 3 : e2.length; t2 > 0; t2--) {
      var r2 = e2[e2.length - t2];
      if (1 == t2 && r2 >> 5 == 6) {
        this.charLength = 2;
        break;
      }
      if (t2 <= 2 && r2 >> 4 == 14) {
        this.charLength = 3;
        break;
      }
      if (t2 <= 3 && r2 >> 3 == 30) {
        this.charLength = 4;
        break;
      }
    }
    this.charReceived = t2;
  }, Qe$1.prototype.end = function(e2) {
    var t2 = "";
    if (e2 && e2.length && (t2 = this.write(e2)), this.charReceived) {
      var r2 = this.charReceived, n2 = this.charBuffer, i2 = this.encoding;
      t2 += n2.slice(0, r2).toString(i2);
    }
    return t2;
  }, ot$1.ReadableState = it$1;
  var nt$1 = function(e2) {
    je$1(Me$1) && (Me$1 = ""), e2 = e2.toUpperCase(), Ce$1[e2] || (new RegExp("\\b" + e2 + "\\b", "i").test(Me$1) ? Ce$1[e2] = function() {
      var t2 = Le$1.apply(null, arguments);
      formatAppLog("error", "at TUIKit/debug/lib-generate-test-usersig-es.min.js:2", "%s %d: %s", e2, 0, t2);
    } : Ce$1[e2] = function() {
    });
    return Ce$1[e2];
  }("stream");
  function it$1(e2, t2) {
    e2 = e2 || {}, this.objectMode = !!e2.objectMode, t2 instanceof Ct$1 && (this.objectMode = this.objectMode || !!e2.readableObjectMode);
    var r2 = e2.highWaterMark, n2 = this.objectMode ? 16 : 16384;
    this.highWaterMark = r2 || 0 === r2 ? r2 : n2, this.highWaterMark = ~~this.highWaterMark, this.buffer = new $e$1(), this.length = 0, this.pipes = null, this.pipesCount = 0, this.flowing = null, this.ended = false, this.endEmitted = false, this.reading = false, this.sync = true, this.needReadable = false, this.emittedReadable = false, this.readableListening = false, this.resumeScheduled = false, this.defaultEncoding = e2.defaultEncoding || "utf8", this.ranOut = false, this.awaitDrain = 0, this.readingMore = false, this.decoder = null, this.encoding = null, e2.encoding && (this.decoder = new Qe$1(e2.encoding), this.encoding = e2.encoding);
  }
  function ot$1(e2) {
    if (!(this instanceof ot$1))
      return new ot$1(e2);
    this._readableState = new it$1(e2, this), this.readable = true, e2 && "function" == typeof e2.read && (this._read = e2.read), ve$1.call(this);
  }
  function at$1(e2, t2, r2, n2, i2) {
    var o2 = function(e3, t3) {
      var r3 = null;
      $$1(t3) || "string" == typeof t3 || null == t3 || e3.objectMode || (r3 = new TypeError("Invalid non-string/buffer chunk"));
      return r3;
    }(t2, r2);
    if (o2)
      e2.emit("error", o2);
    else if (null === r2)
      t2.reading = false, function(e3, t3) {
        if (t3.ended)
          return;
        if (t3.decoder) {
          var r3 = t3.decoder.end();
          r3 && r3.length && (t3.buffer.push(r3), t3.length += t3.objectMode ? 1 : r3.length);
        }
        t3.ended = true, lt$1(e3);
      }(e2, t2);
    else if (t2.objectMode || r2 && r2.length > 0)
      if (t2.ended && !i2) {
        var a2 = new Error("stream.push() after EOF");
        e2.emit("error", a2);
      } else if (t2.endEmitted && i2) {
        var s2 = new Error("stream.unshift() after end event");
        e2.emit("error", s2);
      } else {
        var h2;
        !t2.decoder || i2 || n2 || (r2 = t2.decoder.write(r2), h2 = !t2.objectMode && 0 === r2.length), i2 || (t2.reading = false), h2 || (t2.flowing && 0 === t2.length && !t2.sync ? (e2.emit("data", r2), e2.read(0)) : (t2.length += t2.objectMode ? 1 : r2.length, i2 ? t2.buffer.unshift(r2) : t2.buffer.push(r2), t2.needReadable && lt$1(e2))), function(e3, t3) {
          t3.readingMore || (t3.readingMore = true, de$1(ct$1, e3, t3));
        }(e2, t2);
      }
    else
      i2 || (t2.reading = false);
    return function(e3) {
      return !e3.ended && (e3.needReadable || e3.length < e3.highWaterMark || 0 === e3.length);
    }(t2);
  }
  Be$1(ot$1, ve$1), ot$1.prototype.push = function(e2, t2) {
    var r2 = this._readableState;
    return r2.objectMode || "string" != typeof e2 || (t2 = t2 || r2.defaultEncoding) !== r2.encoding && (e2 = p$2.from(e2, t2), t2 = ""), at$1(this, r2, e2, t2, false);
  }, ot$1.prototype.unshift = function(e2) {
    return at$1(this, this._readableState, e2, "", true);
  }, ot$1.prototype.isPaused = function() {
    return false === this._readableState.flowing;
  }, ot$1.prototype.setEncoding = function(e2) {
    return this._readableState.decoder = new Qe$1(e2), this._readableState.encoding = e2, this;
  };
  var st$1 = 8388608;
  function ht$1(e2, t2) {
    return e2 <= 0 || 0 === t2.length && t2.ended ? 0 : t2.objectMode ? 1 : e2 != e2 ? t2.flowing && t2.length ? t2.buffer.head.data.length : t2.length : (e2 > t2.highWaterMark && (t2.highWaterMark = function(e3) {
      return e3 >= st$1 ? e3 = st$1 : (e3--, e3 |= e3 >>> 1, e3 |= e3 >>> 2, e3 |= e3 >>> 4, e3 |= e3 >>> 8, e3 |= e3 >>> 16, e3++), e3;
    }(e2)), e2 <= t2.length ? e2 : t2.ended ? t2.length : (t2.needReadable = true, 0));
  }
  function lt$1(e2) {
    var t2 = e2._readableState;
    t2.needReadable = false, t2.emittedReadable || (nt$1("emitReadable", t2.flowing), t2.emittedReadable = true, t2.sync ? de$1(ft$1, e2) : ft$1(e2));
  }
  function ft$1(e2) {
    nt$1("emit readable"), e2.emit("readable"), pt$1(e2);
  }
  function ct$1(e2, t2) {
    for (var r2 = t2.length; !t2.reading && !t2.flowing && !t2.ended && t2.length < t2.highWaterMark && (nt$1("maybeReadMore read 0"), e2.read(0), r2 !== t2.length); )
      r2 = t2.length;
    t2.readingMore = false;
  }
  function ut$1(e2) {
    nt$1("readable nexttick read 0"), e2.read(0);
  }
  function dt$1(e2, t2) {
    t2.reading || (nt$1("resume read 0"), e2.read(0)), t2.resumeScheduled = false, t2.awaitDrain = 0, e2.emit("resume"), pt$1(e2), t2.flowing && !t2.reading && e2.read(0);
  }
  function pt$1(e2) {
    var t2 = e2._readableState;
    for (nt$1("flow", t2.flowing); t2.flowing && null !== e2.read(); )
      ;
  }
  function _t$1(e2, t2) {
    return 0 === t2.length ? null : (t2.objectMode ? r2 = t2.buffer.shift() : !e2 || e2 >= t2.length ? (r2 = t2.decoder ? t2.buffer.join("") : 1 === t2.buffer.length ? t2.buffer.head.data : t2.buffer.concat(t2.length), t2.buffer.clear()) : r2 = function(e3, t3, r3) {
      var n2;
      e3 < t3.head.data.length ? (n2 = t3.head.data.slice(0, e3), t3.head.data = t3.head.data.slice(e3)) : n2 = e3 === t3.head.data.length ? t3.shift() : r3 ? function(e4, t4) {
        var r4 = t4.head, n3 = 1, i2 = r4.data;
        e4 -= i2.length;
        for (; r4 = r4.next; ) {
          var o2 = r4.data, a2 = e4 > o2.length ? o2.length : e4;
          if (a2 === o2.length ? i2 += o2 : i2 += o2.slice(0, e4), 0 === (e4 -= a2)) {
            a2 === o2.length ? (++n3, r4.next ? t4.head = r4.next : t4.head = t4.tail = null) : (t4.head = r4, r4.data = o2.slice(a2));
            break;
          }
          ++n3;
        }
        return t4.length -= n3, i2;
      }(e3, t3) : function(e4, t4) {
        var r4 = p$2.allocUnsafe(e4), n3 = t4.head, i2 = 1;
        n3.data.copy(r4), e4 -= n3.data.length;
        for (; n3 = n3.next; ) {
          var o2 = n3.data, a2 = e4 > o2.length ? o2.length : e4;
          if (o2.copy(r4, r4.length - e4, 0, a2), 0 === (e4 -= a2)) {
            a2 === o2.length ? (++i2, n3.next ? t4.head = n3.next : t4.head = t4.tail = null) : (t4.head = n3, n3.data = o2.slice(a2));
            break;
          }
          ++i2;
        }
        return t4.length -= i2, r4;
      }(e3, t3);
      return n2;
    }(e2, t2.buffer, t2.decoder), r2);
    var r2;
  }
  function gt$1(e2) {
    var t2 = e2._readableState;
    if (t2.length > 0)
      throw new Error('"endReadable()" called on non-empty stream');
    t2.endEmitted || (t2.ended = true, de$1(vt$1, t2, e2));
  }
  function vt$1(e2, t2) {
    e2.endEmitted || 0 !== e2.length || (e2.endEmitted = true, t2.readable = false, t2.emit("end"));
  }
  function wt$1(e2, t2) {
    for (var r2 = 0, n2 = e2.length; r2 < n2; r2++)
      if (e2[r2] === t2)
        return r2;
    return -1;
  }
  function bt$1() {
  }
  function yt$1(e2, t2, r2) {
    this.chunk = e2, this.encoding = t2, this.callback = r2, this.next = null;
  }
  function mt$1(e2, t2) {
    Object.defineProperty(this, "buffer", { get: Te$1(function() {
      return this.getBuffer();
    }, "_writableState.buffer is deprecated. Use _writableState.getBuffer instead.") }), e2 = e2 || {}, this.objectMode = !!e2.objectMode, t2 instanceof Ct$1 && (this.objectMode = this.objectMode || !!e2.writableObjectMode);
    var r2 = e2.highWaterMark, n2 = this.objectMode ? 16 : 16384;
    this.highWaterMark = r2 || 0 === r2 ? r2 : n2, this.highWaterMark = ~~this.highWaterMark, this.needDrain = false, this.ending = false, this.ended = false, this.finished = false;
    var i2 = false === e2.decodeStrings;
    this.decodeStrings = !i2, this.defaultEncoding = e2.defaultEncoding || "utf8", this.length = 0, this.writing = false, this.corked = 0, this.sync = true, this.bufferProcessing = false, this.onwrite = function(e3) {
      !function(e4, t3) {
        var r3 = e4._writableState, n3 = r3.sync, i3 = r3.writecb;
        if (function(e5) {
          e5.writing = false, e5.writecb = null, e5.length -= e5.writelen, e5.writelen = 0;
        }(r3), t3)
          !function(e5, t4, r4, n4, i4) {
            --t4.pendingcb, r4 ? de$1(i4, n4) : i4(n4);
            e5._writableState.errorEmitted = true, e5.emit("error", n4);
          }(e4, r3, n3, t3, i3);
        else {
          var o2 = Rt$1(r3);
          o2 || r3.corked || r3.bufferProcessing || !r3.bufferedRequest || xt$1(e4, r3), n3 ? de$1(St$1, e4, r3, o2, i3) : St$1(e4, r3, o2, i3);
        }
      }(t2, e3);
    }, this.writecb = null, this.writelen = 0, this.bufferedRequest = null, this.lastBufferedRequest = null, this.pendingcb = 0, this.prefinished = false, this.errorEmitted = false, this.bufferedRequestCount = 0, this.corkedRequestsFree = new zt$1(this);
  }
  function kt$1(e2) {
    if (!(this instanceof kt$1 || this instanceof Ct$1))
      return new kt$1(e2);
    this._writableState = new mt$1(e2, this), this.writable = true, e2 && ("function" == typeof e2.write && (this._write = e2.write), "function" == typeof e2.writev && (this._writev = e2.writev)), ve$1.call(this);
  }
  function Et$1(e2, t2, r2, n2, i2, o2, a2) {
    t2.writelen = n2, t2.writecb = a2, t2.writing = true, t2.sync = true, r2 ? e2._writev(i2, t2.onwrite) : e2._write(i2, o2, t2.onwrite), t2.sync = false;
  }
  function St$1(e2, t2, r2, n2) {
    r2 || function(e3, t3) {
      0 === t3.length && t3.needDrain && (t3.needDrain = false, e3.emit("drain"));
    }(e2, t2), t2.pendingcb--, n2(), Bt$1(e2, t2);
  }
  function xt$1(e2, t2) {
    t2.bufferProcessing = true;
    var r2 = t2.bufferedRequest;
    if (e2._writev && r2 && r2.next) {
      var n2 = t2.bufferedRequestCount, i2 = new Array(n2), o2 = t2.corkedRequestsFree;
      o2.entry = r2;
      for (var a2 = 0; r2; )
        i2[a2] = r2, r2 = r2.next, a2 += 1;
      Et$1(e2, t2, true, t2.length, i2, "", o2.finish), t2.pendingcb++, t2.lastBufferedRequest = null, o2.next ? (t2.corkedRequestsFree = o2.next, o2.next = null) : t2.corkedRequestsFree = new zt$1(t2);
    } else {
      for (; r2; ) {
        var s2 = r2.chunk, h2 = r2.encoding, l2 = r2.callback;
        if (Et$1(e2, t2, false, t2.objectMode ? 1 : s2.length, s2, h2, l2), r2 = r2.next, t2.writing)
          break;
      }
      null === r2 && (t2.lastBufferedRequest = null);
    }
    t2.bufferedRequestCount = 0, t2.bufferedRequest = r2, t2.bufferProcessing = false;
  }
  function Rt$1(e2) {
    return e2.ending && 0 === e2.length && null === e2.bufferedRequest && !e2.finished && !e2.writing;
  }
  function At$1(e2, t2) {
    t2.prefinished || (t2.prefinished = true, e2.emit("prefinish"));
  }
  function Bt$1(e2, t2) {
    var r2 = Rt$1(t2);
    return r2 && (0 === t2.pendingcb ? (At$1(e2, t2), t2.finished = true, e2.emit("finish")) : At$1(e2, t2)), r2;
  }
  function zt$1(e2) {
    var t2 = this;
    this.next = null, this.entry = null, this.finish = function(r2) {
      var n2 = t2.entry;
      for (t2.entry = null; n2; ) {
        var i2 = n2.callback;
        e2.pendingcb--, i2(r2), n2 = n2.next;
      }
      e2.corkedRequestsFree ? e2.corkedRequestsFree.next = t2 : e2.corkedRequestsFree = t2;
    };
  }
  ot$1.prototype.read = function(e2) {
    nt$1("read", e2), e2 = parseInt(e2, 10);
    var t2 = this._readableState, r2 = e2;
    if (0 !== e2 && (t2.emittedReadable = false), 0 === e2 && t2.needReadable && (t2.length >= t2.highWaterMark || t2.ended))
      return nt$1("read: emitReadable", t2.length, t2.ended), 0 === t2.length && t2.ended ? gt$1(this) : lt$1(this), null;
    if (0 === (e2 = ht$1(e2, t2)) && t2.ended)
      return 0 === t2.length && gt$1(this), null;
    var n2, i2 = t2.needReadable;
    return nt$1("need readable", i2), (0 === t2.length || t2.length - e2 < t2.highWaterMark) && nt$1("length less than watermark", i2 = true), t2.ended || t2.reading ? nt$1("reading or ended", i2 = false) : i2 && (nt$1("do read"), t2.reading = true, t2.sync = true, 0 === t2.length && (t2.needReadable = true), this._read(t2.highWaterMark), t2.sync = false, t2.reading || (e2 = ht$1(r2, t2))), null === (n2 = e2 > 0 ? _t$1(e2, t2) : null) ? (t2.needReadable = true, e2 = 0) : t2.length -= e2, 0 === t2.length && (t2.ended || (t2.needReadable = true), r2 !== e2 && t2.ended && gt$1(this)), null !== n2 && this.emit("data", n2), n2;
  }, ot$1.prototype._read = function(e2) {
    this.emit("error", new Error("not implemented"));
  }, ot$1.prototype.pipe = function(e2, t2) {
    var r2 = this, n2 = this._readableState;
    switch (n2.pipesCount) {
      case 0:
        n2.pipes = e2;
        break;
      case 1:
        n2.pipes = [n2.pipes, e2];
        break;
      default:
        n2.pipes.push(e2);
    }
    n2.pipesCount += 1, nt$1("pipe count=%d opts=%j", n2.pipesCount, t2);
    var i2 = !t2 || false !== t2.end ? a2 : l2;
    function o2(e3) {
      nt$1("onunpipe"), e3 === r2 && l2();
    }
    function a2() {
      nt$1("onend"), e2.end();
    }
    n2.endEmitted ? de$1(i2) : r2.once("end", i2), e2.on("unpipe", o2);
    var s2 = /* @__PURE__ */ function(e3) {
      return function() {
        var t3 = e3._readableState;
        nt$1("pipeOnDrain", t3.awaitDrain), t3.awaitDrain && t3.awaitDrain--, 0 === t3.awaitDrain && e3.listeners("data").length && (t3.flowing = true, pt$1(e3));
      };
    }(r2);
    e2.on("drain", s2);
    var h2 = false;
    function l2() {
      nt$1("cleanup"), e2.removeListener("close", d2), e2.removeListener("finish", p2), e2.removeListener("drain", s2), e2.removeListener("error", u2), e2.removeListener("unpipe", o2), r2.removeListener("end", a2), r2.removeListener("end", l2), r2.removeListener("data", c2), h2 = true, !n2.awaitDrain || e2._writableState && !e2._writableState.needDrain || s2();
    }
    var f2 = false;
    function c2(t3) {
      nt$1("ondata"), f2 = false, false !== e2.write(t3) || f2 || ((1 === n2.pipesCount && n2.pipes === e2 || n2.pipesCount > 1 && -1 !== wt$1(n2.pipes, e2)) && !h2 && (nt$1("false write response, pause", r2._readableState.awaitDrain), r2._readableState.awaitDrain++, f2 = true), r2.pause());
    }
    function u2(t3) {
      var r3;
      nt$1("onerror", t3), _2(), e2.removeListener("error", u2), 0 === (r3 = "error", e2.listeners(r3).length) && e2.emit("error", t3);
    }
    function d2() {
      e2.removeListener("finish", p2), _2();
    }
    function p2() {
      nt$1("onfinish"), e2.removeListener("close", d2), _2();
    }
    function _2() {
      nt$1("unpipe"), r2.unpipe(e2);
    }
    return r2.on("data", c2), function(e3, t3, r3) {
      if ("function" == typeof e3.prependListener)
        return e3.prependListener(t3, r3);
      e3._events && e3._events[t3] ? Array.isArray(e3._events[t3]) ? e3._events[t3].unshift(r3) : e3._events[t3] = [r3, e3._events[t3]] : e3.on(t3, r3);
    }(e2, "error", u2), e2.once("close", d2), e2.once("finish", p2), e2.emit("pipe", r2), n2.flowing || (nt$1("pipe resume"), r2.resume()), e2;
  }, ot$1.prototype.unpipe = function(e2) {
    var t2 = this._readableState;
    if (0 === t2.pipesCount)
      return this;
    if (1 === t2.pipesCount)
      return e2 && e2 !== t2.pipes ? this : (e2 || (e2 = t2.pipes), t2.pipes = null, t2.pipesCount = 0, t2.flowing = false, e2 && e2.emit("unpipe", this), this);
    if (!e2) {
      var r2 = t2.pipes, n2 = t2.pipesCount;
      t2.pipes = null, t2.pipesCount = 0, t2.flowing = false;
      for (var i2 = 0; i2 < n2; i2++)
        r2[i2].emit("unpipe", this);
      return this;
    }
    var o2 = wt$1(t2.pipes, e2);
    return -1 === o2 ? this : (t2.pipes.splice(o2, 1), t2.pipesCount -= 1, 1 === t2.pipesCount && (t2.pipes = t2.pipes[0]), e2.emit("unpipe", this), this);
  }, ot$1.prototype.on = function(e2, t2) {
    var r2 = ve$1.prototype.on.call(this, e2, t2);
    if ("data" === e2)
      false !== this._readableState.flowing && this.resume();
    else if ("readable" === e2) {
      var n2 = this._readableState;
      n2.endEmitted || n2.readableListening || (n2.readableListening = n2.needReadable = true, n2.emittedReadable = false, n2.reading ? n2.length && lt$1(this) : de$1(ut$1, this));
    }
    return r2;
  }, ot$1.prototype.addListener = ot$1.prototype.on, ot$1.prototype.resume = function() {
    var e2 = this._readableState;
    return e2.flowing || (nt$1("resume"), e2.flowing = true, function(e3, t2) {
      t2.resumeScheduled || (t2.resumeScheduled = true, de$1(dt$1, e3, t2));
    }(this, e2)), this;
  }, ot$1.prototype.pause = function() {
    return nt$1("call pause flowing=%j", this._readableState.flowing), false !== this._readableState.flowing && (nt$1("pause"), this._readableState.flowing = false, this.emit("pause")), this;
  }, ot$1.prototype.wrap = function(e2) {
    var t2 = this._readableState, r2 = false, n2 = this;
    for (var i2 in e2.on("end", function() {
      if (nt$1("wrapped end"), t2.decoder && !t2.ended) {
        var e3 = t2.decoder.end();
        e3 && e3.length && n2.push(e3);
      }
      n2.push(null);
    }), e2.on("data", function(i3) {
      (nt$1("wrapped data"), t2.decoder && (i3 = t2.decoder.write(i3)), t2.objectMode && null == i3) || (t2.objectMode || i3 && i3.length) && (n2.push(i3) || (r2 = true, e2.pause()));
    }), e2)
      void 0 === this[i2] && "function" == typeof e2[i2] && (this[i2] = /* @__PURE__ */ function(t3) {
        return function() {
          return e2[t3].apply(e2, arguments);
        };
      }(i2));
    return function(e3, t3) {
      for (var r3 = 0, n3 = e3.length; r3 < n3; r3++)
        t3(e3[r3], r3);
    }(["error", "close", "destroy", "pause", "resume"], function(t3) {
      e2.on(t3, n2.emit.bind(n2, t3));
    }), n2._read = function(t3) {
      nt$1("wrapped _read", t3), r2 && (r2 = false, e2.resume());
    }, n2;
  }, ot$1._fromList = _t$1, kt$1.WritableState = mt$1, Be$1(kt$1, ve$1), mt$1.prototype.getBuffer = function() {
    for (var e2 = this.bufferedRequest, t2 = []; e2; )
      t2.push(e2), e2 = e2.next;
    return t2;
  }, kt$1.prototype.pipe = function() {
    this.emit("error", new Error("Cannot pipe, not readable"));
  }, kt$1.prototype.write = function(e2, t2, r2) {
    var n2 = this._writableState, i2 = false;
    return "function" == typeof t2 && (r2 = t2, t2 = null), p$2.isBuffer(e2) ? t2 = "buffer" : t2 || (t2 = n2.defaultEncoding), "function" != typeof r2 && (r2 = bt$1), n2.ended ? function(e3, t3) {
      var r3 = new Error("write after end");
      e3.emit("error", r3), de$1(t3, r3);
    }(this, r2) : function(e3, t3, r3, n3) {
      var i3 = true, o2 = false;
      return null === r3 ? o2 = new TypeError("May not write null values to stream") : p$2.isBuffer(r3) || "string" == typeof r3 || void 0 === r3 || t3.objectMode || (o2 = new TypeError("Invalid non-string/buffer chunk")), o2 && (e3.emit("error", o2), de$1(n3, o2), i3 = false), i3;
    }(this, n2, e2, r2) && (n2.pendingcb++, i2 = function(e3, t3, r3, n3, i3) {
      r3 = function(e4, t4, r4) {
        return e4.objectMode || false === e4.decodeStrings || "string" != typeof t4 || (t4 = p$2.from(t4, r4)), t4;
      }(t3, r3, n3), p$2.isBuffer(r3) && (n3 = "buffer");
      var o2 = t3.objectMode ? 1 : r3.length;
      t3.length += o2;
      var a2 = t3.length < t3.highWaterMark;
      a2 || (t3.needDrain = true);
      if (t3.writing || t3.corked) {
        var s2 = t3.lastBufferedRequest;
        t3.lastBufferedRequest = new yt$1(r3, n3, i3), s2 ? s2.next = t3.lastBufferedRequest : t3.bufferedRequest = t3.lastBufferedRequest, t3.bufferedRequestCount += 1;
      } else
        Et$1(e3, t3, false, o2, r3, n3, i3);
      return a2;
    }(this, n2, e2, t2, r2)), i2;
  }, kt$1.prototype.cork = function() {
    this._writableState.corked++;
  }, kt$1.prototype.uncork = function() {
    var e2 = this._writableState;
    e2.corked && (e2.corked--, e2.writing || e2.corked || e2.finished || e2.bufferProcessing || !e2.bufferedRequest || xt$1(this, e2));
  }, kt$1.prototype.setDefaultEncoding = function(e2) {
    if ("string" == typeof e2 && (e2 = e2.toLowerCase()), !(["hex", "utf8", "utf-8", "ascii", "binary", "base64", "ucs2", "ucs-2", "utf16le", "utf-16le", "raw"].indexOf((e2 + "").toLowerCase()) > -1))
      throw new TypeError("Unknown encoding: " + e2);
    return this._writableState.defaultEncoding = e2, this;
  }, kt$1.prototype._write = function(e2, t2, r2) {
    r2(new Error("not implemented"));
  }, kt$1.prototype._writev = null, kt$1.prototype.end = function(e2, t2, r2) {
    var n2 = this._writableState;
    "function" == typeof e2 ? (r2 = e2, e2 = null, t2 = null) : "function" == typeof t2 && (r2 = t2, t2 = null), null != e2 && this.write(e2, t2), n2.corked && (n2.corked = 1, this.uncork()), n2.ending || n2.finished || function(e3, t3, r3) {
      t3.ending = true, Bt$1(e3, t3), r3 && (t3.finished ? de$1(r3) : e3.once("finish", r3));
      t3.ended = true, e3.writable = false;
    }(this, n2, r2);
  }, Be$1(Ct$1, ot$1);
  for (var Lt$1 = Object.keys(kt$1.prototype), Tt$1 = 0; Tt$1 < Lt$1.length; Tt$1++) {
    var Mt$1 = Lt$1[Tt$1];
    Ct$1.prototype[Mt$1] || (Ct$1.prototype[Mt$1] = kt$1.prototype[Mt$1]);
  }
  function Ct$1(e2) {
    if (!(this instanceof Ct$1))
      return new Ct$1(e2);
    ot$1.call(this, e2), kt$1.call(this, e2), e2 && false === e2.readable && (this.readable = false), e2 && false === e2.writable && (this.writable = false), this.allowHalfOpen = true, e2 && false === e2.allowHalfOpen && (this.allowHalfOpen = false), this.once("end", Dt$1);
  }
  function Dt$1() {
    this.allowHalfOpen || this._writableState.ended || de$1(It$1, this);
  }
  function It$1(e2) {
    e2.end();
  }
  function Pt$1(e2) {
    this.afterTransform = function(t2, r2) {
      return function(e3, t3, r3) {
        var n2 = e3._transformState;
        n2.transforming = false;
        var i2 = n2.writecb;
        if (!i2)
          return e3.emit("error", new Error("no writecb in Transform class"));
        n2.writechunk = null, n2.writecb = null, null != r3 && e3.push(r3);
        i2(t3);
        var o2 = e3._readableState;
        o2.reading = false, (o2.needReadable || o2.length < o2.highWaterMark) && e3._read(o2.highWaterMark);
      }(e2, t2, r2);
    }, this.needTransform = false, this.transforming = false, this.writecb = null, this.writechunk = null, this.writeencoding = null;
  }
  function Ot$1(e2) {
    if (!(this instanceof Ot$1))
      return new Ot$1(e2);
    Ct$1.call(this, e2), this._transformState = new Pt$1(this);
    var t2 = this;
    this._readableState.needReadable = true, this._readableState.sync = false, e2 && ("function" == typeof e2.transform && (this._transform = e2.transform), "function" == typeof e2.flush && (this._flush = e2.flush)), this.once("prefinish", function() {
      "function" == typeof this._flush ? this._flush(function(e3) {
        Ut$1(t2, e3);
      }) : Ut$1(t2);
    });
  }
  function Ut$1(e2, t2) {
    if (t2)
      return e2.emit("error", t2);
    var r2 = e2._writableState, n2 = e2._transformState;
    if (r2.length)
      throw new Error("Calling transform done when ws.length != 0");
    if (n2.transforming)
      throw new Error("Calling transform done when still transforming");
    return e2.push(null);
  }
  function Ht$1(e2) {
    if (!(this instanceof Ht$1))
      return new Ht$1(e2);
    Ot$1.call(this, e2);
  }
  function Ft$1() {
    ve$1.call(this);
  }
  Be$1(Ot$1, Ct$1), Ot$1.prototype.push = function(e2, t2) {
    return this._transformState.needTransform = false, Ct$1.prototype.push.call(this, e2, t2);
  }, Ot$1.prototype._transform = function(e2, t2, r2) {
    throw new Error("Not implemented");
  }, Ot$1.prototype._write = function(e2, t2, r2) {
    var n2 = this._transformState;
    if (n2.writecb = r2, n2.writechunk = e2, n2.writeencoding = t2, !n2.transforming) {
      var i2 = this._readableState;
      (n2.needTransform || i2.needReadable || i2.length < i2.highWaterMark) && this._read(i2.highWaterMark);
    }
  }, Ot$1.prototype._read = function(e2) {
    var t2 = this._transformState;
    null !== t2.writechunk && t2.writecb && !t2.transforming ? (t2.transforming = true, this._transform(t2.writechunk, t2.writeencoding, t2.afterTransform)) : t2.needTransform = true;
  }, Be$1(Ht$1, Ot$1), Ht$1.prototype._transform = function(e2, t2, r2) {
    r2(null, e2);
  }, Be$1(Ft$1, ve$1), Ft$1.Readable = ot$1, Ft$1.Writable = kt$1, Ft$1.Duplex = Ct$1, Ft$1.Transform = Ot$1, Ft$1.PassThrough = Ht$1, Ft$1.Stream = Ft$1, Ft$1.prototype.pipe = function(e2, t2) {
    var r2 = this;
    function n2(t3) {
      e2.writable && false === e2.write(t3) && r2.pause && r2.pause();
    }
    function i2() {
      r2.readable && r2.resume && r2.resume();
    }
    r2.on("data", n2), e2.on("drain", i2), e2._isStdio || t2 && false === t2.end || (r2.on("end", a2), r2.on("close", s2));
    var o2 = false;
    function a2() {
      o2 || (o2 = true, e2.end());
    }
    function s2() {
      o2 || (o2 = true, "function" == typeof e2.destroy && e2.destroy());
    }
    function h2(e3) {
      if (l2(), 0 === ve$1.listenerCount(this, "error"))
        throw e3;
    }
    function l2() {
      r2.removeListener("data", n2), e2.removeListener("drain", i2), r2.removeListener("end", a2), r2.removeListener("close", s2), r2.removeListener("error", h2), e2.removeListener("error", h2), r2.removeListener("end", l2), r2.removeListener("close", l2), e2.removeListener("close", l2);
    }
    return r2.on("error", h2), e2.on("error", h2), r2.on("end", l2), r2.on("close", l2), e2.on("close", l2), e2.emit("pipe", r2), e2;
  };
  var Nt$1 = { 2: "need dictionary", 1: "stream end", 0: "", "-1": "file error", "-2": "stream error", "-3": "data error", "-4": "insufficient memory", "-5": "buffer error", "-6": "incompatible version" };
  function Zt$1() {
    this.input = null, this.next_in = 0, this.avail_in = 0, this.total_in = 0, this.output = null, this.next_out = 0, this.avail_out = 0, this.total_out = 0, this.msg = "", this.state = null, this.data_type = 2, this.adler = 0;
  }
  function jt$1(e2, t2, r2, n2, i2) {
    if (t2.subarray && e2.subarray)
      e2.set(t2.subarray(r2, r2 + n2), i2);
    else
      for (var o2 = 0; o2 < n2; o2++)
        e2[i2 + o2] = t2[r2 + o2];
  }
  var Wt$1 = Uint8Array, Yt$1 = Uint16Array, Kt$1 = Int32Array, Xt$1 = 4, qt = 0, Vt$1 = 1, Gt$1 = 2;
  function $t$1(e2) {
    for (var t2 = e2.length; --t2 >= 0; )
      e2[t2] = 0;
  }
  var Jt$1 = 0, Qt$1 = 1, er = 2, tr = 29, rr = 256, nr = rr + 1 + tr, ir = 30, or = 19, ar = 2 * nr + 1, sr = 15, hr = 16, lr = 7, fr = 256, cr = 16, ur = 17, dr = 18, pr = [0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 2, 2, 2, 2, 3, 3, 3, 3, 4, 4, 4, 4, 5, 5, 5, 5, 0], _r = [0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 4, 4, 5, 5, 6, 6, 7, 7, 8, 8, 9, 9, 10, 10, 11, 11, 12, 12, 13, 13], gr = [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 3, 7], vr = [16, 17, 18, 0, 8, 7, 9, 6, 10, 5, 11, 4, 12, 3, 13, 2, 14, 1, 15], wr = new Array(2 * (nr + 2));
  $t$1(wr);
  var br = new Array(2 * ir);
  $t$1(br);
  var yr = new Array(512);
  $t$1(yr);
  var mr = new Array(256);
  $t$1(mr);
  var kr = new Array(tr);
  $t$1(kr);
  var Er, Sr, xr, Rr = new Array(ir);
  function Ar(e2, t2, r2, n2, i2) {
    this.static_tree = e2, this.extra_bits = t2, this.extra_base = r2, this.elems = n2, this.max_length = i2, this.has_stree = e2 && e2.length;
  }
  function Br(e2, t2) {
    this.dyn_tree = e2, this.max_code = 0, this.stat_desc = t2;
  }
  function zr(e2) {
    return e2 < 256 ? yr[e2] : yr[256 + (e2 >>> 7)];
  }
  function Lr(e2, t2) {
    e2.pending_buf[e2.pending++] = 255 & t2, e2.pending_buf[e2.pending++] = t2 >>> 8 & 255;
  }
  function Tr(e2, t2, r2) {
    e2.bi_valid > hr - r2 ? (e2.bi_buf |= t2 << e2.bi_valid & 65535, Lr(e2, e2.bi_buf), e2.bi_buf = t2 >> hr - e2.bi_valid, e2.bi_valid += r2 - hr) : (e2.bi_buf |= t2 << e2.bi_valid & 65535, e2.bi_valid += r2);
  }
  function Mr(e2, t2, r2) {
    Tr(e2, r2[2 * t2], r2[2 * t2 + 1]);
  }
  function Cr(e2, t2) {
    var r2 = 0;
    do {
      r2 |= 1 & e2, e2 >>>= 1, r2 <<= 1;
    } while (--t2 > 0);
    return r2 >>> 1;
  }
  function Dr(e2, t2, r2) {
    var n2, i2, o2 = new Array(sr + 1), a2 = 0;
    for (n2 = 1; n2 <= sr; n2++)
      o2[n2] = a2 = a2 + r2[n2 - 1] << 1;
    for (i2 = 0; i2 <= t2; i2++) {
      var s2 = e2[2 * i2 + 1];
      0 !== s2 && (e2[2 * i2] = Cr(o2[s2]++, s2));
    }
  }
  function Ir(e2) {
    var t2;
    for (t2 = 0; t2 < nr; t2++)
      e2.dyn_ltree[2 * t2] = 0;
    for (t2 = 0; t2 < ir; t2++)
      e2.dyn_dtree[2 * t2] = 0;
    for (t2 = 0; t2 < or; t2++)
      e2.bl_tree[2 * t2] = 0;
    e2.dyn_ltree[2 * fr] = 1, e2.opt_len = e2.static_len = 0, e2.last_lit = e2.matches = 0;
  }
  function Pr(e2) {
    e2.bi_valid > 8 ? Lr(e2, e2.bi_buf) : e2.bi_valid > 0 && (e2.pending_buf[e2.pending++] = e2.bi_buf), e2.bi_buf = 0, e2.bi_valid = 0;
  }
  function Or(e2, t2, r2, n2) {
    var i2 = 2 * t2, o2 = 2 * r2;
    return e2[i2] < e2[o2] || e2[i2] === e2[o2] && n2[t2] <= n2[r2];
  }
  function Ur(e2, t2, r2) {
    for (var n2 = e2.heap[r2], i2 = r2 << 1; i2 <= e2.heap_len && (i2 < e2.heap_len && Or(t2, e2.heap[i2 + 1], e2.heap[i2], e2.depth) && i2++, !Or(t2, n2, e2.heap[i2], e2.depth)); )
      e2.heap[r2] = e2.heap[i2], r2 = i2, i2 <<= 1;
    e2.heap[r2] = n2;
  }
  function Hr(e2, t2, r2) {
    var n2, i2, o2, a2, s2 = 0;
    if (0 !== e2.last_lit)
      do {
        n2 = e2.pending_buf[e2.d_buf + 2 * s2] << 8 | e2.pending_buf[e2.d_buf + 2 * s2 + 1], i2 = e2.pending_buf[e2.l_buf + s2], s2++, 0 === n2 ? Mr(e2, i2, t2) : (Mr(e2, (o2 = mr[i2]) + rr + 1, t2), 0 !== (a2 = pr[o2]) && Tr(e2, i2 -= kr[o2], a2), Mr(e2, o2 = zr(--n2), r2), 0 !== (a2 = _r[o2]) && Tr(e2, n2 -= Rr[o2], a2));
      } while (s2 < e2.last_lit);
    Mr(e2, fr, t2);
  }
  function Fr(e2, t2) {
    var r2, n2, i2, o2 = t2.dyn_tree, a2 = t2.stat_desc.static_tree, s2 = t2.stat_desc.has_stree, h2 = t2.stat_desc.elems, l2 = -1;
    for (e2.heap_len = 0, e2.heap_max = ar, r2 = 0; r2 < h2; r2++)
      0 !== o2[2 * r2] ? (e2.heap[++e2.heap_len] = l2 = r2, e2.depth[r2] = 0) : o2[2 * r2 + 1] = 0;
    for (; e2.heap_len < 2; )
      o2[2 * (i2 = e2.heap[++e2.heap_len] = l2 < 2 ? ++l2 : 0)] = 1, e2.depth[i2] = 0, e2.opt_len--, s2 && (e2.static_len -= a2[2 * i2 + 1]);
    for (t2.max_code = l2, r2 = e2.heap_len >> 1; r2 >= 1; r2--)
      Ur(e2, o2, r2);
    i2 = h2;
    do {
      r2 = e2.heap[1], e2.heap[1] = e2.heap[e2.heap_len--], Ur(e2, o2, 1), n2 = e2.heap[1], e2.heap[--e2.heap_max] = r2, e2.heap[--e2.heap_max] = n2, o2[2 * i2] = o2[2 * r2] + o2[2 * n2], e2.depth[i2] = (e2.depth[r2] >= e2.depth[n2] ? e2.depth[r2] : e2.depth[n2]) + 1, o2[2 * r2 + 1] = o2[2 * n2 + 1] = i2, e2.heap[1] = i2++, Ur(e2, o2, 1);
    } while (e2.heap_len >= 2);
    e2.heap[--e2.heap_max] = e2.heap[1], function(e3, t3) {
      var r3, n3, i3, o3, a3, s3, h3 = t3.dyn_tree, l3 = t3.max_code, f2 = t3.stat_desc.static_tree, c2 = t3.stat_desc.has_stree, u2 = t3.stat_desc.extra_bits, d2 = t3.stat_desc.extra_base, p2 = t3.stat_desc.max_length, _2 = 0;
      for (o3 = 0; o3 <= sr; o3++)
        e3.bl_count[o3] = 0;
      for (h3[2 * e3.heap[e3.heap_max] + 1] = 0, r3 = e3.heap_max + 1; r3 < ar; r3++)
        (o3 = h3[2 * h3[2 * (n3 = e3.heap[r3]) + 1] + 1] + 1) > p2 && (o3 = p2, _2++), h3[2 * n3 + 1] = o3, n3 > l3 || (e3.bl_count[o3]++, a3 = 0, n3 >= d2 && (a3 = u2[n3 - d2]), s3 = h3[2 * n3], e3.opt_len += s3 * (o3 + a3), c2 && (e3.static_len += s3 * (f2[2 * n3 + 1] + a3)));
      if (0 !== _2) {
        do {
          for (o3 = p2 - 1; 0 === e3.bl_count[o3]; )
            o3--;
          e3.bl_count[o3]--, e3.bl_count[o3 + 1] += 2, e3.bl_count[p2]--, _2 -= 2;
        } while (_2 > 0);
        for (o3 = p2; 0 !== o3; o3--)
          for (n3 = e3.bl_count[o3]; 0 !== n3; )
            (i3 = e3.heap[--r3]) > l3 || (h3[2 * i3 + 1] !== o3 && (e3.opt_len += (o3 - h3[2 * i3 + 1]) * h3[2 * i3], h3[2 * i3 + 1] = o3), n3--);
      }
    }(e2, t2), Dr(o2, l2, e2.bl_count);
  }
  function Nr(e2, t2, r2) {
    var n2, i2, o2 = -1, a2 = t2[1], s2 = 0, h2 = 7, l2 = 4;
    for (0 === a2 && (h2 = 138, l2 = 3), t2[2 * (r2 + 1) + 1] = 65535, n2 = 0; n2 <= r2; n2++)
      i2 = a2, a2 = t2[2 * (n2 + 1) + 1], ++s2 < h2 && i2 === a2 || (s2 < l2 ? e2.bl_tree[2 * i2] += s2 : 0 !== i2 ? (i2 !== o2 && e2.bl_tree[2 * i2]++, e2.bl_tree[2 * cr]++) : s2 <= 10 ? e2.bl_tree[2 * ur]++ : e2.bl_tree[2 * dr]++, s2 = 0, o2 = i2, 0 === a2 ? (h2 = 138, l2 = 3) : i2 === a2 ? (h2 = 6, l2 = 3) : (h2 = 7, l2 = 4));
  }
  function Zr(e2, t2, r2) {
    var n2, i2, o2 = -1, a2 = t2[1], s2 = 0, h2 = 7, l2 = 4;
    for (0 === a2 && (h2 = 138, l2 = 3), n2 = 0; n2 <= r2; n2++)
      if (i2 = a2, a2 = t2[2 * (n2 + 1) + 1], !(++s2 < h2 && i2 === a2)) {
        if (s2 < l2)
          do {
            Mr(e2, i2, e2.bl_tree);
          } while (0 != --s2);
        else
          0 !== i2 ? (i2 !== o2 && (Mr(e2, i2, e2.bl_tree), s2--), Mr(e2, cr, e2.bl_tree), Tr(e2, s2 - 3, 2)) : s2 <= 10 ? (Mr(e2, ur, e2.bl_tree), Tr(e2, s2 - 3, 3)) : (Mr(e2, dr, e2.bl_tree), Tr(e2, s2 - 11, 7));
        s2 = 0, o2 = i2, 0 === a2 ? (h2 = 138, l2 = 3) : i2 === a2 ? (h2 = 6, l2 = 3) : (h2 = 7, l2 = 4);
      }
  }
  $t$1(Rr);
  var jr = false;
  function Wr(e2) {
    jr || (!function() {
      var e3, t2, r2, n2, i2, o2 = new Array(sr + 1);
      for (r2 = 0, n2 = 0; n2 < tr - 1; n2++)
        for (kr[n2] = r2, e3 = 0; e3 < 1 << pr[n2]; e3++)
          mr[r2++] = n2;
      for (mr[r2 - 1] = n2, i2 = 0, n2 = 0; n2 < 16; n2++)
        for (Rr[n2] = i2, e3 = 0; e3 < 1 << _r[n2]; e3++)
          yr[i2++] = n2;
      for (i2 >>= 7; n2 < ir; n2++)
        for (Rr[n2] = i2 << 7, e3 = 0; e3 < 1 << _r[n2] - 7; e3++)
          yr[256 + i2++] = n2;
      for (t2 = 0; t2 <= sr; t2++)
        o2[t2] = 0;
      for (e3 = 0; e3 <= 143; )
        wr[2 * e3 + 1] = 8, e3++, o2[8]++;
      for (; e3 <= 255; )
        wr[2 * e3 + 1] = 9, e3++, o2[9]++;
      for (; e3 <= 279; )
        wr[2 * e3 + 1] = 7, e3++, o2[7]++;
      for (; e3 <= 287; )
        wr[2 * e3 + 1] = 8, e3++, o2[8]++;
      for (Dr(wr, nr + 1, o2), e3 = 0; e3 < ir; e3++)
        br[2 * e3 + 1] = 5, br[2 * e3] = Cr(e3, 5);
      Er = new Ar(wr, pr, rr + 1, nr, sr), Sr = new Ar(br, _r, 0, ir, sr), xr = new Ar(new Array(0), gr, 0, or, lr);
    }(), jr = true), e2.l_desc = new Br(e2.dyn_ltree, Er), e2.d_desc = new Br(e2.dyn_dtree, Sr), e2.bl_desc = new Br(e2.bl_tree, xr), e2.bi_buf = 0, e2.bi_valid = 0, Ir(e2);
  }
  function Yr(e2, t2, r2, n2) {
    Tr(e2, (Jt$1 << 1) + (n2 ? 1 : 0), 3), function(e3, t3, r3, n3) {
      Pr(e3), n3 && (Lr(e3, r3), Lr(e3, ~r3)), jt$1(e3.pending_buf, e3.window, t3, r3, e3.pending), e3.pending += r3;
    }(e2, t2, r2, true);
  }
  function Kr(e2) {
    Tr(e2, Qt$1 << 1, 3), Mr(e2, fr, wr), function(e3) {
      16 === e3.bi_valid ? (Lr(e3, e3.bi_buf), e3.bi_buf = 0, e3.bi_valid = 0) : e3.bi_valid >= 8 && (e3.pending_buf[e3.pending++] = 255 & e3.bi_buf, e3.bi_buf >>= 8, e3.bi_valid -= 8);
    }(e2);
  }
  function Xr(e2, t2, r2, n2) {
    var i2, o2, a2 = 0;
    e2.level > 0 ? (e2.strm.data_type === Gt$1 && (e2.strm.data_type = function(e3) {
      var t3, r3 = 4093624447;
      for (t3 = 0; t3 <= 31; t3++, r3 >>>= 1)
        if (1 & r3 && 0 !== e3.dyn_ltree[2 * t3])
          return qt;
      if (0 !== e3.dyn_ltree[18] || 0 !== e3.dyn_ltree[20] || 0 !== e3.dyn_ltree[26])
        return Vt$1;
      for (t3 = 32; t3 < rr; t3++)
        if (0 !== e3.dyn_ltree[2 * t3])
          return Vt$1;
      return qt;
    }(e2)), Fr(e2, e2.l_desc), Fr(e2, e2.d_desc), a2 = function(e3) {
      var t3;
      for (Nr(e3, e3.dyn_ltree, e3.l_desc.max_code), Nr(e3, e3.dyn_dtree, e3.d_desc.max_code), Fr(e3, e3.bl_desc), t3 = or - 1; t3 >= 3 && 0 === e3.bl_tree[2 * vr[t3] + 1]; t3--)
        ;
      return e3.opt_len += 3 * (t3 + 1) + 5 + 5 + 4, t3;
    }(e2), i2 = e2.opt_len + 3 + 7 >>> 3, (o2 = e2.static_len + 3 + 7 >>> 3) <= i2 && (i2 = o2)) : i2 = o2 = r2 + 5, r2 + 4 <= i2 && -1 !== t2 ? Yr(e2, t2, r2, n2) : e2.strategy === Xt$1 || o2 === i2 ? (Tr(e2, (Qt$1 << 1) + (n2 ? 1 : 0), 3), Hr(e2, wr, br)) : (Tr(e2, (er << 1) + (n2 ? 1 : 0), 3), function(e3, t3, r3, n3) {
      var i3;
      for (Tr(e3, t3 - 257, 5), Tr(e3, r3 - 1, 5), Tr(e3, n3 - 4, 4), i3 = 0; i3 < n3; i3++)
        Tr(e3, e3.bl_tree[2 * vr[i3] + 1], 3);
      Zr(e3, e3.dyn_ltree, t3 - 1), Zr(e3, e3.dyn_dtree, r3 - 1);
    }(e2, e2.l_desc.max_code + 1, e2.d_desc.max_code + 1, a2 + 1), Hr(e2, e2.dyn_ltree, e2.dyn_dtree)), Ir(e2), n2 && Pr(e2);
  }
  function qr(e2, t2, r2) {
    return e2.pending_buf[e2.d_buf + 2 * e2.last_lit] = t2 >>> 8 & 255, e2.pending_buf[e2.d_buf + 2 * e2.last_lit + 1] = 255 & t2, e2.pending_buf[e2.l_buf + e2.last_lit] = 255 & r2, e2.last_lit++, 0 === t2 ? e2.dyn_ltree[2 * r2]++ : (e2.matches++, t2--, e2.dyn_ltree[2 * (mr[r2] + rr + 1)]++, e2.dyn_dtree[2 * zr(t2)]++), e2.last_lit === e2.lit_bufsize - 1;
  }
  function Vr(e2, t2, r2, n2) {
    for (var i2 = 65535 & e2 | 0, o2 = e2 >>> 16 & 65535 | 0, a2 = 0; 0 !== r2; ) {
      r2 -= a2 = r2 > 2e3 ? 2e3 : r2;
      do {
        o2 = o2 + (i2 = i2 + t2[n2++] | 0) | 0;
      } while (--a2);
      i2 %= 65521, o2 %= 65521;
    }
    return i2 | o2 << 16 | 0;
  }
  var Gr = function() {
    for (var e2, t2 = [], r2 = 0; r2 < 256; r2++) {
      e2 = r2;
      for (var n2 = 0; n2 < 8; n2++)
        e2 = 1 & e2 ? 3988292384 ^ e2 >>> 1 : e2 >>> 1;
      t2[r2] = e2;
    }
    return t2;
  }();
  function $r(e2, t2, r2, n2) {
    var i2 = Gr, o2 = n2 + r2;
    e2 ^= -1;
    for (var a2 = n2; a2 < o2; a2++)
      e2 = e2 >>> 8 ^ i2[255 & (e2 ^ t2[a2])];
    return -1 ^ e2;
  }
  var Jr, Qr = 0, en$2 = 1, tn = 3, rn = 4, nn = 5, on = 0, an = 1, sn = -2, hn = -3, ln = -5, fn = -1, cn = 1, un = 2, dn = 3, pn = 4, _n = 2, gn = 8, vn = 9, wn = 286, bn = 30, yn = 19, mn = 2 * wn + 1, kn = 15, En = 3, Sn = 258, xn = Sn + En + 1, Rn = 32, An = 42, Bn = 69, zn = 73, Ln = 91, Tn = 103, Mn = 113, Cn = 666, Dn = 1, In = 2, Pn = 3, On = 4, Un = 3;
  function Hn(e2, t2) {
    return e2.msg = Nt$1[t2], t2;
  }
  function Fn(e2) {
    return (e2 << 1) - (e2 > 4 ? 9 : 0);
  }
  function Nn(e2) {
    for (var t2 = e2.length; --t2 >= 0; )
      e2[t2] = 0;
  }
  function Zn(e2) {
    var t2 = e2.state, r2 = t2.pending;
    r2 > e2.avail_out && (r2 = e2.avail_out), 0 !== r2 && (jt$1(e2.output, t2.pending_buf, t2.pending_out, r2, e2.next_out), e2.next_out += r2, t2.pending_out += r2, e2.total_out += r2, e2.avail_out -= r2, t2.pending -= r2, 0 === t2.pending && (t2.pending_out = 0));
  }
  function jn(e2, t2) {
    Xr(e2, e2.block_start >= 0 ? e2.block_start : -1, e2.strstart - e2.block_start, t2), e2.block_start = e2.strstart, Zn(e2.strm);
  }
  function Wn(e2, t2) {
    e2.pending_buf[e2.pending++] = t2;
  }
  function Yn(e2, t2) {
    e2.pending_buf[e2.pending++] = t2 >>> 8 & 255, e2.pending_buf[e2.pending++] = 255 & t2;
  }
  function Kn(e2, t2) {
    var r2, n2, i2 = e2.max_chain_length, o2 = e2.strstart, a2 = e2.prev_length, s2 = e2.nice_match, h2 = e2.strstart > e2.w_size - xn ? e2.strstart - (e2.w_size - xn) : 0, l2 = e2.window, f2 = e2.w_mask, c2 = e2.prev, u2 = e2.strstart + Sn, d2 = l2[o2 + a2 - 1], p2 = l2[o2 + a2];
    e2.prev_length >= e2.good_match && (i2 >>= 2), s2 > e2.lookahead && (s2 = e2.lookahead);
    do {
      if (l2[(r2 = t2) + a2] === p2 && l2[r2 + a2 - 1] === d2 && l2[r2] === l2[o2] && l2[++r2] === l2[o2 + 1]) {
        o2 += 2, r2++;
        do {
        } while (l2[++o2] === l2[++r2] && l2[++o2] === l2[++r2] && l2[++o2] === l2[++r2] && l2[++o2] === l2[++r2] && l2[++o2] === l2[++r2] && l2[++o2] === l2[++r2] && l2[++o2] === l2[++r2] && l2[++o2] === l2[++r2] && o2 < u2);
        if (n2 = Sn - (u2 - o2), o2 = u2 - Sn, n2 > a2) {
          if (e2.match_start = t2, a2 = n2, n2 >= s2)
            break;
          d2 = l2[o2 + a2 - 1], p2 = l2[o2 + a2];
        }
      }
    } while ((t2 = c2[t2 & f2]) > h2 && 0 != --i2);
    return a2 <= e2.lookahead ? a2 : e2.lookahead;
  }
  function Xn(e2) {
    var t2, r2, n2, i2, o2, a2, s2, h2, l2, f2, c2 = e2.w_size;
    do {
      if (i2 = e2.window_size - e2.lookahead - e2.strstart, e2.strstart >= c2 + (c2 - xn)) {
        jt$1(e2.window, e2.window, c2, c2, 0), e2.match_start -= c2, e2.strstart -= c2, e2.block_start -= c2, t2 = r2 = e2.hash_size;
        do {
          n2 = e2.head[--t2], e2.head[t2] = n2 >= c2 ? n2 - c2 : 0;
        } while (--r2);
        t2 = r2 = c2;
        do {
          n2 = e2.prev[--t2], e2.prev[t2] = n2 >= c2 ? n2 - c2 : 0;
        } while (--r2);
        i2 += c2;
      }
      if (0 === e2.strm.avail_in)
        break;
      if (a2 = e2.strm, s2 = e2.window, h2 = e2.strstart + e2.lookahead, l2 = i2, f2 = void 0, (f2 = a2.avail_in) > l2 && (f2 = l2), r2 = 0 === f2 ? 0 : (a2.avail_in -= f2, jt$1(s2, a2.input, a2.next_in, f2, h2), 1 === a2.state.wrap ? a2.adler = Vr(a2.adler, s2, f2, h2) : 2 === a2.state.wrap && (a2.adler = $r(a2.adler, s2, f2, h2)), a2.next_in += f2, a2.total_in += f2, f2), e2.lookahead += r2, e2.lookahead + e2.insert >= En)
        for (o2 = e2.strstart - e2.insert, e2.ins_h = e2.window[o2], e2.ins_h = (e2.ins_h << e2.hash_shift ^ e2.window[o2 + 1]) & e2.hash_mask; e2.insert && (e2.ins_h = (e2.ins_h << e2.hash_shift ^ e2.window[o2 + En - 1]) & e2.hash_mask, e2.prev[o2 & e2.w_mask] = e2.head[e2.ins_h], e2.head[e2.ins_h] = o2, o2++, e2.insert--, !(e2.lookahead + e2.insert < En)); )
          ;
    } while (e2.lookahead < xn && 0 !== e2.strm.avail_in);
  }
  function qn(e2, t2) {
    for (var r2, n2; ; ) {
      if (e2.lookahead < xn) {
        if (Xn(e2), e2.lookahead < xn && t2 === Qr)
          return Dn;
        if (0 === e2.lookahead)
          break;
      }
      if (r2 = 0, e2.lookahead >= En && (e2.ins_h = (e2.ins_h << e2.hash_shift ^ e2.window[e2.strstart + En - 1]) & e2.hash_mask, r2 = e2.prev[e2.strstart & e2.w_mask] = e2.head[e2.ins_h], e2.head[e2.ins_h] = e2.strstart), 0 !== r2 && e2.strstart - r2 <= e2.w_size - xn && (e2.match_length = Kn(e2, r2)), e2.match_length >= En)
        if (n2 = qr(e2, e2.strstart - e2.match_start, e2.match_length - En), e2.lookahead -= e2.match_length, e2.match_length <= e2.max_lazy_match && e2.lookahead >= En) {
          e2.match_length--;
          do {
            e2.strstart++, e2.ins_h = (e2.ins_h << e2.hash_shift ^ e2.window[e2.strstart + En - 1]) & e2.hash_mask, r2 = e2.prev[e2.strstart & e2.w_mask] = e2.head[e2.ins_h], e2.head[e2.ins_h] = e2.strstart;
          } while (0 != --e2.match_length);
          e2.strstart++;
        } else
          e2.strstart += e2.match_length, e2.match_length = 0, e2.ins_h = e2.window[e2.strstart], e2.ins_h = (e2.ins_h << e2.hash_shift ^ e2.window[e2.strstart + 1]) & e2.hash_mask;
      else
        n2 = qr(e2, 0, e2.window[e2.strstart]), e2.lookahead--, e2.strstart++;
      if (n2 && (jn(e2, false), 0 === e2.strm.avail_out))
        return Dn;
    }
    return e2.insert = e2.strstart < En - 1 ? e2.strstart : En - 1, t2 === rn ? (jn(e2, true), 0 === e2.strm.avail_out ? Pn : On) : e2.last_lit && (jn(e2, false), 0 === e2.strm.avail_out) ? Dn : In;
  }
  function Vn(e2, t2) {
    for (var r2, n2, i2; ; ) {
      if (e2.lookahead < xn) {
        if (Xn(e2), e2.lookahead < xn && t2 === Qr)
          return Dn;
        if (0 === e2.lookahead)
          break;
      }
      if (r2 = 0, e2.lookahead >= En && (e2.ins_h = (e2.ins_h << e2.hash_shift ^ e2.window[e2.strstart + En - 1]) & e2.hash_mask, r2 = e2.prev[e2.strstart & e2.w_mask] = e2.head[e2.ins_h], e2.head[e2.ins_h] = e2.strstart), e2.prev_length = e2.match_length, e2.prev_match = e2.match_start, e2.match_length = En - 1, 0 !== r2 && e2.prev_length < e2.max_lazy_match && e2.strstart - r2 <= e2.w_size - xn && (e2.match_length = Kn(e2, r2), e2.match_length <= 5 && (e2.strategy === cn || e2.match_length === En && e2.strstart - e2.match_start > 4096) && (e2.match_length = En - 1)), e2.prev_length >= En && e2.match_length <= e2.prev_length) {
        i2 = e2.strstart + e2.lookahead - En, n2 = qr(e2, e2.strstart - 1 - e2.prev_match, e2.prev_length - En), e2.lookahead -= e2.prev_length - 1, e2.prev_length -= 2;
        do {
          ++e2.strstart <= i2 && (e2.ins_h = (e2.ins_h << e2.hash_shift ^ e2.window[e2.strstart + En - 1]) & e2.hash_mask, r2 = e2.prev[e2.strstart & e2.w_mask] = e2.head[e2.ins_h], e2.head[e2.ins_h] = e2.strstart);
        } while (0 != --e2.prev_length);
        if (e2.match_available = 0, e2.match_length = En - 1, e2.strstart++, n2 && (jn(e2, false), 0 === e2.strm.avail_out))
          return Dn;
      } else if (e2.match_available) {
        if ((n2 = qr(e2, 0, e2.window[e2.strstart - 1])) && jn(e2, false), e2.strstart++, e2.lookahead--, 0 === e2.strm.avail_out)
          return Dn;
      } else
        e2.match_available = 1, e2.strstart++, e2.lookahead--;
    }
    return e2.match_available && (n2 = qr(e2, 0, e2.window[e2.strstart - 1]), e2.match_available = 0), e2.insert = e2.strstart < En - 1 ? e2.strstart : En - 1, t2 === rn ? (jn(e2, true), 0 === e2.strm.avail_out ? Pn : On) : e2.last_lit && (jn(e2, false), 0 === e2.strm.avail_out) ? Dn : In;
  }
  function Gn(e2, t2, r2, n2, i2) {
    this.good_length = e2, this.max_lazy = t2, this.nice_length = r2, this.max_chain = n2, this.func = i2;
  }
  function $n() {
    this.strm = null, this.status = 0, this.pending_buf = null, this.pending_buf_size = 0, this.pending_out = 0, this.pending = 0, this.wrap = 0, this.gzhead = null, this.gzindex = 0, this.method = gn, this.last_flush = -1, this.w_size = 0, this.w_bits = 0, this.w_mask = 0, this.window = null, this.window_size = 0, this.prev = null, this.head = null, this.ins_h = 0, this.hash_size = 0, this.hash_bits = 0, this.hash_mask = 0, this.hash_shift = 0, this.block_start = 0, this.match_length = 0, this.prev_match = 0, this.match_available = 0, this.strstart = 0, this.match_start = 0, this.lookahead = 0, this.prev_length = 0, this.max_chain_length = 0, this.max_lazy_match = 0, this.level = 0, this.strategy = 0, this.good_match = 0, this.nice_match = 0, this.dyn_ltree = new Yt$1(2 * mn), this.dyn_dtree = new Yt$1(2 * (2 * bn + 1)), this.bl_tree = new Yt$1(2 * (2 * yn + 1)), Nn(this.dyn_ltree), Nn(this.dyn_dtree), Nn(this.bl_tree), this.l_desc = null, this.d_desc = null, this.bl_desc = null, this.bl_count = new Yt$1(kn + 1), this.heap = new Yt$1(2 * wn + 1), Nn(this.heap), this.heap_len = 0, this.heap_max = 0, this.depth = new Yt$1(2 * wn + 1), Nn(this.depth), this.l_buf = 0, this.lit_bufsize = 0, this.last_lit = 0, this.d_buf = 0, this.opt_len = 0, this.static_len = 0, this.matches = 0, this.insert = 0, this.bi_buf = 0, this.bi_valid = 0;
  }
  function Jn(e2) {
    var t2, r2 = function(e3) {
      var t3;
      return e3 && e3.state ? (e3.total_in = e3.total_out = 0, e3.data_type = _n, (t3 = e3.state).pending = 0, t3.pending_out = 0, t3.wrap < 0 && (t3.wrap = -t3.wrap), t3.status = t3.wrap ? An : Mn, e3.adler = 2 === t3.wrap ? 0 : 1, t3.last_flush = Qr, Wr(t3), on) : Hn(e3, sn);
    }(e2);
    return r2 === on && ((t2 = e2.state).window_size = 2 * t2.w_size, Nn(t2.head), t2.max_lazy_match = Jr[t2.level].max_lazy, t2.good_match = Jr[t2.level].good_length, t2.nice_match = Jr[t2.level].nice_length, t2.max_chain_length = Jr[t2.level].max_chain, t2.strstart = 0, t2.block_start = 0, t2.lookahead = 0, t2.insert = 0, t2.match_length = t2.prev_length = En - 1, t2.match_available = 0, t2.ins_h = 0), r2;
  }
  function Qn(e2, t2) {
    var r2, n2, i2, o2;
    if (!e2 || !e2.state || t2 > nn || t2 < 0)
      return e2 ? Hn(e2, sn) : sn;
    if (n2 = e2.state, !e2.output || !e2.input && 0 !== e2.avail_in || n2.status === Cn && t2 !== rn)
      return Hn(e2, 0 === e2.avail_out ? ln : sn);
    if (n2.strm = e2, r2 = n2.last_flush, n2.last_flush = t2, n2.status === An)
      if (2 === n2.wrap)
        e2.adler = 0, Wn(n2, 31), Wn(n2, 139), Wn(n2, 8), n2.gzhead ? (Wn(n2, (n2.gzhead.text ? 1 : 0) + (n2.gzhead.hcrc ? 2 : 0) + (n2.gzhead.extra ? 4 : 0) + (n2.gzhead.name ? 8 : 0) + (n2.gzhead.comment ? 16 : 0)), Wn(n2, 255 & n2.gzhead.time), Wn(n2, n2.gzhead.time >> 8 & 255), Wn(n2, n2.gzhead.time >> 16 & 255), Wn(n2, n2.gzhead.time >> 24 & 255), Wn(n2, 9 === n2.level ? 2 : n2.strategy >= un || n2.level < 2 ? 4 : 0), Wn(n2, 255 & n2.gzhead.os), n2.gzhead.extra && n2.gzhead.extra.length && (Wn(n2, 255 & n2.gzhead.extra.length), Wn(n2, n2.gzhead.extra.length >> 8 & 255)), n2.gzhead.hcrc && (e2.adler = $r(e2.adler, n2.pending_buf, n2.pending, 0)), n2.gzindex = 0, n2.status = Bn) : (Wn(n2, 0), Wn(n2, 0), Wn(n2, 0), Wn(n2, 0), Wn(n2, 0), Wn(n2, 9 === n2.level ? 2 : n2.strategy >= un || n2.level < 2 ? 4 : 0), Wn(n2, Un), n2.status = Mn);
      else {
        var a2 = gn + (n2.w_bits - 8 << 4) << 8;
        a2 |= (n2.strategy >= un || n2.level < 2 ? 0 : n2.level < 6 ? 1 : 6 === n2.level ? 2 : 3) << 6, 0 !== n2.strstart && (a2 |= Rn), a2 += 31 - a2 % 31, n2.status = Mn, Yn(n2, a2), 0 !== n2.strstart && (Yn(n2, e2.adler >>> 16), Yn(n2, 65535 & e2.adler)), e2.adler = 1;
      }
    if (n2.status === Bn)
      if (n2.gzhead.extra) {
        for (i2 = n2.pending; n2.gzindex < (65535 & n2.gzhead.extra.length) && (n2.pending !== n2.pending_buf_size || (n2.gzhead.hcrc && n2.pending > i2 && (e2.adler = $r(e2.adler, n2.pending_buf, n2.pending - i2, i2)), Zn(e2), i2 = n2.pending, n2.pending !== n2.pending_buf_size)); )
          Wn(n2, 255 & n2.gzhead.extra[n2.gzindex]), n2.gzindex++;
        n2.gzhead.hcrc && n2.pending > i2 && (e2.adler = $r(e2.adler, n2.pending_buf, n2.pending - i2, i2)), n2.gzindex === n2.gzhead.extra.length && (n2.gzindex = 0, n2.status = zn);
      } else
        n2.status = zn;
    if (n2.status === zn)
      if (n2.gzhead.name) {
        i2 = n2.pending;
        do {
          if (n2.pending === n2.pending_buf_size && (n2.gzhead.hcrc && n2.pending > i2 && (e2.adler = $r(e2.adler, n2.pending_buf, n2.pending - i2, i2)), Zn(e2), i2 = n2.pending, n2.pending === n2.pending_buf_size)) {
            o2 = 1;
            break;
          }
          o2 = n2.gzindex < n2.gzhead.name.length ? 255 & n2.gzhead.name.charCodeAt(n2.gzindex++) : 0, Wn(n2, o2);
        } while (0 !== o2);
        n2.gzhead.hcrc && n2.pending > i2 && (e2.adler = $r(e2.adler, n2.pending_buf, n2.pending - i2, i2)), 0 === o2 && (n2.gzindex = 0, n2.status = Ln);
      } else
        n2.status = Ln;
    if (n2.status === Ln)
      if (n2.gzhead.comment) {
        i2 = n2.pending;
        do {
          if (n2.pending === n2.pending_buf_size && (n2.gzhead.hcrc && n2.pending > i2 && (e2.adler = $r(e2.adler, n2.pending_buf, n2.pending - i2, i2)), Zn(e2), i2 = n2.pending, n2.pending === n2.pending_buf_size)) {
            o2 = 1;
            break;
          }
          o2 = n2.gzindex < n2.gzhead.comment.length ? 255 & n2.gzhead.comment.charCodeAt(n2.gzindex++) : 0, Wn(n2, o2);
        } while (0 !== o2);
        n2.gzhead.hcrc && n2.pending > i2 && (e2.adler = $r(e2.adler, n2.pending_buf, n2.pending - i2, i2)), 0 === o2 && (n2.status = Tn);
      } else
        n2.status = Tn;
    if (n2.status === Tn && (n2.gzhead.hcrc ? (n2.pending + 2 > n2.pending_buf_size && Zn(e2), n2.pending + 2 <= n2.pending_buf_size && (Wn(n2, 255 & e2.adler), Wn(n2, e2.adler >> 8 & 255), e2.adler = 0, n2.status = Mn)) : n2.status = Mn), 0 !== n2.pending) {
      if (Zn(e2), 0 === e2.avail_out)
        return n2.last_flush = -1, on;
    } else if (0 === e2.avail_in && Fn(t2) <= Fn(r2) && t2 !== rn)
      return Hn(e2, ln);
    if (n2.status === Cn && 0 !== e2.avail_in)
      return Hn(e2, ln);
    if (0 !== e2.avail_in || 0 !== n2.lookahead || t2 !== Qr && n2.status !== Cn) {
      var s2 = n2.strategy === un ? function(e3, t3) {
        for (var r3; ; ) {
          if (0 === e3.lookahead && (Xn(e3), 0 === e3.lookahead)) {
            if (t3 === Qr)
              return Dn;
            break;
          }
          if (e3.match_length = 0, r3 = qr(e3, 0, e3.window[e3.strstart]), e3.lookahead--, e3.strstart++, r3 && (jn(e3, false), 0 === e3.strm.avail_out))
            return Dn;
        }
        return e3.insert = 0, t3 === rn ? (jn(e3, true), 0 === e3.strm.avail_out ? Pn : On) : e3.last_lit && (jn(e3, false), 0 === e3.strm.avail_out) ? Dn : In;
      }(n2, t2) : n2.strategy === dn ? function(e3, t3) {
        for (var r3, n3, i3, o3, a3 = e3.window; ; ) {
          if (e3.lookahead <= Sn) {
            if (Xn(e3), e3.lookahead <= Sn && t3 === Qr)
              return Dn;
            if (0 === e3.lookahead)
              break;
          }
          if (e3.match_length = 0, e3.lookahead >= En && e3.strstart > 0 && (n3 = a3[i3 = e3.strstart - 1]) === a3[++i3] && n3 === a3[++i3] && n3 === a3[++i3]) {
            o3 = e3.strstart + Sn;
            do {
            } while (n3 === a3[++i3] && n3 === a3[++i3] && n3 === a3[++i3] && n3 === a3[++i3] && n3 === a3[++i3] && n3 === a3[++i3] && n3 === a3[++i3] && n3 === a3[++i3] && i3 < o3);
            e3.match_length = Sn - (o3 - i3), e3.match_length > e3.lookahead && (e3.match_length = e3.lookahead);
          }
          if (e3.match_length >= En ? (r3 = qr(e3, 1, e3.match_length - En), e3.lookahead -= e3.match_length, e3.strstart += e3.match_length, e3.match_length = 0) : (r3 = qr(e3, 0, e3.window[e3.strstart]), e3.lookahead--, e3.strstart++), r3 && (jn(e3, false), 0 === e3.strm.avail_out))
            return Dn;
        }
        return e3.insert = 0, t3 === rn ? (jn(e3, true), 0 === e3.strm.avail_out ? Pn : On) : e3.last_lit && (jn(e3, false), 0 === e3.strm.avail_out) ? Dn : In;
      }(n2, t2) : Jr[n2.level].func(n2, t2);
      if (s2 !== Pn && s2 !== On || (n2.status = Cn), s2 === Dn || s2 === Pn)
        return 0 === e2.avail_out && (n2.last_flush = -1), on;
      if (s2 === In && (t2 === en$2 ? Kr(n2) : t2 !== nn && (Yr(n2, 0, 0, false), t2 === tn && (Nn(n2.head), 0 === n2.lookahead && (n2.strstart = 0, n2.block_start = 0, n2.insert = 0))), Zn(e2), 0 === e2.avail_out))
        return n2.last_flush = -1, on;
    }
    return t2 !== rn ? on : n2.wrap <= 0 ? an : (2 === n2.wrap ? (Wn(n2, 255 & e2.adler), Wn(n2, e2.adler >> 8 & 255), Wn(n2, e2.adler >> 16 & 255), Wn(n2, e2.adler >> 24 & 255), Wn(n2, 255 & e2.total_in), Wn(n2, e2.total_in >> 8 & 255), Wn(n2, e2.total_in >> 16 & 255), Wn(n2, e2.total_in >> 24 & 255)) : (Yn(n2, e2.adler >>> 16), Yn(n2, 65535 & e2.adler)), Zn(e2), n2.wrap > 0 && (n2.wrap = -n2.wrap), 0 !== n2.pending ? on : an);
  }
  Jr = [new Gn(0, 0, 0, 0, function(e2, t2) {
    var r2 = 65535;
    for (r2 > e2.pending_buf_size - 5 && (r2 = e2.pending_buf_size - 5); ; ) {
      if (e2.lookahead <= 1) {
        if (Xn(e2), 0 === e2.lookahead && t2 === Qr)
          return Dn;
        if (0 === e2.lookahead)
          break;
      }
      e2.strstart += e2.lookahead, e2.lookahead = 0;
      var n2 = e2.block_start + r2;
      if ((0 === e2.strstart || e2.strstart >= n2) && (e2.lookahead = e2.strstart - n2, e2.strstart = n2, jn(e2, false), 0 === e2.strm.avail_out))
        return Dn;
      if (e2.strstart - e2.block_start >= e2.w_size - xn && (jn(e2, false), 0 === e2.strm.avail_out))
        return Dn;
    }
    return e2.insert = 0, t2 === rn ? (jn(e2, true), 0 === e2.strm.avail_out ? Pn : On) : (e2.strstart > e2.block_start && (jn(e2, false), e2.strm.avail_out), Dn);
  }), new Gn(4, 4, 8, 4, qn), new Gn(4, 5, 16, 8, qn), new Gn(4, 6, 32, 32, qn), new Gn(4, 4, 16, 16, Vn), new Gn(8, 16, 32, 32, Vn), new Gn(8, 16, 128, 128, Vn), new Gn(8, 32, 128, 256, Vn), new Gn(32, 128, 258, 1024, Vn), new Gn(32, 258, 258, 4096, Vn)];
  var ei = 30, ti = 12;
  function ri(e2, t2) {
    var r2, n2, i2, o2, a2, s2, h2, l2, f2, c2, u2, d2, p2, _2, g2, v2, w2, b2, y2, m2, k2, E2, S2, x2, R2;
    r2 = e2.state, n2 = e2.next_in, x2 = e2.input, i2 = n2 + (e2.avail_in - 5), o2 = e2.next_out, R2 = e2.output, a2 = o2 - (t2 - e2.avail_out), s2 = o2 + (e2.avail_out - 257), h2 = r2.dmax, l2 = r2.wsize, f2 = r2.whave, c2 = r2.wnext, u2 = r2.window, d2 = r2.hold, p2 = r2.bits, _2 = r2.lencode, g2 = r2.distcode, v2 = (1 << r2.lenbits) - 1, w2 = (1 << r2.distbits) - 1;
    e:
      do {
        p2 < 15 && (d2 += x2[n2++] << p2, p2 += 8, d2 += x2[n2++] << p2, p2 += 8), b2 = _2[d2 & v2];
        t:
          for (; ; ) {
            if (d2 >>>= y2 = b2 >>> 24, p2 -= y2, 0 === (y2 = b2 >>> 16 & 255))
              R2[o2++] = 65535 & b2;
            else {
              if (!(16 & y2)) {
                if (0 == (64 & y2)) {
                  b2 = _2[(65535 & b2) + (d2 & (1 << y2) - 1)];
                  continue t;
                }
                if (32 & y2) {
                  r2.mode = ti;
                  break e;
                }
                e2.msg = "invalid literal/length code", r2.mode = ei;
                break e;
              }
              m2 = 65535 & b2, (y2 &= 15) && (p2 < y2 && (d2 += x2[n2++] << p2, p2 += 8), m2 += d2 & (1 << y2) - 1, d2 >>>= y2, p2 -= y2), p2 < 15 && (d2 += x2[n2++] << p2, p2 += 8, d2 += x2[n2++] << p2, p2 += 8), b2 = g2[d2 & w2];
              r:
                for (; ; ) {
                  if (d2 >>>= y2 = b2 >>> 24, p2 -= y2, !(16 & (y2 = b2 >>> 16 & 255))) {
                    if (0 == (64 & y2)) {
                      b2 = g2[(65535 & b2) + (d2 & (1 << y2) - 1)];
                      continue r;
                    }
                    e2.msg = "invalid distance code", r2.mode = ei;
                    break e;
                  }
                  if (k2 = 65535 & b2, p2 < (y2 &= 15) && (d2 += x2[n2++] << p2, (p2 += 8) < y2 && (d2 += x2[n2++] << p2, p2 += 8)), (k2 += d2 & (1 << y2) - 1) > h2) {
                    e2.msg = "invalid distance too far back", r2.mode = ei;
                    break e;
                  }
                  if (d2 >>>= y2, p2 -= y2, k2 > (y2 = o2 - a2)) {
                    if ((y2 = k2 - y2) > f2 && r2.sane) {
                      e2.msg = "invalid distance too far back", r2.mode = ei;
                      break e;
                    }
                    if (E2 = 0, S2 = u2, 0 === c2) {
                      if (E2 += l2 - y2, y2 < m2) {
                        m2 -= y2;
                        do {
                          R2[o2++] = u2[E2++];
                        } while (--y2);
                        E2 = o2 - k2, S2 = R2;
                      }
                    } else if (c2 < y2) {
                      if (E2 += l2 + c2 - y2, (y2 -= c2) < m2) {
                        m2 -= y2;
                        do {
                          R2[o2++] = u2[E2++];
                        } while (--y2);
                        if (E2 = 0, c2 < m2) {
                          m2 -= y2 = c2;
                          do {
                            R2[o2++] = u2[E2++];
                          } while (--y2);
                          E2 = o2 - k2, S2 = R2;
                        }
                      }
                    } else if (E2 += c2 - y2, y2 < m2) {
                      m2 -= y2;
                      do {
                        R2[o2++] = u2[E2++];
                      } while (--y2);
                      E2 = o2 - k2, S2 = R2;
                    }
                    for (; m2 > 2; )
                      R2[o2++] = S2[E2++], R2[o2++] = S2[E2++], R2[o2++] = S2[E2++], m2 -= 3;
                    m2 && (R2[o2++] = S2[E2++], m2 > 1 && (R2[o2++] = S2[E2++]));
                  } else {
                    E2 = o2 - k2;
                    do {
                      R2[o2++] = R2[E2++], R2[o2++] = R2[E2++], R2[o2++] = R2[E2++], m2 -= 3;
                    } while (m2 > 2);
                    m2 && (R2[o2++] = R2[E2++], m2 > 1 && (R2[o2++] = R2[E2++]));
                  }
                  break;
                }
            }
            break;
          }
      } while (n2 < i2 && o2 < s2);
    n2 -= m2 = p2 >> 3, d2 &= (1 << (p2 -= m2 << 3)) - 1, e2.next_in = n2, e2.next_out = o2, e2.avail_in = n2 < i2 ? i2 - n2 + 5 : 5 - (n2 - i2), e2.avail_out = o2 < s2 ? s2 - o2 + 257 : 257 - (o2 - s2), r2.hold = d2, r2.bits = p2;
  }
  var ni = 15, ii = 852, oi = 592, ai = 0, si = 1, hi = 2, li = [3, 4, 5, 6, 7, 8, 9, 10, 11, 13, 15, 17, 19, 23, 27, 31, 35, 43, 51, 59, 67, 83, 99, 115, 131, 163, 195, 227, 258, 0, 0], fi = [16, 16, 16, 16, 16, 16, 16, 16, 17, 17, 17, 17, 18, 18, 18, 18, 19, 19, 19, 19, 20, 20, 20, 20, 21, 21, 21, 21, 16, 72, 78], ci = [1, 2, 3, 4, 5, 7, 9, 13, 17, 25, 33, 49, 65, 97, 129, 193, 257, 385, 513, 769, 1025, 1537, 2049, 3073, 4097, 6145, 8193, 12289, 16385, 24577, 0, 0], ui = [16, 16, 16, 16, 17, 17, 18, 18, 19, 19, 20, 20, 21, 21, 22, 22, 23, 23, 24, 24, 25, 25, 26, 26, 27, 27, 28, 28, 29, 29, 64, 64];
  function di(e2, t2, r2, n2, i2, o2, a2, s2) {
    var h2, l2, f2, c2, u2, d2, p2, _2, g2, v2 = s2.bits, w2 = 0, b2 = 0, y2 = 0, m2 = 0, k2 = 0, E2 = 0, S2 = 0, x2 = 0, R2 = 0, A2 = 0, B2 = null, z2 = 0, L2 = new Yt$1(ni + 1), T2 = new Yt$1(ni + 1), M2 = null, C2 = 0;
    for (w2 = 0; w2 <= ni; w2++)
      L2[w2] = 0;
    for (b2 = 0; b2 < n2; b2++)
      L2[t2[r2 + b2]]++;
    for (k2 = v2, m2 = ni; m2 >= 1 && 0 === L2[m2]; m2--)
      ;
    if (k2 > m2 && (k2 = m2), 0 === m2)
      return i2[o2++] = 20971520, i2[o2++] = 20971520, s2.bits = 1, 0;
    for (y2 = 1; y2 < m2 && 0 === L2[y2]; y2++)
      ;
    for (k2 < y2 && (k2 = y2), x2 = 1, w2 = 1; w2 <= ni; w2++)
      if (x2 <<= 1, (x2 -= L2[w2]) < 0)
        return -1;
    if (x2 > 0 && (e2 === ai || 1 !== m2))
      return -1;
    for (T2[1] = 0, w2 = 1; w2 < ni; w2++)
      T2[w2 + 1] = T2[w2] + L2[w2];
    for (b2 = 0; b2 < n2; b2++)
      0 !== t2[r2 + b2] && (a2[T2[t2[r2 + b2]]++] = b2);
    if (e2 === ai ? (B2 = M2 = a2, d2 = 19) : e2 === si ? (B2 = li, z2 -= 257, M2 = fi, C2 -= 257, d2 = 256) : (B2 = ci, M2 = ui, d2 = -1), A2 = 0, b2 = 0, w2 = y2, u2 = o2, E2 = k2, S2 = 0, f2 = -1, c2 = (R2 = 1 << k2) - 1, e2 === si && R2 > ii || e2 === hi && R2 > oi)
      return 1;
    for (; ; ) {
      p2 = w2 - S2, a2[b2] < d2 ? (_2 = 0, g2 = a2[b2]) : a2[b2] > d2 ? (_2 = M2[C2 + a2[b2]], g2 = B2[z2 + a2[b2]]) : (_2 = 96, g2 = 0), h2 = 1 << w2 - S2, y2 = l2 = 1 << E2;
      do {
        i2[u2 + (A2 >> S2) + (l2 -= h2)] = p2 << 24 | _2 << 16 | g2 | 0;
      } while (0 !== l2);
      for (h2 = 1 << w2 - 1; A2 & h2; )
        h2 >>= 1;
      if (0 !== h2 ? (A2 &= h2 - 1, A2 += h2) : A2 = 0, b2++, 0 == --L2[w2]) {
        if (w2 === m2)
          break;
        w2 = t2[r2 + a2[b2]];
      }
      if (w2 > k2 && (A2 & c2) !== f2) {
        for (0 === S2 && (S2 = k2), u2 += y2, x2 = 1 << (E2 = w2 - S2); E2 + S2 < m2 && !((x2 -= L2[E2 + S2]) <= 0); )
          E2++, x2 <<= 1;
        if (R2 += 1 << E2, e2 === si && R2 > ii || e2 === hi && R2 > oi)
          return 1;
        i2[f2 = A2 & c2] = k2 << 24 | E2 << 16 | u2 - o2 | 0;
      }
    }
    return 0 !== A2 && (i2[u2 + A2] = w2 - S2 << 24 | 64 << 16 | 0), s2.bits = k2, 0;
  }
  var pi = 0, _i = 1, gi = 2, vi = 4, wi = 5, bi = 6, yi = 0, mi = 1, ki = 2, Ei = -2, Si = -3, xi = -4, Ri = -5, Ai = 8, Bi = 1, zi = 2, Li = 3, Ti = 4, Mi = 5, Ci = 6, Di = 7, Ii = 8, Pi = 9, Oi = 10, Ui = 11, Hi = 12, Fi = 13, Ni = 14, Zi = 15, ji = 16, Wi = 17, Yi = 18, Ki = 19, Xi = 20, qi = 21, Vi = 22, Gi = 23, $i = 24, Ji = 25, Qi = 26, eo = 27, to = 28, ro = 29, no = 30, io = 31, oo = 32, ao = 852, so = 592;
  function ho(e2) {
    return (e2 >>> 24 & 255) + (e2 >>> 8 & 65280) + ((65280 & e2) << 8) + ((255 & e2) << 24);
  }
  function lo() {
    this.mode = 0, this.last = false, this.wrap = 0, this.havedict = false, this.flags = 0, this.dmax = 0, this.check = 0, this.total = 0, this.head = null, this.wbits = 0, this.wsize = 0, this.whave = 0, this.wnext = 0, this.window = null, this.hold = 0, this.bits = 0, this.length = 0, this.offset = 0, this.extra = 0, this.lencode = null, this.distcode = null, this.lenbits = 0, this.distbits = 0, this.ncode = 0, this.nlen = 0, this.ndist = 0, this.have = 0, this.next = null, this.lens = new Yt$1(320), this.work = new Yt$1(288), this.lendyn = null, this.distdyn = null, this.sane = 0, this.back = 0, this.was = 0;
  }
  function fo(e2) {
    var t2;
    return e2 && e2.state ? ((t2 = e2.state).wsize = 0, t2.whave = 0, t2.wnext = 0, function(e3) {
      var t3;
      return e3 && e3.state ? (t3 = e3.state, e3.total_in = e3.total_out = t3.total = 0, e3.msg = "", t3.wrap && (e3.adler = 1 & t3.wrap), t3.mode = Bi, t3.last = 0, t3.havedict = 0, t3.dmax = 32768, t3.head = null, t3.hold = 0, t3.bits = 0, t3.lencode = t3.lendyn = new Kt$1(ao), t3.distcode = t3.distdyn = new Kt$1(so), t3.sane = 1, t3.back = -1, yi) : Ei;
    }(e2)) : Ei;
  }
  function co(e2, t2) {
    var r2, n2;
    return e2 ? (n2 = new lo(), e2.state = n2, n2.window = null, (r2 = function(e3, t3) {
      var r3, n3;
      return e3 && e3.state ? (n3 = e3.state, t3 < 0 ? (r3 = 0, t3 = -t3) : (r3 = 1 + (t3 >> 4), t3 < 48 && (t3 &= 15)), t3 && (t3 < 8 || t3 > 15) ? Ei : (null !== n3.window && n3.wbits !== t3 && (n3.window = null), n3.wrap = r3, n3.wbits = t3, fo(e3))) : Ei;
    }(e2, t2)) !== yi && (e2.state = null), r2) : Ei;
  }
  var uo, po, _o = true;
  function go(e2) {
    if (_o) {
      var t2;
      for (uo = new Kt$1(512), po = new Kt$1(32), t2 = 0; t2 < 144; )
        e2.lens[t2++] = 8;
      for (; t2 < 256; )
        e2.lens[t2++] = 9;
      for (; t2 < 280; )
        e2.lens[t2++] = 7;
      for (; t2 < 288; )
        e2.lens[t2++] = 8;
      for (di(_i, e2.lens, 0, 288, uo, 0, e2.work, { bits: 9 }), t2 = 0; t2 < 32; )
        e2.lens[t2++] = 5;
      di(gi, e2.lens, 0, 32, po, 0, e2.work, { bits: 5 }), _o = false;
    }
    e2.lencode = uo, e2.lenbits = 9, e2.distcode = po, e2.distbits = 5;
  }
  function vo(e2, t2) {
    var r2, n2, i2, o2, a2, s2, h2, l2, f2, c2, u2, d2, p2, _2, g2, v2, w2, b2, y2, m2, k2, E2, S2, x2, R2 = 0, A2 = new Wt$1(4), B2 = [16, 17, 18, 0, 8, 7, 9, 6, 10, 5, 11, 4, 12, 3, 13, 2, 14, 1, 15];
    if (!e2 || !e2.state || !e2.output || !e2.input && 0 !== e2.avail_in)
      return Ei;
    (r2 = e2.state).mode === Hi && (r2.mode = Fi), a2 = e2.next_out, i2 = e2.output, h2 = e2.avail_out, o2 = e2.next_in, n2 = e2.input, s2 = e2.avail_in, l2 = r2.hold, f2 = r2.bits, c2 = s2, u2 = h2, E2 = yi;
    e:
      for (; ; )
        switch (r2.mode) {
          case Bi:
            if (0 === r2.wrap) {
              r2.mode = Fi;
              break;
            }
            for (; f2 < 16; ) {
              if (0 === s2)
                break e;
              s2--, l2 += n2[o2++] << f2, f2 += 8;
            }
            if (2 & r2.wrap && 35615 === l2) {
              r2.check = 0, A2[0] = 255 & l2, A2[1] = l2 >>> 8 & 255, r2.check = $r(r2.check, A2, 2, 0), l2 = 0, f2 = 0, r2.mode = zi;
              break;
            }
            if (r2.flags = 0, r2.head && (r2.head.done = false), !(1 & r2.wrap) || (((255 & l2) << 8) + (l2 >> 8)) % 31) {
              e2.msg = "incorrect header check", r2.mode = no;
              break;
            }
            if ((15 & l2) !== Ai) {
              e2.msg = "unknown compression method", r2.mode = no;
              break;
            }
            if (f2 -= 4, k2 = 8 + (15 & (l2 >>>= 4)), 0 === r2.wbits)
              r2.wbits = k2;
            else if (k2 > r2.wbits) {
              e2.msg = "invalid window size", r2.mode = no;
              break;
            }
            r2.dmax = 1 << k2, e2.adler = r2.check = 1, r2.mode = 512 & l2 ? Oi : Hi, l2 = 0, f2 = 0;
            break;
          case zi:
            for (; f2 < 16; ) {
              if (0 === s2)
                break e;
              s2--, l2 += n2[o2++] << f2, f2 += 8;
            }
            if (r2.flags = l2, (255 & r2.flags) !== Ai) {
              e2.msg = "unknown compression method", r2.mode = no;
              break;
            }
            if (57344 & r2.flags) {
              e2.msg = "unknown header flags set", r2.mode = no;
              break;
            }
            r2.head && (r2.head.text = l2 >> 8 & 1), 512 & r2.flags && (A2[0] = 255 & l2, A2[1] = l2 >>> 8 & 255, r2.check = $r(r2.check, A2, 2, 0)), l2 = 0, f2 = 0, r2.mode = Li;
          case Li:
            for (; f2 < 32; ) {
              if (0 === s2)
                break e;
              s2--, l2 += n2[o2++] << f2, f2 += 8;
            }
            r2.head && (r2.head.time = l2), 512 & r2.flags && (A2[0] = 255 & l2, A2[1] = l2 >>> 8 & 255, A2[2] = l2 >>> 16 & 255, A2[3] = l2 >>> 24 & 255, r2.check = $r(r2.check, A2, 4, 0)), l2 = 0, f2 = 0, r2.mode = Ti;
          case Ti:
            for (; f2 < 16; ) {
              if (0 === s2)
                break e;
              s2--, l2 += n2[o2++] << f2, f2 += 8;
            }
            r2.head && (r2.head.xflags = 255 & l2, r2.head.os = l2 >> 8), 512 & r2.flags && (A2[0] = 255 & l2, A2[1] = l2 >>> 8 & 255, r2.check = $r(r2.check, A2, 2, 0)), l2 = 0, f2 = 0, r2.mode = Mi;
          case Mi:
            if (1024 & r2.flags) {
              for (; f2 < 16; ) {
                if (0 === s2)
                  break e;
                s2--, l2 += n2[o2++] << f2, f2 += 8;
              }
              r2.length = l2, r2.head && (r2.head.extra_len = l2), 512 & r2.flags && (A2[0] = 255 & l2, A2[1] = l2 >>> 8 & 255, r2.check = $r(r2.check, A2, 2, 0)), l2 = 0, f2 = 0;
            } else
              r2.head && (r2.head.extra = null);
            r2.mode = Ci;
          case Ci:
            if (1024 & r2.flags && ((d2 = r2.length) > s2 && (d2 = s2), d2 && (r2.head && (k2 = r2.head.extra_len - r2.length, r2.head.extra || (r2.head.extra = new Array(r2.head.extra_len)), jt$1(r2.head.extra, n2, o2, d2, k2)), 512 & r2.flags && (r2.check = $r(r2.check, n2, d2, o2)), s2 -= d2, o2 += d2, r2.length -= d2), r2.length))
              break e;
            r2.length = 0, r2.mode = Di;
          case Di:
            if (2048 & r2.flags) {
              if (0 === s2)
                break e;
              d2 = 0;
              do {
                k2 = n2[o2 + d2++], r2.head && k2 && r2.length < 65536 && (r2.head.name += String.fromCharCode(k2));
              } while (k2 && d2 < s2);
              if (512 & r2.flags && (r2.check = $r(r2.check, n2, d2, o2)), s2 -= d2, o2 += d2, k2)
                break e;
            } else
              r2.head && (r2.head.name = null);
            r2.length = 0, r2.mode = Ii;
          case Ii:
            if (4096 & r2.flags) {
              if (0 === s2)
                break e;
              d2 = 0;
              do {
                k2 = n2[o2 + d2++], r2.head && k2 && r2.length < 65536 && (r2.head.comment += String.fromCharCode(k2));
              } while (k2 && d2 < s2);
              if (512 & r2.flags && (r2.check = $r(r2.check, n2, d2, o2)), s2 -= d2, o2 += d2, k2)
                break e;
            } else
              r2.head && (r2.head.comment = null);
            r2.mode = Pi;
          case Pi:
            if (512 & r2.flags) {
              for (; f2 < 16; ) {
                if (0 === s2)
                  break e;
                s2--, l2 += n2[o2++] << f2, f2 += 8;
              }
              if (l2 !== (65535 & r2.check)) {
                e2.msg = "header crc mismatch", r2.mode = no;
                break;
              }
              l2 = 0, f2 = 0;
            }
            r2.head && (r2.head.hcrc = r2.flags >> 9 & 1, r2.head.done = true), e2.adler = r2.check = 0, r2.mode = Hi;
            break;
          case Oi:
            for (; f2 < 32; ) {
              if (0 === s2)
                break e;
              s2--, l2 += n2[o2++] << f2, f2 += 8;
            }
            e2.adler = r2.check = ho(l2), l2 = 0, f2 = 0, r2.mode = Ui;
          case Ui:
            if (0 === r2.havedict)
              return e2.next_out = a2, e2.avail_out = h2, e2.next_in = o2, e2.avail_in = s2, r2.hold = l2, r2.bits = f2, ki;
            e2.adler = r2.check = 1, r2.mode = Hi;
          case Hi:
            if (t2 === wi || t2 === bi)
              break e;
          case Fi:
            if (r2.last) {
              l2 >>>= 7 & f2, f2 -= 7 & f2, r2.mode = eo;
              break;
            }
            for (; f2 < 3; ) {
              if (0 === s2)
                break e;
              s2--, l2 += n2[o2++] << f2, f2 += 8;
            }
            switch (r2.last = 1 & l2, f2 -= 1, 3 & (l2 >>>= 1)) {
              case 0:
                r2.mode = Ni;
                break;
              case 1:
                if (go(r2), r2.mode = Xi, t2 === bi) {
                  l2 >>>= 2, f2 -= 2;
                  break e;
                }
                break;
              case 2:
                r2.mode = Wi;
                break;
              case 3:
                e2.msg = "invalid block type", r2.mode = no;
            }
            l2 >>>= 2, f2 -= 2;
            break;
          case Ni:
            for (l2 >>>= 7 & f2, f2 -= 7 & f2; f2 < 32; ) {
              if (0 === s2)
                break e;
              s2--, l2 += n2[o2++] << f2, f2 += 8;
            }
            if ((65535 & l2) != (l2 >>> 16 ^ 65535)) {
              e2.msg = "invalid stored block lengths", r2.mode = no;
              break;
            }
            if (r2.length = 65535 & l2, l2 = 0, f2 = 0, r2.mode = Zi, t2 === bi)
              break e;
          case Zi:
            r2.mode = ji;
          case ji:
            if (d2 = r2.length) {
              if (d2 > s2 && (d2 = s2), d2 > h2 && (d2 = h2), 0 === d2)
                break e;
              jt$1(i2, n2, o2, d2, a2), s2 -= d2, o2 += d2, h2 -= d2, a2 += d2, r2.length -= d2;
              break;
            }
            r2.mode = Hi;
            break;
          case Wi:
            for (; f2 < 14; ) {
              if (0 === s2)
                break e;
              s2--, l2 += n2[o2++] << f2, f2 += 8;
            }
            if (r2.nlen = 257 + (31 & l2), l2 >>>= 5, f2 -= 5, r2.ndist = 1 + (31 & l2), l2 >>>= 5, f2 -= 5, r2.ncode = 4 + (15 & l2), l2 >>>= 4, f2 -= 4, r2.nlen > 286 || r2.ndist > 30) {
              e2.msg = "too many length or distance symbols", r2.mode = no;
              break;
            }
            r2.have = 0, r2.mode = Yi;
          case Yi:
            for (; r2.have < r2.ncode; ) {
              for (; f2 < 3; ) {
                if (0 === s2)
                  break e;
                s2--, l2 += n2[o2++] << f2, f2 += 8;
              }
              r2.lens[B2[r2.have++]] = 7 & l2, l2 >>>= 3, f2 -= 3;
            }
            for (; r2.have < 19; )
              r2.lens[B2[r2.have++]] = 0;
            if (r2.lencode = r2.lendyn, r2.lenbits = 7, S2 = { bits: r2.lenbits }, E2 = di(pi, r2.lens, 0, 19, r2.lencode, 0, r2.work, S2), r2.lenbits = S2.bits, E2) {
              e2.msg = "invalid code lengths set", r2.mode = no;
              break;
            }
            r2.have = 0, r2.mode = Ki;
          case Ki:
            for (; r2.have < r2.nlen + r2.ndist; ) {
              for (; v2 = (R2 = r2.lencode[l2 & (1 << r2.lenbits) - 1]) >>> 16 & 255, w2 = 65535 & R2, !((g2 = R2 >>> 24) <= f2); ) {
                if (0 === s2)
                  break e;
                s2--, l2 += n2[o2++] << f2, f2 += 8;
              }
              if (w2 < 16)
                l2 >>>= g2, f2 -= g2, r2.lens[r2.have++] = w2;
              else {
                if (16 === w2) {
                  for (x2 = g2 + 2; f2 < x2; ) {
                    if (0 === s2)
                      break e;
                    s2--, l2 += n2[o2++] << f2, f2 += 8;
                  }
                  if (l2 >>>= g2, f2 -= g2, 0 === r2.have) {
                    e2.msg = "invalid bit length repeat", r2.mode = no;
                    break;
                  }
                  k2 = r2.lens[r2.have - 1], d2 = 3 + (3 & l2), l2 >>>= 2, f2 -= 2;
                } else if (17 === w2) {
                  for (x2 = g2 + 3; f2 < x2; ) {
                    if (0 === s2)
                      break e;
                    s2--, l2 += n2[o2++] << f2, f2 += 8;
                  }
                  f2 -= g2, k2 = 0, d2 = 3 + (7 & (l2 >>>= g2)), l2 >>>= 3, f2 -= 3;
                } else {
                  for (x2 = g2 + 7; f2 < x2; ) {
                    if (0 === s2)
                      break e;
                    s2--, l2 += n2[o2++] << f2, f2 += 8;
                  }
                  f2 -= g2, k2 = 0, d2 = 11 + (127 & (l2 >>>= g2)), l2 >>>= 7, f2 -= 7;
                }
                if (r2.have + d2 > r2.nlen + r2.ndist) {
                  e2.msg = "invalid bit length repeat", r2.mode = no;
                  break;
                }
                for (; d2--; )
                  r2.lens[r2.have++] = k2;
              }
            }
            if (r2.mode === no)
              break;
            if (0 === r2.lens[256]) {
              e2.msg = "invalid code -- missing end-of-block", r2.mode = no;
              break;
            }
            if (r2.lenbits = 9, S2 = { bits: r2.lenbits }, E2 = di(_i, r2.lens, 0, r2.nlen, r2.lencode, 0, r2.work, S2), r2.lenbits = S2.bits, E2) {
              e2.msg = "invalid literal/lengths set", r2.mode = no;
              break;
            }
            if (r2.distbits = 6, r2.distcode = r2.distdyn, S2 = { bits: r2.distbits }, E2 = di(gi, r2.lens, r2.nlen, r2.ndist, r2.distcode, 0, r2.work, S2), r2.distbits = S2.bits, E2) {
              e2.msg = "invalid distances set", r2.mode = no;
              break;
            }
            if (r2.mode = Xi, t2 === bi)
              break e;
          case Xi:
            r2.mode = qi;
          case qi:
            if (s2 >= 6 && h2 >= 258) {
              e2.next_out = a2, e2.avail_out = h2, e2.next_in = o2, e2.avail_in = s2, r2.hold = l2, r2.bits = f2, ri(e2, u2), a2 = e2.next_out, i2 = e2.output, h2 = e2.avail_out, o2 = e2.next_in, n2 = e2.input, s2 = e2.avail_in, l2 = r2.hold, f2 = r2.bits, r2.mode === Hi && (r2.back = -1);
              break;
            }
            for (r2.back = 0; v2 = (R2 = r2.lencode[l2 & (1 << r2.lenbits) - 1]) >>> 16 & 255, w2 = 65535 & R2, !((g2 = R2 >>> 24) <= f2); ) {
              if (0 === s2)
                break e;
              s2--, l2 += n2[o2++] << f2, f2 += 8;
            }
            if (v2 && 0 == (240 & v2)) {
              for (b2 = g2, y2 = v2, m2 = w2; v2 = (R2 = r2.lencode[m2 + ((l2 & (1 << b2 + y2) - 1) >> b2)]) >>> 16 & 255, w2 = 65535 & R2, !(b2 + (g2 = R2 >>> 24) <= f2); ) {
                if (0 === s2)
                  break e;
                s2--, l2 += n2[o2++] << f2, f2 += 8;
              }
              l2 >>>= b2, f2 -= b2, r2.back += b2;
            }
            if (l2 >>>= g2, f2 -= g2, r2.back += g2, r2.length = w2, 0 === v2) {
              r2.mode = Qi;
              break;
            }
            if (32 & v2) {
              r2.back = -1, r2.mode = Hi;
              break;
            }
            if (64 & v2) {
              e2.msg = "invalid literal/length code", r2.mode = no;
              break;
            }
            r2.extra = 15 & v2, r2.mode = Vi;
          case Vi:
            if (r2.extra) {
              for (x2 = r2.extra; f2 < x2; ) {
                if (0 === s2)
                  break e;
                s2--, l2 += n2[o2++] << f2, f2 += 8;
              }
              r2.length += l2 & (1 << r2.extra) - 1, l2 >>>= r2.extra, f2 -= r2.extra, r2.back += r2.extra;
            }
            r2.was = r2.length, r2.mode = Gi;
          case Gi:
            for (; v2 = (R2 = r2.distcode[l2 & (1 << r2.distbits) - 1]) >>> 16 & 255, w2 = 65535 & R2, !((g2 = R2 >>> 24) <= f2); ) {
              if (0 === s2)
                break e;
              s2--, l2 += n2[o2++] << f2, f2 += 8;
            }
            if (0 == (240 & v2)) {
              for (b2 = g2, y2 = v2, m2 = w2; v2 = (R2 = r2.distcode[m2 + ((l2 & (1 << b2 + y2) - 1) >> b2)]) >>> 16 & 255, w2 = 65535 & R2, !(b2 + (g2 = R2 >>> 24) <= f2); ) {
                if (0 === s2)
                  break e;
                s2--, l2 += n2[o2++] << f2, f2 += 8;
              }
              l2 >>>= b2, f2 -= b2, r2.back += b2;
            }
            if (l2 >>>= g2, f2 -= g2, r2.back += g2, 64 & v2) {
              e2.msg = "invalid distance code", r2.mode = no;
              break;
            }
            r2.offset = w2, r2.extra = 15 & v2, r2.mode = $i;
          case $i:
            if (r2.extra) {
              for (x2 = r2.extra; f2 < x2; ) {
                if (0 === s2)
                  break e;
                s2--, l2 += n2[o2++] << f2, f2 += 8;
              }
              r2.offset += l2 & (1 << r2.extra) - 1, l2 >>>= r2.extra, f2 -= r2.extra, r2.back += r2.extra;
            }
            if (r2.offset > r2.dmax) {
              e2.msg = "invalid distance too far back", r2.mode = no;
              break;
            }
            r2.mode = Ji;
          case Ji:
            if (0 === h2)
              break e;
            if (d2 = u2 - h2, r2.offset > d2) {
              if ((d2 = r2.offset - d2) > r2.whave && r2.sane) {
                e2.msg = "invalid distance too far back", r2.mode = no;
                break;
              }
              d2 > r2.wnext ? (d2 -= r2.wnext, p2 = r2.wsize - d2) : p2 = r2.wnext - d2, d2 > r2.length && (d2 = r2.length), _2 = r2.window;
            } else
              _2 = i2, p2 = a2 - r2.offset, d2 = r2.length;
            d2 > h2 && (d2 = h2), h2 -= d2, r2.length -= d2;
            do {
              i2[a2++] = _2[p2++];
            } while (--d2);
            0 === r2.length && (r2.mode = qi);
            break;
          case Qi:
            if (0 === h2)
              break e;
            i2[a2++] = r2.length, h2--, r2.mode = qi;
            break;
          case eo:
            if (r2.wrap) {
              for (; f2 < 32; ) {
                if (0 === s2)
                  break e;
                s2--, l2 |= n2[o2++] << f2, f2 += 8;
              }
              if (u2 -= h2, e2.total_out += u2, r2.total += u2, u2 && (e2.adler = r2.check = r2.flags ? $r(r2.check, i2, u2, a2 - u2) : Vr(r2.check, i2, u2, a2 - u2)), u2 = h2, (r2.flags ? l2 : ho(l2)) !== r2.check) {
                e2.msg = "incorrect data check", r2.mode = no;
                break;
              }
              l2 = 0, f2 = 0;
            }
            r2.mode = to;
          case to:
            if (r2.wrap && r2.flags) {
              for (; f2 < 32; ) {
                if (0 === s2)
                  break e;
                s2--, l2 += n2[o2++] << f2, f2 += 8;
              }
              if (l2 !== (4294967295 & r2.total)) {
                e2.msg = "incorrect length check", r2.mode = no;
                break;
              }
              l2 = 0, f2 = 0;
            }
            r2.mode = ro;
          case ro:
            E2 = mi;
            break e;
          case no:
            E2 = Si;
            break e;
          case io:
            return xi;
          case oo:
          default:
            return Ei;
        }
    return e2.next_out = a2, e2.avail_out = h2, e2.next_in = o2, e2.avail_in = s2, r2.hold = l2, r2.bits = f2, (r2.wsize || u2 !== e2.avail_out && r2.mode < no && (r2.mode < eo || t2 !== vi)) && function(e3, t3, r3, n3) {
      var i3, o3 = e3.state;
      null === o3.window && (o3.wsize = 1 << o3.wbits, o3.wnext = 0, o3.whave = 0, o3.window = new Wt$1(o3.wsize)), n3 >= o3.wsize ? (jt$1(o3.window, t3, r3 - o3.wsize, o3.wsize, 0), o3.wnext = 0, o3.whave = o3.wsize) : ((i3 = o3.wsize - o3.wnext) > n3 && (i3 = n3), jt$1(o3.window, t3, r3 - n3, i3, o3.wnext), (n3 -= i3) ? (jt$1(o3.window, t3, r3 - n3, n3, 0), o3.wnext = n3, o3.whave = o3.wsize) : (o3.wnext += i3, o3.wnext === o3.wsize && (o3.wnext = 0), o3.whave < o3.wsize && (o3.whave += i3)));
    }(e2, e2.output, e2.next_out, u2 - e2.avail_out), c2 -= e2.avail_in, u2 -= e2.avail_out, e2.total_in += c2, e2.total_out += u2, r2.total += u2, r2.wrap && u2 && (e2.adler = r2.check = r2.flags ? $r(r2.check, i2, u2, e2.next_out - u2) : Vr(r2.check, i2, u2, e2.next_out - u2)), e2.data_type = r2.bits + (r2.last ? 64 : 0) + (r2.mode === Hi ? 128 : 0) + (r2.mode === Xi || r2.mode === Zi ? 256 : 0), (0 === c2 && 0 === u2 || t2 === vi) && E2 === yi && (E2 = Ri), E2;
  }
  var wo, bo = 1, yo = 7;
  function mo(e2) {
    if (e2 < bo || e2 > yo)
      throw new TypeError("Bad argument");
    this.mode = e2, this.init_done = false, this.write_in_progress = false, this.pending_close = false, this.windowBits = 0, this.level = 0, this.memLevel = 0, this.strategy = 0, this.dictionary = null;
  }
  function ko(e2, t2) {
    for (var r2 = 0; r2 < e2.length; r2++)
      this[t2 + r2] = e2[r2];
  }
  mo.prototype.init = function(e2, t2, r2, n2, i2) {
    var o2;
    switch (this.windowBits = e2, this.level = t2, this.memLevel = r2, this.strategy = n2, 3 !== this.mode && 4 !== this.mode || (this.windowBits += 16), this.mode === yo && (this.windowBits += 32), 5 !== this.mode && 6 !== this.mode || (this.windowBits = -this.windowBits), this.strm = new Zt$1(), this.mode) {
      case bo:
      case 3:
      case 5:
        o2 = function(e3, t3, r3, n3, i3, o3) {
          if (!e3)
            return sn;
          var a2 = 1;
          if (t3 === fn && (t3 = 6), n3 < 0 ? (a2 = 0, n3 = -n3) : n3 > 15 && (a2 = 2, n3 -= 16), i3 < 1 || i3 > vn || r3 !== gn || n3 < 8 || n3 > 15 || t3 < 0 || t3 > 9 || o3 < 0 || o3 > pn)
            return Hn(e3, sn);
          8 === n3 && (n3 = 9);
          var s2 = new $n();
          return e3.state = s2, s2.strm = e3, s2.wrap = a2, s2.gzhead = null, s2.w_bits = n3, s2.w_size = 1 << s2.w_bits, s2.w_mask = s2.w_size - 1, s2.hash_bits = i3 + 7, s2.hash_size = 1 << s2.hash_bits, s2.hash_mask = s2.hash_size - 1, s2.hash_shift = ~~((s2.hash_bits + En - 1) / En), s2.window = new Wt$1(2 * s2.w_size), s2.head = new Yt$1(s2.hash_size), s2.prev = new Yt$1(s2.w_size), s2.lit_bufsize = 1 << i3 + 6, s2.pending_buf_size = 4 * s2.lit_bufsize, s2.pending_buf = new Wt$1(s2.pending_buf_size), s2.d_buf = 1 * s2.lit_bufsize, s2.l_buf = 3 * s2.lit_bufsize, s2.level = t3, s2.strategy = o3, s2.method = r3, Jn(e3);
        }(this.strm, this.level, 8, this.windowBits, this.memLevel, this.strategy);
        break;
      case 2:
      case 4:
      case 6:
      case yo:
        o2 = co(this.strm, this.windowBits);
        break;
      default:
        throw new Error("Unknown mode " + this.mode);
    }
    0 === o2 ? (this.write_in_progress = false, this.init_done = true) : this._error(o2);
  }, mo.prototype.params = function() {
    throw new Error("deflateParams Not supported");
  }, mo.prototype._writeCheck = function() {
    if (!this.init_done)
      throw new Error("write before init");
    if (0 === this.mode)
      throw new Error("already finalized");
    if (this.write_in_progress)
      throw new Error("write already in progress");
    if (this.pending_close)
      throw new Error("close is pending");
  }, mo.prototype.write = function(e2, t2, r2, n2, i2, o2, a2) {
    this._writeCheck(), this.write_in_progress = true;
    var s2 = this;
    return de$1(function() {
      s2.write_in_progress = false;
      var h2 = s2._write(e2, t2, r2, n2, i2, o2, a2);
      s2.callback(h2[0], h2[1]), s2.pending_close && s2.close();
    }), this;
  }, mo.prototype.writeSync = function(e2, t2, r2, n2, i2, o2, a2) {
    return this._writeCheck(), this._write(e2, t2, r2, n2, i2, o2, a2);
  }, mo.prototype._write = function(e2, t2, r2, n2, i2, o2, a2) {
    if (this.write_in_progress = true, 0 !== e2 && 1 !== e2 && 2 !== e2 && 3 !== e2 && 4 !== e2 && 5 !== e2)
      throw new Error("Invalid flush value");
    null == t2 && (t2 = new p$2(0), n2 = 0, r2 = 0), i2._set ? i2.set = i2._set : i2.set = ko;
    var s2, h2 = this.strm;
    switch (h2.avail_in = n2, h2.input = t2, h2.next_in = r2, h2.avail_out = a2, h2.output = i2, h2.next_out = o2, this.mode) {
      case bo:
      case 3:
      case 5:
        s2 = Qn(h2, e2);
        break;
      case yo:
      case 2:
      case 4:
      case 6:
        s2 = vo(h2, e2);
        break;
      default:
        throw new Error("Unknown mode " + this.mode);
    }
    return 1 !== s2 && 0 !== s2 && this._error(s2), this.write_in_progress = false, [h2.avail_in, h2.avail_out];
  }, mo.prototype.close = function() {
    this.write_in_progress ? this.pending_close = true : (this.pending_close = false, this.mode === bo || 3 === this.mode || 5 === this.mode ? function(e2) {
      var t2;
      e2 && e2.state && ((t2 = e2.state.status) !== An && t2 !== Bn && t2 !== zn && t2 !== Ln && t2 !== Tn && t2 !== Mn && t2 !== Cn ? Hn(e2, sn) : (e2.state = null, t2 === Mn && Hn(e2, hn)));
    }(this.strm) : function(e2) {
      if (!e2 || !e2.state)
        return Ei;
      var t2 = e2.state;
      t2.window && (t2.window = null), e2.state = null;
    }(this.strm), this.mode = 0);
  }, mo.prototype.reset = function() {
    switch (this.mode) {
      case bo:
      case 5:
        wo = Jn(this.strm);
        break;
      case 2:
      case 6:
        wo = fo(this.strm);
    }
    0 !== wo && this._error(wo);
  }, mo.prototype._error = function(e2) {
    this.onerror(Nt$1[e2] + ": " + this.strm.msg, e2), this.write_in_progress = false, this.pending_close && this.close();
  };
  var Eo = Object.freeze({ NONE: 0, DEFLATE: bo, INFLATE: 2, GZIP: 3, GUNZIP: 4, DEFLATERAW: 5, INFLATERAW: 6, UNZIP: yo, Z_NO_FLUSH: 0, Z_PARTIAL_FLUSH: 1, Z_SYNC_FLUSH: 2, Z_FULL_FLUSH: 3, Z_FINISH: 4, Z_BLOCK: 5, Z_TREES: 6, Z_OK: 0, Z_STREAM_END: 1, Z_NEED_DICT: 2, Z_ERRNO: -1, Z_STREAM_ERROR: -2, Z_DATA_ERROR: -3, Z_BUF_ERROR: -5, Z_NO_COMPRESSION: 0, Z_BEST_SPEED: 1, Z_BEST_COMPRESSION: 9, Z_DEFAULT_COMPRESSION: -1, Z_FILTERED: 1, Z_HUFFMAN_ONLY: 2, Z_RLE: 3, Z_FIXED: 4, Z_DEFAULT_STRATEGY: 0, Z_BINARY: 0, Z_TEXT: 1, Z_UNKNOWN: 2, Z_DEFLATED: 8, Zlib: mo });
  var So = {};
  Object.keys(Eo).forEach(function(e2) {
    So[e2] = Eo[e2];
  }), So.Z_MIN_WINDOWBITS = 8, So.Z_MAX_WINDOWBITS = 15, So.Z_DEFAULT_WINDOWBITS = 15, So.Z_MIN_CHUNK = 64, So.Z_MAX_CHUNK = 1 / 0, So.Z_DEFAULT_CHUNK = 16384, So.Z_MIN_MEMLEVEL = 1, So.Z_MAX_MEMLEVEL = 9, So.Z_DEFAULT_MEMLEVEL = 8, So.Z_MIN_LEVEL = -1, So.Z_MAX_LEVEL = 9, So.Z_DEFAULT_LEVEL = So.Z_DEFAULT_COMPRESSION;
  var xo = { Z_OK: So.Z_OK, Z_STREAM_END: So.Z_STREAM_END, Z_NEED_DICT: So.Z_NEED_DICT, Z_ERRNO: So.Z_ERRNO, Z_STREAM_ERROR: So.Z_STREAM_ERROR, Z_DATA_ERROR: So.Z_DATA_ERROR, Z_MEM_ERROR: So.Z_MEM_ERROR, Z_BUF_ERROR: So.Z_BUF_ERROR, Z_VERSION_ERROR: So.Z_VERSION_ERROR };
  function Ro(e2, t2, r2) {
    var n2 = [], i2 = 0;
    function o2() {
      for (var t3; null !== (t3 = e2.read()); )
        n2.push(t3), i2 += t3.length;
      e2.once("readable", o2);
    }
    function a2() {
      var t3 = p$2.concat(n2, i2);
      n2 = [], r2(null, t3), e2.close();
    }
    e2.on("error", function(t3) {
      e2.removeListener("end", a2), e2.removeListener("readable", o2), r2(t3);
    }), e2.on("end", a2), e2.end(t2), o2();
  }
  function Ao(e2, t2) {
    if ("string" == typeof t2 && (t2 = new p$2(t2)), !$$1(t2))
      throw new TypeError("Not a string or buffer");
    var r2 = So.Z_FINISH;
    return e2._processChunk(t2, r2);
  }
  function Bo(e2) {
    if (!(this instanceof Bo))
      return new Bo(e2);
    Io.call(this, e2, So.DEFLATE);
  }
  function zo(e2) {
    if (!(this instanceof zo))
      return new zo(e2);
    Io.call(this, e2, So.INFLATE);
  }
  function Lo(e2) {
    if (!(this instanceof Lo))
      return new Lo(e2);
    Io.call(this, e2, So.GZIP);
  }
  function To(e2) {
    if (!(this instanceof To))
      return new To(e2);
    Io.call(this, e2, So.GUNZIP);
  }
  function Mo(e2) {
    if (!(this instanceof Mo))
      return new Mo(e2);
    Io.call(this, e2, So.DEFLATERAW);
  }
  function Co(e2) {
    if (!(this instanceof Co))
      return new Co(e2);
    Io.call(this, e2, So.INFLATERAW);
  }
  function Do(e2) {
    if (!(this instanceof Do))
      return new Do(e2);
    Io.call(this, e2, So.UNZIP);
  }
  function Io(e2, t2) {
    if (this._opts = e2 = e2 || {}, this._chunkSize = e2.chunkSize || So.Z_DEFAULT_CHUNK, Ot$1.call(this, e2), e2.flush && e2.flush !== So.Z_NO_FLUSH && e2.flush !== So.Z_PARTIAL_FLUSH && e2.flush !== So.Z_SYNC_FLUSH && e2.flush !== So.Z_FULL_FLUSH && e2.flush !== So.Z_FINISH && e2.flush !== So.Z_BLOCK)
      throw new Error("Invalid flush flag: " + e2.flush);
    if (this._flushFlag = e2.flush || So.Z_NO_FLUSH, e2.chunkSize && (e2.chunkSize < So.Z_MIN_CHUNK || e2.chunkSize > So.Z_MAX_CHUNK))
      throw new Error("Invalid chunk size: " + e2.chunkSize);
    if (e2.windowBits && (e2.windowBits < So.Z_MIN_WINDOWBITS || e2.windowBits > So.Z_MAX_WINDOWBITS))
      throw new Error("Invalid windowBits: " + e2.windowBits);
    if (e2.level && (e2.level < So.Z_MIN_LEVEL || e2.level > So.Z_MAX_LEVEL))
      throw new Error("Invalid compression level: " + e2.level);
    if (e2.memLevel && (e2.memLevel < So.Z_MIN_MEMLEVEL || e2.memLevel > So.Z_MAX_MEMLEVEL))
      throw new Error("Invalid memLevel: " + e2.memLevel);
    if (e2.strategy && e2.strategy != So.Z_FILTERED && e2.strategy != So.Z_HUFFMAN_ONLY && e2.strategy != So.Z_RLE && e2.strategy != So.Z_FIXED && e2.strategy != So.Z_DEFAULT_STRATEGY)
      throw new Error("Invalid strategy: " + e2.strategy);
    if (e2.dictionary && !$$1(e2.dictionary))
      throw new Error("Invalid dictionary: it should be a Buffer instance");
    this._binding = new So.Zlib(t2);
    var r2 = this;
    this._hadError = false, this._binding.onerror = function(e3, t3) {
      r2._binding = null, r2._hadError = true;
      var n3 = new Error(e3);
      n3.errno = t3, n3.code = So.codes[t3], r2.emit("error", n3);
    };
    var n2 = So.Z_DEFAULT_COMPRESSION;
    "number" == typeof e2.level && (n2 = e2.level);
    var i2 = So.Z_DEFAULT_STRATEGY;
    "number" == typeof e2.strategy && (i2 = e2.strategy), this._binding.init(e2.windowBits || So.Z_DEFAULT_WINDOWBITS, n2, e2.memLevel || So.Z_DEFAULT_MEMLEVEL, i2, e2.dictionary), this._buffer = new p$2(this._chunkSize), this._offset = 0, this._closed = false, this._level = n2, this._strategy = i2, this.once("end", this.close);
  }
  Object.keys(xo).forEach(function(e2) {
    xo[xo[e2]] = e2;
  }), Be$1(Io, Ot$1), Io.prototype.params = function(e2, t2, r2) {
    if (e2 < So.Z_MIN_LEVEL || e2 > So.Z_MAX_LEVEL)
      throw new RangeError("Invalid compression level: " + e2);
    if (t2 != So.Z_FILTERED && t2 != So.Z_HUFFMAN_ONLY && t2 != So.Z_RLE && t2 != So.Z_FIXED && t2 != So.Z_DEFAULT_STRATEGY)
      throw new TypeError("Invalid strategy: " + t2);
    if (this._level !== e2 || this._strategy !== t2) {
      var n2 = this;
      this.flush(So.Z_SYNC_FLUSH, function() {
        n2._binding.params(e2, t2), n2._hadError || (n2._level = e2, n2._strategy = t2, r2 && r2());
      });
    } else
      de$1(r2);
  }, Io.prototype.reset = function() {
    return this._binding.reset();
  }, Io.prototype._flush = function(e2) {
    this._transform(new p$2(0), "", e2);
  }, Io.prototype.flush = function(e2, t2) {
    var r2 = this._writableState;
    if (("function" == typeof e2 || void 0 === e2 && !t2) && (t2 = e2, e2 = So.Z_FULL_FLUSH), r2.ended)
      t2 && de$1(t2);
    else if (r2.ending)
      t2 && this.once("end", t2);
    else if (r2.needDrain) {
      var n2 = this;
      this.once("drain", function() {
        n2.flush(t2);
      });
    } else
      this._flushFlag = e2, this.write(new p$2(0), "", t2);
  }, Io.prototype.close = function(e2) {
    if (e2 && de$1(e2), !this._closed) {
      this._closed = true, this._binding.close();
      var t2 = this;
      de$1(function() {
        t2.emit("close");
      });
    }
  }, Io.prototype._transform = function(e2, t2, r2) {
    var n2, i2 = this._writableState, o2 = (i2.ending || i2.ended) && (!e2 || i2.length === e2.length);
    if (null === !e2 && !$$1(e2))
      return r2(new Error("invalid input"));
    o2 ? n2 = So.Z_FINISH : (n2 = this._flushFlag, e2.length >= i2.length && (this._flushFlag = this._opts.flush || So.Z_NO_FLUSH)), this._processChunk(e2, n2, r2);
  }, Io.prototype._processChunk = function(e2, t2, r2) {
    var n2 = e2 && e2.length, i2 = this._chunkSize - this._offset, o2 = 0, a2 = this, s2 = "function" == typeof r2;
    if (!s2) {
      var h2, l2 = [], f2 = 0;
      this.on("error", function(e3) {
        h2 = e3;
      });
      do {
        var c2 = this._binding.writeSync(t2, e2, o2, n2, this._buffer, this._offset, i2);
      } while (!this._hadError && _2(c2[0], c2[1]));
      if (this._hadError)
        throw h2;
      var u2 = p$2.concat(l2, f2);
      return this.close(), u2;
    }
    var d2 = this._binding.write(t2, e2, o2, n2, this._buffer, this._offset, i2);
    function _2(h3, c3) {
      if (!a2._hadError) {
        var u3 = i2 - c3;
        if (function(e3, t3) {
          if (!e3)
            throw new Error(t3);
        }(u3 >= 0, "have should not go down"), u3 > 0) {
          var d3 = a2._buffer.slice(a2._offset, a2._offset + u3);
          a2._offset += u3, s2 ? a2.push(d3) : (l2.push(d3), f2 += d3.length);
        }
        if ((0 === c3 || a2._offset >= a2._chunkSize) && (i2 = a2._chunkSize, a2._offset = 0, a2._buffer = new p$2(a2._chunkSize)), 0 === c3) {
          if (o2 += n2 - h3, n2 = h3, !s2)
            return true;
          var g2 = a2._binding.write(t2, e2, o2, n2, a2._buffer, a2._offset, a2._chunkSize);
          return g2.callback = _2, void (g2.buffer = e2);
        }
        if (!s2)
          return false;
        r2();
      }
    }
    d2.buffer = e2, d2.callback = _2;
  }, Be$1(Bo, Io), Be$1(zo, Io), Be$1(Lo, Io), Be$1(To, Io), Be$1(Mo, Io), Be$1(Co, Io), Be$1(Do, Io);
  var Po = { codes: xo, createDeflate: function(e2) {
    return new Bo(e2);
  }, createInflate: function(e2) {
    return new zo(e2);
  }, createDeflateRaw: function(e2) {
    return new Mo(e2);
  }, createInflateRaw: function(e2) {
    return new Co(e2);
  }, createGzip: function(e2) {
    return new Lo(e2);
  }, createGunzip: function(e2) {
    return new To(e2);
  }, createUnzip: function(e2) {
    return new Do(e2);
  }, deflate: function(e2, t2, r2) {
    return "function" == typeof t2 && (r2 = t2, t2 = {}), Ro(new Bo(t2), e2, r2);
  }, deflateSync: function(e2, t2) {
    return Ao(new Bo(t2), e2);
  }, gzip: function(e2, t2, r2) {
    return "function" == typeof t2 && (r2 = t2, t2 = {}), Ro(new Lo(t2), e2, r2);
  }, gzipSync: function(e2, t2) {
    return Ao(new Lo(t2), e2);
  }, deflateRaw: function(e2, t2, r2) {
    return "function" == typeof t2 && (r2 = t2, t2 = {}), Ro(new Mo(t2), e2, r2);
  }, deflateRawSync: function(e2, t2) {
    return Ao(new Mo(t2), e2);
  }, unzip: function(e2, t2, r2) {
    return "function" == typeof t2 && (r2 = t2, t2 = {}), Ro(new Do(t2), e2, r2);
  }, unzipSync: function(e2, t2) {
    return Ao(new Do(t2), e2);
  }, inflate: function(e2, t2, r2) {
    return "function" == typeof t2 && (r2 = t2, t2 = {}), Ro(new zo(t2), e2, r2);
  }, inflateSync: function(e2, t2) {
    return Ao(new zo(t2), e2);
  }, gunzip: function(e2, t2, r2) {
    return "function" == typeof t2 && (r2 = t2, t2 = {}), Ro(new To(t2), e2, r2);
  }, gunzipSync: function(e2, t2) {
    return Ao(new To(t2), e2);
  }, inflateRaw: function(e2, t2, r2) {
    return "function" == typeof t2 && (r2 = t2, t2 = {}), Ro(new Co(t2), e2, r2);
  }, inflateRawSync: function(e2, t2) {
    return Ao(new Co(t2), e2);
  }, Deflate: Bo, Inflate: zo, Gzip: Lo, Gunzip: To, DeflateRaw: Mo, InflateRaw: Co, Unzip: Do, Zlib: Io };
  class LibGenerateTestUserSig {
    constructor(e2, t2, r2) {
      this.SDKAPPID = e2, this.EXPIRETIME = r2, this.PRIVATEKEY = t2;
    }
    genTestUserSig(e2) {
      return this._isNumber(this.SDKAPPID) ? this._isString(this.PRIVATEKEY) ? this._isString(e2) ? this._isNumber(this.EXPIRETIME) ? (formatAppLog("log", "at TUIKit/debug/lib-generate-test-usersig-es.min.js:2", "sdkAppID=" + this.SDKAPPID + " key=" + this.PRIVATEKEY + " userID=" + e2 + " expire=" + this.EXPIRETIME), this.genSigWithUserbuf(e2, this.EXPIRETIME, null)) : (formatAppLog("error", "at TUIKit/debug/lib-generate-test-usersig-es.min.js:2", "expireTime must be a number"), "") : (formatAppLog("error", "at TUIKit/debug/lib-generate-test-usersig-es.min.js:2", "userID must be a string"), "") : (formatAppLog("error", "at TUIKit/debug/lib-generate-test-usersig-es.min.js:2", "privateKey must be a string"), "") : (formatAppLog("error", "at TUIKit/debug/lib-generate-test-usersig-es.min.js:2", "sdkAppID must be a number"), "");
    }
    newBuffer(e2, t2) {
      return p$2.from ? p$2.from(e2, t2) : new p$2(e2, t2);
    }
    unescape(e2) {
      return e2.replace(/_/g, "=").replace(/\-/g, "/").replace(/\*/g, "+");
    }
    escape(e2) {
      return e2.replace(/\+/g, "*").replace(/\//g, "-").replace(/=/g, "_");
    }
    encode(e2) {
      return this.escape(this.newBuffer(e2).toString("base64"));
    }
    decode(e2) {
      return this.newBuffer(this.unescape(e2), "base64");
    }
    base64encode(e2) {
      return this.newBuffer(e2).toString("base64");
    }
    base64decode(e2) {
      return this.newBuffer(e2, "base64").toString();
    }
    _hmacsha256(e2, t2, r2, n2) {
      let i2 = "TLS.identifier:" + e2 + "\n";
      i2 += "TLS.sdkappid:" + this.SDKAPPID + "\n", i2 += "TLS.time:" + t2 + "\n", i2 += "TLS.expire:" + r2 + "\n", null != n2 && (i2 += "TLS.userbuf:" + n2 + "\n");
      let o2 = te$1.HmacSHA256(i2, this.PRIVATEKEY);
      return te$1.enc.Base64.stringify(o2);
    }
    _utc() {
      return Math.round(Date.now() / 1e3);
    }
    _isNumber(e2) {
      return null !== e2 && ("number" == typeof e2 && !isNaN(e2 - 0) || "object" == typeof e2 && e2.constructor === Number);
    }
    _isString(e2) {
      return "string" == typeof e2;
    }
    genSigWithUserbuf(e2, t2, r2) {
      let n2 = this._utc(), i2 = { "TLS.ver": "2.0", "TLS.identifier": e2, "TLS.sdkappid": this.SDKAPPID, "TLS.time": n2, "TLS.expire": t2 }, o2 = "";
      if (null != r2) {
        let a3 = this.base64encode(r2);
        i2["TLS.userbuf"] = a3, o2 = this._hmacsha256(e2, n2, t2, a3);
      } else
        o2 = this._hmacsha256(e2, n2, t2, null);
      i2["TLS.sig"] = o2;
      let a2 = JSON.stringify(i2), s2 = Po.deflateSync(this.newBuffer(a2)).toString("base64"), h2 = this.escape(s2);
      return formatAppLog("log", "at TUIKit/debug/lib-generate-test-usersig-es.min.js:2", "ret=" + h2), h2;
    }
    validate(e2) {
      let t2 = this.decode(e2), r2 = Po.inflateSync(t2);
      formatAppLog("log", "at TUIKit/debug/lib-generate-test-usersig-es.min.js:2", "validate ret=" + r2);
    }
  }
  const EXPIRETIME = 604800;
  function genTestUserSig(options) {
    const { SDKAppID: SDKAppID2, secretKey: secretKey2, userID } = options;
    const generator = new LibGenerateTestUserSig(SDKAppID2, secretKey2, EXPIRETIME);
    const userSig = generator.genTestUserSig(userID);
    return {
      SDKAppID: SDKAppID2,
      userSig
    };
  }
  var commonjsGlobal = typeof globalThis !== "undefined" ? globalThis : typeof window !== "undefined" ? window : typeof global !== "undefined" ? global : typeof self !== "undefined" ? self : {};
  function getDefaultExportFromCjs(x2) {
    return x2 && x2.__esModule && Object.prototype.hasOwnProperty.call(x2, "default") ? x2["default"] : x2;
  }
  var chat = { exports: {} };
  (function(module, exports) {
    !function(e2, t2) {
      module.exports = t2();
    }(commonjsGlobal, function() {
      function U2(t3, e3) {
        var n3, o3 = Object.keys(t3);
        return Object.getOwnPropertySymbols && (n3 = Object.getOwnPropertySymbols(t3), e3 && (n3 = n3.filter(function(e4) {
          return Object.getOwnPropertyDescriptor(t3, e4).enumerable;
        })), o3.push.apply(o3, n3)), o3;
      }
      function y2(t3) {
        for (var e3 = 1; e3 < arguments.length; e3++) {
          var n3 = null != arguments[e3] ? arguments[e3] : {};
          e3 % 2 ? U2(Object(n3), true).forEach(function(e4) {
            F2(t3, e4, n3[e4]);
          }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(t3, Object.getOwnPropertyDescriptors(n3)) : U2(Object(n3)).forEach(function(e4) {
            Object.defineProperty(t3, e4, Object.getOwnPropertyDescriptor(n3, e4));
          });
        }
        return t3;
      }
      function b2(e3) {
        return (b2 = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function(e4) {
          return typeof e4;
        } : function(e4) {
          return e4 && "function" == typeof Symbol && e4.constructor === Symbol && e4 !== Symbol.prototype ? "symbol" : typeof e4;
        })(e3);
      }
      function d2(e3, t3) {
        if (!(e3 instanceof t3))
          throw new TypeError("Cannot call a class as a function");
      }
      function w2(e3, t3) {
        for (var n3 = 0; n3 < t3.length; n3++) {
          var o3 = t3[n3];
          o3.enumerable = o3.enumerable || false, o3.configurable = true, "value" in o3 && (o3.writable = true), Object.defineProperty(e3, o3.key, o3);
        }
      }
      function e2(e3, t3, n3) {
        return t3 && w2(e3.prototype, t3), n3 && w2(e3, n3), Object.defineProperty(e3, "prototype", { writable: false }), e3;
      }
      function F2(e3, t3, n3) {
        return t3 in e3 ? Object.defineProperty(e3, t3, { value: n3, enumerable: true, configurable: true, writable: true }) : e3[t3] = n3, e3;
      }
      function t2(e3, t3) {
        if ("function" != typeof t3 && null !== t3)
          throw new TypeError("Super expression must either be null or a function");
        e3.prototype = Object.create(t3 && t3.prototype, { constructor: { value: e3, writable: true, configurable: true } }), Object.defineProperty(e3, "prototype", { writable: false }), t3 && x2(e3, t3);
      }
      function q2(e3) {
        return (q2 = Object.setPrototypeOf ? Object.getPrototypeOf.bind() : function(e4) {
          return e4.__proto__ || Object.getPrototypeOf(e4);
        })(e3);
      }
      function x2(e3, t3) {
        return (x2 = Object.setPrototypeOf ? Object.setPrototypeOf.bind() : function(e4, t4) {
          return e4.__proto__ = t4, e4;
        })(e3, t3);
      }
      function V2() {
        if ("undefined" == typeof Reflect || !Reflect.construct)
          return false;
        if (Reflect.construct.sham)
          return false;
        if ("function" == typeof Proxy)
          return true;
        try {
          return Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function() {
          })), true;
        } catch (e3) {
          return false;
        }
      }
      function H2(e3, t3, n3) {
        return (H2 = V2() ? Reflect.construct.bind() : function(e4, t4, n4) {
          var o3 = [null], t4 = (o3.push.apply(o3, t4), new (Function.bind.apply(e4, o3))());
          return n4 && x2(t4, n4.prototype), t4;
        }).apply(null, arguments);
      }
      function B2(e3) {
        var n3 = "function" == typeof Map ? /* @__PURE__ */ new Map() : void 0;
        return function(e4) {
          if (null === e4 || -1 === Function.toString.call(e4).indexOf("[native code]"))
            return e4;
          if ("function" != typeof e4)
            throw new TypeError("Super expression must either be null or a function");
          if (void 0 !== n3) {
            if (n3.has(e4))
              return n3.get(e4);
            n3.set(e4, t3);
          }
          function t3() {
            return H2(e4, arguments, q2(this).constructor);
          }
          return t3.prototype = Object.create(e4.prototype, { constructor: { value: t3, enumerable: false, writable: true, configurable: true } }), x2(t3, e4);
        }(e3);
      }
      function K2(e3, t3) {
        if (null == e3)
          return {};
        var n3, o3 = function(e4, t4) {
          if (null == e4)
            return {};
          for (var n4, o4 = {}, i4 = Object.keys(e4), a4 = 0; a4 < i4.length; a4++)
            n4 = i4[a4], 0 <= t4.indexOf(n4) || (o4[n4] = e4[n4]);
          return o4;
        }(e3, t3);
        if (Object.getOwnPropertySymbols)
          for (var i3 = Object.getOwnPropertySymbols(e3), a3 = 0; a3 < i3.length; a3++)
            n3 = i3[a3], 0 <= t3.indexOf(n3) || Object.prototype.propertyIsEnumerable.call(e3, n3) && (o3[n3] = e3[n3]);
        return o3;
      }
      function i2(e3) {
        if (void 0 === e3)
          throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
        return e3;
      }
      function n2(n3) {
        var o3 = V2();
        return function() {
          var e3, t3 = q2(n3), t3 = (e3 = o3 ? (e3 = q2(this).constructor, Reflect.construct(t3, arguments, e3)) : t3.apply(this, arguments), this);
          if (e3 && ("object" == typeof e3 || "function" == typeof e3))
            return e3;
          if (void 0 !== e3)
            throw new TypeError("Derived constructors may only return object or undefined");
          return i2(t3);
        };
      }
      function Y2(e3, t3) {
        return W2(e3) || function(e4, t4) {
          var n3 = null == e4 ? null : "undefined" != typeof Symbol && e4[Symbol.iterator] || e4["@@iterator"];
          if (null != n3) {
            var o3, i3, a3 = [], s3 = true, r3 = false;
            try {
              for (n3 = n3.call(e4); !(s3 = (o3 = n3.next()).done) && (a3.push(o3.value), !t4 || a3.length !== t4); s3 = true)
                ;
            } catch (e5) {
              r3 = true, i3 = e5;
            } finally {
              try {
                s3 || null == n3.return || n3.return();
              } finally {
                if (r3)
                  throw i3;
              }
            }
            return a3;
          }
        }(e3, t3) || J2(e3, t3) || X2();
      }
      function p2(e3) {
        return function(e4) {
          if (Array.isArray(e4))
            return z2(e4);
        }(e3) || j2(e3) || J2(e3) || function() {
          throw new TypeError("Invalid attempt to spread non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.");
        }();
      }
      function W2(e3) {
        if (Array.isArray(e3))
          return e3;
      }
      function j2(e3) {
        if ("undefined" != typeof Symbol && null != e3[Symbol.iterator] || null != e3["@@iterator"])
          return Array.from(e3);
      }
      function J2(e3, t3) {
        var n3;
        if (e3)
          return "string" == typeof e3 ? z2(e3, t3) : "Map" === (n3 = "Object" === (n3 = Object.prototype.toString.call(e3).slice(8, -1)) && e3.constructor ? e3.constructor.name : n3) || "Set" === n3 ? Array.from(e3) : "Arguments" === n3 || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n3) ? z2(e3, t3) : void 0;
      }
      function z2(e3, t3) {
        (null == t3 || t3 > e3.length) && (t3 = e3.length);
        for (var n3 = 0, o3 = new Array(t3); n3 < t3; n3++)
          o3[n3] = e3[n3];
        return o3;
      }
      function X2() {
        throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.");
      }
      function Z2(e3, t3) {
        var n3, o3, i3, a3, s3 = "undefined" != typeof Symbol && e3[Symbol.iterator] || e3["@@iterator"];
        if (s3)
          return i3 = !(o3 = true), { s: function() {
            s3 = s3.call(e3);
          }, n: function() {
            var e4 = s3.next();
            return o3 = e4.done, e4;
          }, e: function(e4) {
            i3 = true, n3 = e4;
          }, f: function() {
            try {
              o3 || null == s3.return || s3.return();
            } finally {
              if (i3)
                throw n3;
            }
          } };
        if (Array.isArray(e3) || (s3 = J2(e3)) || t3 && e3 && "number" == typeof e3.length)
          return s3 && (e3 = s3), a3 = 0, { s: t3 = function() {
          }, n: function() {
            return a3 >= e3.length ? { done: true } : { done: false, value: e3[a3++] };
          }, e: function(e4) {
            throw e4;
          }, f: t3 };
        throw new TypeError("Invalid attempt to iterate non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.");
      }
      var h2 = { SDK_READY: "sdkStateReady", SDK_NOT_READY: "sdkStateNotReady", SDK_DESTROY: "sdkDestroy", MESSAGE_RECEIVED: "onMessageReceived", ROOM_CUSTOM_DATA_RECEIVED: "onRoomCustomDataReceived", MESSAGE_MODIFIED: "onMessageModified", MESSAGE_REVOKED: "onMessageRevoked", MESSAGE_READ_BY_PEER: "onMessageReadByPeer", MESSAGE_READ_RECEIPT_RECEIVED: "onMessageReadReceiptReceived", MESSAGE_EXTENSIONS_UPDATED: "onMessageExtensionsUpdated", MESSAGE_EXTENSIONS_DELETED: "onMessageExtensionsDeleted", MESSAGE_REACTIONS_UPDATED: "onMessageReactionsUpdated", CONVERSATION_LIST_UPDATED: "onConversationListUpdated", TOTAL_UNREAD_MESSAGE_COUNT_UPDATED: "onTotalUnreadMessageCountUpdated", CONVERSATION_GROUP_LIST_UPDATED: "onConversationGroupListUpdated", CONVERSATION_IN_GROUP_UPDATED: "onConversationInGroupUpdated", GROUP_LIST_UPDATED: "onGroupListUpdated", GROUP_ATTRIBUTES_UPDATED: "groupAttributesUpdated", GROUP_COUNTER_UPDATED: "onGroupCounterUpdated", TOPIC_CREATED: "onTopicCreated", TOPIC_DELETED: "onTopicDeleted", TOPIC_UPDATED: "onTopicUpdated", PROFILE_UPDATED: "onProfileUpdated", USER_STATUS_UPDATED: "onUserStatusUpdated", BLACKLIST_UPDATED: "blacklistUpdated", FRIEND_LIST_UPDATED: "onFriendListUpdated", FRIEND_GROUP_LIST_UPDATED: "onFriendGroupListUpdated", FRIEND_APPLICATION_LIST_UPDATED: "onFriendApplicationListUpdated", MY_FOLLOWERS_LIST_UPDATED: "onMyFollowersListUpdated", MY_FOLLOWING_LIST_UPDATED: "onMyFollowingListUpdated", MUTUAL_FOLLOWERS_LIST_UPDATED: "onMutualFollowersListUpdated", KICKED_OUT: "kickedOut", ERROR: "error", NET_STATE_CHANGE: "netStateChange", ALL_RECEIVE_MESSAGE_OPT_UPDATED: "onAllReceiveMessageOptUpdated" }, A2 = { MSG_TEXT: "TIMTextElem", MSG_IMAGE: "TIMImageElem", MSG_SOUND: "TIMSoundElem", MSG_AUDIO: "TIMSoundElem", MSG_FILE: "TIMFileElem", MSG_FACE: "TIMFaceElem", MSG_VIDEO: "TIMVideoFileElem", MSG_GEO: "TIMLocationElem", MSG_LOCATION: "TIMLocationElem", MSG_GRP_TIP: "TIMGroupTipElem", MSG_GRP_SYS_NOTICE: "TIMGroupSystemNoticeElem", MSG_CUSTOM: "TIMCustomElem", MSG_MERGER: "TIMRelayElem", MSG_PRIORITY_HIGH: "High", MSG_PRIORITY_NORMAL: "Normal", MSG_PRIORITY_LOW: "Low", MSG_PRIORITY_LOWEST: "Lowest", CONV_C2C: "C2C", CONV_GROUP: "GROUP", CONV_TOPIC: "TOPIC", CONV_SYSTEM: "@TIM#SYSTEM", CONV_AT_ME: 1, CONV_AT_ALL: 2, CONV_AT_ALL_AT_ME: 3, CONV_MARK_TYPE_STAR: 1, CONV_MARK_TYPE_UNREAD: 2, CONV_MARK_TYPE_FOLD: 4, CONV_MARK_TYPE_HIDE: 8, GRP_PRIVATE: "Private", GRP_WORK: "Private", GRP_PUBLIC: "Public", GRP_CHATROOM: "ChatRoom", GRP_MEETING: "ChatRoom", GRP_AVCHATROOM: "AVChatRoom", GRP_COMMUNITY: "Community", GRP_ROOM: "Room", GRP_LIVE: "Live", GRP_MBR_ROLE_OWNER: "Owner", GRP_MBR_ROLE_ADMIN: "Admin", GRP_MBR_ROLE_MEMBER: "Member", GRP_MBR_ROLE_CUSTOM: "Custom", GRP_TIP_MBR_JOIN: 1, GRP_TIP_MBR_QUIT: 2, GRP_TIP_MBR_KICKED_OUT: 3, GRP_TIP_MBR_SET_ADMIN: 4, GRP_TIP_MBR_CANCELED_ADMIN: 5, GRP_TIP_GRP_PROFILE_UPDATED: 6, GRP_TIP_MBR_PROFILE_UPDATED: 7, GRP_TIP_BAN_AVCHATROOM_MEMBER: 10, GRP_TIP_UNBAN_AVCHATROOM_MEMBER: 11, MSG_REMIND_ACPT_AND_NOTE: "AcceptAndNotify", MSG_REMIND_ACPT_NOT_NOTE: "AcceptNotNotify", MSG_REMIND_DISCARD: "Discard", RECEIVE_WITH_OFFLINE_PUSH_EXCEPT_AT: "AcceptNotNotifyExceptAt", NOT_RECEIVE_OFFLINE_PUSH_EXCEPT_AT: "AcceptNotNotifyExceptAt", NOT_RECEIVE_MSG_EXCEPT_AT: "NotReceiveMsgExceptAt", GENDER_UNKNOWN: "Gender_Type_Unknown", GENDER_FEMALE: "Gender_Type_Female", GENDER_MALE: "Gender_Type_Male", KICKED_OUT_MULT_ACCOUNT: "multipleAccount", KICKED_OUT_MULT_DEVICE: "multipleDevice", KICKED_OUT_USERSIG_EXPIRED: "userSigExpired", KICKED_OUT_REST_API: "REST_API_Kick", ALLOW_TYPE_ALLOW_ANY: "AllowType_Type_AllowAny", ALLOW_TYPE_NEED_CONFIRM: "AllowType_Type_NeedConfirm", ALLOW_TYPE_DENY_ANY: "AllowType_Type_DenyAny", FORBID_TYPE_NONE: "AdminForbid_Type_None", FORBID_TYPE_SEND_OUT: "AdminForbid_Type_SendOut", JOIN_OPTIONS_FREE_ACCESS: "FreeAccess", JOIN_OPTIONS_NEED_PERMISSION: "NeedPermission", JOIN_OPTIONS_DISABLE_APPLY: "DisableApply", JOIN_STATUS_SUCCESS: "JoinedSuccess", JOIN_STATUS_ALREADY_IN_GROUP: "AlreadyInGroup", JOIN_STATUS_WAIT_APPROVAL: "WaitAdminApproval", INVITE_OPTIONS_DISABLE_INVITE: "DisableInvite", INVITE_OPTIONS_NEED_PERMISSION: "NeedPermission", INVITE_OPTIONS_FREE_ACCESS: "FreeAccess", GRP_PROFILE_OWNER_ID: "ownerID", GRP_PROFILE_CREATE_TIME: "createTime", GRP_PROFILE_LAST_INFO_TIME: "lastInfoTime", GRP_PROFILE_MEMBER_NUM: "memberNum", GRP_PROFILE_MAX_MEMBER_NUM: "maxMemberNum", GRP_PROFILE_JOIN_OPTION: "joinOption", GRP_PROFILE_INVITE_OPTION: "inviteOption", GRP_PROFILE_INTRODUCTION: "introduction", GRP_PROFILE_NOTIFICATION: "notification", GRP_PROFILE_MUTE_ALL_MBRS: "muteAllMembers", SNS_ADD_TYPE_SINGLE: "Add_Type_Single", SNS_ADD_TYPE_BOTH: "Add_Type_Both", SNS_DELETE_TYPE_SINGLE: "Delete_Type_Single", SNS_DELETE_TYPE_BOTH: "Delete_Type_Both", SNS_APPLICATION_TYPE_BOTH: "Pendency_Type_Both", SNS_APPLICATION_SENT_TO_ME: "Pendency_Type_ComeIn", SNS_APPLICATION_SENT_BY_ME: "Pendency_Type_SendOut", SNS_APPLICATION_AGREE: "Response_Action_Agree", SNS_APPLICATION_AGREE_AND_ADD: "Response_Action_AgreeAndAdd", SNS_CHECK_TYPE_BOTH: "CheckResult_Type_Both", SNS_CHECK_TYPE_SINGLE: "CheckResult_Type_Single", SNS_TYPE_NO_RELATION: "CheckResult_Type_NoRelation", SNS_TYPE_A_WITH_B: "CheckResult_Type_AWithB", SNS_TYPE_B_WITH_A: "CheckResult_Type_BWithA", SNS_TYPE_BOTH_WAY: "CheckResult_Type_BothWay", NET_STATE_CONNECTED: "connected", NET_STATE_CONNECTING: "connecting", NET_STATE_DISCONNECTED: "disconnected", MSG_AT_ALL: "__kImSDK_MesssageAtALL__", READ_ALL_C2C_MSG: "readAllC2CMessage", READ_ALL_GROUP_MSG: "readAllGroupMessage", READ_ALL_MSG: "readAllMessage", USER_STATUS_UNKNOWN: 0, USER_STATUS_ONLINE: 1, USER_STATUS_OFFLINE: 2, USER_STATUS_UNLOGINED: 3, IOS_OFFLINE_PUSH_NO_SOUND: "push.no_sound", IOS_OFFLINE_PUSH_DEFAULT_SOUND: "default" }, Q2 = { NEW_INVITATION_RECEIVED: "newInvitationReceived", INVITEE_ACCEPTED: "ts_invitee_accepted", INVITEE_REJECTED: "ts_invitee_rejected", INVITATION_CANCELLED: "ts_invitation_cancelled", INVITATION_TIMEOUT: "ts_invitation_timeout", INVITATION_MODIFIED: "ts_invitation_modified", ACTION_TYPE_UNKNOWN: 0, ACTION_TYPE_INVITE: 1, ACTION_TYPE_CANCEL_INVITE: 2, ACTION_TYPE_ACCEPT_INVITE: 3, ACTION_TYPE_REJECT_INVITE: 4, ACTION_TYPE_INVITE_TIMEOUT: 5 }, $2 = (e2(de2, [{ key: "use", value: function(e3) {
        if ("function" != typeof e3)
          throw "middleware must be a function";
        return this.cache.push(e3), this;
      } }, { key: "next", value: function(e3) {
        if (this.middlewares && 0 < this.middlewares.length)
          return this.middlewares.shift().call(this, this.options, this.next.bind(this));
      } }, { key: "run", value: function(e3) {
        return this.middlewares = this.cache.map(function(e4) {
          return e4;
        }), this.options = e3, this.next();
      } }]), de2), ee2 = (e2(le2, [{ key: "equal", value: function(e3) {
        return null !== e3 && this.low === e3.low && this.high === e3.high;
      } }, { key: "toString", value: function() {
        var e3 = Number(this.high).toString(16), t3 = Number(this.low).toString(16);
        if (t3.length < 8)
          for (var n3 = 8 - t3.length; n3; )
            t3 = "0" + t3, n3--;
        return e3 + t3;
      } }]), le2), te2 = { TEST: { CHINA: { DEFAULT: "wss://wss-dev.tim.qq.com" }, OVERSEA: { DEFAULT: "wss://wss-dev.tim.qq.com" }, SINGAPORE: { DEFAULT: "wss://wsssgp-dev.im.qcloud.com" }, KOREA: { DEFAULT: "wss://wsskr-dev.im.qcloud.com" }, GERMANY: { DEFAULT: "wss://wssger-dev.im.qcloud.com" }, IND: { DEFAULT: "wss://wssind-dev.im.qcloud.com" }, JPN: { DEFAULT: "wss://wssjpn-dev.im.qcloud.com" }, USA: { DEFAULT: "wss://wssusa-dev.im.qcloud.com" }, INDONESIA: { DEFAULT: "wss://wssidn-dev.im.qcloud.com" } }, PRODUCTION: { CHINA: { DEFAULT0: "wss://*w4c.my-imcloud.com", DEFAULT: "wss://wss.im.qcloud.com", BACKUP: "wss://wss.tim.qq.com", STAT: "https://events.im.qcloud.com", ANYCAST: "wss://162.14.13.203" }, OVERSEA: { DEFAULT0: "wss://*w4c.my-imcloud.com", DEFAULT: "wss://wss.im.qcloud.com", BACKUP: "wss://wss.my-imcloud.com", STAT: "https://api.my-imcloud.com" }, SINGAPORE: { DEFAULT0: "wss://*w4s.my-imcloud.com", DEFAULT: "wss://wsssgp.im.qcloud.com", BACKUP: "wss://wsssgp.my-imcloud.com", STAT: "https://apisgp.my-imcloud.com", ANYCAST: "wss://162.14.19.159" }, KOREA: { DEFAULT0: "wss://*w4k.my-imcloud.com", DEFAULT: "wss://wsskr.im.qcloud.com", BACKUP: "wss://wsskr.my-imcloud.com", STAT: "https://apikr.my-imcloud.com", ANYCAST: "wss://162.14.13.104" }, GERMANY: { DEFAULT0: "wss://*w4g.my-imcloud.com", DEFAULT: "wss://wssger.im.qcloud.com", BACKUP: "wss://wssger.my-imcloud.com", STAT: "https://apiger.my-imcloud.com", ANYCAST: "wss://162.14.3.17" }, IND: { DEFAULT0: "wss://*w4i.my-imcloud.com", DEFAULT: "wss://wssind.my-imcloud.com", BACKUP: "wss://wssind.im.qcloud.com", STAT: "https://apiind.my-imcloud.com", ANYCAST: "wss://162.14.18.188" }, JPN: { DEFAULT0: "wss://*w4j.my-imcloud.com", DEFAULT: "wss://wssjpn.im.qcloud.com", BACKUP: "wss://wssjpn.my-imcloud.com", STAT: "https://apijpn.my-imcloud.com" }, USA: { DEFAULT0: "wss://*w4u.my-imcloud.com", DEFAULT: "wss://wssusa.im.qcloud.com", BACKUP: "wss://wssusa.my-imcloud.com", STAT: "https://apiusa.my-imcloud.com", ANYCAST: "wss://162.14.10.42" }, INDONESIA: { DEFAULT0: "wss://*w4y.my-imcloud.com", DEFAULT: "wss://wssidn.im.qcloud.com", BACKUP: "wss://wssidn.my-imcloud.com", STAT: "https://apiidn.my-imcloud.com", ANYCAST: "wss://43.129.34.169" } } }, ne2 = { ANDROID: 2, IOS: 3, MAC: 4, WEB: 7, WX_MP: 8, QQ_MP: 9, TT_MP: 10, BAIDU_MP: 11, ALI_MP: 12, IPAD: 13, UNI_NATIVE_APP: 15, DONUT_NATIVE_APP: 19, NS_NATIVE_APP: 20, RN_NATIVE_APP: 21 }, oe2 = "1.7.3", ae2 = 537048168, se2 = "CHINA", a2 = { HOST: { CURRENT: { DEFAULT: "wss://wss.im.qcloud.com", STAT: "https://events.im.qcloud.com" }, setCurrent: function() {
        this.CURRENT = te2.PRODUCTION[0 < arguments.length && void 0 !== arguments[0] ? arguments[0] : se2];
      } }, NAME: { OPEN_IM: "openim", OPEN_IM_MSG_EXT: "openim_msg_ext_http_svc", GRP: "group_open_http_svc", GRP_AV: "group_open_avchatroom_http_svc", GRP_COMMUNITY: "million_group_open_http_svc", GRP_ATTR: "group_open_attr_http_svc", FD: "sns", PROFILE: "profile", RECENT_CONTACT: "recentcontact", PIC: "openpic", BIG_GRP_NO_AUTH: "group_open_http_noauth_svc", BIG_GRP_POLLING: "group_open_long_polling_http_svc", BIG_GRP_POLLING_NO_AUTH: "group_open_long_polling_http_noauth_svc", IM_OPEN_STAT: "imopenstat", WEB_IM: "webim", IM_COS_SIGN: "im_cos_sign_svr", CUSTOM_UPLOAD: "im_cos_msg", HEARTBEAT: "heartbeat", IM_OPEN_PUSH: "im_open_push", IM_OPEN_STATUS: "im_open_status", IM_LONG_MSG: "im_long_msg", IM_CONFIG_MANAGER: "im_sdk_config_mgr", STAT_SERVICE: "StatSvc", OVERLOAD_PUSH: "OverLoadPush", IM_MSG_AUDIT_MGR: "im_msg_audit_mgr", TUIROOM_SVR: "tui_room_svr", IM_OPEN_TRANSLATE: "im_open_translate", IM_OPEN_SPEECH: "im_open_speech", MSG_SEARCH: "message_search", FOLLOW: "follow", OFFLINE_PUSH_REPORT: "offline_push_report", IM_MSG_LOGIC: "im_msg_db_logic" } }, _2 = { SEARCH_GRP_SNS: new ee2(0, Math.pow(2, 1)).toString(), AV_HISTORY_MSG: new ee2(0, Math.pow(2, 2)).toString(), GRP_COMMUNITY: new ee2(0, Math.pow(2, 3)).toString(), MSG_TO_SPECIFIED_GRP_MBR: new ee2(0, Math.pow(2, 4)).toString(), AV_MBR_LIST: new ee2(0, Math.pow(2, 6)).toString(), USER_STATUS: new ee2(0, Math.pow(2, 7)).toString(), CONV_MARK: new ee2(0, Math.pow(2, 9)).toString(), CONV_GROUP: new ee2(0, Math.pow(2, 10)).toString(), AV_BAN_MBR: new ee2(0, Math.pow(2, 11)).toString(), MSG_EXT: new ee2(0, Math.pow(2, 13)).toString(), GRP_COUNTER: new ee2(0, Math.pow(2, 15)).toString(), PLUGIN_TRANSLATE: new ee2(Math.pow(2, 6)).toString(), PLUGIN_VOICE_TO_TEXT: new ee2(Math.pow(2, 7)).toString(), PLUGIN_CS: new ee2(Math.pow(2, 8)).toString(), PLUGIN_PUSH: new ee2(Math.pow(2, 9)).toString(), PLUGIN_BOT: new ee2(Math.pow(2, 10)).toString(), MSG_REACTION: new ee2(Math.pow(2, 16)).toString(), FOLLOW: new ee2(Math.pow(2, 20)).toString() }, re2 = "group_profile", ce2 = ["Type", "Name", "Introduction", "Notification", "FaceUrl", "Owner_Account", "CreateTime", "InfoSeq", "LastInfoTime", "LastMsgTime", "MemberNum", "MaxMemberNum", "ApplyJoinOption", "NextMsgSeq", "ShutUpAllMember", "InviteJoinOption"], ue2 = ["Role", "JoinTime", "MsgSeq", "MsgFlag"];
      function le2() {
        var e3 = 0 < arguments.length && void 0 !== arguments[0] ? arguments[0] : 0, t3 = 1 < arguments.length && void 0 !== arguments[1] ? arguments[1] : 0;
        d2(this, le2), this.high = e3, this.low = t3;
      }
      function de2() {
        d2(this, de2), this.cache = [], this.options = null;
      }
      a2.HOST.setCurrent(se2);
      for (var pe2, _e3 = "undefined" != typeof wx && "function" == typeof wx.getSystemInfoSync && Boolean(wx.getSystemInfoSync().fontSizeSetting), he2 = _e3 && "function" == typeof wx.createGamePortal, ge2 = "undefined" != typeof qq && "function" == typeof qq.getSystemInfoSync && Boolean(qq.getSystemInfoSync().fontSizeSetting), fe2 = "undefined" != typeof tt && "function" == typeof tt.getSystemInfoSync && Boolean(tt.getSystemInfoSync().fontSizeSetting), me2 = "undefined" != typeof swan && "function" == typeof swan.getSystemInfoSync && Boolean(swan.getSystemInfoSync().fontSizeSetting), ve2 = "undefined" != typeof my && "function" == typeof my.getSystemInfoSync && Boolean(my.getSystemInfoSync().fontSizeSetting), o2 = "undefined" != typeof jd && "function" == typeof jd.getSystemInfoSync, Ie2 = "undefined" != typeof uni && "undefined" == typeof window && "function" == typeof requireNativePlugin, s2 = _e3 && "object" === b2(wx.miniapp), Me2 = "undefined" != typeof uni, v2 = _e3 || ge2 || fe2 || me2 || ve2 || Ie2 || o2, r2 = "undefined" == typeof window && !v2 && "undefined" != typeof commonjsGlobal && void 0 !== commonjsGlobal.NativeScriptGlobals, ye2 = "undefined" != typeof commonjsGlobal && (void 0 !== commonjsGlobal.nativeModuleProxy || void 0 !== commonjsGlobal.ReactNative), Ce2 = "undefined" != typeof uni ? !v2 : "undefined" != typeof window && !v2 && !ye2, I2 = ge2 ? qq : fe2 ? tt : me2 ? swan : ve2 ? my : _e3 ? wx : Ie2 ? uni : o2 ? jd : {}, Te2 = Ce2 && window && window.navigator && window.navigator.userAgent || "", De2 = (o2 = "WEB", /(micromessenger|webbrowser)/i.test(Te2) ? o2 = "WEB" : ge2 ? o2 = "QQ_MP" : fe2 ? o2 = "TT_MP" : me2 ? o2 = "BAIDU_MP" : ve2 ? o2 = "ALI_MP" : _e3 ? o2 = s2 ? "DONUT_NATIVE_APP" : "WX_MP" : Ie2 ? o2 = "UNI_NATIVE_APP" : r2 ? o2 = "NS_NATIVE_APP" : ye2 && (o2 = "RN_NATIVE_APP"), ne2[o2]), s2 = /iPad/i.test(Te2), r2 = /iPhone/i.test(Te2) && !s2, o2 = /iPod/i.test(Te2), Ee2 = r2 || s2 || o2, Le2 = (r2 = Te2.match(/OS (\d+)_/i)) && r2[1] ? r2[1] : null, Se2 = /Android/i.test(Te2), ke2 = (s2 = Te2.match(/Android (\d+)(?:\.(\d+))?(?:\.(\d+))*/i)) ? (o2 = s2[1] && parseFloat(s2[1]), r2 = s2[2] && parseFloat(s2[2]), o2 && r2 ? parseFloat(s2[1] + "." + s2[2]) : o2 || null) : null, r2 = /Edge/i.test(Te2), s2 = !r2 && /Chrome/i.test(Te2), Ae2 = /MSIE/.test(Te2) || -1 < Te2.indexOf("Trident") && -1 < Te2.indexOf("rv:11.0"), Re2 = o2 = !(o2 = (o2 = /MSIE\s(\d+)\.\d/.exec(Te2)) && parseFloat(o2[1])) && /Trident\/7.0/i.test(Te2) && /rv:11.0/.test(Te2) ? 11 : o2, o2 = /Safari/i.test(Te2) && !s2 && !Se2 && !r2, Oe2 = /Windows/i.test(Te2), Ne2 = /MAC OS X/i.test(Te2), Ge2 = Ce2 && "undefined" != typeof Worker && !Ae2, Pe2 = Se2 || Ee2, Ue2 = Ce2 && void 0 !== window.tencent_cloud_im_csig_flutter_for_web_25F_cy, be2 = "undefined" != typeof window && void 0 !== window.navigator && (s2 = window.navigator.standalone, !(!Ee2 || s2 || o2)), we2 = "undefined" != typeof console ? console : "undefined" != typeof commonjsGlobal && commonjsGlobal.console ? commonjsGlobal.console : "undefined" != typeof window && window.console ? window.console : {}, Fe2 = function() {
      }, qe2 = ["assert", "clear", "count", "debug", "dir", "dirxml", "error", "group", "groupCollapsed", "groupEnd", "info", "log", "profile", "profileEnd", "table", "time", "timeEnd", "timeStamp", "trace", "warn"], xe2 = qe2.length; xe2--; )
        pe2 = qe2[xe2], console[pe2] || (we2[pe2] = Fe2);
      function Ve2() {
        var e3 = /* @__PURE__ */ new Date();
        return e3.setTime(We2()), e3;
      }
      function He2() {
        Ye2 = 0;
      }
      function Be2() {
        return Math.floor(We2() / 1e3);
      }
      var Ke2 = we2, Ye2 = 0, We2 = function() {
        return (/* @__PURE__ */ new Date()).getTime() + Ye2;
      }, je2 = 0;
      function Je2() {
        return Qt2() ? "%c Chat %c" : "Chat";
      }
      function ze2() {
        var e3 = Ve2();
        return e3.toLocaleTimeString("en-US", { hour12: false }) + "." + function(e4) {
          var t3;
          switch (e4.toString().length) {
            case 1:
              t3 = "00" + e4;
              break;
            case 2:
              t3 = "0" + e4;
              break;
            default:
              t3 = e4;
          }
          return t3;
        }(e3.getMilliseconds());
      }
      var M2 = { arguments2String: function(e3) {
        var t3 = "";
        if (1 === e3.length)
          t3 = e3[0];
        else
          for (var n3 = 0, o3 = e3.length; n3 < o3; n3++) {
            if (Ct2(e3[n3]))
              try {
                t3 += Tt2(e3[n3]) ? JSON.stringify(e3[n3], ["message", "code"]) : JSON.stringify(e3[n3]);
              } catch (e4) {
                t3 += e4 ? e4.message : "";
                break;
              }
            else
              t3 += e3[n3];
            t3 += " ";
          }
        return t3;
      }, _exec: function(e3, t3) {
        Qt2() ? Ke2[e3](Je2(), "background:#0abf5b; padding:1px; border-radius:3px; color: #fff", "background:transparent", ze2(), t3) : Ke2[e3]("".concat(Je2(), " ").concat(ze2(), " ").concat(t3));
      }, d: function() {
        var e3;
        je2 <= -1 && (e3 = this.arguments2String(arguments), this._exec("debug", e3));
      }, l: function() {
        var e3;
        je2 <= 0 && (e3 = this.arguments2String(arguments), this._exec("log", e3));
      }, log: function() {
        var e3;
        je2 <= 0 && (e3 = this.arguments2String(arguments), this._exec("log", e3));
      }, i: function() {
        var e3;
        je2 <= 1 && (e3 = this.arguments2String(arguments), this._exec("info", e3));
      }, w: function() {
        var e3;
        je2 <= 2 && (e3 = this.arguments2String(arguments), this._exec("warn", e3));
      }, e: function() {
        var e3;
        je2 <= 3 && (e3 = this.arguments2String(arguments), this._exec("error", e3));
      }, setLevel: function(e3) {
        e3 < 4 && this._exec("log", "set level from " + je2 + " to " + e3), je2 = e3;
      }, getLevel: function() {
        return je2;
      } }, Xe2 = { JPG: 1, JPEG: 1, GIF: 2, PNG: 3, BMP: 4, UNKNOWN: 255 }, r2 = "Tag_Profile_IM_", g2 = { NICK: "".concat(r2, "Nick"), GENDER: "".concat(r2, "Gender"), BIRTHDAY: "".concat(r2, "BirthDay"), LOCATION: "".concat(r2, "Location"), SELFSIGNATURE: "".concat(r2, "SelfSignature"), ALLOWTYPE: "".concat(r2, "AllowType"), LANGUAGE: "".concat(r2, "Language"), AVATAR: "".concat(r2, "Image"), MESSAGESETTINGS: "".concat(r2, "MsgSettings"), ADMINFORBIDTYPE: "".concat(r2, "AdminForbidType"), LEVEL: "".concat(r2, "Level"), ROLE: "".concat(r2, "Role") }, Ze2 = { GROUP: "".concat("Tag_SNS_IM_", "Group"), REMARK: "".concat("Tag_SNS_IM_", "Remark"), ADDSOURCE: "".concat("Tag_SNS_IM_", "AddSource"), ADDWORDING: "".concat("Tag_SNS_IM_", "Wording"), ADDTIME: "".concat("Tag_SNS_IM_", "AddTime") }, s2 = "Gender_Type_", Qe2 = { UNKNOWN: "".concat(s2, "Unknown"), FEMALE: "".concat(s2, "Female"), MALE: "".concat(s2, "Male") }, $e2 = { NONE: "".concat("AdminForbid_Type_", "None"), SEND_OUT: "".concat("AdminForbid_Type_", "SendOut") }, et2 = { NEED_CONFIRM: "".concat("AllowType_Type_", "NeedConfirm"), ALLOW_ANY: "".concat("AllowType_Type_", "AllowAny"), DENY_ANY: "".concat("AllowType_Type_", "DenyAny") }, nt2 = "JoinedSuccess", ot2 = "WaitAdminApproval", it2 = "@TOPIC#_", at2 = Object.prototype.hasOwnProperty;
      function S2(e3) {
        if (null == e3)
          return true;
        if ("boolean" == typeof e3)
          return false;
        if ("number" == typeof e3)
          return 0 === e3;
        if ("string" == typeof e3)
          return 0 === e3.length;
        if ("function" == typeof e3)
          return 0 === e3.length;
        if (Array.isArray(e3))
          return 0 === e3.length;
        if (e3 instanceof Error)
          return "" === e3.message;
        if (f2(e3)) {
          for (var t3 in e3)
            if (at2.call(e3, t3))
              return false;
          return true;
        }
        return !!(st2(e3) || rt2(e3) || ct2(e3)) && 0 === e3.size;
      }
      function st2(e3) {
        return "map" === Dt2(e3);
      }
      function rt2(e3) {
        return "set" === Dt2(e3);
      }
      function ct2(e3) {
        return "file" === Dt2(e3);
      }
      function R2(e3) {
        return null !== e3 && ("number" == typeof e3 && !isNaN(+e3) || "object" === b2(e3) && e3.constructor === Number);
      }
      function ut2(e3) {
        return null !== e3 && "object" === b2(e3);
      }
      function f2(e3) {
        if ("object" === b2(e3) && null !== e3) {
          if (null === (e3 = Object.getPrototypeOf(e3)))
            return 1;
          for (var t3 = e3; null !== Object.getPrototypeOf(t3); )
            t3 = Object.getPrototypeOf(t3);
          return e3 === t3;
        }
      }
      function O2(e3) {
        return "function" == typeof Array.isArray ? Array.isArray(e3) : "array" === Dt2(e3);
      }
      function lt2(e3) {
        return "function" == typeof e3;
      }
      function dt2(e3) {
        return "filelist" === Dt2(e3);
      }
      function pt2(e3) {
        return "string" == typeof e3 && (e3 = e3[0], !/[^a-zA-Z0-9]/.test(e3));
      }
      function _t3(e3, t3, n3, o3) {
        if (!Ct2(e3) || !Ct2(t3))
          return 0;
        for (var i3, a3 = 0, s3 = Object.keys(t3), r3 = 0, c3 = s3.length; r3 < c3; r3++)
          if (i3 = s3[r3], !(N2(t3[i3]) || n3 && n3.includes(i3)))
            if (Ct2(e3[i3]) && Ct2(t3[i3]))
              a3 += _t3(e3[i3], t3[i3], n3, o3);
            else {
              if (o3 && o3.includes(t3[i3]))
                continue;
              e3[i3] !== t3[i3] && (e3[i3] = t3[i3], a3 += 1);
            }
        return a3;
      }
      function ht2(e3, t3) {
        var n3, o3 = /* @__PURE__ */ new Map(), i3 = Z2(e3.entries());
        try {
          for (i3.s(); !(n3 = i3.n()).done; ) {
            var a3 = Y2(n3.value, 2), s3 = a3[0], r3 = a3[1];
            r3 && o3.set(s3, t3 ? JSON.stringify(r3) : JSON.parse(JSON.stringify(r3)));
          }
        } catch (e4) {
          i3.e(e4);
        } finally {
          i3.f();
        }
        return o3;
      }
      function gt2(e3) {
        if (0 === e3.length)
          return 0;
        for (var t3 = 0, n3 = 0, o3 = "undefined" != typeof document && void 0 !== document.characterSet ? document.characterSet : "UTF-8"; void 0 !== e3[t3]; )
          n3 += e3[t3++].charCodeAt[t3] <= 255 ? 1 : false === o3 ? 3 : 2;
        return n3;
      }
      function ft2(e3) {
        return e3 = e3 || 99999999, Math.round(Math.random() * e3);
      }
      function mt2() {
        for (var e3 = "", t3 = 32; 0 < t3; --t3)
          e3 += Et2[Math.floor(Math.random() * Lt2)];
        return e3;
      }
      function vt2(e3, t3) {
        for (var n3 in e3)
          if (e3[n3] === t3)
            return 1;
      }
      function It2(e3) {
        return -1 === e3.indexOf("http://") || -1 === e3.indexOf("https://") ? "https://" + e3 : e3.replace(/https|http/, "https");
      }
      function Mt2(e3) {
        if (0 === Object.getOwnPropertyNames(e3).length)
          return /* @__PURE__ */ Object.create(null);
        var t3, n3, o3 = Array.isArray(e3) ? [] : /* @__PURE__ */ Object.create(null);
        for (n3 in e3)
          null !== e3[n3] ? void 0 !== e3[n3] ? (t3 = b2(e3[n3]), 0 <= ["string", "number", "function", "boolean"].indexOf(t3) ? o3[n3] = e3[n3] : o3[n3] = Mt2(e3[n3])) : o3[n3] = void 0 : o3[n3] = null;
        return o3;
      }
      var yt2 = ["url"], m2 = function(e3) {
        return "string" == typeof e3;
      }, N2 = function(e3) {
        return void 0 === e3;
      }, Ct2 = function(e3) {
        return O2(e3) || ut2(e3);
      }, Tt2 = function(e3) {
        return e3 instanceof Error;
      }, Dt2 = function(e3) {
        return Object.prototype.toString.call(e3).match(/^\[object (.*)\]$/)[1].toLowerCase();
      }, Et2 = (Date.now || (Date.now = function() {
        return (/* @__PURE__ */ new Date()).getTime();
      }), "0123456789abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ"), Lt2 = Et2.length, St2 = {};
      function kt2(o3, e3) {
        var i3;
        return !(!O2(o3) || !O2(e3)) && (i3 = false, e3.forEach(function(e4) {
          var t3 = e4.key, e4 = e4.value, n3 = o3.find(function(e5) {
            return e5.key === t3;
          });
          n3 ? n3.value !== e4 && (n3.value = e4, i3 = true) : (o3.push({ key: t3, value: e4 }), i3 = true);
        }), i3);
      }
      function At2(e3) {
        return S2(e3) ? [] : e3.filter(function(e4) {
          return true === e4.isModified;
        });
      }
      function Rt2(e3) {
        return S2(e3) ? [] : e3.filter(function(e4) {
          return false === e4.isModified;
        });
      }
      function Ot2(e3) {
        return e3 === A2.GRP_AVCHATROOM;
      }
      function Nt2(e3) {
        var t3 = e3.type, e3 = e3.groupID;
        return t3 === A2.GRP_COMMUNITY || "".concat(e3).startsWith("@TGS#_") && !"".concat(e3).includes(it2);
      }
      function Gt2(e3) {
        return "".concat(e3).startsWith("@TGS#_") && "".concat(e3).includes(it2);
      }
      function Pt2(e3) {
        return m2(e3) && e3.slice(0, 3) === A2.CONV_C2C;
      }
      function Ut2(e3) {
        return m2(e3) && e3.slice(0, 5) === A2.CONV_GROUP;
      }
      function bt2(e3) {
        return m2(e3) && e3 === A2.CONV_SYSTEM;
      }
      function wt2(t3, n3) {
        var o3 = {};
        return Object.keys(t3).forEach(function(e3) {
          o3[e3] = n3(t3[e3], e3);
        }), o3;
      }
      function Ft2(o3) {
        return ye2 ? Promise.resolve({ width: 0, height: 0 }) : v2 ? new Promise(function(t3, e3) {
          I2.getImageInfo({ src: o3, success: function(e4) {
            t3({ width: e4.width, height: e4.height });
          }, fail: function() {
            t3({ width: 0, height: 0 });
          } });
        }) : Ae2 && 9 === Re2 ? Promise.resolve({ width: 0, height: 0 }) : new Promise(function(e3, t3) {
          var n3 = new Image();
          n3.onload = function() {
            e3({ width: this.width, height: this.height }), n3 = null;
          }, n3.onerror = function() {
            e3({ width: 0, height: 0 }), n3 = null;
          }, n3.src = o3;
        });
      }
      function qt2() {
        function e3() {
          return (65536 * (1 + Math.random()) | 0).toString(16).substring(1);
        }
        return "".concat(e3() + e3()).concat(e3()).concat(e3()).concat(e3()).concat(e3()).concat(e3()).concat(e3());
      }
      function xt2() {
        var e3 = Se2 ? "android" : Ee2 ? "ios" : Oe2 ? "windows" : Ne2 ? "mac" : "unknown";
        if (v2)
          try {
            var t3 = I2.getSystemInfoSync().platform;
            void 0 !== t3 && (e3 = t3);
          } catch (e4) {
          }
        return e3;
      }
      function Vt2(e3, t3) {
        e3 = e3.split("."), t3 = t3.split(".");
        for (var n3 = Math.max(e3.length, t3.length); e3.length < n3; )
          e3.push("0");
        for (; t3.length < n3; )
          t3.push("0");
        for (var o3 = 0; o3 < n3; o3++) {
          var i3 = parseInt(e3[o3]), a3 = parseInt(t3[o3]);
          if (a3 < i3)
            return 1;
          if (i3 < a3)
            return -1;
        }
        return 0;
      }
      function Ht2(e3) {
        var t3 = e3.originUrl, t3 = void 0 === t3 ? void 0 : t3, n3 = e3.originWidth, o3 = e3.originHeight, e3 = e3.min, e3 = void 0 === e3 ? 198 : e3, n3 = parseInt(n3), o3 = parseInt(o3), i3 = { url: void 0, width: 0, height: 0 };
        return (n3 <= o3 ? n3 : o3) <= e3 ? (i3.url = t3, i3.width = n3, i3.height = o3) : (o3 <= n3 ? (i3.width = Math.ceil(n3 * e3 / o3), i3.height = e3) : (i3.width = e3, i3.height = Math.ceil(o3 * e3 / n3)), o3 = t3 && -1 < t3.indexOf("?") ? "".concat(t3, "&") : "".concat(t3, "?"), i3.url = "".concat(o3, 198 === e3 ? "imageView2/3/w/198/h/198" : "imageView2/3/w/720/h/720")), N2(t3) ? K2(i3, yt2) : i3;
      }
      function Bt2(e3) {
        var t3 = e3[2];
        e3[2] = e3[1], e3[1] = t3;
        for (var n3 = 0; n3 < e3.length; n3++)
          e3[n3].setType(n3);
      }
      function Kt2(e3) {
        e3 = e3.servcmd;
        return e3.slice(e3.indexOf(".") + 1);
      }
      function Yt2(e3, t3) {
        return Math.round(Number(e3) * Math.pow(10, t3)) / Math.pow(10, t3);
      }
      function Wt2(e3, t3) {
        return e3.includes(t3);
      }
      function jt2(e3, t3) {
        return e3.includes(t3);
      }
      function Jt2(e3) {
        return e3.split(it2)[0];
      }
      var zt2 = function(e3, t3, n3) {
        if (N2(t3))
          return "";
        switch (e3) {
          case A2.MSG_TEXT:
            return t3.text;
          case A2.MSG_IMAGE:
            return n3 ? "[Image]" : "[图片]";
          case A2.MSG_LOCATION:
            return n3 ? "[Location]" : "[位置]";
          case A2.MSG_AUDIO:
            return n3 ? "[Voice]" : "[语音]";
          case A2.MSG_VIDEO:
            return n3 ? "[Video]" : "[视频]";
          case A2.MSG_FILE:
            return n3 ? "[File]" : "[文件]";
          case A2.MSG_CUSTOM:
            return n3 ? "[Custom Messages]" : "[自定义消息]";
          case A2.MSG_GRP_TIP:
            return n3 ? "[Group Notification]" : "[群提示消息]";
          case A2.MSG_GRP_SYS_NOTICE:
            return n3 ? "[Group System Message]" : "[群系统通知]";
          case A2.MSG_FACE:
            return n3 ? "[Animated Sticker]" : "[动画表情]";
          case A2.MSG_MERGER:
            return n3 ? "[Chat Record]" : "[聊天记录]";
          default:
            return "";
        }
      };
      function Xt2(e3) {
        return e3 === A2.MSG_TEXT || e3 === A2.MSG_CUSTOM || e3 === A2.MSG_LOCATION || e3 === A2.MSG_FACE;
      }
      function Zt2(e3) {
        var t3 = [];
        if (m2(e3)) {
          var n3 = e3.length;
          if (0 !== n3)
            for (var o3 = n3 - 1; 0 <= o3; o3--)
              "1" === e3[o3] && t3.push(Math.pow(2, n3 - o3 - 1));
        }
        return t3;
      }
      function Qt2() {
        return !Ae2 && !v2;
      }
      function $t2(e3) {
        return "the length of userIDList cannot exceed ".concat(e3);
      }
      function en2(e3) {
        var t3;
        if (O2(e3) && 0 !== e3.length)
          return t3 = 0, e3.forEach(function(e4) {
            t3 += e4;
          }), t3.toFixed(0);
      }
      function tn2(e3) {
        var t3;
        if (O2(e3) && 0 !== e3.length)
          return t3 = 0, e3.forEach(function(e4) {
            t3 += e4;
          }), (t3 / e3.length).toFixed(0);
      }
      function nn2(e3, t3, n3) {
        var t3 = !(1 < arguments.length && void 0 !== t3) || t3, n3 = !(2 < arguments.length && void 0 !== n3) || n3, o3 = Date.now();
        return t3 ? n3 ? "".concat(o3 - e3, " ms") : "".concat(Math.round((o3 - e3) / 1e3), " s") : n3 ? o3 - e3 : Math.round((o3 - e3) / 1e3);
      }
      function on2(e3) {
        return e3 && 1 < e3 ? true : false;
      }
      function an2(e3, t3, n3, o3) {
        var i3, a3, s3;
        return void 0 === t3 || (i3 = true, t3.required && S2(e3) && (M2.e("[".concat(n3, '] Missing required params: "').concat(o3, '".')), i3 = false), S2(e3) || (a3 = Dt2(e3)) === (s3 = t3.type.toLowerCase()) || "asyncfunction" === a3 && "function" === s3 || (M2.e("[".concat(n3, '] Invalid params: type check failed for "').concat(o3, '". Expected ').concat(t3.type, ".")), i3 = false), t3.validator && !t3.validator(e3, n3, o3) && (M2.e("[".concat(n3, '] Invalid params: custom validator check failed for "').concat(o3, '".')), i3 = false), i3);
      }
      function sn2(e3) {
        return !(!e3 || !(Pt2(e3) || Ut2(e3) || bt2(e3)) && ((e3 = l2("InvalidConversationID", e3)) && M2.w(e3), 1));
      }
      function c2(e3) {
        "" !== e3.desc && "" !== l2("API_REFER") && M2.w("[".concat(e3.api, "] | ").concat(e3.paramName, " | ").concat(e3.desc, ", ").concat(l2("API_REFER")).concat(e3.api));
      }
      function rn2() {
        return l2("StringRequiredLog");
      }
      function cn2(e3) {
        return l2("NonEmptyStringRequiredLog", e3);
      }
      function un2() {
        return l2("NumberRequiredLog");
      }
      function ln2() {
        return l2("UndefinedNotAllowedLog");
      }
      function dn2() {
        return l2("FileRequiredLog");
      }
      function pn2() {
        return l2("FunctionRequiredLog");
      }
      function _n3() {
        return l2("ArrayRequiredLog");
      }
      function hn2() {
        return l2("NonEmptyArrayLog");
      }
      function gn2() {
        return l2("CallbackMissingLog");
      }
      function fn2() {
        return l2("PositiveIntegerRequiredLog");
      }
      function mn2(e3, t3) {
        return l2("StringNotLongerThanLog", e3, t3);
      }
      function vn2(e3, t3) {
        return l2("NumberGreaterOrEqualLog", e3, t3);
      }
      function In2(e3) {
        return l2("KeyValueStringRequiredLog", e3);
      }
      function Mn2() {
        return l2("PlainObjectRequiredLog");
      }
      function yn2() {
        return l2("NonEmptyContentRequiredLog");
      }
      function Cn2() {
        return l2("FileNotSelectedLog");
      }
      function Tn2() {
        return l2("MessageInstanceRequiredLog");
      }
      function Dn2() {
        return l2("NonAnonymousFunctionLog");
      }
      function En2() {
        return l2("MessageExtensionNotAvailableLog");
      }
      function Ln2() {
        return l2("MessageReactionRequiredLog");
      }
      function Sn2(e3, t3) {
        return l2("MaximumArrayLengthLog", e3, t3);
      }
      function C2(e3) {
        return { code: 0, data: e3 || {} };
      }
      function T2(e3) {
        return Promise.resolve(C2(e3));
      }
      function D2(e3) {
        var t3, n3 = 1 < arguments.length && void 0 !== arguments[1] && arguments[1];
        return e3 instanceof E2 ? (n3 && null !== qn2 && qn2.emit(h2.ERROR, e3), Promise.reject(e3)) : e3 instanceof Error ? (t3 = new E2({ code: L2.UNCAUGHT_ERROR }), n3 && null !== qn2 && qn2.emit(h2.ERROR, t3), Promise.reject(t3)) : N2(e3) || N2(e3.code) ? Promise.reject(new E2({ code: L2.UNCAUGHT_ERROR })) : (t3 = new E2(e3), n3 && null !== qn2 && qn2.emit(h2.ERROR, t3), Promise.reject(t3));
      }
      var kn2, An2 = "unSend", Rn2 = "success", On2 = "fail", Nn2 = "notStart", Gn2 = "pending", Pn2 = "resolved", Un2 = "rejected", o2 = { type: "String", required: true }, r2 = { type: "Array", required: true }, s2 = { type: "Object", required: true }, bn2 = { type: "Boolean", required: true }, u2 = { type: "number", required: true }, l2 = null, wn2 = { hookGetAPITips: function(e3) {
        l2 = e3;
      }, login: { userID: o2, userSig: o2 }, addToBlacklist: { userIDList: r2 }, removeFromBlacklist: { userIDList: r2 }, on: [{ name: "eventName", type: "String", validator: function(e3, t3, n3) {
        return "string" == typeof e3 && 0 !== e3.length || (c2({ api: t3, paramName: n3, desc: cn2(n3) }), false);
      } }, { name: "handler", type: "Function", validator: function(e3, t3, n3) {
        return "function" != typeof e3 ? (c2({ api: t3, paramName: n3, desc: pn2() }), false) : ("" === e3.name && c2({ api: t3, paramName: n3, desc: Dn2() }), true);
      } }], once: [{ name: "eventName", type: "String", validator: function(e3, t3, n3) {
        return "string" == typeof e3 && 0 !== e3.length || (c2({ api: t3, paramName: n3, desc: cn2(n3) }), false);
      } }, { name: "handler", type: "Function", validator: function(e3, t3, n3) {
        return "function" != typeof e3 ? (c2({ api: t3, paramName: n3, desc: pn2() }), false) : ("" === e3.name && c2({ api: t3, paramName: n3, desc: Dn2() }), true);
      } }], off: [{ name: "eventName", type: "String", validator: function(e3, t3, n3) {
        return "string" == typeof e3 && 0 !== e3.length || (c2({ api: t3, paramName: n3, desc: cn2(n3) }), false);
      } }, { name: "handler", type: "Function", validator: function(e3, t3, n3) {
        return "function" != typeof e3 ? (c2({ api: t3, paramName: n3, desc: pn2() }), false) : ("" === e3.name && c2({ api: t3, paramName: n3, desc: Dn2() }), true);
      } }], sendMessage: [y2({ name: "message" }, s2)], setMessageExtensions: [y2(y2({ name: "message" }, s2), {}, { validator: function(e3, t3, n3) {
        return e3.status === Rn2 && true === e3.isSupportExtension || (c2({ api: t3, paramName: n3, desc: En2() }), false);
      } }), y2({ name: "extensions" }, r2)], getMessageExtensions: [y2(y2({ name: "message" }, s2), {}, { validator: function(e3, t3, n3) {
        return e3.status === Rn2 && true === e3.isSupportExtension || (c2({ api: t3, paramName: n3, desc: En2() }), false);
      } })], deleteMessageExtensions: [y2(y2({ name: "message" }, s2), {}, { validator: function(e3, t3, n3) {
        return e3.status === Rn2 && true === e3.isSupportExtension || (c2({ api: t3, paramName: n3, desc: En2() }), false);
      } })], addMessageReaction: [y2(y2({ name: "message" }, s2), {}, { validator: function(e3, t3, n3) {
        return e3.status === Rn2 || (c2({ api: t3, paramName: n3, desc: Ln2() }), false);
      } }), y2({ name: "reactionID" }, o2)], removeMessageReaction: [y2(y2({ name: "message" }, s2), {}, { validator: function(e3, t3, n3) {
        return e3.status === Rn2 || (c2({ api: t3, paramName: n3, desc: Ln2() }), false);
      } }), y2({ name: "reactionID" }, o2)], getMessageReactions: { messageList: y2({}, r2) }, getAllUserListOfMessageReaction: { message: y2(y2({}, s2), {}, { validator: function(e3, t3, n3) {
        return e3.status === Rn2 || (c2({ api: t3, paramName: n3, desc: Ln2() }), false);
      } }), reactionID: y2({}, o2), nextSeq: { type: "Number" }, count: { type: "Number" } }, getMessageList: { conversationID: y2(y2({}, o2), {}, { validator: sn2 }), nextReqMessageID: { type: "String" }, count: { type: "Number", validator: function(e3, t3, n3) {
        return !(!N2(e3) && !/^[1-9][0-9]*$/.test(e3) && (c2({ api: t3, paramName: n3, desc: fn2() }), 1));
      } } }, getMessageListHopping: { conversationID: y2(y2({}, o2), {}, { validator: sn2 }), sequence: { type: "Number" }, time: { type: "Number" }, direction: { type: "Number", validator: function(e3, t3, n3) {
        return !(!N2(e3) && 0 !== e3 && 1 !== e3 && (c2({ api: t3, paramName: n3, desc: l2("0Or1RequiredLog") }), 1));
      } }, count: { type: "Number", validator: function(e3, t3, n3) {
        return !(!N2(e3) && !/^[1-9][0-9]*$/.test(e3) && (c2({ api: t3, paramName: n3, desc: fn2 }), 1));
      } } }, setMessageRead: { conversationID: y2(y2({}, o2), {}, { validator: sn2 }) }, setAllMessageRead: { scope: { type: "String", required: false, validator: function(e3, t3, n3) {
        return !e3 || -1 !== [A2.READ_ALL_C2C_MSG, A2.READ_ALL_GROUP_MSG, A2.READ_ALL_MSG].indexOf(e3) || (c2({ api: t3, paramName: n3, desc: l2("ValidScopeRequired") }), false);
      } } }, getConversationProfile: [y2(y2({ name: "conversationID" }, o2), {}, { validator: sn2 })], clearHistoryMessage: [y2(y2({ name: "conversationID" }, o2), {}, { validator: sn2 })], pinConversation: { conversationID: y2(y2({}, o2), {}, { validator: sn2 }), isPinned: y2({}, bn2) }, setConversationDraft: { conversationID: y2(y2({}, o2), {}, { validator: sn2 }), draftText: { type: "String", validator: function(e3, t3, n3) {
        return !!m2(e3) || (c2({ api: t3, paramName: n3, desc: rn2() }), false);
      } } }, setConversationCustomData: { conversationIDList: y2({}, r2), customData: { type: "String", validator: function(e3, t3, n3) {
        return m2(e3) ? !(256 < e3.length && (c2({ api: t3, paramName: n3, desc: mn2(n3, 256) }), 1)) : (c2({ api: t3, paramName: n3, desc: rn2() }), false);
      } } }, markConversation: { conversationIDList: y2({}, r2), markType: { type: "number", validator: function(e3, t3, n3) {
        return R2(e3) ? e3 <= 0 ? (c2({ api: t3, paramName: n3, desc: l2("NumberGreaterThanLog", n3, 0) }), false) : !(e3 >= Math.pow(2, 64) && (c2({ api: t3, paramName: n3, desc: l2("NumberLessThanLog", n3, "Math.pow(2,64)") }), 1)) : (c2({ api: t3, paramName: n3, desc: un2() }), false);
      } }, enableMark: y2({}, bn2) }, createConversationGroup: { conversationIDList: y2({}, r2), groupName: y2(y2({}, o2), {}, { validator: function(e3, t3, n3) {
        return !(!e3 || 32 < e3.length && (c2({ api: t3, paramName: n3, desc: mn2(n3, 32) }), 1));
      } }) }, deleteConversationGroup: [y2({ name: "groupName" }, o2)], renameConversationGroup: { oldName: y2({}, o2), newName: y2(y2({}, o2), {}, { validator: function(e3, t3, n3) {
        return !(!e3 || 32 < e3.length && (c2({ api: t3, paramName: n3, desc: mn2(n3, 32) }), 1));
      } }) }, addConversationsToGroup: { conversationIDList: y2({}, r2), groupName: y2({}, o2) }, deleteConversationsFromGroup: { conversationIDList: y2({}, r2), groupName: y2({}, o2) }, getGroupList: { groupProfileFilter: { type: "Array" } }, getGroupProfile: { groupID: o2, groupCustomFieldFilter: { type: "Array" }, memberCustomFieldFilter: { type: "Array" } }, getGroupProfileAdvance: { groupIDList: r2 }, createGroup: { name: o2 }, joinGroup: { groupID: o2, type: { type: "String" }, applyMessage: { type: "String" } }, quitGroup: [y2({ name: "groupID" }, o2)], handleApplication: { message: s2, handleAction: o2, handleMessage: { type: "String" } }, changeGroupOwner: { groupID: o2, newOwnerID: o2 }, updateGroupProfile: { groupID: o2, muteAllMembers: { type: "Boolean" } }, dismissGroup: [y2({ name: "groupID" }, o2)], searchGroupByID: [y2({ name: "groupID" }, o2)], getGroupOnlineMemberCount: [y2({ name: "groupID" }, o2)], initGroupAttributes: { groupID: o2, groupAttributes: y2(y2({}, s2), {}, { validator: function(t3, n3, o3) {
        var i3 = true;
        return Object.keys(t3).forEach(function(e3) {
          if (!m2(t3[e3]))
            return c2({ api: n3, paramName: o3, desc: In2("value") }), i3 = false;
        }), i3;
      } }) }, setGroupAttributes: { groupID: o2, groupAttributes: y2(y2({}, s2), {}, { validator: function(t3, n3, o3) {
        var i3 = true;
        return Object.keys(t3).forEach(function(e3) {
          if (!m2(t3[e3]))
            return c2({ api: n3, paramName: o3, desc: In2("value") }), i3 = false;
        }), i3;
      } }) }, deleteGroupAttributes: { groupID: o2, keyList: { type: "Array", validator: function(e3, t3, n3) {
        var o3;
        return N2(e3) || !O2(e3) ? (c2({ api: t3, paramName: n3, desc: _n3() }), false) : !!S2(e3) || (o3 = true, e3.forEach(function(e4) {
          if (!m2(e4))
            return c2({ api: t3, paramName: n3, desc: l2("StringArrayRequiredLog") }), o3 = false;
        }), o3);
      } } }, getGroupAttributes: { groupID: o2, keyList: { type: "Array", validator: function(e3, t3, n3) {
        var o3;
        return N2(e3) || !O2(e3) ? (c2({ api: t3, paramName: n3, desc: _n3() }), false) : !!S2(e3) || (o3 = true, e3.forEach(function(e4) {
          if (!m2(e4))
            return c2({ api: t3, paramName: n3, desc: In2("key") }), o3 = false;
        }), o3);
      } } }, setGroupCounters: { groupID: o2, counters: s2 }, increaseGroupCounter: { groupID: o2, key: o2, value: u2 }, decreaseGroupCounter: { groupID: o2, key: o2, value: u2 }, getGroupCounters: { groupID: o2 }, getGroupMemberList: { groupID: o2, count: { type: "Number" } }, getGroupMemberProfile: { groupID: o2, userIDList: r2, memberCustomFieldFilter: { type: "Array" } }, addGroupMember: { groupID: o2, userIDList: r2 }, setGroupMemberRole: { groupID: o2, userID: o2, role: o2 }, setGroupMemberMuteTime: { groupID: o2, userID: o2, muteTime: { type: "Number", validator: function(e3) {
        return 0 <= e3;
      } } }, setGroupMemberNameCard: { groupID: o2, userID: { type: "String" }, nameCard: { type: "String", validator: function(e3, t3, n3) {
        return m2(e3) ? (e3.length, true) : (c2({ api: t3, paramName: n3, desc: rn2() }), false);
      } } }, setGroupMemberCustomField: { groupID: o2, userID: { type: "String" }, memberCustomField: r2 }, deleteGroupMember: { groupID: o2 }, markGroupMemberList: { groupID: o2, markType: { type: "number", validator: function(e3, t3, n3) {
        return R2(e3) ? !(e3 < 1e3 && (c2({ api: t3, paramName: n3, desc: vn2(n3, 1e3) }), 1)) : (c2({ api: t3, paramName: n3, desc: un2() }), false);
      } }, userIDList: y2({}, r2), enableMark: y2({}, bn2) }, createTextMessage: { to: o2, conversationType: o2, payload: y2(y2({}, s2), {}, { validator: function(e3, t3, n3) {
        return f2(e3) ? m2(e3.text) ? 0 !== e3.text.length || (c2({ api: t3, paramName: "payload.text", desc: yn2() }), false) : (c2({ api: t3, paramName: "payload.text", desc: rn2() }), false) : (c2({ api: t3, paramName: n3, desc: Mn2() }), false);
      } }) }, createTextAtMessage: { to: o2, conversationType: o2, payload: y2(y2({}, s2), {}, { validator: function(e3, t3, n3) {
        return f2(e3) ? m2(e3.text) ? 0 === e3.text.length ? (c2({ api: t3, paramName: "payload.text", desc: yn2() }), false) : !(e3.atUserList && !O2(e3.atUserList) && (c2({ api: t3, paramName: "payload.atUserList", desc: _n3() }), 1)) : (c2({ api: t3, paramName: "payload.text", desc: rn2() }), false) : (c2({ api: t3, paramName: n3, desc: Mn2() }), false);
      } }) }, createCustomMessage: { to: o2, conversationType: o2, payload: y2(y2({}, s2), {}, { validator: function(e3, t3, n3) {
        return f2(e3) ? e3.data && !m2(e3.data) ? (c2({ api: t3, paramName: "payload.data", desc: rn2() }), false) : e3.description && !m2(e3.description) ? (c2({ api: t3, paramName: "payload.description", desc: rn2() }), false) : !(e3.extension && !m2(e3.extension) && (c2({ api: t3, paramName: "payload.extension", desc: rn2() }), 1)) : (c2({ api: t3, paramName: "payload", desc: Mn2() }), false);
      } }) }, createImageMessage: { to: o2, conversationType: o2, payload: y2(y2({}, s2), {}, { validator: function(e3, t3, n3) {
        if (!f2(e3))
          return c2({ api: t3, paramName: n3, desc: Mn2() }), false;
        if (N2(e3.file))
          return c2({ api: t3, paramName: "payload.file", desc: ln2() }), false;
        if (Ce2) {
          if (!(e3.file instanceof HTMLInputElement || ct2(e3.file)))
            return f2(e3.file) && "undefined" != typeof uni ? 0 !== e3.file.tempFilePaths.length && 0 !== e3.file.tempFiles.length || (c2({ api: t3, paramName: "payload.file", desc: Cn2() }), false) : (c2({ api: t3, paramName: "payload.file", desc: dn2() }), false);
          if (e3.file instanceof HTMLInputElement && 0 === e3.file.files.length)
            return c2({ api: t3, paramName: "payload.file", desc: Cn2() }), false;
        }
        return true;
      }, onProgress: { type: "Function", required: false, validator: function(e3, t3, n3) {
        return N2(e3) && c2({ api: t3, paramName: n3, desc: gn2() }), true;
      } } }) }, createAudioMessage: { to: o2, conversationType: o2, payload: y2(y2({}, s2), {}, { validator: function(e3, t3, n3) {
        return !!f2(e3) || (c2({ api: t3, paramName: n3, desc: Mn2() }), false);
      } }), onProgress: { type: "Function", required: false, validator: function(e3, t3, n3) {
        return N2(e3) && c2({ api: t3, paramName: n3, desc: gn2() }), true;
      } } }, createVideoMessage: { to: o2, conversationType: o2, payload: y2(y2({}, s2), {}, { validator: function(e3, t3, n3) {
        if (!f2(e3))
          return c2({ api: t3, paramName: n3, desc: Mn2() }), false;
        if (N2(e3.file))
          return c2({ api: t3, paramName: "payload.file", desc: ln2() }), false;
        if (Ce2) {
          if (!(e3.file instanceof HTMLInputElement || ct2(e3.file)))
            return f2(e3.file) && "undefined" != typeof uni ? !!ct2(e3.file.tempFile) || (c2({ api: t3, paramName: "payload.file", desc: Cn2() }), false) : (c2({ api: t3, paramName: "payload.file", desc: dn2() }), false);
          if (e3.file instanceof HTMLInputElement && 0 === e3.file.files.length)
            return c2({ api: t3, paramName: "payload.file", desc: Cn2() }), false;
        }
        return true;
      } }), onProgress: { type: "Function", required: false, validator: function(e3, t3, n3) {
        return N2(e3) && c2({ api: t3, paramName: n3, desc: gn2() }), true;
      } } }, createFaceMessage: { to: o2, conversationType: o2, payload: y2(y2({}, s2), {}, { validator: function(e3, t3, n3) {
        return f2(e3) ? R2(e3.index) ? !!m2(e3.data) || (c2({ api: t3, paramName: "payload.data", desc: rn2() }), false) : (c2({ api: t3, paramName: "payload.index", desc: un2() }), false) : (c2({ api: t3, paramName: n3, desc: Mn2() }), false);
      } }) }, createFileMessage: { to: o2, conversationType: o2, payload: y2(y2({}, s2), {}, { validator: function(e3, t3, n3) {
        if (!f2(e3))
          return c2({ api: t3, paramName: n3, desc: Mn2() }), false;
        if (N2(e3.file))
          return c2({ api: t3, paramName: "payload.file", desc: ln2() }), false;
        if (Ce2) {
          if (!(e3.file instanceof HTMLInputElement || ct2(e3.file)))
            return f2(e3.file) && "undefined" != typeof uni ? 0 !== e3.file.tempFilePaths.length && 0 !== e3.file.tempFiles.length || (c2({ api: t3, paramName: "payload.file", desc: Cn2() }), false) : (c2({ api: t3, paramName: "payload.file", desc: dn2() }), false);
          if (e3.file instanceof HTMLInputElement && 0 === e3.file.files.length)
            return c2({ api: t3, paramName: "payload.file", desc: Cn2() }), false;
        }
        return true;
      } }), onProgress: { type: "Function", required: false, validator: function(e3, t3, n3) {
        return N2(e3) && c2({ api: t3, paramName: n3, desc: gn2() }), true;
      } } }, createLocationMessage: { to: o2, conversationType: o2, payload: y2(y2({}, s2), {}, { validator: function(e3, t3, n3) {
        return f2(e3) ? m2(e3.description) ? R2(e3.longitude) ? !!R2(e3.latitude) || (c2({ api: t3, paramName: "payload.latitude", desc: un2() }), false) : (c2({ api: t3, paramName: "payload.longitude", desc: un2() }), false) : (c2({ api: t3, paramName: "payload.description", desc: rn2() }), false) : (c2({ api: t3, paramName: n3, desc: Mn2() }), false);
      } }) }, createMergerMessage: { to: o2, conversationType: o2, payload: y2(y2({}, s2), {}, { validator: function(e3, t3, n3) {
        var o3;
        return S2(e3.messageList) ? (c2({ api: t3, paramName: "payload.messageList", desc: hn2() }), false) : S2(e3.compatibleText) ? (c2({ api: t3, paramName: "payload.compatibleText", desc: cn2("compatibleText") }), false) : (o3 = false, e3.messageList.forEach(function(e4) {
          e4.status === On2 && (o3 = true);
        }), !o3 || (c2({ api: t3, paramName: "payload.messageList", desc: l2("MergeFailedMessageLog") }), false));
      } }) }, revokeMessage: [y2(y2({ name: "message" }, s2), {}, { validator: function(e3, t3, n3) {
        return S2(e3) ? (c2({ api: t3, paramName: n3, desc: Tn2() }), false) : e3.conversationType === A2.CONV_SYSTEM ? (c2({ api: t3, paramName: n3, desc: l2("MessageCanBeRevokedDesc") }), false) : true !== e3.isRevoked || (c2({ api: t3, paramName: n3, desc: l2("MessageRevokedLog") }), false);
      } })], deleteMessage: [y2(y2({ name: "messageList" }, r2), {}, { validator: function(e3, t3, n3) {
        return !S2(e3) || (c2({ api: t3, paramName: n3, desc: hn2() }), false);
      } })], translateText: { sourceTextList: r2, sourceLanguage: o2, targetLanguage: o2 }, convertVoiceToText: { message: y2(y2({}, s2), {}, { validator: function(e3, t3, n3) {
        return S2(e3) ? (c2({ api: t3, paramName: n3, desc: Tn2() }), false) : e3.type === A2.MSG_AUDIO && e3.status === Rn2 || (c2({ api: t3, paramName: n3, desc: l2("AudioMessageRequiredLog") }), false);
      } }) }, modifyMessage: [y2(y2({ name: "message" }, s2), {}, { validator: function(e3, t3, n3) {
        return S2(e3) ? (c2({ api: t3, paramName: n3, desc: Tn2() }), false) : e3.conversationType === A2.CONV_SYSTEM ? (c2({ api: t3, paramName: n3, desc: l2("MessageCanBeModifiedLog") }), false) : true !== e3._onlineOnlyFlag || (c2({ api: t3, paramName: n3, desc: l2("OnlineMessageNotSupportLog") }), false);
      } })], searchCloudMessages: { keywordList: { type: "Array", required: false, validator: function(e3, t3, n3) {
        return !(e3 && (O2(e3) ? 0 === e3.length ? (c2({ api: t3, paramName: n3, desc: hn2() }), 1) : 5 < e3.length && (c2({ api: t3, paramName: n3, desc: Sn2(n3, 5) }), 1) : (c2({ api: t3, paramName: n3, desc: _n3() }), 1)));
      } }, keywordListMatchType: { type: "String", required: false, validator: function(e3, t3, n3) {
        return !e3 || "or" === e3 || "and" === e3 || c2({ api: t3, paramName: n3, desc: "".concat(e3, " is invalid match type") });
      } }, senderUserIDList: { type: "Array", required: false, validator: function(e3, t3, n3) {
        return !(e3 && (O2(e3) ? (0 === e3.length && c2({ api: t3, paramName: n3, desc: hn2() }), 5 < e3.length && (c2({ api: t3, paramName: n3, desc: Sn2(n3, 5) }), 1)) : (c2({ api: t3, paramName: n3, desc: _n3() }), 1)));
      } }, messageTypeList: { type: "Array", required: false, validator: function(e3, t3, n3) {
        if (!e3)
          return true;
        if (!O2(e3))
          return c2({ api: t3, paramName: n3, desc: _n3() }), false;
        0 === e3.length && c2({ api: t3, paramName: n3, desc: hn2() });
        var o3 = [A2.MSG_TEXT, A2.MSG_IMAGE, A2.MSG_AUDIO, A2.MSG_FILE, A2.MSG_VIDEO, A2.MSG_LOCATION, A2.MSG_CUSTOM, A2.MSG_MERGER];
        return !(0 < e3.filter(function(e4) {
          return -1 === o3.indexOf(e4);
        }).length && (c2({ api: t3, paramName: n3, desc: l2("ContainsUnsupportedMessageTypeLog", n3) }), 1));
      } }, conversationID: { type: "String", required: false, validator: function(e3) {
        return !e3 || sn2(e3);
      } }, timePosition: { type: "number", required: false, validator: function(e3, t3, n3) {
        return !(e3 && e3 < 0 && (c2({ api: t3, paramName: n3, desc: vn2(n3, 0) }), 1));
      } }, timePeriod: { type: "number", required: false, validator: function(e3, t3, n3) {
        return !(e3 && e3 < 0 && (c2({ api: t3, paramName: n3, desc: vn2(n3, 0) }), 1));
      } }, cursor: { type: "String", required: false } }, getUserProfile: { userIDList: { type: "Array", validator: function(e3, t3, n3) {
        return O2(e3) ? (0 === e3.length && c2({ api: t3, paramName: n3, desc: hn2() }), true) : (c2({ api: t3, paramName: n3, desc: _n3() }), false);
      } } }, updateMyProfile: { profileCustomField: { type: "Array", validator: function(e3, t3, n3) {
        return !!N2(e3) || !!O2(e3) || (c2({ api: t3, paramName: n3, desc: _n3() }), false);
      } } }, setSelfStatus: { customStatus: { type: "String", validator: function(e3, t3, n3) {
        return !!m2(e3) || (c2({ api: t3, paramName: n3, desc: rn2() }), false);
      } } }, getUserStatus: { userIDList: { type: "Array", validator: function(e3, t3, n3) {
        return O2(e3) ? 0 !== e3.length || (c2({ api: t3, paramName: n3, desc: hn2() }), false) : (c2({ api: t3, paramName: n3, desc: _n3() }), false);
      } } }, subscribeUserStatus: { userIDList: { type: "Array", validator: function(e3, t3, n3) {
        return O2(e3) ? 0 !== e3.length || (c2({ api: t3, paramName: n3, desc: hn2() }), false) : (c2({ api: t3, paramName: n3, desc: _n3() }), false);
      } } }, unsubscribeUserStatus: { userIDList: { type: "Array", validator: function(e3, t3, n3) {
        return !e3 || !!O2(e3) || (c2({ api: t3, paramName: n3, desc: _n3() }), false);
      } } }, addFriend: { to: o2, source: { type: "String", required: true, validator: function(e3, t3, n3) {
        return !(!e3 || (e3.startsWith("AddSource_Type_") ? 8 < e3.replace("AddSource_Type_", "").length && (c2({ api: t3, paramName: n3, desc: mn2("keyword", 8) }), 1) : (c2({ api: t3, paramName: n3, desc: l2("SourcePrefixLog") }), 1)));
      } }, remark: { type: "String", required: false, validator: function(e3, t3, n3) {
        return !(m2(e3) && 96 < e3.length && (c2({ api: t3, paramName: n3, desc: mn2(n3, 96) }), 1));
      } } }, deleteFriend: { userIDList: r2 }, checkFriend: { userIDList: r2 }, getFriendProfile: { userIDList: r2 }, updateFriend: { userID: o2, remark: { type: "String", required: false, validator: function(e3, t3, n3) {
        return !(m2(e3) && 96 < e3.length && (c2({ api: t3, paramName: n3, desc: mn2(n3, 96) }), 1));
      } }, friendCustomField: { type: "Array", required: false, validator: function(e3, t3, n3) {
        var o3;
        return !e3 || (O2(e3) ? (o3 = true, e3.forEach(function(e4) {
          return m2(e4.key) && -1 !== e4.key.indexOf("Tag_SNS_Custom") ? m2(e4.value) ? 8 < e4.key.replace("Tag_SNS_Custom_", "").length ? (c2({ api: t3, paramName: n3, desc: mn2("keyword", 8) }), o3 = false) : void 0 : (c2({ api: t3, paramName: n3, desc: In2("value") }), o3 = false) : (c2({ api: t3, paramName: n3, desc: l2("FriendCustomFieldPrefixLog") }), o3 = false);
        }), o3) : (c2({ api: t3, paramName: n3, desc: _n3() }), false));
      } } }, acceptFriendApplication: { userID: o2 }, refuseFriendApplication: { userID: o2 }, deleteFriendApplication: { userID: o2 }, createFriendGroup: { name: o2 }, deleteFriendGroup: { name: o2 }, addToFriendGroup: { name: o2, userIDList: r2 }, removeFromFriendGroup: { name: o2, userIDList: r2 }, renameFriendGroup: { oldName: o2, newName: o2 }, sendMessageReadReceipt: [{ name: "messageList", type: "Array", validator: function(e3, t3, n3) {
        return O2(e3) ? 0 !== e3.length || (c2({ api: t3, paramName: n3, desc: hn2() }), false) : (c2({ api: t3, paramName: n3, desc: _n3() }), false);
      } }], getMessageReadReceiptList: [{ name: "messageList", type: "Array", validator: function(e3, t3, n3) {
        return O2(e3) ? 0 !== e3.length || (c2({ api: t3, paramName: n3, desc: hn2() }), false) : (c2({ api: t3, paramName: n3, desc: _n3() }), false);
      } }], createTopicInCommunity: { groupID: o2, topicName: o2 }, deleteTopicFromCommunity: { groupID: o2, topicIDList: { type: "Array", validator: function(e3, t3, n3) {
        return !e3 || !!O2(e3) || (c2({ api: t3, paramName: n3, desc: _n3() }), false);
      } } }, updateTopicProfile: { groupID: o2, topicID: o2 }, getTopicList: { groupID: o2, topicIDList: { type: "Array", validator: function(e3, t3, n3) {
        return !e3 || !!O2(e3) || (c2({ api: t3, paramName: n3, desc: _n3() }), false);
      } } }, followUser: [y2({ name: "userIDList" }, r2)], unfollowUser: [y2({ name: "userIDList" }, r2)], getMyFollowingList: [y2(y2({ name: "startIndex" }, o2), {}, { required: false })], getMyFollowersList: [y2(y2({ name: "startIndex" }, o2), {}, { required: false })], getMutualFollowersList: [y2(y2({ name: "startIndex" }, o2), {}, { required: false })], getUserFollowInfo: [y2(y2({ name: "userIDList" }, r2), {}, { required: false })], checkFollowType: [y2({ name: "userIDList" }, r2)], addSignalingListener: [{ name: "eventName", type: "String", validator: function(e3, t3, n3) {
        return "string" == typeof e3 && 0 !== e3.length || (c2({ api: t3, paramName: n3, desc: cn2(n3) }), false);
      } }, { name: "handler", type: "Function", validator: function(e3, t3, n3) {
        return "function" != typeof e3 ? (c2({ api: t3, paramName: n3, desc: pn2() }), false) : ("" === e3.name && c2({ api: t3, paramName: n3, desc: Dn2() }), true);
      } }], removeSignalingListener: [{ name: "eventName", type: "String", validator: function(e3, t3, n3) {
        return "string" == typeof e3 && 0 !== e3.length || (c2({ api: t3, paramName: n3, desc: cn2(n3) }), false);
      } }, { name: "handler", type: "Function", validator: function(e3, t3, n3) {
        return "function" != typeof e3 ? (c2({ api: t3, paramName: n3, desc: pn2() }), false) : ("" === e3.name && c2({ api: t3, paramName: n3, desc: Dn2() }), true);
      } }], invite: { userID: o2 }, inviteSync: [y2(y2({}, s2), {}, { validator: function(e3, t3, n3) {
        return f2(e3) ? !!m2(e3.userID) || (c2({ api: t3, paramName: "options.userID", desc: rn2() }), false) : (c2({ api: t3, paramName: "options", desc: Mn2() }), false);
      } }), { name: "successCb", type: "Function", required: false, validator: function(e3, t3, n3) {
        return N2(e3) && c2({ api: t3, paramName: n3, desc: pn2() }), true;
      } }, { name: "errorCb", type: "Function", required: false, validator: function(e3, t3, n3) {
        return N2(e3) && c2({ api: t3, paramName: n3, desc: pn2() }), true;
      } }], inviteInGroup: { groupID: o2, inviteeList: r2 }, inviteInGroupSync: [y2(y2({}, s2), {}, { validator: function(e3, t3, n3) {
        return f2(e3) ? m2(e3.groupID) ? !!O2(e3.inviteeList) || (c2({ api: t3, paramName: "options.inviteeList", desc: _n3() }), false) : (c2({ api: t3, paramName: "options.groupID", desc: rn2() }), false) : (c2({ api: t3, paramName: "options", desc: Mn2() }), false);
      } }), { name: "successCb", type: "Function", required: false, validator: function(e3, t3, n3) {
        return N2(e3) && c2({ api: t3, paramName: n3, desc: pn2() }), true;
      } }, { name: "errorCb", type: "Function", required: false, validator: function(e3, t3, n3) {
        return N2(e3) && c2({ api: t3, paramName: n3, desc: pn2() }), true;
      } }], accept: { inviteID: o2 }, reject: { inviteID: o2 }, getSignalingInfo: [y2(y2({ name: "message" }, s2), {}, { validator: function(e3, t3, n3) {
        return !S2(e3) || (c2({ api: t3, paramName: n3, desc: Tn2() }), false);
      } })], modifyInvitation: { inviteID: o2, data: o2 } }, Fn2 = { login: 1, logout: 1, getLoginUser: 1, getServerTime: 1, on: 1, once: 1, off: 1, setLogLevel: 1, registerPlugin: 1, destroy: 1, isReady: 1, createTextMessage: 1, createTextAtMessage: 1, createImageMessage: 1, createAudioMessage: 1, createVideoMessage: 1, createCustomMessage: 1, createFaceMessage: 1, createFileMessage: 1, createLocationMessage: 1, createMergerMessage: 1, downloadMergerMessage: 1, createForwardMessage: 1, sendMessage: 1, resendMessage: 1, revokeMessage: 1, deleteMessage: 1, translateText: 1, convertVoiceToText: 1, modifyMessage: 1, searchCloudMessages: 1, sendMessageReadReceipt: 1, getGroupMessageReadMemberList: 1, getMessageReadReceiptList: 1, setMessageExtensions: 1, getMessageExtensions: 1, deleteMessageExtensions: 1, addMessageReaction: 1, removeMessageReaction: 1, getMessageReactions: 1, getAllUserListOfMessageReaction: 1, getMessageList: 1, findMessage: 1, getMessageListHopping: 1, setMessageRead: 1, setAllMessageRead: 1, getConversationList: 1, getConversationProfile: 1, deleteConversation: 1, setConversationDraft: 1, pinConversation: 1, getTotalUnreadMessageCount: 1, setConversationCustomData: 1, markConversation: 1, createConversationGroup: 1, getConversationGroupList: 1, deleteConversationGroup: 1, renameConversationGroup: 1, addConversationsToGroup: 1, deleteConversationsFromGroup: 1, clearHistoryMessage: 1, setMessageRemindType: 1, setAllReceiveMessageOpt: 1, getAllReceiveMessageOpt: 1, getGroupList: 1, getGroupProfile: 1, createGroup: 1, joinGroup: 1, updateGroupProfile: 1, quitGroup: 1, dismissGroup: 1, changeGroupOwner: 1, searchGroupByID: 1, getGroupApplicationList: 1, handleGroupApplication: 1, initGroupAttributes: 1, setGroupAttributes: 1, deleteGroupAttributes: 1, getGroupAttributes: 1, setGroupCounters: 1, increaseGroupCounter: 1, decreaseGroupCounter: 1, getGroupCounters: 1, getJoinedCommunityList: 1, createTopicInCommunity: 1, deleteTopicFromCommunity: 1, updateTopicProfile: 1, getTopicList: 1, getGroupMemberProfile: 1, getGroupMemberList: 1, addGroupMember: 1, deleteGroupMember: 1, setGroupMemberNameCard: 1, setGroupMemberMuteTime: 1, setGroupMemberRole: 1, setGroupMemberCustomField: 1, getGroupOnlineMemberCount: 1, markGroupMemberList: 1, getMyProfile: 1, getUserProfile: 1, updateMyProfile: 1, setSelfStatus: 1, getUserStatus: 1, subscribeUserStatus: 1, unsubscribeUserStatus: 1, getBlacklist: 1, addToBlacklist: 1, removeFromBlacklist: 1, getFriendList: 1, addFriend: 1, deleteFriend: 1, checkFriend: 1, updateFriend: 1, getFriendProfile: 1, getFriendApplicationList: 1, refuseFriendApplication: 1, deleteFriendApplication: 1, acceptFriendApplication: 1, setFriendApplicationRead: 1, getFriendGroupList: 1, createFriendGroup: 1, renameFriendGroup: 1, deleteFriendGroup: 1, addToFriendGroup: 1, removeFromFriendGroup: 1, followUser: 1, unfollowUser: 1, getMyFollowingList: 1, getMyFollowersList: 1, getMutualFollowersList: 1, getUserFollowInfo: 1, checkFollowType: 1, callExperimentalAPI: 1, addSignalingListener: 1, removeSignalingListener: 1, invite: 1, inviteSync: 1, inviteInGroup: 1, inviteInGroupSync: 1, cancel: 1, accept: 1, reject: 1, getSignalingInfo: 1, modifyInvitation: 1 }, E2 = (t2(io2, B2(Error)), kn2 = n2(io2), e2(io2)), L2 = { NO_SDKAPPID: 2e3, NO_ACCOUNT_TYPE: 2001, NO_IDENTIFIER: 2002, NO_USERSIG: 2003, NO_TINYID: 2022, NO_A2KEY: 2023, USER_NOT_LOGGED_IN: 2024, REPEAT_LOGIN: 2025, COS_UNDETECTED: 2040, COS_GET_SIG_FAIL: 2041, MSG_SEND_FAIL: 2100, MSG_SEND_FAIL_NOT_IN_AV: 2101, MSG_INSTANCE_REQUIRED: 2105, MSG_INVALID_CONV_TYPE: 2106, MSG_F_IS_EMPTY: 2108, MSG_ONPROGRESS_ERR: 2109, MSG_REVOKE_FAIL: 2110, MSG_DELETE_FAIL: 2111, MSG_UNREAD_ALL_FAIL: 2112, READ_RECEIPT_MSG_LIST_EMPTY: 2114, MSG_SEND_GRP_WITH_TOPIC_FAIL: 2115, CANNOT_DELETE_GRP_SYSTEM_NOTICE: 2116, TRANSLATE_TEXT_FAIL: 2117, VOICE_TO_TEXT_FAIL: 2118, UNSUPPORTED_VOICE_FORMAT: 2119, MSG_I_SELECT_F_FIRST: 2251, MSG_I_TYPES_LIMIT: 2252, MSG_I_SIZE_LIMIT: 2253, MSG_A_UPLOAD_FAIL: 2300, MSG_A_SIZE_LIMIT: 2301, MSG_V_UPLOAD_FAIL: 2350, MSG_V_SIZE_LIMIT: 2351, MSG_V_TYPES_LIMIT: 2352, MSG_F_UPLOAD_FAIL: 2400, MSG_F_SELECT_F_FIRST: 2401, MSG_F_SIZE_LIMIT: 2402, MSG_F_URL_IS_EMPTY: 2403, MSG_MERGER_TYPE_INVALID: 2450, MSG_MERGER_KEY_INVALID: 2451, MSG_MERGER_DOWNLOAD_FAIL: 2452, MSG_FORWARD_TYPE_INVALID: 2453, MSG_FORWARD_INVALID_ELEMENTS: 2454, MSG_MODIFY_CONFLICT: 2480, MSG_MODIFY_DISABLED_IN_AV: 2481, CONV_NOT_FOUND: 2500, USER_OR_GRP_NOT_FOUND: 2501, CONV_UN_RECORDED_TYPE: 2502, INVALID_CONV_ID: 2503, ILLEGAL_GRP_TYPE: 2600, ILLEGAL_GRP_ID: 2602, CANNOT_FIND_GRP: 2603, CANNOT_CHANGE_OWNER_IN_AV: 2620, CANNOT_CHANGE_OWNER_TO_SELF: 2621, MEMBER_NOT_IN_GRP: 2623, JOIN_GRP_FAIL: 2660, CANNOT_ADD_MEMBER_IN_AV: 2661, CANNOT_JOIN_NON_AV_WITHOUT_LOGIN: 2662, NOT_OWNER: 2681, INVALID_MEMBER_ROLE: 2683, CANNOT_SET_SELF_MEMBER_ROLE: 2684, CANNOT_MUTE_SELF: 2685, BAN_DURATION_INVALID: 2686, OPERATION_NOT_SUPPORTED_IN_AV: 2687, NOT_MY_FRIEND: 2700, ALREADY_MY_FRIEND: 2701, FRIEND_GRP_EXISTED: 2710, FRIEND_GRP_NOT_EXIST: 2711, FRIEND_APPLICATION_NOT_EXIST: 2716, UPDATE_PROFILE_INVALID_PARAM: 2721, UPDATE_PROFILE_NO_KEY: 2722, CANNOT_ADD_SELF_TO_BLACKLIST: 2742, NETWORK_ERROR: 2800, NETWORK_TIMEOUT: 2801, NO_NETWORK: 2805, UNCAUGHT_ERROR: 2903, INVALID_OPERATION: 2905, INVALID_TRTC_CMD: 2995, OVER_FREQUENCY_LIMIT: 2996, NO_PROTOCOL: 2997, NO_MODULE: 2998, SDK_IS_NOT_READY: 2999, LOGGING_IN: 3e3, LOGIN_FAILED: 3001, KICKED_OUT_MULT_DEVICE: 3002, KICKED_OUT_MULT_ACCOUNT: 3003, KICKED_OUT_USERSIG_EXPIRED: 3004, LOGGED_OUT: 3005, KICKED_OUT_REST_API: 3006, ILLEGAL_TOPIC_ID: 3021, NO_USE: 3122, PROFANITY_FOUND: 3123, OPTIONS_IS_EMPTY: 3153, MSG_A2KEY_EXPIRED: 20002, ACCOUNT_A2KEY_EXPIRED: 70001, HELLO_ANSWER_KICKED_OUT: 1002, OPEN_SERVICE_OVERLOAD_ERROR: 60022, SIGNALING_INVALID_INVITE_ID: 8010, SIGNALING_NO_PERMISSION: 8011, SIGNALING_ALREADY_EXISTS: 8012, INVALID_CANCEL_MESSAGE: 8020, MSG_SEARCH_CURSOR_INVALID: 27002, MSG_SEARCH_CURSOR_EXPIRED: 27003 }, qn2 = null, u2 = (e2(oo2, [{ key: "isLoggedIn", value: function() {
        return this._m.get(12).isLoggedIn();
      } }, { key: "isOversea", value: function() {
        return this._m.get(12).isOversea();
      } }, { key: "isPrivateNetWork", value: function() {
        var e3 = this._m.get(12);
        return e3.isPrivateNetWork() && !e3.getFileDownloadProxy();
      } }, { key: "getFileDownloadProxy", value: function() {
        return this._m.get(12).getFileDownloadProxy();
      } }, { key: "getDowloadFileAuthKey", value: function() {
        return this._m.get(12).getDowloadFileAuthKey();
      } }, { key: "getMyUserID", value: function() {
        return this._m.get(12).getUserID();
      } }, { key: "getMyTinyID", value: function() {
        return this._m.get(12).getTinyID();
      } }, { key: "getSDKAppID", value: function() {
        return this._m.get(12).getSDKAppID();
      } }, { key: "isIntl", value: function() {
        return this._m.get(12).isIntl();
      } }, { key: "isUsingChatCore", value: function() {
        return this._m.get(12).isUsingChatCore();
      } }, { key: "isDevMode", value: function() {
        return this._m.get(12).isDevMode();
      } }, { key: "get", value: function(e3) {
        return this._m.get(e3);
      } }, { key: "getPlatform", value: function() {
        return De2;
      } }, { key: "getCloudConfig", value: function(e3) {
        return this._m.get(23).getCloudConfig(e3);
      } }, { key: "emitOEvt", value: function(e3, t3) {
        this._m.getOEmitInst().emit(e3, t3);
      } }, { key: "emitIEvt", value: function(e3, t3) {
        this._m.getIEmitInst().emit(e3, t3);
      } }, { key: "getIEmitInst", value: function() {
        return this._m.getIEmitInst();
      } }, { key: "req", value: function(e3) {
        return this._m.get(20).req(e3);
      } }, { key: "canIUse", value: function(e3) {
        return this._m.get(27).canIUse(e3);
      } }, { key: "getErrMsg", value: function(e3, t3, n3) {
        return this._m.getErrMsg(e3, t3, n3);
      } }, { key: "warn", value: function(e3, t3, n3) {
        e3 = this.getErrMsg(e3, t3, n3);
        e3 && M2.w(e3);
      } }, { key: "noUse", value: function(e3) {
        var t3 = L2.NO_USE;
        return D2({ code: t3, message: this.getErrMsg(t3, e3) });
      } }]), oo2), k2 = { LOGIN: "wslogin", LOGOUT: "wslogout", HELLO: "wshello", KICK_OTHER: "KickOther", SYNC_UNREAD_MSG: "getmsg", SEND_C2C_MSG: "sendmsg", SEND_GRP_MSG: "send_group_msg", GET_USER_PROFILE: "portrait_get_all", UPDATE_MY_PROFILE: "portrait_set", GET_BL: "black_list_get", ADD_TO_BL: "black_list_add", RM_FROM_BL: "black_list_delete", GET_FD_LIST: "friend_get", GET_FD_PROFILE: "friend_get_specified", CHECK_FD: "friend_check", DEL_FD: "friend_delete", ADD_FD: "friend_add", UPDATE_FD: "friend_update", RESPOND_FD_APPLICATION: "friend_response", GET_FD_APPLICATION_LIST: "pendency_get", DEL_FD_APPLICATION: "pendency_delete", REFUSE_FD_APPLICATION: "pendency_refuse", REPORT_FD_APPLICATION: "pendency_report", GET_FD_GRP_LIST: "group_get", CREATE_FD_GRP: "group_add", DEL_FD_GRP: "group_delete", UPDATE_FD_GRP: "group_update", REVOKE_C2C_MSG: "msgwithdraw", SET_C2C_MSG_READ: "msgreaded", SET_C2C_PEER_MUTE_NOTIFICATIONS: "set_c2c_peer_mute_notifications", GET_C2C_PEER_MUTE_NOTIFICATIONS: "get_c2c_peer_mute_notifications", GET_C2C_ROAMING_MSG: "getroammsg", GET_C2C_PEER_READ_TIME: "get_peer_read_time", DEL_C2C_MSG: "delete_c2c_msg_ramble", MODIFY_C2C_MSG: "modify_c2c_msg", MODIFY_C2C_MSG_EXT: "set_key_values", GET_C2C_MSG_EXT: "get_key_values", ADD_C2C_MSG_REACTION: "reaction_add", RM_C2C_MSG_REACTION: "reaction_del", GET_C2C_MSG_REACTIONS: "reaction_multi_stat", GET_C2C_MSG_REACTION_USER_LIST: "reaction_iterate", PAGING_GET_CONV_LIST: "page_get", DEL_CONV: "batch_delete", CLEAR_HISTORY_MSG: "clear_msg", PIN_CONV: "top", DEL_GROUP_AT_TIPS: "deletemsg", SET_CONV_CUSTOM_DATA: "set_conv_custom_data", MARK_CONV: "mark_contact", CREATE_CONV_GRP: "create_contact_group", DEL_CONV_GRP: "del_contact_group", RENAME_CONV_GRP: "update_contact_group", ADD_CONV_TO_GRP: "add_conv_to_group", DEL_CONV_FROM_GRP: "del_conv_from_group", GET_CONV_GRP_LIST: "get_contact_group", SEARCH_CONV_GRP_MARK: "search_contact_group", GET_GRP_LIST: "get_joined_group_list", GET_GRP_PROFILE: "get_group_self_member_info", CREATE_GRP: "create_group", DISMISS_GRP: "destroy_group", UPDATE_GRP_PROFILE: "modify_group_base_info", APPLY_JOIN_GRP: "apply_join_group", APPLY_JOIN_GRP_NOAUTH: "apply_join_group_noauth", QUIT_GRP: "quit_group", SEARCH_GRP: "get_group_public_info", CHANGE_GRP_OWNER: "change_group_owner", HANDLE_GRP_APPLICATION: "handle_apply_join_group", HANDLE_INVITE_JOIN_GRP: "handle_invite_join_permission_group", HANDLE_GRP_INVITATION: "handle_invite_join_group", REVOKE_GRP_MSG: "group_msg_recall", SET_GRP_MSG_READ: "msg_read_report", SET_ALL_MSG_READ: "read_all_unread_msg", GET_GRP_ROAMING_MSG: "group_msg_get", GET_READ_RECEIPT: "get_group_msg_receipt", SEND_READ_RECEIPT: "group_msg_receipt", SEND_C2C_READ_RECEIPT: "c2c_msg_read_receipt", GET_READ_RECEIPT_DETAIL: "get_group_msg_receipt_detail", GET_GRP_PENDENCY: "get_pendency", DEL_GRP_SYSTEM_NOTICE: "deletemsg", AV_POLLING: "get_msg", AV_NOAUTH_POLLING: "get_msg_noauth", GET_ONLINE_MBR_NUM: "get_online_member_num", DEL_GRP_MSG: "delete_group_ramble_msg_by_seq", MODIFY_GRP_MSG: "modify_group_msg", SET_GRP_ATTR: "set_group_attr", MODIFY_GRP_ATTR: "modify_group_attr", DEL_GRP_ATTR: "delete_group_attr", CLEAR_GRP_ATTR: "clear_group_attr", GET_GRP_ATTR: "get_group_attr", MODIFY_GRP_MSG_EXT: "group_set_key_values", GET_GRP_MSG_EXT: "group_get_key_values", GET_GRP_NOTIFY: "batch_get_group_notify", UPDATE_GRP_COUNTER: "update_group_counter", GET_GRP_COUNTER: "get_group_counter", ADD_GRP_MSG_REACTION: "group_reaction_add", RM_GRP_MSG_REACTION: "group_reaction_del", GET_GRP_MSG_REACTIONS: "group_reaction_multi_stat", GET_GRP_MSG_REACTION_USER_LIST: "group_reaction_iterate", GET_GRP_MBR_LIST: "get_group_member_info", GET_AV_MBR_LIST: "get_members", GET_GRP_MBR_PROFILE: "get_specified_group_member_info", ADD_GRP_MBR: "add_group_member", DEL_GRP_MBR: "delete_group_member", BAN_AV_MBR: "ban_group_member", MODIFY_GRP_MBR_INFO: "modify_group_member_info", MARK_AV_MBR_INFO: "modify_user_info", COS_SIGN: "cos", COS_PRE_SIG: "pre_sig", SIMPLE_COS_PRE_SIG: "simple_sig", GET_IMAGE_INFO: "get_imageinfo", GET_IP: "get_final_ip", VIDEO_COVER: "video_cover", SSO_STAT: "tim_web_report_v2", PING: "alive", MSG_PUSH: "msg_push", MSG_CLOUD_SEARCH: "query", MULTI_MSG_PUSH: "multi_msg_push_ws", MSG_PUSH_ACK: "ws_msg_push_ack", STATUS_FORCE_OFFLINE: "stat_forceoffline", UPLOAD_MERGER_MSG: "save_relay_json_msg", DOWNLOAD_MERGER_MSG: "get_relay_json_msg", FETCH_CLOUD_CTRL_CONFIG: "fetch_config", PUSHED_CLOUD_CTRL_CONFIG: "push_configv2", FETCH_COMMERCIAL_CONFIG: "fetch_imsdk_purchase_bitsv2", PUSHED_COMMERCIAL_CONFIG: "push_imsdk_purchase_bitsv2", OVERLOAD_NOTIFY: "notify2", CREATE_TOPIC: "create_topic", DEL_TOPIC: "destroy_topic", UPDATE_TOPIC_PROFILE: "modify_topic", GET_TOPIC_LIST: "get_topic", SET_SELF_STATUS: "ws_set_custom_status", GET_USER_STATUS: "ws_get_user_status", SUB_USER_STATUS: "ws_status_subscribe", UNSUB_USER_STATUS: "ws_status_unsubscribe", STAT_BACKGROUND: "ws_stat_background", STAT_FOREGROUND: "ws_stat_foreground", SET_TOKEN: "ws_stat_settoken", PUSH_REPORT: "uniapp_sdk_report", GET_PROFANITY_LIST: "get_local_words", TRANSLATE_TEXT: "ws_batch_trans_text", VOICE_TO_TEXT: "ws_sentence_recognition", FOLLOW: "follow_add", UNFOLLOW: "follow_delete", GET_FOLLOW: "follow_get", GET_FOLLOW_INFO: "follow_get_info", CHECK_FOLLOW_TYPE: "follow_check", SET_ALL_RECEIVE_MSG_OPT: "ws_set_do_not_disturb", GET_ALL_RECEIVE_MSG_OPT: "ws_get_do_not_disturb" }, xn2 = "networkRTT", Vn2 = "messageE2EDelay", Hn2 = "sendMessageC2C", Bn2 = "sendMessageGroup", Kn2 = "sendMessageGroupAV", Yn2 = "sendMessageRichMedia", Wn2 = "cosUpload", jn2 = "messageReceivedGroup", Jn2 = "messageReceivedGroupAVPush", zn2 = "messageReceivedGroupAVPull", Xn2 = (F2(bn2 = {}, xn2, 2), F2(bn2, Vn2, 3), F2(bn2, Hn2, 4), F2(bn2, Bn2, 5), F2(bn2, Kn2, 6), F2(bn2, Yn2, 7), F2(bn2, jn2, 8), F2(bn2, Jn2, 9), F2(bn2, zn2, 10), F2(bn2, Wn2, 11), bn2), Zn2 = { info: 4, warning: 5, error: 6 }, Qn2 = { wifi: 1, "2g": 2, "3g": 3, "4g": 4, "5g": 5, unknown: 6, none: 7, online: 8 }, $n2 = { login: 4, plugin_search: 16, plugin_translate: 16, plugin_voice_to_text: 16, plugin_cs: 16, plugin_push: 16, plugin_bot: 16, plugin_emoji_reaction: 16 }, G2 = (e2(no2, [{ key: "updateTimeStamp", value: function() {
        this.timestamp = We2();
      } }, { key: "start", value: function(e3) {
        return this._startts = e3, this;
      } }, { key: "end", value: function() {
        var e3, t3 = this, n3 = 0 < arguments.length && void 0 !== arguments[0] && arguments[0];
        this._sentFlag || (this._netMonitorModule && (e3 = this._netMonitorModule.getNetworkType(), this.setNetworkType(e3)), e3 = We2(), 0 === this.costTime && (this.costTime = e3 - this._startts), this.setMoreMessage("startts:".concat(this._startts, " endts:").concat(e3)), n3 ? (this._sentFlag = true, this._eventStatModule && this._eventStatModule.pushIn(this)) : setTimeout(function() {
          t3._sentFlag = true, t3._eventStatModule && t3._eventStatModule.pushIn(t3);
        }, 0));
      } }, { key: "setError", value: function(e3) {
        var t3;
        return e3 instanceof Error ? this._sentFlag || (t3 = true, (t3 = this._netMonitorModule ? this._netMonitorModule.isOnline() : t3) ? (e3.code && this.setCode(e3.code), e3.message && this.setMoreMessage(e3.message)) : this.setCode(L2.NO_NETWORK), this.setLevel("error")) : M2.w("".concat(this._n, ".setError value not instanceof Error, please check!")), this;
      } }, { key: "setCode", value: function(e3) {
        return N2(e3) || this._sentFlag || ("ECONNABORTED" === e3 && (this.code = 103), R2(e3) ? this.code = e3 : M2.w("".concat(this._n, ".setCode value not a number, please check!"), e3, b2(e3))), this;
      } }, { key: "setMessage", value: function(e3) {
        return N2(e3) || this._sentFlag || (R2(e3) && (this.message = e3.toString()), m2(e3) && (this.message = e3)), this;
      } }, { key: "setCostTime", value: function(e3) {
        return this.costTime = e3, this;
      } }, { key: "setLevel", value: function(e3) {
        return N2(e3) || this._sentFlag || (this.level = Zn2[e3]), this;
      } }, { key: "setMoreMessage", value: function(e3) {
        return S2(this.moreMessage) ? this.moreMessage = "".concat(e3) : this.moreMessage += " ".concat(e3), this;
      } }, { key: "setNetworkType", value: function(e3) {
        return N2(e3) ? M2.w("".concat(this._n, ".setNetworkType value is undefined, please check!")) : (e3 = Qn2[e3.toLowerCase()], N2(e3) || (this.networkType = e3)), this;
      } }, { key: "getStartTs", value: function() {
        return this._startts;
      } }, { key: "setUIPlatform", value: function(e3) {
        return this.uiPlatform = e3, this;
      } }, { key: "setExtension", value: function(e3) {
        return this.extension = e3, this;
      } }, { key: "setEventType", value: function(e3) {
        return this.eventType = e3, this;
      } }], [{ key: "bindEventStatModule", value: function(e3) {
        no2.prototype._eventStatModule = e3;
      } }, { key: "bindNetMonitorModule", value: function(e3) {
        no2.prototype._netMonitorModule = e3;
      } }]), no2), eo2 = (e2(to2, [{ key: "setText", value: function(e3) {
        this.content.text = e3;
      } }, { key: "sendable", value: function() {
        return 0 !== this.content.text.length;
      } }]), to2);
      function to2(e3) {
        d2(this, to2), this.type = A2.MSG_TEXT, this.content = { text: e3.text || "" };
      }
      function no2(e3) {
        d2(this, no2), this._n = "SSOLogData", this.eventType = $n2[e3] || 0, this.timestamp = 0, this.networkType = 8, this.code = 0, this.message = "", this.moreMessage = "", this.extension = e3, this.costTime = 0, this.duplicate = false, this.level = 4, this.uiPlatform = void 0, this._sentFlag = false, this._startts = We2();
      }
      function oo2(e3) {
        d2(this, oo2), this._m = e3, this._n = "";
      }
      function io2(e3) {
        d2(this, io2), t3 = kn2.call(this);
        var t3, n3 = e3.code, o3 = e3.message, e3 = e3.data;
        return t3.code = n3, o3 ? t3.message = o3 : t3._getErrMsg && (t3.message = t3._getErrMsg(t3.code)), t3.data = e3 || {}, t3;
      }
      function ao2(e3, t3, n3, o3) {
        var i3, o3 = 3 < arguments.length && void 0 !== o3 ? o3 : [];
        if (e3)
          return i3 = e3, t3 && (e3.startsWith("http://") ? i3 = e3.replace(/^http:\/\/[^/]+/, t3) : e3.startsWith("https://") && (i3 = e3.replace(/^https:\/\/[^/]+/, t3))), n3 && -1 === i3.indexOf("authKey=") && co2(i3, o3) ? (-1 < i3.indexOf("?") ? "".concat(i3, "&authKey=") : "".concat(i3, "?authKey=")).concat(n3) : i3;
      }
      function so2(e3, t3, n3) {
        var n3 = 2 < arguments.length && void 0 !== n3 ? n3 : [];
        return e3 === A2.MSG_VIDEO ? co2((t3[0].content || t3[0].payload).snapshotUrl, n3) && (t3[0].content ? (t3[0].content.snapshotUrl = ro2(t3[0].content.snapshotUrl), t3[0].content.thumbUrl = ro2(t3[0].content.thumbUrl)) : (t3[0].payload.snapshotUrl = ro2(t3[0].payload.snapshotUrl), t3[0].payload.thumbUrl = ro2(t3[0].payload.thumbUrl))) : e3 === A2.MSG_FILE ? co2((t3[0].content || t3[0].payload).fileUrl, n3) && (t3[0].content ? t3[0].content.fileUrl = ro2(t3[0].content.fileUrl) : t3[0].payload.fileUrl = ro2(t3[0].payload.fileUrl)) : e3 === A2.MSG_MERGER && (e3 = (n3 = t3[0].content || t3[0].payload).downloadKey, n3 = void 0 === (n3 = n3.messageList) ? [] : n3, S2(void 0 === e3 ? "" : e3)) && n3.forEach(function(e4) {
          so2(e4.messageBody[0].type, e4.messageBody);
        }), t3;
      }
      function ro2(e3) {
        if (!e3)
          return e3;
        if (-1 === e3.indexOf("authKey="))
          return e3;
        for (var e3 = e3.split("?"), t3 = e3[1].split("&"), n3 = 0, o3 = 0; o3 < t3.length; o3++)
          if (-1 < t3[o3].indexOf("authKey=")) {
            n3 = o3;
            break;
          }
        return t3.splice(n3, 1), 0 < t3.length ? "".concat(e3[0], "?").concat(t3.join("&")) : e3[0];
      }
      function co2(e3, t3) {
        var n3 = false;
        if (e3) {
          var e3 = e3.match(/:\/\/([0-9]?\.)?(.[^/:]+)/), o3 = e3 && e3[2] || "";
          if (o3.includes("rich-dev"))
            return 1;
          for (var i3 = 0; i3 < t3.length; i3++)
            if (o3.endsWith(t3[i3])) {
              n3 = true;
              break;
            }
        }
        return n3;
      }
      e2(bo2, [{ key: "_initImageInfoModel", value: function() {
        var t3 = this;
        this._ImageInfoModel = function(e3) {
          this.instanceID = ft2(9999999), this.sizeType = e3.type || 0, this.type = 0, this.size = e3.size || 0, this.width = e3.width || 0, this.height = e3.height || 0, this.imageUrl = e3.imageUrl || e3.url || "", this.url = ao2(e3.url || t3._imageMemoryURL, t3._fileDownloadProxy, t3._authKey, t3._fileDNList);
        }, this._ImageInfoModel.prototype = { setSizeType: function(e3) {
          this.sizeType = e3;
        }, setType: function(e3) {
          this.type = e3;
        }, setImageUrl: function(e3) {
          e3 && (this.imageUrl = e3);
        }, getImageUrl: function() {
          return this.imageUrl;
        } };
      } }, { key: "initImageInfoArray", value: function(e3) {
        for (var t3, n3 = 0, o3 = null; n3 <= 2; )
          t3 = N2(e3) || N2(e3[n3]) ? { type: 0, size: 0, width: 0, height: 0, url: "" } : e3[n3], (o3 = new this._ImageInfoModel(t3)).setSizeType(n3 + 1), o3.setType(n3), this.addImageInfo(o3), n3++;
        this.updateAccessSideImageInfoArray();
      } }, { key: "updateImageInfoArray", value: function(e3) {
        for (var t3, n3 = this.content.imageInfoArray.length, o3 = 0; o3 < n3; o3++)
          t3 = this.content.imageInfoArray[o3], e3[o3].size && (t3.size = e3[o3].size), e3[o3].url && t3.setImageUrl(e3[o3].url), e3[o3].width && (t3.width = e3[o3].width), e3[o3].height && (t3.height = e3[o3].height);
      } }, { key: "_autoFixUrl", value: function() {
        for (var e3 = this.content.imageInfoArray.length, t3 = "", n3 = "", o3 = ["http", "https"], i3 = null, a3 = 0; a3 < e3; a3++)
          this.content.imageInfoArray[a3].url && "" !== (i3 = this.content.imageInfoArray[a3]).imageUrl && (n3 = i3.imageUrl.slice(0, i3.imageUrl.indexOf("://") + 1), t3 = i3.imageUrl.slice(i3.imageUrl.indexOf("://") + 1), o3.indexOf(n3) < 0 && (n3 = "https:"), this.content.imageInfoArray[a3].setImageUrl([n3, t3].join("")));
      } }, { key: "updatePercent", value: function(e3) {
        this._percent = e3, 1 < this._percent && (this._percent = 1);
      } }, { key: "updateImageFormat", value: function(e3) {
        this.content.imageFormat = Xe2[e3.toUpperCase()] || Xe2.UNKNOWN;
      } }, { key: "createImageDataASURLInWeb", value: function(e3) {
        void 0 !== e3 && 0 < e3.files.length && (this._imageMemoryURL = window.URL.createObjectURL(e3.files[0]));
      } }, { key: "createImageDataASURL", value: function(e3) {
        e3 && e3.url && (this._imageMemoryURL = e3.url);
      } }, { key: "replaceImageInfo", value: function(e3, t3) {
        this.content.imageInfoArray[t3] instanceof this._ImageInfoModel || (this.content.imageInfoArray[t3] = e3);
      } }, { key: "addImageInfo", value: function(e3) {
        3 <= this.content.imageInfoArray.length || this.content.imageInfoArray.push(e3);
      } }, { key: "updateAccessSideImageInfoArray", value: function() {
        var e3 = this.content.imageInfoArray, t3 = e3[0], n3 = t3.width, n3 = void 0 === n3 ? 0 : n3, t3 = t3.height, t3 = void 0 === t3 ? 0 : t3;
        0 !== n3 && 0 !== t3 && (Bt2(e3), Object.assign(e3[2], Ht2({ originWidth: n3, originHeight: t3, min: 720 })));
      } }, { key: "sendable", value: function() {
        return 0 !== this.content.imageInfoArray.length && "" !== this.content.imageInfoArray[0].imageUrl && 0 !== this.content.imageInfoArray[0].size;
      } }]);
      var uo2 = bo2, lo2 = (e2(Uo, [{ key: "sendable", value: function() {
        return null !== this.content;
      } }]), Uo), po2 = (e2(Po2, [{ key: "updatePercent", value: function(e3) {
        this._percent = e3, 1 < this._percent && (this._percent = 1);
      } }, { key: "updateAudioUrl", value: function(e3) {
        this.content.remoteAudioUrl = e3;
      } }, { key: "sendable", value: function() {
        return "" !== this.content.remoteAudioUrl;
      } }]), Po2), _o3 = { from: true, groupID: true, groupName: true, to: true }, ho2 = (e2(Go, [{ key: "_initContent", value: function(t3) {
        var n3 = this;
        Object.keys(t3).forEach(function(e3) {
          switch (e3) {
            case "remarkInfo":
              break;
            case "groupProfile":
              n3.content.groupProfile = {}, n3._initGroupProfile(t3[e3]);
              break;
            case "operatorInfo":
              n3.content.operatorInfo = {}, n3._initOperatorInfo(t3[e3]);
              break;
            case "memberInfoList":
            case "msgMemberInfo":
              n3._updateMemberList(t3[e3]);
              break;
            case "memberExtraInfo":
            case "onlineMemberInfo":
              break;
            case "memberNum":
              n3.content[e3] = t3[e3], n3.content.memberCount = t3[e3];
              break;
            case "newGroupProfile":
              n3.content.newGroupProfile = {}, n3._initNewGroupProfile(t3[e3]);
              break;
            default:
              n3.content[e3] = t3[e3];
          }
        }), this.content.userIDList || (this.content.userIDList = [this.content.operatorID]);
      } }, { key: "_initGroupProfile", value: function(e3) {
        for (var t3 = Object.keys(e3), n3 = 0; n3 < t3.length; n3++) {
          var o3 = t3[n3];
          _o3[o3] && (this.content.groupProfile[o3] = e3[o3]);
        }
      } }, { key: "_initOperatorInfo", value: function(e3) {
        for (var t3 = Object.keys(e3), n3 = 0; n3 < t3.length; n3++) {
          var o3 = t3[n3];
          this.content.operatorInfo[o3] = e3[o3];
        }
      } }, { key: "_updateMemberList", value: function(e3) {
        S2(this.content.memberList) ? this.content.memberList = e3 : this.content.memberList.forEach(function(t3) {
          e3.forEach(function(e4) {
            t3.userID === e4.userID && Object.assign(t3, e4);
          });
        });
      } }, { key: "_initNewGroupProfile", value: function(e3) {
        for (var t3 = Object.keys(e3), n3 = 0; n3 < t3.length; n3++) {
          var o3 = t3[n3];
          this.content.newGroupProfile[o3] = "muteAllMembers" !== o3 ? e3[o3] : 1 === e3[o3];
        }
      } }]), Go), go2 = { from: true, groupID: true, groupName: true, to: true, groupType: true }, fo2 = (e2(No, [{ key: "_initContent", value: function(t3) {
        var n3 = this;
        Object.keys(t3).forEach(function(e3) {
          switch (e3) {
            case "memberInfoList":
              break;
            case "remarkInfo":
              n3.content.handleMessage = t3[e3];
              break;
            case "groupProfile":
              n3.content.groupProfile = {}, n3._initGroupProfile(t3[e3]);
              break;
            default:
              n3.content[e3] = t3[e3];
          }
        });
      } }, { key: "_initGroupProfile", value: function(e3) {
        for (var t3 = Object.keys(e3), n3 = 0; n3 < t3.length; n3++) {
          var o3 = t3[n3];
          go2[o3] && ("groupName" === o3 ? this.content.groupProfile.name = e3[o3] : this.content.groupProfile[o3] = e3[o3]);
        }
      } }]), No), mo2 = (e2(Oo, [{ key: "_getFileInfo", value: function(e3) {
        var t3, n3;
        return N2(e3.fileName) || N2(e3.fileSize) ? (t3 = e3.file.files[0], Ie2 && (t3.path && -1 !== t3.path.indexOf(".") && (n3 = t3.path.slice(t3.path.lastIndexOf(".") + 1).toLowerCase(), t3.type = n3, t3.name || (t3.name = "".concat(ft2(999999), ".").concat(n3))), t3.name || (t3.type = "", t3.name = t3.path.slice(t3.path.lastIndexOf("/") + 1).toLowerCase()), t3.suffix && (t3.type = t3.suffix), t3.url || (t3.url = t3.path)), { size: t3.size, name: t3.name }) : { size: e3.fileSize, name: e3.fileName };
      } }, { key: "updatePercent", value: function(e3) {
        this._percent = e3, 1 < this._percent && (this._percent = 1);
      } }, { key: "updateFileUrl", value: function(e3) {
        this.content.fileUrl = e3;
      } }, { key: "sendable", value: function() {
        return "" !== this.content.fileUrl && "" !== this.content.fileName && 0 !== this.content.fileSize;
      } }]), Oo), vo2 = (e2(Ro2, [{ key: "setData", value: function(e3) {
        return this.content.data = e3, this;
      } }, { key: "setDescription", value: function(e3) {
        return this.content.description = e3, this;
      } }, { key: "setExtension", value: function(e3) {
        return this.content.extension = e3, this;
      } }, { key: "sendable", value: function() {
        return 0 !== this.content.data.length || 0 !== this.content.description.length || 0 !== this.content.extension.length;
      } }]), Ro2), Io2 = (e2(Ao2, [{ key: "updatePercent", value: function(e3) {
        this._percent = e3, 1 < this._percent && (this._percent = 1);
      } }, { key: "updateVideoUrl", value: function(e3) {
        e3 && (this.content.remoteVideoUrl = e3);
      } }, { key: "updateSnapshotInfo", value: function(e3) {
        var t3 = e3.snapshotUrl, n3 = e3.snapshotWidth, e3 = e3.snapshotHeight;
        S2(t3) || (this.content.thumbUrl = this.content.snapshotUrl = t3), S2(n3) || (this.content.thumbWidth = this.content.snapshotWidth = Number(n3)), S2(e3) || (this.content.thumbHeight = this.content.snapshotHeight = Number(e3));
      } }, { key: "sendable", value: function() {
        return "" !== this.content.remoteVideoUrl;
      } }]), Ao2), Mo2 = (e2(ko2, [{ key: "sendable", value: function() {
        return true;
      } }]), ko2), yo2 = (e2(So2, [{ key: "_patchRichMediaPayload", value: function(e3, t3) {
        e3 === A2.MSG_IMAGE ? t3.imageInfoArray.forEach(function(e4) {
          !e4.imageUrl && e4.url && (e4.imageUrl = e4.url, e4.sizeType = e4.type, 1 === e4.type ? e4.type = 0 : 3 === e4.type && (e4.type = 1));
        }) : e3 === A2.MSG_VIDEO ? !t3.remoteVideoUrl && t3.videoUrl && (t3.remoteVideoUrl = t3.videoUrl) : e3 === A2.MSG_AUDIO ? !t3.remoteAudioUrl && t3.url && (t3.remoteAudioUrl = t3.url) : e3 === A2.MSG_FILE && !t3.fileUrl && t3.url && (t3.fileUrl = t3.url, t3.url = void 0);
      } }, { key: "_updateRichMediaDownloadUrl", value: function(e3, t3, n3, o3, i3) {
        (n3 || o3) && (e3 === A2.MSG_IMAGE ? t3.imageInfoArray.forEach(function(e4) {
          e4.url = ao2(e4.url, n3, o3, i3);
        }) : e3 === A2.MSG_VIDEO ? (t3.videoUrl = ao2(t3.videoUrl, n3, o3, i3), t3.snapshotUrl = ao2(t3.thumbUrl, n3, o3, i3), t3.snapshotHeight = t3.thumbHeight, t3.snapshotWidth = t3.thumbWidth) : e3 === A2.MSG_AUDIO ? t3.url = ao2(t3.url, n3, o3, i3) : e3 === A2.MSG_FILE && (t3.fileUrl = ao2(t3.fileUrl, n3, o3, i3)));
      } }]), So2), Co2 = (e2(Lo2, [{ key: "sendable", value: function() {
        return !S2(this.content.messageList) || !S2(this.content.downloadKey);
      } }]), Lo2), To2 = { 1: A2.MSG_PRIORITY_HIGH, 2: A2.MSG_PRIORITY_NORMAL, 3: A2.MSG_PRIORITY_LOW, 4: A2.MSG_PRIORITY_LOWEST }, Do2 = (e2(Eo2, [{ key: "elements", get: function() {
        return this._elements;
      } }, { key: "getElements", value: function() {
        return this._elements;
      } }, { key: "extractGroupInfo", value: function(e3) {
        null !== e3 && (m2(e3.nick) && (this.nick = e3.nick), m2(e3.avatar) && (this.avatar = e3.avatar), e3 = e3.messageFromAccountExtraInformation, f2(e3)) && m2(e3.nameCard) && (this.nameCard = e3.nameCard);
      } }, { key: "handleGroupAtInfo", value: function(e3) {
        var t3 = this;
        e3.payload && e3.payload.atUserList && e3.payload.atUserList.forEach(function(e4) {
          e4 !== A2.MSG_AT_ALL ? (t3._groupAtInfoList.push({ groupAtAllFlag: 0, groupAtUserID: e4 }), t3.atUserList.push(e4)) : (t3._groupAtInfoList.push({ groupAtAllFlag: 1 }), t3.atUserList.push(A2.MSG_AT_ALL));
        }), O2(e3.groupAtInfo) && e3.groupAtInfo.forEach(function(e4) {
          0 === e4.groupAtAllFlag ? t3.atUserList.push(e4.groupAtUserID) : 1 === e4.groupAtAllFlag && t3.atUserList.push(A2.MSG_AT_ALL);
        });
      } }, { key: "getGroupAtInfoList", value: function() {
        return this._groupAtInfoList;
      } }, { key: "_initProxy", value: function() {
        this._elements[0] && (this.payload = this._elements[0].content, this.type = this._elements[0].type);
      } }, { key: "reInitialize", value: function(e3) {
        e3 && (this.status = this.from ? Rn2 : An2, !this.from) && (this.from = e3), this._initFlow(e3), this._initSequence(e3), this._concatConversationID(e3), this.generateMessageID();
      } }, { key: "isSendable", value: function() {
        return 0 !== this._elements.length && (true === this._relayFlag || "function" == typeof this._elements[0].sendable && this._elements[0].sendable());
      } }, { key: "_initTo", value: function(e3) {
        this.conversationType === A2.CONV_GROUP && (this.to = e3.groupID);
      } }, { key: "_initSequence", value: function(e3) {
        var t3, n3, o3;
        0 === this.clientSequence && e3 && (this.clientSequence = !!(e3 = e3) && (void 0 === St2[e3] && (o3 = /* @__PURE__ */ new Date(), t3 = "3".concat(o3.getHours()).slice(-2), n3 = "0".concat(o3.getMinutes()).slice(-2), o3 = "0".concat(o3.getSeconds()).slice(-2), St2[e3] = parseInt([t3, n3, o3, "0001"].join("")), o3 = n3 = t3 = null, M2.l("autoIncrementIndex start index:".concat(St2[e3]))), St2[e3]++)), 0 === this.sequence && this.conversationType === A2.CONV_C2C && (this.sequence = this.clientSequence);
      } }, { key: "generateMessageID", value: function() {
        this.from === A2.CONV_SYSTEM && (this.senderTinyID = "144115198244471703"), this.ID = "".concat(this.senderTinyID, "-").concat(this.clientTime, "-").concat(this.random);
      } }, { key: "_initFlow", value: function(e3) {
        "" !== e3 && (e3 === this.from ? (this.flow = "out", this.isRead = true) : this.flow = "in");
      } }, { key: "_concatConversationID", value: function(e3) {
        var t3 = this.to, n3 = this.conversationType;
        n3 !== A2.CONV_SYSTEM ? (e3 = n3 === A2.CONV_C2C ? e3 === this.from ? t3 : this.from : this.to, this.conversationID = e3 ? "".concat(n3).concat(e3) : null) : this.conversationID = A2.CONV_SYSTEM;
      } }, { key: "isElement", value: function(e3) {
        return e3 instanceof eo2 || e3 instanceof uo2 || e3 instanceof lo2 || e3 instanceof po2 || e3 instanceof mo2 || e3 instanceof Io2 || e3 instanceof ho2 || e3 instanceof fo2 || e3 instanceof vo2 || e3 instanceof Mo2 || e3 instanceof Co2;
      } }, { key: "setElement", value: function(e3, t3, n3, o3) {
        var i3 = this;
        if (this.isElement(e3))
          this._elements = [e3];
        else {
          var a3 = function(e4) {
            if (e4.type && e4.content)
              switch (e4.type) {
                case A2.MSG_TEXT:
                  i3.setTextElement(e4.content);
                  break;
                case A2.MSG_IMAGE:
                  i3.setImageElement(e4.content, t3, n3, o3);
                  break;
                case A2.MSG_AUDIO:
                  i3.setAudioElement(e4.content, t3, n3, o3);
                  break;
                case A2.MSG_FILE:
                  i3.setFileElement(e4.content, t3, n3, o3);
                  break;
                case A2.MSG_VIDEO:
                  i3.setVideoElement(e4.content, t3, n3, o3);
                  break;
                case A2.MSG_CUSTOM:
                  i3.setCustomElement(e4.content);
                  break;
                case A2.MSG_LOCATION:
                  i3.setLocationElement(e4.content);
                  break;
                case A2.MSG_GRP_TIP:
                  i3.setGroupTipElement(e4.content);
                  break;
                case A2.MSG_GRP_SYS_NOTICE:
                  i3.setGroupSystemNoticeElement(e4.content);
                  break;
                case A2.MSG_FACE:
                  i3.setFaceElement(e4.content);
                  break;
                case A2.MSG_MERGER:
                  i3.setMergerElement(e4.content, t3, n3, o3);
              }
          };
          if (O2(e3))
            for (var s3 = 0; s3 < e3.length; s3++)
              a3(e3[s3]);
          else
            a3(e3);
        }
        this._initProxy();
      } }, { key: "clearElement", value: function() {
        this._elements.length = 0;
      } }, { key: "setTextElement", value: function(e3) {
        e3 = "string" == typeof e3 ? e3 : e3.text, e3 = new eo2({ text: e3 });
        this._elements.push(e3);
      } }, { key: "setImageElement", value: function(e3, t3, n3, o3) {
        e3 = new uo2(e3, t3, n3, o3);
        this._elements.push(e3);
      } }, { key: "setAudioElement", value: function(e3, t3, n3, o3) {
        e3 = new po2(e3, t3, n3, o3);
        this._elements.push(e3);
      } }, { key: "setFileElement", value: function(e3, t3, n3, o3) {
        e3 = new mo2(e3, t3, n3, o3);
        this._elements.push(e3);
      } }, { key: "setVideoElement", value: function(e3, t3, n3, o3) {
        e3 = new Io2(e3, t3, n3, o3);
        this._elements.push(e3);
      } }, { key: "setLocationElement", value: function(e3) {
        e3 = new Mo2(e3);
        this._elements.push(e3);
      } }, { key: "setCustomElement", value: function(e3) {
        e3 = new vo2(e3);
        this._elements.push(e3);
      } }, { key: "setGroupTipElement", value: function(e3) {
        var t3, n3 = {}, o3 = e3.operationType;
        S2(e3.memberInfoList) ? e3.operatorInfo && (n3 = e3.operatorInfo) : o3 !== A2.GRP_TIP_MBR_JOIN && o3 !== A2.GRP_TIP_MBR_KICKED_OUT && o3 !== A2.GRP_TIP_MBR_SET_ADMIN && o3 !== A2.GRP_TIP_MBR_CANCELED_ADMIN || (n3 = e3.memberInfoList[0]), S2(e3.memberExtraInfo) || (t3 = e3.memberExtraInfo.reason, e3.msgMemberInfo.forEach(function(e4) {
          e4.reason = t3;
        }));
        o3 = n3.nick, n3 = n3.avatar, m2(o3) && (this.nick = o3), m2(n3) && (this.avatar = n3), o3 = new ho2(e3);
        this._elements.push(o3);
      } }, { key: "setGroupSystemNoticeElement", value: function(e3) {
        e3 = new fo2(e3);
        this._elements.push(e3);
      } }, { key: "setFaceElement", value: function(e3) {
        e3 = new lo2(e3);
        this._elements.push(e3);
      } }, { key: "setMergerElement", value: function(e3, t3, n3, o3) {
        e3 = new Co2(e3, t3, n3, o3);
        this._elements.push(e3);
      } }, { key: "setIsRead", value: function(e3) {
        this.isRead = e3;
      } }, { key: "setRelayFlag", value: function(e3) {
        this._relayFlag = e3;
      } }, { key: "_computePriority", value: function(e3) {
        if (!N2(e3)) {
          if (m2(e3) && -1 !== Object.values(To2).indexOf(e3))
            return e3;
          if (R2(e3)) {
            e3 = "" + e3;
            if (-1 !== Object.keys(To2).indexOf(e3))
              return To2[e3];
          }
        }
        return A2.MSG_PRIORITY_NORMAL;
      } }, { key: "setNickAndAvatar", value: function(e3) {
        var t3 = e3.nick, e3 = e3.avatar;
        m2(t3) && (this.nick = t3), m2(e3) && (this.avatar = e3);
      } }, { key: "setNameCard", value: function(e3) {
        m2(e3) && (this.nameCard = e3);
      } }, { key: "initC2CReadReceiptInfo", value: function(e3) {
        var t3 = e3.readReceiptSentByPeer, e3 = e3.timestamp, e3 = void 0 === e3 ? 0 : e3;
        this.conversationType === A2.CONV_C2C && true === this.needReadReceipt && (this.readReceiptInfo.isPeerRead = 1 === (void 0 === t3 ? void 0 : t3), this.readReceiptInfo.timestamp = e3);
      } }]), Eo2);
      function Eo2(e3) {
        d2(this, Eo2), this.ID = "", this.conversationID = e3.conversationID || null, this.conversationType = e3.conversationType || A2.CONV_C2C, this.conversationSubType = e3.conversationSubType, this.time = e3.time || Math.ceil(Date.now() / 1e3), this.sequence = e3.sequence || 0, this.clientSequence = e3.clientSequence || e3.sequence || 0, this.random = e3.random || 0 === e3.random ? e3.random : ft2(), this.priority = this._computePriority(e3.priority), this.nick = e3.nick || "", this.avatar = e3.avatar || "", this.isPeerRead = false, this.nameCard = "", this.hasRiskContent = on2(e3.checkResult), this._elements = [], this.isPlaceMessage = e3.isPlaceMessage || 0, this.isRevoked = 2 === e3.isPlaceMessage || 8 === e3.msgFlagBits, this.from = e3.from || null, this.to = e3.to || null, this.flow = "", this.isSystemMessage = e3.isSystemMessage || false, this.protocol = e3.protocol || "JSON", this.isResend = false, this.isRead = false, this.status = e3.status || Rn2, this._onlineOnlyFlag = false, this._groupAtInfoList = [], this._relayFlag = false, this.atUserList = [], this.cloudCustomData = e3.cloudCustomData || "", this.isDeleted = false, this.isModified = !!e3.messageVersion, this._isExcludedFromUnreadCount = !(!e3.messageControlInfo || 1 !== e3.messageControlInfo.excludedFromUnreadCount), this._isExcludedFromLastMessage = !(!e3.messageControlInfo || 1 !== e3.messageControlInfo.excludedFromLastMessage), this.clientTime = e3.clientTime || Be2() || 0, this.senderTinyID = e3.senderTinyID || e3.tinyID || "", this.readReceiptInfo = e3.readReceiptInfo || { readCount: void 0, unreadCount: void 0, isPeerRead: void 0, timestamp: 0 }, this.needReadReceipt = true === e3.needReadReceipt || 1 === e3.needReadReceipt, this.version = e3.messageVersion || 0, this.isBroadcastMessage = e3.isBroadcastMessage || false, this._receiverList = e3.receiverList || void 0, this.isSupportExtension = true === e3.isSupportExtension || 1 === e3.isSupportExtension, this._cmConfigID = e3.customModerationConfigurationID, this.revoker = e3.revokerInfo && e3.revokerInfo.revoker || "", this.revokerInfo = e3.revokerInfo || { userID: "", nick: "", avatar: "" }, this.revokeReason = e3.revokeReason || "", this.reInitialize(e3.currentUser), this.extractGroupInfo(e3.groupProfile || null), this.handleGroupAtInfo(e3), this.initC2CReadReceiptInfo(e3);
      }
      function Lo2(e3, t3, n3, o3) {
        var i3, a3, s3, r3, c3, u3, l3;
        d2(this, Lo2), this.type = A2.MSG_MERGER, this.content = { downloadKey: "", pbDownloadKey: "", messageList: [], title: "", abstractList: [], compatibleText: "", version: 0, layersOverLimit: false }, e3.downloadKey ? (a3 = e3.downloadKey, s3 = e3.pbDownloadKey, r3 = e3.title, c3 = e3.abstractList, u3 = e3.compatibleText, i3 = e3.version, this.content.downloadKey = a3, this.content.pbDownloadKey = s3, this.content.title = r3, this.content.abstractList = c3, this.content.compatibleText = u3, this.content.version = i3 || 0) : S2(e3.messageList) ? 1 === e3.layersOverLimit && (this.content.layersOverLimit = true) : (a3 = e3.messageList, s3 = e3.title, r3 = e3.abstractList, c3 = e3.compatibleText, u3 = e3.version, l3 = [], a3.forEach(function(e4) {
          S2(e4) || (e4 = new yo2(e4, t3, n3, o3), l3.push(e4));
        }), this.content.messageList = l3, this.content.title = s3, this.content.abstractList = r3, this.content.compatibleText = c3, this.content.version = u3 || 0);
      }
      function So2(e3, t3, n3, o3) {
        var i3, a3;
        d2(this, So2), this.from = e3.from, this.messageSender = e3.from, this.time = e3.time, this.messageSequence = e3.sequence, this.clientSequence = e3.clientSequence || e3.sequence, this.messageRandom = e3.random, this.cloudCustomData = e3.cloudCustomData || "", this.clientTime = e3.clientTime || void 0, e3.ID ? (this.ID = e3.ID || "", this.nick = e3.nick || "", this.avatar = e3.avatar || "", e3.messageBody ? this.messageBody = JSON.parse(JSON.stringify(e3.messageBody)) : this.messageBody = [{ type: e3.type, payload: e3.payload }], e3.conversationType ? e3.conversationType.startsWith(A2.CONV_C2C) ? this.receiverUserID = e3.to : e3.conversationType.startsWith(A2.CONV_GROUP) && (this.receiverGroupID = e3.to) : e3.receiverGroupID ? this.receiverGroupID = e3.receiverGroupID : e3.receiverUserID && (this.receiverUserID = e3.receiverUserID), this.messageReceiver = e3.to || e3.messageReceiver) : (this.nick = e3.nick || "", this.avatar = e3.avatar || "", this.messageBody = [], i3 = e3.elements[0].type, a3 = e3.elements[0].content, this._patchRichMediaPayload(i3, a3), this._updateRichMediaDownloadUrl(i3, a3, t3, n3, o3), i3 === A2.MSG_MERGER ? this.messageBody.push({ type: i3, payload: new Co2(a3, t3, n3, o3).content }) : this.messageBody.push({ type: i3, payload: a3 }), e3.groupID && (this.receiverGroupID = e3.groupID, this.messageReceiver = e3.groupID), e3.to && (this.receiverUserID = e3.to, this.messageReceiver = e3.to), this.ID = "".concat(e3.tinyID, "-").concat(e3.clientTime, "-").concat(e3.random));
      }
      function ko2(e3) {
        d2(this, ko2), this.type = A2.MSG_LOCATION;
        var t3 = e3.description, n3 = e3.longitude, e3 = e3.latitude;
        this.content = { description: t3, longitude: n3, latitude: e3 };
      }
      function Ao2(e3, t3, n3, o3) {
        d2(this, Ao2), this.type = A2.MSG_VIDEO, this._percent = 0, this.content = { remoteVideoUrl: e3.remoteVideoUrl || e3.videoUrl || "", videoFormat: e3.videoFormat, videoSecond: parseInt(e3.videoSecond, 10), videoSize: e3.videoSize, videoUrl: ao2(e3.videoUrl, t3, n3, o3), videoDownloadFlag: 2, videoUUID: e3.videoUUID, thumbUUID: e3.thumbUUID, thumbFormat: e3.thumbFormat, thumbWidth: e3.thumbWidth, snapshotWidth: e3.thumbWidth, thumbHeight: e3.thumbHeight, snapshotHeight: e3.thumbHeight, thumbSize: e3.thumbSize, snapshotSize: e3.thumbSize, thumbDownloadFlag: 2, thumbUrl: ao2(e3.thumbUrl, t3, n3, o3), snapshotUrl: ao2(e3.thumbUrl, t3, n3, o3) };
      }
      function Ro2(e3) {
        d2(this, Ro2), this.type = A2.MSG_CUSTOM, this.content = { data: e3.data || "", description: e3.description || "", extension: e3.extension || "" };
      }
      function Oo(e3, t3, n3, o3) {
        d2(this, Oo), this.type = A2.MSG_FILE, this._percent = 0;
        var i3 = this._getFileInfo(e3);
        this.content = { downloadFlag: 2, fileUrl: ao2(e3.url || e3.fileUrl, t3, n3, o3) || "", uuid: e3.uuid, fileName: i3.name || "", fileSize: i3.size || 0 };
      }
      function No(e3) {
        d2(this, No), this.type = A2.MSG_GRP_SYS_NOTICE, this.content = {}, this._initContent(e3);
      }
      function Go(e3) {
        d2(this, Go), this.type = A2.MSG_GRP_TIP, this.content = {}, this._initContent(e3);
      }
      function Po2(e3, t3, n3, o3) {
        d2(this, Po2), this.type = A2.MSG_AUDIO, this._percent = 0, this.content = { downloadFlag: 2, second: e3.second, size: e3.size, url: ao2(e3.url, t3, n3, o3), remoteAudioUrl: e3.url || "", uuid: e3.uuid };
      }
      function Uo(e3) {
        d2(this, Uo), this.type = A2.MSG_FACE, this.content = e3 || null;
      }
      function bo2(e3, t3, n3, o3) {
        d2(this, bo2), this._imageMemoryURL = "", this._fileDownloadProxy = t3, this._authKey = n3, this._fileDNList = o3, v2 || ye2 ? this.createImageDataASURL(e3.file) : this.createImageDataASURLInWeb(e3.file), this._initImageInfoModel(), this.type = A2.MSG_IMAGE, this._percent = 0, this.content = { imageFormat: e3.imageFormat || Xe2.UNKNOWN, uuid: e3.uuid, imageInfoArray: [] }, this.initImageInfoArray(e3.imageInfoArray), this._autoFixUrl();
      }
      function wo2(e3) {
        if (f2(e3))
          return { pushFlag: true === e3.disablePush ? 1 : 0, title: e3.title || "", desc: e3.description || "", ext: e3.extension || "", apnsInfo: (n3 = void 0 === (n3 = (t3 = e3).apnsInfo) ? {} : n3, o3 = t3.ignoreIOSBadge, t3 = t3.disableVoipPush, o3 = true === n3.ignoreIOSBadge || true === (void 0 !== o3 && o3) ? 1 : 0, i3 = void 0, N2(t3) || (i3 = false === t3 ? 1 : 0), N2(n3.disableVoipPush) || (i3 = false === n3.disableVoipPush ? 1 : 0), y2(y2({}, n3), {}, { badgeMode: o3, isVoipPush: i3 })), androidInfo: (n3 = void 0 === (n3 = (t3 = e3).androidInfo) ? {} : n3, t3 = t3.androidOPPOChannelID, t3 = n3.OPPOChannelID || (void 0 === t3 ? "" : t3), y2(y2({}, n3), {}, { Sound: -1 === (i3 = (o3 = n3.sound || "").lastIndexOf(".")) ? o3 : o3.slice(0, i3), OPPOChannelID: t3, GoogleChannelID: n3.FCMChannelID || "" })) };
        var t3, n3, o3, i3;
      }
      t2(Ho, u2), Fo = n2(Ho), e2(Ho, [{ key: "onNewMessage", value: function(e3) {
        var t3 = e3.dataList, n3 = e3.isInstantMessage, o3 = e3.C2CRemainingUnreadList, i3 = e3.C2CPairUnreadList, e3 = e3.isSyncingEnded, t3 = (n3 || M2.l("".concat(this._n, ".onNewMessage C2CPairUnreadList:"), i3, "C2CRemainingUnreadList:", o3), this._assembly({ dataList: t3, C2CRemainingUnreadList: o3, C2CPairUnreadList: i3, isInstantMessage: n3 })), o3 = t3.conversationOptionsList, i3 = t3.messageList, t3 = t3.isUnreadC2CMessage, a3 = At2(i3), a3 = (0 < a3.length && this.emitOEvt(h2.MESSAGE_MODIFIED, a3), this.get(11).onNewMessage({ conversationOptionsList: o3, isInstantMessage: n3, isUnreadC2CMessage: t3, isSyncingEnded: e3 }), Rt2(i3));
        n3 && 0 < a3.length && this.emitOEvt(h2.MESSAGE_RECEIVED, a3), i3.length = 0;
      } }, { key: "_assembly", value: function(e3) {
        for (var t3 = e3.dataList, n3 = e3.C2CRemainingUnreadList, o3 = e3.C2CPairUnreadList, i3 = e3.isInstantMessage, a3 = null, s3 = [], r3 = [], c3 = {}, u3 = this.get(26), l3 = false, d3 = this.get(11), p3 = this.get(4), e3 = this.get(17), _3 = this.getFileDownloadProxy(), h3 = this.getDowloadFileAuthKey(), g3 = e3.getFileDNList(), f3 = 0, m3 = t3.length; f3 < m3; f3++)
          if (this._isC2CNotice(t3[f3]))
            this._noticeFromUnreadDBList.push(t3[f3].eventArray[0].c2CNotifyMsgArray[0]);
          else {
            var v3 = t3[f3], I3 = (v3.currentUser = this.getMyUserID(), v3.conversationType = A2.CONV_C2C, v3.isSystemMessage = !!v3.isSystemMessage, (N2(v3.nick) || N2(v3.avatar)) && (l3 = true), (a3 = new Do2(v3)).setElement(v3.elements, _3, h3, g3), a3.setNickAndAvatar({ nick: v3.nick, avatar: v3.avatar }), a3.conversationID);
            if (i3) {
              if (this._msgFromUnreadDBMap.get(a3.ID))
                continue;
              var M3, y3, C3 = false, T3 = (a3.from !== this.getMyUserID() ? (y3 = d3.getLatestMessageSentByPeer(I3)) && (M3 = y3.nick, y3 = y3.avatar, l3 ? a3.setNickAndAvatar({ nick: M3, avatar: y3 }) : M3 === a3.nick && y3 === a3.avatar || (C3 = true)) : (M3 = d3.getLatestMessageSentByMe(I3)) && (y3 = M3.nick, T3 = M3.avatar, y3 === a3.nick && T3 === a3.avatar || (d3.modifyMessageSentByMe({ conversationID: I3, latestNick: a3.nick, latestAvatar: a3.avatar }), p3.mockOnNickAvatarModified(a3.nick, a3.avatar))), 1 === t3[f3].isModified);
              if (d3.isMessageSentByCurrentInstance(a3) ? a3.isModified = T3 : T3 = false, 0 === v3.msgLifeTime)
                a3._onlineOnlyFlag = true, d3.isMessageSentByCurrentInstance(a3) || r3.push(a3);
              else {
                if (!d3.pushIntoMessageList(r3, a3, T3))
                  continue;
                C3 && (d3.modifyMessageSentByPeer({ conversationID: I3, latestNick: a3.nick, latestAvatar: a3.avatar }), d3.updateUserProfileSpecifiedKey({ conversationID: I3, nick: a3.nick, avatar: a3.avatar }));
              }
              i3 && 0 < a3.clientTime && u3.addMessageDelay(a3.clientTime);
            } else
              this._msgFromUnreadDBMap.set(a3.ID, a3);
            if (0 !== v3.msgLifeTime) {
              if (false === a3._onlineOnlyFlag) {
                C3 = d3.getLastMessageTime(I3);
                if (R2(C3) && a3.time < C3)
                  continue;
                i3 && (N2(c3[I3]) ? (v3 = 0, "in" !== a3.flow || a3._isExcludedFromUnreadCount || (v3 = 1), c3[I3] = s3.push({ conversationID: I3, unreadCount: v3, type: a3.conversationType, subType: a3.conversationSubType, lastMessage: a3._isExcludedFromLastMessage ? "" : a3 }) - 1) : (v3 = c3[I3], s3[v3].type = a3.conversationType, s3[v3].subType = a3.conversationSubType, s3[v3].lastMessage = a3._isExcludedFromLastMessage ? "" : a3, "in" !== a3.flow || a3._isExcludedFromUnreadCount || s3[v3].unreadCount++));
              }
            } else
              a3._onlineOnlyFlag = true;
          }
        this._handleNoticeFromUnreadDB();
        var D3 = false;
        if (O2(o3) && 0 < o3.length)
          for (var E3 = 0, L3 = o3.length; E3 < L3; E3++)
            !function(t4) {
              if (o3[t4].from === A2.CONV_SYSTEM)
                return;
              D3 = true;
              var e4 = s3.find(function(e5) {
                return e5.conversationID === "".concat(A2.CONV_C2C).concat(o3[t4].from);
              });
              e4 ? e4.unreadCount = o3[t4].unreadCount : s3.push({ conversationID: "".concat(A2.CONV_C2C).concat(o3[t4].from), unreadCount: o3[t4].unreadCount, type: A2.CONV_C2C });
            }(E3);
        if (O2(n3))
          for (var S3 = 0, k3 = n3.length; S3 < k3; S3++)
            !function(t4) {
              s3.find(function(e4) {
                return e4.conversationID === "".concat(A2.CONV_C2C).concat(n3[t4].from);
              }) || s3.push({ conversationID: "".concat(A2.CONV_C2C).concat(n3[t4].from), type: A2.CONV_C2C, lastMsgTime: n3[t4].lastMsgTime });
            }(S3);
        return { conversationOptionsList: s3, messageList: r3, isUnreadC2CMessage: D3 };
      } }, { key: "getMessageListFromUnreadDB", value: function() {
        return p2(this._msgFromUnreadDBMap.values());
      } }, { key: "_isC2CNotice", value: function(e3) {
        e3 = e3.eventArray;
        return !(!O2(e3) || 10 !== e3[0].event);
      } }, { key: "_handleNoticeFromUnreadDB", value: function() {
        var t3, e3 = this._noticeFromUnreadDBList.length;
        0 !== e3 && (M2.l("".concat(this._n, "._handleNoticeFromUnreadDB count:").concat(e3)), t3 = [], this._noticeFromUnreadDBList.forEach(function(e4) {
          e4.hasOwnProperty("c2cMessageRevokedNotify") && t3.push(e4);
        }), this.onMsgRevoked({ dataList: t3 }), this._noticeFromUnreadDBList.length = 0, t3.length = 0);
      } }, { key: "onMsgRevoked", value: function(e3) {
        var a3, s3 = this, r3 = this.get(11), c3 = [];
        e3.dataList.forEach(function(e4) {
          e4.c2cMessageRevokedNotify && (e4 = e4.c2cMessageRevokedNotify.revokedInfos, N2(e4) || e4.forEach(function(e5) {
            var t3 = s3.getMyUserID() === e5.from ? "".concat(A2.CONV_C2C).concat(e5.to) : "".concat(A2.CONV_C2C).concat(e5.from);
            a3 = r3.revoke(t3, e5.sequence, e5.random);
            var n3, o3 = e5.revokerInfo && e5.revokerInfo.revoker, i3 = e5.revokerInfo && e5.revokerInfo.reason || "";
            a3 ? n3 = a3 : (n3 = { conversationID: t3, sequence: e5.sequence }, e5.tinyID && e5.clientTime && e5.random && (n3.ID = "".concat(e5.tinyID, "-").concat(e5.clientTime, "-").concat(e5.random)), e5.time && (n3.time = e5.time)), n3 && (n3.revoker = o3, n3.revokeReason = i3, n3.revokerInfo = { userID: o3, nick: "", avatar: "" }, c3.push(n3));
          }));
        }), 0 !== c3.length && (r3.onMessageRevoked(c3), M2.l("".concat(this._n, ".onMsgRevoked count:").concat(c3.length)), r3.updateRevokerInfo(c3).then(function(e4) {
          s3.emitOEvt(h2.MESSAGE_REVOKED, e4);
        }));
      } }, { key: "onMsgReadReceipt", value: function(e3) {
        var i3 = this;
        e3.dataList.forEach(function(e4) {
          var o3;
          S2(e4.c2cMessageReadReceipt) || (o3 = e4.c2cMessageReadReceipt.to, e4.c2cMessageReadReceipt.uinPairReadArray.forEach(function(e5) {
            var e5 = e5.peerReadTime, t3 = (M2.l("".concat(i3._n, ".onMsgReadReceipt to:").concat(o3, " peerReadTime:").concat(e5)), "".concat(A2.CONV_C2C).concat(o3)), n3 = i3.get(11);
            n3.recordPeerReadTime(t3, e5), n3.updateMsgIsPeerReadProp(t3, e5);
          }));
        });
      } }, { key: "onMsgReadNotice", value: function(e3) {
        var o3 = this;
        e3.dataList.forEach(function(e4) {
          var n3;
          S2(e4.c2cMessageReadNotice) || (n3 = o3.get(11), e4.c2cMessageReadNotice.uinPairReadArray.forEach(function(e5) {
            var t3 = e5.from, e5 = e5.peerReadTime, t3 = (M2.l("".concat(o3._n, ".onMsgReadNotice from:").concat(t3, " lastReadTime:").concat(e5)), "".concat(A2.CONV_C2C).concat(t3));
            n3.updateIsReadAfterReadReport({ conversationID: t3, lastMessageTime: e5 }), n3.updateUnreadCount(t3);
          }));
        });
      } }, { key: "onMsgModified", value: function(e3) {
        M2.l("".concat(this._n, ".onMsgModified options:"), e3);
        var t3 = this.get(11);
        e3.dataList.forEach(function(e4) {
          t3.onMessageModified(y2(y2({}, e4), {}, { conversationType: A2.CONV_C2C }));
        });
      } }, { key: "onReadReceiptList", value: function(e3) {
        M2.l("".concat(this._n, ".onReadReceiptList options:"), e3), this.get(11).updateReadReceiptInfo(e3.dataList);
      } }, { key: "sendMessage", value: function(e3, t3) {
        e3 = this._createC2CMessagePack(e3, t3);
        return this.req(e3);
      } }, { key: "_createC2CMessagePack", value: function(e3, t3) {
        var n3 = null, o3 = (t3 && (t3.offlinePushInfo && (n3 = t3.offlinePushInfo), true === t3.onlineUserOnly) && (n3 ? n3.disablePush = true : n3 = { disablePush: true }), ""), i3 = (m2(e3.cloudCustomData) && 0 < e3.cloudCustomData.length && (o3 = e3.cloudCustomData), []), a3 = (f2(t3) && f2(t3.messageControlInfo) && (a3 = (r3 = t3.messageControlInfo).excludedFromUnreadCount, s3 = r3.excludedFromLastMessage, r3 = r3.excludedFromContentModeration, true === a3 && i3.push("NoUnread"), true === s3 && i3.push("NoLastMsg"), true === r3) && i3.push("NoMsgCheck"), this.isOnlineMessage(e3, t3) ? 0 : void 0), s3 = JSON.parse(JSON.stringify(e3.getElements())), r3 = this.get(17).getFileDNList();
        return { P: k2.SEND_C2C_MSG, data: { fromAccount: this.getMyUserID(), toAccount: e3.to, msgBody: so2(e3.type, s3, r3), cloudCustomData: o3, msgSeq: e3.sequence, msgRandom: e3.random, msgLifeTime: a3, nick: e3.nick, avatar: e3.avatar, offlinePushInfo: wo2(n3), messageControlInfo: 0 !== a3 ? i3 : void 0, clientTime: e3.clientTime, needReadReceipt: true === e3.needReadReceipt ? 1 : 0, isSupportExtension: true === e3.isSupportExtension ? 1 : 0, isRelayMessage: true === e3._relayFlag ? 1 : 0, cmConfigID: e3._cmConfigID } };
      } }, { key: "isOnlineMessage", value: function(e3, t3) {
        return !(!t3 || true !== t3.onlineUserOnly);
      } }, { key: "revokeMessage", value: function(e3) {
        return this.req({ P: k2.REVOKE_C2C_MSG, data: { msgInfo: { fromAccount: e3.from, toAccount: e3.to, msgSeq: e3.sequence, msgRandom: e3.random, msgTimeStamp: e3.time } } });
      } }, { key: "deleteMessage", value: function(e3) {
        var t3 = e3.to, e3 = e3.keyList;
        return M2.l("".concat(this._n, ".deleteMessage toAccount:").concat(t3, " count:").concat(e3.length)), this.req({ P: k2.DEL_C2C_MSG, data: { fromAccount: this.getMyUserID(), to: t3, keyList: e3 } });
      } }, { key: "modifyRemoteMessage", value: function(e3) {
        var t3 = e3.from, n3 = e3.to, o3 = e3.version, o3 = void 0 === o3 ? 0 : o3, i3 = e3.sequence, a3 = e3.random, s3 = e3.time, r3 = e3.payload, c3 = e3.type, u3 = e3.cloudCustomData, e3 = e3._elements, l3 = void 0;
        return Xt2(c3) && (1 < e3.length && e3.splice(0, 1, { type: c3, content: r3 }), l3 = e3), this.req({ P: k2.MODIFY_C2C_MSG, data: { from: t3, to: n3, version: o3, sequence: i3, random: a3, time: s3, elements: l3, cloudCustomData: u3 } });
      } }, { key: "setMessageRead", value: function(e3) {
        var t3 = this, n3 = e3.conversationID, o3 = e3.lastMessageTime, i3 = "".concat(this._n, ".").concat("setMessageRead"), e3 = "convID:".concat(n3, " lastMessageTime:").concat(o3), a3 = (M2.l("".concat(i3, " ").concat(e3)), R2(o3) || this.warn("DoNotModifyLastTime"), new G2("setMessageRead"));
        return a3.setMessage(e3), this.req({ P: k2.SET_C2C_MSG_READ, data: { C2CMsgReaded: { cookie: "", C2CMsgReadedItem: [{ toAccount: n3.replace("C2C", ""), lastMessageTime: o3, receipt: 1 }] } } }).then(function() {
          a3.end(), M2.l("".concat(i3, " ok"));
          var e4 = t3.get(11);
          return e4.updateIsReadAfterReadReport({ conversationID: n3, lastMessageTime: o3 }), e4.updateUnreadCount(n3), C2();
        }).catch(function(e4) {
          return a3.setError(e4).end(), M2.l("".concat(i3, " failed. error:"), e4), D2(e4);
        });
      } }, { key: "getRoamingMessage", value: function(e3) {
        var s3 = this, r3 = "".concat(this._n, ".").concat("getRoamingMessage"), t3 = e3.peerAccount, c3 = e3.conversationID, n3 = e3.count, o3 = e3.lastMessageTime, e3 = e3.messageKey, u3 = "peerAccount:".concat(t3, " count:").concat(n3 || 15, " lastMessageTime:").concat(o3 || 0, " messageKey:").concat(e3), l3 = (M2.l("".concat(r3, " ").concat(u3)), new G2("getRoamingMessage"));
        return this.req({ P: k2.GET_C2C_ROAMING_MSG, data: { peerAccount: t3, count: n3 || 15, lastMessageTime: o3 || 0, messageKey: e3 } }).then(function(e4) {
          var e4 = e4.data, t4 = e4.complete, n4 = e4.messageList, o4 = e4.messageKey, e4 = e4.lastMessageTime, i3 = (N2(n4) ? M2.l("".concat(r3, " ok. complete:").concat(t4, " but messageList is undefined!")) : M2.l("".concat(r3, " ok. complete:").concat(t4, " count:").concat(n4.length)), l3.setMessage("".concat(u3, " complete:").concat(t4, " length:").concat(n4.length)).end(), s3.get(11)), t4 = 1 === t4, a3 = (t4 && i3.setCompleted(c3), []), n4 = i3.onRoamingMessage(n4, c3, true, a3), o4 = (i3.modifyMessageList(c3), i3.updateIsRead(c3), i3.updateRoamingMsgKeyAndTime(c3, o4, e4), i3.getPeerReadTime(c3)), o4 = (M2.l("".concat(r3, " update isPeerRead property. convID:").concat(c3, " peerReadTime:").concat(o4)), o4 ? i3.updateMsgIsPeerReadProp(c3, o4) : (e4 = c3.replace(A2.CONV_C2C, ""), s3.getRemotePeerReadTime([e4]).then(function() {
            i3.updateMsgIsPeerReadProp(c3, i3.getPeerReadTime(c3));
          })), "");
          return 0 < n4.length ? o4 = n4[0].ID : (e4 = i3.getLocalOldestMessage(c3)) && (o4 = e4.ID), M2.l("".concat(r3, " nextReqID:").concat(o4, " storedMsgCount:").concat(n4.length)), { nextReqID: o4, storedMessageList: n4, assembledMessageList: a3, isPullingCompleted: t4 };
        }).catch(function(e4) {
          return l3.setMessage(u3).setError(e4).end(), M2.w("".concat(r3, " failed. error:"), e4), D2(e4);
        });
      } }, { key: "getRoamingMessagesHopping", value: function(e3) {
        var a3 = this, s3 = "".concat(this._n, ".").concat("getRoamingMessagesHopping"), t3 = e3.peerAccount, n3 = e3.time, n3 = void 0 === n3 ? 0 : n3, o3 = e3.count, r3 = e3.direction, c3 = "".concat(A2.CONV_C2C).concat(t3), u3 = "peerAccount:".concat(t3, " count:").concat(o3, " time:").concat(n3, " direction:").concat(r3), l3 = (M2.l("".concat(s3, " ").concat(u3)), new G2("getRoamingMessagesHopping"));
        return this.req({ P: k2.GET_C2C_ROAMING_MSG, data: { peerAccount: t3, count: o3 + 1, lastMessageTime: n3, direction: r3 } }).then(function(e4) {
          var e4 = e4.data, t4 = e4.complete, n4 = e4.messageList, n4 = void 0 === n4 ? [] : n4, e4 = e4.lastMessageTime, o4 = "complete:".concat(t4, " count:").concat(n4.length), i3 = (M2.l("".concat(s3, " ok. ").concat(o4)), l3.setMessage("".concat(u3, " ").concat(o4)).end(), 1 !== t4 && (1 === r3 ? n4.pop() : n4.shift()), a3.get(11)), o4 = i3.onRoamingMessage(n4, c3, false), n4 = (a3._modifyMessageList(c3, o4), a3._computeResult({ complete: t4, lastMessageTime: e4, resultList: o4 })), t4 = (i3.storeHoppingMessageList(n4.messageList), i3.getPeerReadTime(c3));
          return M2.l("".concat(s3, " update isPeerRead property. convID:").concat(c3, " peerReadTime:").concat(t4)), t4 ? i3.updateMsgIsPeerReadProp(c3, t4) : (e4 = c3.replace(A2.CONV_C2C, ""), a3.getRemotePeerReadTime([e4]).then(function() {
            i3.updateMsgIsPeerReadProp(c3, i3.getPeerReadTime(c3));
          })), C2(n4);
        }).catch(function(e4) {
          return l3.setMessage(u3).setError(e4).end(), M2.w("".concat(s3, " failed. error:"), e4), D2(e4);
        });
      } }, { key: "_computeResult", value: function(e3) {
        var t3 = e3.complete, t3 = void 0 === t3 ? 0 : t3, n3 = e3.lastMessageTime, e3 = e3.resultList, e3 = { messageList: p2(void 0 === e3 ? [] : e3), isCompleted: false, nextMessageTime: "" };
        return 1 === t3 ? e3.isCompleted = true : e3.nextMessageTime = n3, e3;
      } }, { key: "_modifyMessageList", value: function(e3, t3) {
        e3 = this.get(11).getLocalConversation(e3);
        if (e3)
          for (var n3 = e3.userProfile.nick, o3 = e3.userProfile.avatar, e3 = this.get(4).getNickAndAvatarByUserID(this.getMyUserID()), i3 = e3.nick, a3 = e3.avatar, s3 = t3.length - 1; 0 <= s3; s3--) {
            var r3 = t3[s3];
            "in" === r3.flow && (r3.nick !== n3 && r3.setNickAndAvatar({ nick: n3 }), r3.avatar !== o3) && r3.setNickAndAvatar({ avatar: o3 }), "out" === r3.flow && (r3.nick !== i3 && r3.setNickAndAvatar({ nick: i3 }), r3.avatar !== a3) && r3.setNickAndAvatar({ avatar: a3 });
          }
      } }, { key: "getRemotePeerReadTime", value: function(a3) {
        var s3, r3 = this, c3 = "".concat(this._n, ".").concat("getRemotePeerReadTime");
        return S2(a3) ? Promise.resolve() : (s3 = new G2("getRemotePeerReadTime"), M2.l("".concat(c3, " userIDList:").concat(a3)), this.req({ P: k2.GET_C2C_PEER_READ_TIME, data: { userIDList: a3 } }).then(function(e3) {
          var t3 = e3.data.peerReadTimeList;
          M2.l("".concat(c3, " ok. peerReadTimeList:").concat(t3));
          for (var n3 = "", o3 = r3.get(11), i3 = 0; i3 < a3.length; i3++)
            n3 += "".concat(a3[i3], "-").concat(t3[i3], " "), 0 < t3[i3] && o3.recordPeerReadTime("".concat(A2.CONV_C2C).concat(a3[i3]), t3[i3]);
          s3.setMessage(n3).end();
        }).catch(function(e3) {
          s3.setError(e3).end(), M2.w("".concat(c3, " failed. error:"), e3);
        }));
      } }, { key: "sendReadReceipt", value: function(e3) {
        var t3, n3 = e3[0].conversationID.replace(A2.CONV_C2C, ""), o3 = new G2("sendReadReceipt"), i3 = (o3.setMessage("peerAccount:".concat(n3)), this.getMyUserID()), e3 = e3.filter(function(e4) {
          return e4.from !== i3 && true === e4.needReadReceipt;
        }).map(function(e4) {
          return { fromAccount: e4.from, toAccount: e4.to, sequence: e4.sequence, random: e4.random, time: e4.time, clientTime: e4.clientTime };
        });
        return 0 === e3.length ? D2({ code: L2.READ_RECEIPT_MSG_LIST_EMPTY }) : (t3 = "".concat(this._n, ".").concat("sendReadReceipt"), M2.l("".concat(t3, ". peerAccount:").concat(n3, " length:").concat(e3.length)), this.req({ P: k2.SEND_C2C_READ_RECEIPT, data: { peerAccount: n3, messageInfoList: e3 } }).then(function(e4) {
          return o3.end(), M2.l("".concat(t3, " ok")), C2();
        }).catch(function(e4) {
          return o3.setError(e4).end(), M2.w("".concat(t3, " failed. error:"), e4), D2(e4);
        }));
      } }, { key: "getReadReceiptList", value: function(e3) {
        var t3 = e3[0].conversationID.replace(A2.CONV_C2C, "");
        return M2.l("".concat(this._n, ".getReadReceiptList peerAccount:").concat(t3, " msgCount:").concat(e3.length)), T2({ messageList: e3 });
      } }, { key: "getMessageExtensions", value: function(e3, t3) {
        return M2.l("".concat(this._n, ".getMessageExtensions startSequence:").concat(t3)), this.req({ P: k2.GET_C2C_MSG_EXT, data: { from: e3.from, to: e3.to, messageKey: this.getMessageKey(e3), startSequence: t3 } });
      } }, { key: "modifyMsgExts", value: function(e3, t3) {
        var n3 = 2 < arguments.length && void 0 !== arguments[2] ? arguments[2] : 1;
        return M2.l("".concat(this._n, ".modifyMsgExts operateType:").concat(n3)), this.req({ P: k2.MODIFY_C2C_MSG_EXT, data: { from: e3.from, to: e3.to, messageKey: this.getMessageKey(e3), extensionList: t3, operateType: n3 } });
      } }, { key: "getMessageKey", value: function(e3) {
        var t3 = e3.clientSequence, n3 = e3.random, e3 = e3.time;
        return "".concat(t3, "_").concat(n3, "_").concat(e3);
      } }, { key: "reset", value: function() {
        M2.l("".concat(this._n, ".reset")), this._msgFromUnreadDBMap.clear(), this._noticeFromUnreadDBList.length = 0;
      } }]);
      var Fo, qo = Ho, P2 = { A2KEY_AND_TINYID_UPDATED: "_inner".concat(1), CLOUD_CONFIG: "_inner".concat(2), PROFILE_UPDATED: "_inner".concat(3), CONV_SYNC_COMPLETED: "_inner".concat(4), C2C_UNREAD_HANDLE_COMPLETED: "_inner".concat(5) }, xo2 = (e2(Vo, [{ key: "_onCloudConfig", value: function() {
        var e3 = this._convM.getCloudConfig("topic_msg_limit");
        N2(e3) || (this.TOPIC_MSG_LIMIT = Number(e3)), M2.l("".concat(this._n, "._onCloudConfig topicMsgLimit:").concat(this.TOPIC_MSG_LIMIT));
      } }, { key: "onCheckTimer", value: function(e3) {
        if (e3 % 20 == 0 && 0 < this._map.size) {
          var t3, n3 = Z2(this._map);
          try {
            for (n3.s(); !(t3 = n3.n()).done; ) {
              var o3 = Y2(t3.value, 2), i3 = o3[0], a3 = o3[1];
              i3.includes(it2) && a3.size >= this.TOPIC_MSG_LIMIT && this._convM.clearMemMsg(i3, true);
            }
          } catch (e4) {
            n3.e(e4);
          } finally {
            n3.f();
          }
        }
      } }, { key: "pushIn", value: function(e3) {
        var t3 = 1 < arguments.length && void 0 !== arguments[1] && arguments[1], n3 = e3.conversationID, o3 = true, i3 = (this._map.has(n3) || this._map.set(n3, /* @__PURE__ */ new Map()), this._getUniqueIDOfMsg(e3));
        if (this._map.get(n3).has(i3)) {
          var a3 = this._map.get(n3).get(i3);
          if (!t3 || true === a3.isModified)
            return false;
        }
        return this._map.get(n3).set(i3, e3), this._setLatestMsgSentByPeer(n3, e3), this._setLatestMsgSentByMe(n3, e3), o3;
      } }, { key: "unshift", value: function(e3, t3) {
        var n3;
        if (O2(e3) ? 0 < e3.length && (n3 = e3[0].conversationID, this._unshiftMultipleMsgs(e3, t3)) : (n3 = e3.conversationID, this._unshiftSingleMsg(e3, t3)), n3) {
          var o3 = Array.from(this._map.get(n3).values()), e3 = o3.length;
          if (0 !== e3) {
            for (var i3 = e3 - 1; 0 <= i3; i3--)
              if ("out" === o3[i3].flow) {
                this._setLatestMsgSentByMe(n3, o3[i3]);
                break;
              }
            if (n3.startsWith(A2.CONV_C2C)) {
              for (var a3 = e3 - 1; 0 <= a3; a3--)
                if ("in" === o3[a3].flow) {
                  this._setLatestMsgSentByPeer(n3, o3[a3]);
                  break;
                }
            }
          }
        }
      } }, { key: "_unshiftSingleMsg", value: function(e3, t3) {
        var n3, o3, i3 = e3.conversationID, a3 = this._getUniqueIDOfMsg(e3);
        this._map.has(i3) ? (n3 = this._map.get(i3), o3 = Array.from(n3), n3.has(a3) || (o3.unshift([a3, e3]), this._map.set(i3, new Map(o3)), t3.push(e3))) : (this._map.set(i3, /* @__PURE__ */ new Map()), this._map.get(i3).set(a3, e3), t3.push(e3));
      } }, { key: "_unshiftMultipleMsgs", value: function(e3, t3) {
        for (var n3 = e3.length, o3 = [], i3 = e3[0].conversationID, a3 = this._map.get(i3), s3 = this._map.has(i3) ? Array.from(a3) : [], r3 = 0; r3 < n3; r3++) {
          var c3 = this._getUniqueIDOfMsg(e3[r3]);
          a3 && a3.has(c3) || (o3.push([c3, e3[r3]]), t3.push(e3[r3]));
        }
        this._map.set(i3, new Map(o3.concat(s3)));
      } }, { key: "remove", value: function(e3) {
        var t3 = e3.conversationID, e3 = this._getUniqueIDOfMsg(e3);
        this._map.has(t3) && this._map.get(t3).delete(e3);
      } }, { key: "revoke", value: function(e3, t3, n3) {
        var o3;
        return this._map.has(e3) ? (o3 = this._map.get(e3), this._updateMsgIsRevoked(o3, t3, n3)) : this._hoppingMsgMap.has(e3) ? (o3 = this._hoppingMsgMap.get(e3), this._updateMsgIsRevoked(o3, t3, n3)) : null;
      } }, { key: "_updateMsgIsRevoked", value: function(e3, t3, n3) {
        var o3, i3 = Z2(e3);
        try {
          for (i3.s(); !(o3 = i3.n()).done; ) {
            var a3 = Y2(o3.value, 2)[1];
            if (a3.sequence === t3 && (N2(n3) || a3.random === n3))
              return a3.isRevoked || (a3.isRevoked = true), a3;
          }
        } catch (e4) {
          i3.e(e4);
        } finally {
          i3.f();
        }
      } }, { key: "removeByConvID", value: function(e3) {
        var t3 = this._map.has(e3);
        M2.l("".concat(this._n, ".removeByConvID convID:").concat(e3, " has:").concat(t3)), t3 && (this._map.delete(e3), this._latestMsgSentByPeerMap.delete(e3), this._latestMsgSentByMeMap.delete(e3));
      } }, { key: "findMessage", value: function(e3) {
        return this._findMsg(e3, this._map) || this._findMsg(e3, this._hoppingMsgMap);
      } }, { key: "_findMsg", value: function(e3, t3) {
        var n3, o3 = null, i3 = Z2(t3);
        try {
          for (i3.s(); !(n3 = i3.n()).done; )
            for (var a3 = p2(Y2(n3.value, 2)[1].values()), s3 = a3.length, r3 = 0; r3 < s3; r3++)
              if (a3[r3].ID === e3) {
                o3 = a3[r3];
                break;
              }
        } catch (e4) {
          i3.e(e4);
        } finally {
          i3.f();
        }
        return o3;
      } }, { key: "updateMsgIsPeerReadProp", value: function(e3, t3) {
        var n3, o3 = [];
        return this._map.has(e3) ? (n3 = this._map.get(e3), o3 = this._updateMsgIsPeerReadProp(n3, t3)) : this._hoppingMsgMap.has(e3) && (n3 = this._hoppingMsgMap.get(e3), o3 = this._updateMsgIsPeerReadProp(n3, t3)), M2.l("".concat(this._n, ".updateMsgIsPeerReadProp convID:").concat(e3, " peerReadTime:").concat(t3, " count:").concat(o3.length)), o3;
      } }, { key: "_updateMsgIsPeerReadProp", value: function(e3, t3) {
        var n3, o3 = [], i3 = Z2(e3);
        try {
          for (i3.s(); !(n3 = i3.n()).done; ) {
            var a3 = Y2(n3.value, 2)[1];
            a3.time <= t3 && !a3.isPeerRead && "out" === a3.flow && (a3.isPeerRead = true, o3.push(a3));
          }
        } catch (e4) {
          i3.e(e4);
        } finally {
          i3.f();
        }
        return o3;
      } }, { key: "updateMsgIsModifiedProp", value: function(e3) {
        var t3 = e3.conversationID;
        this._map.has(t3) && (e3 = this._getUniqueIDOfMsg(e3), t3 = this._map.get(t3).get(e3)) && (t3.isModified = true);
      } }, { key: "hasLocalMsgList", value: function(e3) {
        return this._map.has(e3);
      } }, { key: "getLocalMsgList", value: function(e3) {
        return this.hasLocalMsgList(e3) ? p2(this._map.get(e3).values()) : [];
      } }, { key: "getLocalMaxSeq", value: function(e3) {
        return this.hasLocalMsgList(e3) ? (e3 = p2(this._map.get(e3).values()).map(function(e4) {
          return e4.sequence;
        }), Math.max.apply(Math, p2(e3))) : 0;
      } }, { key: "getLocalMaxTime", value: function(e3) {
        return this.hasLocalMsgList(e3) ? (e3 = p2(this._map.get(e3).values()).map(function(e4) {
          return e4.time;
        }), Math.max.apply(Math, p2(e3))) : 0;
      } }, { key: "hasLocalMsg", value: function(e3, t3) {
        for (var n3 = false, o3 = this.getLocalMsgList(e3), i3 = o3.length, a3 = 0; a3 < i3; a3++)
          o3[a3].ID === t3 && (n3 = true);
        return n3;
      } }, { key: "getLocalMsg", value: function(e3, t3) {
        for (var n3 = null, o3 = this.getLocalMsgList(e3), i3 = o3.length, a3 = 0; a3 < i3; a3++)
          if (o3[a3].ID === t3) {
            n3 = o3[a3];
            break;
          }
        return n3;
      } }, { key: "getLocalLastMsg", value: function(e3) {
        e3 = this.getLocalMsgList(e3);
        return e3[e3.length - 1];
      } }, { key: "getLocalSecondLastMsg", value: function(e3) {
        e3 = this.getLocalMsgList(e3);
        return e3[e3.length - 2];
      } }, { key: "getLocalOldestMsg", value: function(e3) {
        return this.getLocalMsgList(e3)[0];
      } }, { key: "_setLatestMsgSentByPeer", value: function(e3, t3) {
        e3.startsWith(A2.CONV_C2C) && "in" === t3.flow && this._latestMsgSentByPeerMap.set(e3, t3);
      } }, { key: "_setLatestMsgSentByMe", value: function(e3, t3) {
        "out" === t3.flow && this._latestMsgSentByMeMap.set(e3, t3);
      } }, { key: "getLatestMsgSentByPeer", value: function(e3) {
        return this._latestMsgSentByPeerMap.get(e3);
      } }, { key: "getLatestMsgSentByMe", value: function(e3) {
        return this._latestMsgSentByMeMap.get(e3);
      } }, { key: "modifyMsgSentByPeer", value: function(e3) {
        var t3 = e3.conversationID, n3 = e3.latestNick, o3 = e3.latestAvatar, e3 = this._map.get(t3);
        if (!S2(e3)) {
          var i3 = Array.from(e3.values()), e3 = i3.length;
          if (0 !== e3) {
            for (var a3 = null, s3 = 0, r3 = false, c3 = e3 - 1; 0 <= c3; c3--)
              "in" === i3[c3].flow && ((a3 = i3[c3]).nick !== n3 && (a3.setNickAndAvatar({ nick: n3 }), r3 = true), a3.avatar !== o3 && (a3.setNickAndAvatar({ avatar: o3 }), r3 = true), r3) && (s3 += 1);
            M2.l("".concat(this._n, ".modifyMsgSentByPeer convID:").concat(t3, " count:").concat(s3));
          }
        }
      } }, { key: "modifyMsgSentByMe", value: function(e3) {
        var t3 = e3.conversationID, n3 = e3.latestNick, o3 = e3.latestAvatar, e3 = this._map.get(t3);
        if (!S2(e3)) {
          var i3 = Array.from(e3.values()), e3 = i3.length;
          if (0 !== e3) {
            for (var a3 = null, s3 = 0, r3 = false, c3 = e3 - 1; 0 <= c3; c3--)
              "out" === i3[c3].flow && ((a3 = i3[c3]).nick !== n3 && (a3.setNickAndAvatar({ nick: n3 }), r3 = true), a3.avatar !== o3 && (a3.setNickAndAvatar({ avatar: o3 }), r3 = true), r3) && (s3 += 1);
            M2.l("".concat(this._n, ".modifyMsgSentByMe convID:").concat(t3, " count:").concat(s3));
          }
        }
      } }, { key: "getTopicConvIDList", value: function(t3) {
        return p2(this._map.keys()).filter(function(e3) {
          return e3.startsWith("".concat(A2.CONV_GROUP).concat(t3));
        });
      } }, { key: "onMsgModified", value: function(e3, t3) {
        var n3, o3, i3, a3;
        return (this._map.has(e3) || this._hoppingMsgMap.has(e3)) && (n3 = "".concat(this._n, ".onMsgModified"), i3 = this._getUniqueIDOfMsg(t3), a3 = !!(o3 = this._getTargetMsg(e3, i3)), M2.l("".concat(n3, " convID:").concat(e3, " uniqueID:").concat(i3, " has:").concat(a3)), a3) ? (e3 = t3.messageVersion, i3 = t3.elements, a3 = t3.cloudCustomData, t3 = t3.checkResult, M2.l("".concat(n3, " localVersion:").concat(o3.version, " remoteVersion:").concat(e3)), o3.version < e3 ? (o3.version = e3, o3._elements = JSON.parse(JSON.stringify(i3)), o3.payload = JSON.parse(JSON.stringify(i3[0].content)), o3.type = i3[0].type, o3.cloudCustomData = a3, o3.isModified = true, o3.hasRiskContent = on2(t3), { isUpdated: true, message: o3 }) : { isUpdated: false, message: o3 }) : { isUpdated: false, message: null };
      } }, { key: "_getUniqueIDOfMsg", value: function(e3) {
        var t3 = e3.from, n3 = e3.to, o3 = e3.random, i3 = e3.sequence, e3 = e3.time;
        return "".concat(t3, "-").concat(n3, "-").concat(o3, "-").concat(i3, "-").concat(e3);
      } }, { key: "_getTargetMsg", value: function(e3, t3) {
        if (this._map.has(e3))
          return this._map.get(e3).get(t3);
        var n3 = void 0;
        if (this._hoppingMsgMap.has(e3)) {
          for (var o3 = p2(this._hoppingMsgMap.get(e3).values()), i3 = 0; i3 < o3.length; i3++)
            if (this._getUniqueIDOfMsg(o3[i3]) === t3) {
              n3 = o3[i3];
              break;
            }
        }
        return n3;
      } }, { key: "storeHoppingMsgList", value: function(e3) {
        if (0 !== e3.length) {
          var t3 = e3[0].conversationID, n3 = e3.length;
          this._hoppingMsgMap.has(t3) || this._hoppingMsgMap.set(t3, /* @__PURE__ */ new Map());
          for (var o3 = this._hoppingMsgMap.get(t3), i3 = 0; i3 < n3; i3++) {
            var a3 = e3[i3];
            o3.has(a3.ID) || o3.set(a3.ID, a3);
          }
        }
      } }, { key: "getHoppingMsg", value: function(e3, t3) {
        if (this._hoppingMsgMap.has(e3))
          return this._hoppingMsgMap.get(e3).get(t3);
      } }, { key: "reset", value: function() {
        this._map.clear(), this._latestMsgSentByPeerMap.clear(), this._latestMsgSentByMeMap.clear(), this._hoppingMsgMap.clear();
      } }]), Vo);
      function Vo(e3) {
        d2(this, Vo), this._convM = e3, this._map = /* @__PURE__ */ new Map(), this._n = "MsgListHandler", this._latestMsgSentByPeerMap = /* @__PURE__ */ new Map(), this._latestMsgSentByMeMap = /* @__PURE__ */ new Map(), this._hoppingMsgMap = /* @__PURE__ */ new Map(), this.TOPIC_MSG_LIMIT = 1e3, this._convM.getIEmitInst().on(P2.CLOUD_CONFIG, this._onCloudConfig, this);
      }
      function Ho(e3) {
        return d2(this, Ho), (e3 = Fo.call(this, e3))._n = "C2CModule", e3._msgFromUnreadDBMap = /* @__PURE__ */ new Map(), e3._noticeFromUnreadDBList = [], e3;
      }
      function Bo2(e3) {
        this.mixin(e3);
      }
      Bo2.mixin = function(e3) {
        e3 = e3.prototype || e3;
        e3._isReady = false, e3.ready = function(e4) {
          if (e4)
            return this._isReady ? void (1 < arguments.length && void 0 !== arguments[1] && arguments[1] ? e4.call(this) : setTimeout(e4, 1)) : (this._readyQueue = this._readyQueue || [], void this._readyQueue.push(e4));
        }, e3.triggerReady = function() {
          var t3 = this;
          this._isReady = true, setTimeout(function() {
            var e4 = t3._readyQueue;
            t3._readyQueue = [], e4 && 0 < e4.length && e4.forEach(function(e5) {
              e5.call(this);
            }, t3);
          }, 1);
        }, e3.resetReady = function() {
          this._isReady = false, this._readyQueue = [];
        }, e3.isReady = function() {
          return this._isReady;
        };
      };
      function Ko(e3, t3, n3) {
        return N2(e3) ? { lastTime: 0, lastSequence: 0, fromAccount: "", messageForShow: "", payload: null, type: "", isRevoked: false, cloudCustomData: "", onlineOnlyFlag: false, nick: "", nameCard: "", version: 0, isPeerRead: false, revoker: null } : n3 && e3.ID || e3 instanceof Do2 ? { lastTime: e3.time || 0, lastSequence: e3.sequence || 0, fromAccount: e3.from || "", messageForShow: zt2(e3.type, e3.payload, t3), payload: e3.payload || null, type: e3.type || null, isRevoked: e3.isRevoked || false, cloudCustomData: e3.cloudCustomData || "", onlineOnlyFlag: e3._onlineOnlyFlag || false, nick: e3.nick || "", nameCard: e3.nameCard || "", version: e3.version || 0, isPeerRead: e3.isPeerRead || false, revoker: e3.revoker || null } : y2(y2({}, e3), {}, { messageForShow: zt2(e3.type, e3.payload, t3) });
      }
      function Yo(e3, t3) {
        return S2(e3) ? { lastTime: 0, lastSequence: 0, fromAccount: "", payload: null, type: "", messageForShow: "", nick: "", avatar: "", version: 0, cloudCustomData: "", isRevoked: false, revoker: null } : { lastTime: e3.time || 0, lastSequence: e3.sequence || 0, fromAccount: e3.from || "", payload: e3.payload || null, type: e3.type || "", messageForShow: zt2(e3.type, e3.payload, t3), nick: e3.nick || "", avatar: e3.avatar || "", version: e3.version || 0, cloudCustomData: e3.cloudCustomData || "", isRevoked: e3.isRevoked || false, revoker: e3.revoker || null };
      }
      function Wo(e3) {
        var t3 = String(e3).replace(/[=]+$/, ""), n3 = "";
        if (t3.length % 4 == 1)
          return "";
        for (var o3, i3, a3 = 0, s3 = 0; i3 = t3.charAt(s3++); ~i3 && (o3 = a3 % 4 ? 64 * o3 + i3 : i3, a3++ % 4) && (n3 += String.fromCharCode(255 & o3 >> (-2 * a3 & 6))))
          i3 = "ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/=".indexOf(i3);
        try {
          return decodeURIComponent(escape(n3));
        } catch (e4) {
          return "";
        }
      }
      var jo, Jo, zo2, Xo, Zo, Qo = ["jpg", "jpeg", "gif", "png", "bmp", "image", "webp"], $o = ["mp4", "quicktime", "mov"], ei2 = (e2(oa, [{ key: "validate", value: function(e3) {
        var t3, n3 = true, o3 = "";
        if (S2(e3))
          return { valid: false, tips: "empty options" };
        if (e3.profileCustomField)
          for (var i3 = e3.profileCustomField.length, a3 = null, s3 = 0; s3 < i3; s3++) {
            if (a3 = e3.profileCustomField[s3], !m2(a3.key) || -1 === a3.key.indexOf("Tag_Profile_Custom"))
              return { valid: false, tips: "The prefix of keys of the custom profile key-value pairs (which is profileCustomField) must be Tag_Profile_Custom" };
            if (!m2(a3.value))
              return { valid: false, tips: "The type of values of the custom profile key-value pairs (which is profileCustomField) must be String" };
          }
        for (t3 in e3)
          if (Object.prototype.hasOwnProperty.call(e3, t3)) {
            if ("profileCustomField" === t3)
              continue;
            if (S2(e3[t3]) && !m2(e3[t3]) && !R2(e3[t3])) {
              o3 = "key:" + t3 + ", invalid value:" + e3[t3], n3 = false;
              continue;
            }
            switch (t3) {
              case "nick":
                m2(e3[t3]) || (n3 = !(o3 = "nick must be a string")), 500 < gt2(e3[t3]) && (o3 = "nick name limited: must less than or equal to ".concat(500, " bytes, current size: ").concat(gt2(e3[t3]), " bytes"), n3 = false);
                break;
              case "gender":
                vt2(Qe2, e3.gender) || (o3 = "key:gender, invalid value:" + e3.gender, n3 = false);
                break;
              case "birthday":
                R2(e3.birthday) || (n3 = !(o3 = "birthday must be a number"));
                break;
              case "location":
                m2(e3.location) || (n3 = !(o3 = "location must be a string"));
                break;
              case "selfSignature":
                m2(e3.selfSignature) || (n3 = !(o3 = "selfSignature must be a string"));
                break;
              case "allowType":
                vt2(et2, e3.allowType) || (o3 = "key:allowType, invalid value:" + e3.allowType, n3 = false);
                break;
              case "language":
                R2(e3.language) || (n3 = !(o3 = "language must be a number"));
                break;
              case "avatar":
                m2(e3.avatar) || (n3 = !(o3 = "avatar must be a string"));
                break;
              case "messageSettings":
                0 !== e3.messageSettings && 1 !== e3.messageSettings && (n3 = !(o3 = "messageSettings must be 0 or 1"));
                break;
              case "adminForbidType":
                vt2($e2, e3.adminForbidType) || (o3 = "key:adminForbidType, invalid value:" + e3.adminForbidType, n3 = false);
                break;
              case "level":
                R2(e3.level) || (n3 = !(o3 = "level must be a number"));
                break;
              case "role":
                R2(e3.role) || (n3 = !(o3 = "role must be a number"));
                break;
              default:
                o3 = "unknown key:" + t3 + "  " + e3[t3], n3 = false;
            }
          }
        return { valid: n3, tips: o3 };
      } }]), oa), ti2 = (e2(na, [{ key: "set", value: function(e3) {
        var t3;
        this.map.size >= this.MAX_LENGTH && (t3 = this.map.entries().next().value[0], this.map.delete(t3)), this.map.set(e3, 1);
      } }, { key: "has", value: function(e3) {
        return this.map.has(e3);
      } }, { key: "delete", value: function(e3) {
        this.has(e3) && this.map.delete(e3);
      } }, { key: "reset", value: function() {
        this.map.clear();
      } }]), na), ni2 = ["groupID", "name", "avatar", "type", "introduction", "notification", "ownerID", "selfInfo", "createTime", "infoSequence", "lastInfoTime", "lastMessage", "nextMessageSeq", "memberNum", "maxMemberNum", "memberList", "joinOption", "groupCustomField", "muteAllMembers", "isSupportTopic", "inviteOption", "_lastRevokedTime"], oi2 = (e2(ta, [{ key: "memberNum", get: function() {
        return this.memberCount;
      }, set: function(e3) {
      } }, { key: "maxMemberNum", get: function() {
        return this.maxMemberCount;
      }, set: function(e3) {
      } }, { key: "_initGroup", value: function(e3) {
        for (var t3 in e3)
          ni2.indexOf(t3) < 0 || ("selfInfo" !== t3 ? ("memberNum" === t3 && (this.memberCount = e3[t3]), "maxMemberNum" === t3 && (this.maxMemberCount = e3[t3]), "isSupportTopic" !== t3 ? this[t3] = e3[t3] : this.isSupportTopic = 1 === e3[t3]) : this.updateSelfInfo(e3[t3]));
      } }, { key: "updateGroup", value: function(e3) {
        var t3 = this, e3 = (e3.appid = void 0, e3.grossTopicNextMsgSeq = void 0, e3.selfInfo && (e3.selfInfo.grossTopicReadSeq = void 0), JSON.parse(JSON.stringify(e3)));
        e3.lastMsgTime && (this.lastMessage.lastTime = e3.lastMsgTime), N2(e3.muteAllMembers) || ("On" === e3.muteAllMembers ? e3.muteAllMembers = true : e3.muteAllMembers = false), e3.groupCustomField && kt2(this.groupCustomField, e3.groupCustomField), N2(e3.memberNum) || (this.memberCount = e3.memberNum), N2(e3.maxMemberNum) || (this.maxMemberCount = e3.maxMemberNum), N2(e3.isSupportTopic) || (this.isSupportTopic = R2(e3.isSupportTopic) ? 1 === e3.isSupportTopic : e3.isSupportTopic), _t3(this, e3, ["members", "errorCode", "lastMsgTime", "groupCustomField", "memberNum", "maxMemberNum", "isSupportTopic"]), O2(e3.members) && 0 < e3.members.length && e3.members.forEach(function(e4) {
          e4.userID === t3.selfInfo.userID && _t3(t3.selfInfo, e4, ["sequence"]);
        });
      } }, { key: "updateSelfInfo", value: function(e3) {
        e3 = { nameCard: e3.nameCard, joinTime: e3.joinTime, role: e3.role, messageRemindType: e3.messageRemindType, readedSequence: e3.readedSequence, excludedUnreadSequenceList: e3.excludedUnreadSequenceList };
        _t3(this.selfInfo, y2({}, e3), [], ["", null, void 0, 0, NaN]);
      } }, { key: "setSelfNameCard", value: function(e3) {
        this.selfInfo.nameCard = e3;
      } }]), ta), ii2 = (e2(ea, [{ key: "toAccount", get: function() {
        return this.conversationID.startsWith(A2.CONV_C2C) ? this.conversationID.replace(A2.CONV_C2C, "") : this.conversationID.startsWith(A2.CONV_GROUP) ? this.conversationID.replace(A2.CONV_GROUP, "") : "";
      } }, { key: "_initProfile", value: function(t3) {
        var n3 = this;
        Object.keys(t3).forEach(function(e3) {
          switch (e3) {
            case "userProfile":
              n3.userProfile = t3.userProfile;
              break;
            case "groupProfile":
              n3.groupProfile = t3.groupProfile;
          }
        }), N2(this.userProfile) && this.type === A2.CONV_C2C ? this.userProfile = new ei2({ userID: t3.conversationID.replace("C2C", "") }) : N2(this.groupProfile) && this.type === A2.CONV_GROUP && (this.groupProfile = new oi2({ groupID: t3.conversationID.replace("GROUP", "") }));
      } }, { key: "updateUnreadCount", value: function(e3) {
        var t3 = e3.nextUnreadCount, n3 = e3.isFromGetConversations, e3 = e3.isUnreadC2CMessage;
        N2(t3) || (Ot2(this.subType) ? this.unreadCount = 0 : n3 && this.type === A2.CONV_GROUP || n3 && this.type === A2.CONV_TOPIC || e3 && this.type === A2.CONV_C2C ? this.unreadCount = t3 : this.unreadCount = this.unreadCount + t3);
      } }, { key: "updateLastMessage", value: function(e3) {
        this.lastMessage = Ko(e3);
      } }, { key: "updateGroupAtInfoList", value: function(e3) {
        var t3;
        this._isNeedMergeGroupAtInfo(e3) || (-1 !== (t3 = (W2(t3 = e3.groupAtType) || j2(t3) || J2(t3) || X2()).slice(0)).indexOf(A2.CONV_AT_ME) && -1 !== t3.indexOf(A2.CONV_AT_ALL) && (t3 = [A2.CONV_AT_ALL_AT_ME]), t3 = { from: e3.from, groupID: e3.groupID, topicID: e3.topicID, messageSequence: e3.sequence, atTypeArray: t3, __random: e3.__random, __sequence: e3.__sequence }, this.groupAtInfoList.push(t3));
      } }, { key: "_isNeedMergeGroupAtInfo", value: function(t3) {
        var n3, e3 = t3.groupID, o3 = t3.sequence;
        return !!Nt2({ groupID: e3 }) && (n3 = false, this.groupAtInfoList.forEach(function(e4) {
          e4.messageSequence === o3 && (-1 < e4.atTypeArray.indexOf(A2.CONV_AT_ME) && -1 < t3.groupAtType.indexOf(A2.CONV_AT_ALL) && (e4.atTypeArray = [A2.CONV_AT_ALL_AT_ME]), -1 < e4.atTypeArray.indexOf(A2.CONV_AT_ALL) && -1 < t3.groupAtType.indexOf(A2.CONV_AT_ME) && (e4.atTypeArray = [A2.CONV_AT_ALL_AT_ME], e4.__random = t3.__random, e4.__sequence = t3.__sequence), n3 = true);
        }), n3);
      } }, { key: "clearGroupAtInfoList", value: function() {
        this.groupAtInfoList.length = 0;
      } }, { key: "reduceUnreadCount", value: function() {
        return 1 <= this.unreadCount && (--this.unreadCount, true);
      } }, { key: "isLastMessageRevoked", value: function(e3) {
        var t3 = e3.sequence, e3 = e3.time;
        return this.type === A2.CONV_C2C && t3 === this.lastMessage.lastSequence && e3 === this.lastMessage.lastTime || this.type === A2.CONV_GROUP && t3 === this.lastMessage.lastSequence;
      } }, { key: "setLastMessageRevoked", value: function(e3) {
        this.lastMessage.isRevoked = e3;
      } }, { key: "setLastMessageRevoker", value: function(e3) {
        this.lastMessage.revoker = e3;
      } }, { key: "setDraftText", value: function(e3) {
        this.draftText = e3;
      } }]), ea), ai2 = (F2(r2 = {}, A2.MSG_REMIND_ACPT_AND_NOTE, 0), F2(r2, A2.MSG_REMIND_DISCARD, 1), F2(r2, A2.MSG_REMIND_ACPT_NOT_NOTE, 2), r2), si2 = (e2($i2, [{ key: "onAllRcvMsgOptNotify", value: function(e3) {
        e3 = this._handleResult(e3);
        this._convM.emitOEvt(h2.ALL_RECEIVE_MESSAGE_OPT_UPDATED, e3);
      } }, { key: "getC2CMsgRemindType", value: function(t3) {
        var n3 = this, o3 = "".concat(this._n, ".getC2CMsgRemindType");
        return this._convM.req({ P: k2.GET_C2C_PEER_MUTE_NOTIFICATIONS, data: { toAccount: this._convM.getMyUserID(), userIDList: t3 } }).then(function(e3) {
          M2.l("".concat(o3, " ok. userIDList:").concat(t3));
          e3 = e3.data.muteFlagList;
          n3._convM.onC2CMsgRemindTypeFetched(e3);
        }).catch(function(e3) {
          M2.e("".concat(o3, " failed. error:"), e3);
        });
      } }, { key: "set", value: function(e3) {
        return e3.groupID ? this._setGroupMsgRemindType(e3) : O2(e3.userIDList) ? this._setC2CMsgRemindType(e3) : void 0;
      } }, { key: "_setGroupMsgRemindType", value: function(t3) {
        var n3 = this, o3 = "".concat(this._n, ".").concat("_setGroupMsgRemindType"), e3 = t3.groupID, i3 = t3.messageRemindType, a3 = "groupID:".concat(e3, " messageRemindType:").concat(i3), s3 = new G2("_setGroupMsgRemindType"), r3 = (s3.setMessage(a3), this._get(7));
        return r3 ? r3.modifyGroupMemberInfo({ groupID: e3, messageRemindType: i3, userID: this._convM.getMyUserID() }).then(function() {
          s3.end(), M2.l("".concat(o3, " ok. ").concat(a3));
          var e4 = n3.onGroupMsgRemindTypeUpdated(t3);
          return n3._convM.onTotalUnreadCountUpdate(), C2(e4);
        }).catch(function(e4) {
          return s3.setError(e4).end(), M2.e("".concat(o3, " failed. error:"), e4), D2(e4);
        }) : D2({ code: L2.NO_MODULE });
      } }, { key: "onGroupMsgRemindTypeUpdated", value: function(e3) {
        var t3, n3, o3 = e3.groupID, e3 = e3.messageRemindType, i3 = (M2.l("".concat(this._n, ".onGroupMsgRemindTypeUpdated groupID:").concat(o3, " messageRemindType:").concat(e3)), this._get(7).getLocalGroupProfile(o3));
        return i3 && (i3.selfInfo.messageRemindType = e3), Gt2(o3) ? (t3 = Jt2(n3 = o3), (n3 = this._get(10).getLocalTopic(t3, n3)) && n3.updateSelfInfo({ messageRemindType: e3 }) && this._convM.emitOEvt(h2.TOPIC_UPDATED, { groupID: t3, topic: n3 }), { topic: n3 }) : (this._convM.patchMsgRemindType({ ID: o3, isC2CConversation: false, messageRemindType: e3 }) && this._emitConvUpdate(), { group: i3 });
      } }, { key: "_setC2CMsgRemindType", value: function(e3) {
        var i3 = this, a3 = "".concat(this._n, ".").concat("_setC2CMsgRemindType"), t3 = e3.userIDList, s3 = e3.messageRemindType, r3 = t3.slice(0, 30), e3 = ai2[s3] || 0, c3 = "userIDList:".concat(r3, " messageRemindType:").concat(s3), u3 = new G2("_setC2CMsgRemindType");
        return u3.setMessage(c3), this._convM.req({ P: k2.SET_C2C_PEER_MUTE_NOTIFICATIONS, data: { userIDList: r3, muteFlag: e3 } }).then(function(e4) {
          u3.end();
          var e4 = e4.data.errorList, t4 = [], n3 = [], e4 = (O2(e4) && e4.forEach(function(e5) {
            t4.push(e5.userID), n3.push({ userID: e5.userID, code: e5.errorCode });
          }), r3.filter(function(e5) {
            return -1 === t4.indexOf(e5);
          })), o3 = (M2.l("".concat(a3, " ok. ").concat(c3, " successUserIDList:").concat(e4, " failureUserIDList:").concat(JSON.stringify(n3))), 0);
          return e4.forEach(function(e5) {
            i3._convM.patchMsgRemindType({ ID: e5, isC2CConversation: true, messageRemindType: s3 }) && (o3 += 1);
          }), 1 <= o3 && i3._emitConvUpdate(), r3.length = t4.length = 0, i3._convM.onTotalUnreadCountUpdate(), T2({ successUserIDList: e4.map(function(e5) {
            return { userID: e5 };
          }), failureUserIDList: n3 });
        }).catch(function(e4) {
          return u3.setError(e4).end(), M2.e("".concat(a3, " failed. error:"), e4), D2(e4);
        });
      } }, { key: "_get", value: function(e3) {
        return this._convM.get(e3);
      } }, { key: "_emitConvUpdate", value: function() {
        this._convM.emitConvUpdate(true, false);
      } }, { key: "setAllRcvMsgOpt", value: function(e3) {
        var t3 = "".concat(this._n, ".").concat("setAllRcvMsgOpt"), n3 = e3.messageRemindType, n3 = void 0 === n3 ? A2.MSG_REMIND_ACPT_NOT_NOTE : n3, o3 = e3.isRepeated, o3 = void 0 === o3 || o3, i3 = this._calcStartAndEndTime(e3), a3 = i3.startTime, a3 = void 0 === a3 ? 0 : a3, i3 = i3.endTime, i3 = void 0 === i3 ? 0 : i3, e3 = JSON.stringify(e3), s3 = new G2("setAllRcvMsgOpt");
        return s3.setMessage(e3), M2.l("".concat(t3, " options:").concat(e3)), this._convM.req({ P: k2.SET_ALL_RECEIVE_MSG_OPT, data: { messageRemindType: ai2[n3], startTime: a3, endTime: i3, isRepeated: o3 ? 1 : 0 } }).then(function(e4) {
          return s3.end(), M2.l("".concat(t3, " ok.")), C2(e4);
        }).catch(function(e4) {
          return s3.setError(e4).end(), M2.e("".concat(t3, " failed. error:"), e4), D2(e4);
        });
      } }, { key: "_calcStartAndEndTime", value: function(e3) {
        var t3 = e3.startHour, t3 = void 0 === t3 ? 0 : t3, n3 = e3.startMinute, n3 = void 0 === n3 ? 0 : n3, o3 = e3.startSecond, o3 = void 0 === o3 ? 0 : o3, i3 = e3.duration, i3 = void 0 === i3 ? 0 : i3, e3 = e3.isRepeated, e3 = void 0 === e3 || e3, a3 = /* @__PURE__ */ new Date(), s3 = a3.getFullYear(), r3 = a3.getMonth(), a3 = a3.getDate(), s3 = Math.round(new Date(s3, r3, a3, t3, n3, o3).getTime() / 1e3);
        return { startTime: s3, endTime: e3 && 86400 <= i3 ? s3 + 86400 : s3 + i3 };
      } }, { key: "getAllRcvMsgOpt", value: function() {
        var t3 = this, n3 = "".concat(this._n, ".").concat("getAllRcvMsgOpt"), o3 = new G2("getAllRcvMsgOpt");
        return this._convM.req({ P: k2.GET_ALL_RECEIVE_MSG_OPT, data: { toAccount: this._convM.getMyUserID() } }).then(function(e3) {
          e3 = e3.data, o3.setMessage(JSON.stringify(e3)).end(), M2.l("".concat(n3, " ok. data:").concat(JSON.stringify(e3))), e3 = t3._handleResult(e3);
          return C2(e3);
        }).catch(function(e3) {
          return o3.setError(e3).end(), M2.e("".concat(n3, " failed. error:"), e3), D2(e3);
        });
      } }, { key: "_handleResult", value: function(e3) {
        var t3 = e3.messageRemindType, n3 = e3.startTime, o3 = e3.endTime, e3 = e3.isRepeated, i3 = A2.MSG_REMIND_ACPT_AND_NOTE;
        return 1 === t3 && (i3 = A2.MSG_REMIND_DISCARD), { messageRemindType: i3 = 2 === t3 ? A2.MSG_REMIND_ACPT_NOT_NOTE : i3, startTime: n3, endTime: o3, isRepeated: 1 === e3 };
      } }, { key: "reset", value: function() {
        M2.l("".concat(this._n, ".reset"));
      } }]), $i2), ri2 = (e2(Qi2, [{ key: "setConvCustomData", value: function(e3) {
        var i3 = this, a3 = "".concat(this._n, ".").concat("setConvCustomData"), t3 = e3.conversationIDList, s3 = e3.customData, r3 = (M2.l("".concat(a3, " options:"), e3), new G2("setConvCustomData")), n3 = (r3.setMessage(JSON.stringify(e3)), { fromAccount: this._getMyUserID(), itemList: [] }), c3 = [], u3 = [];
        return t3.forEach(function(e4) {
          var t4;
          return i3._hasLocalConv(e4) ? Pt2(e4) || Ut2(e4) ? (t4 = { operationType: 2, contactItem: void 0, customMark: s3 }, Pt2(e4) ? t4.contactItem = { type: 1, toAccount: e4.replace(A2.CONV_C2C, "") } : Ut2(e4) && (t4.contactItem = { type: 2, groupID: e4.replace(A2.CONV_GROUP, "") }), void n3.itemList.push(t4)) : (i3._onConvIDInvalid(u3, e4), true) : (i3._onConvNotFound(u3, e4), true);
        }), u3.length === t3.length ? T2({ successConversationIDList: c3, failureConversationIDList: u3 }) : this._convM.req({ P: k2.SET_CONV_CUSTOM_DATA, data: n3 }).then(function(e4) {
          r3.end(), M2.l("".concat(a3, " ok"));
          var t4, n4, o3, e4 = e4.data.resultItem;
          return O2(e4) && (o3 = false, e4.forEach(function(e5) {
            t4 = i3._concatConvID(e5.contactItem), 0 === e5.resultCode ? (c3.push(t4), (n4 = i3._getLocalConv(t4)) && n4.customData !== s3 && (n4.customData = s3, o3 = true)) : u3.push({ conversationID: t4, code: e5.resultCode, message: e5.resultInfo });
          }), true === o3) && i3._emitConvUpdate(), C2({ successConversationIDList: c3, failureConversationIDList: u3 });
        }).catch(function(e4) {
          return r3.setError(e4).end(), M2.e("".concat(a3, " failed. error:"), e4), D2(e4);
        });
      } }, { key: "markConv", value: function(e3) {
        var t3, n3, a3, s3, r3, o3, i3, c3, u3, l3, d3 = this;
        return this._convM.canIUse(_2.CONV_MARK) ? (t3 = "".concat(this._n, ".").concat("markConv"), n3 = e3.conversationIDList, a3 = e3.markType, s3 = e3.enableMark, M2.l("".concat(t3, " options:"), e3), r3 = new G2("markConv"), o3 = void r3.setMessage(JSON.stringify(e3)), i3 = void 0, e3 = this._getFlagBit(a3), true === s3 ? i3 = [e3] : o3 = [e3], c3 = { fromAccount: this._getMyUserID(), itemList: [] }, u3 = [], l3 = [], n3.forEach(function(e4) {
          var t4;
          return d3._hasLocalConv(e4) ? Pt2(e4) || Ut2(e4) ? (t4 = { operationType: 1, contactItem: void 0, clearMark: o3, setMark: i3 }, Pt2(e4) ? t4.contactItem = { type: 1, toAccount: e4.replace(A2.CONV_C2C, "") } : Ut2(e4) && (t4.contactItem = { type: 2, groupID: e4.replace(A2.CONV_GROUP, "") }), void c3.itemList.push(t4)) : (d3._onConvIDInvalid(l3, e4), true) : (d3._onConvNotFound(l3, e4), true);
        }), l3.length === n3.length ? T2({ successConversationIDList: u3, failureConversationIDList: l3 }) : this._convM.req({ P: k2.MARK_CONV, data: c3 }).then(function(e4) {
          r3.end(), M2.l("".concat(t3, " ok"));
          var n4, o4, i4, e4 = e4.data.resultItem;
          return O2(e4) && (i4 = false, e4.forEach(function(e5) {
            var t4;
            n4 = d3._concatConvID(e5.contactItem), 0 === e5.resultCode ? (u3.push(n4), (o4 = d3._getLocalConv(n4)) && (t4 = o4.markList.indexOf(a3), true === s3 ? -1 === t4 && (o4.markList.push(a3), i4 = true) : -1 !== t4 && (o4.markList.splice(t4, 1), i4 = true))) : l3.push({ conversationID: n4, code: e5.resultCode, message: e5.resultInfo });
          }), true === i4) && d3._emitConvUpdate(), C2({ successConversationIDList: u3, failureConversationIDList: l3 });
        }).catch(function(e4) {
          return r3.setError(e4).end(), M2.e("".concat(t3, " failed. error:"), e4), D2(e4);
        })) : this._convM.noUse("markConv");
      } }, { key: "getLocalConvGroupList", value: function() {
        var e3 = this;
        return M2.l("".concat(this._n, ".getLocalConvGroupList pagingStatus:").concat(this._pagingStatus)), this._pagingStatus === Un2 ? this.getRemoteConvGroupList().then(function() {
          return C2(p2(e3._convGroupMap.values()));
        }) : T2(p2(this._convGroupMap.values()));
      } }, { key: "searchConvGroupAndMark", value: function(e3, t3) {
        var n3 = this, o3 = "".concat(this._n, ".searchConvGroupAndMark"), i3 = [];
        return e3.forEach(function(e4) {
          1 === t3 ? i3.push({ type: 1, toAccount: e4 }) : 2 === t3 && i3.push({ type: 2, groupID: e4 });
        }), M2.l("".concat(o3, " type:").concat(t3, " list:"), e3), this._convM.req({ P: k2.SEARCH_CONV_GRP_MARK, data: { fromAccount: this._getMyUserID(), contactItem: i3 } }).then(function(e4) {
          var e4 = e4.data, t4 = e4.contactItem, e4 = e4.groupItem;
          M2.l("".concat(o3, " ok. contactItem:"), t4, "groupItem:", e4), n3._fillConvGroupMap(e4), n3._handleContactItem(t4), n3._emitConvUpdate();
        }).catch(function(e4) {
          M2.w("".concat(o3, " failed. error:"), e4);
        });
      } }, { key: "_fillConvGroupMap", value: function(e3) {
        var n3 = this;
        O2(e3) && e3.forEach(function(e4) {
          var t3 = e4.convGroupID, e4 = e4.groupName;
          n3._convGroupMap.set(t3, e4);
        });
      } }, { key: "_handleContactItem", value: function(e3) {
        var a3, s3 = this;
        O2(e3) && e3.forEach(function(e4) {
          var t3 = [], n3 = e4.standardMark, o3 = e4.customData, i3 = e4.convGroupIDList;
          O2(i3) && i3.forEach(function(e5) {
            s3._convGroupMap.has(e5) && t3.push(s3._convGroupMap.get(e5));
          }), a3 = s3._concatConvID(e4), (a3 = s3._getLocalConv(a3)) && (a3.markList = Zt2(n3), a3.customData = o3 || "", a3.conversationGroupList = [].concat(t3));
        });
      } }, { key: "getRemoteConvGroupList", value: function() {
        var i3 = this, a3 = "".concat(this._n, ".getRemoteConvGroupList");
        return this._pagingStatus = Gn2, this._convM.req({ P: k2.GET_CONV_GRP_LIST, data: { fromAccount: this._getMyUserID(), startIndex: this._startIndex } }).then(function(e3) {
          var e3 = e3.data, t3 = e3.completeFlag, n3 = e3.contactItem, o3 = e3.nextStartIndex, o3 = void 0 === o3 ? 0 : o3, e3 = e3.groupItem;
          if (i3._startIndex = o3, M2.l("".concat(a3, " completeFlag:").concat(t3, " nextStartIndex:").concat(o3, ", groupItem:"), e3, "contactItem:", n3), i3._fillConvGroupMap(e3), i3._handleContactItem(n3), 0 === t3)
            return i3.getRemoteConvGroupList();
          1 === t3 && (i3._pagingStatus = Pn2, i3._emitConvUpdate(), i3._emitConvGroupListUpdate());
        }).catch(function(e3) {
          i3._pagingStatus = Un2, M2.w("".concat(a3, " failed. error:"), e3);
        });
      } }, { key: "createConvGroup", value: function(e3) {
        var a3, s3, r3, t3, c3, u3, l3 = this;
        return this._convM.canIUse(_2.CONV_GROUP) ? (a3 = "".concat(this._n, ".").concat("createConvGroup"), M2.l("".concat(a3, " options:"), e3), (s3 = new G2("createConvGroup")).setMessage(JSON.stringify(e3)), r3 = e3.groupName, e3 = e3.conversationIDList, t3 = { fromAccount: this._getMyUserID(), itemList: [{ groupName: r3, contactItem: [] }] }, c3 = [], u3 = [], e3.forEach(function(e4) {
          return l3._hasLocalConv(e4) ? Pt2(e4) || Ut2(e4) ? void (Pt2(e4) ? t3.itemList[0].contactItem.push({ type: 1, toAccount: e4.replace(A2.CONV_C2C, "") }) : Ut2(e4) && t3.itemList[0].contactItem.push({ type: 2, groupID: e4.replace(A2.CONV_GROUP, "") })) : (l3._onConvIDInvalid(u3, e4), true) : (l3._onConvNotFound(u3, e4), true);
        }), u3.length === e3.length ? T2({ successConversationIDList: c3, failureConversationIDList: u3 }) : this._convM.req({ P: k2.CREATE_CONV_GRP, data: t3 }).then(function(e4) {
          s3.end(), M2.l("".concat(a3, " ok"));
          var t4, n3, o3, e4 = e4.data.groupResultItem[0], i3 = e4.groupItem, e4 = e4.resultItem;
          return f2(i3) && (l3._convGroupMap.set(i3.convGroupID, i3.groupName), l3._emitConvGroupListUpdate()), O2(e4) && (o3 = false, e4.forEach(function(e5) {
            t4 = l3._concatConvID(e5.contactItem), 0 === e5.resultCode ? (c3.push(t4), (n3 = l3._getLocalConv(t4)) && -1 === n3.conversationGroupList.indexOf(r3) && (n3.conversationGroupList.push(r3), o3 = true)) : u3.push({ conversationID: t4, code: e5.resultCode, message: e5.resultInfo });
          }), true === o3) && (l3._emitConvUpdate(), l3._emitConvGroupListUpdate()), C2({ successConversationIDList: c3, failureConversationIDList: u3 });
        }).catch(function(e4) {
          return s3.setError(e4).end(), M2.e("".concat(a3, " failed. error:"), e4), D2(e4);
        })) : this._convM.noUse("createConvGroup");
      } }, { key: "deleteConvGroup", value: function(n3) {
        var o3, i3, a3 = this;
        return this._convM.canIUse(_2.CONV_GROUP) ? (o3 = "".concat(this._n, ".").concat("deleteConvGroup"), M2.l("".concat(o3, " groupName:").concat(n3)), (i3 = new G2("deleteConvGroup")).setMessage(n3), this._convM.req({ P: k2.DEL_CONV_GRP, data: { fromAccount: this._getMyUserID(), groupName: [n3] } }).then(function(e3) {
          i3.end(), M2.l("".concat(o3, " ok"));
          var t3, e3 = e3.data.groupItem;
          O2(e3) && (t3 = false, e3.forEach(function(e4) {
            a3._convGroupMap.has(e4.convGroupID) && (a3._convGroupMap.delete(e4.convGroupID), t3 = true);
          }), true === t3) && a3._emitConvGroupListUpdate(), a3._eraseFromConversationGroupList([n3]);
        }).catch(function(e3) {
          return i3.setError(e3).end(), M2.e("".concat(o3, " failed. error:"), e3), D2(e3);
        })) : this._convM.noUse("deleteConvGroup");
      } }, { key: "renameConvGroup", value: function(e3) {
        var i3, a3, s3, r3, c3 = this;
        return this._convM.canIUse(_2.CONV_GROUP) ? (i3 = "".concat(this._n, ".").concat("renameConvGroup"), M2.l("".concat(i3, " options:"), e3), (a3 = new G2("renameConvGroup")).setMessage(JSON.stringify(e3)), s3 = e3.oldName, r3 = e3.newName, this._convM.req({ P: k2.RENAME_CONV_GRP, data: { fromAccount: this._getMyUserID(), updateType: 1, updateGroup: { updateGroupType: 1, oldName: s3, newName: r3 } } }).then(function(e4) {
          a3.end(), M2.l("".concat(i3, " ok"));
          e4 = e4.data.updateGroupResult.convGroupID;
          c3._convGroupMap.set(e4, r3), c3._emitConvGroupListUpdate();
          var t3, n3, e4 = c3._convM.getLocalConvList(), o3 = false;
          e4.forEach(function(e5) {
            t3 = e5.conversationGroupList, -1 !== (n3 = t3.indexOf(s3)) && (t3.splice(n3, 1, r3), o3 = true);
          }), true === o3 && c3._emitConvUpdate();
        }).catch(function(e4) {
          return a3.setError(e4).end(), M2.e("".concat(i3, " failed. error:"), e4), D2(e4);
        })) : this._convM.noUse("renameConvGroup");
      } }, { key: "addConvsToGroup", value: function(e3) {
        var i3, a3, t3, s3, n3, r3, c3, u3 = this;
        return this._convM.canIUse(_2.CONV_GROUP) ? (i3 = "".concat(this._n, ".").concat("addConvsToGroup"), M2.l("".concat(i3, " options:"), e3), (a3 = new G2("addConvsToGroup")).setMessage(JSON.stringify(e3)), t3 = e3.conversationIDList, s3 = e3.groupName, n3 = { fromAccount: this._getMyUserID(), updateType: 1, updateGroup: { updateGroupType: 2, groupName: s3, updateItem: [] } }, r3 = [], c3 = [], t3.forEach(function(e4) {
          return u3._hasLocalConv(e4) ? Pt2(e4) || Ut2(e4) ? void (Pt2(e4) ? n3.updateGroup.updateItem.push({ operationType: 1, contactItem: { type: 1, toAccount: e4.replace(A2.CONV_C2C, "") } }) : Ut2(e4) && n3.updateGroup.updateItem.push({ operationType: 1, contactItem: { type: 2, groupID: e4.replace(A2.CONV_GROUP, "") } })) : (u3._onConvIDInvalid(c3, e4), true) : (u3._onConvNotFound(c3, e4), true);
        }), c3.length === t3.length ? T2({ successConversationIDList: r3, failureConversationIDList: c3 }) : this._convM.req({ P: k2.ADD_CONV_TO_GRP, data: n3 }).then(function(e4) {
          a3.end(), M2.l("".concat(i3, " ok"));
          var t4, n4, o3, e4 = e4.data.updateGroupResult.contactResultItem;
          return O2(e4) && (o3 = false, e4.forEach(function(e5) {
            t4 = u3._concatConvID(e5.contactItem), 0 === e5.resultCode ? (n4 = u3._getLocalConv(t4)) && -1 === n4.conversationGroupList.indexOf(s3) && (n4.conversationGroupList.push(s3), r3.push(t4), o3 = true) : c3.push({ conversationID: t4, code: e5.resultCode, message: e5.resultInfo });
          }), true === o3) && (u3._emitConvUpdate(), u3._emitConvInGroupUpdate(s3)), C2({ successConversationIDList: r3, failureConversationIDList: c3 });
        }).catch(function(e4) {
          return a3.setError(e4).end(), M2.e("".concat(i3, " failed. error:"), e4), D2(e4);
        })) : this._convM.noUse("addConvsToGroup");
      } }, { key: "deleteConvsFromGroup", value: function(e3) {
        var t3, a3, n3, s3, o3, r3, c3, u3 = this, i3 = "deleteConvsFromGroup";
        return this._convM.canIUse(_2.CONV_GROUP) ? (t3 = "".concat(this._n, ".").concat(i3), M2.l("".concat(t3, " options:"), e3), (a3 = new G2(i3)).setMessage(JSON.stringify(e3)), n3 = e3.conversationIDList, s3 = e3.groupName, o3 = { fromAccount: this._getMyUserID(), updateType: 1, updateGroup: { updateGroupType: 2, groupName: s3, updateItem: [] } }, r3 = [], c3 = [], n3.forEach(function(e4) {
          return u3._hasLocalConv(e4) ? Pt2(e4) || Ut2(e4) ? void (Pt2(e4) ? o3.updateGroup.updateItem.push({ operationType: 2, contactItem: { type: 1, toAccount: e4.replace(A2.CONV_C2C, "") } }) : Ut2(e4) && o3.updateGroup.updateItem.push({ operationType: 2, contactItem: { type: 2, groupID: e4.replace(A2.CONV_GROUP, "") } })) : (u3._onConvIDInvalid(c3, e4), true) : (u3._onConvNotFound(c3, e4), true);
        }), c3.length === n3.length ? T2({ successConversationIDList: r3, failureConversationIDList: c3 }) : this._convM.req({ P: k2.DEL_CONV_FROM_GRP, data: o3 }).then(function(e4) {
          a3.end(), M2.l("".concat(t3, " ok"));
          var n4, o4, i4, e4 = e4.data.updateGroupResult.contactResultItem;
          return O2(e4) && (i4 = false, e4.forEach(function(e5) {
            var t4;
            n4 = u3._concatConvID(e5.contactItem), 0 === e5.resultCode ? (o4 = u3._getLocalConv(n4)) && -1 !== (t4 = o4.conversationGroupList.indexOf(s3)) && (o4.conversationGroupList.splice(t4, 1), r3.push(n4), i4 = true) : c3.push({ conversationID: n4, code: e5.resultCode, message: e5.resultInfo });
          }), true === i4) && (u3._emitConvUpdate(), u3._emitConvInGroupUpdate(s3)), C2({ successConversationIDList: r3, failureConversationIDList: c3 });
        }).catch(function(e4) {
          return a3.setError(e4).end(), M2.e("".concat(t3, " failed. error:"), e4), D2(e4);
        })) : this._convM.noUse(i3);
      } }, { key: "onConvMarkUpdated", value: function(e3) {
        var i3, a3, s3 = this;
        S2(e3) || (M2.l("".concat(this._n, ".onConvMarkUpdated markItemList:"), e3), a3 = false, e3.forEach(function(e4) {
          var t3 = e4.recentContactItem, n3 = e4.optType, o3 = e4.standardMark, e4 = e4.customMark;
          i3 = s3._concatConvID(t3), (i3 = s3._getLocalConv(i3)) && (1 === n3 ? a3 = s3._diffStandardMark(i3, o3) : 2 === n3 ? a3 = s3._diffCustomMark(i3, e4) : 3 === n3 && (t3 = s3._diffStandardMark(i3, o3), n3 = s3._diffCustomMark(i3, e4), a3 = t3 || n3));
        }), true === a3 && this._emitConvUpdate());
      } }, { key: "_diffStandardMark", value: function(e3, t3) {
        var t3 = Zt2(t3), n3 = false;
        return true !== function(e4, t4) {
          if (e4 !== t4) {
            if (!e4 || !t4)
              return false;
            if (e4.length !== t4.length)
              return false;
            for (var n4 = 0, o3 = e4.length; n4 < o3; n4++)
              if (e4[n4] !== t4[n4])
                return false;
          }
          return true;
        }(e3.markList, t3) && (e3.markList = t3, n3 = true), n3;
      } }, { key: "_diffCustomMark", value: function(e3, t3) {
        var n3 = false;
        return e3.customData !== t3 && void 0 !== t3 && (e3.customData = t3, n3 = true), n3;
      } }, { key: "onConvGroupCreated", value: function(e3) {
        var a3 = this, s3 = (M2.l("".concat(this._n, ".onConvGroupCreated resultList:"), e3), false), r3 = false;
        O2(e3) && (e3.forEach(function(e4) {
          var t3 = e4.msgGroupItem, n3 = t3.groupID, o3 = t3.groupName;
          a3._convGroupMap.get(n3) !== o3 && (a3._convGroupMap.set(n3, o3), r3 = true);
          var i3, t3 = e4.msgRecentContactItem;
          O2(t3) && t3.forEach(function(e5) {
            i3 = a3._concatConvID(e5), (i3 = a3._getLocalConv(i3)) && -1 === i3.conversationGroupList.indexOf(o3) && (i3.conversationGroupList.push(o3), s3 = true);
          });
        }), true === s3 && this._emitConvUpdate(), true === r3) && this._emitConvGroupListUpdate();
      } }, { key: "onConvGroupDeleted", value: function(e3) {
        var n3, o3 = this, i3 = (M2.l("".concat(this._n, ".onConvGroupDeleted groupItemList:"), e3), []);
        O2(e3) && (n3 = false, e3.forEach(function(e4) {
          var t3 = e4.groupID, e4 = e4.groupName;
          o3._convGroupMap.has(t3) && (o3._convGroupMap.delete(t3), n3 = true, i3.push(e4));
        }), true === n3) && this._emitConvGroupListUpdate(), this._eraseFromConversationGroupList(i3);
      } }, { key: "_eraseFromConversationGroupList", value: function(t3) {
        S2(t3) || (this._convM.getLocalConvList().forEach(function(e3) {
          e3.conversationGroupList = e3.conversationGroupList.filter(function(e4) {
            return !t3.includes(e4);
          });
        }), this._emitConvUpdate());
      } }, { key: "onConvGroupNameUpdated", value: function(e3) {
        M2.l("".concat(this._n, ".onConvGroupNameUpdated options:"), e3);
        var t3, n3, o3, i3 = e3.groupID, a3 = e3.groupName, s3 = e3.oldGroupName;
        this._convGroupMap.get(i3) !== a3 && (this._convGroupMap.set(i3, a3), this._emitConvGroupListUpdate(), e3 = this._convM.getLocalConvList(), o3 = false, e3.forEach(function(e4) {
          t3 = e4.conversationGroupList, -1 !== (n3 = t3.indexOf(s3)) && (t3.splice(n3, 1, a3), o3 = true);
        }), true === o3) && this._emitConvUpdate();
      } }, { key: "onConvInGroupUpdated", value: function(e3) {
        var n3, o3, i3, a3 = this, s3 = (M2.l("".concat(this._n, ".onConvInGroupUpdated options:"), e3), e3.oldGroupName), e3 = e3.recentContactUpdateGroupItem;
        O2(e3) && (i3 = false, e3.forEach(function(e4) {
          var t3 = e4.contactOptType, e4 = e4.recentContactItem;
          n3 = a3._concatConvID(e4), (n3 = a3._getLocalConv(n3)) && (o3 = n3.conversationGroupList.indexOf(s3), 1 === t3 ? -1 === o3 && (n3.conversationGroupList.push(s3), i3 = true) : 2 === t3 && -1 !== o3 && (n3.conversationGroupList.splice(o3, 1), i3 = true));
        }), true === i3) && (this._emitConvUpdate(), this._emitConvInGroupUpdate(s3));
      } }, { key: "onConvAddedToOrDeletedFromGroup", value: function(e3) {
        var n3, o3, i3 = this, t3 = (M2.l("".concat(this._n, ".onConvAddedToOrDeletedFromGroup options:"), e3), e3.msgRecentContactItem), e3 = e3.msgRecentContactUpdateContactItem, t3 = this._concatConvID(t3), a3 = this._getLocalConv(t3);
        a3 && O2(e3) && (o3 = false, e3.forEach(function(e4) {
          var t4 = e4.groupOptType, e4 = e4.recentContactGroupItem.groupName;
          n3 = a3.conversationGroupList.indexOf(e4), 1 === t4 ? -1 === n3 && (a3.conversationGroupList.push(e4), o3 = true) : 2 === t4 && -1 !== n3 && (a3.conversationGroupList.splice(n3, 1), o3 = true), true === o3 && i3._emitConvInGroupUpdate(e4);
        }), true === o3) && this._emitConvUpdate();
      } }, { key: "onConvGroupListSynced", value: function(e3) {
        O2(e3) && 0 !== e3.length && (M2.l("".concat(this._n, ".onConvGroupListSynced groupItem:"), e3), this._fillConvGroupMap(e3));
      } }, { key: "getConvGroupListByID", value: function(e3) {
        var t3, n3 = this;
        if (!S2(e3))
          return t3 = [], e3.forEach(function(e4) {
            n3._convGroupMap.has(e4) && t3.push(n3._convGroupMap.get(e4));
          }), t3;
      } }, { key: "_onConvNotFound", value: function(e3, t3) {
        e3.push({ conversationID: t3, code: L2.CONV_NOT_FOUND, message: this._convM.getErrMsg(L2.CONV_NOT_FOUND) });
      } }, { key: "_onConvIDInvalid", value: function(e3, t3) {
        e3.push({ conversationID: t3, code: L2.INVALID_CONV_ID, message: this._convM.getErrMsg(L2.INVALID_CONV_ID) });
      } }, { key: "_getFlagBit", value: function(e3) {
        for (var t3 = e3.toString(2), n3 = t3.length, o3 = n3 - 1; 0 <= o3; o3--)
          if ("1" === t3[o3])
            return n3 - o3 - 1;
      } }, { key: "_concatConvID", value: function(e3) {
        var t3, n3 = e3.type, o3 = e3.to, i3 = e3.groupID, e3 = e3.userID;
        return 1 === n3 ? N2(e3) ? N2(o3) || (t3 = "".concat(A2.CONV_C2C).concat(o3)) : t3 = "".concat(A2.CONV_C2C).concat(e3) : 2 === n3 && (t3 = "".concat(A2.CONV_GROUP).concat(i3)), t3;
      } }, { key: "_getMyUserID", value: function() {
        return this._convM.getMyUserID();
      } }, { key: "_getLocalConv", value: function(e3) {
        return this._convM.getLocalConversation(e3);
      } }, { key: "_hasLocalConv", value: function(e3) {
        return this._convM.hasLocalConversation(e3);
      } }, { key: "_emitConvUpdate", value: function() {
        this._convM.emitConvUpdate(true, false);
      } }, { key: "_emitConvGroupListUpdate", value: function() {
        this._convM.emitOEvt(h2.CONVERSATION_GROUP_LIST_UPDATED, p2(this._convGroupMap.values()));
      } }, { key: "_emitConvInGroupUpdate", value: function(t3) {
        var e3 = { groupName: t3, conversationList: [] }, n3 = this._convM.getLocalConvList();
        e3.conversationList = n3.filter(function(e4) {
          return e4.conversationGroupList.includes(t3);
        }), this._convM.emitOEvt(h2.CONVERSATION_IN_GROUP_UPDATED, e3);
      } }, { key: "reset", value: function() {
        M2.l("".concat(this._n, ".reset")), this._convGroupMap.clear(), this._startIndex = 0, this._pagingStatus = Nn2;
      } }]), Qi2), ci2 = (t2(Zi2, u2), Zo = n2(Zi2), e2(Zi2, [{ key: "_initListeners", value: function() {
        var e3 = this.getIEmitInst();
        e3.on(P2.A2KEY_AND_TINYID_UPDATED, this._init, this), e3.on(P2.PROFILE_UPDATED, this._onProfileUpdated, this), e3.on(P2.CLOUD_CONFIG, this._onCloudConfig, this);
      } }, { key: "_init", value: function() {
        var e3 = this, t3 = (M2.l("".concat(this._n, "._init")), this.get(13).getItem("conversationMap")), n3 = this.isIntl(), o3 = this.isUsingChatCore();
        if (t3) {
          for (var i3 = t3.length, a3 = 0; a3 < i3; a3++) {
            var s3 = t3[a3];
            if (s3) {
              if (this._isNonExistentAccount(s3.conversationID))
                continue;
              if (s3.groupProfile && Ot2(s3.groupProfile.type))
                continue;
            }
            this._convMap.set(s3.conversationID, new ii2(t3[a3], n3, o3));
          }
          this.emitConvUpdate(true, false);
        }
        this.ready(function() {
          0 < e3._tmpGroupList.length && (e3.updateConvGroupProfile(e3._tmpGroupList), e3._tmpGroupList.length = 0);
        }), this.syncConvList();
      } }, { key: "_isNonExistentAccount", value: function(e3) {
        var t3;
        return "@TLS#ERROR" === (t3 = e3.startsWith(A2.CONV_C2C) ? e3.replace(A2.CONV_C2C, "") : t3) || "@TLS#NOT_FOUND" === t3;
      } }, { key: "onCheckTimer", value: function(e3) {
        this.isLoggedIn() && this._msgListHandler.onCheckTimer(e3);
      } }, { key: "onMessageSent", value: function(e3) {
        this._onSendOrRcvMsg({ conversationOptionsList: e3.conversationOptionsList, isInstantMessage: true });
      } }, { key: "onNewMessage", value: function(e3) {
        this._onSendOrRcvMsg(e3);
      } }, { key: "_onSendOrRcvMsg", value: function(e3) {
        var t3 = this, n3 = e3.conversationOptionsList, o3 = e3.isInstantMessage, o3 = void 0 === o3 || o3, i3 = e3.isUnreadC2CMessage, i3 = void 0 !== i3 && i3, a3 = e3.updateUnreadCount, a3 = void 0 === a3 || a3, s3 = e3.isSyncingEnded, s3 = void 0 !== s3 && s3;
        this._isReady ? 0 !== n3.length ? (true === o3 && this._checkNewConv(n3), this._updateLocalConvList({ conversationOptionsList: n3, isInstantMessage: o3, isUnreadC2CMessage: i3, isFromGetConversations: false, updateUnreadCount: a3 }), o3 || (this._convIDFromUnreadDBMap = new Map([].concat(p2(this._convIDFromUnreadDBMap), p2(n3.map(function(e4) {
          return [e4.conversationID, 1];
        })))), this._diffAndDeleteConv(), s3 && this.emitIEvt(P2.C2C_UNREAD_HANDLE_COMPLETED)), 0 < n3.filter(function(e4) {
          return !t3._isConvNeedShow(e4.conversationID);
        }).length || this.emitConvUpdate()) : s3 && this.emitIEvt(P2.C2C_UNREAD_HANDLE_COMPLETED) : this.ready(function() {
          t3._onSendOrRcvMsg(e3);
        });
      } }, { key: "updateConvGroupProfile", value: function(e3) {
        var n3, o3 = this;
        O2(e3) && 0 === e3.length || (0 !== this._convMap.size ? (n3 = false, e3.forEach(function(e4) {
          var t3 = "".concat(A2.CONV_GROUP).concat(e4.groupID);
          o3._convMap.has(t3) && (n3 = true, (t3 = o3._convMap.get(t3)).groupProfile = JSON.parse(JSON.stringify(e4)), t3.lastMessage.lastSequence < e4.nextMessageSeq && (t3.lastMessage.lastSequence = e4.nextMessageSeq - 1), t3.subType || (t3.subType = e4.type));
        }), n3 && this.emitConvUpdate(true, false)) : this._tmpGroupList = e3);
      } }, { key: "onMessageRevoked", value: function(e3, t3) {
        var n3, o3, i3, a3 = this;
        0 !== e3.length && (n3 = null, o3 = false, i3 = [], e3.forEach(function(e4) {
          (n3 = a3._convMap.get(e4.conversationID)) && (t3 && n3.reduceUnreadCount() && (o3 = n3.type !== A2.CONV_TOPIC), n3.type === A2.CONV_TOPIC ? i3.push(e4) : n3.isLastMessageRevoked({ sequence: e4.sequence, time: e4.time }) && (n3.setLastMessageRevoked(true), n3.setLastMessageRevoker(e4.revoker), o3 = true));
        }), this.get(10).onMessageRevoked(i3), o3) && this.emitConvUpdate(true, false);
      } }, { key: "updateRevokerInfo", value: function(u3) {
        for (var e3 = /* @__PURE__ */ new Set(), t3 = 0; t3 < u3.length; t3++) {
          var n3 = u3[t3].revoker;
          e3.add(n3);
        }
        var o3 = p2(e3), i3 = this.get(4);
        return new Promise(function(c3) {
          i3.getUserProfile({ userIDList: o3 }).then(function(e4) {
            e4 = e4.data;
            if (!O2(e4) || 0 === e4.length)
              return c3(u3);
            var t4, n4 = {}, o4 = Z2(e4);
            try {
              for (o4.s(); !(t4 = o4.n()).done; ) {
                var i4 = t4.value, a3 = i4.userID, s3 = i4.nick, r3 = i4.avatar;
                n4[a3] = { nick: s3, avatar: r3 };
              }
            } catch (e5) {
              o4.e(e5);
            } finally {
              o4.f();
            }
            u3.forEach(function(e5) {
              var t5 = e5.revoker;
              n4[t5] && (e5.revokerInfo.nick = n4[t5].nick || "", e5.revokerInfo.avatar = n4[t5].avatar || "");
            }), c3(u3);
          }).catch(function() {
            c3(u3);
          });
        });
      } }, { key: "isLastMessageRevoked", value: function(e3) {
        var t3 = false, n3 = e3.conversationID, o3 = e3.sequence, i3 = e3.time, a3 = this._convMap.get(n3);
        return a3 && (t3 = a3.type === A2.CONV_TOPIC ? this.get(10).isLastMessageRevoked({ topicID: n3.replace(A2.CONV_GROUP, ""), sequence: o3 }) : a3.isLastMessageRevoked({ sequence: o3, time: i3 })), M2.l("".concat(this._n, ".isLastMessageRevoked options:"), e3, "ret:".concat(t3)), t3;
      } }, { key: "onMessageDeleted", value: function(e3) {
        var t3 = this;
        if (0 !== e3.length) {
          var n3 = null;
          e3.forEach(function(e4) {
            (n3 = t3._msgListHandler.getLocalMsg(e4.conversationID, e4.ID)) && (n3.isDeleted = true), e4 !== n3 && (e4.isDeleted = true);
          });
          for (var e3 = e3[0].conversationID, o3 = this._msgListHandler.getLocalMsgList(e3), i3 = {}, a3 = o3.length - 1; 0 <= a3; a3--)
            if (!o3[a3].isDeleted) {
              i3 = o3[a3];
              break;
            }
          var s3, r3 = this._convMap.get(e3);
          r3 && (s3 = false, r3.lastMessage.lastSequence === i3.sequence && r3.lastMessage.lastTime === i3.time || (S2(i3) && (i3 = void 0), r3.updateLastMessage(i3), r3.type !== A2.CONV_TOPIC && (s3 = true), M2.l("".concat(this._n, ".onMessageDeleted. update convID:").concat(e3, " with lastMessage:"), r3.lastMessage)), e3.startsWith(A2.CONV_C2C) && this.updateUnreadCount(e3), s3) && this.emitConvUpdate(true, false);
        }
      } }, { key: "onMessageModified", value: function(e3) {
        var t3 = "".concat(this._n, ".onMessageModified"), n3 = e3.conversationType, o3 = e3.from, i3 = e3.to, a3 = e3.time, s3 = e3.sequence, r3 = e3.elements, c3 = e3.cloudCustomData, u3 = e3.messageVersion, l3 = this.getMyUserID(), d3 = "".concat(n3).concat(i3), l3 = (i3 === l3 && n3 === A2.CONV_C2C && (d3 = "".concat(n3).concat(o3)), this._msgListHandler.onMsgModified(d3, e3)), n3 = l3.isUpdated, l3 = l3.message, p3 = (true === n3 && this.emitOEvt(h2.MESSAGE_MODIFIED, [l3]), this._isTopicConv(d3));
        return null === l3 ? M2.l("".concat(t3, " message is null! options:"), e3) : M2.l("".concat(t3, " isUpdated:").concat(n3, " isTopicMessage:").concat(p3, " from:").concat(o3, " to:").concat(i3, " sequence:").concat(l3.sequence, " time:").concat(l3.time)), p3 ? this.get(10).onMessageModified(e3) : (n3 = this._convMap.get(d3)) && (o3 = n3.lastMessage) && o3.lastTime === a3 && o3.lastSequence === s3 && o3.version !== u3 && (M2.l("".concat(t3, " convID:").concat(d3, " lastMessage updated")), o3.type = r3[0].type, o3.payload = r3[0].content, o3.messageForShow = zt2(o3.type, o3.payload, this.isIntl()), o3.cloudCustomData = c3, o3.version = u3, this.emitConvUpdate(true, false)), l3;
      } }, { key: "onNewGroupAtTips", value: function(e3) {
        var t3 = this, e3 = e3.dataList, n3 = null;
        e3.forEach(function(e4) {
          e4.groupAtTips ? n3 = e4.groupAtTips : e4.elements ? n3 = y2(y2({}, e4.elements), {}, { sync: true }) : e4.groupAtType && (n3 = y2(y2({}, e4), {}, { sync: true })), n3.__random = e4.random, n3.__sequence = e4.clientSequence, t3._tmpGroupAtTipsList.push(n3);
        }), M2.l("".concat(this._n, ".onNewGroupAtTips isReady:").concat(this._isReady), this._tmpGroupAtTipsList), this._isReady && this._handleGroupAtTipsList();
      } }, { key: "_handleGroupAtTipsList", value: function() {
        var s3, r3 = this;
        0 !== this._tmpGroupAtTipsList.length && (s3 = false, this._tmpGroupAtTipsList.forEach(function(e3) {
          var t3, n3 = e3.groupID, o3 = e3.from, i3 = e3.topicID, i3 = void 0 === i3 ? void 0 : i3, a3 = e3.sync, a3 = void 0 !== a3 && a3;
          o3 !== r3.getMyUserID() && (N2(i3) ? (o3 = r3._convMap.get("".concat(A2.CONV_GROUP).concat(n3))) && (o3.updateGroupAtInfoList(e3), s3 = true) : ((n3 = r3._convMap.get("".concat(A2.CONV_GROUP).concat(i3))) && (n3.updateGroupAtInfoList(e3), o3 = r3.get(10), t3 = n3.groupAtInfoList, o3.onAtInfoUpdated({ topicID: i3, groupAtInfoList: t3 })), S2(n3) && a3 && (r3.updateTopicConversation([{ conversationID: "".concat(A2.CONV_GROUP).concat(i3), type: A2.CONV_TOPIC }]), r3._convMap.get("".concat(A2.CONV_GROUP).concat(i3)).updateGroupAtInfoList(e3))));
        }), s3 && this.emitConvUpdate(true, false), this._tmpGroupAtTipsList.length = 0);
      } }, { key: "_checkNewConv", value: function(e3) {
        var t3 = this, n3 = [], o3 = [];
        e3.forEach(function(e4) {
          t3._convMap.has(e4.conversationID) || (e4.type === A2.CONV_C2C ? n3.push(e4.conversationID.replace(A2.CONV_C2C, "")) : e4.type === A2.CONV_GROUP && o3.push(e4.conversationID.replace(A2.CONV_GROUP, "")));
        }), 0 < n3.length && (this._onNewC2CConv(n3), n3 = null), 0 < o3.length && (this._onNewGroupConv(o3), o3 = null);
      } }, { key: "_onNewC2CConv", value: function(e3) {
        var t3 = this.get(6);
        return Promise.all([t3.getRemotePeerReadTime(e3), this._msgRemindHandler.getC2CMsgRemindType(e3), this._convGroupHandler.searchConvGroupAndMark(e3, 1)]);
      } }, { key: "_onNewGroupConv", value: function(e3) {
        var t3 = this.get(7);
        return t3 ? Promise.all([t3.getMsgRemindType(e3), this._convGroupHandler.searchConvGroupAndMark(e3, 2)]) : Promise.resolve();
      } }, { key: "_setStorageConvList", value: function() {
        var e3 = 0 < arguments.length && void 0 !== arguments[0] && arguments[0], t3 = this.getLocalConvList().filter(function(e4) {
          return e4.type === A2.CONV_C2C || e4.type === A2.CONV_GROUP && e4.lastMessage.type !== A2.MSG_GRP_TIP;
        }).slice(0, 20).map(function(e4) {
          return { conversationID: e4.conversationID, type: e4.type, subType: e4.subType, lastMessage: e4.lastMessage, groupProfile: e4.groupProfile, userProfile: e4.userProfile };
        });
        this.get(13).setItem("conversationMap", t3, e3);
      } }, { key: "emitConvUpdate", value: function() {
        var e3 = !(0 < arguments.length && void 0 !== arguments[0]) || arguments[0], t3 = !(1 < arguments.length && void 0 !== arguments[1]) || arguments[1], n3 = this.getLocalConvList();
        t3 && (t3 = this.get(7)) && t3.updateGroupLastMessage(n3), e3 && (this.get(12).isPartialUpdatedConvs() ? (this._diffConvMap(this._convMapForDiff, this._convMap), 0 < this._partialUpdatedConvMap.size && (this.emitOEvt(h2.CONVERSATION_LIST_UPDATED), this.onTotalUnreadCountUpdate(), this._convMapForDiff.clear(), this._convMapForDiff = ht2(this._convMap, true)), 0 === this._convMapForDiff.size && (this._convMapForDiff = ht2(this._convMap, true))) : (this.emitOEvt(h2.CONVERSATION_LIST_UPDATED), this.onTotalUnreadCountUpdate()));
      } }, { key: "_diffConvMap", value: function(e3, t3) {
        var n3, o3 = Z2(t3);
        try {
          for (o3.s(); !(n3 = o3.n()).done; ) {
            var i3 = Y2(n3.value, 2), a3 = i3[0], s3 = i3[1];
            e3.has(a3) && JSON.stringify(s3) === e3.get(a3) || this._partialUpdatedConvMap.set(a3, s3);
          }
        } catch (e4) {
          o3.e(e4);
        } finally {
          o3.f();
        }
      } }, { key: "getPartialUpdatedConvs", value: function() {
        var e3 = p2(ht2(this._partialUpdatedConvMap, false).values());
        return this._partialUpdatedConvMap.clear(), e3;
      } }, { key: "getLocalConvList", value: function() {
        var t3 = this;
        return p2(this._convMap.values()).filter(function(e3) {
          return t3._isConvNeedShow(e3.conversationID);
        });
      } }, { key: "getLocalConversation", value: function(e3) {
        return this._convMap.get(e3);
      } }, { key: "hasLocalConversation", value: function(e3) {
        return this._convMap.has(e3);
      } }, { key: "getLocalOldestMessage", value: function(e3) {
        return this._msgListHandler.getLocalOldestMsg(e3);
      } }, { key: "syncConvList", value: function() {
        var o3 = this, e3 = !(0 < arguments.length && void 0 !== arguments[0]) || arguments[0], i3 = "syncConvList", a3 = new G2(i3);
        return this._pagingStatus === Nn2 && this._convMap.clear(), this._pagingGetConvList(e3).then(function(e4) {
          var t3 = tn2(o3._pagingGetCostList), n3 = en2(o3._pagingGetCostList), n3 = (o3._pagingGetCostList.length = 0, o3._pagingStatus = Pn2, o3._diffAndDeleteConv(), o3.emitConvUpdate(true, false), o3._setStorageConvList(), o3._handleC2CPeerReadTime(), o3.emitIEvt(P2.CONV_SYNC_COMPLETED), "count:".concat(o3._convMap.size, " sum:").concat(n3, " avg:").concat(t3));
          return M2.l("".concat(o3._n, ".").concat(i3, ". ").concat(n3)), a3.setMessage(n3).end(), e4;
        }).catch(function(e4) {
          return o3._pagingStatus = Un2, a3.setMessage(o3._pagingTs).setError(e4).end(), D2(e4);
        });
      } }, { key: "_diffAndDeleteConv", value: function() {
        var n3, o3 = this;
        this._isSyncCompleted() && (n3 = [], this._convMap.forEach(function(e3, t3) {
          !o3._pagingConvIDMap.has(t3) && o3._convIDFromUnreadDBMap.has(t3) && (o3._convMap.delete(t3), n3.push(t3));
        }), M2.l("".concat(this._n, "._diffAndDeleteConv list:").concat(n3)), n3 = null);
      } }, { key: "_pagingGetConvList", value: function() {
        var r3 = this, e3 = !(0 < arguments.length && void 0 !== arguments[0]) || arguments[0], c3 = "".concat(this._n, "._pagingGetConvList"), u3 = (M2.l("".concat(c3, " incrementalPullFlag:").concat(e3, " ts:").concat(this._pagingTs, " startIdx:").concat(this._pagingStartIdx) + " pinnedTs:".concat(this._pagingPinnedTs, " pinnedStartIdx:").concat(this._pagingPinnedStartIdx)), Date.now());
        return this._pagingStatus = Gn2, this.req({ P: k2.PAGING_GET_CONV_LIST, data: { fromAccount: this.getMyUserID(), timeStamp: e3 ? this._pagingTs : 0, startIndex: e3 ? this._pagingStartIdx : 0, pinnedTimeStamp: e3 ? this._pagingPinnedTs : 0, pinnedStartIndex: e3 ? this._pagingPinnedStartIdx : 0, orderType: 1 } }).then(function(e4) {
          var e4 = e4.data, t3 = e4.completeFlag, n3 = e4.conversations, n3 = void 0 === n3 ? [] : n3, o3 = e4.timeStamp, i3 = e4.startIndex, a3 = e4.pinnedTimeStamp, s3 = e4.pinnedStartIndex, e4 = e4.groupItem;
          if (r3._pagingGetCostList.push(nn2(u3, false)), M2.l("".concat(c3, " ok. completeFlag:").concat(t3, " count:").concat(n3.length, " cost:").concat(nn2(u3))), r3._convGroupHandler.onConvGroupListSynced(e4), 0 < n3.length && (e4 = r3._getConvOptions(n3), r3._pagingConvIDMap = new Map([].concat(p2(r3._pagingConvIDMap), p2(e4.map(function(e5) {
            return [e5.conversationID, 1];
          })))), r3._updateLocalConvList({ conversationOptionsList: e4, isFromGetConversations: true, updateUnreadCount: true }), r3.isLoggedIn()) && r3.emitConvUpdate(), !r3._isReady) {
            if (!r3.isLoggedIn())
              return T2();
            r3.triggerReady();
          }
          return r3._pagingTs = o3, r3._pagingStartIdx = i3, r3._pagingPinnedTs = a3, r3._pagingPinnedStartIdx = s3, 1 !== t3 ? r3._pagingGetConvList() : (r3._handleGroupAtTipsList(), r3._convGroupHandler.getRemoteConvGroupList(), T2());
        }).catch(function(e4) {
          throw !r3.isLoggedIn() || r3._isReady || (M2.w("".concat(c3, " failed. error:"), e4), r3.triggerReady()), e4;
        });
      } }, { key: "_updateLocalConvList", value: function(e3) {
        var t3 = e3.isFromGetConversations, n3 = Date.now(), e3 = this._getTmpConvListMapping(e3).newConvList;
        this._convMap = new Map(this._sortConvList(p2(this._convMap))), t3 || this._updateUserOrGroupProfile(e3), M2.l("".concat(this._n, "._updateLocalConvList cost:").concat(nn2(n3)));
      } }, { key: "_getTmpConvListMapping", value: function(e3) {
        for (var t3 = e3.conversationOptionsList, n3 = e3.isFromGetConversations, o3 = e3.isInstantMessage, i3 = e3.isUnreadC2CMessage, a3 = void 0 !== i3 && i3, s3 = e3.updateUnreadCount, r3 = [], c3 = [], u3 = this.get(7), l3 = this.get(8), d3 = this.isIntl(), p3 = this.isUsingChatCore(), _3 = 0, h3 = t3.length; _3 < h3; _3++) {
          var g3 = new ii2(t3[_3], d3, p3), f3 = g3.conversationID, m3 = g3.type;
          if (!this._isNonExistentAccount(f3)) {
            if (this._convMap.has(f3)) {
              var v3 = this._convMap.get(f3);
              if (n3) {
                this._convMap.set(f3, g3), m3 === A2.CONV_C2C ? g3.unreadCount = v3.unreadCount : m3 === A2.CONV_GROUP && (g3.groupProfile = JSON.parse(JSON.stringify(v3.groupProfile)));
                continue;
              }
              var I3 = ["unreadCount", "allowType", "adminForbidType", "payload"], M3 = (false === o3 && I3.push("lastMessage"), "boolean" == typeof o3 && I3.push("isPinned"), t3[_3].lastMessage), y3 = !N2(M3);
              y3 || t3[_3].type === A2.CONV_TOPIC || this._onLastMsgNotExist(t3[_3]), N2(o3) && y3 && null === v3.lastMessage.payload && (v3.lastMessage.payload = M3.payload), S2(v3.lastMessage.revoker) || (v3.lastMessage.revoker = null), _t3(v3, g3, I3, [null, void 0, "", 0, NaN]), true === s3 && v3.updateUnreadCount({ nextUnreadCount: g3.unreadCount, isFromGetConversations: n3, isUnreadC2CMessage: a3 }), o3 && y3 && (M3.payload && (v3.lastMessage.payload = M3.payload), v3.type === A2.CONV_GROUP) && (v3.lastMessage.nameCard = M3.nameCard, v3.lastMessage.nick = M3.nick), y3 && v3.lastMessage.cloudCustomData !== M3.cloudCustomData && (v3.lastMessage.cloudCustomData = M3.cloudCustomData || "");
            } else
              m3 === A2.CONV_GROUP && u3 ? (I3 = g3.groupProfile.groupID, (y3 = u3.getLocalGroupProfile(I3)) && (g3.groupProfile = y3, true === s3) && g3.updateUnreadCount({ nextUnreadCount: 0 })) : m3 === A2.CONV_C2C && (v3 = f3.replace(A2.CONV_C2C, ""), l3) && l3.isMyFriend(v3) && (g3.remark = l3.getFriendRemark(v3)), r3.push(g3), this._convMap.set(f3, g3);
            this._convMap.get(f3).type === A2.CONV_TOPIC && c3.push(this._convMap.get(f3));
          }
        }
        for (var C3 = this.get(10), T3 = 0, D3 = c3.length; T3 < D3; T3++) {
          var E3 = c3[T3], L3 = E3.conversationID, E3 = E3.groupAtInfoList;
          S2(E3) || C3.onAtInfoUpdated({ topicID: L3.replace(A2.CONV_GROUP, ""), groupAtInfoList: E3 });
        }
        return { newConvList: r3 };
      } }, { key: "_onLastMsgNotExist", value: function(e3) {
        new G2("lastMsgNotExist").setMessage(JSON.stringify(e3)).end();
      } }, { key: "_sortConvList", value: function(e3) {
        var t3 = [], n3 = [], o3 = [], i3 = [];
        return e3.forEach(function(e4) {
          (true === e4[1].isPinned ? S2(e4[1].lastMessage.lastTime) ? n3 : t3 : S2(e4[1].lastMessage.lastTime) ? i3 : o3).push(e4);
        }), t3.sort(function(e4, t4) {
          return t4[1].lastMessage.lastTime - e4[1].lastMessage.lastTime;
        }).concat(n3).concat(o3.sort(function(e4, t4) {
          return t4[1].lastMessage.lastTime - e4[1].lastMessage.lastTime;
        })).concat(i3);
      } }, { key: "_sortConvListAndEmitEvent", value: function() {
        this._convMap = new Map(this._sortConvList(p2(this._convMap))), this.emitConvUpdate(true, false);
      } }, { key: "_updateUserOrGroupProfile", value: function(e3) {
        var n3, o3, t3, i3, a3 = this;
        0 !== e3.length && (n3 = [], o3 = [], t3 = this.get(4), i3 = this.get(7), e3.forEach(function(e4) {
          var t4;
          e4.type === A2.CONV_C2C ? n3.push(e4.toAccount) : e4.type === A2.CONV_GROUP && (t4 = e4.toAccount, i3.hasLocalGroup(t4) ? e4.groupProfile = i3.getLocalGroupProfile(t4) : o3.push(t4));
        }), M2.l("".concat(this._n, "._updateUserOrGroupProfile userIDList:").concat(n3, " groupIDList:").concat(o3)), 0 < n3.length && t3.getUserProfile({ userIDList: n3 }).then(function(e4) {
          e4 = e4.data;
          O2(e4) ? e4.forEach(function(e5) {
            a3._doUpdateUserProfile("".concat(A2.CONV_C2C).concat(e5.userID), e5);
          }) : a3._doUpdateUserProfile("".concat(A2.CONV_C2C).concat(e4.userID), e4);
        }), 0 < o3.length) && i3.getGroupProfileAdvance({ groupIDList: o3, responseFilter: { groupBaseInfoFilter: ["Type", "Name", "FaceUrl"] } }).then(function(e4) {
          var e4 = e4.data.successGroupList, n4 = false;
          e4.forEach(function(e5) {
            var t4 = "".concat(A2.CONV_GROUP).concat(e5.groupID);
            a3._convMap.has(t4) && (t4 = a3._convMap.get(t4), _t3(t4.groupProfile, e5, [], [null, void 0, "", 0, NaN]), !t4.subType && e5.type && (t4.subType = e5.type), n4 = true);
          }), n4 && a3.emitConvUpdate();
        });
      } }, { key: "_doUpdateUserProfile", value: function(e3, t3) {
        this.hasLocalConversation(e3) && (this.getLocalConversation(e3).userProfile = t3, this.emitConvUpdate());
      } }, { key: "_getConvOptions", value: function(e3) {
        var n3 = this, o3 = [], e3 = e3.filter(function(e4) {
          var t3 = e4.type, e4 = e4.userID;
          return 1 === t3 && !n3._isNonExistentAccount(e4) || 2 === t3;
        }), i3 = this.getMyUserID(), e3 = e3.map(function(e4) {
          var t3;
          return N2(e4.lastMsg) && (e4.lastMsg = { elements: [] }), 1 === e4.type ? (t3 = { userID: e4.userID, nick: e4.peerNick, avatar: e4.peerAvatar }, o3.push(t3), { conversationID: "".concat(A2.CONV_C2C).concat(e4.userID), type: A2.CONV_C2C, lastMessage: { lastTime: e4.time, lastSequence: e4.sequence, fromAccount: e4.lastC2CMsgFromAccount, type: e4.lastMsg.elements[0] ? e4.lastMsg.elements[0].type : null, payload: e4.lastMsg.elements[0] ? n3._amendLayersOverLimitProp(e4.lastMsg.elements[0].content) : null, cloudCustomData: e4.lastMsg.cloudCustomData || "", isRevoked: 8 === e4.lastMessageFlag, onlineOnlyFlag: false, nick: "", nameCard: "", version: 0, isPeerRead: e4.lastC2CMsgFromAccount === i3 && e4.time <= e4.c2cPeerReadTime, revoker: e4.lastMsg.revokerInfo ? e4.lastMsg.revokerInfo.revoker : null }, unreadCount: 0, userProfile: new ei2(t3), peerReadTime: e4.c2cPeerReadTime, isPinned: 1 === e4.isPinned, customData: e4.customMark || "", markList: Zt2(e4.standardMark), conversationGroupList: n3._convGroupHandler.getConvGroupListByID(e4.contactGroupId), remark: e4.friendRemark || "", messageRemindType: n3._transMsgRemindType(e4.messageRemindType) }) : { conversationID: "".concat(A2.CONV_GROUP).concat(e4.groupID), type: A2.CONV_GROUP, lastMessage: y2(y2({ lastTime: e4.time, lastSequence: e4.sequence, fromAccount: e4.msgGroupFromAccount }, n3._patchTypeAndPayload(e4)), {}, { cloudCustomData: e4.lastMsg.cloudCustomData || "", isRevoked: 2 === e4.lastMessageFlag, onlineOnlyFlag: false, nick: e4.senderNick || "", nameCard: e4.senderNameCard || "", revoker: e4.lastMsg.revokerInfo ? e4.lastMsg.revokerInfo.revoker : null }), groupProfile: new oi2({ groupID: e4.groupID, name: e4.groupNick, avatar: e4.groupImage, type: e4.groupType, nextMessageSeq: e4.nextMessageSeq }), unreadCount: n3._computeGroupUnreadCount(e4), peerReadTime: 0, isPinned: 1 === e4.isPinned, version: 0, customData: e4.customMark || "", markList: Zt2(e4.standardMark), conversationGroupList: n3._convGroupHandler.getConvGroupListByID(e4.contactGroupId), messageRemindType: n3._transMsgRemindType(e4.messageRemindType) };
        });
        return 0 < o3.length && this.get(4).onConvProfileUpdated(o3), e3;
      } }, { key: "_transMsgRemindType", value: function(e3) {
        var t3 = "";
        return 0 === e3 ? t3 = A2.MSG_REMIND_ACPT_AND_NOTE : 1 === e3 ? t3 = A2.MSG_REMIND_DISCARD : 2 === e3 ? t3 = A2.MSG_REMIND_ACPT_NOT_NOTE : 3 === e3 && (t3 = A2.NOT_RECEIVE_OFFLINE_PUSH_EXCEPT_AT), t3;
      } }, { key: "_computeGroupUnreadCount", value: function(e3) {
        var t3 = e3.unreadCount, e3 = e3.noUnreadCount, t3 = (void 0 === t3 ? 0 : t3) - (void 0 === e3 ? 0 : e3);
        return 0 < t3 ? t3 : 0;
      } }, { key: "_patchTypeAndPayload", value: function(e3) {
        var e3 = e3.lastMsg, t3 = e3.event, n3 = e3.elements, n3 = void 0 === n3 ? [] : n3, e3 = e3.groupTips, e3 = void 0 === e3 ? {} : e3;
        return N2(void 0 === t3 ? void 0 : t3) || S2(e3) ? { type: n3[0] ? n3[0].type : null, payload: n3[0] ? this._amendLayersOverLimitProp(n3[0].content) : null } : ((t3 = new Do2(e3)).setElement({ type: A2.MSG_GRP_TIP, content: y2(y2({}, e3.elements), {}, { groupProfile: e3.groupProfile }) }), n3 = JSON.parse(JSON.stringify(t3.payload)), t3 = null, { type: A2.MSG_GRP_TIP, payload: n3 });
      } }, { key: "_amendLayersOverLimitProp", value: function(e3) {
        var t3 = e3.layersOverLimit;
        return 0 === t3 ? e3.layersOverLimit = false : 1 === t3 && (e3.layersOverLimit = true), e3;
      } }, { key: "getLocalMessageList", value: function(e3) {
        return this._msgListHandler.getLocalMsgList(e3);
      } }, { key: "deleteLocalMessage", value: function(e3) {
        e3 instanceof Do2 && this._msgListHandler.remove(e3);
      } }, { key: "onConvDeleted", value: function(e3) {
        O2(e3) && (e3 = e3.map(function(e4) {
          var t3 = e4.type, n3 = e4.userID, e4 = e4.groupID;
          return 1 === t3 ? "".concat(A2.CONV_C2C).concat(n3) : 2 === t3 ? "".concat(A2.CONV_GROUP).concat(e4) : void 0;
        }), M2.l("".concat(this._n, ".onConvDeleted convIDList:").concat(e3)), this.deleteLocalConvList(e3));
      } }, { key: "onConvPinnedStatus", value: function(e3, i3) {
        var a3, s3 = this;
        O2(e3) && (a3 = false, e3.forEach(function(e4) {
          var t3, n3 = e4.type, o3 = e4.userID, e4 = e4.groupID;
          1 === n3 ? t3 = s3.getLocalConversation("".concat(A2.CONV_C2C).concat(o3)) : 2 === n3 && (t3 = s3.getLocalConversation("".concat(A2.CONV_GROUP).concat(e4))), t3 && (M2.l("".concat(s3._n, ".onConvPinnedStatus convID:").concat(t3.conversationID, " localPinned:").concat(t3.isPinned, " remotePinned:").concat(i3)), i3 ? t3.isPinned || (t3.isPinned = true, a3 = true) : t3.isPinned && (t3.isPinned = false, a3 = true));
        }), a3) && this._sortConvListAndEmitEvent();
      } }, { key: "getMessageList", value: function(e3) {
        var r3 = this, c3 = e3.conversationID, t3 = e3.nextReqMessageID, e3 = e3.count, u3 = "".concat(this._n, ".getMessageList"), n3 = this.getLocalConversation(c3), o3 = "";
        if (n3 && n3.groupProfile && (o3 = n3.groupProfile.type), Ot2(o3))
          return M2.l("".concat(u3, " not available in ").concat(o3, ". convID:").concat(c3)), T2({ messageList: [], nextReqMessageID: "", isCompleted: true });
        (N2(e3) || 15 < e3) && (e3 = 15), t3 || this._isMeInCommunity(c3) || this.clearMemMsg(c3);
        var l3 = this._computeRemainingCount({ conversationID: c3, nextReqMessageID: t3 }), n3 = this._completedMap.has(c3);
        if (M2.l("".concat(u3, " convID:").concat(c3, " isEverCleared:").concat(this._isEverCleared(c3), " nextReqMessageID:").concat(t3) + " remainingCount:".concat(l3, " count:").concat(e3, " isCompleted:").concat(n3)), this._needGetHistory({ conversationID: c3, remainingCount: l3, count: e3 }))
          return this.getHistoryMessages({ conversationID: c3, nextReqMessageID: t3, count: 20 }).then(function(e4) {
            var t4 = e4.nextReqID, n4 = e4.storedMessageList, o4 = e4.assembledMessageList, e4 = e4.isPullingCompleted, i3 = r3._completedMap.has(c3), a3 = n4, s3 = (0 < l3 && (a3 = r3._msgListHandler.getLocalMsgList(c3).slice(0, n4.length + l3)), { nextReqMessageID: void 0, messageList: void 0, isCompleted: void 0 }), n4 = (r3._isEverCleared(c3) ? (s3.nextReqMessageID = t4, s3.messageList = o4, s3.isCompleted = e4) : (s3.nextReqMessageID = i3 ? "" : t4, s3.messageList = a3, s3.isCompleted = i3), s3.messageList.filter(function(e5) {
              return e5.isRevoked;
            }) || []), o4 = s3.messageList.map(function(e5) {
              return e5.sequence;
            });
            return M2.l("".concat(u3, " ret.nextReqMessageID:").concat(s3.nextReqMessageID, " ret.isCompleted:").concat(s3.isCompleted, " sequenceList:"), o4), O2(n4) && 0 !== n4.length ? r3.updateRevokerInfo(n4).then(function(e5) {
              return e5.forEach(function(t5) {
                var n5 = t5.revokerInfo;
                s3.messageList = s3.messageList.map(function(e6) {
                  return e6.ID === t5.ID && n5 && (e6.revokeReason = n5.reason || "", e6.revokerInfo = { userID: n5.revoker || e6.revoker, nick: n5.nick, avatar: n5.avatar }), e6;
                });
              }), C2(s3);
            }) : C2(s3);
          });
        this.modifyMessageList(c3);
        o3 = this._getMsgListFromMem({ conversationID: c3, nextReqMessageID: t3, count: e3 });
        return T2(o3);
      } }, { key: "_isEverCleared", value: function(e3) {
        return this._everClearedMap.has(e3);
      } }, { key: "_getMsgListFromMem", value: function(e3) {
        var t3 = e3.conversationID, n3 = e3.nextReqMessageID, e3 = e3.count, o3 = "".concat(this._n, "._getMsgListFromMem"), i3 = this._msgListHandler.getLocalMsgList(t3), a3 = i3.length, s3 = Pt2(t3), r3 = 0, c3 = { isCompleted: false, nextReqMessageID: "", messageList: [] }, e3 = (n3 ? (r3 = s3 ? i3.findIndex(function(e4) {
          return e4.ID === n3;
        }) : i3.findIndex(function(e4) {
          return e4.sequence + "" === n3;
        })) > e3 ? (c3.messageList = i3.slice(r3 - e3, r3), c3.nextReqMessageID = s3 ? i3[r3 - e3].ID : i3[r3 - e3].sequence + "") : (c3.messageList = i3.slice(0, r3), c3.isCompleted = true) : e3 < a3 ? (c3.messageList = i3.slice(r3 = a3 - e3, a3), c3.nextReqMessageID = s3 ? i3[r3].ID : i3[r3].sequence + "") : (c3.messageList = i3.slice(0, a3), c3.isCompleted = true), c3.messageList.map(function(e4) {
          return e4.sequence;
        }));
        return M2.l("".concat(o3, " convID:").concat(t3) + " ret.nextReqMessageID:".concat(c3.nextReqMessageID, " ret.isCompleted:").concat(c3.isCompleted, " sequenceList:").concat(e3)), c3;
      } }, { key: "getMessageListHopping", value: function(e3) {
        var t3, n3, o3 = e3.conversationID, i3 = e3.sequence, a3 = e3.time, s3 = e3.count, e3 = e3.direction, e3 = void 0 === e3 ? 0 : e3;
        return (N2(s3) || 15 < s3) && (s3 = 15), o3.startsWith(A2.CONV_C2C) ? (t3 = this.get(6), n3 = o3.replace(A2.CONV_C2C, ""), t3.getRoamingMessagesHopping({ peerAccount: n3, time: a3, count: s3, direction: e3 })) : o3.startsWith(A2.CONV_GROUP) ? (t3 = this.get(7), n3 = o3.replace(A2.CONV_GROUP, ""), t3.getRoamingMessagesHopping({ groupID: n3, sequence: i3, count: s3, direction: e3 })) : void 0;
      } }, { key: "_computeRemainingCount", value: function(e3) {
        var t3, n3 = e3.conversationID, o3 = e3.nextReqMessageID, e3 = this._msgListHandler.getLocalMsgList(n3), i3 = e3.length;
        return M2.l("".concat(this._n, "._computeRemainingCount convID:").concat(n3, " nextReqMessageID:").concat(o3, " length:").concat(i3)), o3 ? (t3 = 0, Pt2(n3) ? t3 = e3.findIndex(function(e4) {
          return e4.ID === o3;
        }) : Ut2(n3) && (t3 = -1 !== o3.indexOf("-") ? e3.findIndex(function(e4) {
          return e4.ID === o3;
        }) : e3.findIndex(function(e4) {
          return e4.sequence + "" === o3;
        })), -1 === t3 ? 0 : t3) : i3;
      } }, { key: "_needGetHistory", value: function(e3) {
        var t3 = e3.conversationID, n3 = e3.remainingCount, e3 = e3.count, o3 = this.getLocalConversation(t3), i3 = "";
        return o3 && o3.groupProfile && (i3 = o3.groupProfile.type), !(bt2(t3) || Ot2(i3) || !this._isEverCleared(t3) && (o3 = n3 <= e3 && !this._completedMap.has(t3), M2.l("".concat(this._n, "._needGetHistory convID:").concat(t3, " ret:").concat(o3)), !o3));
      } }, { key: "_isTopicConv", value: function(e3) {
        e3 = e3.replace(A2.CONV_GROUP, "");
        return Gt2(e3);
      } }, { key: "getHistoryMessages", value: function(e3) {
        var t3, n3, o3, i3, a3, s3, r3 = e3.conversationID, c3 = e3.count, e3 = e3.nextReqMessageID;
        return r3 === A2.CONV_SYSTEM ? T2() : (c3 = 20 < c3 ? 20 : 15, t3 = null, Pt2(r3) ? (s3 = 0, n3 = "", o3 = false, a3 = this._roamingMsgKeyAndTimeMap.has(r3), e3 && (o3 = true, a3 ? (s3 = this._roamingMsgKeyAndTimeMap.get(r3).lastMessageTime, n3 = this._roamingMsgKeyAndTimeMap.get(r3).messageKey) : (i3 = this._msgListHandler.findMessage(e3)) && (s3 = i3.time, M2.l("".concat(this._n, ".getHistoryMessages convID:").concat(r3, " isRelayInfoExisted:").concat(a3, " lastMessageTime:").concat(s3)))), (t3 = this.get(6)).getRoamingMessage({ conversationID: r3, peerAccount: r3.replace(A2.CONV_C2C, ""), count: c3, lastMessageTime: o3 ? s3 : 0, messageKey: o3 ? n3 : "" })) : Ut2(r3) ? (t3 = this.get(7)) ? (i3 = r3.replace(A2.CONV_GROUP, ""), a3 = null, this._convMap.has(r3) && !Gt2(i3) && (a3 = this._convMap.get(r3).lastMessage), s3 = 0, e3 ? s3 = Number(e3) : a3 && (s3 = a3.lastSequence), t3.getRoamingMessage({ conversationID: r3, groupID: i3, count: c3, sequence: s3 })) : D2({ code: L2.NO_MODULE }) : T2());
      } }, { key: "patchConvLastMessage", value: function(e3) {
        var t3, n3, o3 = 1 < arguments.length && void 0 !== arguments[1] && arguments[1], i3 = this.getLocalConversation(e3);
        i3 && (t3 = (n3 = i3.lastMessage).messageForShow, n3 = n3.payload, S2(t3) || S2(n3) || o3) && 0 !== (t3 = this._msgListHandler.getLocalMsgList(e3)).length && (n3 = t3[t3.length - 1], M2.l("".concat(this._n, ".patchConvLastMessage bForceUpdate:").concat(o3, " convID:").concat(e3, " payload:"), n3.payload), i3.updateLastMessage(n3));
      } }, { key: "onRoamingMessage", value: function() {
        for (var e3, t3, n3 = 0 < arguments.length && void 0 !== arguments[0] ? arguments[0] : [], o3 = 1 < arguments.length ? arguments[1] : void 0, i3 = !(2 < arguments.length && void 0 !== arguments[2]) || arguments[2], a3 = 3 < arguments.length ? arguments[3] : void 0, s3 = o3.startsWith(A2.CONV_C2C) ? A2.CONV_C2C : A2.CONV_GROUP, r3 = null, c3 = [], o3 = [], u3 = 0, l3 = n3.length, d3 = s3 === A2.CONV_GROUP, p3 = this.getFileDownloadProxy(), _3 = this.getDowloadFileAuthKey(), h3 = O2(a3), g3 = this.get(17).getFileDNList(), f3 = function() {
          d3 ? --u3 : ++u3;
        }, m3 = function() {
          return d3 ? l3 <= u3 : u3 < l3;
        }, u3 = d3 ? n3.length - 1 : 0, l3 = d3 ? 0 : n3.length; m3(); f3())
          1 !== n3[u3].isPlaceMessage && ((r3 = new Do2(n3[u3])).to = n3[u3].to, s3 !== A2.CONV_GROUP || N2(n3[u3].topicID) || (r3.to = n3[u3].topicID), r3.isSystemMessage = !!n3[u3].isSystemMessage, r3.conversationType = s3, e3 = 4 === n3[u3].event ? { type: A2.MSG_GRP_TIP, content: y2(y2({}, n3[u3].elements), {}, { groupProfile: n3[u3].groupProfile }) } : n3[u3].elements, d3 || r3.setNickAndAvatar({ nick: n3[u3].nick, avatar: n3[u3].avatar }), S2(e3) ? ((t3 = new G2("emptyMessageBody")).setMessage("from:".concat(r3.from, " to:").concat(r3.to, " sequence:").concat(r3.sequence, " event:").concat(n3[u3].event)), t3.setLevel("warning").end()) : (r3.setElement(e3, p3, _3, g3), r3.reInitialize(this.getMyUserID()), c3.push(r3), h3 && a3.push(r3)));
        return f3 = m3 = null, i3 ? (this._msgListHandler.unshift(c3, o3), c3 = null, o3) : c3;
      } }, { key: "findMessage", value: function(e3) {
        return this._msgListHandler.findMessage(e3);
      } }, { key: "_isMeInCommunity", value: function(e3) {
        var t3 = true;
        return this._isTopicConv(e3) && (e3 = Jt2(e3.replace(A2.CONV_GROUP, "")), this.get(7).hasLocalGroup(e3) || (t3 = false, M2.l("".concat(this._n, "._isMeInCommunity groupID:").concat(e3, " ret:").concat(t3)))), t3;
      } }, { key: "deleteTopicRoamingInfo", value: function(e3) {
        var t3 = this;
        Nt2({ groupID: e3 }) && this._msgListHandler.getTopicConvIDList(e3).forEach(function(e4) {
          t3.clearMemMsg(e4);
        });
      } }, { key: "deleteGroupRoamingInfo", value: function(e3) {
        e3 = "".concat(A2.CONV_GROUP).concat(e3);
        0 < this._msgListHandler.getLocalMsgList(e3).length && this.clearMemMsg(e3);
      } }, { key: "setMessageRead", value: function(e3) {
        var t3 = e3.conversationID, n3 = this.getLocalConversation(t3), e3 = "".concat(this._n, ".setMessageRead");
        if (M2.l("".concat(e3, " convID:").concat(t3, " unreadCount:").concat(n3 ? n3.unreadCount : 0)), !n3)
          return T2();
        if (n3.type !== A2.CONV_GROUP && n3.type !== A2.CONV_TOPIC || S2(n3.groupAtInfoList) || this.deleteGroupAtTips(t3), 0 === n3.unreadCount)
          return T2();
        var o3 = this._msgListHandler.getLocalLastMsg(t3), i3 = n3.lastMessage.lastTime, a3 = this._msgListHandler.getLocalMaxTime(t3), a3 = (i3 < a3 && (M2.l("".concat(e3, " update lastMessageTime from ").concat(i3, " to ").concat(a3)), i3 = a3), this._msgListHandler.getLocalMaxSeq(t3)), s3 = n3.lastMessage.lastSequence, r3 = (s3 < a3 && (M2.l("".concat(e3, " update lastMessageSeq from ").concat(s3, " to ").concat(a3)), s3 = a3), n3.type === A2.CONV_TOPIC && N2(o3) && (e3 = this.get(10), o3 = Jt2(a3 = t3.replace(A2.CONV_GROUP, "")), e3 = e3.getLocalTopic(o3, a3)) && (s3 = e3.nextMessageSeq - 1), null);
        switch (n3.type) {
          case A2.CONV_C2C:
            return (r3 = this.get(6)) ? r3.setMessageRead({ conversationID: t3, lastMessageTime: i3 }) : D2({ code: L2.NO_MODULE });
          case A2.CONV_GROUP:
          case A2.CONV_TOPIC:
            return (r3 = this.get(7)) ? r3.setMessageRead({ conversationID: t3, lastMessageSeq: s3 }) : D2({ code: L2.NO_MODULE });
          case A2.CONV_SYSTEM:
            return n3.unreadCount = 0, this.emitConvUpdate(true, false), T2();
          default:
            return T2();
        }
      } }, { key: "setAllMessageRead", value: function() {
        var t3, n3 = this, o3 = 0 < arguments.length && void 0 !== arguments[0] ? arguments[0] : {}, e3 = "setAllMessageRead", i3 = "".concat(this._n, ".").concat(e3), a3 = (o3.scope || (o3.scope = A2.READ_ALL_MSG), M2.l("".concat(i3, " options:"), o3), this._createSetAllMessageReadPack(o3));
        return 0 === a3.readAllC2CMessage && 0 === a3.groupMessageReadInfoList.length ? T2() : (t3 = new G2(e3), this.req({ P: k2.SET_ALL_MSG_READ, data: a3 }).then(function(e4) {
          e4 = e4.data, e4 = n3._handleAllMsgRead(e4);
          return t3.setMessage("scope:".concat(o3.scope, " failureGroups:").concat(JSON.stringify(e4))).end(), T2();
        }).catch(function(e4) {
          return t3.setError(e4).end(), M2.w("".concat(i3, " failed. error:"), e4), D2({ code: e4 && e4.code ? e4.code : L2.MSG_UNREAD_ALL_FAIL, message: e4 && e4.message ? e4.message : void 0 });
        }));
      } }, { key: "setConvCustomData", value: function(e3) {
        return this._convGroupHandler.setConvCustomData(e3);
      } }, { key: "markConv", value: function(e3) {
        return this._convGroupHandler.markConv(e3);
      } }, { key: "getConvGroupList", value: function() {
        return this._convGroupHandler.getLocalConvGroupList();
      } }, { key: "createConvGroup", value: function(e3) {
        return this._convGroupHandler.createConvGroup(e3);
      } }, { key: "deleteConvGroup", value: function(e3) {
        return this._convGroupHandler.deleteConvGroup(e3);
      } }, { key: "renameConvGroup", value: function(e3) {
        return this._convGroupHandler.renameConvGroup(e3);
      } }, { key: "addConvsToGroup", value: function(e3) {
        return this._convGroupHandler.addConvsToGroup(e3);
      } }, { key: "deleteConvsFromGroup", value: function(e3) {
        return this._convGroupHandler.deleteConvsFromGroup(e3);
      } }, { key: "onConvMarkUpdated", value: function(e3) {
        this._convGroupHandler.onConvMarkUpdated(e3);
      } }, { key: "onConvGroupCreated", value: function(e3) {
        this._convGroupHandler.onConvGroupCreated(e3);
      } }, { key: "onConvGroupDeleted", value: function(e3) {
        this._convGroupHandler.onConvGroupDeleted(e3);
      } }, { key: "onConvGroupNameUpdated", value: function(e3) {
        this._convGroupHandler.onConvGroupNameUpdated(e3);
      } }, { key: "onConvInGroupUpdated", value: function(e3) {
        this._convGroupHandler.onConvInGroupUpdated(e3);
      } }, { key: "onConvAddedToOrDeletedFromGroup", value: function(e3) {
        this._convGroupHandler.onConvAddedToOrDeletedFromGroup(e3);
      } }, { key: "_getConvLastMessageSeq", value: function(e3) {
        var t3 = this._msgListHandler.getLocalLastMsg(e3.conversationID), e3 = e3.lastMessage.lastSequence;
        return e3 = t3 && e3 < t3.sequence ? t3.sequence : e3;
      } }, { key: "_getConvLastMessageTime", value: function(e3) {
        var t3 = this._msgListHandler.getLocalLastMsg(e3.conversationID), e3 = e3.lastMessage.lastTime;
        return e3 = t3 && e3 < t3.time ? t3.time : e3;
      } }, { key: "_createSetAllMessageReadPack", value: function(e3) {
        var t3, n3 = { readAllC2CMessage: 0, groupMessageReadInfoList: [] }, o3 = e3.scope, i3 = Z2(this._convMap);
        try {
          for (i3.s(); !(t3 = i3.n()).done; ) {
            var a3, s3 = Y2(t3.value, 2)[1];
            if (0 < s3.unreadCount)
              if (s3.type === A2.CONV_C2C && 0 === n3.readAllC2CMessage) {
                if (o3 === A2.READ_ALL_MSG)
                  n3.readAllC2CMessage = 1;
                else if (o3 === A2.READ_ALL_C2C_MSG) {
                  n3.readAllC2CMessage = 1;
                  break;
                }
              } else
                s3.type !== A2.CONV_GROUP || o3 !== A2.READ_ALL_GROUP_MSG && o3 !== A2.READ_ALL_MSG || (a3 = this._getConvLastMessageSeq(s3), n3.groupMessageReadInfoList.push({ groupID: s3.groupProfile.groupID, messageSequence: a3 }));
          }
        } catch (e4) {
          i3.e(e4);
        } finally {
          i3.f();
        }
        return n3;
      } }, { key: "onPushedAllMessageRead", value: function(e3) {
        this._handleAllMsgRead(e3);
      } }, { key: "_handleAllMsgRead", value: function(e3) {
        var t3 = e3.groupMessageReadInfoList, e3 = e3.readAllC2CMessage, t3 = this._parseGroupReadInfo(t3);
        return 1 <= this._updateAllConvUnreadCount({ readAllC2CMessage: e3 }) && this.emitConvUpdate(true, false), t3;
      } }, { key: "_parseGroupReadInfo", value: function(e3) {
        var t3 = [];
        if (e3 && e3.length)
          for (var n3 = 0, o3 = e3.length; n3 < o3; n3++) {
            var i3 = e3[n3], a3 = i3.groupID, s3 = i3.sequence, r3 = i3.retCode, i3 = i3.lastMessageSeq;
            N2(r3) ? this._remoteGroupReadSeqMap.set(a3, i3) : (this._remoteGroupReadSeqMap.set(a3, s3), 0 !== r3 && t3.push("".concat(a3, "-").concat(s3, "-").concat(r3)));
          }
        return t3;
      } }, { key: "_updateAllConvUnreadCount", value: function(e3) {
        var t3, n3 = e3.readAllC2CMessage, o3 = 0, i3 = Z2(this._convMap);
        try {
          for (i3.s(); !(t3 = i3.n()).done; ) {
            var a3, s3, r3, c3, u3 = Y2(t3.value, 2), l3 = u3[0], d3 = u3[1];
            1 <= d3.unreadCount && (1 === n3 && d3.type === A2.CONV_C2C ? (a3 = this._getConvLastMessageTime(d3), this.updateIsReadAfterReadReport({ conversationID: l3, lastMessageTime: a3 })) : d3.type === A2.CONV_GROUP && (s3 = l3.replace(A2.CONV_GROUP, ""), this._remoteGroupReadSeqMap.has(s3)) && (r3 = this._remoteGroupReadSeqMap.get(s3), c3 = this._getConvLastMessageSeq(d3), this.updateIsReadAfterReadReport({ conversationID: l3, remoteReadSequence: r3 }), r3 <= c3) && this._remoteGroupReadSeqMap.delete(s3), this.updateUnreadCount(l3, false)) && (o3 += 1);
          }
        } catch (e4) {
          i3.e(e4);
        } finally {
          i3.f();
        }
        return o3;
      } }, { key: "isRemoteRead", value: function(e3) {
        var t3, n3 = e3.conversationID, e3 = e3.sequence, o3 = n3.replace(A2.CONV_GROUP, ""), i3 = false;
        return this._remoteGroupReadSeqMap.has(o3) && (e3 <= (t3 = this._remoteGroupReadSeqMap.get(o3)) && (i3 = true, M2.l("".concat(this._n, ".isRemoteRead convID:").concat(n3, " msgSeq:").concat(e3, " remoteReadSeq:").concat(t3))), t3 + 10 <= e3) && this._remoteGroupReadSeqMap.delete(o3), i3;
      } }, { key: "updateIsReadAfterReadReport", value: function(e3) {
        var t3 = e3.conversationID, n3 = e3.lastMessageSeq, o3 = e3.lastMessageTime, i3 = this._msgListHandler.getLocalMsgList(t3);
        if (0 !== i3.length) {
          for (var a3, s3 = i3.length - 1; 0 <= s3; s3--)
            if (a3 = i3[s3], !(o3 && a3.time > o3 || n3 && a3.sequence > n3)) {
              if ("in" === a3.flow && a3.isRead)
                break;
              a3.setIsRead(true);
            }
        }
      } }, { key: "updateUnreadCount", value: function(e3) {
        var t3, n3 = !(1 < arguments.length && void 0 !== arguments[1]) || arguments[1], o3 = false, i3 = this.getLocalConversation(e3), a3 = this._msgListHandler.getLocalMsgList(e3);
        if (i3)
          return (t3 = i3.unreadCount) !== (a3 = a3.filter(function(e4) {
            return !e4.isRead && !e4._onlineOnlyFlag && !e4.isDeleted;
          }).length) && (i3.unreadCount = a3, o3 = true, M2.l("".concat(this._n, ".updateUnreadCount from ").concat(t3, " to ").concat(a3, ", convID:").concat(e3)), true === n3) && this.emitConvUpdate(true, false), o3 && i3.type === A2.CONV_TOPIC && (t3 = i3.unreadCount, a3 = this.get(10), n3 = e3.replace(A2.CONV_GROUP, ""), a3.onUnreadCountUpdatedFromConv(n3, t3)), o3;
      } }, { key: "clearGroupAtInfoList", value: function(e3) {
        var t3, n3 = !(1 < arguments.length && void 0 !== arguments[1]) || arguments[1], o3 = this.getLocalConversation(e3);
        o3 && 0 < o3.groupAtInfoList.length && (o3.clearGroupAtInfoList(), M2.l("".concat(this._n, ".clearGroupAtInfoList convID:").concat(e3)), o3.type === A2.CONV_TOPIC && (o3 = o3.groupAtInfoList, t3 = this.get(10), e3 = e3.replace(A2.CONV_GROUP, ""), t3.onAtInfoUpdated({ topicID: e3, groupAtInfoList: o3 })), true === n3) && this.emitConvUpdate(true, false);
      } }, { key: "updateReadReceiptInfo", value: function(e3) {
        var a3, s3, o3, r3 = this, t3 = e3.userID, i3 = void 0 === t3 ? void 0 : t3, t3 = e3.groupID, c3 = void 0 === t3 ? void 0 : t3, t3 = e3.readReceiptList, e3 = e3.timestamp, u3 = void 0 === e3 ? 0 : e3;
        S2(t3) || (a3 = [], N2(i3) ? N2(c3) || (s3 = "".concat(A2.CONV_GROUP).concat(c3), t3.forEach(function(e4) {
          var t4 = e4.tinyID, n3 = e4.clientTime, o4 = e4.random, i4 = e4.readCount, e4 = e4.unreadCount, t4 = "".concat(t4, "-").concat(n3, "-").concat(o4), n3 = r3._msgListHandler.getLocalMsg(s3, t4) || r3._msgListHandler.getHoppingMsg(s3, t4), o4 = { groupID: c3, messageID: t4, readCount: 0, unreadCount: 0 };
          n3 && (R2(i4) && (n3.readReceiptInfo.readCount = i4, o4.readCount = i4), R2(e4) && (n3.readReceiptInfo.unreadCount = e4, o4.unreadCount = e4), a3.push(o4));
        })) : (o3 = "".concat(A2.CONV_C2C).concat(i3), t3.forEach(function(e4) {
          var t4 = e4.tinyID, n3 = e4.clientTime, e4 = e4.random, t4 = "".concat(t4, "-").concat(n3, "-").concat(e4), n3 = r3._msgListHandler.getLocalMsg(o3, t4) || r3._msgListHandler.getHoppingMsg(o3, t4);
          n3 && !n3.readReceiptInfo.isPeerRead && (n3.readReceiptInfo.isPeerRead = true, n3.readReceiptInfo.timestamp = u3, a3.push({ userID: i3, messageID: t4, isPeerRead: true, timestamp: u3 }));
        })), 0 < a3.length && this.emitOEvt(h2.MESSAGE_READ_RECEIPT_RECEIVED, a3));
      } }, { key: "updateIsRead", value: function(e3) {
        var t3 = this.getLocalConversation(e3), n3 = this.getLocalMessageList(e3);
        if (t3 && 0 !== n3.length && !bt2(t3.type)) {
          for (var o3 = [], i3 = 0, a3 = n3.length; i3 < a3; i3++)
            "in" !== n3[i3].flow ? "out" !== n3[i3].flow || n3[i3].isRead || n3[i3].setIsRead(true) : o3.push(n3[i3]);
          var s3 = 0;
          s3 = t3.type === A2.CONV_C2C ? (e3 = o3.slice(-t3.unreadCount).filter(function(e4) {
            return e4.isRevoked;
          }).length, o3.length - t3.unreadCount - e3) : o3.length - t3.unreadCount;
          for (var r3 = 0; r3 < s3 && !o3[r3].isRead; r3++)
            o3[r3].setIsRead(true);
        }
      } }, { key: "deleteGroupAtTips", value: function(e3) {
        var t3, n3, o3, i3 = this, a3 = "".concat(this._n, ".deleteGroupAtTips"), s3 = (M2.l("".concat(a3)), this._convMap.get(e3));
        return !s3 || 0 === (t3 = s3.groupAtInfoList).length ? Promise.resolve() : (s3 = void 0, e3.startsWith(A2.CONV_GROUP) && (s3 = e3.replace(A2.CONV_GROUP, "")), n3 = p2(t3), (Nt2({ groupID: s3 }) || Gt2(s3)) && 0 === (n3 = t3.filter(function(e4) {
          return !e4.atTypeArray.includes(A2.CONV_AT_ALL);
        })).length ? (this.clearGroupAtInfoList(e3, false), Promise.resolve()) : (o3 = this.getMyUserID(), this.req({ P: k2.DEL_GROUP_AT_TIPS, data: { messageListToDelete: n3.map(function(e4) {
          return { from: e4.from, to: o3, messageSeq: e4.__sequence, messageRandom: e4.__random, groupID: N2(e4.topicID) ? e4.groupID : e4.topicID };
        }) } }).then(function() {
          return M2.l("".concat(a3, " ok. count:").concat(t3.length)), i3.clearGroupAtInfoList(e3, false), Promise.resolve();
        }).catch(function(e4) {
          return M2.e("".concat(a3, " failed. error:"), e4), D2(e4);
        })));
      } }, { key: "appendToMessageList", value: function(e3) {
        return this._msgListHandler.pushIn(e3);
      } }, { key: "setMessageRandom", value: function(e3) {
        this._sll.set(e3.random);
      } }, { key: "deleteMessageRandom", value: function(e3) {
        this._sll.delete(e3.random);
      } }, { key: "pushIntoMessageList", value: function(e3, t3, n3) {
        return !(!this._msgListHandler.pushIn(t3, n3) || this._sll.has(t3.random) && !n3 || (e3.push(t3), 0));
      } }, { key: "revoke", value: function(e3, t3, n3) {
        return this._msgListHandler.revoke(e3, t3, n3);
      } }, { key: "getPeerReadTime", value: function(e3) {
        return this._peerReadTimeMap.get(e3);
      } }, { key: "recordPeerReadTime", value: function(e3, t3) {
        (!this._peerReadTimeMap.has(e3) || this._peerReadTimeMap.get(e3) < t3) && this._peerReadTimeMap.set(e3, t3);
      } }, { key: "updateMsgIsPeerReadProp", value: function(e3, t3) {
        var n3;
        e3.startsWith(A2.CONV_C2C) && 0 < t3 && (0 < (n3 = this._msgListHandler.updateMsgIsPeerReadProp(e3, t3)).length && this.emitOEvt(h2.MESSAGE_READ_BY_PEER, n3), this._convMap.has(e3)) && !S2(n3 = this._convMap.get(e3).lastMessage) && n3.fromAccount === this.getMyUserID() && n3.lastTime <= t3 && !n3.isPeerRead && (n3.isPeerRead = true, this.emitConvUpdate(true, false));
      } }, { key: "updateMsgIsModifiedProp", value: function(e3) {
        this._msgListHandler.updateMsgIsModifiedProp(e3);
      } }, { key: "setCompleted", value: function(e3) {
        M2.l("".concat(this._n, ".setCompleted convID:").concat(e3)), this._completedMap.set(e3, true);
      } }, { key: "updateRoamingMsgKeyAndTime", value: function(e3, t3, n3) {
        this._roamingMsgKeyAndTimeMap.set(e3, { messageKey: t3, lastMessageTime: n3 });
      } }, { key: "getConvList", value: function(t3) {
        var n3, o3 = this, i3 = "".concat(this._n, ".").concat("getConvList"), e3 = "pagingStatus:".concat(this._pagingStatus, ", local conversation count:").concat(this._convMap.size, ", options:").concat(JSON.stringify(t3));
        return M2.l("".concat(i3, ". ").concat(e3)), this._pagingStatus === Un2 ? ((n3 = new G2("getConvList")).setMessage(e3), this.syncConvList().then(function() {
          n3.end();
          var e4 = o3._getConvList(t3);
          return C2({ conversationList: e4, isSyncCompleted: o3._isSyncCompleted() });
        }).catch(function(e4) {
          return n3.setError(e4).end(), M2.e("".concat(i3, " failed. error:"), e4), D2(e4);
        })) : (e3 = this._getConvList(t3), M2.l("".concat(i3, ". returned conversation count:").concat(e3.length)), T2({ conversationList: e3, isSyncCompleted: this._isSyncCompleted() }));
      } }, { key: "_getConvList", value: function(t3) {
        var n3, o3, i3, a3, s3, r3 = this;
        return N2(t3) ? this.getLocalConvList() : O2(t3) ? 0 === t3.length ? [] : this.getLocalConvList().filter(function(e3) {
          return t3.includes(e3.conversationID);
        }) : f2(t3) ? (n3 = t3.type, o3 = t3.markType, i3 = t3.groupName, a3 = t3.hasUnreadCount, s3 = t3.hasGroupAtInfo, this.getLocalConvList().filter(function(e3) {
          return r3._filterType(e3, n3) && r3._filterMarkType(e3, o3) && r3._filterGroupName(e3, i3) && r3._filterUnreadCount(e3, a3) && r3._filterGroupAtInfo(e3, s3);
        })) : [];
      } }, { key: "_filterType", value: function(e3, t3) {
        return t3 !== A2.CONV_C2C && t3 !== A2.CONV_GROUP || e3.type === t3;
      } }, { key: "_filterGroupName", value: function(e3, t3) {
        return !m2(t3) || ("" === t3 ? 0 === e3.conversationGroupList.length : e3.conversationGroupList.includes(t3));
      } }, { key: "_filterMarkType", value: function(e3, t3) {
        return !R2(t3) || (0 === t3 ? 0 === e3.markList.length : e3.markList.includes(t3));
      } }, { key: "_filterUnreadCount", value: function(e3, t3) {
        var n3 = true;
        return true === t3 ? n3 = 1 <= e3.unreadCount : false === t3 && (n3 = 0 === e3.unreadCount), n3;
      } }, { key: "_filterGroupAtInfo", value: function(e3, t3) {
        var n3 = true;
        return true === t3 ? n3 = 1 <= e3.groupAtInfoList.length : false === t3 && (n3 = 0 === e3.groupAtInfoList.length), n3;
      } }, { key: "_handleC2CPeerReadTime", value: function() {
        var e3, t3 = Z2(this._convMap);
        try {
          for (t3.s(); !(e3 = t3.n()).done; ) {
            var n3 = Y2(e3.value, 2), o3 = n3[0], i3 = n3[1];
            i3.type === A2.CONV_C2C && this.recordPeerReadTime(o3, i3.peerReadTime);
          }
        } catch (e4) {
          t3.e(e4);
        } finally {
          t3.f();
        }
      } }, { key: "_isPagingGetGroupListCompleted", value: function() {
        var e3 = this.get(7);
        return !e3 || e3.isPagingGetCompleted();
      } }, { key: "_getLocalGroupCount", value: function() {
        var e3 = this.get(7);
        return e3 ? e3.getLocalGroupList().length : 0;
      } }, { key: "_hasLocalGroup", value: function(e3) {
        var t3 = this.get(7);
        return !!t3 && t3.hasLocalGroup(e3.replace(A2.CONV_GROUP, ""));
      } }, { key: "getConversationProfile", value: function(o3) {
        var i3, a3 = this, s3 = false;
        if (this._convMap.has(o3) ? i3 = this._convMap.get(o3) : (i3 = new ii2({ conversationID: o3, type: Pt2(o3) ? A2.CONV_C2C : A2.CONV_GROUP }, this.isIntl(), this.isUsingChatCore()), s3 = true), i3._isInfoCompleted || i3.type === A2.CONV_SYSTEM)
          return T2({ conversation: i3 });
        if (Ut2(o3)) {
          if (!this.get(7))
            return D2({ code: L2.NO_MODULE });
          if (!this._hasLocalGroup(o3))
            return T2({ conversation: i3 });
        }
        var r3 = "".concat(this._n, ".").concat("getConversationProfile"), c3 = new G2("getConversationProfile");
        return M2.l("".concat(r3, ". convID:").concat(o3, " remark:").concat(i3.remark, " lastMessage:"), i3.lastMessage), this._getUserOrGroupProfile(i3).then(function(e3) {
          c3.setMessage("convID:".concat(o3, " unreadCount:").concat(e3.data.conversation.unreadCount)).end();
          var t3, n3 = a3.get(8);
          if (n3 && i3.type === A2.CONV_C2C && (t3 = o3.replace(A2.CONV_C2C, ""), n3.isMyFriend(t3)) && (n3 = n3.getFriendRemark(t3), i3.remark !== n3) && (i3.remark = n3, M2.l("".concat(r3, ". convID:").concat(o3, " patch remark:").concat(i3.remark))), M2.l("".concat(r3, " ok. isNewConv:").concat(s3, " convID:").concat(o3)), s3) {
            if (i3.type === A2.CONV_C2C)
              return a3._onNewC2CConv([o3.replace(A2.CONV_C2C, "")]).then(function() {
                return T2({ conversation: i3 });
              });
            if (i3.type === A2.CONV_GROUP)
              return a3._onNewGroupConv([o3.replace(A2.CONV_GROUP, "")]).then(function() {
                return T2({ conversation: i3 });
              });
          }
          return e3;
        }).catch(function(e3) {
          return c3.setError(e3).setMessage("convID:".concat(o3)).end(), M2.e("".concat(r3, " failed. error:"), e3), D2(e3);
        });
      } }, { key: "_getUserOrGroupProfile", value: function(t3) {
        var n3 = this;
        return t3.type === A2.CONV_C2C ? this.get(4).getUserProfile({ userIDList: [t3.toAccount] }).then(function(e3) {
          e3 = e3.data;
          return 0 === e3.length ? D2({ code: L2.USER_OR_GRP_NOT_FOUND }) : (t3.userProfile = e3[0], t3._isInfoCompleted = true, n3._insertConvAfterTopmost(t3), T2({ conversation: t3 }));
        }) : this.get(7).getGroupProfile({ groupID: t3.toAccount }).then(function(e3) {
          return t3.groupProfile = e3.data.group, t3._isInfoCompleted = true, n3._insertConvAfterTopmost(t3), T2({ conversation: t3 });
        });
      } }, { key: "_insertConvAfterTopmost", value: function(e3) {
        var t3, n3;
        e3 instanceof ii2 && !this._convMap.has(e3.conversationID) && (n3 = (t3 = p2(this._convMap)).findIndex(function(e4) {
          return false === e4[1].isPinned;
        }), t3.splice(n3, 0, [e3.conversationID, e3]), this._convMap = new Map(t3), this._setStorageConvList(), this.emitConvUpdate(true, false));
      } }, { key: "_onProfileUpdated", value: function(e3) {
        var n3 = this;
        e3.data.forEach(function(e4) {
          var t3 = e4.userID;
          t3 === n3.getMyUserID() ? n3._onMyProfileModified({ latestNick: e4.nick, latestAvatar: e4.avatar }) : (t3 = n3._convMap.get("".concat(A2.CONV_C2C).concat(t3))) && (t3.userProfile = e4);
        });
      } }, { key: "_onCloudConfig", value: function(e3) {
        "0" === this.getCloudConfig("pull_on_invite") && (this._bPullOnInvite = false), M2.l("".concat(this._n, "._onCloudConfig bPullOnInvite:").concat(this._bPullOnInvite));
      } }, { key: "disableMsgPullOnInvite", value: function() {
        this._bPullOnInvite = false;
      } }, { key: "_isSyncCompleted", value: function() {
        return this._pagingStatus === Pn2;
      } }, { key: "_errorLog", value: function(e3, t3, n3, o3) {
        var i3 = new Error("Params validate failed."), a3 = "".concat(this.getErrMsg("API_REFER")).concat(e3);
        throw M2.w("[".concat(e3, "] | ").concat(t3, " | ").concat(this.getErrMsg(n3, o3), ", ").concat(a3)), M2.e("[".concat(e3, "] Invalid ").concat(t3, ": type check failed for ").concat(t3, ".")), i3;
      } }, { key: "_isValidConvID", value: function(e3) {
        return Pt2(e3) || Ut2(e3) || bt2(e3);
      } }, { key: "deleteConversation", value: function(e3) {
        var t3 = this, n3 = "deleteConversation";
        return m2(e3) || ut2(e3) || this._errorLog(n3, "options", "StringOrObjectRequiredLog"), m2(e3) ? (this._isValidConvID(e3) || this._errorLog(n3, "options", "InvalidConversationID", e3), M2.l("".concat(this._n, ".").concat(n3, " convID:").concat(e3)), this.deleteConvList({ conversationIDList: [e3], flag: 1 })) : (O2(e3.conversationIDList) || this._errorLog(n3, "conversationIDList", "ArrayRequiredLog"), 0 === e3.conversationIDList.length && this._errorLog(n3, "conversationIDList", "NonEmptyArrayLog"), e3.conversationIDList.forEach(function(e4) {
          t3._isValidConvID(e4) || t3._errorLog(n3, "conversationIDList", "InvalidConversationID", e4);
        }), "clearHistoryMessage" in e3 && "boolean" != typeof e3.clearHistoryMessage && this._errorLog(n3, "clearHistoryMessage", "BooleanRequiredLog"), 100 < e3.conversationIDList.length && (e3.conversationIDList = e3.conversationIDList.slice(0, 100)), this.deleteConvList(e3));
      } }, { key: "deleteConvList", value: function(e3) {
        var t3 = e3.conversationIDList, t3 = void 0 === t3 ? [] : t3, n3 = e3.clearHistoryMessage, n3 = void 0 === n3 || n3, e3 = e3.flag, o3 = void 0 === e3 ? 0 : e3, i3 = "".concat(this._n, ".").concat("deleteConvList"), e3 = "convIDList:".concat(t3, " clearHistoryMessage:").concat(n3), a3 = (M2.l("".concat(i3, " ").concat(e3)), new G2("deleteConvList"));
        return a3.setMessage(e3), Promise.all([this.rmLocalOnlyConvList(t3), this.rmLocalAndRemoteConvList(t3, n3)]).then(function(e4) {
          a3.end();
          e4 = [].concat(p2(e4[0]), p2(e4[1]));
          return 0 === e4.length ? D2(new E2({ code: L2.CONV_NOT_FOUND })) : (M2.l("".concat(i3, " ok")), T2(1 === o3 ? { conversationID: e4[0] } : { conversationIDList: e4 }));
        }).catch(function(e4) {
          return a3.setError(e4).end(), M2.e("".concat(i3, " failed. error:"), e4), D2(e4);
        });
      } }, { key: "rmLocalOnlyConvList", value: function(e3) {
        var n3 = this;
        return e3.filter(function(e4) {
          var t3;
          return !!n3._convMap.has(e4) && ((t3 = n3.getLocalConversation(e4).type) !== A2.CONV_GROUP || n3._hasLocalGroup(e4) ? t3 === A2.CONV_SYSTEM && (n3.get(7).deleteGroupSystemNotice({ messageList: n3._msgListHandler.getLocalMsgList(e4) }), n3.deleteLocalConv(e4), true) : (n3.deleteLocalConv(e4), true));
        });
      } }, { key: "rmLocalAndRemoteConvList", value: function(e3, t3) {
        var n3 = this, o3 = { fromAccount: this.getMyUserID(), conversationList: [], clearHistoryMessage: t3 ? 1 : 0 };
        return e3.forEach(function(e4) {
          var t4;
          n3._convMap.has(e4) && ((t4 = n3.getLocalConversation(e4).type) === A2.CONV_C2C ? o3.conversationList.push({ toAccount: e4.replace(t4, ""), type: 1 }) : t4 === A2.CONV_GROUP && n3._hasLocalGroup(e4) && o3.conversationList.push({ toGroupID: e4.replace(t4, ""), type: 2 }));
        }), 0 === o3.conversationList.length ? [] : this.req({ P: k2.DEL_CONV, data: o3 }).then(function(e4) {
          var t4 = [];
          return 0 < e4.data.resultList.length && e4.data.resultList.map(function(e5) {
            0 === e5.code && (e5 = 1 === e5.type ? "".concat(A2.CONV_C2C).concat(e5.to) : "".concat(A2.CONV_GROUP).concat(e5.groupID), t4.push(e5));
          }), n3.deleteLocalConvList(t4), t4;
        });
      } }, { key: "setConvDraft", value: function(e3) {
        var t3 = e3.conversationID, e3 = e3.draftText, n3 = "".concat(this._n, ".").concat("setConvDraft");
        return M2.l("".concat(n3, " convID:").concat(t3, " draftText:").concat(e3)), this._convMap.has(t3) ? ((n3 = this._convMap.get(t3)).setDraftText(e3), this.emitConvUpdate(), T2({ code: 0, conversation: n3 })) : D2({ code: L2.CONV_NOT_FOUND });
      } }, { key: "clearHistoryMessage", value: function(t3) {
        var n3 = this, e3 = { fromAccount: this.getMyUserID(), toAccount: void 0, type: void 0, toGroupID: void 0 };
        if (!this._convMap.has(t3))
          return D2({ code: L2.CONV_NOT_FOUND });
        var o3 = this._convMap.get(t3).type;
        if (o3 === A2.CONV_C2C)
          e3.type = 1, e3.toAccount = t3.replace(A2.CONV_C2C, "");
        else {
          if (o3 !== A2.CONV_GROUP)
            return o3 === A2.CONV_SYSTEM ? (this.get(7).deleteGroupSystemNotice({ messageList: this._msgListHandler.getLocalMsgList(t3) }), T2({ conversationID: t3 })) : D2({ code: L2.CONV_UN_RECORDED_TYPE });
          e3.type = 2, e3.toGroupID = t3.replace(A2.CONV_GROUP, "");
        }
        var i3 = "".concat(this._n, ".").concat("clearHistoryMessage"), a3 = new G2("clearHistoryMessage");
        return a3.setMessage("convID:".concat(t3)), M2.l("".concat(i3, ". convID:").concat(t3)), this.setMessageRead({ conversationID: t3 }).then(function() {
          return n3.req({ P: k2.CLEAR_HISTORY_MSG, data: e3 });
        }).then(function() {
          a3.end(), M2.l("".concat(i3, " ok")), n3.clearMemMsg(t3);
          var e4 = n3.getLocalConversation(t3);
          return e4 && (e4.updateLastMessage(), n3._sortConvListAndEmitEvent()), T2({ conversationID: t3 });
        }).catch(function(e4) {
          return a3.setError(e4).end(), M2.e("".concat(i3, " failed. error:"), e4), D2(e4);
        });
      } }, { key: "pinConversation", value: function(e3) {
        var t3, n3, o3, i3 = this, a3 = e3.conversationID, s3 = e3.isPinned, r3 = this.getLocalConversation(a3);
        return r3 && r3.isPinned === s3 ? T2({ conversationID: a3 }) : bt2(a3) ? (r3 && (r3.isPinned = s3), this._sortConvListAndEmitEvent(), T2({ conversationID: a3 })) : (e3 = null, Pt2(a3) ? e3 = { type: 1, toAccount: a3.replace(A2.CONV_C2C, "") } : Ut2(a3) && (e3 = { type: 2, groupID: a3.replace(A2.CONV_GROUP, "") }), null === e3 ? D2({ code: L2.INVALID_CONV_ID }) : (t3 = "".concat(this._n, ".").concat("pinConversation"), n3 = "convID:".concat(a3, " isPinned:").concat(s3), (o3 = new G2("pinConversation")).setMessage(n3), M2.l("".concat(t3, ". ").concat(n3)), this.req({ P: k2.PIN_CONV, data: { fromAccount: this.getMyUserID(), operationType: true === s3 ? 1 : 2, itemList: [e3] } }).then(function() {
          return o3.end(), M2.l("".concat(t3, " ok")), r3 ? r3.isPinned !== s3 && (r3.isPinned = s3) : i3._convMap.set(a3, new ii2({ conversationID: a3, type: Pt2(a3) ? A2.CONV_C2C : A2.CONV_GROUP, isPinned: s3 }, i3.isIntl(), i3.isUsingChatCore())), i3._sortConvListAndEmitEvent(), C2({ conversationID: a3 });
        }).catch(function(e4) {
          return o3.setError(e4).end(), M2.e("".concat(t3, " failed. error:"), e4), D2(e4);
        })));
      } }, { key: "setMessageRemindType", value: function(e3) {
        return this._msgRemindHandler.set(e3);
      } }, { key: "patchMsgRemindType", value: function(e3) {
        var t3 = e3.ID, n3 = e3.isC2CConversation, o3 = e3.messageRemindType, i3 = false, n3 = this.getLocalConversation("".concat(n3 ? A2.CONV_C2C : A2.CONV_GROUP).concat(t3));
        return n3 && n3.messageRemindType !== o3 && (n3.messageRemindType = o3, i3 = true), M2.l("".concat(this._n, ".patchMsgRemindType options:"), e3, "ret:".concat(i3)), i3;
      } }, { key: "onC2CMsgRemindTypeFetched", value: function(e3) {
        var n3, o3 = this;
        O2(e3) && 0 < e3.length && (n3 = 0, e3.forEach(function(e4) {
          var t3 = e4.userID, e4 = e4.muteFlag, e4 = o3._transMsgRemindType(e4);
          true === o3.patchMsgRemindType({ ID: t3, isC2CConversation: true, messageRemindType: e4 }) && (n3 += 1);
        }), M2.l("".concat(this._n, ".onC2CMsgRemindTypeFetched updateCount:").concat(n3)), 1 <= n3) && this.emitConvUpdate(true, false);
      } }, { key: "onC2CMsgRemindTypeSynced", value: function(e3) {
        var n3 = this, o3 = "".concat(this._n, ".onC2CMsgRemindTypeSynced");
        e3.dataList.forEach(function(e4) {
          var t3;
          S2(e4.muteNotificationsSync) || (t3 = (e4 = e4.muteNotificationsSync).to, e4 = e4.muteFlag, e4 = n3._transMsgRemindType(e4), n3.patchMsgRemindType({ ID: t3, isC2CConversation: !(t3 = 0), messageRemindType: e4 }) && (t3 += 1), M2.l("".concat(o3, " updateCount:").concat(t3)), 1 <= t3 && n3.emitConvUpdate(true, false));
        });
      } }, { key: "onGroupMsgRemindTypeUpdated", value: function(e3) {
        this._msgRemindHandler.onGroupMsgRemindTypeUpdated(e3);
      } }, { key: "deleteLocalConv", value: function(e3) {
        var t3 = !(1 < arguments.length && void 0 !== arguments[1]) || arguments[1], n3 = this._convMap.has(e3);
        M2.l("".concat(this._n, ".deleteLocalConv convID:").concat(e3, " has:").concat(n3)), n3 && (this._convMap.delete(e3), this._convMapForDiff.delete(e3), this.clearMemMsg(e3), this._setStorageConvList(true), t3) && (n3 = !this._isTopicConv(e3), this.emitConvUpdate(n3, false));
      } }, { key: "pullMsgOnInvite", value: function(e3) {
        var t3, n3, o3, i3, a3, s3 = this.get(7);
        s3 && (t3 = "".concat(this._n, ".pullMsgOnInvite"), M2.l("".concat(t3, " flag:").concat(this._bPullOnInvite)), this._bPullOnInvite) && (a3 = this.getLocalLastMessage(e3), n3 = this.getLocalSecondLastMessage(e3), i3 = o3 = 1, a3 && (o3 = a3.sequence), n3 && (i3 = n3.sequence), a3 = s3.getGroupRemoteLastSeq(e3.replace(A2.CONV_GROUP, "")), M2.l("".concat(t3, " convID:").concat(e3, " localLastSeq:").concat(o3, " localSecondLastSeq:").concat(i3, " remoteLastSeq:").concat(a3)), this.clearMemMsg(e3), 1 < o3 - i3 ? this._recursiveGetMsgList([], e3, false, o3, i3) : 1 < a3 - o3 && this._recursiveGetMsgList([], e3, true, a3, o3));
      } }, { key: "_recursiveGetMsgList", value: function(i3, a3, s3, r3, c3, e3) {
        var u3 = this;
        this.getMessageList({ conversationID: a3, nextReqMessageID: e3 }).then(function(e4) {
          var e4 = e4.data, t3 = e4.messageList, n3 = e4.isCompleted, e4 = e4.nextReqMessageID, o3 = t3.filter(function(e5) {
            return s3 ? e5.sequence > c3 && e5.sequence <= r3 : e5.sequence > c3 && e5.sequence < r3;
          });
          i3.unshift.apply(i3, p2(o3)), !n3 && 0 < t3.length && t3[0].sequence > c3 && i3.length < 60 ? u3._recursiveGetMsgList(i3, a3, s3, r3, c3, e4) : u3._emitMsgReceived(a3, i3);
        });
      } }, { key: "_emitMsgReceived", value: function(e3, t3) {
        var n3, o3, i3 = this;
        0 < t3.length && (t3 = t3.filter(function(t4, e4, n4) {
          return e4 === n4.findIndex(function(e5) {
            return e5.sequence === t4.sequence;
          });
        }), n3 = this.hasLocalConversation(e3), o3 = t3.map(function(e4) {
          return e4.sequence;
        }), M2.l("".concat(this._n, "._emitMsgReceived convID:").concat(e3, " has:").concat(n3, " count:").concat(o3.length, " sequenceList:"), o3), this.emitOEvt(h2.MESSAGE_RECEIVED, t3), n3 ? this.patchConvLastMessage(e3, true) : this.getConversationProfile(e3).then(function() {
          i3.patchConvLastMessage(e3, true);
        }));
      } }, { key: "deleteLocalConvList", value: function(e3) {
        var t3 = this, n3 = false;
        e3.forEach(function(e4) {
          t3._convMap.has(e4) && (t3.deleteLocalConv(e4, false), n3 = true);
        }), M2.l("".concat(this._n, ".deleteLocalConvList convID:").concat(e3, " isConvIDExisted:").concat(n3)), n3 && this.emitConvUpdate(true, false);
      } }, { key: "isMessageSentByCurrentInstance", value: function(e3) {
        return !(!this._msgListHandler.hasLocalMsg(e3.conversationID, e3.ID) && !this._sll.has(e3.random));
      } }, { key: "modifyMessageList", value: function(e3) {
        var t3, n3;
        e3.startsWith(A2.CONV_C2C) && this._convMap.has(e3) && (n3 = this._convMap.get(e3), t3 = Date.now(), this._msgListHandler.modifyMsgSentByPeer({ conversationID: e3, latestNick: n3.userProfile.nick, latestAvatar: n3.userProfile.avatar }), n3 = this.get(4).getNickAndAvatarByUserID(this.getMyUserID()), this._msgListHandler.modifyMsgSentByMe({ conversationID: e3, latestNick: n3.nick, latestAvatar: n3.avatar }), M2.l("".concat(this._n, ".modifyMessageList convID:").concat(e3, " cost:").concat(nn2(t3))));
      } }, { key: "updateUserProfileSpecifiedKey", value: function(e3) {
        M2.l("".concat(this._n, ".updateUserProfileSpecifiedKey options:"), e3);
        var t3 = e3.conversationID, n3 = e3.nick, e3 = e3.avatar;
        this._convMap.has(t3) && (t3 = this._convMap.get(t3).userProfile, m2(n3) && t3.nick !== n3 && (t3.nick = n3), m2(e3) && t3.avatar !== e3 && (t3.avatar = e3), this.emitConvUpdate(true, false));
      } }, { key: "_onMyProfileModified", value: function(t3) {
        var n3 = this, e3 = this.getLocalConvList(), o3 = Date.now();
        e3.forEach(function(e4) {
          n3.modifyMessageSentByMe(y2({ conversationID: e4.conversationID }, t3));
        }), M2.l("".concat(this._n, "._onMyProfileModified. modify all messages sent by me, cost:").concat(nn2(o3)));
      } }, { key: "modifyMessageSentByMe", value: function(e3) {
        this._msgListHandler.modifyMsgSentByMe(e3);
      } }, { key: "getLatestMessageSentByMe", value: function(e3) {
        return this._msgListHandler.getLatestMsgSentByMe(e3);
      } }, { key: "modifyMessageSentByPeer", value: function(e3) {
        this._msgListHandler.modifyMsgSentByPeer(e3);
      } }, { key: "getLatestMessageSentByPeer", value: function(e3) {
        return this._msgListHandler.getLatestMsgSentByPeer(e3);
      } }, { key: "pushIntoNoticeResult", value: function(e3, t3) {
        return !(!this._msgListHandler.pushIn(t3) || this._sll.has(t3.random) || (e3.push(t3), 0));
      } }, { key: "getLocalLastMessage", value: function(e3) {
        return this._msgListHandler.getLocalLastMsg(e3);
      } }, { key: "getLocalSecondLastMessage", value: function(e3) {
        return this._msgListHandler.getLocalSecondLastMsg(e3);
      } }, { key: "checkAndPatchRemark", value: function() {
        var e3, n3, o3 = this.get(8);
        0 !== this._convMap.size && o3 && 0 !== (e3 = p2(this._convMap.values()).filter(function(e4) {
          return e4.type === A2.CONV_C2C;
        })).length && (n3 = 0, e3.forEach(function(e4) {
          var t3 = e4.conversationID.replace(A2.CONV_C2C, "");
          o3.isMyFriend(t3) && (t3 = o3.getFriendRemark(t3), e4.remark !== t3) && (e4.remark = t3, n3 += 1);
        }), M2.l("".concat(this._n, ".checkAndPatchRemark. c2cConvCount:").concat(e3.length, " patchedCount:").concat(n3)), 0 < n3) && this.emitConvUpdate(true, false);
      } }, { key: "updateTopicConversation", value: function(e3) {
        this._updateLocalConvList({ conversationOptionsList: e3, isFromGetConversations: true, updateUnreadCount: true });
      } }, { key: "sendReadReceipt", value: function(e3) {
        var t3 = e3[0], n3 = null;
        return t3.conversationType === A2.CONV_C2C ? n3 = this._m.get(6) : t3.conversationType === A2.CONV_GROUP && (n3 = this._m.get(7)), n3 ? n3.sendReadReceipt(e3) : D2({ code: L2.NO_MODULE });
      } }, { key: "getReadReceiptList", value: function(e3) {
        var t3 = e3[0], n3 = null;
        return t3.conversationType === A2.CONV_C2C ? n3 = this._m.get(6) : t3.conversationType === A2.CONV_GROUP && (n3 = this._m.get(7)), n3 ? n3.getReadReceiptList(e3) : D2({ code: L2.NO_MODULE });
      } }, { key: "getLastMessageTime", value: function(e3) {
        e3 = this.getLocalConversation(e3);
        return e3 ? e3.lastMessage.lastTime : 0;
      } }, { key: "getTotalUnreadCount", value: function() {
        var e3 = this.getLocalConvList(), t3 = 0;
        return e3.forEach(function(e4) {
          e4.type === A2.CONV_SYSTEM || "" !== e4.messageRemindType && e4.messageRemindType !== A2.MSG_REMIND_ACPT_AND_NOTE || (t3 += e4.unreadCount);
        }), t3;
      } }, { key: "onTotalUnreadCountUpdate", value: function() {
        var e3 = this.getTotalUnreadCount();
        this._convTotalUnreadCount !== e3 && (M2.l("".concat(this._n, ".onTotalUnreadCountUpdate from ").concat(this._convTotalUnreadCount, " to ").concat(e3)), this._convTotalUnreadCount = e3, this.emitOEvt(h2.TOTAL_UNREAD_MESSAGE_COUNT_UPDATED));
      } }, { key: "_isConvNeedShow", value: function(e3) {
        var t3, n3, e3 = this.getLocalConversation(e3);
        return !(!N2(e3) && (t3 = e3.type === A2.CONV_TOPIC, n3 = e3.type === A2.CONV_GROUP && e3.groupProfile.type === A2.GRP_ROOM, e3 = e3.type === A2.CONV_GROUP && e3.groupProfile.type === A2.GRP_LIVE, t3 || n3 || e3));
      } }, { key: "setAllRcvMsgOpt", value: function(e3) {
        return this._msgRemindHandler.setAllRcvMsgOpt(e3);
      } }, { key: "getAllRcvMsgOpt", value: function() {
        return this._msgRemindHandler.getAllRcvMsgOpt();
      } }, { key: "onAllRcvMsgOptNotify", value: function(e3) {
        this._msgRemindHandler.onAllRcvMsgOptNotify(e3);
      } }, { key: "clearUnreadCount", value: function(e3) {
        e3 = this.getLocalConversation(e3);
        e3 && 0 < e3.unreadCount && (e3.unreadCount = 0, this.emitConvUpdate(true, false));
      } }, { key: "storeHoppingMessageList", value: function(e3) {
        this._msgListHandler.storeHoppingMsgList(e3);
      } }, { key: "clearMemMsg", value: function(e3) {
        var t3 = 1 < arguments.length && void 0 !== arguments[1] && arguments[1];
        M2.l("".concat(this._n, ".clearMemMsg convID:").concat(e3, " isOverLimit:").concat(t3)), this._msgListHandler.removeByConvID(e3), this._completedMap.delete(e3), this._roamingMsgKeyAndTimeMap.delete(e3), this._everClearedMap.set(e3, 1);
      } }, { key: "reset", value: function() {
        M2.l("".concat(this._n, ".reset")), this._setStorageConvList(true), this._pagingStatus = Nn2, this._msgListHandler.reset(), this._msgRemindHandler.reset(), this._roamingMsgKeyAndTimeMap.clear(), this._sll.reset(), this._peerReadTimeMap.clear(), this._completedMap.clear(), this._convMap.clear(), this._pagingTs = 0, this._pagingStartIdx = 0, this._pagingPinnedTs = 0, this._pagingPinnedStartIdx = 0, this._remoteGroupReadSeqMap.clear(), this._convTotalUnreadCount = 0, this._pagingGetCostList.length = 0, this._pagingConvIDMap.clear(), this._convIDFromUnreadDBMap.clear(), this._pagingGetCostList.length = 0, this._convMapForDiff.clear(), this._partialUpdatedConvMap.clear(), this._everClearedMap.clear(), this._bPullOnInvite = true, this._convGroupHandler.reset(), this.resetReady();
      } }]), Zi2), ui2 = (e2(Xi2, [{ key: "onCheckTimer", value: function(e3) {
        e3 % 1 == 0 && 0 < this._cachedGroupTipsMap.size && this._check();
      } }, { key: "_check", value: function() {
        var i3 = this;
        this._cachedGroupTipsMap.forEach(function(e3, t3) {
          var n3 = i3._checkCountMap.get(t3), o3 = i3._grpM.hasLocalGroup(t3);
          M2.l("".concat(i3._n, "._check groupID:").concat(t3, " hasLocalGroup:").concat(o3, " checkCount:").concat(n3)), o3 ? (i3._notifyCachedGroupTips(t3), i3._checkCountMap.delete(t3), i3._grpM.deleteUnjoinedAVChatRoom(t3)) : n3 >= i3.MAX_CHECK_COUNT ? (i3._deleteCachedGroupTips(t3), i3._checkCountMap.delete(t3)) : i3._checkCountMap.set(t3, ++n3);
        });
      } }, { key: "onNewGroupTips", value: function(e3) {
        M2.l("".concat(this._n, ".onNewGroupTips options:").concat(JSON.stringify(e3.dataList)));
        var e3 = this._assembly(e3), t3 = e3.eventDataList, n3 = e3.result, e3 = e3.AVChatRoomMessageList;
        0 < e3.length && this._grpM.onAVChatRoomMessage(e3), 0 < n3.length && (this._grpM.emitOEvt(h2.MESSAGE_RECEIVED, n3), this._handleTips(n3)), 0 < t3.length && (this._grpM.updateNextMessageSeq(t3), this._grpM.get(11).onNewMessage({ conversationOptionsList: t3, isInstantMessage: true }));
      } }, { key: "_assembly", value: function(e3) {
        for (var t3 = e3.event, n3 = e3.dataList, o3 = null, i3 = [], a3 = [], s3 = {}, r3 = [], c3 = 0, u3 = n3.length; c3 < u3; c3++) {
          var l3 = Mt2(n3[c3]);
          if (6 === t3) {
            if (this._grpM.isGroupAttributesUpdatedNotice(l3))
              continue;
            if (this._grpM.isGroupCountersNotice(l3))
              continue;
          }
          var d3 = l3.groupProfile, p3 = d3.groupID, _3 = d3.communityType, _3 = void 0 === _3 ? 0 : _3, h3 = d3.topicID, h3 = void 0 === h3 ? void 0 : h3, g3 = d3.invisible, d3 = d3.groupType, d3 = void 0 === d3 ? void 0 : d3, f3 = void 0, m3 = this._grpM.isMessageFromTopic(_3, h3), v3 = (m3 && (f3 = A2.CONV_TOPIC, l3.to = h3), this._grpM.hasLocalGroup(p3));
          if (v3 || !this._grpM.isUnjoinedAVChatRoom(p3))
            if (v3 || m3)
              if (this._grpM.isMessageFromOrToAVChatroom(p3))
                l3.event = t3, r3.push(l3);
              else if (l3.currentUser = this._grpM.getMyUserID(), l3.conversationType = A2.CONV_GROUP, (o3 = new Do2(l3)).setElement({ type: A2.MSG_GRP_TIP, content: y2(y2({}, l3.elements), {}, { groupProfile: l3.groupProfile }) }), o3.isSystemMessage = false, 1 !== g3) {
                var v3 = this._grpM.get(11), m3 = o3, g3 = m3.conversationID, m3 = m3.sequence;
                if (6 === t3)
                  o3._onlineOnlyFlag = true, a3.push(o3);
                else if (!v3.pushIntoNoticeResult(a3, o3))
                  continue;
                this._grpM.isMessageFromCommunityOfTopic(_3, h3) || 6 === t3 && v3.getLocalConversation(g3) || (6 !== t3 && this._qualityStat(o3), _3 = v3.isRemoteRead({ conversationID: g3, sequence: m3 }), N2(s3[g3]) ? (h3 = 0, "in" !== o3.flow || o3._isExcludedFromUnreadCount || o3._onlineOnlyFlag || _3 || (h3 = 1), s3[g3] = i3.push({ conversationID: g3, unreadCount: h3, type: N2(f3) ? o3.conversationType : f3, subType: o3.conversationSubType, lastMessage: o3._isExcludedFromLastMessage ? "" : o3 }) - 1) : (i3[v3 = s3[g3]].type = o3.conversationType, i3[v3].subType = o3.conversationSubType, i3[v3].lastMessage = o3._isExcludedFromLastMessage ? "" : o3, "in" !== o3.flow || o3._isExcludedFromUnreadCount || o3._onlineOnlyFlag || _3 || i3[v3].unreadCount++));
              } else
                this._qualityStat(o3);
            else
              this._cacheAndCompare({ groupID: p3, event: t3, item: l3, groupType: d3 });
        }
        return { eventDataList: i3, result: a3, AVChatRoomMessageList: r3 };
      } }, { key: "_qualityStat", value: function(e3) {
        this._grpM.get(26).addMessageSequence({ key: jn2, message: e3 });
      } }, { key: "_handleTips", value: function(e3) {
        var t3 = this;
        e3.forEach(function(e4) {
          switch (e4.payload.operationType) {
            case 1:
              t3._onNewMemberComeIn(e4);
              break;
            case 2:
              t3._onMemberQuit(e4);
              break;
            case 3:
              t3._onMemberKickedOut(e4);
              break;
            case 4:
              t3._onMemberSetAdmin(e4);
              break;
            case 5:
              t3._onMemberCancelledAdmin(e4);
              break;
            case 6:
              t3._onGroupProfileModified(e4);
              break;
            case 7:
              t3._onMemberInfoModified(e4);
              break;
            case 8:
              t3._onTopicProfileUpdated(e4);
              break;
            default:
              M2.w("".concat(t3._n, "._handleTips unknown operationType:").concat(e4.payload.operationType));
          }
        });
      } }, { key: "_onNewMemberComeIn", value: function(e3) {
        var e3 = e3.payload, t3 = e3.memberNum, e3 = e3.groupProfile.groupID, e3 = this._grpM.getLocalGroupProfile(e3);
        e3 && R2(t3) && e3.memberCount !== t3 && (e3.memberCount = t3, this._updateConvGroupProfile(e3));
      } }, { key: "_onMemberQuit", value: function(e3) {
        var t3 = e3.payload, n3 = t3.memberNum, t3 = t3.groupProfile.groupID, o3 = this._grpM.getLocalGroupProfile(t3);
        o3 && R2(n3) && o3.memberCount !== n3 && (o3.memberCount = n3, this._updateConvGroupProfile(o3)), this._grpM.getGroupMemberHandler().deleteLocalGroupMembers(t3, e3.payload.userIDList);
      } }, { key: "_onMemberKickedOut", value: function(e3) {
        var t3 = e3.payload, n3 = t3.memberNum, t3 = t3.groupProfile.groupID, o3 = this._grpM.getLocalGroupProfile(t3);
        o3 && R2(n3) && o3.memberCount !== n3 && (o3.memberCount = n3, this._updateConvGroupProfile(o3)), this._grpM.getGroupMemberHandler().deleteLocalGroupMembers(t3, e3.payload.userIDList);
      } }, { key: "_updateConvGroupProfile", value: function(e3) {
        this._grpM.get(11).updateConvGroupProfile([e3]);
      } }, { key: "_onMemberSetAdmin", value: function(e3) {
        var t3 = e3.payload.groupProfile.groupID, e3 = e3.payload.userIDList, n3 = this._grpM.getGroupMemberHandler();
        e3.forEach(function(e4) {
          e4 = n3.getLocalGroupMemberInfo(t3, e4);
          e4 && e4.updateRole(A2.GRP_MBR_ROLE_ADMIN);
        });
      } }, { key: "_onMemberCancelledAdmin", value: function(e3) {
        var t3 = e3.payload.groupProfile.groupID, e3 = e3.payload.userIDList, n3 = this._grpM.getGroupMemberHandler();
        e3.forEach(function(e4) {
          e4 = n3.getLocalGroupMemberInfo(t3, e4);
          e4 && e4.updateRole(A2.GRP_MBR_ROLE_MEMBER);
        });
      } }, { key: "_onGroupProfileModified", value: function(e3) {
        var t3 = this, e3 = e3.payload, n3 = e3.newGroupProfile, o3 = e3.groupProfile, i3 = e3.operatorInfo, e3 = o3.groupID, a3 = this._grpM.getLocalGroupProfile(e3), o3 = (Object.keys(n3).forEach(function(e4) {
          switch (e4) {
            case "ownerID":
              t3._ownerChanged(a3, n3);
              break;
            case "groupName":
              a3.name = n3[e4];
              break;
            default:
              a3[e4] = n3[e4];
          }
        }), N2(i3) || Object.keys(i3).forEach(function(e4) {
          "nameCard" === e4 ? a3.updateSelfInfo({ nameCard: i3[e4] }) : "role" === e4 && a3.updateSelfInfo({ role: i3[e4] });
        }), !a3.isSupportTopic);
        this._grpM.emitGroupListUpdate(true, o3);
      } }, { key: "_ownerChanged", value: function(e3, t3) {
        var e3 = e3.groupID, n3 = this._grpM.getLocalGroupProfile(e3), o3 = this._grpM.getMyUserID();
        o3 === t3.ownerID && (n3.updateGroup({ selfInfo: { role: A2.GRP_MBR_ROLE_OWNER } }), n3 = (t3 = this._grpM.getGroupMemberHandler()).getLocalGroupMemberInfo(e3, o3), o3 = this._grpM.getLocalGroupProfile(e3).ownerID, t3 = t3.getLocalGroupMemberInfo(e3, o3), n3 && n3.updateRole(A2.GRP_MBR_ROLE_OWNER), t3) && t3.updateRole(A2.GRP_MBR_ROLE_MEMBER);
      } }, { key: "_onMemberInfoModified", value: function(e3) {
        var t3 = e3.to, n3 = e3.payload, o3 = n3.groupProfile, n3 = n3.memberList, i3 = o3.groupID, a3 = (Gt2(t3) && this._updateTopicMuteTime(e3), this._grpM.getGroupMemberHandler());
        n3.forEach(function(e4) {
          var t4 = a3.getLocalGroupMemberInfo(i3, e4.userID);
          t4 && R2(e4.muteTime) && t4.updateMuteUntil(e4.muteTime);
        });
      } }, { key: "_updateTopicMuteTime", value: function(e3) {
        var t3 = e3.to, e3 = e3.payload, n3 = e3.groupProfile, e3 = e3.memberList, o3 = void 0 === e3 ? [] : e3, e3 = this._grpM.get(10), n3 = n3.groupID, i3 = e3.getLocalTopic(n3, t3);
        if (i3) {
          for (var a3 = false, s3 = 0; s3 < o3.length; s3++) {
            var r3 = o3[s3];
            if (r3.userID === this._grpM.getMyUserID() && 0 <= r3.muteTime) {
              i3.updateSelfInfo({ muteTime: r3.muteTime }), a3 = true;
              break;
            }
          }
          a3 && this._grpM.emitOEvt(h2.TOPIC_UPDATED, { groupID: n3, topic: i3 });
        }
      } }, { key: "_onTopicProfileUpdated", value: function(e3) {
        var t3 = e3.payload, n3 = t3.groupProfile.groupID, t3 = t3.newTopicInfo;
        this._grpM.get(10).onTopicProfileUpdated(y2({ groupID: n3, topicID: e3.to }, t3));
      } }, { key: "_cacheGroupTips", value: function(e3, t3) {
        this._cachedGroupTipsMap.has(e3) || this._cachedGroupTipsMap.set(e3, []), this._cachedGroupTipsMap.get(e3).push(t3);
      } }, { key: "_deleteCachedGroupTips", value: function(e3) {
        this._cachedGroupTipsMap.has(e3) && this._cachedGroupTipsMap.delete(e3);
      } }, { key: "_notifyCachedGroupTips", value: function(e3, t3) {
        var n3 = this, o3 = this._cachedGroupTipsMap.get(e3) || [];
        M2.l("".concat(this._n, "._notifyCachedGroupTips groupID:").concat(e3, " groupType:").concat(t3, " count:").concat(o3.length)), o3.forEach(function(e4) {
          n3.onNewGroupTips(e4);
        }), this._deleteCachedGroupTips(e3);
      } }, { key: "_cacheAndCompare", value: function(e3) {
        var t3 = e3.groupID, n3 = e3.event, o3 = e3.item, e3 = e3.groupType, n3 = (M2.l("".concat(this._n, "._cacheAndCompare groupID:").concat(t3, " groupType:").concat(e3)), this._cacheGroupTips(t3, { event: n3, dataList: [o3] }), { groupID: t3, type: e3 });
        e3 === A2.GRP_AVCHATROOM ? this._grpM.hasLocalGroup(t3) ? this._notifyCachedGroupTips(t3, e3) : this._grpM.setUnjoinedAVChatRoom(t3) : (this._grpM.updateGroupMap([n3]), this._notifyCachedGroupTips(t3, e3)), this._checkCountMap.has(t3) || this._checkCountMap.set(t3, 0);
      } }, { key: "reset", value: function() {
        this._cachedGroupTipsMap.clear(), this._checkCountMap.clear();
      } }]), Xi2), li2 = (e2(zi2, [{ key: "onCheckTimer", value: function(e3) {
        e3 % 1 == 0 && 0 < this._cachedGroupMessageMap.size && this._check();
      } }, { key: "_check", value: function() {
        var i3 = this;
        this._cachedGroupMessageMap.forEach(function(e3, t3) {
          var n3 = i3._checkCountMap.get(t3), o3 = i3._grpM.hasLocalGroup(t3);
          M2.l("".concat(i3._n, "._check groupID:").concat(t3, " hasLocalGroup:").concat(o3, " checkCount:").concat(n3)), o3 ? (i3._notifyCachedGroupMessage(t3), i3._checkCountMap.delete(t3), i3._grpM.deleteUnjoinedAVChatRoom(t3)) : n3 >= i3.MAX_CHECK_COUNT ? (i3._deleteCachedGroupMessage(t3), i3._checkCountMap.delete(t3)) : i3._checkCountMap.set(t3, ++n3);
        });
      } }, { key: "updateLastMsg", value: function(e3) {
        var t3 = "".concat(this._n, ".updateLastMsg");
        if (0 !== this._grpM.getGroupMap().size) {
          for (var n3, o3, i3, a3, s3 = false, r3 = e3.length, c3 = 0; c3 < r3; c3++)
            (n3 = e3[c3]).type === A2.CONV_GROUP && 0 !== n3.lastMessage.lastSequence && null !== n3.lastMessage.payload && (o3 = n3.conversationID.split(/^GROUP/)[1], o3 = this._grpM.getLocalGroupProfile(o3)) && (i3 = o3.lastMessage, a3 = n3.lastMessage, JSON.stringify(i3) !== JSON.stringify(a3)) && (o3.lastMessage = y2({}, n3.lastMessage), s3 = true);
          M2.l("".concat(t3, " convCount:").concat(r3, " groupCount:").concat(this._grpM.getLocalGroupList().length, " isUpdated:").concat(s3)), s3 && (this._grpM.sortLocalGroupList(), this._grpM.emitGroupListUpdate(true, false));
        } else
          this.tempConversationList = e3;
      } }, { key: "onNewMessage", value: function(e3) {
        var t3 = this._assembly(e3), n3 = t3.conversationOptionsList, o3 = t3.messageList, t3 = t3.AVChatRoomMessageList, t3 = (0 < t3.length && this._grpM.onAVChatRoomMessage(t3), At2(o3)), t3 = (0 < t3.length && this._grpM.emitOEvt(h2.MESSAGE_MODIFIED, t3), 0 < n3.length && (this._grpM.get(11).onNewMessage({ conversationOptionsList: n3, isInstantMessage: false !== e3.isInstantMessage, updateUnreadCount: false !== e3.updateUnreadCount }), this._grpM.updateNextMessageSeq(n3)), Rt2(o3));
        0 < t3.length && this._grpM.emitOEvt(h2.MESSAGE_RECEIVED, t3), o3.length = 0;
      } }, { key: "_assembly", value: function(e3) {
        var t3 = e3.dataList, n3 = e3.event, o3 = e3.isInstantMessage, i3 = null, a3 = [], s3 = [], r3 = [], c3 = {}, u3 = this._grpM.getFileDownloadProxy(), l3 = this._grpM.getDowloadFileAuthKey(), d3 = this._grpM.get(17).getFileDNList(), p3 = t3.length;
        1 < p3 && t3.sort(function(e4, t4) {
          return e4.sequence - t4.sequence;
        });
        for (var _3 = this._grpM.get(11), h3 = this._grpM.get(4), g3 = 0; g3 < p3; g3++) {
          var f3, m3 = Mt2(t3[g3]), v3 = m3.groupProfile, I3 = v3.groupID, M3 = v3.communityType, M3 = void 0 === M3 ? 0 : M3, y3 = v3.topicID, y3 = void 0 === y3 ? void 0 : y3, C3 = v3.invisible, v3 = v3.groupType, v3 = void 0 === v3 ? void 0 : v3, T3 = void 0, D3 = this._grpM.isMessageFromTopic(M3, y3), E3 = (D3 && (T3 = A2.CONV_TOPIC, m3.to = y3), this._grpM.hasLocalGroup(I3));
          !E3 && this._grpM.isUnjoinedAVChatRoom(I3) || (E3 || D3 ? this._grpM.isMessageFromOrToAVChatroom(I3) ? (m3.event = n3, r3.push(m3)) : (m3.currentUser = this._grpM.getMyUserID(), m3.conversationType = A2.CONV_GROUP, m3.isSystemMessage = !!m3.isSystemMessage, (i3 = new Do2(m3)).setElement(m3.elements, u3, l3, d3), 1 !== C3 ? (E3 = 1 === t3[g3].isModified, _3.isMessageSentByCurrentInstance(i3) ? i3.isModified = E3 : E3 = false, 1 === m3.onlineOnlyFlag ? (i3._onlineOnlyFlag = true, _3.isMessageSentByCurrentInstance(i3) || s3.push(i3)) : this._grpM.isMessageFromCommunityOfTopic(M3, y3) ? s3.push(i3) : (i3.from === this._grpM.getMyUserID() && (D3 = _3.getLatestMessageSentByMe(i3.conversationID)) && (C3 = D3.nick, M3 = D3.avatar, C3 === i3.nick && M3 === i3.avatar || (_3.modifyMessageSentByMe({ conversationID: f3, latestNick: i3.nick, latestAvatar: i3.avatar }), h3.mockOnNickAvatarModified(i3.nick, i3.avatar))), _3.pushIntoMessageList(s3, i3, E3) && (this._qualityStat(o3, i3), f3 = (y3 = i3).conversationID, D3 = y3.sequence, C3 = _3.isRemoteRead({ conversationID: f3, sequence: D3 }), N2(c3[f3]) ? (M3 = 0, "in" !== i3.flow || i3._isExcludedFromUnreadCount || C3 || (M3 = 1), c3[f3] = a3.push({ conversationID: f3, unreadCount: M3, type: N2(T3) ? i3.conversationType : T3, subType: i3.conversationSubType, lastMessage: i3._isExcludedFromLastMessage ? "" : i3 }) - 1) : (a3[E3 = c3[f3]].type = N2(T3) ? i3.conversationType : T3, a3[E3].subType = i3.conversationSubType, a3[E3].lastMessage = i3._isExcludedFromLastMessage ? "" : i3, "in" !== i3.flow || i3._isExcludedFromUnreadCount || C3 || a3[E3].unreadCount++)))) : this._qualityStat(o3, i3)) : this._cacheAndCompare({ groupID: I3, event: n3, item: m3, groupType: v3 }));
        }
        return { conversationOptionsList: a3, messageList: s3, AVChatRoomMessageList: r3 };
      } }, { key: "_qualityStat", value: function(e3, t3) {
        var n3 = this._grpM.get(26);
        n3.addMessageSequence({ key: jn2, message: t3 }), e3 && 0 < t3.clientTime && n3.addMessageDelay(t3.clientTime);
      } }, { key: "onMsgRevoked", value: function(e3, t3) {
        var n3 = this, u3 = this._grpM.get(11), l3 = [], d3 = [];
        e3.dataList.forEach(function(e4) {
          var t4 = e4.elements.revokedInfos, s3 = e4.revokerInfo, r3 = e4.groupProfile, c3 = false;
          r3 && (c3 = Nt2({ groupID: r3.groupID }) || !S2(r3.topicID)), N2(t4) || t4.forEach(function(e5) {
            var t5, n4 = S2(e5.topicID) ? "GROUP".concat(e5.groupID) : "GROUP".concat(e5.topicID), o3 = u3.getLocalConversation(n4), i3 = e5.revokerInfo && e5.revokerInfo.revoker || s3 && s3.revoker, a3 = s3 && s3.reason || "";
            o3 && Ot2(o3.type) ? t5 = { conversationID: n4, sequence: e5.sequence, ID: "".concat(e5.tinyID, "-").concat(e5.clientTime, "-").concat(e5.random) } : (o3 = u3.revoke(n4, e5.sequence, e5.random)) ? t5 = o3 : (t5 = { conversationID: n4, sequence: e5.sequence }, e5.tinyID && e5.clientTime && e5.random && (t5.ID = "".concat(e5.tinyID, "-").concat(e5.clientTime, "-").concat(e5.random)), e5.time && (t5.time = e5.time)), t5 && (t5.revoker = i3, t5.revokeReason = a3, t5.revokerInfo = { userID: i3, nick: "", avatar: "" }, (c3 ? (t5.revokerInfo.nick = r3.nick, t5.revokerInfo.avatar = r3.avatar, l3) : d3).push(t5));
          });
        }), 0 === d3.length && 0 === l3.length || (u3.onMessageRevoked([].concat(l3, d3), t3), 0 < l3.length && this._grpM.emitOEvt(h2.MESSAGE_REVOKED, l3), 0 < d3.length && u3.updateRevokerInfo(d3).then(function(e4) {
          n3._grpM.emitOEvt(h2.MESSAGE_REVOKED, e4);
        }));
      } }, { key: "_groupListTreeShaking", value: function(e3) {
        for (var n3 = new Map(p2(this._grpM.getGroupMap())), t3 = 0, o3 = e3.length; t3 < o3; t3++)
          n3.delete(e3[t3].groupID);
        this._grpM.hasJoinedAVChatRoom() && this._grpM.getJoinedAVChatRoom().forEach(function(e4) {
          n3.delete(e4);
        }), this._grpM.getGroupMap().forEach(function(e4, t4) {
          e4.isSupportTopic && n3.delete(t4);
        });
        for (var i3 = p2(n3.keys()), a3 = 0, s3 = i3.length; a3 < s3; a3++)
          this._grpM.deleteGroup(i3[a3]);
      } }, { key: "syncGroupList", value: function() {
        var o3, i3, a3 = this, e3 = 0 < arguments.length && void 0 !== arguments[0] && arguments[0], t3 = (this._pagingStatus === Nn2 && this._grpM.clearGroupMap(), p2(ce2)), n3 = this.PAGING_GRP_COUNT_LIMIT, s3 = [];
        return true === e3 ? this._pagingGetGroupListWithTopic({ limit: n3, offset: 0, groupBaseInfoFilter: t3, groupList: s3 }) : (e3 = "syncGroupList", o3 = "".concat(this._n, ".").concat(e3), i3 = new G2(e3), this._pagingGetGroupList({ limit: n3, offset: 0, groupBaseInfoFilter: t3, groupList: s3 }).then(function() {
          var e4 = tn2(a3._pagingGetCostList), t4 = en2(a3._pagingGetCostList), n4 = (a3._pagingGetCostList.length = 0, a3._pagingStatus = Pn2, a3._groupListTreeShaking(s3), a3._grpM.updateGroupMap(s3), a3._grpM.getLocalGroupList().length), n4 = "count:".concat(n4, " sum:").concat(t4, " avg:").concat(e4);
          return M2.l("".concat(o3, " ok. ").concat(n4)), i3.setMessage(n4).end(), a3.tempConversationList && (a3.updateLastMsg(a3.tempConversationList), a3.tempConversationList = null), a3._grpM.emitGroupListUpdate(true, true), C2({ groupList: a3._grpM.getLocalGroupList() });
        }).catch(function(e4) {
          return a3._pagingStatus = Un2, i3.setError(e4).end(), M2.e("".concat(o3, " failed. error:"), e4), D2(e4);
        }));
      } }, { key: "getGroupList", value: function() {
        var e3, t3 = this, n3 = "".concat(this._n, ".").concat("getGroupList");
        return M2.l("".concat(n3, " pagingStatus:").concat(this._pagingStatus)), this._pagingStatus === Un2 || this._pagingStatus === Nn2 ? this.syncGroupList().then(function() {
          var e4 = t3._grpM.getLocalGroupList();
          return C2({ groupList: e4, isSyncCompleted: t3.isPagingGetCompleted() });
        }).catch(function(e4) {
          return M2.e("".concat(n3, " failed. error:"), e4), D2(e4);
        }) : (e3 = this._grpM.getLocalGroupList(), M2.l("".concat(n3, ". returned group count:").concat(e3.length)), T2({ groupList: e3, isSyncCompleted: this.isPagingGetCompleted() }));
      } }, { key: "isPagingGetCompleted", value: function() {
        return this._pagingStatus === Pn2;
      } }, { key: "_pagingGetGroupList", value: function(e3) {
        var o3 = this, i3 = "".concat(this._n, ".").concat("_pagingGetGroupList"), t3 = e3.isCommunityRelay, a3 = void 0 !== t3 && t3, s3 = e3.limit, r3 = e3.offset, c3 = e3.groupBaseInfoFilter, u3 = e3.groupList, l3 = Date.now();
        return this._grpM.req({ P: k2.GET_GRP_LIST, data: { type: a3 ? A2.GRP_COMMUNITY : void 0, memberAccount: this._grpM.getMyUserID(), limit: s3, offset: r3, responseFilter: { groupBaseInfoFilter: c3, selfInfoFilter: ["Role", "JoinTime", "MsgFlag", "MsgSeq"] } } }).then(function(e4) {
          var e4 = e4.data, t4 = e4.groups, t4 = void 0 === t4 ? [] : t4, e4 = e4.totalCount, t4 = (u3.push.apply(u3, p2(t4)), o3._handleGroupAtInfoWithoutTopic(a3, t4), r3 + s3), n3 = !(t4 < e4), e4 = "offset:".concat(r3, " limit:").concat(s3, " total:").concat(e4, " isCompleted:").concat(n3, " ") + "current:".concat(u3.length, " isCommunityRelay:").concat(a3);
          return o3._pagingGetCostList.push(nn2(l3, false)), M2.l("".concat(i3, " ok. ").concat(e4, " cost:").concat(nn2(l3))), a3 || n3 ? !a3 && n3 ? (M2.l("".concat(i3, " start to get community list")), r3 = 0, o3._pagingGetGroupList({ limit: s3, offset: r3, groupBaseInfoFilter: c3, groupList: u3, isCommunityRelay: true })) : a3 && !n3 ? (r3 = t4, o3._pagingGetGroupList({ limit: s3, offset: r3, groupBaseInfoFilter: c3, groupList: u3, isCommunityRelay: true })) : C2({ groupList: u3 }) : (r3 = t4, o3._pagingGetGroupList({ limit: s3, offset: r3, groupBaseInfoFilter: c3, groupList: u3 }));
        }).catch(function(e4) {
          return 10018 === e4.code ? (M2.w("".concat(o3.logPrefix, " response size exceeds the limit, request count:").concat(s3)), s3 = 50, o3._pagingGetGroupList({ limit: s3, offset: r3, groupBaseInfoFilter: c3, groupList: u3, isCommunityRelay: a3 })) : a3 ? (11e3 === e4.code && M2.l("".concat(i3, " ok. community unavailable")), T2({ groupList: u3 })) : D2(e4);
        });
      } }, { key: "_pagingGetGroupListWithTopic", value: function(e3) {
        var o3 = this, i3 = "".concat(this._n, "._pagingGetGroupListWithTopic"), a3 = e3.limit, s3 = e3.offset, r3 = e3.groupBaseInfoFilter, c3 = e3.groupList, u3 = Date.now();
        return this._grpM.req({ P: k2.GET_GRP_LIST, data: { type: A2.GRP_COMMUNITY, memberAccount: this._grpM.getMyUserID(), limit: a3, offset: s3, responseFilter: { groupBaseInfoFilter: r3, selfInfoFilter: p2(ue2) }, isSupportTopic: 1, needAppDefineData: 1 } }).then(function(e4) {
          var e4 = e4.data, t3 = e4.groups, e4 = e4.totalCount, t3 = (c3.push.apply(c3, p2(void 0 === t3 ? [] : t3)), s3 + a3), n3 = !(t3 < e4);
          if (M2.l("".concat(i3, " ok. offset:").concat(s3, " limit:").concat(a3, " totalCount:").concat(e4, " isCompleted:").concat(n3, " currentCount:").concat(c3.length, " cost:").concat(nn2(u3))), !n3)
            return s3 = t3, o3._pagingGetGroupListWithTopic({ limit: a3, offset: s3, groupBaseInfoFilter: r3, groupList: c3 });
          o3._grpM.updateGroupMap(c3), o3._grpM.emitGroupListUpdate(true, false);
          e4 = o3._grpM.getLocalGroupList().filter(function(e5) {
            return true === e5.isSupportTopic;
          });
          return C2({ groupList: e4 });
        }).catch(function(e4) {
          return 10018 === e4.code ? (M2.w("".concat(o3.logPrefix, " response size exceeds the limit, request count:").concat(a3)), a3 = 50, o3._pagingGetGroupListWithTopic({ limit: a3, offset: s3, groupBaseInfoFilter: r3, groupList: c3 })) : D2(e4);
        });
      } }, { key: "_cacheGroupMessage", value: function(e3, t3) {
        this._cachedGroupMessageMap.has(e3) || this._cachedGroupMessageMap.set(e3, []), this._cachedGroupMessageMap.get(e3).push(t3);
      } }, { key: "_deleteCachedGroupMessage", value: function(e3) {
        this._cachedGroupMessageMap.has(e3) && this._cachedGroupMessageMap.delete(e3);
      } }, { key: "_notifyCachedGroupMessage", value: function(e3, t3) {
        var n3 = this, o3 = this._cachedGroupMessageMap.get(e3) || [];
        M2.l("".concat(this._n, "._notifyCachedGroupMessage groupID:").concat(e3, " groupType:").concat(t3, " count:").concat(o3.length)), o3.forEach(function(e4) {
          n3.onNewMessage(e4);
        }), this._deleteCachedGroupMessage(e3);
      } }, { key: "_cacheAndCompare", value: function(e3) {
        var t3 = e3.groupID, n3 = e3.event, o3 = e3.item, e3 = e3.groupType, n3 = (M2.l("".concat(this._n, "._cacheAndCompare groupID:").concat(t3, " groupType:").concat(e3)), this._cacheGroupMessage(t3, { event: n3, dataList: [o3] }), { groupID: t3, type: e3 });
        e3 === A2.GRP_AVCHATROOM ? this._grpM.hasLocalGroup(t3) ? this._notifyCachedGroupMessage(t3, e3) : this._grpM.setUnjoinedAVChatRoom(t3) : (this._grpM.updateGroupMap([n3]), this._notifyCachedGroupMessage(t3, e3)), this._checkCountMap.has(t3) || this._checkCountMap.set(t3, 0);
      } }, { key: "_handleGroupAtInfoWithoutTopic", value: function(e3, t3) {
        var o3 = this;
        e3 && 0 !== t3.length && t3.forEach(function(e4) {
          var t4 = e4.groupID, e4 = e4.groupAtInfoList, n3 = [];
          N2(e4) || (e4.forEach(function(e5) {
            n3.push(y2(y2({}, e5), {}, { groupID: t4 }));
          }), o3._grpM.get(11).onNewGroupAtTips({ dataList: n3 }));
        });
      } }, { key: "setPagingGroupCount", value: function(e3) {
        N2(e3) || (this.PAGING_GRP_COUNT_LIMIT = parseInt(e3, 10));
      } }, { key: "reset", value: function() {
        this.PAGING_GRP_COUNT_LIMIT = 200, this._cachedGroupMessageMap.clear(), this._checkCountMap.clear(), this._pagingStatus = Nn2, this._pagingGetCostList = [];
      } }]), zi2), di2 = (e2(Ji2, [{ key: "_onCloudConfig", value: function() {
        var e3 = this._grpM.getCloudConfig("grp_attr_cache_time");
        N2(e3) || (this.CACHE_EXPIRE_TIME = Number(e3));
      } }, { key: "updateLocalMainSequenceOnReconnected", value: function() {
        this._groupAttributesMap.forEach(function(e3) {
          e3.localMainSequence = 0;
        });
      } }, { key: "isGroupAttributesUpdatedNotice", value: function(e3) {
        var t3 = e3.to, e3 = e3.elements.newGroupProfile, n3 = !N2(e3) && !S2(e3.groupAttributeOption);
        return n3 && this._onGroupAttributesUpdated({ groupID: t3, groupAttributeOption: e3.groupAttributeOption }), n3;
      } }, { key: "_onGroupAttributesUpdated", value: function(e3) {
        var t3, n3 = this, o3 = e3.groupID, e3 = e3.groupAttributeOption, i3 = e3.mainSequence, a3 = e3.isWithChangedAttributeInfo, s3 = e3.groupAttributeList, s3 = void 0 === s3 ? [] : s3, e3 = e3.operationType;
        M2.l("".concat(this._n, ".onGroupAttributesUpdated. ") + "groupID:".concat(o3, " isWithChangedAttributeInfo:").concat(a3, " operationType:").concat(e3)), N2(e3) || (this._groupAttributesCopy = this._getCachedAttributes({ groupID: o3 }), 0 != (t3 = i3 - this._getLocalGroupAttributes(o3).localMainSequence) && (1 === a3 && 1 == t3 ? (this._refreshCachedGroupAttributes({ groupID: o3, remoteMainSequence: i3, groupAttributeList: s3, operationType: e3 }), this._emitGroupAttributesUpdated(o3)) : this._hasLocalGroupAttributes(o3) && (a3 = this._getLocalGroupAttributes(o3).avChatRoomKey, this._getGroupAttributes({ groupID: o3, avChatRoomKey: a3 }).then(function() {
          n3._emitGroupAttributesUpdated(o3);
        }))));
      } }, { key: "initGroupAttributesCache", value: function(e3) {
        var t3 = e3.groupID, e3 = e3.avChatRoomKey, e3 = void 0 === e3 ? void 0 : e3;
        this._groupAttributesMap.set(t3, { lastUpdateTime: 0, localMainSequence: 0, remoteMainSequence: 0, attributes: /* @__PURE__ */ new Map(), avChatRoomKey: e3 }), M2.l("".concat(this._n, ".initGroupAttributesCache groupID:").concat(t3, " avChatRoomKey:").concat(e3));
      } }, { key: "initGroupAttributes", value: function(e3) {
        var n3 = this, o3 = e3.groupID, i3 = e3.groupAttributes, e3 = this._getLocalGroupAttributes(o3), t3 = e3.remoteMainSequence, e3 = e3.avChatRoomKey, a3 = new G2("initGroupAttributes");
        return a3.setMessage("groupID:".concat(o3, " avChatRoomKey:").concat(e3, " mainSequence:").concat(t3)), this._grpM.req({ P: k2.SET_GRP_ATTR, data: { groupID: o3, avChatRoomKey: e3, mainSequence: t3, groupAttributeList: this._transformGroupAttributes(i3) } }).then(function(e4) {
          M2.l("".concat(n3._n, ".").concat("initGroupAttributes", " ok. groupID:").concat(o3));
          var e4 = e4.data, t4 = e4.mainSequence, e4 = p2(e4.groupAttributeList);
          return e4.forEach(function(e5) {
            e5.value = i3[e5.key];
          }), n3._groupAttributesCopy = n3._getCachedAttributes({ groupID: o3 }), n3._refreshCachedGroupAttributes({ groupID: o3, remoteMainSequence: t4, groupAttributeList: e4, operationType: 1 }), n3._emitGroupAttributesUpdated(o3), a3.end(), C2({ groupAttributes: i3 });
        }).catch(function(e4) {
          return a3.setError(e4).end(), D2(e4);
        });
      } }, { key: "setGroupAttributes", value: function(e3) {
        var n3 = this, o3 = "".concat(this._n, ".").concat("setGroupAttributes"), i3 = e3.groupID, a3 = e3.groupAttributes, e3 = this._getLocalGroupAttributes(i3), t3 = e3.remoteMainSequence, s3 = e3.avChatRoomKey, r3 = e3.attributes, e3 = this._transformGroupAttributes(a3), c3 = (e3.forEach(function(e4) {
          var t4 = e4.key;
          e4.sequence = 0, r3.has(t4) && (e4.sequence = r3.get(t4).sequence);
        }), new G2("setGroupAttributes"));
        return c3.setMessage("groupID:".concat(i3, " groupAttributes:").concat(JSON.stringify(a3))), M2.l("".concat(o3, ". groupID:").concat(i3, " mainSequence:").concat(t3)), this._grpM.req({ P: k2.MODIFY_GRP_ATTR, data: { groupID: i3, avChatRoomKey: s3, mainSequence: t3, groupAttributeList: e3 } }).then(function(e4) {
          M2.l("".concat(o3, " ok."));
          var e4 = e4.data, t4 = e4.mainSequence, e4 = p2(e4.groupAttributeList);
          return e4.forEach(function(e5) {
            e5.value = a3[e5.key];
          }), n3._groupAttributesCopy = n3._getCachedAttributes({ groupID: i3 }), n3._refreshCachedGroupAttributes({ groupID: i3, remoteMainSequence: t4, groupAttributeList: e4, operationType: 2 }), n3._emitGroupAttributesUpdated(i3), c3.end(), C2({ groupAttributes: a3 });
        }).catch(function(e4) {
          return c3.setError(e4).end(), D2(e4);
        });
      } }, { key: "deleteGroupAttributes", value: function(e3) {
        var t3 = this, n3 = e3.groupID, e3 = e3.keyList, e3 = void 0 === e3 ? [] : e3, o3 = this._getLocalGroupAttributes(n3), i3 = o3.remoteMainSequence, a3 = o3.avChatRoomKey, s3 = o3.attributes, r3 = p2(s3.keys()), o3 = k2.CLEAR_GRP_ATTR, c3 = 3, a3 = { groupID: n3, avChatRoomKey: a3, mainSequence: i3 }, u3 = [], l3 = (0 < e3.length && (r3 = [], o3 = k2.DEL_GRP_ATTR, c3 = 4, e3.forEach(function(e4) {
          var t4 = 0;
          s3.has(e4) && (t4 = s3.get(e4).sequence, r3.push(e4)), u3.push({ key: e4, sequence: t4 });
        }), a3.groupAttributeList = u3), new G2("deleteGroupAttributes"));
        return l3.setMessage("groupID:".concat(n3, " mainSequence:").concat(i3, " keyList:").concat(e3, " proto:").concat(o3)), this._grpM.req({ P: o3, data: a3 }).then(function(e4) {
          M2.l("".concat(t3._n, ".").concat("deleteGroupAttributes", " ok. groupID:").concat(n3));
          e4 = e4.data.mainSequence;
          return t3._groupAttributesCopy = t3._getCachedAttributes({ groupID: n3 }), t3._refreshCachedGroupAttributes({ groupID: n3, remoteMainSequence: e4, groupAttributeList: u3, operationType: c3 }), t3._emitGroupAttributesUpdated(n3), l3.end(), C2({ keyList: r3 });
        }).catch(function(e4) {
          return l3.setError(e4).end(), D2(e4);
        });
      } }, { key: "getGroupAttributes", value: function(t3) {
        var n3 = this, o3 = "".concat(this._n, ".").concat("getGroupAttributes"), i3 = t3.groupID, e3 = this._getLocalGroupAttributes(i3), a3 = e3.avChatRoomKey, s3 = e3.lastUpdateTime, r3 = e3.localMainSequence, e3 = e3.remoteMainSequence, c3 = new G2("getGroupAttributes");
        if (c3.setMessage("groupID:".concat(i3, " localMainSequence:").concat(r3, " remoteMainSequence:").concat(e3, " keyList:").concat(t3.keyList)), Date.now() - s3 >= this.CACHE_EXPIRE_TIME || r3 < e3)
          return this._getGroupAttributes({ groupID: i3, avChatRoomKey: a3 }).then(function(e4) {
            c3.setMoreMessage("get attributes from remote. count:".concat(e4.length)).end(), M2.l("".concat(o3, " from remote. groupID:").concat(i3));
            e4 = n3._getCachedAttributes(t3);
            return C2({ groupAttributes: e4 });
          }).catch(function(e4) {
            return c3.setError(e4).end(), D2(e4);
          });
        c3.setMoreMessage("get attributes from cache").end(), M2.l("".concat(o3, " from cache. groupID:").concat(i3));
        s3 = this._getCachedAttributes(t3);
        return T2({ groupAttributes: s3 });
      } }, { key: "_getGroupAttributes", value: function(o3) {
        var i3 = this, e3 = 0;
        return N2(o3.avChatRoomKey) || (e3 = 1), this._grpM.req({ P: k2.GET_GRP_ATTR, data: y2(y2({}, o3), {}, { groupType: e3 }) }).then(function(e4) {
          M2.l("".concat(i3._n, "._getGroupAttributes ok. groupID:").concat(o3.groupID));
          var e4 = e4.data, t3 = e4.mainSequence, e4 = e4.groupAttributeList, n3 = p2(e4);
          return N2(t3) || i3._refreshCachedGroupAttributes({ groupID: o3.groupID, remoteMainSequence: t3, groupAttributeList: n3, operationType: 5 }), e4;
        }).catch(function(e4) {
          return D2(e4);
        });
      } }, { key: "_refreshCachedGroupAttributes", value: function(e3) {
        var t3 = e3.groupID, n3 = e3.remoteMainSequence, o3 = e3.groupAttributeList, e3 = e3.operationType;
        if (this._hasLocalGroupAttributes(t3)) {
          var i3 = this._getLocalGroupAttributes(t3), a3 = i3.localMainSequence;
          if (5 === e3 || n3 - a3 == 1)
            i3.remoteMainSequence = n3, i3.localMainSequence = n3, i3.lastUpdateTime = Date.now(), this._updateCachedAttributes({ groupAttributes: i3, groupAttributeList: o3, operationType: e3 });
          else {
            if (a3 === n3)
              return;
            i3.remoteMainSequence = n3;
          }
          this._groupAttributesMap.set(t3, i3);
          o3 = "operationType:".concat(e3, " localMainSequence:").concat(a3, " remoteMainSequence:").concat(n3);
          M2.l("".concat(this._n, "._refreshCachedGroupAttributes. ").concat(o3));
        }
      } }, { key: "_getCachedAttributes", value: function(e3) {
        var t3 = e3.groupID, e3 = e3.keyList, e3 = void 0 === e3 ? [] : e3, n3 = {};
        if (this._hasLocalGroupAttributes(t3)) {
          var o3 = this._getLocalGroupAttributes(t3).attributes;
          if (0 < e3.length)
            e3.forEach(function(e4) {
              o3.has(e4) && (n3[e4] = o3.get(e4).value);
            });
          else {
            var i3, a3 = Z2(o3.keys());
            try {
              for (a3.s(); !(i3 = a3.n()).done; ) {
                var s3 = i3.value;
                n3[s3] = o3.get(s3).value;
              }
            } catch (e4) {
              a3.e(e4);
            } finally {
              a3.f();
            }
          }
        }
        return n3;
      } }, { key: "_updateCachedAttributes", value: function(e3) {
        var o3 = e3.groupAttributes, t3 = e3.groupAttributeList, e3 = e3.operationType;
        3 !== e3 ? 4 !== e3 ? (1 === e3 && o3.attributes.clear(), t3.forEach(function(e4) {
          var t4 = e4.key, n3 = e4.value, e4 = e4.sequence;
          o3.attributes.set(t4, { value: n3, sequence: e4 });
        })) : t3.forEach(function(e4) {
          o3.attributes.delete(e4.key);
        }) : o3.attributes.clear();
      } }, { key: "_hasLocalGroupAttributes", value: function(e3) {
        return this._groupAttributesMap.has(e3);
      } }, { key: "_getLocalGroupAttributes", value: function(e3) {
        return this._hasLocalGroupAttributes(e3) || this.initGroupAttributesCache({ groupID: e3 }), this._groupAttributesMap.get(e3);
      } }, { key: "_transformGroupAttributes", value: function(t3) {
        var n3 = [];
        return Object.keys(t3).forEach(function(e3) {
          n3.push({ key: e3, value: t3[e3] });
        }), n3;
      } }, { key: "_emitGroupAttributesUpdated", value: function(e3) {
        var t3 = this._getCachedAttributes({ groupID: e3 }), n3 = this._computeAttrChangedInfo(t3), o3 = n3.updatedKeyList, n3 = n3.deletedKeyList;
        M2.l("".concat(this._n, "._emitGroupAttributesUpdated update:").concat(o3.length, ", delete:").concat(n3.length)), 0 === o3.length && 0 === n3.length || this._grpM.emitOEvt(h2.GROUP_ATTRIBUTES_UPDATED, { groupID: e3, groupAttributes: t3, updatedKeyList: o3, deletedKeyList: n3 });
      } }, { key: "_computeAttrChangedInfo", value: function(t3) {
        var n3 = this, o3 = [], i3 = [];
        return Object.keys(t3).forEach(function(e3) {
          t3[e3] !== n3._groupAttributesCopy[e3] && o3.push(e3);
        }), Object.keys(this._groupAttributesCopy).forEach(function(e3) {
          N2(t3[e3]) && i3.push(e3);
        }), this._groupAttributesCopy = {}, { updatedKeyList: o3, deletedKeyList: i3 };
      } }, { key: "deleteLocalGroupAttributes", value: function(e3) {
        this._hasLocalGroupAttributes(e3) && this._groupAttributesMap.delete(e3);
      } }, { key: "reset", value: function() {
        this._groupAttributesMap.clear(), this._groupAttributesCopy = {}, this.CACHE_EXPIRE_TIME = 3e4;
      } }]), Ji2), pi2 = (e2(ji2, [{ key: "_onCloudConfig", value: function() {
        var e3 = this._grpM.getCloudConfig("grp_counter_expire_time");
        N2(e3) || (this.EXPIRE_TIME = Number(e3));
      } }, { key: "isGroupCountersNotice", value: function(e3) {
        var t3 = e3.to, e3 = e3.elements.groupCounterInfo, n3 = false;
        return S2(e3) || (this._onGroupCountersUpdated({ groupID: t3, groupCounterInfo: e3 }), n3 = true), n3;
      } }, { key: "_onGroupCountersUpdated", value: function(e3) {
        var o3 = this, i3 = e3.groupID;
        e3.groupCounterInfo.forEach(function(e4) {
          var t3 = e4.type, n3 = e4.groupCounterSeq, e4 = e4.counterList, e4 = void 0 === e4 ? [] : e4;
          0 !== t3 && 2 !== t3 || (o3._updateLocalGroupCounters({ groupID: i3, groupCounterSeq: n3, counterList: e4 }), e4.forEach(function(e5) {
            o3._grpM.emitOEvt(h2.GROUP_COUNTER_UPDATED, { groupID: i3, key: e5.key, value: e5.value });
          })), 1 === t3 && o3._deleteLocalGroupCounters({ groupID: i3, groupCounterSeq: n3, counterList: e4 });
        }), M2.l("".concat(this._n, "._onGroupCountersUpdated groupID:").concat(i3));
      } }, { key: "initGroupCountersCache", value: function(e3) {
        var t3 = e3.groupID, e3 = e3.avChatRoomKey;
        this._groupCountersMap.set(t3, { lastUpdateTime: 0, groupCounterSeq: 0, counters: /* @__PURE__ */ new Map(), avChatRoomKey: e3 }), M2.l("".concat(this._n, ".initGroupCountersCache groupID:").concat(t3, " avChatRoomKey:").concat(e3));
      } }, { key: "setGroupCounters", value: function(e3) {
        var t3, n3, o3, i3, a3;
        return this._grpM.canIUse(_2.GRP_COUNTER) ? (t3 = "".concat(this._n, ".").concat("setGroupCounters"), n3 = e3.groupID, e3 = e3.counters, e3 = this._convertObjectToList(e3), o3 = this._getLocalGroupCounters(n3).avChatRoomKey, i3 = "groupID:".concat(n3, " count:").concat(e3.length), (a3 = new G2("setGroupCounters")).setMessage("".concat(i3)), M2.l("".concat(t3, ". ").concat(i3)), this._updateGroupCounters({ groupID: n3, counterList: e3, avChatRoomKey: o3, mode: "Set" }).then(function(e4) {
          return a3.end(), M2.l("".concat(t3, " ok.")), C2({ counters: e4 });
        }).catch(function(e4) {
          return a3.setError(e4).end(), M2.e("".concat(t3, " failed. error:"), e4), D2(e4);
        })) : this._grpM.noUse("setGroupCounters");
      } }, { key: "increaseGroupCounter", value: function(e3) {
        var t3, n3, o3, i3, a3, s3, r3 = "increaseGroupCounter";
        return this._grpM.canIUse(_2.GRP_COUNTER) ? (t3 = "".concat(this._n, ".").concat(r3), n3 = e3.groupID, o3 = e3.key, e3 = e3.value, i3 = this._getLocalGroupCounters(n3).avChatRoomKey, a3 = "groupID:".concat(n3, " key:").concat(o3, " value:").concat(e3), (s3 = new G2(r3)).setMessage("".concat(a3)), M2.l("".concat(t3, ". ").concat(a3)), this._updateGroupCounters({ groupID: n3, counterList: [{ key: o3, value: e3 }], avChatRoomKey: i3, mode: "Increase" }).then(function(e4) {
          return s3.end(), M2.l("".concat(t3, " ok.")), C2({ counters: e4 });
        }).catch(function(e4) {
          return s3.setError(e4).end(), M2.e("".concat(t3, " failed. error:"), e4), D2(e4);
        })) : this._grpM.noUse(r3);
      } }, { key: "decreaseGroupCounter", value: function(e3) {
        var t3, n3, o3, i3, a3, s3, r3 = "decreaseGroupCounter";
        return this._grpM.canIUse(_2.GRP_COUNTER) ? (t3 = "".concat(this._n, ".").concat(r3), n3 = e3.groupID, o3 = e3.key, e3 = e3.value, i3 = this._getLocalGroupCounters(n3).avChatRoomKey, a3 = "groupID:".concat(n3, " key:").concat(o3, " value:").concat(e3), (s3 = new G2(r3)).setMessage("".concat(a3)), M2.l("".concat(t3, ". ").concat(a3)), this._updateGroupCounters({ groupID: n3, counterList: [{ key: o3, value: e3 }], avChatRoomKey: i3, mode: "Decrease" }).then(function(e4) {
          return s3.end(), M2.l("".concat(t3, " ok.")), C2({ counters: e4 });
        }).catch(function(e4) {
          return s3.setError(e4).end(), M2.e("".concat(t3, " failed. error:"), e4), D2(e4);
        })) : this._grpM.noUse(r3);
      } }, { key: "getGroupCounters", value: function(e3) {
        var t3 = this;
        if (!this._grpM.canIUse(_2.GRP_COUNTER))
          return this._grpM.noUse("getGroupCounters");
        var n3 = "".concat(this._n, ".").concat("getGroupCounters"), o3 = e3.groupID, e3 = e3.keyList, i3 = void 0 === e3 ? [] : e3, e3 = this._getLocalGroupCounters(o3), a3 = e3.avChatRoomKey, e3 = e3.lastUpdateTime, s3 = new G2("getGroupCounters");
        if (s3.setMessage("groupID:".concat(o3)), Date.now() - e3 >= this.EXPIRE_TIME)
          return this._getRemoteGroupCounters({ groupID: o3, avChatRoomKey: a3 }).then(function(e4) {
            s3.setMoreMessage("from remote. count:".concat(e4.length)).end(), M2.l("".concat(n3, " from remote. groupID:").concat(o3));
            e4 = t3._getLocalCounters(o3, i3);
            return C2({ counters: e4 });
          }).catch(function(e4) {
            return s3.setError(e4).end(), D2(e4);
          });
        s3.setMoreMessage("from cache").end(), M2.l("".concat(n3, " from cache. groupID:").concat(o3));
        e3 = this._getLocalCounters(o3, i3);
        return T2({ counters: e3 });
      } }, { key: "_getRemoteGroupCounters", value: function(n3) {
        var o3 = this;
        return this._grpM.req({ P: k2.GET_GRP_COUNTER, data: y2({}, n3) }).then(function(e3) {
          var e3 = e3.data, t3 = e3.counterList, t3 = void 0 === t3 ? [] : t3, e3 = e3.groupCounterSeq;
          return o3._updateLocalGroupCounters({ groupID: n3.groupID, counterList: t3, groupCounterSeq: e3 }), M2.l("".concat(o3._n, "._getRemoteGroupCounters ok. groupID:").concat(n3.groupID)), t3;
        }).catch(function(e3) {
          return D2(e3);
        });
      } }, { key: "_convertObjectToList", value: function(t3) {
        var n3 = [];
        return Object.keys(t3).forEach(function(e3) {
          n3.push({ key: e3, value: t3[e3] });
        }), n3;
      } }, { key: "_updateGroupCounters", value: function(e3) {
        var t3 = "".concat(this._n, "._updateGroupCounters"), n3 = e3.groupID, o3 = e3.avChatRoomKey, i3 = e3.mode;
        return M2.l("".concat(t3, ". groupID:").concat(n3, " avChatRoomKey:").concat(o3, " mode:").concat(i3)), this._grpM.req({ P: k2.UPDATE_GRP_COUNTER, data: y2({}, e3) }).then(function(e4) {
          M2.l("".concat(t3, " ok."));
          var e4 = e4.data.counterList, n4 = {};
          return (void 0 === e4 ? [] : e4).forEach(function(e5) {
            var t4 = e5.key, e5 = e5.value;
            n4[t4] = e5;
          }), n4;
        }).catch(function(e4) {
          return D2(e4);
        });
      } }, { key: "_hasLocalGroupCounters", value: function(e3) {
        return this._groupCountersMap.has(e3);
      } }, { key: "_getLocalGroupCounters", value: function(e3) {
        return this._hasLocalGroupCounters(e3) || this.initGroupCountersCache({ groupID: e3 }), this._groupCountersMap.get(e3);
      } }, { key: "_updateLocalGroupCounters", value: function(e3) {
        var n3, t3, o3, i3 = e3.groupID, a3 = e3.counterList, a3 = void 0 === a3 ? [] : a3, e3 = e3.groupCounterSeq;
        this._hasLocalGroupCounters(i3) && (o3 = this._getLocalGroupCounters(i3), n3 = o3.counters, t3 = o3.avChatRoomKey, o3 = o3.groupCounterSeq, 0 < e3 && e3 < o3 || (a3.forEach(function(e4) {
          var t4 = e4.key, e4 = e4.value;
          n3.set(t4, e4);
        }), this._groupCountersMap.set(i3, { lastUpdateTime: Date.now(), groupCounterSeq: e3, counters: n3, avChatRoomKey: t3 })));
      } }, { key: "_deleteLocalGroupCounters", value: function(e3) {
        var t3, n3, o3 = e3.groupID, i3 = e3.counterList, i3 = void 0 === i3 ? [] : i3, e3 = e3.groupCounterSeq;
        this._hasLocalGroupCounters(o3) && (n3 = this._getLocalGroupCounters(o3), t3 = n3.counters, n3 = n3.avChatRoomKey, i3.forEach(function(e4) {
          t3.delete(e4.key);
        }), this._groupCountersMap.set(o3, { lastUpdateTime: Date.now(), groupCounterSeq: e3, counters: t3, avChatRoomKey: n3 }));
      } }, { key: "_getLocalCounters", value: function(e3, t3) {
        var n3 = {};
        if (this._hasLocalGroupCounters(e3)) {
          var o3 = this._getLocalGroupCounters(e3).counters;
          if (0 < t3.length)
            t3.forEach(function(e4) {
              o3.has(e4) && (n3[e4] = o3.get(e4));
            });
          else {
            var i3, a3 = Z2(o3.keys());
            try {
              for (a3.s(); !(i3 = a3.n()).done; ) {
                var s3 = i3.value;
                n3[s3] = o3.get(s3);
              }
            } catch (e4) {
              a3.e(e4);
            } finally {
              a3.f();
            }
          }
        }
        return n3;
      } }, { key: "reset", value: function() {
        this._groupCountersMap.clear(), this.EXPIRE_TIME = 3e4;
      } }]), ji2), _i3 = (e2(Wi2, [{ key: "start", value: function() {
        var e3 = this._grpM.isLoggedIn();
        e3 || (this._proto = k2.AV_NOAUTH_POLLING), M2.l("".concat(this._n, ".start pollingInterval:").concat(this._manager.getPollingInterval(), " isLoggedIn:").concat(e3)), this._isRunning = true, this._request();
      } }, { key: "isRunning", value: function() {
        return this._isRunning;
      } }, { key: "_request", value: function() {
        var t3 = this, e3 = this._onInit(this._groupID);
        this._grpM.req({ P: this._proto, data: e3 }).then(function(e4) {
          t3._onSuccess(t3._groupID, e4), t3.isRunning() && (clearTimeout(t3._timeoutID), t3._timeoutID = setTimeout(t3._request.bind(t3), t3._manager.getPollingInterval()));
        }).catch(function(e4) {
          t3._onFail(t3._groupID, e4), t3.isRunning() && (clearTimeout(t3._timeoutID), t3._timeoutID = setTimeout(t3._request.bind(t3), t3._manager.MAX_POLLING_INTERVAL));
        });
      } }, { key: "stop", value: function() {
        M2.l("".concat(this._n, ".stop")), 0 < this._timeoutID && (clearTimeout(this._timeoutID), this._timeoutID = -1), this._isRunning = false;
      } }, { key: "getPollingTimerID", value: function() {
        return this._timeoutID;
      } }]), Wi2), hi2 = { 3: true, 4: true, 5: true, 6: true, 17: true, 20: true, 21: true, 100: true }, gi2 = (e2(Yi2, [{ key: "hasJoinedAVChatRoom", value: function() {
        var e3 = [];
        return 0 < (e3 = 0 < this._joinedGroupMap.size ? p2(this._joinedGroupMap.values()).filter(function(e4) {
          return e4.type === A2.GRP_AVCHATROOM;
        }) : e3).length;
      } }, { key: "getJoinedLiveList", value: function() {
        var e3 = [];
        return e3 = 0 < this._joinedGroupMap.size ? p2(this._joinedGroupMap.values()).filter(function(e4) {
          return e4.type === A2.GRP_LIVE;
        }) : e3;
      } }, { key: "checkJoinedAVChatRoomByID", value: function(e3) {
        return this._joinedGroupMap.has(e3);
      } }, { key: "getJoinedAVChatRoom", value: function() {
        return 0 < this._joinedGroupMap.size ? p2(this._joinedGroupMap.keys()) : [];
      } }, { key: "_updatedata", value: function(e3) {
        var t3 = this._pollingRequestInfoMap.get(e3);
        return e3 === p2(this._pollingInstanceMap.keys())[0] ? y2(y2({}, t3), {}, { startBroadcastSeq: this._startBroadcastSeq, simplifiedMessage: this.DEFAULT_POLLING_SIMPLIFIED_MSG }) : y2(y2({}, t3), {}, { simplifiedMessage: this.DEFAULT_POLLING_SIMPLIFIED_MSG });
      } }, { key: "_handleSuccess", value: function(e3, t3) {
        var n3, o3 = t3.data, i3 = o3.key, a3 = o3.nextSeq, s3 = o3.rspMsgList, r3 = o3.errorCode, c3 = o3.nextBroadcastSeq, o3 = o3.broadcastMessageList;
        0 !== r3 ? (r3 = this._pollingRequestInfoMap.get(e3), n3 = new G2("longPollingAVError"), r3 = r3 ? "".concat(r3.key, "-").concat(r3.startSeq) : "requestInfo is undefined", n3.setMessage("".concat(e3, "-").concat(r3, "-").concat(t3.errorInfo)).setCode(t3.errorCode).end(true)) : this.checkJoinedAVChatRoomByID(e3) && (m2(i3) && R2(a3) && this._pollingRequestInfoMap.set(e3, { key: i3, startSeq: a3 }), R2(c3) && c3 > this._startBroadcastSeq && (this._startBroadcastSeq = c3), O2(s3) && 0 < s3.length ? (s3.forEach(function(e4) {
          e4.to = e4.groupID;
        }), this.onMessage(s3, e3)) : (this._pollingNoMessageCount += 1, this._pollingNoMessageCount === this.DEFAULT_POLLING_NO_MESSAGE_COUNT && (this._pollingInterval = this.DEFAULT_POLLING_INTERVAL + this.DEFAULT_POLLING_INTERVAL_PLUS)), this._onBroadcastMessage(o3));
      } }, { key: "_handleFailure", value: function(e3, t3) {
      } }, { key: "onMessage", value: function(e3, t3) {
        if (O2(e3) && 0 !== e3.length) {
          var n3 = "".concat(this._n, ".onMessage"), o3 = (t3 && (n3 += " groupID:".concat(t3)), 0 !== this._pollingNoMessageCount && (this._pollingNoMessageCount = 0, this._pollingInterval = this.DEFAULT_POLLING_INTERVAL), null), i3 = [], a3 = this._get(11), s3 = this._get(26), r3 = e3.length, c3 = (1 < r3 && e3.sort(function(e4, t4) {
            return e4.sequence - t4.sequence;
          }), this._get(12).isUnlimitedAVChatRoom()), u3 = false;
          M2.getLevel() <= 0 && (t3 = e3.map(function(e4) {
            return e4.sequence;
          }), M2.l("".concat(n3, " count:").concat(t3.length, " sequenceList:").concat(t3)), t3.length = 0);
          for (var l3 = 0; l3 < r3; l3++) {
            var d3 = this.restoreMessageFromSimplified(e3[l3]);
            if (hi2[d3.event]) {
              if (6 === d3.event) {
                if (this._grpM.isGroupAttributesUpdatedNotice(d3))
                  continue;
                if (this._grpM.isGroupCountersNotice(d3))
                  continue;
              }
              if (20 !== d3.event)
                if (21 !== d3.event)
                  if (100 !== d3.event) {
                    var o3 = this.packMessage(d3, d3.event), p3 = 1 === d3.isModified, u3 = 1 === d3.isHistoryMessage;
                    if (!c3) {
                      if (this._seqSll.has(o3.sequence))
                        continue;
                      this._seqSll.set(o3.sequence);
                    }
                    var _3 = this._IDSll.has(o3.ID);
                    _3 ? M2.w("".concat(n3, " ID:").concat(o3.ID, " has:").concat(_3)) : (this._IDSll.set(o3.ID), _3 = false, !u3 && this._isMessageSentByCurrentInstance(o3) ? p3 && (_3 = true, o3.isModified = p3, a3.updateMsgIsModifiedProp(o3)) : _3 = true, _3 && (o3.conversationType === A2.CONV_SYSTEM && 5 === o3.payload.operationType && this._onGroupDismissed(o3.payload.groupProfile.groupID), u3 || o3.conversationType === A2.CONV_SYSTEM || (p3 = o3.conversationID.replace(A2.CONV_GROUP, ""), this._pollingInstanceMap.has(p3) ? this._grpM.isLoggedIn() && s3.addMessageSequence({ key: zn2, message: o3 }) : (o3.type !== A2.MSG_GRP_TIP && 0 < o3.clientTime && s3.addMessageDelay(o3.clientTime), s3.addMessageSequence({ key: Jn2, message: o3 }))), i3.push(o3)));
                  } else
                    this.onRoomCustomData(d3);
                else
                  this._get(34).onMessageReactionNotify({ event: 21, dataList: d3.elements.messageReactionNotifyList });
              else
                this.handleMessageRevokedNotice(d3);
            } else
              M2.w("".concat(n3, ". unknown event:").concat(d3.event));
          }
          0 !== i3.length && (0 < (t3 = At2(i3)).length && this._grpM.emitOEvt(h2.MESSAGE_MODIFIED, t3), u3 || 0 < (t3 = this.packConversationOption(i3)).length && a3.onNewMessage({ conversationOptionsList: t3, isInstantMessage: true }), this._checkMessageStacked(i3), 0 < (t3 = Rt2(i3)).length && this._grpM.emitOEvt(h2.MESSAGE_RECEIVED, t3), i3.length = 0);
        }
      } }, { key: "handleMessageRevokedNotice", value: function(e3) {
        var t3 = this, i3 = e3.groupID, n3 = e3.elements.revokeMsgList, a3 = e3.revokerInfo, s3 = [];
        n3.forEach(function(e4) {
          var t4 = e4.tinyID, n4 = e4.clientTime, o3 = e4.random, e4 = e4.sequence, t4 = { conversationID: "".concat(A2.CONV_GROUP).concat(i3), ID: "".concat(t4, "-").concat(n4, "-").concat(o3), revoker: a3.revoker, revokeReason: a3.reason || "", revokerInfo: { userID: a3.revoker, nick: "", avatar: "" }, sequence: e4 };
          s3.push(t4);
        }), 0 !== s3.length && this._get(11).updateRevokerInfo(s3).then(function(e4) {
          t3._grpM.emitOEvt(h2.MESSAGE_REVOKED, e4);
        });
      } }, { key: "isBroadcastOrNormal", value: function(e3) {
        return 3 === e3 || 17 === e3;
      } }, { key: "isGroupTip", value: function(e3) {
        return 4 === e3 || 6 === e3;
      } }, { key: "isGroupSystemNotice", value: function(e3) {
        return 5 === e3;
      } }, { key: "restoreGroupTipElements", value: function() {
        var e3 = 0 < arguments.length && void 0 !== arguments[0] ? arguments[0] : {}, t3 = e3.operatorInfo, t3 = void 0 === t3 ? {} : t3, n3 = e3.operatorID, o3 = e3.userIDList, o3 = void 0 === o3 ? [] : o3, i3 = e3.operationType, i3 = (R2(e3.groupJoinType) || 1 !== i3 && 2 !== i3 || (e3.groupJoinType = 2 === i3 ? 0 : 1), t3.userID), a3 = t3.avatar, t3 = t3.nick, n3 = (e3.operatorInfo = { userID: void 0 === i3 ? n3 : i3, avatar: void 0 === a3 ? "" : a3, nick: void 0 === t3 ? "" : t3 }, o3.map(function(e4) {
          return { userID: e4 };
        }));
        return e3.memberInfoList = e3.memberInfoList || n3, e3;
      } }, { key: "restoreMessageFromSimplified", value: function(n3) {
        var e3, t3, o3, i3 = n3.event;
        return this.isBroadcastOrNormal(i3) && (n3.cloudCustomData = n3.cloudCustomData || "", n3.elements = n3.elements.map(function(e4) {
          var t4;
          return e4.type === A2.MSG_CUSTOM && (t4 = e4.content, e4.content = y2({ data: "", description: "", extension: "" }, void 0 === t4 ? {} : t4)), e4;
        })), (this.isGroupTip(i3) || this.isGroupSystemNotice(i3)) && (n3.from = n3.from || "@TIM#SYSTEM"), this.isGroupTip(i3) && (n3.elements = this.restoreGroupTipElements(n3.elements), t3 = (o3 = void 0 === (o3 = n3.elements) ? {} : o3).operationType, e3 = o3.operatorInfo, 1 === t3) && (t3 = [{ userID: (void 0 === e3 ? {} : e3).userID }], o3.memberInfoList = o3.memberInfoList || t3), this.isGroupSystemNotice(i3) && (o3 = (e3 = n3.elements).memberInfoList, t3 = e3.operatorInfo, n3.elements.memberInfoList = y2({ userID: n3.elements.operatorID, avatar: "", nick: "" }, o3 = o3 || (void 0 === t3 ? {} : t3)), n3.elements = y2({ authentication: "", remarkInfo: "", messageKey: 1e3 * n3.time }, n3.elements), i3 = Object.keys(n3.elements).filter(function(e4) {
          return "operatorInfo" !== e4;
        }).reduce(function(e4, t4) {
          return y2(y2({}, e4), {}, F2({}, t4, n3.elements[t4]));
        }, {}), n3.elements = i3), n3;
      } }, { key: "_onGroupDismissed", value: function(e3) {
        M2.l("".concat(this._n, "._onGroupDismissed groupID:").concat(e3)), this._grpM.deleteLocalGroupAndConversation(e3), this.reset(e3);
      } }, { key: "_checkMessageStacked", value: function(e3) {
        var t3 = "MessageStacked", e3 = e3.length;
        100 <= e3 && (this._grpM.warn(t3, e3), this._reportMessageStackedCount < 5) && (new G2(t3).setMessage("count:".concat(e3, " groupID:").concat(p2(this._joinedGroupMap.keys()))).setLevel("warning").end(), this._reportMessageStackedCount += 1);
      } }, { key: "_isMessageSentByCurrentInstance", value: function(e3) {
        return !!this._get(11).isMessageSentByCurrentInstance(e3);
      } }, { key: "packMessage", value: function(e3, t3) {
        e3.currentUser = this._grpM.getMyUserID(), e3.conversationType = 5 === t3 ? A2.CONV_SYSTEM : A2.CONV_GROUP, e3.isSystemMessage = !!e3.isSystemMessage;
        var n3 = new Do2(e3), e3 = this.packElements(e3, t3), t3 = this._grpM.getFileDownloadProxy(), o3 = this._grpM.getDowloadFileAuthKey(), i3 = this._get(17).getFileDNList();
        return n3.setElement(e3, t3, o3, i3), n3;
      } }, { key: "packElements", value: function(e3, t3) {
        return 4 === t3 || 6 === t3 ? (this._updateMemberCountByGroupTips(e3), { type: A2.MSG_GRP_TIP, content: y2(y2({}, e3.elements), {}, { groupProfile: e3.groupProfile }) }) : 5 === t3 ? { type: A2.MSG_GRP_SYS_NOTICE, content: y2(y2({}, e3.elements), {}, { groupProfile: y2(y2({}, e3.groupProfile), {}, { groupID: e3.groupID }) }) } : e3.elements;
      } }, { key: "packConversationOption", value: function(e3) {
        for (var t3 = /* @__PURE__ */ new Map(), n3 = 0; n3 < e3.length; n3++) {
          var o3, i3 = e3[n3], a3 = i3.conversationID;
          t3.has(a3) ? "in" === ((o3 = t3.get(a3)).lastMessage = i3).flow && o3.unreadCount++ : t3.set(a3, { conversationID: i3.conversationID, unreadCount: "out" === i3.flow ? 0 : 1, type: i3.conversationType, subType: i3.conversationSubType, lastMessage: i3 });
        }
        return p2(t3.values());
      } }, { key: "_updateMemberCountByGroupTips", value: function(e3) {
        var t3, n3, o3, i3 = e3.groupProfile.groupID, e3 = e3.elements.onlineMemberInfo, e3 = void 0 === e3 ? void 0 : e3;
        S2(e3) || (t3 = void 0 === (t3 = e3.onlineMemberNum) ? 0 : t3, e3 = void 0 === (e3 = e3.expireTime) ? this.DEFAULT_EXPIRE_TIME : e3, n3 = this._onlineMemberCountMap.get(i3) || {}, o3 = Date.now(), S2(n3) ? Object.assign(n3, { lastReqTime: 0, lastSyncTime: 0, latestUpdateTime: o3, memberCount: t3, expireTime: e3 }) : (n3.latestUpdateTime = o3, n3.memberCount = t3), this._onlineMemberCountMap.set(i3, n3));
      } }, { key: "_onBroadcastMessage", value: function(e3) {
        if (!S2(e3)) {
          for (var t3 = [], n3 = e3.length, o3 = null, i3 = 0; i3 < n3; i3++) {
            var a3 = this.restoreMessageFromSimplified(e3[i3]);
            hi2[a3.event] ? ((o3 = this.packMessage(a3, a3.event)).isBroadcastMessage = true, this._broadcastMessageIDMap.has(o3.ID) || (t3.push(o3), this._broadcastMessageIDMap.set(o3.ID, 1))) : M2.w("".concat(this._n, "._onBroadcastMessage unknown event:").concat(a3.event));
          }
          0 < t3.length && this._grpM.emitOEvt(h2.MESSAGE_RECEIVED, t3);
        }
      } }, { key: "start", value: function(e3) {
        var t3;
        this._pollingInstanceMap.has(e3) ? (t3 = this._pollingInstanceMap.get(e3)).isRunning() || t3.start() : ((t3 = new _i3({ manager: this, groupID: e3, onInit: this._updatedata.bind(this), onSuccess: this._handleSuccess.bind(this), onFail: this._handleFailure.bind(this) })).start(), this._pollingInstanceMap.set(e3, t3), M2.l("".concat(this._n, ".start groupID:").concat(e3)));
      } }, { key: "handleJoinResult", value: function(o3) {
        var i3 = this;
        return this._preCheck(o3.group).then(function() {
          var e3 = o3.longPollingKey, t3 = o3.group, n3 = t3.groupID;
          return i3._joinedGroupMap.set(n3, t3), i3._grpM.updateGroupMap([t3]), i3._grpM.deleteUnjoinedAVChatRoom(n3), i3._grpM.emitGroupListUpdate(true, false), N2(e3) ? T2({ status: nt2, group: t3 }) : Promise.resolve();
        });
      } }, { key: "startRunLoop", value: function(i3) {
        var a3 = this;
        return this.handleJoinResult(i3).then(function() {
          var e3 = i3.longPollingKey, t3 = i3.group, n3 = i3.startSeq, o3 = t3.groupID;
          return a3._pollingRequestInfoMap.set(o3, { key: e3, startSeq: void 0 === n3 ? 0 : n3 }), a3.start(o3), a3._grpM.isLoggedIn() ? T2({ status: nt2, group: t3 }) : T2({ status: nt2 });
        });
      } }, { key: "_preCheck", value: function(e3) {
        if (!this._get(12).isUnlimitedAVChatRoom() && this.hasJoinedAVChatRoom() && e3.type !== A2.GRP_LIVE) {
          var e3 = Y2(this._joinedGroupMap.entries().next().value, 2), t3 = e3[0], e3 = e3[1];
          if (this._grpM.isLoggedIn() && e3.selfInfo.role !== A2.GRP_MBR_ROLE_OWNER && e3.ownerID !== this._grpM.getMyUserID())
            return this._grpM.quitGroup(t3);
          this._grpM.deleteLocalGroupAndConversation(t3), this.reset(t3);
        }
        return Promise.resolve();
      } }, { key: "joinWithoutAuth", value: function(e3) {
        var n3 = this, o3 = e3.groupID, i3 = "".concat(this._n, ".").concat("joinWithoutAuth"), a3 = new G2("joinWithoutAuth");
        return this._grpM.req({ P: k2.APPLY_JOIN_GRP_NOAUTH, data: e3 }).then(function(e4) {
          e4 = e4.data.longPollingKey;
          if (a3.setMessage("groupID:".concat(o3, " longPollingKey:").concat(e4)).end(true), N2(e4))
            return D2({ code: L2.CANNOT_JOIN_NON_AV_WITHOUT_LOGIN });
          M2.l("".concat(i3, " ok. groupID:").concat(o3)), n3._get(11).setCompleted("".concat(A2.CONV_GROUP).concat(o3));
          var t3 = new oi2({ groupID: o3 });
          return n3.startRunLoop({ group: t3, longPollingKey: e4 }), C2({ status: nt2 });
        }).catch(function(e4) {
          return M2.e("".concat(i3, " failed. groupID:").concat(o3, " error:"), e4), a3.setError(e4).setMessage("groupID:".concat(o3)).end(true), D2(e4);
        }).finally(function() {
          n3._grpM.get(14).reportAtOnce();
        });
      } }, { key: "getGroupOnlineMemberCount", value: function(e3) {
        var t3 = this._onlineMemberCountMap.get(e3) || {}, n3 = Date.now();
        return S2(t3) || n3 - t3.lastSyncTime > 1e3 * t3.expireTime && 1e4 < n3 - t3.latestUpdateTime && 3e3 < n3 - t3.lastReqTime ? (t3.lastReqTime = n3, this._onlineMemberCountMap.set(e3, t3), this._getGroupOnlineMemberCount(e3).then(function(e4) {
          return C2({ memberCount: e4.memberCount });
        }).catch(function(e4) {
          return D2(e4);
        })) : T2({ memberCount: t3.memberCount });
      } }, { key: "_getGroupOnlineMemberCount", value: function(i3) {
        var a3 = this, s3 = "".concat(this._n, ".").concat("_getGroupOnlineMemberCount"), t3 = new G2("_getGroupOnlineMemberCount");
        return this._grpM.requestOnlineCount(i3).then(function(e3) {
          var t4 = a3._onlineMemberCountMap.get(i3) || {}, e3 = e3.data, n3 = e3.memberCount, n3 = void 0 === n3 ? 0 : n3, e3 = e3.expireTime, e3 = void 0 === e3 ? a3.DEFAULT_EXPIRE_TIME : e3, o3 = (M2.l("".concat(s3, " ok. groupID:").concat(i3, " memberCount:").concat(n3, " expireTime:").concat(e3)), Date.now());
          return S2(t4) && (t4.lastReqTime = o3), a3._onlineMemberCountMap.set(i3, Object.assign(t4, { lastSyncTime: o3, latestUpdateTime: o3, memberCount: n3, expireTime: e3 })), { memberCount: n3 };
        }).catch(function(e3) {
          return M2.w("".concat(s3, " failed. error:"), e3), t3.setCode(e3.code).setMessage("groupID:".concat(i3, " error:").concat(JSON.stringify(e3))).end(), Promise.reject(e3);
        });
      } }, { key: "_get", value: function(e3) {
        return this._grpM.get(e3);
      } }, { key: "setPollingInterval", value: function(e3) {
        N2(e3) || (R2(e3) ? this._pollingInterval = this.DEFAULT_POLLING_INTERVAL = e3 : this._pollingInterval = this.DEFAULT_POLLING_INTERVAL = parseInt(e3, 10));
      } }, { key: "setPollingIntervalPlus", value: function(e3) {
        N2(e3) || (R2(e3) ? this.DEFAULT_POLLING_INTERVAL_PLUS = e3 : this.DEFAULT_POLLING_INTERVAL_PLUS = parseInt(e3, 10));
      } }, { key: "setPollingNoMessageCount", value: function(e3) {
        N2(e3) || (R2(e3) ? this.DEFAULT_POLLING_NO_MESSAGE_COUNT = e3 : this.DEFAULT_POLLING_NO_MESSAGE_COUNT = parseInt(e3, 10));
      } }, { key: "setPollingSimplifiedMessage", value: function(e3) {
        N2(e3) || "0" !== e3 && "1" !== e3 || (this.DEFAULT_POLLING_SIMPLIFIED_MSG = parseInt(e3, 10));
      } }, { key: "getPollingInterval", value: function() {
        return this._pollingInterval;
      } }, { key: "onAVChatRoomMemberBanned", value: function(e3) {
        e3 = e3.payload.groupProfile.groupID;
        M2.l("".concat(this._n, ".onAVChatRoomMemberBanned groupID:").concat(e3)), this._grpM.deleteLocalGroupAndConversation(e3), this.reset(e3);
      } }, { key: "restartPolling", value: function() {
        M2.l("".concat(this._n, ".restartPolling count:").concat(this._pollingInstanceMap.size));
        var e3, t3 = Z2(this._pollingInstanceMap.values());
        try {
          for (t3.s(); !(e3 = t3.n()).done; ) {
            var n3 = e3.value;
            n3.stop(), n3.start();
          }
        } catch (e4) {
          t3.e(e4);
        } finally {
          t3.f();
        }
      } }, { key: "getPollingTimerID", value: function(e3) {
        var t3;
        return this._pollingInstanceMap.has(e3) ? (t3 = this._pollingInstanceMap.get(e3).getPollingTimerID(), M2.l("".concat(this._n, ".getPollingTimerID groupID:").concat(e3, " timerID:").concat(t3)), t3) : -1;
      } }, { key: "hasPollingInstance", value: function(e3) {
        return this._pollingInstanceMap.has(e3);
      } }, { key: "onRoomCustomData", value: function(e3) {
        var t3 = e3.groupID, n3 = e3.sequence, o3 = e3.time, e3 = e3.elements, e3 = e3 && e3.content;
        this._get(30).onRoomCustomDataReceived(e3), M2.l("".concat(this._n, ".onRoomCustomData groupID:").concat(t3, " sequence:").concat(n3, " time:").concat(o3, " data:").concat(e3));
      } }, { key: "reset", value: function(e3) {
        if (e3) {
          M2.l("".concat(this._n, ".reset groupID:").concat(e3));
          var t3 = this._pollingInstanceMap.get(e3);
          t3 && t3.stop(), this._pollingInstanceMap.delete(e3), this._joinedGroupMap.delete(e3), this._pollingRequestInfoMap.delete(e3), this._onlineMemberCountMap.delete(e3);
        } else {
          M2.l("".concat(this._n, ".reset all"));
          var n3, o3 = Z2(this._pollingInstanceMap.values());
          try {
            for (o3.s(); !(n3 = o3.n()).done; )
              n3.value.stop();
          } catch (e4) {
            o3.e(e4);
          } finally {
            o3.f();
          }
          this._pollingInstanceMap.clear(), this._joinedGroupMap.clear(), this._pollingRequestInfoMap.clear(), this._onlineMemberCountMap.clear(), this._broadcastMessageIDMap.clear();
        }
        this._seqSll.reset(), this._IDSll.reset(), this._reportMessageStackedCount = 0, this._pollingInterval = this.DEFAULT_POLLING_INTERVAL = 300, this.DEFAULT_POLLING_NO_MESSAGE_COUNT = 20, this.DEFAULT_POLLING_INTERVAL_PLUS = 2e3, this._pollingNoMessageCount = 0;
      } }]), Yi2), fi2 = (e2(Ki2, [{ key: "updateMember", value: function(e3) {
        N2(e3.onlineStatus) || (this.isOnline = "Online" === e3.onlineStatus);
        var t3 = [null, void 0, "", 0, NaN];
        e3.memberCustomField && kt2(this.memberCustomField, e3.memberCustomField), _t3(this, e3, ["memberCustomField", "marks", "onlineStatus"], t3);
      } }, { key: "updateRole", value: function(e3) {
        ["Owner", "Admin", "Member"].indexOf(e3) < 0 || (this.role = e3);
      } }, { key: "updateMuteUntil", value: function(e3) {
        N2(e3) || (this.muteUntil = Math.floor((Date.now() + 1e3 * e3) / 1e3));
      } }, { key: "updateNameCard", value: function(e3) {
        N2(e3) || (this.nameCard = e3);
      } }, { key: "updateMemberCustomField", value: function(e3) {
        e3 && kt2(this.memberCustomField, e3);
      } }]), Ki2), mi2 = (e2(Bi2, [{ key: "_onProfileUpdated", value: function(e3) {
        for (var n3 = this, o3 = e3.data, t3 = 0; t3 < o3.length; t3++)
          !function(e4) {
            var t4 = o3[e4];
            n3.groupMemberListMap.forEach(function(e5) {
              e5.has(t4.userID) && e5.get(t4.userID).updateMember({ nick: t4.nick, avatar: t4.avatar });
            });
          }(t3);
      } }, { key: "deleteGroupMemberList", value: function(e3) {
        this.groupMemberListMap.delete(e3);
      } }, { key: "getGroupMemberList", value: function(e3) {
        var t3, o3 = this, i3 = e3.groupID, n3 = e3.role, n3 = void 0 === n3 ? void 0 : n3, a3 = e3.offset, s3 = void 0 === a3 ? 0 : a3, a3 = e3.count, r3 = void 0 === a3 ? 15 : a3, a3 = e3.filter, e3 = void 0 === a3 ? void 0 : a3, c3 = "".concat(this._n, ".").concat("getGroupMemberList"), a3 = this._grpM.hasLocalGroup(i3);
        if (M2.l("".concat(c3, " groupID:").concat(i3, " role:").concat(n3, " offset:").concat(s3, " count:").concat(r3, " hasLocalGroup:").concat(a3)), !a3)
          return T2({ memberList: [], offset: 0 });
        if (this._grpM.getLocalGroupProfile(i3).type === A2.GRP_AVCHATROOM) {
          if (this._grpM.canIUse(_2.AV_MBR_LIST))
            return this._getAVChatRoomMemberList({ groupID: i3, offset: s3, filter: e3 });
          this._grpM.warn("LiveOnlineMember");
        }
        n3 !== A2.GRP_MBR_ROLE_ADMIN && n3 !== A2.GRP_MBR_ROLE_OWNER && n3 !== A2.GRP_MBR_ROLE_MEMBER || (t3 = n3);
        var u3 = new G2("getGroupMemberList"), l3 = 0, a3 = { groupID: i3, limit: 100 < r3 ? 100 : r3, memberRoleFilter: t3 ? [t3] : void 0, memberInfoFilter: this.DEFAULT_MEMBER_INFO_FILTER }, d3 = (Nt2({ groupID: i3 }) ? a3.next = "".concat(s3) : l3 = (a3.offset = s3) + r3, []);
        return this._grpM.req({ P: k2.GET_GRP_MBR_LIST, data: a3 }).then(function(e4) {
          var e4 = e4.data, t4 = e4.members, n4 = e4.memberNum, e4 = e4.next, e4 = void 0 === e4 ? void 0 : e4;
          return N2(e4) || (l3 = S2(e4) ? 0 : e4), O2(t4) && 0 !== t4.length ? (o3._grpM.hasLocalGroup(i3) && (o3._grpM.getLocalGroupProfile(i3).memberNum = n4), d3 = o3._updateLocalGroupMemberMap(i3, t4), o3._grpM.get(4).getUserProfile({ userIDList: t4.map(function(e5) {
            return e5.userID;
          }), tagList: [g2.NICK, g2.AVATAR] })) : (l3 = 0, Promise.resolve([]));
        }).then(function(e4) {
          var e4 = e4.data;
          return O2(e4) && 0 !== e4.length ? (e4 = e4.map(function(e5) {
            return { userID: e5.userID, nick: e5.nick, avatar: e5.avatar };
          }), o3._updateLocalGroupMemberMap(i3, e4), d3.length < r3 && (l3 = 0), u3.setMessage("groupID:".concat(i3, " offset:").concat(s3, " count:").concat(r3)).end(), M2.l("".concat(c3, " ok.")), C2({ memberList: d3, offset: l3 })) : T2({ memberList: [], offset: l3 });
        }).catch(function(e4) {
          return u3.setError(e4).end(), M2.e("".concat(c3, " failed. error:"), e4), D2(e4);
        });
      } }, { key: "_getAVChatRoomMemberList", value: function(e3) {
        var n3 = this, o3 = e3.groupID, t3 = e3.offset, e3 = e3.filter, i3 = "".concat(this._n, ".").concat("_getAVChatRoomMemberList"), a3 = new G2("_getAVChatRoomMemberList");
        return a3.setMessage("groupID:".concat(o3, " offset:").concat(t3, " filter:").concat(e3)), this._grpM.req({ P: k2.GET_AV_MBR_LIST, data: { groupID: o3, offset: t3, filter: e3 } }).then(function(e4) {
          var e4 = e4.data, t4 = e4.memberList, t4 = void 0 === t4 ? [] : t4, e4 = e4.offset, e4 = void 0 === e4 ? 0 : e4, t4 = (a3.end(), M2.l("".concat(i3, " ok. member count:").concat(t4.length, ", next request timestamp:").concat(e4)), t4.map(function(e5) {
            return y2(y2({}, e5), {}, { onlineStatus: "Online" });
          })), t4 = n3._updateLocalGroupMemberMap(o3, t4);
          return C2({ memberList: t4, offset: e4 });
        }).catch(function(e4) {
          return a3.setError(e4).end(), M2.e("".concat(i3, " failed. error:"), e4), D2(e4);
        });
      } }, { key: "getGroupMemberProfile", value: function(e3) {
        var t3, n3 = this, o3 = "getGroupMemberProfile", i3 = "".concat(this._n, ".").concat(o3), a3 = "groupID:".concat(e3.groupID), s3 = (5 < e3.userIDList.length ? a3 += " userIDList.length:".concat(e3.userIDList.length) : a3 += " userIDList:".concat(e3.userIDList), M2.l("".concat(i3, " ").concat(a3)), 50 < e3.userIDList.length && (e3.userIDList = e3.userIDList.slice(0, 50)), e3.groupID), r3 = e3.userIDList, i3 = this._grpM.getLocalGroupProfile(s3);
        return i3 && Ot2(i3.type) ? D2({ code: i3 = L2.OPERATION_NOT_SUPPORTED_IN_AV, message: this._grpM.getErrMsg(i3, o3) }) : ((t3 = new G2(o3)).setMessage(a3), this._getGroupMemberProfileAdvance(y2(y2({}, e3), {}, { userIDList: r3 })).then(function(e4) {
          e4 = e4.data.members;
          return O2(e4) && 0 !== e4.length ? (n3._updateLocalGroupMemberMap(s3, e4), n3._grpM.get(4).getUserProfile({ userIDList: e4.map(function(e5) {
            return e5.userID;
          }), tagList: [g2.NICK, g2.AVATAR] })) : T2([]);
        }).then(function(e4) {
          e4 = e4.data.map(function(e5) {
            return { userID: e5.userID, nick: e5.nick, avatar: e5.avatar };
          }), n3._updateLocalGroupMemberMap(s3, e4), e4 = r3.filter(function(e5) {
            return n3.hasLocalGroupMember(s3, e5);
          }).map(function(e5) {
            return n3.getLocalGroupMemberInfo(s3, e5);
          });
          return t3.end(), C2({ memberList: e4 });
        }));
      } }, { key: "addGroupMember", value: function(a3) {
        var s3 = this, r3 = "".concat(this._n, ".").concat("addGroupMember"), e3 = a3.groupID, c3 = this._grpM.getLocalGroupProfile(e3), t3 = c3.type, u3 = new G2("addGroupMember");
        return u3.setMessage("groupID:".concat(e3, " groupType:").concat(t3)), Ot2(t3) ? (t3 = new E2({ code: L2.CANNOT_ADD_MEMBER_IN_AV }), u3.setError(t3).end(), D2(t3)) : (a3.userIDList = a3.userIDList.map(function(e4) {
          return { userID: e4 };
        }), M2.l("".concat(r3, " groupID:").concat(e3)), this._grpM.req({ P: k2.ADD_GRP_MBR, data: a3 }).then(function(e4) {
          var e4 = e4.data.members, t4 = (M2.l("".concat(r3, " ok")), e4.filter(function(e5) {
            return 1 === e5.result;
          }).map(function(e5) {
            return e5.userID;
          })), n3 = e4.filter(function(e5) {
            return 0 === e5.result;
          }).map(function(e5) {
            return e5.userID;
          }), o3 = e4.filter(function(e5) {
            return 2 === e5.result;
          }).map(function(e5) {
            return e5.userID;
          }), e4 = e4.filter(function(e5) {
            return 4 === e5.result;
          }).map(function(e5) {
            return e5.userID;
          }), i3 = "groupID:".concat(a3.groupID, ", ") + "successUserIDList:".concat(t4, ", ") + "failureUserIDList:".concat(n3, ", ") + "existedUserIDList:".concat(o3, ", ") + "overLimitUserIDList:".concat(e4);
          return u3.setMoreMessage(i3).end(), 0 === t4.length ? C2({ successUserIDList: t4, failureUserIDList: n3, existedUserIDList: o3, overLimitUserIDList: e4 }) : (s3._updateConvGroupProfile(c3), C2({ successUserIDList: t4, failureUserIDList: n3, existedUserIDList: o3, overLimitUserIDList: e4, group: c3 }));
        }).catch(function(e4) {
          return u3.setError(e4).end(), M2.e("".concat(r3, " failed. error:"), e4), D2(e4);
        }));
      } }, { key: "deleteGroupMember", value: function(e3) {
        var t3, n3, o3 = this, i3 = "".concat(this._n, ".").concat("deleteGroupMember"), a3 = e3.groupID, s3 = e3.userIDList, r3 = this._grpM.getLocalGroupProfile(a3);
        return N2(r3) ? D2({ code: L2.CANNOT_FIND_GRP }) : Ot2(r3.type) ? this._grpM.canIUse(_2.AV_BAN_MBR) ? this._banAVChatRoomMember(e3) : this._grpM.noUse("deleteGroupMember") : (t3 = "groupID:".concat(a3, " ").concat(5 < s3.length ? "userIDList.length:".concat(s3.length) : "userIDList:".concat(s3)), M2.l("".concat(i3, " groupID:").concat(a3, " userIDList:"), s3), (n3 = new G2("deleteGroupMember")).setMessage(t3), this._grpM.req({ P: k2.DEL_GRP_MBR, data: e3 }).then(function() {
          return n3.end(), M2.l("".concat(i3, " ok")), o3._updateConvGroupProfile(r3), o3.deleteLocalGroupMembers(a3, s3), C2({ group: r3, userIDList: s3 });
        }).catch(function(e4) {
          return n3.setError(e4).end(), M2.e("".concat(i3, " failed. error:"), e4), D2(e4);
        }));
      } }, { key: "_updateConvGroupProfile", value: function(e3) {
        this._grpM.get(11).updateConvGroupProfile([e3]);
      } }, { key: "_banAVChatRoomMember", value: function(e3) {
        var t3 = this, n3 = "".concat(this._n, ".").concat("_banAVChatRoomMember"), o3 = e3.groupID, i3 = e3.userIDList, a3 = "groupID:".concat(o3, " ").concat(5 < i3.length ? "userIDList.length:".concat(i3.length) : "userIDList:".concat(i3)), s3 = new G2("_banAVChatRoomMember"), r3 = (s3.setMessage(a3), M2.l("".concat(n3, " groupID:").concat(o3, " userIDList:"), i3), this._grpM.getLocalGroupProfile(o3));
        return N2(e3.duration) || 0 === e3.duration ? D2({ code: L2.BAN_DURATION_INVALID }) : this._grpM.req({ P: k2.BAN_AV_MBR, data: e3 }).then(function() {
          return s3.end(), M2.l("".concat(n3, " ok")), t3.deleteLocalGroupMembers(o3, i3), C2({ group: r3, userIDList: i3 });
        }).catch(function(e4) {
          return s3.setError(e4).end(), M2.e("".concat(n3, " failed. error:"), e4), D2(e4);
        });
      } }, { key: "setGroupMemberMuteTime", value: function(e3) {
        var t3, n3, o3 = this, i3 = e3.groupID, a3 = e3.userID, e3 = e3.muteTime, s3 = "".concat(this._n, ".").concat("setGroupMemberMuteTime");
        return a3 === this._grpM.getMyUserID() ? D2({ code: L2.CANNOT_MUTE_SELF }) : (t3 = "groupID:".concat(i3, " userID:").concat(a3, " muteTime:").concat(e3), M2.l("".concat(s3, " ").concat(t3)), (n3 = new G2("setGroupMemberMuteTime")).setMessage(t3), this.modifyGroupMemberInfo({ groupID: i3, userID: a3, muteTime: e3 }).then(function(e4) {
          n3.end(), M2.l("".concat(s3, " ok"));
          var t4 = o3._grpM.getLocalGroupProfile(i3);
          return C2({ group: t4, member: e4 });
        }).catch(function(e4) {
          return n3.setError(e4).end(), M2.e("".concat(s3, " failed. error:"), e4), D2(e4);
        }));
      } }, { key: "setGroupMemberRole", value: function(e3) {
        var t3, n3, o3 = "".concat(this._n, ".").concat("setGroupMemberRole"), i3 = e3.groupID, a3 = e3.userID, e3 = e3.role, s3 = "groupID:".concat(i3, " userID:").concat(a3, " role:").concat(e3), r3 = this._grpM.getLocalGroupProfile(i3);
        return r3 && r3.selfInfo.role !== A2.GRP_MBR_ROLE_OWNER ? D2({ code: L2.NOT_OWNER }) : (t3 = [A2.GRP_MBR_ROLE_ADMIN, A2.GRP_MBR_ROLE_MEMBER], Nt2({ groupID: i3 }) && t3.push(A2.GRP_MBR_ROLE_CUSTOM), t3.indexOf(e3) < 0 ? D2({ code: L2.INVALID_MEMBER_ROLE }) : a3 === this._grpM.getMyUserID() ? D2({ code: L2.CANNOT_SET_SELF_MEMBER_ROLE }) : ((n3 = new G2("setGroupMemberRole")).setMessage(s3), M2.l("".concat(o3, " ").concat(s3)), this.modifyGroupMemberInfo({ groupID: i3, userID: a3, role: e3 }).then(function(e4) {
          return n3.end(), M2.l("".concat(o3, " ok")), C2({ group: r3, member: e4 });
        }).catch(function(e4) {
          return n3.setError(e4).end(), M2.e("".concat(o3, " failed. error:"), e4), D2(e4);
        })));
      } }, { key: "_filterProfanity", value: function(e3, t3) {
        var n3, o3 = this._grpM.get(29);
        return !o3 || (n3 = (o3 = o3.filterText(t3[e3], "group_member_profile")).isAllowedToSend, o3 = o3.modifiedText, true === n3 && (t3[e3] = o3, true));
      } }, { key: "setGroupMemberNameCard", value: function(e3) {
        var n3, o3, i3, t3, a3, s3 = this, r3 = "setGroupMemberNameCard", c3 = "".concat(this._n, ".").concat(r3);
        return e3.nameCard && false === this._filterProfanity("nameCard", e3) ? D2({ code: L2.PROFANITY_FOUND }) : (n3 = e3.groupID, t3 = e3.userID, o3 = void 0 === t3 ? this._grpM.getMyUserID() : t3, i3 = e3.nameCard, t3 = "groupID:".concat(n3, " userID:").concat(o3, " nameCard:").concat(i3), M2.l("".concat(c3, " ").concat(t3)), (e3 = this._grpM.getLocalGroupProfile(n3)) && Ot2(e3.type) ? D2({ code: e3 = L2.OPERATION_NOT_SUPPORTED_IN_AV, message: this._grpM.getErrMsg(e3, r3) }) : ((a3 = new G2(r3)).setMessage(t3), this.modifyGroupMemberInfo({ groupID: n3, userID: o3, nameCard: i3 }).then(function(e4) {
          M2.l("".concat(c3, " ok")), a3.end();
          var t4 = s3._grpM.getLocalGroupProfile(n3);
          return o3 === s3._grpM.getMyUserID() && t4 && t4.setSelfNameCard(i3), C2({ group: t4, member: e4 });
        }).catch(function(e4) {
          return a3.setError(e4).end(), M2.e("".concat(c3, " failed. error:"), e4), D2(e4);
        })));
      } }, { key: "setGroupMemberCustomField", value: function(e3) {
        var n3, o3 = this, t3 = "setGroupMemberCustomField", i3 = "".concat(this._n, ".").concat(t3), a3 = e3.groupID, s3 = e3.userID, s3 = void 0 === s3 ? this._grpM.getMyUserID() : s3, e3 = e3.memberCustomField, r3 = "groupID:".concat(a3, " userID:").concat(s3, " memberCustomField:").concat(JSON.stringify(e3)), c3 = (M2.l("".concat(i3, " ").concat(r3)), this._grpM.getLocalGroupProfile(a3));
        return c3 && Ot2(c3.type) ? D2({ code: c3 = L2.OPERATION_NOT_SUPPORTED_IN_AV, message: this._grpM.getErrMsg(c3, t3) }) : ((n3 = new G2(t3)).setMessage(r3), this.modifyGroupMemberInfo({ groupID: a3, userID: s3, memberCustomField: e3 }).then(function(e4) {
          n3.end(), M2.l("".concat(i3, " ok"));
          var t4 = o3._grpM.getLocalGroupProfile(a3);
          return C2({ group: t4, member: e4 });
        }).catch(function(e4) {
          return n3.setError(e4).end(), M2.e("".concat(i3, " failed. error:"), e4), D2(e4);
        }));
      } }, { key: "modifyGroupMemberInfo", value: function(t3) {
        var n3 = this, o3 = t3.groupID, i3 = t3.userID, e3 = void 0;
        return Gt2(o3) && (o3 = Jt2(e3 = o3)), this._grpM.req({ P: k2.MODIFY_GRP_MBR_INFO, data: y2(y2({}, t3), {}, { groupID: o3, topicID: e3 }) }).then(function() {
          var e4;
          return n3.hasLocalGroupMember(o3, i3) ? (e4 = n3.getLocalGroupMemberInfo(o3, i3), N2(t3.muteTime) || e4.updateMuteUntil(t3.muteTime), N2(t3.role) || e4.updateRole(t3.role), N2(t3.nameCard) || e4.updateNameCard(t3.nameCard), N2(t3.memberCustomField) || e4.updateMemberCustomField(t3.memberCustomField), e4) : (e4 = n3._grpM.getLocalGroupProfile(o3)) && !Ot2(e4.type) ? n3.getGroupMemberProfile({ groupID: o3, userIDList: [i3] }).then(function(e5) {
            return Y2(e5.data.memberList, 1)[0];
          }) : void 0;
        });
      } }, { key: "markGroupMemberList", value: function(e3) {
        var o3 = "".concat(this._n, ".").concat("markGroupMemberList"), t3 = e3.groupID, n3 = e3.markType, i3 = e3.enableMark, e3 = e3.userIDList, a3 = void 0 === e3 ? [] : e3, e3 = "groupID:".concat(t3, " markType:").concat(n3, " enableMark:").concat(i3, " userIDList count:").concat(a3.length), s3 = (M2.l("".concat(o3, " ").concat(e3)), 2), r3 = [], i3 = (true === i3 && (s3 = 1), p2(a3)), c3 = (500 < a3.length && (i3 = a3.slice(0, 500), M2.w("".concat(o3, " ").concat($t2(500)))), i3.forEach(function(e4) {
          r3.push({ userID: e4, markType: [n3] });
        }), i3 = null, new G2("markGroupMemberList"));
        return c3.setMessage(e3), this._grpM.req({ P: k2.MARK_AV_MBR_INFO, data: { groupID: t3, operationType: s3, memberList: r3 } }).then(function(e4) {
          var e4 = e4.data.memberList, e4 = void 0 === e4 ? [] : e4, t4 = [], n4 = [], e4 = (e4.length === a3.length ? t4.push.apply(t4, p2(a3)) : (e4.forEach(function(e5) {
            t4.push(e5.userID);
          }), a3.forEach(function(e5) {
            t4.includes(e5) || n4.push(e5);
          })), "success count:".concat(t4.length, " fail count:").concat(n4.length));
          return c3.setMessage(e4).end(), M2.l("".concat(o3, " ok. ").concat(e4)), C2({ successUserIDList: t4, failureUserIDList: n4 });
        }).catch(function(e4) {
          return c3.setError(e4).end(), M2.e("".concat(o3, " failed. error:"), e4), D2(e4);
        });
      } }, { key: "_getGroupMemberProfileAdvance", value: function(e3) {
        return this._grpM.req({ P: k2.GET_GRP_MBR_PROFILE, data: y2(y2({}, e3), {}, { memberInfoFilter: e3.memberInfoFilter || this.DEFAULT_MEMBER_INFO_FILTER }) });
      } }, { key: "_updateLocalGroupMemberMap", value: function(t3, e3) {
        var n3 = this;
        return O2(e3) && 0 !== e3.length ? e3.map(function(e4) {
          return n3.hasLocalGroupMember(t3, e4.userID) ? n3.getLocalGroupMemberInfo(t3, e4.userID).updateMember(e4) : n3.setLocalGroupMember(t3, new fi2(e4)), n3.getLocalGroupMemberInfo(t3, e4.userID);
        }) : [];
      } }, { key: "deleteLocalGroupMembers", value: function(e3, t3) {
        var n3 = this.groupMemberListMap.get(e3);
        n3 && t3.forEach(function(e4) {
          n3.delete(e4);
        });
      } }, { key: "getLocalGroupMemberInfo", value: function(e3, t3) {
        return this.groupMemberListMap.has(e3) ? this.groupMemberListMap.get(e3).get(t3) : null;
      } }, { key: "setLocalGroupMember", value: function(e3, t3) {
        this.groupMemberListMap.has(e3) ? this.groupMemberListMap.get(e3).set(t3.userID, t3) : (t3 = (/* @__PURE__ */ new Map()).set(t3.userID, t3), this.groupMemberListMap.set(e3, t3));
      } }, { key: "getLocalGroupMemberList", value: function(e3) {
        return this.groupMemberListMap.get(e3);
      } }, { key: "hasLocalGroupMember", value: function(e3, t3) {
        return this.groupMemberListMap.has(e3) && this.groupMemberListMap.get(e3).has(t3);
      } }, { key: "hasLocalGroupMemberMap", value: function(e3) {
        return this.groupMemberListMap.has(e3);
      } }, { key: "reset", value: function() {
        this.groupMemberListMap.clear();
      } }]), Bi2), vi2 = [17, 18, 20], Ii2 = (e2(Hi2, [{ key: "onNewGroupSystemNotice", value: function(e3) {
        var t3 = e3.dataList, n3 = e3.isSyncingEnded, e3 = e3.isInstantMessage, t3 = (M2.d("".concat(this._n, ".onReceiveSystemNotice count:").concat(t3.length)), this._assembly({ notifiesList: t3, isInstantMessage: e3 })), o3 = t3.eventDataList, t3 = t3.result;
        0 < o3.length && (this._grpM.get(11).onNewMessage({ conversationOptionsList: o3, isInstantMessage: e3 }), this._onReceivedGroupSystemNotice({ result: t3, isInstantMessage: e3 })), e3 ? 0 < t3.length && this._grpM.emitOEvt(h2.MESSAGE_RECEIVED, t3) : true === n3 && this._clearGroupSystemNotice();
      } }, { key: "_assembly", value: function(e3) {
        for (var t3 = e3.notifiesList, n3 = e3.isInstantMessage, o3 = null, i3 = t3.length, a3 = 0, s3 = [], r3 = { conversationID: A2.CONV_SYSTEM, unreadCount: 0, type: A2.CONV_SYSTEM, subType: null, lastMessage: null }, a3 = 0; a3 < i3; a3++) {
          var c3 = t3[a3], u3 = c3.groupProfile, l3 = u3.communityType, u3 = u3.topicID, u3 = void 0 === u3 ? void 0 : u3, d3 = c3.elements, p3 = d3.topicIDList, p3 = void 0 === p3 ? void 0 : p3, d3 = d3.operationType;
          if (!(2 !== (void 0 === l3 ? 0 : l3) || S2(u3) && S2(p3))) {
            if (vi2.includes(d3)) {
              this._handleTopicSystemNotice(c3);
              continue;
            }
            S2(u3) || (c3.to = u3);
          }
          15 !== c3.elements.operationType && (c3.currentUser = this._grpM.getMyUserID(), c3.conversationType = A2.CONV_SYSTEM, c3.conversationID = A2.CONV_SYSTEM, (o3 = new Do2(c3)).setElement({ type: A2.MSG_GRP_SYS_NOTICE, content: y2(y2({}, c3.elements), {}, { groupProfile: y2({}, c3.groupProfile) }) }), o3.isSystemMessage = true, (1 === o3.sequence && 1 === o3.random || 2 === o3.sequence && 2 === o3.random) && (o3.sequence = ft2(), o3.random = ft2(), o3.generateMessageID(), M2.l("".concat(this._n, "._assembly regenerate ID:").concat(o3.ID))), this._grpM.get(11).pushIntoNoticeResult(s3, o3)) && (n3 ? r3.unreadCount++ : o3.setIsRead(true), r3.subType = o3.conversationSubType);
        }
        return r3.lastMessage = s3[s3.length - 1], { eventDataList: 0 < s3.length ? [r3] : [], result: s3 };
      } }, { key: "_clearGroupSystemNotice", value: function() {
        var a3 = this;
        this._getPendencyList().then(function(e3) {
          e3.forEach(function(e4) {
            a3.pendencyMap.set("".concat(e4.from, "_").concat(e4.groupID, "_").concat(e4.to), e4);
          });
          var e3 = a3._grpM.get(11).getLocalMessageList(A2.CONV_SYSTEM), i3 = [];
          e3.forEach(function(e4) {
            var t3 = e4.payload, n3 = t3.operatorID, o3 = t3.operationType, t3 = t3.groupProfile;
            1 === o3 && (o3 = "".concat(n3, "_").concat(t3.groupID, "_").concat(t3.to), n3 = a3.pendencyMap.get(o3)) && R2(n3.handled) && 0 !== n3.handled && i3.push(e4);
          }), a3.deleteGroupSystemNotice({ messageList: i3 });
        });
      } }, { key: "deleteGroupSystemNotice", value: function(e3) {
        var n3 = this, o3 = "".concat(this._n, ".deleteGroupSystemNotice");
        return O2(e3.messageList) && 0 !== e3.messageList.length ? (M2.l("".concat(o3, " ") + e3.messageList.map(function(e4) {
          return e4.ID;
        })), this._grpM.req({ P: k2.DEL_GRP_SYSTEM_NOTICE, data: { messageListToDelete: e3.messageList.map(function(e4) {
          return { from: A2.CONV_SYSTEM, messageSeq: e4.clientSequence, messageRandom: e4.random };
        }) } }).then(function() {
          M2.l("".concat(o3, " ok"));
          var t3 = n3._grpM.get(11);
          return e3.messageList.forEach(function(e4) {
            t3.deleteLocalMessage(e4);
          }), C2();
        }).catch(function(e4) {
          return M2.e("".concat(o3, " error:"), e4), D2(e4);
        })) : T2();
      } }, { key: "_getPendencyList", value: function() {
        var n3 = this, e3 = 0 < arguments.length && void 0 !== arguments[0] ? arguments[0] : {}, t3 = e3.type, o3 = e3.startTime, e3 = e3.limit;
        return this._grpM.req({ P: k2.GET_GRP_PENDENCY, data: { type: void 0 === t3 ? void 0 : t3, startTime: void 0 === o3 ? 0 : o3, limit: void 0 === e3 ? 20 : e3, handleAccount: this._grpM.getMyUserID() } }).then(function(e4) {
          var t4 = e4.data.pendencyList;
          return 0 !== e4.data.nextStartTime ? n3._getPendencyList({ startTime: e4.data.nextStartTime }).then(function(e5) {
            return [].concat(p2(t4), p2(e5));
          }) : t4;
        });
      } }, { key: "getGroupApplicationList", value: function() {
        var n3 = this;
        return this._getPendencyList().then(function(t3) {
          return n3._getPendencyList({ type: A2.GRP_COMMUNITY }).then(function(e3) {
            return t3.push.apply(t3, p2(e3)), n3._handlePendencyResult(t3);
          }).catch(function(e3) {
            return n3._handlePendencyResult(t3);
          });
        });
      } }, { key: "_handlePendencyResult", value: function(e3) {
        var t3 = this, n3 = [];
        return e3.forEach(function(e4) {
          t3.pendencyMap.set("".concat(e4.from, "_").concat(e4.groupID, "_").concat(e4.to), e4), 0 === e4.handled && n3.push({ applicant: e4.from, applicantNick: e4.fromUserNickName, groupName: e4.groupName, groupID: e4.groupID, authentication: e4.authentication, messageKey: e4.time, applicationType: e4.applicationType, userID: e4.userID, note: e4.note });
        }), T2({ applicationList: n3 });
      } }, { key: "_onReceivedGroupSystemNotice", value: function(e3) {
        var t3 = this, n3 = e3.result;
        e3.isInstantMessage && n3.forEach(function(e4) {
          switch (e4.payload.operationType) {
            case 1:
              break;
            case 2:
              t3._onApplyJoinGroup(e4);
              break;
            case 3:
              break;
            case 4:
              t3._onMemberKicked(e4);
              break;
            case 5:
              t3._onGroupDismissed(e4);
              break;
            case 6:
              break;
            case 7:
              t3._onInviteGroup(e4);
              break;
            case 8:
              t3._onQuitGroup(e4);
              break;
            case 9:
              t3._onSetManager(e4);
              break;
            case 10:
              t3._onDeleteManager(e4);
              break;
            case 11:
            case 12:
            case 15:
              break;
            case 20:
              t3._onMessageRemindTypeSynced(e4);
              break;
            case 21:
              t3._grpM.onAVChatRoomMemberBanned(e4);
          }
        });
      } }, { key: "_onApplyJoinGroup", value: function(e3) {
        var t3 = this, e3 = e3.payload.groupProfile, n3 = e3.groupID, e3 = e3.groupType, o3 = this._grpM.hasLocalGroup(n3);
        M2.l("".concat(this._n, "._onApplyJoinGroup groupID:").concat(n3, " groupType:").concat(e3, " hasGroup:").concat(o3)), o3 || Ot2(e3) || this._grpM.getGroupProfile({ groupID: n3 }).then(function(e4) {
          var e4 = e4.data.group;
          e4 && (t3._grpM.updateGroupMap([e4]), e4 = !e4.isSupportTopic, t3._grpM.emitGroupListUpdate(true, e4));
        });
      } }, { key: "_onMemberKicked", value: function(e3) {
        e3 = e3.payload.groupProfile.groupID;
        this._grpM.hasLocalGroup(e3) && this._grpM.deleteLocalGroupAndConversation(e3);
      } }, { key: "_onGroupDismissed", value: function(e3) {
        var e3 = e3.payload.groupProfile.groupID, t3 = (this._grpM.hasLocalGroup(e3) && this._grpM.deleteLocalGroupAndConversation(e3), this._grpM._AVChatRoomHandler);
        t3 && t3.checkJoinedAVChatRoomByID(e3) && t3.reset(e3);
      } }, { key: "_onInviteGroup", value: function(e3) {
        var t3 = this, n3 = e3.payload.groupProfile.groupID, e3 = this._grpM.hasLocalGroup(n3);
        M2.l("".concat(this._n, "._onInviteGroup groupID:").concat(n3, " hasGroup:").concat(e3)), this._grpM.getGroupProfile({ groupID: n3 }).then(function() {
          t3._grpM.emitGroupListUpdate(), t3._grpM.get(11).pullMsgOnInvite("".concat(A2.CONV_GROUP).concat(n3));
        });
      } }, { key: "_onQuitGroup", value: function(e3) {
        var e3 = e3.payload.groupProfile, t3 = e3.groupID, e3 = e3.groupType, n3 = this._grpM.hasLocalGroup(t3);
        M2.l("".concat(this._n, "._onQuitGroup groupID:").concat(t3, " groupType:").concat(e3, " hasGroup:").concat(n3)), n3 && this._grpM.deleteLocalGroupAndConversation(t3);
      } }, { key: "_onSetManager", value: function(e3) {
        var e3 = e3.payload.groupProfile, t3 = e3.to, e3 = e3.groupID, e3 = this._grpM.getGroupMemberHandler().getLocalGroupMemberInfo(e3, t3);
        e3 && e3.updateRole(A2.GRP_MBR_ROLE_ADMIN);
      } }, { key: "_onDeleteManager", value: function(e3) {
        var e3 = e3.payload.groupProfile, t3 = e3.to, e3 = e3.groupID, e3 = this._grpM.getGroupMemberHandler().getLocalGroupMemberInfo(e3, t3);
        e3 && e3.updateRole(A2.GRP_MBR_ROLE_MEMBER);
      } }, { key: "_onMessageRemindTypeSynced", value: function(e3) {
        var t3 = e3.payload.groupProfile.groupID, e3 = e3.payload.messageRemindType;
        this._grpM.get(11).onGroupMsgRemindTypeUpdated({ groupID: t3, messageRemindType: e3 });
      } }, { key: "_handleTopicSystemNotice", value: function(e3) {
        var t3 = e3.groupProfile, n3 = t3.groupID, t3 = t3.topicID, e3 = e3.elements, o3 = e3.operationType, i3 = e3.topicIDList, e3 = e3.messageRemindType, a3 = this._grpM.get(10);
        17 === o3 ? a3.onTopicCreated({ groupID: n3, topicID: t3 }) : 18 === o3 ? a3.onTopicDeleted({ groupID: n3, topicIDList: i3 }) : 20 === o3 && a3.onMessageRemindTypeUpdated({ groupID: n3, topicID: t3, messageRemindType: e3 });
      } }, { key: "reset", value: function() {
        this.pendencyMap.clear();
      } }]), Hi2), Mi2 = ["relayFlag"], yi2 = (t2(Vi2, u2), Xo = n2(Vi2), e2(Vi2, [{ key: "_onCloudConfig", value: function() {
        var e3 = this.getCloudConfig("polling_interval"), t3 = this.getCloudConfig("polling_interval_plus"), n3 = this.getCloudConfig("polling_no_msg_count"), o3 = this.getCloudConfig("polling_simplified_msg"), i3 = this.getCloudConfig("paging_grp_count");
        M2.l("".concat(this._n, "._onCloudConfig pollingInterval:").concat(e3) + " pollingIntervalPlus:".concat(t3, " pollingNoMessageCount:").concat(n3) + " pollingSimplifiedMessage:".concat(o3, " pagingGroupCount:").concat(i3)), this._AVChatRoomHandler.setPollingInterval(e3), this._AVChatRoomHandler.setPollingIntervalPlus(t3), this._AVChatRoomHandler.setPollingNoMessageCount(n3), this._AVChatRoomHandler.setPollingSimplifiedMessage(o3), this._commonGroupHandler.setPagingGroupCount(i3);
      } }, { key: "onCheckTimer", value: function(e3) {
        this.isLoggedIn() && (this._commonGroupHandler.onCheckTimer(e3), this._groupTipsHandler.onCheckTimer(e3));
      } }, { key: "guardForAVChatRoom", value: function(t3) {
        var n3, o3 = this;
        return t3.conversationType !== A2.CONV_GROUP || (n3 = Gt2(t3.to) ? Jt2(t3.to) : t3.to, this.hasLocalGroup(n3)) ? T2() : this.getGroupProfile({ groupID: n3 }).then(function(e3) {
          var e3 = e3.data.group.type;
          return M2.l("".concat(o3._n, ".guardForAVChatRoom. groupID:").concat(n3, " type:").concat(e3)), e3 === A2.GRP_AVCHATROOM ? D2(new E2({ code: e3 = L2.MSG_SEND_FAIL_NOT_IN_AV, message: o3.getErrMsg(e3, t3.from, n3), data: { message: t3 } })) : T2();
        });
      } }, { key: "checkJoinedAVChatRoomByID", value: function(e3) {
        return this._AVChatRoomHandler.checkJoinedAVChatRoomByID(e3);
      } }, { key: "onNewMessage", value: function(e3) {
        this._commonGroupHandler.onNewMessage(e3);
      } }, { key: "updateNextMessageSeq", value: function(e3) {
        var n3, o3 = this;
        O2(e3) && (n3 = this.get(10), e3.forEach(function(e4) {
          var t3 = e4.conversationID.replace(A2.CONV_GROUP, "");
          Gt2(t3) && n3.updateUnreadCountAndLastMsg(t3, e4.lastMessage), o3.groupMap.has(t3) && (o3.groupMap.get(t3).nextMessageSeq = e4.lastMessage.sequence + 1);
        }));
      } }, { key: "onNewGroupTips", value: function(e3) {
        this._groupTipsHandler.onNewGroupTips(e3);
      } }, { key: "onMsgRevoked", value: function(e3) {
        this._commonGroupHandler.onMsgRevoked(e3, !(1 < arguments.length && void 0 !== arguments[1]) || arguments[1]);
      } }, { key: "onNewGroupSystemNotice", value: function(e3) {
        this._groupSystemNoticeHandler.onNewGroupSystemNotice(e3);
      } }, { key: "onMsgReadNotice", value: function(e3) {
        var a3 = this;
        e3.dataList.forEach(function(e4) {
          var i3, e4 = e4.elements.groupMessageReadNotice;
          N2(e4) || (i3 = a3.get(11), e4.forEach(function(e5) {
            var t3 = e5.groupID, n3 = e5.topicID, n3 = void 0 === n3 ? void 0 : n3, e5 = e5.lastMessageSeq, t3 = (M2.l("".concat(a3._n, ".onMsgReadNotice groupID:").concat(t3, " lastMessageSeq:").concat(e5)), "".concat(A2.CONV_GROUP).concat(t3)), o3 = true;
            S2(n3) || (t3 = "".concat(A2.CONV_GROUP).concat(n3), o3 = false), i3.updateIsReadAfterReadReport({ conversationID: t3, lastMessageSeq: e5 }), i3.updateUnreadCount(t3, o3), i3.clearGroupAtInfoList(t3, o3);
          }));
        });
      } }, { key: "onReadReceiptList", value: function(e3) {
        var o3 = this;
        M2.l("".concat(this._n, ".onReadReceiptList options:"), e3), e3.dataList.forEach(function(e4) {
          var t3 = e4.groupProfile, e4 = e4.elements, t3 = t3.groupID, n3 = o3.get(11), e4 = e4.readReceiptList;
          n3.updateReadReceiptInfo({ groupID: t3, readReceiptList: e4 });
        });
      } }, { key: "onMsgModified", value: function(e3) {
        M2.l("".concat(this._n, ".onMsgModified options:"), e3);
        var t3 = this.get(11);
        e3.dataList.forEach(function(e4) {
          t3.onMessageModified(y2(y2({}, e4), {}, { conversationType: A2.CONV_GROUP, to: e4.topicID || e4.groupID }));
        });
      } }, { key: "deleteGroupSystemNotice", value: function(e3) {
        this._groupSystemNoticeHandler.deleteGroupSystemNotice(e3);
      } }, { key: "initGroupMap", value: function(e3) {
        this.groupMap.set(e3.groupID, new oi2(e3));
      } }, { key: "clearGroupMap", value: function() {
        this.groupMap.clear();
      } }, { key: "deleteGroup", value: function(e3) {
        this.groupMap.delete(e3);
      } }, { key: "updateGroupMap", value: function(e3) {
        var t3, n3 = this, o3 = this.get(11);
        e3.forEach(function(e4) {
          t3 = e4.groupID, n3.groupMap.has(t3) ? n3.groupMap.get(t3).updateGroup(e4) : (n3.groupMap.set(t3, new oi2(e4)), o3.deleteGroupRoamingInfo(t3));
        });
        var i3, a3 = this.getMyUserID(), s3 = Z2(this.groupMap);
        try {
          for (s3.s(); !(i3 = s3.n()).done; ) {
            var r3 = Y2(i3.value, 2)[1];
            r3.selfInfo.userID = a3, "Owner" === r3.selfInfo.role && (r3.ownerID = a3);
          }
        } catch (e4) {
          s3.e(e4);
        } finally {
          s3.f();
        }
      } }, { key: "getGroupMap", value: function() {
        return this.groupMap;
      } }, { key: "getLocalGroupList", value: function() {
        return p2(this.groupMap.values()).filter(function(e3) {
          return e3.type !== A2.GRP_ROOM && e3.type !== A2.GRP_LIVE;
        });
      } }, { key: "getLocalGroupProfile", value: function(e3) {
        return this.groupMap.get(e3);
      } }, { key: "sortLocalGroupList", value: function() {
        var e3 = p2(this.groupMap).filter(function(e4) {
          e4 = Y2(e4, 2);
          return e4[0], !S2(e4[1].lastMessage);
        });
        e3.sort(function(e4, t3) {
          return t3[1].lastMessage.lastTime - e4[1].lastMessage.lastTime;
        }), this.groupMap = new Map(p2(e3));
      } }, { key: "updateGroupLastMessage", value: function(e3) {
        this._commonGroupHandler.updateLastMsg(e3);
      } }, { key: "emitGroupListUpdate", value: function() {
        var e3 = !(0 < arguments.length && void 0 !== arguments[0]) || arguments[0], t3 = !(1 < arguments.length && void 0 !== arguments[1]) || arguments[1], n3 = this.getLocalGroupList();
        e3 && this.emitOEvt(h2.GROUP_LIST_UPDATED), t3 && (e3 = JSON.parse(JSON.stringify(n3)), this.get(11).updateConvGroupProfile(e3));
      } }, { key: "getMyNameCardByGroupID", value: function(e3) {
        e3 = this.getLocalGroupProfile(e3);
        return e3 ? e3.selfInfo.nameCard : "";
      } }, { key: "isPagingGetCompleted", value: function() {
        return this._commonGroupHandler.isPagingGetCompleted();
      } }, { key: "getMsgRemindType", value: function(e3) {
        var n3 = this;
        return !O2(e3) || 0 === e3.length || 0 === (e3 = e3.filter(function(e4) {
          return !Ot2(n3.getLocalGroupProfile(e4).type);
        })).length ? Promise.resolve() : (M2.l("".concat(this._n, ".getMsgRemindType groupIDList:").concat(e3)), this.getGroupProfileAdvance({ groupIDList: e3, responseFilter: { memberInfoFilter: ["MsgFlag"] } }).then(function(e4) {
          var e4 = e4.data.successGroupList, t3 = n3.get(11);
          e4.forEach(function(e5) {
            t3.onGroupMsgRemindTypeUpdated({ groupID: e5.groupID, messageRemindType: O2(e5.members) ? e5.members[0].messageRemindType : "" });
          });
        }));
      } }, { key: "getGroupList", value: function() {
        return this._commonGroupHandler.getGroupList();
      } }, { key: "syncCommunityWithTopic", value: function() {
        return this._commonGroupHandler.syncGroupList(true);
      } }, { key: "getGroupProfile", value: function(t3) {
        var n3 = this, o3 = "".concat(this._n, ".").concat("getGroupProfile"), i3 = new G2("getGroupProfile"), a3 = t3.groupID, e3 = t3.groupCustomFieldFilter, e3 = (M2.l("".concat(o3, " groupID:").concat(a3)), { groupIDList: [a3], responseFilter: { groupBaseInfoFilter: p2(ce2), groupCustomFieldFilter: e3, memberInfoFilter: [].concat(p2(ue2), ["NameCard"]) } });
        return this.getGroupProfileAdvance(e3).then(function(e4) {
          var e4 = e4.data, t4 = e4.successGroupList, e4 = e4.failureGroupList;
          return M2.l("".concat(o3, " ok")), 0 < e4.length ? D2(e4[0]) : ((e4 = Ot2(t4[0].type) && !n3.hasLocalGroup(a3) ? new oi2(t4[0]) : (n3.updateGroupMap(t4), n3.getLocalGroupProfile(a3))).isSupportTopic || n3.get(11).updateConvGroupProfile([e4]), i3.setMessage("groupID:".concat(a3, " type:").concat(e4.type, " muteAllMembers:").concat(e4.muteAllMembers, " ownerID:").concat(e4.ownerID)).end(), C2({ group: e4 }));
        }).catch(function(e4) {
          return i3.setError(e4).setMessage("groupID:".concat(t3.groupID)).end(), M2.e("".concat(o3, " failed. error:"), e4), D2(e4);
        });
      } }, { key: "getGroupProfileAdvance", value: function(e3) {
        var t3, n3 = "".concat(this._n, ".getGroupProfileAdvance"), o3 = e3.groupIDList, i3 = (O2(o3) && 50 < o3.length && (this.warn("GetGroupProfileLimit"), o3.length = 50), []), a3 = [], o3 = (o3.forEach(function(e4) {
          (Nt2({ groupID: e4 }) ? a3 : i3).push(e4);
        }), []);
        return 0 < i3.length && (t3 = this._getGroupProfileAdvance(y2(y2({}, e3), {}, { groupIDList: i3 })), o3.push(t3)), 0 < a3.length && (t3 = this._getGroupProfileAdvance(y2(y2({}, e3), {}, { groupIDList: a3, relayFlag: 0 < i3.length })), o3.push(t3)), Promise.all(o3).then(function(e4) {
          var t4 = [], n4 = [];
          return e4.forEach(function(e5) {
            t4.push.apply(t4, p2(e5.successGroupList)), n4.push.apply(n4, p2(e5.failureGroupList));
          }), C2({ successGroupList: t4, failureGroupList: n4 });
        }).catch(function(e4) {
          return M2.e("".concat(n3, " failed. error:"), e4), D2(e4);
        });
      } }, { key: "_getGroupProfileAdvance", value: function(t3) {
        var n3 = this, e3 = t3.relayFlag, o3 = void 0 !== e3 && e3, i3 = K2(t3, Mi2);
        return this.req({ P: k2.GET_GRP_PROFILE, data: i3 }).then(function(e4) {
          M2.l("".concat(n3._n, "._getGroupProfileAdvance ok. options:"), i3);
          e4 = e4.data.groups;
          return { successGroupList: e4.filter(function(e5) {
            return N2(e5.errorCode) || 0 === e5.errorCode;
          }), failureGroupList: e4.filter(function(e5) {
            return e5.errorCode && 0 !== e5.errorCode;
          }).map(function(e5) {
            return new E2({ code: e5.errorCode, message: e5.errorInfo, data: { groupID: e5.groupID } });
          }) };
        }).catch(function(e4) {
          return o3 && Nt2({ groupID: t3.groupIDList[0] }) ? { successGroupList: [], failureGroupList: [] } : D2(e4);
        });
      } }, { key: "createGroup", value: function(s3) {
        var r3 = this, e3 = [A2.GRP_PUBLIC, A2.GRP_WORK, A2.GRP_MEETING, A2.GRP_AVCHATROOM, A2.GRP_COMMUNITY], c3 = "".concat(this._n, ".").concat("createGroup"), t3 = s3.type, n3 = s3.groupID;
        if (s3.name && false === this._filterProfanity("name", s3))
          return D2({ code: L2.PROFANITY_FOUND });
        if (s3.introduction && false === this._filterProfanity("introduction", s3))
          return D2({ code: L2.PROFANITY_FOUND });
        if (s3.notification && false === this._filterProfanity("notification", s3))
          return D2({ code: L2.PROFANITY_FOUND });
        if (!e3.includes(t3))
          return D2({ code: L2.ILLEGAL_GRP_TYPE });
        if (!Nt2({ type: t3 })) {
          if (!S2(n3) && Nt2({ groupID: n3 }))
            return D2({ code: L2.ILLEGAL_GRP_ID });
          s3.isSupportTopic = void 0;
        }
        if (Ot2(t3) && !N2(s3.memberList) && 0 < s3.memberList.length && (s3.memberList = void 0), this._canIUseJoinOption(t3) || N2(s3.joinOption) || (s3.joinOption = void 0), Nt2({ type: t3 })) {
          if (!S2(n3) && !Nt2({ groupID: n3 }))
            return D2({ code: L2.ILLEGAL_GRP_ID });
          s3.isSupportTopic = true === s3.isSupportTopic ? 1 : 0;
        }
        var u3 = new G2("createGroup"), l3 = (M2.l("".concat(c3, " options:"), s3), null), d3 = [];
        return this.req({ P: k2.CREATE_GRP, data: y2(y2({}, s3), {}, { ownerID: this.getMyUserID(), webPushFlag: 1 }) }).then(function(e4) {
          var t4, n4, o3, e4 = e4.data, i3 = e4.groupID, e4 = e4.overLimitUserIDList, a3 = void 0 === e4 ? [] : e4, e4 = (l3 = i3, d3 = a3, "groupType:".concat(s3.type, " groupID:").concat(i3, " overLimitUserIDList:").concat(a3));
          return u3.setMessage(e4).end(), M2.l("".concat(c3, " ok. ").concat(e4)), s3.type === A2.GRP_AVCHATROOM || s3.type === A2.GRP_COMMUNITY && 1 === s3.isSupportTopic || (S2(s3.memberList) || S2(a3) || (s3.memberList = s3.memberList.filter(function(e5) {
            return -1 === a3.indexOf(e5.userID);
          })), r3.updateGroupMap([y2(y2({}, s3), {}, { groupID: i3 })]), e4 = r3.get(2), o3 = "", t4 = 0, s3.type === A2.GRP_COMMUNITY ? (o3 = r3.isIntl() ? "Create Community" : "创建社群", t4 = 1) : o3 = r3.isIntl() ? "Create Group" : "创建群组", n4 = r3.get(4).getMyNick(), o3 = e4.createCustomMessage({ to: i3, conversationType: A2.CONV_GROUP, payload: { data: JSON.stringify({ businessID: "group_create", content: o3, cmd: t4, opUser: n4 || r3.getMyUserID(), version: 4 }) } }), e4.sendMessageInstance(o3), r3.emitGroupListUpdate()), r3.getGroupProfile({ groupID: i3 });
        }).then(function(e4) {
          var e4 = e4.data.group, t4 = e4.selfInfo, n4 = t4.nameCard, t4 = t4.joinTime;
          return e4.updateSelfInfo({ nameCard: n4, joinTime: t4, messageRemindType: A2.MSG_REMIND_ACPT_AND_NOTE, role: A2.GRP_MBR_ROLE_OWNER }), C2({ group: e4, overLimitUserIDList: d3 });
        }).catch(function(e4) {
          var t4;
          return u3.setMessage("groupType:".concat(s3.type)).setError(e4).end(), 10010 === e4.code || 10007 === e4.code ? (r3._silentlyGetGroupProfile(e4.code, l3), r3.updateGroupMap([y2(y2({}, s3), {}, { groupID: l3 })]), (t4 = r3.getLocalGroupProfile(l3)).selfInfo.role = A2.GRP_MBR_ROLE_OWNER, C2({ group: t4, overLimitUserIDList: d3 })) : (M2.e("".concat(c3, " failed. error:"), e4), D2(e4));
        });
      } }, { key: "dismissGroup", value: function(e3) {
        var t3 = this, n3 = "".concat(this._n, ".").concat("dismissGroup"), o3 = "groupID:".concat(e3), i3 = new G2("dismissGroup");
        return i3.setMessage(o3), M2.l("".concat(n3, " ").concat(o3)), this.req({ P: k2.DISMISS_GRP, data: { groupID: e3 } }).then(function() {
          return i3.end(), M2.l("".concat(n3, " ok")), t3.deleteLocalGroupAndConversation(e3), t3.checkJoinedAVChatRoomByID(e3) && t3._AVChatRoomHandler.reset(e3), t3._groupAttributesHandler.deleteLocalGroupAttributes(e3), C2({ groupID: e3 });
        }).catch(function(e4) {
          return i3.setError(e4).end(), M2.e("".concat(n3, " failed. error:"), e4), D2(e4);
        });
      } }, { key: "updateGroupProfile", value: function(e3) {
        var t3, n3, o3 = this, i3 = "".concat(this._n, ".").concat("updateGroupProfile");
        return this.hasLocalGroup(e3.groupID) && (t3 = this.getLocalGroupProfile(e3.groupID).type, this._canIUseJoinOption(t3) || N2(e3.joinOption) || (M2.w("".concat(i3, " joinOption is unavailable for Work/Meeting/AVChatRoom")), e3.joinOption = void 0)), N2(e3.muteAllMembers) || (e3.muteAllMembers ? e3.muteAllMembers = "On" : e3.muteAllMembers = "Off"), e3.name && false === this._filterProfanity("name", e3) || e3.introduction && false === this._filterProfanity("introduction", e3) || e3.notification && false === this._filterProfanity("notification", e3) ? D2({ code: L2.PROFANITY_FOUND }) : ((n3 = new G2("updateGroupProfile")).setMessage(JSON.stringify(e3)), M2.l("".concat(i3, " groupID:").concat(e3.groupID)), this.req({ P: k2.UPDATE_GRP_PROFILE, data: e3 }).then(function() {
          return n3.end(), M2.l("".concat(i3, " ok")), o3.hasLocalGroup(e3.groupID) && o3.groupMap.get(e3.groupID).updateGroup(e3), C2({ group: o3.groupMap.get(e3.groupID) });
        }).catch(function(e4) {
          return n3.setError(e4).end(), M2.l("".concat(i3, " failed. error:"), e4), D2(e4);
        }));
      } }, { key: "_filterProfanity", value: function(e3, t3) {
        var n3, o3 = this.get(29);
        return !o3 || (n3 = (o3 = o3.filterText(t3[e3], re2)).isAllowedToSend, o3 = o3.modifiedText, true === n3 && (t3[e3] = o3, true));
      } }, { key: "joinGroup", value: function(t3) {
        var n3, o3 = this, i3 = t3.groupID, a3 = "".concat(this._n, ".joinGroup");
        return this.deleteUnjoinedAVChatRoom(i3), this.hasLocalGroup(i3) ? this.isLoggedIn() ? (n3 = new G2("applyJoinGroup"), this.getGroupProfile({ groupID: i3 }).then(function() {
          return n3.setMessage("groupID:".concat(i3, " joinedStatus:").concat(A2.JOIN_STATUS_ALREADY_IN_GROUP)).end(), T2({ status: A2.JOIN_STATUS_ALREADY_IN_GROUP });
        }).catch(function(e3) {
          return n3.setMessage("groupID:".concat(i3, " unjoined")).end(), M2.w("".concat(a3, " ").concat(i3, " was unjoined, now join!")), o3.groupMap.delete(i3), o3.applyJoinGroup(t3);
        })) : T2({ status: A2.JOIN_STATUS_ALREADY_IN_GROUP }) : (M2.l("".concat(a3, " groupID:").concat(i3)), this.isLoggedIn() ? this.applyJoinGroup(t3) : this._AVChatRoomHandler.joinWithoutAuth(t3));
      } }, { key: "applyJoinGroup", value: function(e3) {
        var c3, u3, l3 = this, d3 = "".concat(this._n, ".").concat("applyJoinGroup"), p3 = e3.groupID;
        return S2(e3.applyMessage) || false !== this._filterProfanity("applyMessage", e3) ? (c3 = new G2("applyJoinGroup"), e3 = y2({}, e3), (u3 = this.canIUse(_2.AV_HISTORY_MSG)) && (e3.historyMessageFlag = 1), this.get(11).deleteTopicRoamingInfo(p3), this.req({ P: k2.APPLY_JOIN_GRP, data: e3 }).then(function(e4) {
          var e4 = e4.data, t3 = e4.joinedStatus, n3 = e4.longPollingKey, o3 = e4.startSeq, i3 = e4.avChatRoomFlag, a3 = e4.avChatRoomKey, s3 = e4.messageList, e4 = "groupID:".concat(p3, " joinedStatus:").concat(t3, " longPollingKey:").concat(n3, " startSeq:").concat(o3) + " avChatRoomFlag:".concat(i3, " canGetAVChatRoomHistoryMsg:").concat(u3, ",") + " historyMsgCount:".concat(S2(s3) ? 0 : s3.length);
          switch (c3.setMessage(e4).end(), M2.l("".concat(d3, " ok. ").concat(e4)), t3) {
            case ot2:
              return C2({ status: ot2 });
            case nt2:
              return l3.getGroupProfile({ groupID: p3 }).then(function(e5) {
                e5 = e5.data.group;
                return l3._handleJoinResult({ group: e5, avChatRoomFlag: i3, longPollingKey: n3, startSeq: o3, avChatRoomKey: a3, messageList: s3 });
              }).catch(function(e5) {
                var t4;
                return 10010 === e5.code || 10007 === e5.code ? (l3._silentlyGetGroupProfile(e5.code, p3), t4 = new oi2({ groupID: p3 }), l3.updateGroupMap([t4]), l3._handleJoinResult({ group: t4, avChatRoomFlag: i3, longPollingKey: n3, startSeq: o3, avChatRoomKey: a3, messageList: s3 })) : (M2.e("".concat(d3, " failed. error:"), e5), D2(e5));
              });
            default:
              var r3 = new E2({ code: L2.JOIN_GRP_FAIL });
              return M2.e("".concat(d3, " failed. error:"), r3), D2(r3);
          }
        }).catch(function(e4) {
          return c3.setMessage("groupID:".concat(p3)).setError(e4).end(), M2.e("".concat(d3, " failed. error:"), e4), D2(e4);
        })) : D2({ code: L2.PROFANITY_FOUND });
      } }, { key: "_handleJoinResult", value: function(e3) {
        var t3 = this, n3 = e3.group, o3 = e3.avChatRoomFlag, i3 = e3.longPollingKey, a3 = e3.startSeq, s3 = e3.avChatRoomKey, r3 = e3.messageList, c3 = n3.groupID;
        return 1 === o3 ? (this.get(11).setCompleted("".concat(A2.CONV_GROUP).concat(c3)), this._groupAttributesHandler.initGroupAttributesCache({ groupID: c3, avChatRoomKey: s3 }), this._groupCountersHandler.initGroupCountersCache({ groupID: c3, avChatRoomKey: s3 }), (e3 = N2(i3) ? this._AVChatRoomHandler.handleJoinResult({ group: n3 }) : this._AVChatRoomHandler.startRunLoop({ group: n3, longPollingKey: i3, startSeq: a3 })).then(function() {
          t3._onAVChatRoomHistoryMessage(r3, c3);
        }), e3) : (this.emitGroupListUpdate(true, false), C2({ status: nt2, group: n3 }));
      } }, { key: "quitGroup", value: function(e3) {
        var t3, n3 = this, o3 = "".concat(this._n, ".").concat("quitGroup"), i3 = "groupID:".concat(e3), a3 = (M2.l("".concat(o3, " ").concat(i3)), this.checkJoinedAVChatRoomByID(e3));
        return a3 || this.hasLocalGroup(e3) ? a3 && !this.isLoggedIn() ? (M2.l("".concat(o3, " anonymously ok. ").concat(i3)), this.deleteLocalGroupAndConversation(e3), this._AVChatRoomHandler.reset(e3), T2({ groupID: e3 })) : ((t3 = new G2("quitGroup")).setMessage(i3), this.req({ P: k2.QUIT_GRP, data: { groupID: e3 } }).then(function() {
          return t3.end(), M2.l("".concat(o3, " ok")), n3.deleteLocalGroupAndConversation(e3), a3 && n3._AVChatRoomHandler.reset(e3), n3._groupAttributesHandler.deleteLocalGroupAttributes(e3), C2({ groupID: e3 });
        }).catch(function(e4) {
          return t3.setError(e4).end(), M2.e("".concat(o3, " failed. error:"), e4), D2(e4);
        })) : D2({ code: L2.MEMBER_NOT_IN_GRP });
      } }, { key: "searchGroupByID", value: function(e3) {
        var t3 = "".concat(this._n, ".").concat("searchGroupByID"), n3 = { groupIDList: [e3] }, o3 = new G2("searchGroupByID");
        return o3.setMessage("groupID:".concat(e3)), M2.l("".concat(t3, " groupID:").concat(e3)), this.req({ P: k2.SEARCH_GRP, data: n3 }).then(function(e4) {
          e4 = e4.data.groupProfile;
          if (0 !== e4[0].errorCode)
            throw new E2({ code: e4[0].errorCode, message: e4[0].errorInfo });
          return o3.end(), M2.l("".concat(t3, " ok")), C2({ group: new oi2(e4[0]) });
        }).catch(function(e4) {
          return o3.setError(e4).end(), M2.w("".concat(t3, " failed. error:"), e4), D2(e4);
        });
      } }, { key: "changeGroupOwner", value: function(i3) {
        var a3, s3 = this, r3 = "".concat(this._n, ".").concat("changeGroupOwner");
        return this.hasLocalGroup(i3.groupID) && this.getLocalGroupProfile(i3.groupID).type === A2.GRP_AVCHATROOM ? D2({ code: L2.CANNOT_CHANGE_OWNER_IN_AV }) : i3.newOwnerID === this.getMyUserID() ? D2({ code: L2.CANNOT_CHANGE_OWNER_TO_SELF }) : ((a3 = new G2("changeGroupOwner")).setMessage("groupID:".concat(i3.groupID, " newOwnerID:").concat(i3.newOwnerID)), M2.l("".concat(r3, " groupID:").concat(i3.groupID)), this.req({ P: k2.CHANGE_GRP_OWNER, data: i3 }).then(function() {
          a3.end(), M2.l("".concat(r3, " ok"));
          var e3, t3 = i3.groupID, n3 = i3.newOwnerID, o3 = (s3.groupMap.get(t3).ownerID = n3, s3._groupMemberHandler.getLocalGroupMemberList(t3));
          return o3 instanceof Map && (e3 = o3.get(s3.getMyUserID()), N2(e3) || (e3.updateRole("Member"), s3.groupMap.get(t3).selfInfo.role = "Member"), e3 = o3.get(n3), N2(e3) || e3.updateRole("Owner")), s3.emitGroupListUpdate(true, false), C2({ group: s3.groupMap.get(t3) });
        }).catch(function(e3) {
          return a3.setError(e3).end(), M2.e("".concat(r3, " failed. error:"), e3), D2(e3);
        }));
      } }, { key: "getGroupApplicationList", value: function() {
        return this._groupSystemNoticeHandler.getGroupApplicationList();
      } }, { key: "handleGroupApplication", value: function(e3) {
        var t3, n3, o3, i3, a3, s3 = this, r3 = "".concat(this._n, ".").concat("handleGroupApplication"), c3 = e3.handleAction, u3 = e3.handleMessage, l3 = e3.message, d3 = e3.application, p3 = (l3 ? (t3 = l3.payload.operatorID, n3 = l3.payload.groupProfile.groupID, o3 = l3.payload.authentication, i3 = l3.payload.messageKey) : d3 && (t3 = d3.applicant, n3 = d3.groupID, o3 = d3.authentication, i3 = d3.messageKey), k2.HANDLE_GRP_APPLICATION), _3 = (d3 && 2 === d3.applicationType && (p3 = k2.HANDLE_INVITE_JOIN_GRP, a3 = d3.userID), new G2("handleGroupApplication"));
        return _3.setMessage("groupID:".concat(n3)), M2.l("".concat(r3, " groupID:").concat(n3)), this.req({ P: p3, data: { handleAction: c3, handleMessage: u3, applicant: t3, invitee: a3, groupID: n3, authentication: o3, messageKey: i3 } }).then(function() {
          return _3.end(), M2.l("".concat(r3, " ok")), l3 && s3._groupSystemNoticeHandler.deleteGroupSystemNotice({ messageList: [e3.message] }), C2({ group: s3.getLocalGroupProfile(n3) });
        }).catch(function(e4) {
          return _3.setError(e4).end(), M2.e("".concat(r3, " failed. error"), e4), D2(e4);
        });
      } }, { key: "handleGroupInvitation", value: function(e3) {
        var t3 = this, n3 = "".concat(this._n, ".").concat("handleGroupInvitation"), o3 = e3.message.payload, i3 = o3.groupProfile.groupID, a3 = o3.authentication, s3 = o3.messageKey, o3 = o3.operatorID, r3 = e3.handleAction, c3 = new G2("handleGroupInvitation");
        return c3.setMessage("groupID:".concat(i3, " inviter:").concat(o3, " handleAction:").concat(r3)), M2.l("".concat(n3, " groupID:").concat(i3, " inviter:").concat(o3, " handleAction:").concat(r3)), this.req({ P: k2.HANDLE_GRP_INVITATION, data: y2(y2({}, e3), {}, { inviter: o3, groupID: i3, authentication: a3, messageKey: s3 }) }).then(function() {
          return c3.end(), M2.l("".concat(n3, " ok")), t3._groupSystemNoticeHandler.deleteGroupSystemNotice({ messageList: [e3.message] }), C2({ group: t3.getLocalGroupProfile(i3) });
        }).catch(function(e4) {
          return c3.setError(e4).end(), M2.e("".concat(n3, " failed. error"), e4), D2(e4);
        });
      } }, { key: "getGroupOnlineMemberCount", value: function(t3) {
        var n3 = this, o3 = "".concat(this._n, ".getGroupOnlineMemberCount"), e3 = this._AVChatRoomHandler.checkJoinedAVChatRoomByID(t3), i3 = this.hasLocalGroup(t3);
        if (M2.l("".concat(o3, " groupID:").concat(t3, " isAVChatRoom:").concat(e3, " has:").concat(i3)), e3)
          return this._AVChatRoomHandler.getGroupOnlineMemberCount(t3);
        if (!i3)
          return T2({ memberCount: 0 });
        e3 = Date.now();
        if (this._onlineMemberCountMap.has(t3)) {
          i3 = this._onlineMemberCountMap.get(t3);
          if (e3 - i3.lastReqTime <= 6e4)
            return T2({ memberCount: i3.memberCount });
          i3.lastReqTime = e3;
        }
        return this.requestOnlineCount(t3).then(function(e4) {
          e4 = e4.data.memberCount, e4 = void 0 === e4 ? 0 : e4;
          return n3._onlineMemberCountMap.set(t3, { lastReqTime: Date.now(), memberCount: e4 }), M2.l("".concat(o3, " ok. groupID:").concat(t3, " memberCount:").concat(e4)), T2({ memberCount: e4 });
        }).catch(function(e4) {
          return M2.w("".concat(o3, " failed. error:"), e4), Promise.reject(e4);
        });
      } }, { key: "requestOnlineCount", value: function(e3) {
        return this.req({ P: k2.GET_ONLINE_MBR_NUM, data: { groupID: e3 } });
      } }, { key: "hasLocalGroup", value: function(e3) {
        return this.groupMap.has(e3);
      } }, { key: "deleteLocalGroupAndConversation", value: function(e3) {
        var t3 = this.checkJoinedAVChatRoomByID(e3), n3 = (M2.l("".concat(this._n, ".deleteLocalGroupAndConversation groupID:").concat(e3, " isJoinedAVChatRoom:").concat(t3)), this.get(11)), o3 = "".concat(A2.CONV_GROUP).concat(e3);
        t3 && (this.stopMessageLongPolling({ groupID: e3 }), n3.deleteLocalConv(o3)), Nt2({ groupID: e3 }) && (t3 = this.getLocalGroupProfile(e3)) && true === t3.isSupportTopic && this.get(10).deleteTopicListInCommunity(e3), n3.clearUnreadCount(o3), n3.setCompleted(o3), this._deleteLocalGroup(e3), this._onlineMemberCountMap.delete(e3), this.emitGroupListUpdate(true, false);
      } }, { key: "_deleteLocalGroup", value: function(e3) {
        this.groupMap.delete(e3), this._groupMemberHandler.deleteGroupMemberList(e3);
      } }, { key: "sendMessage", value: function(e3, t3) {
        return O2(e3._receiverList) && 0 < e3._receiverList.length && !this.canIUse(_2.MSG_TO_SPECIFIED_GRP_MBR) ? this.noUse("Targeted Group Message") : (e3 = this.createGroupMessagePack(e3, t3), this.req(e3));
      } }, { key: "createGroupMessagePack", value: function(e3, t3) {
        var n3 = null, o3 = (t3 && t3.offlinePushInfo && (n3 = t3.offlinePushInfo), ""), i3 = (m2(e3.cloudCustomData) && 0 < e3.cloudCustomData.length && (o3 = e3.cloudCustomData), []), a3 = (f2(t3) && f2(t3.messageControlInfo) && (a3 = (r3 = t3.messageControlInfo).excludedFromUnreadCount, s3 = r3.excludedFromLastMessage, r3 = r3.excludedFromContentModeration, true === a3 && i3.push("NoUnread"), true === s3 && i3.push("NoLastMsg"), true === r3) && i3.push("NoMsgCheck"), void 0), s3 = (O2(e3._receiverList) && 0 < e3._receiverList.length && (a3 = e3._receiverList, 50 < e3._receiverList.length) && (a3 = e3._receiverList.slice(0, 50), this.warn("ReceiverListLimit")), this.isOnlineMessage(e3, t3) ? 1 : 0), r3 = JSON.parse(JSON.stringify(e3.getElements())), t3 = this.get(17).getFileDNList(), c3 = e3.getGroupAtInfoList(), r3 = { fromAccount: this.getMyUserID(), groupID: e3.to, msgBody: so2(e3.type, r3, t3), cloudCustomData: o3, random: e3.random, priority: e3.priority, clientSequence: e3.clientSequence, groupAtInfo: e3.type !== A2.MSG_TEXT || S2(c3) ? void 0 : c3, onlineOnlyFlag: s3, clientTime: e3.clientTime, offlinePushInfo: wo2(n3), messageControlInfo: 0 == s3 ? i3 : void 0, needReadReceipt: true !== e3.needReadReceipt || this.isMessageFromOrToAVChatroom(e3.to) ? 0 : 1, receiverList: a3, isSupportExtension: true === e3.isSupportExtension ? 1 : 0, isRelayMessage: true === e3._relayFlag ? 1 : 0, cmConfigID: e3._cmConfigID };
        return Gt2(e3.to) && (r3.groupID = Jt2(e3.to), r3.topicID = e3.to), { P: k2.SEND_GRP_MSG, data: r3 };
      } }, { key: "revokeMessage", value: function(e3) {
        var t3 = { groupID: e3.to, msgSeqList: [{ msgSeq: e3.sequence }] };
        return Gt2(e3.to) && (t3.groupID = Jt2(e3.to), t3.topicID = e3.to), this.req({ P: k2.REVOKE_GRP_MSG, data: t3 });
      } }, { key: "deleteMessage", value: function(e3) {
        var t3 = e3.to, e3 = e3.keyList, e3 = (M2.l("".concat(this._n, ".deleteMessage groupID:").concat(t3, " count:").concat(e3.length)), { groupID: t3, deleter: this.getMyUserID(), keyList: e3 });
        return Gt2(t3) && (e3.groupID = Jt2(t3), e3.topicID = t3), this.req({ P: k2.DEL_GRP_MSG, data: e3 });
      } }, { key: "modifyRemoteMessage", value: function(e3) {
        var t3 = e3.to, n3 = e3.sequence, o3 = e3.payload, i3 = e3.type, a3 = e3.version, a3 = void 0 === a3 ? 0 : a3, s3 = e3.cloudCustomData, e3 = e3._elements, r3 = t3, c3 = void 0, t3 = (Gt2(t3) && (r3 = Jt2(t3), c3 = t3), void 0);
        return Xt2(i3) && (1 < e3.length && e3.splice(0, 1, { type: i3, content: o3 }), t3 = e3), this.req({ P: k2.MODIFY_GRP_MSG, data: { groupID: r3, topicID: c3, sequence: n3, version: a3, elements: t3, cloudCustomData: s3 } });
      } }, { key: "getRoamingMessage", value: function(e3) {
        var r3 = this, c3 = "".concat(this._n, ".").concat("getRoamingMessage"), u3 = e3.conversationID, l3 = e3.groupID, e3 = e3.sequence, d3 = new G2("getRoamingMessage"), p3 = 0, _3 = void 0;
        return Gt2(l3) && (l3 = Jt2(_3 = l3)), this._computeLastSequence({ groupID: l3, topicID: _3, sequence: e3 }).then(function(e4) {
          return p3 = e4, M2.l("".concat(c3, " groupID:").concat(l3, " startSequence:").concat(p3)), r3.req({ P: k2.GET_GRP_ROAMING_MSG, data: { groupID: l3, count: 21, sequence: p3, topicID: _3 } });
        }).then(function(e4) {
          var t3 = e4.data, n3 = t3.messageList, o3 = t3.complete, t3 = t3.invisibleSequenceList, t3 = void 0 === t3 ? [] : t3, e4 = e4.data.nextSequence, e4 = void 0 === e4 ? 0 : e4, i3 = (N2(n3) ? M2.l("".concat(c3, " ok. complete:").concat(o3, " nextSequence:").concat(e4, " but messageList is undefined!")) : M2.l("".concat(c3, " ok. complete:").concat(o3, " nextSequence:").concat(e4, " count:").concat(n3.length)), d3.setMessage("groupID:".concat(l3, " topicID:").concat(_3, " startSequence:").concat(p3, " complete:").concat(o3, " nextSequence:").concat(e4)).end(), r3.get(11)), a3 = [], s3 = [], n3 = (S2(n3) || (a3 = i3.onRoamingMessage(n3, u3, true, s3), i3.updateIsRead(u3), i3.patchConvLastMessage(u3)), 2 === o3 || e4 < 1);
          return n3 && (i3.setCompleted(u3), e4 = ""), M2.l("".concat(c3, " isPullingCompleted:").concat(n3, " nextReqID:").concat(e4, " storedMsgCount:").concat(a3.length) + " invisibleSeqCount:".concat(t3.length)), { nextReqID: e4 + "", storedMessageList: a3, assembledMessageList: s3, isPullingCompleted: n3 };
        }).catch(function(e4) {
          return d3.setError(e4).setMessage("groupID:".concat(l3, " topicID:").concat(_3, " startSequence:").concat(p3)).end(), M2.w("".concat(c3, " failed. error:"), e4), D2(e4);
        });
      } }, { key: "_getGroupIDOfMessage", value: function(e3) {
        return e3.conversationID.replace(A2.CONV_GROUP, "");
      } }, { key: "getReadReceiptList", value: function(n3) {
        var t3, o3 = "".concat(this._n, ".").concat("getReadReceiptList"), e3 = this._getGroupIDOfMessage(n3[0]), i3 = this.getMyUserID(), a3 = n3.filter(function(e4) {
          return e4.from === i3 && true === e4.needReadReceipt;
        }).map(function(e4) {
          return { sequence: e4.sequence };
        });
        return M2.l("".concat(o3, " groupID:").concat(e3, " sequenceList:").concat(JSON.stringify(a3))), 0 === a3.length ? T2({ messageList: n3 }) : ((t3 = new G2("getReadReceiptList")).setMessage("groupID:".concat(e3)), this.req({ P: k2.GET_READ_RECEIPT, data: { groupID: e3, sequenceList: a3 } }).then(function(e4) {
          t3.end(), M2.l("".concat(o3, " ok"));
          e4 = e4.data.readReceiptList;
          return O2(e4) && e4.forEach(function(t4) {
            n3.forEach(function(e5) {
              0 === t4.code && t4.sequence === e5.sequence && (e5.readReceiptInfo.readCount = t4.readCount, e5.readReceiptInfo.unreadCount = t4.unreadCount);
            });
          }), C2({ messageList: n3 });
        }).catch(function(e4) {
          return t3.setError(e4).end(), M2.w("".concat(o3, " failed. error:"), e4), D2(e4);
        }));
      } }, { key: "sendReadReceipt", value: function(e3) {
        var t3 = "".concat(this._n, ".").concat("sendReadReceipt"), n3 = this._getGroupIDOfMessage(e3[0]), o3 = new G2("sendReadReceipt"), i3 = (o3.setMessage("groupID:".concat(n3)), this.getMyUserID()), e3 = e3.filter(function(e4) {
          return e4.from !== i3 && true === e4.needReadReceipt;
        }).map(function(e4) {
          return { sequence: e4.sequence };
        });
        return 0 === e3.length ? D2({ code: L2.READ_RECEIPT_MSG_LIST_EMPTY }) : (M2.l("".concat(t3, ". sequenceList:").concat(JSON.stringify(e3))), this.req({ P: k2.SEND_READ_RECEIPT, data: { groupID: n3, sequenceList: e3 } }).then(function(e4) {
          return o3.end(), M2.l("".concat(t3, " ok")), C2();
        }).catch(function(e4) {
          return o3.setError(e4).end(), M2.w("".concat(t3, " failed. error:"), e4), D2(e4);
        }));
      } }, { key: "getReadReceiptDetail", value: function(e3) {
        var i3 = this, t3 = e3.message, n3 = e3.filter, o3 = e3.cursor, e3 = e3.count, a3 = this._getGroupIDOfMessage(t3), s3 = t3.ID, t3 = t3.sequence, r3 = "".concat(this._n, ".").concat("getReadReceiptDetail"), c3 = this._receiptDetailCompleteMap.get(s3) || false, u3 = 0 !== n3 && 1 !== n3 ? 0 : n3, n3 = m2(o3) ? o3 : "", o3 = !R2(e3) || e3 <= 0 || 100 <= e3 ? 100 : e3, e3 = "groupID:".concat(a3, " sequence:").concat(t3, " cursor:").concat(n3, " filter:").concat(u3, " completeFlag:").concat(c3), l3 = (M2.l("".concat(r3, " ").concat(e3)), { cursor: "", isCompleted: false, messageID: s3, unreadUserIDList: [], readUserIDList: [] }), d3 = new G2("getReadReceiptDetail");
        return d3.setMessage(e3), this.req({ P: k2.GET_READ_RECEIPT_DETAIL, data: { groupID: a3, sequence: t3, flag: u3, cursor: n3, count: o3 } }).then(function(e4) {
          d3.end();
          var e4 = e4.data, t4 = e4.cursor, n4 = e4.isCompleted, o4 = e4.unreadUserIDList, e4 = e4.readUserIDList;
          return l3.cursor = t4, 1 === n4 && (l3.isCompleted = true, i3._receiptDetailCompleteMap.set(s3, true)), 0 === u3 ? l3.readUserIDList = e4.map(function(e5) {
            return e5.userID;
          }) : 1 === u3 && (l3.unreadUserIDList = o4.map(function(e5) {
            return e5.userID;
          })), M2.l("".concat(r3, " ok")), C2(l3);
        }).catch(function(e4) {
          return d3.setError(e4).end(), M2.w("".concat(r3, " failed. error:"), e4), D2(e4);
        });
      } }, { key: "getRoamingMessagesHopping", value: function(c3) {
        var u3 = this, l3 = "".concat(this._n, ".").concat("getRoamingMessagesHopping"), t3 = c3.groupID, n3 = c3.count, d3 = c3.sequence, p3 = c3.direction, o3 = void 0;
        return N2(d3) && 1 === p3 ? T2({ messageList: [], isCompleted: true, nextMessageSeq: "" }) : (Gt2(t3) && (t3 = Jt2(o3 = t3)), this._computeReqSeqHopping({ groupID: t3, topicID: o3, sequence: d3 }).then(function(e3) {
          N2(d3) || 1 !== p3 || (e3 = d3 + n3 - 1);
          var s3 = "".concat(o3 ? "topicID:".concat(o3) : "groupID:".concat(t3), " sequence:").concat(d3, " reqSeq:").concat(e3, " direction:").concat(p3), r3 = (M2.l("".concat(l3, " ").concat(s3)), new G2("getRoamingMessagesHopping"));
          return u3.req({ P: k2.GET_GRP_ROAMING_MSG, data: { groupID: t3, topicID: o3, count: n3, sequence: e3 } }).then(function(e4) {
            var e4 = e4.data, t4 = e4.messageList, t4 = void 0 === t4 ? [] : t4, n4 = e4.complete, o4 = e4.nextSequence, o4 = void 0 === o4 ? 0 : o4, e4 = e4.invisibleSequenceList, e4 = void 0 === e4 ? [] : e4, i3 = "complete:".concat(n4, " nextSequence:").concat(o4, " remoteMsgCount:").concat(t4.length, " invisibleSequenceList:").concat(e4), i3 = (r3.setMessage("".concat(s3, " ").concat(i3)).end(), M2.l("".concat(l3, " ok. ").concat(i3)), "".concat(A2.CONV_GROUP).concat(c3.groupID)), a3 = u3.get(11), i3 = a3.onRoamingMessage(t4, i3, false), t4 = u3._computeResult({ groupID: c3.groupID, direction: p3, sequence: d3, remoteMessageList: t4, processedMessageList: i3, complete: n4, nextSequence: o4, invisibleSequenceList: e4 });
            return a3.storeHoppingMessageList(t4.messageList), C2(t4);
          }).catch(function(e4) {
            return r3.setError(e4).setMessage("groupID:".concat(t3, " sequence:").concat(d3, " count:").concat(n3)).end(), M2.w("".concat(l3, " failed. error:"), e4), D2(e4);
          });
        }));
      } }, { key: "_computeReqSeqHopping", value: function(e3) {
        var n3 = this, o3 = e3.groupID, t3 = e3.topicID, t3 = void 0 === t3 ? void 0 : t3, e3 = e3.sequence, e3 = void 0 === e3 ? void 0 : e3;
        return 0 < e3 ? Promise.resolve(e3) : N2(t3) ? this.getGroupProfileAdvance({ groupIDList: [o3], responseFilter: { groupBaseInfoFilter: ["NextMsgSeq"] } }).then(function(e4) {
          var e4 = e4.data.successGroupList, t4 = 0;
          return S2(e4) || (t4 = e4[0].nextMessageSeq - 1), M2.l("".concat(n3._n, "._computeReqSeqHopping groupID:").concat(o3, " lastSequence:").concat(t4, " from remote")), t4;
        }).catch(function(e4) {
          return D2(e4);
        }) : Promise.resolve(0);
      } }, { key: "_computeResult", value: function(e3) {
        var t3 = { messageList: [], isCompleted: false, nextMessageSeq: "" }, n3 = e3.groupID, o3 = e3.direction, i3 = e3.sequence, a3 = e3.remoteMessageList, a3 = void 0 === a3 ? [] : a3, s3 = e3.processedMessageList, s3 = void 0 === s3 ? [] : s3, r3 = e3.complete, c3 = e3.nextSequence, e3 = e3.invisibleSequenceList;
        if (0 === o3)
          return t3.nextMessageSeq = c3, (2 === r3 || c3 < 1) && (t3.isCompleted = true, t3.nextMessageSeq = ""), t3.messageList = s3, t3;
        if (1 === o3) {
          if (S2(a3)) {
            if (S2(e3))
              return t3.isCompleted = true, t3.nextMessageSeq = "", t3;
            t3.nextMessageSeq = e3[0] + 1;
          } else {
            r3 = a3[0].sequence, c3 = e3[0] || 0;
            t3.nextMessageSeq = c3 < r3 ? r3 + 1 : c3 + 1;
          }
          return s3.forEach(function(e4) {
            e4.sequence >= i3 && t3.messageList.push(e4);
          }), (Nt2({ groupID: n3 }) || Gt2(n3)) && 0 === t3.messageList.length && a3[0].sequence < i3 && (t3.isCompleted = true, t3.nextMessageSeq = ""), t3;
        }
      } }, { key: "setMessageRead", value: function(e3) {
        var o3 = this, i3 = e3.conversationID, a3 = e3.lastMessageSeq, s3 = "".concat(this._n, ".").concat("setMessageRead"), e3 = "convID:".concat(i3, " lastMessageSeq:").concat(a3), r3 = (M2.l("".concat(s3, " ").concat(e3)), R2(a3) || this.warn("DoNotModifyLastSeq"), new G2("setMessageRead")), c3 = (r3.setMessage(e3), i3.replace(A2.CONV_GROUP, "")), u3 = void 0;
        return Gt2(c3) && (c3 = Jt2(u3 = c3)), this.req({ P: k2.SET_GRP_MSG_READ, data: { groupID: c3, topicID: u3, messageReadSeq: a3 } }).then(function() {
          r3.end(), M2.l("".concat(s3, " ok"));
          var e4, t3 = o3.get(11), n3 = (t3.updateIsReadAfterReadReport({ conversationID: i3, lastMessageSeq: a3 }), true);
          return !N2(u3) && (n3 = false, e4 = o3.get(10).getLocalTopic(c3, u3)) && e4.updateSelfInfo({ readedSequence: a3 }), t3.updateUnreadCount(i3, n3), C2();
        }).catch(function(e4) {
          return r3.setError(e4).end(), M2.l("".concat(s3, " failed. error:"), e4), D2(e4);
        });
      } }, { key: "_computeLastSequence", value: function(e3) {
        var t3 = e3.groupID, n3 = e3.topicID, n3 = void 0 === n3 ? void 0 : n3, e3 = e3.sequence;
        return 0 < e3 ? Promise.resolve(e3) : N2(n3) ? this.getGroupLastSequence(t3) : Promise.resolve(0);
      } }, { key: "getGroupLastSequence", value: function(e3) {
        var t3 = "".concat(this._n, ".").concat("getGroupLastSequence"), n3 = new G2("getGroupLastSequence"), o3 = 0, i3 = "", a3 = "groupID:".concat(e3);
        if (this.hasLocalGroup(e3)) {
          var s3 = this.getLocalGroupProfile(e3), r3 = s3.lastMessage;
          if (0 < r3.lastSequence && false === r3.onlineOnlyFlag)
            return o3 = r3.lastSequence, i3 = "".concat(a3, ", ").concat(o3, " from group.lastMessage.lastSequence"), M2.l("".concat(t3, " ").concat(i3)), n3.setMessage(i3).end(), Promise.resolve(o3);
          if (1 < s3.nextMessageSeq)
            return o3 = s3.nextMessageSeq - 1, i3 = "".concat(a3, ", ").concat(o3, " from group.nextMessageSeq"), M2.l("".concat(t3, " ").concat(i3)), n3.setMessage(i3).end(), Promise.resolve(o3);
        }
        r3 = this.get(11).getLocalConversation("GROUP".concat(e3));
        return r3 && r3.lastMessage.lastSequence && false === r3.lastMessage.onlineOnlyFlag ? (o3 = r3.lastMessage.lastSequence, i3 = "".concat(a3, ", ").concat(o3, " from conversation.lastMessage.lastSequence"), M2.l("".concat(t3, " ").concat(i3)), n3.setMessage(i3).end(), Promise.resolve(o3)) : this.getGroupProfileAdvance({ groupIDList: [e3], responseFilter: { groupBaseInfoFilter: ["NextMsgSeq"] } }).then(function(e4) {
          e4 = e4.data.successGroupList;
          return S2(e4) ? M2.w("".concat(t3, " ").concat(a3, ", empty successGroupList")) : (o3 = e4[0].nextMessageSeq - 1, i3 = "".concat(a3, ", ").concat(o3, " from remote"), M2.l("".concat(t3, " ").concat(i3))), n3.setMessage(i3).end(), o3;
        }).catch(function(e4) {
          return n3.setError(e4).setMessage(a3).end(), M2.w("".concat(t3, " failed. error:"), e4), D2(e4);
        });
      } }, { key: "isMessageFromOrToAVChatroom", value: function(e3) {
        return this._AVChatRoomHandler.checkJoinedAVChatRoomByID(e3);
      } }, { key: "hasJoinedAVChatRoom", value: function() {
        return this._AVChatRoomHandler.hasJoinedAVChatRoom();
      } }, { key: "getJoinedAVChatRoom", value: function() {
        return this._AVChatRoomHandler.getJoinedAVChatRoom();
      } }, { key: "getGroupRemoteLastSeq", value: function(e3) {
        e3 = this.getLocalGroupProfile(e3);
        return e3 ? e3.nextMessageSeq - 1 : 1;
      } }, { key: "isOnlineMessage", value: function(e3, t3) {
        return !(!this._canIUseOnlineOnlyFlag(e3) || !t3 || true !== t3.onlineUserOnly);
      } }, { key: "_canIUseOnlineOnlyFlag", value: function(e3) {
        var t3 = this.getJoinedAVChatRoom();
        return !t3 || !t3.includes(e3.to) || e3.conversationType !== A2.CONV_GROUP;
      } }, { key: "_onAVChatRoomHistoryMessage", value: function(e3, t3) {
        var n3;
        S2(e3) || (M2.l("".concat(this._n, "._onAVChatRoomHistoryMessage groupID:").concat(t3, " count:").concat(e3.length)), n3 = [], e3.forEach(function(e4) {
          n3.push(y2(y2({}, e4), {}, { isHistoryMessage: 1 }));
        }), this.onAVChatRoomMessage(n3, t3));
      } }, { key: "onAVChatRoomMessage", value: function(e3) {
        this._AVChatRoomHandler.onMessage(e3, 1 < arguments.length && void 0 !== arguments[1] ? arguments[1] : "");
      } }, { key: "onAVChatRoomMemberBanned", value: function(e3) {
        this._AVChatRoomHandler.onAVChatRoomMemberBanned(e3);
      } }, { key: "setUnjoinedAVChatRoom", value: function(e3) {
        this._unjoinedAVChatRoomList.set(e3, 1);
      } }, { key: "deleteUnjoinedAVChatRoom", value: function(e3) {
        this._unjoinedAVChatRoomList.has(e3) && this._unjoinedAVChatRoomList.delete(e3);
      } }, { key: "isUnjoinedAVChatRoom", value: function(e3) {
        return this._unjoinedAVChatRoomList.has(e3);
      } }, { key: "isGroupAttributesUpdatedNotice", value: function(e3) {
        return this._groupAttributesHandler.isGroupAttributesUpdatedNotice(e3);
      } }, { key: "updateLocalMainSequenceOnReconnected", value: function() {
        this._groupAttributesHandler.updateLocalMainSequenceOnReconnected();
      } }, { key: "initGroupAttributes", value: function(e3) {
        return this._groupAttributesHandler.initGroupAttributes(e3);
      } }, { key: "setGroupAttributes", value: function(e3) {
        return this._groupAttributesHandler.setGroupAttributes(e3);
      } }, { key: "deleteGroupAttributes", value: function(e3) {
        return this._groupAttributesHandler.deleteGroupAttributes(e3);
      } }, { key: "getGroupAttributes", value: function(e3) {
        return this._groupAttributesHandler.getGroupAttributes(e3);
      } }, { key: "isMessageFromTopic", value: function(e3, t3) {
        return 2 === e3 && !S2(t3);
      } }, { key: "isMessageFromCommunityOfTopic", value: function(e3, t3) {
        return 2 === e3 && S2(t3);
      } }, { key: "getMessageExtensions", value: function(e3, t3) {
        return M2.l("".concat(this._n, ".getMessageExtensions startSequence:").concat(t3)), this.req({ P: k2.GET_GRP_MSG_EXT, data: { groupID: e3.to, messageSequence: e3.sequence, startSequence: t3 } });
      } }, { key: "modifyMsgExts", value: function(e3, t3) {
        var n3 = 2 < arguments.length && void 0 !== arguments[2] ? arguments[2] : 1;
        return M2.l("".concat(this._n, ".modifyMsgExts operateType:").concat(n3)), this.req({ P: k2.MODIFY_GRP_MSG_EXT, data: { groupID: e3.to, messageSequence: e3.sequence, extensionList: t3, operateType: n3 } });
      } }, { key: "_genNotifyReqList", value: function(e3) {
        for (var t3, n3, o3, i3, a3 = [], s3 = 0, r3 = e3.length; s3 < r3; s3++)
          t3 = e3[s3], i3 = this.getLocalGroupProfile(t3).type, n3 = this._getGroupLastRevokedTime(t3), o3 = 1e3 * We2(), i3 = { notifyType: 1, limit: 20, type: Nt2({ type: i3, groupID: t3 }) ? A2.GRP_COMMUNITY : void 0, groupID: t3, beginTime: n3, endTime: o3 }, a3.push(i3);
        return a3;
      } }, { key: "getNotice", value: function(e3) {
        var r3 = this, t3 = "".concat(this._n, ".getNotice"), e3 = e3.filter(function(e4) {
          var t4;
          return !!r3.hasLocalGroup(e4) && (t4 = (e4 = r3.getLocalGroupProfile(e4)).type, e4 = e4.isSupportTopic, !Ot2(t4)) && !e4;
        });
        0 !== e3.length && (M2.l("".concat(t3, " list:").concat(e3)), this.req({ P: k2.GET_GRP_NOTIFY, data: { notifyReqList: this._genNotifyReqList(e3) } }).then(function(e4) {
          var i3, a3, e4 = e4.data.notifyRspList, s3 = [];
          O2(e4) && (i3 = { dataList: [] }, a3 = "".concat(t3, " ok."), e4.forEach(function(e5) {
            var t4 = e5.nextRevokedTime, n3 = e5.groupID, o3 = e5.notifyList;
            a3 += " groupID:".concat(n3, " nextRevokedTime:").concat(t4, " count:").concat(o3.length, "\n"), i3.dataList.push({ elements: { revokedInfos: r3._genRevokedInfos(e5) } }), 0 !== t4 ? (r3._setGroupLastRevokedTime(n3, t4), s3.push(n3)) : r3._setGroupLastRevokedTime(n3, 1e3 * We2());
          }), M2.l(a3), r3.onMsgRevoked(i3, false)), 0 < s3.length && r3.getNotice(s3);
        }).catch(function(e4) {
          M2.e("".concat(t3, " failed. error:"), e4);
        }));
      } }, { key: "_genRevokedInfos", value: function(e3) {
        var t3 = e3.notifyList, n3 = e3.groupID, o3 = [];
        return O2(t3) && t3.forEach(function(e4) {
          o3.push({ groupID: n3, sequence: e4.sequence, random: e4.random, revokerInfo: y2({}, e4.revokerInfo) });
        }), o3;
      } }, { key: "_getGroupLastRevokedTime", value: function(e3) {
        return this.hasLocalGroup(e3) ? this.getLocalGroupProfile(e3)._lastRevokedTime : 0;
      } }, { key: "_setGroupLastRevokedTime", value: function(e3, t3) {
        this.hasLocalGroup(e3) && (this.getLocalGroupProfile(e3)._lastRevokedTime = t3);
      } }, { key: "isGroupCountersNotice", value: function(e3) {
        return this._groupCountersHandler.isGroupCountersNotice(e3);
      } }, { key: "setGroupCounters", value: function(e3) {
        return this._groupCountersHandler.setGroupCounters(e3);
      } }, { key: "increaseGroupCounter", value: function(e3) {
        return this._groupCountersHandler.increaseGroupCounter(e3);
      } }, { key: "decreaseGroupCounter", value: function(e3) {
        return this._groupCountersHandler.decreaseGroupCounter(e3);
      } }, { key: "getGroupCounters", value: function(e3) {
        return this._groupCountersHandler.getGroupCounters(e3);
      } }, { key: "getGroupMemberHandler", value: function() {
        return this._groupMemberHandler;
      } }, { key: "getGroupMemberList", value: function(e3) {
        return this._groupMemberHandler.getGroupMemberList(e3);
      } }, { key: "getGroupMemberProfile", value: function(e3) {
        return this._groupMemberHandler.getGroupMemberProfile(e3);
      } }, { key: "addGroupMember", value: function(e3) {
        return this._groupMemberHandler.addGroupMember(e3);
      } }, { key: "deleteGroupMember", value: function(e3) {
        return this._groupMemberHandler.deleteGroupMember(e3);
      } }, { key: "setGroupMemberMuteTime", value: function(e3) {
        return this._groupMemberHandler.setGroupMemberMuteTime(e3);
      } }, { key: "setGroupMemberRole", value: function(e3) {
        return this._groupMemberHandler.setGroupMemberRole(e3);
      } }, { key: "setGroupMemberNameCard", value: function(e3) {
        return this._groupMemberHandler.setGroupMemberNameCard(e3);
      } }, { key: "setGroupMemberCustomField", value: function(e3) {
        return this._groupMemberHandler.setGroupMemberCustomField(e3);
      } }, { key: "markGroupMemberList", value: function(e3) {
        return this._groupMemberHandler.markGroupMemberList(e3);
      } }, { key: "modifyGroupMemberInfo", value: function(e3) {
        return this._groupMemberHandler.modifyGroupMemberInfo(e3);
      } }, { key: "restartPolling", value: function() {
        this._AVChatRoomHandler.restartPolling();
      } }, { key: "getPollingTimerID", value: function(e3) {
        var t3;
        return e3 && (t3 = this.getLocalGroupProfile(e3)) && Ot2(t3.type) ? this._AVChatRoomHandler.getPollingTimerID(e3) : -1;
      } }, { key: "_canIUseJoinOption", value: function(e3) {
        return e3 === A2.GRP_PUBLIC || Nt2({ type: e3 });
      } }, { key: "_silentlyGetGroupProfile", value: function(e3, t3) {
        var n3 = setTimeout(this.getGroupProfile.bind(this, { groupID: t3 }), 3e3);
        this._timeoutIDs.push(n3), M2.l("".concat(this._n, "._silentlyGetGroupProfile errorCode:").concat(e3, " groupID:").concat(t3, " timeoutIDs:").concat(this._timeoutIDs));
      } }, { key: "_clearTimeoutIDs", value: function() {
        this._timeoutIDs.forEach(function(e3) {
          clearTimeout(e3);
        }), this._timeoutIDs = [];
      } }, { key: "startMessageLongPolling", value: function(e3) {
        var t3 = e3.groupID, n3 = e3.longPollingKey, e3 = e3.longPollingSequence, e3 = void 0 === e3 ? 1 : e3, o3 = this.get(12).isUnlimitedAVChatRoom(), i3 = (this._AVChatRoomHandler.hasPollingInstance(t3) && this.stopMessageLongPolling({ groupID: t3 }), this._AVChatRoomHandler.getJoinedLiveList()), o3 = (!o3 && 0 < i3.length && this.stopMessageLongPolling({ groupID: i3[0] }), new oi2({ groupID: t3, type: A2.GRP_LIVE }));
        return M2.l("".concat(this._n, ".startMessageLongPolling groupID:").concat(t3, " longPollingKey:").concat(n3, " longPollingSequence:").concat(e3)), this._AVChatRoomHandler.startRunLoop({ group: o3, longPollingKey: n3, startSeq: e3 });
      } }, { key: "stopMessageLongPolling", value: function(e3) {
        var e3 = e3.groupID, t3 = this.get(11);
        return this._AVChatRoomHandler.reset(e3), this._deleteLocalGroup(e3), t3.deleteLocalConv("".concat(A2.CONV_GROUP).concat(e3)), M2.l("".concat(this._n, ".stopMessageLongPolling ok, groupID:").concat(e3)), T2({ groupID: e3 });
      } }, { key: "reset", value: function() {
        this.groupMap.clear(), this._unjoinedAVChatRoomList.clear(), this._receiptDetailCompleteMap.clear(), this._onlineMemberCountMap.clear(), this._commonGroupHandler.reset(), this._groupSystemNoticeHandler.reset(), this._groupTipsHandler.reset(), this._groupAttributesHandler.reset(), this._groupCountersHandler.reset(), this._AVChatRoomHandler.reset(), this._groupMemberHandler.reset(), this._clearTimeoutIDs();
      } }]), Vi2), Ci2 = ["topicID", "topicName", "avatar", "introduction", "notification", "unreadCount", "muteAllMembers", "customData", "groupAtInfoList", "nextMessageSeq", "selfInfo"], Ti2 = (e2(xi2, [{ key: "_initTopic", value: function(e3) {
        for (var t3 in e3)
          Ci2.indexOf(t3) < 0 || ("selfInfo" === t3 ? this.updateSelfInfo(e3[t3]) : this[t3] = "muteAllMembers" === t3 ? 1 === e3[t3] : e3[t3]);
      } }, { key: "updateUnreadCount", value: function() {
        this.unreadCount = 0 < arguments.length && void 0 !== arguments[0] ? arguments[0] : 0;
      } }, { key: "updateNextMessageSeq", value: function(e3) {
        this.nextMessageSeq = e3;
      } }, { key: "updateLastMessage", value: function(e3) {
        this.lastMessage = Yo(e3);
      } }, { key: "updateGroupAtInfoList", value: function(e3) {
        this.groupAtInfoList = JSON.parse(JSON.stringify(e3));
      } }, { key: "updateTopic", value: function(e3) {
        N2(e3.selfInfo) || this.updateSelfInfo(e3.selfInfo), N2(e3.muteAllMembers) || (this.muteAllMembers = 1 === e3.muteAllMembers), _t3(this, e3, ["groupID", "lastMessageTime", "selfInfo", "muteAllMembers", "lastMsg"]);
      } }, { key: "updateSelfInfo", value: function(e3) {
        return 0 === _t3(this.selfInfo, e3, [], [""]);
      } }, { key: "reduceUnreadCount", value: function() {
        return 1 <= this.unreadCount && (--this.unreadCount, true);
      } }, { key: "isLastMessageRevoked", value: function(e3) {
        return e3.sequence === this.lastMessage.lastSequence;
      } }, { key: "setLastMessageRevoked", value: function(e3) {
        this.lastMessage.isRevoked = e3;
      } }, { key: "setLastMessageRevoker", value: function(e3) {
        this.lastMessage.revoker = e3;
      } }]), xi2), Di2 = (t2(qi2, u2), zo2 = n2(qi2), e2(qi2, [{ key: "_onCloudConfig", value: function() {
        var e3 = this.getCloudConfig("topic_cache_time"), t3 = this.getCloudConfig("topic_last_active_time");
        N2(e3) || (this.TOPIC_CACHE_TIME = Number(e3)), N2(t3) || (this.TOPIC_LAST_ACTIVE_TIME = Number(t3));
      } }, { key: "onTopicCreated", value: function(e3) {
        var t3 = e3.groupID;
        this.resetGetTopicTime(t3), this.emitOEvt(h2.TOPIC_CREATED, e3);
      } }, { key: "onTopicDeleted", value: function(e3) {
        var t3 = this, n3 = e3.groupID, o3 = e3.topicIDList;
        (void 0 === o3 ? [] : o3).forEach(function(e4) {
          t3._deleteLocalTopic(n3, e4);
        }), this.emitOEvt(h2.TOPIC_DELETED, e3);
      } }, { key: "onTopicProfileUpdated", value: function(e3) {
        var t3 = e3.groupID, n3 = e3.topicID, n3 = this.getLocalTopic(t3, n3);
        n3 && (n3.updateTopic(e3), this.emitOEvt(h2.TOPIC_UPDATED, { groupID: t3, topic: n3 }));
      } }, { key: "onTopicLatestMsg", value: function(e3) {
        var t3, n3, e3 = e3 || {}, o3 = e3.topicLatestMessage, e3 = e3.excludedUnreadSequenceList;
        S2(o3) || (t3 = o3.groupProfile.topicID, o3.conversationType = A2.CONV_GROUP, o3.to = t3, (n3 = new Do2(o3)).setElement(o3.elements), this.updateUnreadCountAndLastMsg(t3, n3, e3));
      } }, { key: "onMessageRemindTypeUpdated", value: function(e3) {
        var t3, n3 = e3.groupID, o3 = e3.topicID, e3 = e3.messageRemindType, i3 = this.getLocalTopic(n3, o3);
        i3 && ((t3 = i3.updateSelfInfo({ messageRemindType: e3 })) && this.emitOEvt(h2.TOPIC_UPDATED, { groupID: n3, topic: i3 }), M2.l("".concat(this._n, ".onMessageRemindTypeUpdated topicID:").concat(o3, " messageRemindType:").concat(e3, " isUpdated:").concat(t3)));
      } }, { key: "onAtInfoUpdated", value: function(e3) {
        var t3 = e3.topicID, e3 = e3.groupAtInfoList, n3 = Jt2(t3), t3 = this.getLocalTopic(n3, t3);
        t3 && !N2(e3) && (t3.updateGroupAtInfoList(e3), this.emitOEvt(h2.TOPIC_UPDATED, { groupID: n3, topic: t3 }));
      } }, { key: "onUnreadCountUpdatedFromConv", value: function(e3) {
        var t3 = 1 < arguments.length && void 0 !== arguments[1] ? arguments[1] : 0, n3 = Jt2(e3), e3 = this.getLocalTopic(n3, e3);
        e3 && e3.unreadCount !== t3 && (e3.updateUnreadCount(t3), 0 === t3 && e3.updateSelfInfo({ readedSequence: e3.lastMessage.lastSequence }), this.emitOEvt(h2.TOPIC_UPDATED, { groupID: n3, topic: e3 }));
      } }, { key: "onMessageSent", value: function(e3) {
        var t3, n3, o3 = e3.groupID, i3 = e3.topicID, e3 = e3.lastMessage, i3 = this.getLocalTopic(o3, i3);
        i3 && (n3 = (t3 = void 0 === (t3 = e3.sequence) ? 0 : t3) + 1) > i3.nextMessageSeq && (i3.updateNextMessageSeq(n3), i3.updateLastMessage(e3), i3.updateSelfInfo({ readedSequence: t3 }), i3.updateUnreadCount(0), this.emitOEvt(h2.TOPIC_UPDATED, { groupID: o3, topic: i3 }));
      } }, { key: "onMessageModified", value: function(e3) {
        var t3, n3 = e3.to, o3 = e3.time, i3 = e3.sequence, a3 = e3.elements, s3 = e3.cloudCustomData, r3 = e3.messageVersion, c3 = Jt2(n3), u3 = this.getLocalTopic(c3, n3);
        u3 && (t3 = u3.lastMessage, M2.d("".concat(this._n, ".onMessageModified topicID:").concat(n3, " lastMessage:"), JSON.stringify(t3), "options:", JSON.stringify(e3)), t3) && (null === t3.payload || t3.lastTime === o3 && t3.lastSequence === i3 && t3.version !== r3) && (t3.type = a3[0].type, t3.payload = a3[0].content, t3.messageForShow = zt2(t3.type, t3.payload, this.isIntl()), t3.cloudCustomData = s3, t3.version = r3, t3.lastSequence = i3, t3.lastTime = o3, this.emitOEvt(h2.TOPIC_UPDATED, { groupID: c3, topic: u3 }));
      } }, { key: "onMessageRevoked", value: function(e3) {
        var n3, o3, i3, a3 = this;
        0 !== e3.length && (o3 = n3 = null, i3 = false, e3.forEach(function(e4) {
          var t3 = e4.to;
          o3 = Jt2(t3), (n3 = a3.getLocalTopic(o3, t3)) && (n3.reduceUnreadCount() && (i3 = true), n3.isLastMessageRevoked(e4) && (n3.setLastMessageRevoked(true), n3.setLastMessageRevoker(e4.revoker), i3 = true), (t3 = n3.selfInfo.excludedUnreadSequenceList || []).push(e4.sequence), n3.updateSelfInfo({ excludedUnreadSequenceList: t3 }));
        }), i3) && this.emitOEvt(h2.TOPIC_UPDATED, { groupID: o3, topic: n3 });
      } }, { key: "isLastMessageRevoked", value: function(e3) {
        var t3 = e3.topicID, e3 = e3.sequence, n3 = Jt2(t3), n3 = this.getLocalTopic(n3, t3), t3 = false;
        return t3 = n3 ? n3.isLastMessageRevoked({ sequence: e3 }) : t3;
      } }, { key: "updateUnreadCountAndLastMsg", value: function(e3, t3, n3) {
        var o3, i3 = Jt2(e3), a3 = this.getLocalTopic(i3, e3);
        a3 && (o3 = a3.selfInfo.excludedUnreadSequenceList || [], N2(n3) || (o3 = n3), t3._isExcludedFromUnreadCount && o3.push(t3.sequence), a3.updateSelfInfo({ excludedUnreadSequenceList: o3 }), M2.l("".concat(this._n, ".updateUnreadCountAndLastMsg seq:").concat(t3.sequence, " lastSeq:").concat(a3.lastMessage.lastSequence)), t3.sequence > a3.lastMessage.lastSequence) && (a3.updateLastMessage(t3), n3 = t3.sequence + 1, a3.updateNextMessageSeq(n3), o3 = this._computeUnreadCount(a3), a3.updateUnreadCount(o3), (t3 = this.get(11).getLocalConversation("".concat(A2.CONV_GROUP).concat(e3))) && t3.updateUnreadCount({ nextUnreadCount: o3, isFromGetConversations: true }), this.emitOEvt(h2.TOPIC_UPDATED, { groupID: i3, topic: a3 }));
      } }, { key: "getJoinedCommunityList", value: function() {
        return this.get(7).syncCommunityWithTopic();
      } }, { key: "createTopicInCommunity", value: function(t3) {
        var n3, o3 = this, i3 = "".concat(this._n, ".").concat("createTopicInCommunity"), e3 = t3.topicID;
        return N2(e3) || Gt2(e3) ? t3.topicName && false === this._filterProfanity("topicName", t3) || t3.introduction && false === this._filterProfanity("introduction", t3) || t3.notification && false === this._filterProfanity("notification", t3) ? D2({ code: L2.PROFANITY_FOUND }) : (n3 = new G2("createTopicInCommunity"), this.req({ P: k2.CREATE_TOPIC, data: y2({}, t3) }).then(function(e4) {
          e4 = e4.data.topicID;
          return n3.setMessage("topicID:".concat(e4)).end(), M2.l("".concat(i3, " ok. topicID:").concat(e4)), o3._updateTopicMap([y2(y2({}, t3), {}, { topicID: e4 })]), C2({ topicID: e4 });
        }).catch(function(e4) {
          return n3.setError(e4).end(), M2.e("".concat(i3, " failed. error:"), e4), D2(e4);
        })) : D2({ code: L2.ILLEGAL_TOPIC_ID });
      } }, { key: "deleteTopicFromCommunity", value: function(e3) {
        var t3 = this, n3 = "".concat(this._n, ".").concat("deleteTopicFromCommunity"), a3 = e3.groupID, e3 = e3.topicIDList, e3 = void 0 === e3 ? [] : e3, s3 = new G2("deleteTopicFromCommunity");
        return s3.setMessage("groupID:".concat(a3, " topicIDList:").concat(e3)), this.req({ P: k2.DEL_TOPIC, data: { groupID: a3, topicIDList: e3 } }).then(function(e4) {
          var e4 = e4.data.resultList, o3 = [], i3 = [], e4 = ((void 0 === e4 ? [] : e4).forEach(function(e5) {
            var t4 = e5.topicID, n4 = e5.errorCode, e5 = e5.errorInfo;
            0 === n4 ? o3.push({ topicID: t4 }) : i3.push({ topicID: t4, code: n4, message: e5 });
          }), "success count:".concat(o3.length, ", fail count:").concat(i3.length));
          return s3.setMoreMessage(e4).end(), M2.l("".concat(n3, " ok. ").concat(e4)), o3.forEach(function(e5) {
            t3._deleteLocalTopic(a3, e5.topicID);
          }), C2({ successTopicList: o3, failureTopicList: i3 });
        }).catch(function(e4) {
          return s3.setError(e4).end(), M2.e("".concat(n3, " failed. error:"), e4), D2(e4);
        });
      } }, { key: "updateTopicProfile", value: function(e3) {
        var t3, n3 = this, o3 = "".concat(this._n, ".").concat("updateTopicProfile");
        return M2.l("".concat(o3, " options:"), e3), e3.topicName && false === this._filterProfanity("topicName", e3) || e3.introduction && false === this._filterProfanity("introduction", e3) || e3.notification && false === this._filterProfanity("notification", e3) ? D2({ code: L2.PROFANITY_FOUND }) : ((t3 = new G2("updateTopicProfile")).setMessage("groupID:".concat(e3.groupID, " topicID:").concat(e3.topicID)), N2(e3.muteAllMembers) || (e3.muteAllMembers = true === e3.muteAllMembers ? "On" : "Off"), this.req({ P: k2.UPDATE_TOPIC_PROFILE, data: y2({}, e3) }).then(function() {
          return t3.end(), M2.l("".concat(o3, " ok")), n3._updateTopicMap([e3]), C2({ topic: n3.getLocalTopic(e3.groupID, e3.topicID) });
        }).catch(function(e4) {
          return t3.setError(e4).end(), M2.e("".concat(o3, " failed. error:"), e4), D2(e4);
        }));
      } }, { key: "getTopicList", value: function(e3) {
        var t3 = this, n3 = "".concat(this._n, ".").concat("getTopicList"), o3 = e3.groupID, e3 = e3.topicIDList, e3 = void 0 === e3 ? [] : e3, i3 = 0 === e3.length, c3 = new G2("getTopicList");
        if (c3.setMessage("groupID:".concat(o3)), this._getTopicTimeMap.has(o3)) {
          var a3 = this._getTopicTimeMap.get(o3), s3 = a3.isGetAll, a3 = a3.time;
          if ((s3 || !s3 && !i3) && Date.now() - a3 < 1e3 * this.TOPIC_CACHE_TIME) {
            s3 = this._getLocalTopicList(o3, e3);
            if (i3 || s3.length === e3.length)
              return c3.setMoreMessage("from cache, topic count:".concat(s3.length)).end(), M2.l("".concat(n3, " groupID:").concat(o3, " from cache, topic count:").concat(s3.length)), T2({ successTopicList: s3, failureTopicList: [] });
          }
        }
        return this.req({ P: k2.GET_TOPIC_LIST, data: { groupID: o3, topicIDList: e3 } }).then(function(e4) {
          var e4 = e4.data.topicInfoList, a4 = [], s4 = [], r3 = [], e4 = ((void 0 === e4 ? [] : e4).forEach(function(e5) {
            var t4 = e5.topic, n4 = e5.selfInfo, o4 = e5.errorCode, e5 = e5.errorInfo, i4 = t4.topicID;
            0 === o4 ? (a4.push(y2(y2({}, t4), {}, { selfInfo: n4 })), s4.push(i4)) : r3.push({ topicID: i4, code: o4, message: e5 });
          }), t3._updateTopicMap(a4), t3._handleTopicAtInfo(a4), "success count:".concat(s4.length, ", fail count:").concat(r3.length)), e4 = (c3.setMoreMessage(e4).end(), M2.l("".concat(n3, " groupID:").concat(o3, " from remote, ").concat(e4)), []);
          return S2(s4) || (t3._getTopicTimeMap.set(o3, { time: Date.now(), isGetAll: i3 }), e4 = t3._getLocalTopicList(o3, s4)), C2({ successTopicList: e4, failureTopicList: r3 });
        }).catch(function(e4) {
          return c3.setError(e4).end(), M2.e("".concat(n3, " failed. error:"), e4), D2(e4);
        });
      } }, { key: "hasLocalTopic", value: function(e3, t3) {
        return !!this._topicMap.has(e3) && this._topicMap.get(e3).has(t3);
      } }, { key: "getLocalTopic", value: function(e3, t3) {
        var n3 = null;
        return n3 = this._topicMap.has(e3) ? this._topicMap.get(e3).get(t3) : n3;
      } }, { key: "_getLocalTopicList", value: function(e3) {
        var t3 = 1 < arguments.length && void 0 !== arguments[1] ? arguments[1] : [], e3 = this._topicMap.get(e3), n3 = [];
        return e3 && (n3 = p2(e3.values())), 0 === t3.length ? n3 : n3.filter(function(e4) {
          return t3.includes(e4.topicID);
        });
      } }, { key: "_deleteLocalTopic", value: function(e3, t3) {
        this._topicMap.has(e3) && this._topicMap.get(e3).has(t3) && (this._topicMap.get(e3).delete(t3), M2.l("".concat(this._n, "._deleteLocalTopic groupID:").concat(e3, " topicID:").concat(t3)));
      } }, { key: "_updateTopicMap", value: function(e3) {
        var i3 = this, a3 = [];
        e3.forEach(function(e4) {
          var t3 = e4.groupID, n3 = e4.topicID, o3 = null, e4 = (i3._topicMap.has(t3) || i3._topicMap.set(t3, /* @__PURE__ */ new Map()), i3._topicMap.get(t3).has(n3) ? (o3 = i3._topicMap.get(t3).get(n3)).updateTopic(e4) : (i3._getTopicLastMessage(e4), o3 = new Ti2(e4, i3.isIntl()), i3._topicMap.get(t3).set(n3, o3)), i3._computeUnreadCount(o3));
          o3.updateUnreadCount(e4), a3.push({ conversationID: "".concat(A2.CONV_GROUP).concat(n3), type: A2.CONV_TOPIC, unreadCount: e4 });
        }), 0 < a3.length && this.get(11).updateTopicConversation(a3);
      } }, { key: "resetGetTopicTime", value: function(e3) {
        var t3 = this;
        N2(e3) ? p2(this._getTopicTimeMap.keys()).forEach(function(e4) {
          t3._getTopicTimeMap.set(e4, 0);
        }) : this._getTopicTimeMap.set(e3, 0);
      } }, { key: "getTopicListOnReconnected", value: function() {
        var o3 = this, e3 = p2(this._topicMap.keys()), i3 = [], a3 = this.get(11);
        e3.forEach(function(e4) {
          var n3 = [], t3 = o3._getLocalTopicList(e4);
          a3.deleteTopicRoamingInfo(e4), t3.forEach(function(e5) {
            var t4 = e5.lastMessage.lastTime, t4 = void 0 === t4 ? 0 : t4;
            Date.now() - 1e3 * t4 < 1e3 * o3.TOPIC_LAST_ACTIVE_TIME && n3.push(e5.topicID);
          }), 0 < n3.length && i3.push({ groupID: e4, topicIDList: n3 });
        }), M2.l("".concat(this._n, ".getTopicListOnReconnected. active community count:").concat(i3.length)), this._relayGetTopicList(i3);
      } }, { key: "_relayGetTopicList", value: function(t3) {
        var e3, n3, o3, i3 = this;
        0 !== t3.length && (n3 = 5 < (e3 = t3.shift()).topicIDList.length ? "topicIDList.length:".concat(e3.topicIDList.length) : "topicIDList:".concat(e3.topicIDList), (o3 = new G2("relayGetTopicList")).setMessage(n3), M2.l("".concat(this._n, "._relayGetTopicList. ").concat(n3)), this.getTopicList(e3).then(function() {
          o3.end(), i3._relayGetTopicList(t3);
        }).catch(function(e4) {
          o3.setError(e4).end(), i3._relayGetTopicList(t3);
        }));
      } }, { key: "_handleTopicAtInfo", value: function(e3) {
        var i3 = this;
        0 !== e3.length && e3.forEach(function(e4) {
          var t3 = e4.groupID, n3 = e4.topicID, e4 = e4.groupAtInfoList, o3 = [];
          N2(e4) || (e4.forEach(function(e5) {
            o3.push(y2(y2({}, e5), {}, { groupID: t3, topicID: n3 }));
          }), i3.get(11).onNewGroupAtTips({ dataList: o3 }));
        });
      } }, { key: "_getTopicLastMessage", value: function(e3) {
        var t3;
        N2(e3.lastMsg) || (t3 = { time: e3.lastMsg.time, sequence: e3.lastMsg.sequence, from: e3.lastMsg.from, payload: e3.lastMsg.elements[0] ? e3.lastMsg.elements[0].content : null, type: e3.lastMsg.elements[0] ? e3.lastMsg.elements[0].type : "", nick: e3.lastMsg.nick, avatar: e3.lastMsg.avatar, version: e3.lastMsg.messageVersion, cloudCustomData: e3.lastMsg.cloudCustomData, isRevoked: 2 === e3.lastMsg.isPlaceMessage, revoker: S2(e3.lastMsg.revokerInfo) ? null : e3.lastMsg.revokerInfo.revoker }, e3.lastMessage = t3);
      } }, { key: "deleteTopicListInCommunity", value: function(t3) {
        var n3 = this, e3 = this._getLocalTopicList(t3), o3 = this.get(11);
        e3.forEach(function(e4) {
          e4 = e4.topicID;
          n3._deleteLocalTopic(t3, e4), n3._getTopicTimeMap.delete(t3), o3.deleteLocalConv("".concat(A2.CONV_GROUP).concat(e4));
        });
      } }, { key: "_computeUnreadCount", value: function(t3) {
        var n3, e3 = t3.selfInfo, o3 = e3.excludedUnreadSequenceList, i3 = e3.readedSequence, e3 = t3.nextMessageSeq - t3.selfInfo.readedSequence - 1;
        return O2(o3) && (n3 = 0, o3.forEach(function(e4) {
          i3 < e4 && e4 <= t3.nextMessageSeq - 1 && (n3 += 1);
        }), 1 <= n3) && (e3 -= n3), e3 < 0 ? 0 : e3;
      } }, { key: "_filterProfanity", value: function(e3, t3) {
        var n3, o3 = this.get(29);
        return !o3 || (n3 = (o3 = o3.filterText(t3[e3], re2)).isAllowedToSend, o3 = o3.modifiedText, true === n3 && (t3[e3] = o3, true));
      } }, { key: "getMessageExtensions", value: function(e3, t3) {
        M2.l("".concat(this._n, ".getMessageExtensions startSequence:").concat(t3));
        var n3 = Jt2(e3.to);
        return this.req({ P: k2.GET_GRP_MSG_EXT, data: { groupID: n3, topicID: e3.to, messageSequence: e3.sequence, startSequence: t3 } });
      } }, { key: "modifyMsgExts", value: function(e3, t3) {
        var n3 = 2 < arguments.length && void 0 !== arguments[2] ? arguments[2] : 1, o3 = (M2.l("".concat(this._n, ".modifyMsgExts operateType:").concat(n3)), Jt2(e3.to));
        return this.req({ P: k2.MODIFY_GRP_MSG_EXT, data: { groupID: o3, topicID: e3.to, messageSequence: e3.sequence, extensionList: t3, operateType: n3 } });
      } }, { key: "reset", value: function() {
        M2.l("".concat(this._n, ".reset")), this._topicMap.clear(), this._getTopicTimeMap.clear(), this.TOPIC_CACHE_TIME = 300, this.TOPIC_LAST_ACTIVE_TIME = 3600;
      } }]), qi2), Ei2 = (e2(Fi2, [{ key: "setExpirationTime", value: function(e3) {
        this.expirationTime = e3;
      } }, { key: "getUserProfile", value: function(e3) {
        var t3 = this, n3 = "".concat(this._n, ".").concat("getUserProfile"), o3 = e3.userIDList;
        e3.fromAccount = this._userM.getMyAccount(), 100 < o3.length && (M2.w("".concat(n3, " ").concat($t2(100))), o3.length = 100);
        for (var i3, a3 = [], s3 = [], r3 = 0, c3 = o3.length; r3 < c3; r3++)
          i3 = o3[r3], this._userM.isMyFriend(i3) && this._contains(i3) ? s3.push(this._getProfileFromMap(i3)) : a3.push(i3);
        if (0 === a3.length)
          return T2(s3);
        e3.toAccount = a3;
        var u3 = e3.bFromGetMyProfile || false, l3 = [], d3 = (e3.toAccount.forEach(function(e4) {
          l3.push({ toAccount: e4, standardSequence: 0, customSequence: 0 });
        }), e3.userItem = l3, new G2("getUserProfile"));
        return d3.setMessage(5 < o3.length ? "userIDList.length:".concat(o3.length) : "userIDList:".concat(o3)), this._userM.req({ P: k2.GET_USER_PROFILE, data: e3 }).then(function(e4) {
          d3.end(), M2.i("".concat(n3, " ok"));
          e4 = t3._handleResponse(e4).concat(s3);
          return C2(u3 ? e4[0] : e4);
        }).catch(function(e4) {
          return d3.setError(e4).end(), M2.e("".concat(n3, " failed. error:"), e4), D2(e4);
        });
      } }, { key: "getMyProfile", value: function() {
        var e3, t3 = this._userM.getMyAccount(), n3 = "".concat(this._n, ".getMyProfile");
        return M2.l("".concat(n3, " myAccount:").concat(t3)), this._fill(), this._contains(t3) ? (e3 = this._getProfileFromMap(t3), M2.d("".concat(n3, " from cache, myProfile:").concat(JSON.stringify(e3))), T2(e3)) : this.getUserProfile({ fromAccount: t3, userIDList: [t3], bFromGetMyProfile: true });
      } }, { key: "_handleResponse", value: function(e3) {
        var t3 = e3.data.userProfileItem;
        if (!O2(t3))
          return [];
        for (var n3 = [], e3 = Date.now(), o3 = 0, i3 = t3.length; o3 < i3; o3++) {
          var a3 = t3[o3], s3 = a3.to, a3 = a3.profileItem;
          "@TLS#NOT_FOUND" !== s3 && "" !== s3 && (s3 = this._update(s3, this._getLatestProfileFromResponse(s3, a3)).latestProfile, n3.push(s3));
        }
        return M2.l("".concat(this._n, "._handleResponse cost:").concat(nn2(e3))), n3;
      } }, { key: "_getLatestProfileFromResponse", value: function(e3, t3) {
        var n3 = { userID: e3, profileCustomField: [] };
        if (!S2(t3))
          for (var o3 = 0, i3 = t3.length; o3 < i3; o3++)
            if (-1 < t3[o3].tag.indexOf("Tag_Profile_Custom"))
              n3.profileCustomField.push({ key: t3[o3].tag, value: t3[o3].value });
            else
              switch (t3[o3].tag) {
                case g2.NICK:
                  n3.nick = t3[o3].value;
                  break;
                case g2.GENDER:
                  n3.gender = t3[o3].value;
                  break;
                case g2.BIRTHDAY:
                  n3.birthday = t3[o3].value;
                  break;
                case g2.LOCATION:
                  n3.location = t3[o3].value;
                  break;
                case g2.SELFSIGNATURE:
                  n3.selfSignature = t3[o3].value;
                  break;
                case g2.ALLOWTYPE:
                  n3.allowType = t3[o3].value;
                  break;
                case g2.LANGUAGE:
                  n3.language = t3[o3].value;
                  break;
                case g2.AVATAR:
                  n3.avatar = t3[o3].value;
                  break;
                case g2.MESSAGESETTINGS:
                  n3.messageSettings = t3[o3].value;
                  break;
                case g2.ADMINFORBIDTYPE:
                  n3.adminForbidType = t3[o3].value;
                  break;
                case g2.LEVEL:
                  n3.level = t3[o3].value;
                  break;
                case g2.ROLE:
                  n3.role = t3[o3].value;
                  break;
                default:
                  M2.w("".concat(this._n, "._getLatestProfileFromResponse unknown tag:"), t3[o3].tag, t3[o3].value);
              }
        return n3;
      } }, { key: "updateMyProfile", value: function(o3) {
        var i3 = this, a3 = "".concat(this._n, ".").concat("updateMyProfile");
        if (o3.nick && false === this._userM.filterProfanity("nick", o3))
          return D2({ code: L2.PROFANITY_FOUND });
        if (o3.selfSignature && false === this._userM.filterProfanity("selfSignature", o3))
          return D2({ code: L2.PROFANITY_FOUND });
        var s3 = new G2("updateMyProfile"), e3 = (s3.setMessage(JSON.stringify(o3)), new ei2().validate(o3));
        if (!e3.valid)
          return s3.setCode(L2.UPDATE_PROFILE_INVALID_PARAM).setMoreMessage("info:".concat(e3.tips)).end(), M2.e("".concat(a3, " info:").concat(e3.tips)), D2({ code: L2.UPDATE_PROFILE_INVALID_PARAM });
        var t3, r3, n3 = [];
        for (t3 in o3)
          Object.prototype.hasOwnProperty.call(o3, t3) && ("profileCustomField" === t3 ? o3.profileCustomField.forEach(function(e4) {
            n3.push({ tag: e4.key, value: e4.value });
          }) : n3.push({ tag: g2[t3.toUpperCase()], value: o3[t3] }));
        return 0 === n3.length ? (e3 = new E2({ code: L2.UPDATE_PROFILE_NO_KEY }), s3.setError(e3).end(), M2.e("".concat(a3, " failed. error:"), e3), D2(e3)) : (r3 = this._userM.getMyAccount(), this._userM.req({ P: k2.UPDATE_MY_PROFILE, data: { fromAccount: r3, profileItem: n3 } }).then(function(e4) {
          s3.end(), M2.i("".concat(a3, " ok"));
          var t4 = i3._update(r3, o3), n4 = t4.isProfileUpdated, t4 = t4.latestProfile;
          return true === n4 && i3._userM.emitOEvt(h2.PROFILE_UPDATED, [t4]), T2(t4);
        }).catch(function(e4) {
          return s3.setError(e4).end(), M2.e("".concat(a3, " failed. error:"), e4), D2(e4);
        }));
      } }, { key: "onProfileModified", value: function(e3) {
        var t3 = e3.dataList;
        if (!S2(t3)) {
          var n3 = t3.length;
          M2.d("".concat(this._n, ".onProfileModified count:").concat(n3, " dataList:"), e3.dataList);
          for (var o3 = [], i3 = 0; i3 < n3; i3++) {
            var a3 = t3[i3].userID, a3 = this._update(a3, this._getLatestProfileFromResponse(a3, t3[i3].profileList)), s3 = a3.isProfileUpdated, a3 = a3.latestProfile;
            true === s3 && o3.push(a3);
          }
          0 < o3.length && (this._userM.emitIEvt(P2.PROFILE_UPDATED, o3), this._userM.emitOEvt(h2.PROFILE_UPDATED, o3));
        }
      } }, { key: "_fill", value: function() {
        if (0 === this.accountProfileMap.size) {
          for (var e3 = this._getCachedProfiles(), t3 = Date.now(), n3 = 0, o3 = e3.length; n3 < o3; n3++)
            t3 - e3[n3].lastUpdatedTime < this.expirationTime && this.accountProfileMap.set(e3[n3].userID, e3[n3]);
          M2.l("".concat(this._n, "._fill from cache, size:").concat(this.accountProfileMap.size));
        }
      } }, { key: "_update", value: function(e3, t3) {
        var n3, o3 = false, i3 = Date.now();
        return this._contains(e3) ? (n3 = this._getProfileFromMap(e3), t3.profileCustomField && true === kt2(n3.profileCustomField, t3.profileCustomField) && (n3.lastUpdatedTime = i3, o3 = true), 0 < _t3(n3, t3, ["profileCustomField"]) && (n3.lastUpdatedTime = i3, o3 = true)) : (n3 = new ei2(t3), !this._userM.isMyFriend(e3) && e3 !== this._userM.getMyAccount() || (n3.lastUpdatedTime = i3, o3 = true, this.accountProfileMap.set(e3, n3))), this._flush(e3 === this._userM.getMyAccount()), true === o3 && M2.l("".concat(this._n, "._update account:").concat(e3, " isUpdated:").concat(o3)), { isProfileUpdated: o3, latestProfile: n3 };
      } }, { key: "_flush", value: function(e3) {
        var t3 = p2(this.accountProfileMap.values()), n3 = this._userM.getStorageModule();
        M2.d("".concat(this._n, "._flush length:").concat(t3.length, " flushAtOnce:").concat(e3)), n3.setItem(this.TAG, t3, e3);
      } }, { key: "_contains", value: function(e3) {
        return this.accountProfileMap.has(e3);
      } }, { key: "_getProfileFromMap", value: function(e3) {
        return this.accountProfileMap.get(e3);
      } }, { key: "_getCachedProfiles", value: function() {
        var e3 = this._userM.getStorageModule().getItem(this.TAG);
        return S2(e3) ? [] : e3;
      } }, { key: "onConvProfileUpdated", value: function(e3) {
        for (var t3, n3, o3, i3 = [], a3 = 0, s3 = e3.length; a3 < s3; a3++)
          n3 = (t3 = e3[a3]).userID, this._userM.isMyFriend(n3) && (this._contains(n3) ? (o3 = this._getProfileFromMap(n3), 0 < _t3(o3, t3) && i3.push(n3)) : i3.push(t3.userID));
        0 !== i3.length && (M2.l("".concat(this._n, ".onConvProfileUpdated toAccountList:").concat(i3)), this.getUserProfile({ userIDList: i3 }));
      } }, { key: "getNickAndAvatarByUserID", value: function(e3) {
        return this._contains(e3) ? { nick: (e3 = this._getProfileFromMap(e3)).nick, avatar: e3.avatar } : { nick: "", avatar: "" };
      } }, { key: "getUserNickAndAvatar", value: function(e3) {
        var t3, n3 = this, o3 = p2(new Set(e3)), i3 = (M2.l("".concat(this._n, ".getUserNickAndAvatar userIDList.length:").concat(e3.length, " uniqueUserIDList.length:").concat(o3.length)), []);
        return 0 === e3.length ? Promise.resolve(i3) : (e3 = this._createUserIDListGroup(o3), t3 = [], e3.forEach(function(e4) {
          t3.push(n3.getUserProfile({ userIDList: e4 }));
        }), Promise.all(t3).then(function(e4) {
          return e4.forEach(function(e5) {
            e5 = e5.data.map(function(e6) {
              return { userID: e6.userID, nick: e6.nick, avatar: e6.avatar };
            });
            i3.push.apply(i3, p2(e5));
          }), i3;
        }));
      } }, { key: "_createUserIDListGroup", value: function(e3) {
        for (var t3 = [], n3 = 0; n3 < e3.length; )
          t3.push(e3.slice(n3, n3 += 100));
        return t3;
      } }, { key: "reset", value: function() {
        this._flush(true), this.accountProfileMap.clear();
      } }]), Fi2), Li2 = e2(function e3(t3) {
        d2(this, e3);
      }), Si2 = (e2(wi2, [{ key: "getLocalBlacklist", value: function() {
        return p2(this._blacklistMap.keys());
      } }, { key: "getBlacklist", value: function() {
        var o3 = this, i3 = "".concat(this._n, ".getBlacklist"), e3 = { fromAccount: this._userM.getMyAccount(), maxLimited: this.maxLimited, startIndex: 0, lastSequence: this.currentSequence }, a3 = new G2("getBlacklist");
        return this._userM.req({ P: k2.GET_BL, data: e3 }).then(function(e4) {
          var e4 = e4.data, t3 = e4.blackListItem, e4 = e4.currentSequence, n3 = S2(t3) ? 0 : t3.length;
          a3.setMessage("count:".concat(n3)).end(), M2.i("".concat(i3, " ok")), o3.currentSequence = e4, o3._handleResponse(t3, true), o3._userM.emitOEvt(h2.BLACKLIST_UPDATED, p2(o3._blacklistMap.keys()));
        }).catch(function(e4) {
          return a3.setError(e4).end(), M2.e("".concat(i3, " failed. error:"), e4), D2(e4);
        });
      } }, { key: "addBlacklist", value: function(t3) {
        var e3, n3, o3 = this, i3 = new G2("addToBlacklist"), a3 = "".concat(this._n, ".addBlacklist"), s3 = this._userM.getMyAccount();
        return 1 === t3.userIDList.length && t3.userIDList[0] === s3 ? (n3 = this._userM.getErrMsg(e3 = L2.CANNOT_ADD_SELF_TO_BLACKLIST), i3.setCode(e3).setMessage(n3).end(), n3 = new E2({ code: e3 }), M2.e("".concat(a3, " failed. error:"), n3), D2(n3)) : (t3.userIDList.includes(s3) && (t3.userIDList = t3.userIDList.filter(function(e4) {
          return e4 !== s3;
        })), t3.fromAccount = this._userM.getMyAccount(), t3.toAccount = t3.userIDList, this._userM.req({ P: k2.ADD_TO_BL, data: t3 }).then(function(e4) {
          return i3.setMessage(5 < t3.userIDList.length ? "userIDList.length:".concat(t3.userIDList.length) : "userIDList:".concat(t3.userIDList)).end(), M2.i("".concat(a3, " ok")), o3._handleResponse(e4.resultItem, true), C2(p2(o3._blacklistMap.keys()));
        }).catch(function(e4) {
          return i3.setError(e4).end(), M2.e("".concat(a3, " failed. error:"), e4), D2(e4);
        }));
      } }, { key: "_handleResponse", value: function(e3, t3) {
        if (!S2(e3))
          for (var n3, o3, i3, a3 = 0, s3 = e3.length; a3 < s3; a3++)
            o3 = e3[a3].to, i3 = e3[a3].resultCode, !N2(i3) && 0 !== i3 || (t3 ? ((n3 = this._blacklistMap.has(o3) ? this._blacklistMap.get(o3) : new Li2()).userID = o3, S2(e3[a3].addBlackTimeStamp) || (n3.timeStamp = e3[a3].addBlackTimeStamp), this._blacklistMap.set(o3, n3)) : this._blacklistMap.has(o3) && (n3 = this._blacklistMap.get(o3), this._blacklistMap.delete(o3)));
        M2.l("".concat(this._n, "._handleResponse total:").concat(this._blacklistMap.size, " bAdd:").concat(t3));
      } }, { key: "deleteBlacklist", value: function(t3) {
        var n3 = this, o3 = "".concat(this._n, ".deleteBlacklist"), i3 = new G2("removeFromBlacklist");
        return t3.fromAccount = this._userM.getMyAccount(), t3.toAccount = t3.userIDList, this._userM.req({ P: k2.RM_FROM_BL, data: t3 }).then(function(e3) {
          return i3.setMessage(5 < t3.userIDList.length ? "userIDList.length:".concat(t3.userIDList.length) : "userIDList:".concat(t3.userIDList)).end(), M2.i("".concat(o3, " ok")), n3._handleResponse(e3.data.resultItem, false), C2(p2(n3._blacklistMap.keys()));
        }).catch(function(e3) {
          return i3.setError(e3).end(), M2.e("".concat(o3, " failed. error:"), e3), D2(e3);
        });
      } }, { key: "onAccountDeleted", value: function(e3) {
        for (var t3 = 0, n3 = e3.length; t3 < n3; t3++) {
          var o3 = e3[t3];
          this._blacklistMap.has(o3) && this._blacklistMap.delete(o3);
        }
        var i3 = e3.length;
        0 < i3 && (M2.l("".concat(this._n, ".onAccountDeleted count:").concat(i3, " ").concat(i3 < 30 ? "userIDList:".concat(e3) : "")), this._userM.emitOEvt(h2.BLACKLIST_UPDATED, p2(this._blacklistMap.keys())));
      } }, { key: "onAccountAdded", value: function(e3) {
        for (var t3, n3 = [], o3 = 0, i3 = e3.length; o3 < i3; o3++)
          t3 = e3[o3], this._blacklistMap.has(t3) || (this._blacklistMap.set(t3, new Li2({ userID: t3 })), n3.push(t3));
        0 < n3.length && (M2.l("".concat(this._n, ".onAccountAdded count:").concat(n3.length, " userIDList:"), n3), this._userM.emitOEvt(h2.BLACKLIST_UPDATED, p2(this._blacklistMap.keys())));
      } }, { key: "reset", value: function() {
        this._blacklistMap.clear(), this.startIndex = 0, this.maxLimited = 100, this.currentSequence = 0;
      } }]), wi2), ki2 = (e2(bi2, [{ key: "_onCloudConfig", value: function() {
        var e3 = this._userM.getCloudConfig("status_query_count"), t3 = this._userM.getCloudConfig("status_sub_count"), n3 = this._userM.getCloudConfig("status_unsub_count");
        M2.l("".concat(this._n, "._onCloudConfig statusQueryCount:").concat(e3, " statusSubscribeCount:").concat(t3) + " statusUnsubscribeCount:".concat(n3)), N2(e3) || (this.MAX_QUERY_USER_COUNT = parseInt(e3, 10)), N2(e3) || (this.MAX_SUBSCRIBE_USER_COUNT = parseInt(t3, 10)), N2(e3) || (this.MAX_UNSUBSCRIBE_USER_COUNT = parseInt(n3, 10));
      } }, { key: "onUserStatusUpdated", value: function(e3) {
        var e3 = e3.dataList, o3 = this._userM.getMyUserID(), i3 = this._userM.get(12), e3 = e3.map(function(e4) {
          var t3 = e4.to, n3 = e4.statusType, e4 = e4.customStatus, e4 = Wo(e4);
          return t3 === o3 && i3.setCustomStatus(e4), { userID: t3, statusType: n3, customStatus: e4 };
        });
        M2.l("".concat(this._n, ".onUserStatusUpdated list:").concat(JSON.stringify(e3))), this._userM.emitOEvt(h2.USER_STATUS_UPDATED, e3);
      } }, { key: "setSelfStatus", value: function(e3) {
        var t3, n3, o3 = this, i3 = "".concat(this._n, ".setSelfStatus");
        return false === this._userM.filterProfanity("customStatus", e3) ? D2({ code: L2.PROFANITY_FOUND }) : (t3 = new G2("setSelfStatus"), n3 = e3.customStatus, this._userM.req({ P: k2.SET_SELF_STATUS, data: { customStatus: n3 } }).then(function(e4) {
          return t3.setMessage("customStatus:".concat(n3)).end(), M2.l("".concat(i3, " ok. customStatus:").concat(n3)), o3._userM.get(12).setCustomStatus(n3), C2({ userID: o3._userM.getMyUserID(), statusType: 1, customStatus: n3 });
        }).catch(function(e4) {
          return t3.setError(e4).end(), M2.e("".concat(i3, " failed. error:"), e4), D2(e4);
        }));
      } }, { key: "getUserStatus", value: function(e3) {
        var o3 = "".concat(this._n, ".").concat("getUserStatus"), e3 = e3.userIDList, i3 = void 0 === e3 ? [] : e3, e3 = this._userM.getMyUserID(), t3 = p2(i3), a3 = void 0, n3 = t3.indexOf(e3);
        if (-1 < n3 && (t3.splice(n3, 1), a3 = { userID: e3, statusType: 1, customStatus: this._userM.get(12).getCustomStatus() }), 0 === t3.length)
          return T2({ successUserList: [a3], failureUserList: [] });
        if (!this._userM.canIUse(_2.USER_STATUS))
          return this._userM.noUse("getUserStatus");
        t3.length > this.MAX_QUERY_USER_COUNT && (M2.w("".concat(o3, " ").concat($t2(this.MAX_QUERY_USER_COUNT))), t3 = i3.slice(0, this.MAX_QUERY_USER_COUNT));
        var s3 = new G2("getUserStatus");
        return this._userM.req({ P: k2.GET_USER_STATUS, data: { userIDList: t3 } }).then(function(e4) {
          var e4 = e4.data, t4 = e4.successUserList, t4 = void 0 === t4 ? [] : t4, e4 = e4.failureUserList, e4 = void 0 === e4 ? [] : e4, t4 = t4.map(function(e5) {
            var t5 = e5.userID, n5 = e5.statusType, e5 = e5.customStatus;
            return { userID: t5, statusType: n5, customStatus: Wo(e5) };
          }), e4 = e4.map(function(e5) {
            var t5 = e5.userID, n5 = e5.invalidUserID, o4 = e5.errorCode, e5 = e5.errorInfo;
            return { userID: S2(n5) ? t5 : n5, code: o4, message: e5 };
          }), n4 = (N2(a3) || t4.unshift(a3), "userID count:".concat(i3.length, ", success count:").concat(t4.length, ", fail count:").concat(e4.length));
          return s3.setMessage("".concat(n4)).end(), M2.l("".concat(o3, " ok. ").concat(n4, ".")), C2({ successUserList: t4, failureUserList: e4 });
        }).catch(function(e4) {
          return s3.setMessage("userID count:".concat(i3.length)).setError(e4).end(), M2.e("".concat(o3, " failed. error:"), e4), D2(e4);
        });
      } }, { key: "subscribeUserStatus", value: function(e3) {
        var t3, n3, o3, i3, a3 = "subscribeUserStatus";
        return this._userM.canIUse(_2.USER_STATUS) ? (t3 = "".concat(this._n, ".").concat(a3), (n3 = p2(e3 = void 0 === (e3 = e3.userIDList) ? [] : e3)).length > this.MAX_SUBSCRIBE_USER_COUNT && (M2.w("".concat(t3, " ").concat($t2(this.MAX_SUBSCRIBE_USER_COUNT))), n3 = e3.slice(0, this.MAX_SUBSCRIBE_USER_COUNT)), o3 = new G2(a3), i3 = "userID count:".concat(e3.length), M2.l("".concat(t3, " ").concat(i3)), this._userM.req({ P: k2.SUB_USER_STATUS, data: { userIDList: n3 } }).then(function(e4) {
          e4 = e4.data.failureUserList, e4 = (void 0 === e4 ? [] : e4).map(function(e5) {
            var t4 = e5.userID, n4 = e5.invalidUserID, o4 = e5.errorCode, e5 = e5.errorInfo;
            return { userID: S2(n4) ? t4 : n4, code: o4, message: e5 };
          });
          return o3.setMessage("".concat(i3, " fail count:").concat(e4.length)).end(), M2.l("".concat(t3, " ok. fail count:").concat(e4.length, ".")), C2({ failureUserList: e4 });
        }).catch(function(e4) {
          return o3.setMessage(i3).setError(e4).end(), M2.e("".concat(t3, " failed. error:"), e4), D2(e4);
        })) : this._userM.noUse(a3);
      } }, { key: "unsubscribeUserStatus", value: function(e3) {
        var t3, n3, o3, i3, a3 = "unsubscribeUserStatus";
        return this._userM.canIUse(_2.USER_STATUS) ? (t3 = "".concat(this._n, ".").concat(a3), n3 = p2(e3 = void 0 === (e3 = (e3 || {}).userIDList) ? [] : e3), e3.length > this.MAX_UNSUBSCRIBE_USER_COUNT && (M2.w("".concat(t3, " ").concat($t2(this.MAX_UNSUBSCRIBE_USER_COUNT))), n3 = e3.slice(0, this.MAX_UNSUBSCRIBE_USER_COUNT)), o3 = new G2(a3), i3 = "userID count:".concat(e3.length), M2.l("".concat(t3, " ").concat(i3)), e3 = { userIDList: n3 }, 0 === n3.length && (e3.userIDList = void 0, e3.unsubscribeAll = 1), this._userM.req({ P: k2.UNSUB_USER_STATUS, data: e3 }).then(function(e4) {
          e4 = e4.data.failureUserList, e4 = (void 0 === e4 ? [] : e4).map(function(e5) {
            var t4 = e5.userID, n4 = e5.invalidUserID, o4 = e5.errorCode, e5 = e5.errorInfo;
            return { userID: S2(n4) ? t4 : n4, code: o4, message: e5 };
          });
          return o3.setMessage("".concat(i3, " fail count:").concat(e4.length)).end(), M2.l("".concat(t3, " ok. fail count:").concat(e4.length, ".")), C2({ failureUserList: e4 });
        }).catch(function(e4) {
          return o3.setMessage("".concat(i3)).setError(e4).end(), M2.e("".concat(t3, " failed. error:"), e4), D2(e4);
        })) : this._userM.noUse(a3);
      } }, { key: "reset", value: function() {
        this.MAX_QUERY_USER_COUNT = 500, this.MAX_SUBSCRIBE_USER_COUNT = 100, this.MAX_UNSUBSCRIBE_USER_COUNT = 100;
      } }]), bi2), Ai2 = (t2(Ui2, u2), Jo = n2(Ui2), e2(Ui2, [{ key: "onContextUpdated", value: function(e3) {
        this._profileHandler.getMyProfile(), this._blacklistHandler.getBlacklist();
      } }, { key: "mockOnNickAvatarModified", value: function(e3, t3) {
        M2.l("".concat(this._n, "._mockOnNickAvatarModified nick:").concat(e3, " avatar:").concat(t3)), this.onProfileModified({ dataList: [{ pushType: 1, userID: this.getMyUserID(), profileList: [{ tag: g2.NICK, value: e3 }, { tag: g2.AVATAR, value: t3 }] }] });
      } }, { key: "onProfileModified", value: function(e3) {
        this._profileHandler.onProfileModified(e3);
      } }, { key: "onRelationChainModified", value: function(e3) {
        var t3, n3, e3 = e3.dataList;
        S2(e3) || (t3 = [], e3.forEach(function(e4) {
          e4.blackListDelAccount && t3.push.apply(t3, p2(e4.blackListDelAccount));
        }), 0 < t3.length && this._blacklistHandler.onAccountDeleted(t3), n3 = [], e3.forEach(function(e4) {
          e4.blackListAddAccount && n3.push.apply(n3, p2(e4.blackListAddAccount));
        }), 0 < n3.length && this._blacklistHandler.onAccountAdded(n3));
      } }, { key: "onConvProfileUpdated", value: function(e3) {
        this._profileHandler.onConvProfileUpdated(e3);
      } }, { key: "getMyAccount", value: function() {
        return this.getMyUserID();
      } }, { key: "getMyNick", value: function() {
        return this._profileHandler.getNickAndAvatarByUserID(this.getMyUserID()).nick;
      } }, { key: "getMyProfile", value: function() {
        return this._profileHandler.getMyProfile();
      } }, { key: "getStorageModule", value: function() {
        return this.get(13);
      } }, { key: "filterProfanity", value: function(e3, t3) {
        var n3, o3 = this.get(29);
        return !o3 || (n3 = (o3 = o3.filterText(t3[e3], "user_profile")).isAllowedToSend, o3 = o3.modifiedText, true === n3 && (t3[e3] = o3, true));
      } }, { key: "isMyFriend", value: function(e3) {
        var t3 = this.get(8);
        return !!t3 && t3.isMyFriend(e3);
      } }, { key: "getUserProfile", value: function(e3) {
        return this._profileHandler.getUserProfile(e3);
      } }, { key: "updateMyProfile", value: function(e3) {
        return this._profileHandler.updateMyProfile(e3);
      } }, { key: "getNickAndAvatarByUserID", value: function(e3) {
        return this._profileHandler.getNickAndAvatarByUserID(e3);
      } }, { key: "getUserNickAndAvatar", value: function(e3) {
        return this._profileHandler.getUserNickAndAvatar(e3);
      } }, { key: "getLocalBlacklist", value: function() {
        var e3 = this._blacklistHandler.getLocalBlacklist();
        return T2(e3);
      } }, { key: "addBlacklist", value: function(e3) {
        return this._blacklistHandler.addBlacklist(e3);
      } }, { key: "deleteBlacklist", value: function(e3) {
        return this._blacklistHandler.deleteBlacklist(e3);
      } }, { key: "onUserStatusUpdated", value: function(e3) {
        this._userStatusHandler.onUserStatusUpdated(e3);
      } }, { key: "setSelfStatus", value: function(e3) {
        return this._userStatusHandler.setSelfStatus(e3);
      } }, { key: "getUserStatus", value: function(e3) {
        return this._userStatusHandler.getUserStatus(e3);
      } }, { key: "subscribeUserStatus", value: function(e3) {
        return this._userStatusHandler.subscribeUserStatus(e3);
      } }, { key: "unsubscribeUserStatus", value: function(e3) {
        return this._userStatusHandler.unsubscribeUserStatus(e3);
      } }, { key: "reset", value: function() {
        M2.l("".concat(this._n, ".reset")), this._profileHandler.reset(), this._blacklistHandler.reset(), this._userStatusHandler.reset();
      } }]), Ui2), Ri2 = (e2(Pi2, [{ key: "isLoggedIn", value: function() {
        return this._isLoggedIn;
      } }, { key: "isOversea", value: function() {
        return this._oversea;
      } }, { key: "isPrivateNetWork", value: function() {
        return this._proxyServer;
      } }, { key: "isDevMode", value: function() {
        return this._isDevMode;
      } }, { key: "isTestEnv", value: function() {
        return this._isTestEnv;
      } }, { key: "isPartialUpdatedConvs", value: function() {
        return this._isPartialUpdatedConvs;
      } }, { key: "isSingaporeSite", value: function() {
        return 2e7 <= this._SDKAppID && this._SDKAppID < 3e7 || 172e7 <= this._SDKAppID && this._SDKAppID < 173e7;
      } }, { key: "isKoreaSite", value: function() {
        return 3e7 <= this._SDKAppID && this._SDKAppID < 4e7 || 173e7 <= this._SDKAppID && this._SDKAppID < 174e7;
      } }, { key: "isGermanySite", value: function() {
        return 4e7 <= this._SDKAppID && this._SDKAppID < 5e7 || 174e7 <= this._SDKAppID && this._SDKAppID < 175e7;
      } }, { key: "isIndiaSite", value: function() {
        return 5e7 <= this._SDKAppID && this._SDKAppID < 6e7 || 175e7 <= this._SDKAppID && this._SDKAppID < 176e7;
      } }, { key: "isJapanSite", value: function() {
        return 6e7 <= this._SDKAppID && this._SDKAppID < 7e7 || 176e7 <= this._SDKAppID && this._SDKAppID < 177e7;
      } }, { key: "isUSASite", value: function() {
        return 7e7 <= this._SDKAppID && this._SDKAppID < 8e7 || 177e7 <= this._SDKAppID && this._SDKAppID < 178e7;
      } }, { key: "isIndonesiaSite", value: function() {
        return 8e7 <= this._SDKAppID && this._SDKAppID < 9e7 || 178e7 <= this._SDKAppID && this._SDKAppID < 179e7;
      } }, { key: "isIntl", value: function() {
        return 0 === (e3 = this._SDKAppID) || 2e7 <= e3 && e3 < 9e7 || 172e7 <= e3 && e3 < 179e7;
        var e3;
      } }, { key: "isUnlimitedAVChatRoom", value: function() {
        return this._unlimitedAVChatRoom;
      } }, { key: "isUsingChatCore", value: function() {
        return this._isUsingChatCore;
      } }, { key: "setUsingChatCore", value: function(e3) {
        this._isUsingChatCore = e3;
      } }, { key: "getUIPlatform", value: function() {
        return this._uiPlatform;
      } }, { key: "setUIPlatform", value: function(e3) {
        this._uiPlatform = e3;
      } }, { key: "setUserID", value: function(e3) {
        this._userID = e3;
      } }, { key: "getUserID", value: function() {
        return this._userID;
      } }, { key: "setUserSig", value: function(e3) {
        this._userSig = e3;
      } }, { key: "getUserSig", value: function() {
        return this._userSig;
      } }, { key: "getSDKAppID", value: function() {
        return this._SDKAppID;
      } }, { key: "setTinyID", value: function(e3) {
        this._tinyID = e3, this._isLoggedIn = true;
      } }, { key: "getTinyID", value: function() {
        return this._tinyID;
      } }, { key: "setCustomStatus", value: function(e3) {
        this._customStatus = e3;
      } }, { key: "getCustomStatus", value: function() {
        return this._customStatus;
      } }, { key: "getScene", value: function() {
        return Ue2 ? window.tencent_cloud_im_csig_flutter_for_web_25F_cy : this._isTUIKit() ? "tuikit" : this._scene;
      } }, { key: "getInstanceID", value: function() {
        return this._instanceID;
      } }, { key: "getStatusInstanceID", value: function() {
        return this._statusInstanceID;
      } }, { key: "setStatusInstanceID", value: function(e3) {
        this._statusInstanceID = e3;
      } }, { key: "getVersion", value: function() {
        return this._version;
      } }, { key: "getA2Key", value: function() {
        return this._a2Key;
      } }, { key: "setA2Key", value: function(e3) {
        this._a2Key = e3;
      } }, { key: "getContentType", value: function() {
        return this._contentType;
      } }, { key: "getProxyServer", value: function() {
        return this._proxyServer;
      } }, { key: "getFileUploadProxy", value: function() {
        return this._fileUploadProxy;
      } }, { key: "getFileDownloadProxy", value: function() {
        return this._fileDownloadProxy;
      } }, { key: "setApplicationID", value: function(e3) {
        this._applicationID = e3;
      } }, { key: "getApplicationID", value: function() {
        return this._applicationID;
      } }, { key: "setDowloadFileAuthKey", value: function(e3) {
        this._authKey = e3;
      } }, { key: "getDowloadFileAuthKey", value: function() {
        return this._authKey;
      } }, { key: "setCustomLoginInfo", value: function(e3) {
        this._customLoginInfo = e3;
      } }, { key: "getCustomLoginInfo", value: function() {
        return this._customLoginInfo;
      } }, { key: "_isTUIKit", value: function() {
        var e3 = false, t3 = false, n3 = false, o3 = false, i3 = [];
        v2 && (i3 = Object.keys(I2));
        for (var a3 = 0, s3 = (i3 = Ce2 ? Me2 ? Object.keys(uni) : Object.keys(window) : i3).length; a3 < s3; a3++)
          if (i3[a3].toLowerCase().includes("uikit")) {
            e3 = true;
            break;
          }
        var r3, i3 = null, c3 = (v2 && !lt2(I2.createGamePortal) && lt2(getApp) && !N2(getApp()) && (r3 = getApp().globalData, f2(r3)) && true === r3.isTUIKit && (t3 = true), true === this._m.get(13).getStorageSync("TIM_".concat(this._SDKAppID, "_isTUIKit")) && (n3 = true), null);
        if (_e3 && !fe2 && "undefined" == typeof uni && __wxConfig && (c3 = __wxConfig.pages), ge2 && "undefined" == typeof uni && __qqConfig && (c3 = __qqConfig.pages), O2(c3) && 0 < c3.length) {
          for (var u3 = 0, l3 = c3.length; u3 < l3; u3++)
            if (c3[u3].toLowerCase().includes("tui")) {
              o3 = true;
              break;
            }
          c3 = null;
        }
        return e3 || t3 || n3 || o3;
      } }, { key: "reset", value: function() {
        this._isLoggedIn = false, this._userSig = "", this._a2Key = "", this._tinyID = "", this._customStatus = "", this._statusInstanceID = 0;
      } }]), Pi2), Oi2 = { "k-vue2-pc": 1, "k-vue2-h5": 2, "k-vue2-h5-uni": 3, "k-vue2-app-uni": 4, "k-vue2-mp-uni": 5, "k-vue2-pc-uni": 6, "k-vue3-pc": 7, "k-vue3-h5": 8, "k-vue3-h5-uni": 9, "k-vue3-app-uni": 10, "k-vue3-mp-uni": 11, "k-vue3-pc-uni": 12, "k-rn": 13 }, Ni2 = (t2(Gi2, u2), jo = n2(Gi2), e2(Gi2, [{ key: "onCheckTimer", value: function(e3) {
        this.isLoggedIn() && e3 % this._helloInterval == 0 && this._hello();
      } }, { key: "getPushModule", value: function() {
        var e3 = void 0, t3 = this.get(36), n3 = this.get(28);
        return t3.canIUseTIMPush() ? e3 = t3 : n3.canIUseOfflinePush() && (e3 = n3), e3;
      } }, { key: "login", value: function(e3) {
        if (this.isLoggedIn())
          return n3 = this.getMyUserID(), (n3 = this.getErrMsg("RepeatLogin", n3)) && M2.w(n3), T2({ actionStatus: "OK", errorCode: 0, errorInfo: n3, repeatLogin: true });
        if (Date.now() - this._lastLoginTs <= 15e3)
          return this.warn("LoggingIn", e3.userID), D2({ code: L2.REPEAT_LOGIN });
        M2.l("".concat(this._n, ".login userID:").concat(e3.userID));
        var t3, n3 = this._checkLoginInfo(e3);
        return 0 !== n3.code ? D2(n3) : (n3 = this.get(12), t3 = e3.userID, e3 = e3.userSig, n3.setUserID(t3), n3.setUserSig(e3), this.get(20).updateProtocolConfig(), this._login());
      } }, { key: "_login", value: function() {
        var _3 = this, h3 = this.get(12), g3 = h3.getScene(), e3 = 0, t3 = g3, f3 = (g3 && g3.startsWith("k-") && (t3 = Oi2[g3], g3 = "tuikit"), new G2("login")), n3 = (f3.setMessage("".concat(t3)).setMoreMessage("identifier:".concat(this.getMyUserID())), "tuikit" === g3), o3 = 0, n3 = (Me2 ? o3 = n3 ? 3 === t3 || 4 === t3 || 5 === t3 || 6 === t3 ? 31 : 9 === t3 || 10 === t3 || 11 === t3 || 12 === t3 ? 32 : 4 : 3 : v2 ? o3 = he2 ? 36 : "tuikit" === g3 ? 12 : 11 : Ce2 ? o3 = Ue2 ? "flutter_web_uikit" === g3 ? 21 : 20 : this._isReactUIKit() ? Pe2 ? 25 : 24 : n3 ? 1 === t3 || 2 === t3 ? 29 : 7 === t3 || 8 === t3 ? 30 : Pe2 ? 17 : 14 : Pe2 ? 16 : 13 : 13 === t3 && (o3 = 38), f3.setUIPlatform(o3), h3.setUIPlatform(o3), this.getPushModule()), m3 = (n3 && (this._isWebUniapp = n3.getUniAppPlatform(), t3 = this._getStatusInstanceID(), h3.setStatusInstanceID(t3), this.get(20).updateProtocolConfig(), e3 = n3.getDeviceBrand()), "".concat(this._n, "._login"));
        return this._lastLoginTs = Date.now(), this.req({ P: k2.LOGIN, data: { deviceBrand: e3, isWebUniapp: this._isWebUniapp, customInfo: h3.getCustomLoginInfo() } }).then(function(e4) {
          _3._lastLoginTs = 0;
          var t4 = Date.now(), n4 = null, o4 = e4.data, i3 = o4.a2Key, a3 = o4.tinyID, s3 = o4.helloInterval, r3 = o4.instanceID, c3 = o4.timeStamp, u3 = o4.customStatus, u3 = void 0 === u3 ? "" : u3, l3 = o4.purchaseBits, o4 = o4.authKey, o4 = void 0 === o4 ? "" : o4, d3 = 1e3 * c3, p3 = t4 - f3.getStartTs(), p3 = d3 + parseInt(p3 / 2) - t4, t4 = f3.getStartTs() + p3;
          if (f3.start(t4), t4 = d3, Ye2 = p3, (d3 = /* @__PURE__ */ new Date()).setTime(t4), M2.i("baseTime from server:".concat(d3, " offset:").concat(Ye2)), a3) {
            if (i3)
              return t4 = _3.get(21).getSocketID(), d3 = Wo(u3), u3 = "socketID:".concat(t4, " scene:").concat(g3, " helloInterval:").concat(s3, " instanceID:").concat(r3, " timeStamp:").concat(c3) + " offset:".concat(p3, " customStatus:").concat(d3, " isWebUniapp:").concat(_3._isWebUniapp), M2.l("".concat(m3, " ok. ").concat(u3)), c3 = t4 = "", _e3 && lt2(I2.getAccountInfoSync) && (p3 = I2.getAccountInfoSync().miniProgram) && (t4 = p3.appId, c3 = p3.envVersion), f3.setMoreMessage("".concat(u3, " href:").concat(Ce2 ? window.location.href : "", " mpAppId:").concat(t4, " envVersion:").concat(c3, " authKey:").concat(o4)).end(), h3.setA2Key(i3), h3.setTinyID(a3), h3.setStatusInstanceID(r3), h3.setCustomStatus(d3), h3.setDowloadFileAuthKey(o4), l3 && _3.get(27).onPushedConfig({ errorCode: 0, expiredTime: 0, purchaseBits: l3 }), _3.get(20).updateProtocolConfig(), _3.emitIEvt(P2.A2KEY_AND_TINYID_UPDATED), _3._helloInterval = s3, _3.triggerReady(), (p3 = _3.getPushModule()) && (uni.setStorageSync("timUniAppInstanceID", r3), p3.init()), _3._fetchCloudControlConfig(), _3.get(29).init(), e4;
            n4 = new E2({ code: L2.NO_A2KEY });
          } else
            n4 = new E2({ code: L2.NO_TINYID });
          throw f3.setError(n4).end(), n4;
        }).catch(function(e4) {
          return f3.setError(e4).end(true), _3._m.setNotReadyReason(L2.LOGIN_FAILED), M2.e("".concat(m3, " failed. error:"), e4), _3._lastLoginTs = 0, _3._m.onLoginFailed(), D2(e4);
        });
      } }, { key: "logout", value: function() {
        var t3 = this, e3 = 0 < arguments.length && void 0 !== arguments[0] ? arguments[0] : 0, n3 = "".concat(this._n, ".logout"), o3 = this.isLoggedIn();
        return M2.i("".concat(n3, " type:").concat(e3, " isLoggedIn:").concat(o3, " isWebUniapp:").concat(this._isWebUniapp)), o3 ? (new G2("logout").setMessage("identifier:".concat(this.getMyUserID())).end(true), 0 === e3 && this._m.setNotReadyReason(L2.LOGGED_OUT), this.req({ P: k2.LOGOUT, data: { type: e3, isWebUniapp: this._isWebUniapp } }).then(function() {
          return t3.resetReady(), T2({});
        }).catch(function(e4) {
          return M2.e("".concat(n3, " error:"), e4), t3.resetReady(), T2({});
        })) : D2({ code: L2.USER_NOT_LOGGED_IN });
      } }, { key: "getLoginUser", value: function() {
        return this.isLoggedIn() ? this.getMyUserID() : "";
      } }, { key: "_fetchCloudControlConfig", value: function() {
        this.get(23).fetchConfig();
      } }, { key: "_getStatusInstanceID", value: function() {
        return uni.getStorageSync("timUniAppInstanceID") || 0;
      } }, { key: "_hello", value: function() {
        var t3 = this;
        this._lastWsHelloTs = Date.now(), this.req({ P: k2.HELLO, data: { isWebUniapp: this._isWebUniapp } }).catch(function(e3) {
          M2.w("".concat(t3._n, "._hello error:"), e3);
        });
      } }, { key: "getLastWsHelloTs", value: function() {
        return this._lastWsHelloTs;
      } }, { key: "_checkLoginInfo", value: function(e3) {
        var t3 = 0;
        return S2(this.get(12).getSDKAppID()) ? t3 = L2.NO_SDKAPPID : S2(e3.userID) ? t3 = L2.NO_IDENTIFIER : S2(e3.userSig) && (t3 = L2.NO_USERSIG), { code: t3 };
      } }, { key: "_isReactUIKit", value: function() {
        return Ce2 && void 0 !== window.tencent_cloud_im_csig_react_uikit_23F_xa;
      } }, { key: "onMultipleAccountKickedOut", value: function(e3) {
        var t3 = this;
        new G2("kickedOut").setMessage("type:".concat(A2.KICKED_OUT_MULT_ACCOUNT, " newInstanceInfo:").concat(JSON.stringify(e3))).end(true), M2.w("".concat(this._n, ".onMultipleAccountKickedOut userID:").concat(this.getMyUserID(), " newInstanceInfo:"), e3), this.logout(1).then(function() {
          t3.emitOEvt(h2.KICKED_OUT, { type: A2.KICKED_OUT_MULT_ACCOUNT }), t3._m.setNotReadyReason(L2.KICKED_OUT_MULT_ACCOUNT), t3._m.reset();
        });
      } }, { key: "onMultipleDeviceKickedOut", value: function(e3) {
        var t3 = this;
        new G2("kickedOut").setMessage("type:".concat(A2.KICKED_OUT_MULT_DEVICE, " newInstanceInfo:").concat(JSON.stringify(e3))).end(true), M2.w("".concat(this._n, ".onMultipleDeviceKickedOut userID:").concat(this.getMyUserID(), " newInstanceInfo:"), e3), this.logout(1).then(function() {
          t3.emitOEvt(h2.KICKED_OUT, { type: A2.KICKED_OUT_MULT_DEVICE }), t3._m.setNotReadyReason(L2.KICKED_OUT_MULT_DEVICE), t3._m.reset();
        });
      } }, { key: "onUserSigExpired", value: function() {
        new G2("kickedOut").setMessage(A2.KICKED_OUT_USERSIG_EXPIRED).end(true), M2.w("".concat(this._n, ".onUserSigExpired userID:").concat(this.getMyUserID())), 0 !== this.get(12).getStatusInstanceID() && (this.emitOEvt(h2.KICKED_OUT, { type: A2.KICKED_OUT_USERSIG_EXPIRED }), this._m.setNotReadyReason(L2.KICKED_OUT_USERSIG_EXPIRED), this._m.reset());
      } }, { key: "onRestApiKickedOut", value: function(e3) {
        new G2("kickedOut").setMessage("type:".concat(A2.KICKED_OUT_REST_API, " newInstanceInfo:").concat(JSON.stringify(e3))).end(true), M2.w("".concat(this._n, ".onRestApiKickedOut userID:").concat(this.getMyUserID(), " newInstanceInfo:"), e3), 0 !== this.get(12).getStatusInstanceID() && (this.emitOEvt(h2.KICKED_OUT, { type: A2.KICKED_OUT_REST_API }), this._m.setNotReadyReason(L2.KICKED_OUT_REST_API), this._m.reset(), this.get(21).onRestApiKickedOut());
      } }, { key: "reset", value: function() {
        M2.l("".concat(this._n, ".reset")), this.resetReady(), this._helloInterval = 120, this._lastLoginTs = 0, this._lastWsHelloTs = 0, this._isWebUniapp = 0;
      } }]), Gi2);
      function Gi2(e3) {
        return d2(this, Gi2), (e3 = jo.call(this, e3))._n = "SignModule", e3._helloInterval = 120, e3._lastLoginTs = 0, e3._lastWsHelloTs = 0, e3._isWebUniapp = 0, Bo2.mixin(i2(e3)), e3;
      }
      function Pi2(e3, t3) {
        d2(this, Pi2), this._m = e3, this._isLoggedIn = false, this._SDKAppID = t3.SDKAppID, this._userID = t3.userID || "", this._userSig = t3.userSig || "", this._version = "3.4.7", this._a2Key = "", this._tinyID = "", this._customStatus = "", this._contentType = "json", this._unlimitedAVChatRoom = t3.unlimitedAVChatRoom, this._scene = t3.scene || "", this._oversea = t3.oversea, this._instanceID = t3.instanceID, this._statusInstanceID = 0, this._isDevMode = t3.devMode, this._isTestEnv = t3.testEnv, this._proxyServer = t3.proxyServer, this._fileUploadProxy = t3.fileUploadProxy, this._fileDownloadProxy = t3.fileDownloadProxy, this._applicationID = 0, this._isPartialUpdatedConvs = t3.partialUpdatedConversations, this._isUsingChatCore = false, this._uiPlatform = 0, this._authKey = "", this._customLoginInfo = "";
      }
      function Ui2(e3) {
        return d2(this, Ui2), (e3 = Jo.call(this, e3))._n = "UserModule", e3._profileHandler = new Ei2(i2(e3)), e3._blacklistHandler = new Si2(i2(e3)), e3._userStatusHandler = new ki2(i2(e3)), e3.getIEmitInst().on(P2.A2KEY_AND_TINYID_UPDATED, e3.onContextUpdated, i2(e3)), e3;
      }
      function bi2(e3) {
        d2(this, bi2), this._userM = e3, this._n = "UserStatusHandler", this.MAX_QUERY_USER_COUNT = 500, this.MAX_SUBSCRIBE_USER_COUNT = 100, this.MAX_UNSUBSCRIBE_USER_COUNT = 100, this._userM.getIEmitInst().on(P2.CLOUD_CONFIG, this._onCloudConfig, this);
      }
      function wi2(e3) {
        d2(this, wi2), this._userM = e3, this._n = "BlacklistHandler", this._blacklistMap = /* @__PURE__ */ new Map(), this.startIndex = 0, this.maxLimited = 100, this.currentSequence = 0;
      }
      function Fi2(e3) {
        d2(this, Fi2), this._userM = e3, this._n = "ProfileHandler", this.TAG = "profile", this.accountProfileMap = /* @__PURE__ */ new Map(), this.expirationTime = 864e5;
      }
      function qi2(e3) {
        return d2(this, qi2), (e3 = zo2.call(this, e3))._n = "TopicModule", e3._topicMap = /* @__PURE__ */ new Map(), e3._getTopicTimeMap = /* @__PURE__ */ new Map(), e3.TOPIC_CACHE_TIME = 300, e3.TOPIC_LAST_ACTIVE_TIME = 3600, e3.getIEmitInst().on(P2.CLOUD_CONFIG, e3._onCloudConfig, i2(e3)), e3;
      }
      function xi2(e3, t3) {
        d2(this, xi2), this.topicID = "", this.topicName = "", this.avatar = "", this.introduction = "", this.notification = "", this.unreadCount = 0, this.muteAllMembers = false, this.customData = "", this.groupAtInfoList = [], this.nextMessageSeq = 0, this.lastMessage = Yo(e3.lastMessage, t3), this.selfInfo = { muteTime: 0, readedSequence: 0, messageRemindType: "", excludedUnreadSequenceList: void 0 }, this._initTopic(e3);
      }
      function Vi2(e3) {
        return d2(this, Vi2), (e3 = Xo.call(this, e3))._n = "GroupModule", e3._commonGroupHandler = new li2(i2(e3)), e3._groupAttributesHandler = new di2(i2(e3)), e3._groupCountersHandler = new pi2(i2(e3)), e3._AVChatRoomHandler = new gi2(i2(e3)), e3._groupTipsHandler = new ui2(i2(e3)), e3._groupSystemNoticeHandler = new Ii2(i2(e3)), e3._groupMemberHandler = new mi2(i2(e3)), e3.groupMap = /* @__PURE__ */ new Map(), e3._unjoinedAVChatRoomList = /* @__PURE__ */ new Map(), e3._receiptDetailCompleteMap = /* @__PURE__ */ new Map(), e3._onlineMemberCountMap = /* @__PURE__ */ new Map(), e3._timeoutIDs = [], e3.getIEmitInst().on(P2.CLOUD_CONFIG, e3._onCloudConfig, i2(e3)), e3;
      }
      function Hi2(e3) {
        d2(this, Hi2), this._grpM = e3, this._n = "GroupSystemNoticeHandler", this.pendencyMap = /* @__PURE__ */ new Map();
      }
      function Bi2(e3) {
        d2(this, Bi2), this._grpM = e3, this._n = "GroupMemberHandler", this.groupMemberListMap = /* @__PURE__ */ new Map(), this.DEFAULT_MEMBER_INFO_FILTER = ["Role", "JoinTime", "NameCard", "ShutUpUntil", "OnlineStatus"], this._grpM.getIEmitInst().on(P2.PROFILE_UPDATED, this._onProfileUpdated, this);
      }
      function Ki2(e3) {
        d2(this, Ki2), this.userID = "", this.avatar = "", this.nick = "", this.role = "", this.joinTime = "", this.lastSendMsgTime = "", this.nameCard = "", this.muteUntil = 0, this.memberCustomField = [], this.isOnline = false, this.updateMember(e3);
      }
      function Yi2(e3) {
        d2(this, Yi2), this._grpM = e3, this._n = "AVChatRoomHandler", this._joinedGroupMap = /* @__PURE__ */ new Map(), this._pollingRequestInfoMap = /* @__PURE__ */ new Map(), this._pollingInstanceMap = /* @__PURE__ */ new Map(), this._seqSll = new ti2(200), this._IDSll = new ti2(100), this._reportMessageStackedCount = 0, this._onlineMemberCountMap = /* @__PURE__ */ new Map(), this.DEFAULT_EXPIRE_TIME = 60, this.DEFAULT_POLLING_INTERVAL = 300, this.MAX_POLLING_INTERVAL = 2e3, this._pollingInterval = this.DEFAULT_POLLING_INTERVAL, this.DEFAULT_POLLING_NO_MESSAGE_COUNT = 20, this.DEFAULT_POLLING_INTERVAL_PLUS = 2e3, this._pollingNoMessageCount = 0, this._startBroadcastSeq = 1, this._broadcastMessageIDMap = /* @__PURE__ */ new Map(), this.DEFAULT_POLLING_SIMPLIFIED_MSG = 0;
      }
      function Wi2(e3) {
        d2(this, Wi2);
        var t3 = e3.manager, n3 = e3.groupID, o3 = e3.onInit, i3 = e3.onSuccess, e3 = e3.onFail;
        this._n = "Polling", this._manager = t3, this._grpM = t3._grpM, this._onInit = o3, this._onSuccess = i3, this._onFail = e3, this._groupID = n3, this._timeoutID = -1, this._isRunning = false, this._proto = k2.AV_POLLING;
      }
      function ji2(e3) {
        d2(this, ji2), this._grpM = e3, this._n = "GroupCountersHandler", this._groupCountersMap = /* @__PURE__ */ new Map(), this.EXPIRE_TIME = 3e4, this._grpM.getIEmitInst().on(P2.CLOUD_CONFIG, this._onCloudConfig, this);
      }
      function Ji2(e3) {
        d2(this, Ji2), this._grpM = e3, this._n = "GroupAttributesHandler", this._groupAttributesMap = /* @__PURE__ */ new Map(), this._groupAttributesCopy = {}, this.CACHE_EXPIRE_TIME = 3e4, this._grpM.getIEmitInst().on(P2.CLOUD_CONFIG, this._onCloudConfig, this);
      }
      function zi2(e3) {
        d2(this, zi2), this._grpM = e3, this._n = "CommonGroupHandler", this.tempConversationList = null, this._cachedGroupMessageMap = /* @__PURE__ */ new Map(), this._checkCountMap = /* @__PURE__ */ new Map(), this.MAX_CHECK_COUNT = 4, this.PAGING_GRP_COUNT_LIMIT = 200, this._pagingStatus = Nn2, this._pagingGetCostList = [], e3.getIEmitInst().on(P2.A2KEY_AND_TINYID_UPDATED, this.syncGroupList, this);
      }
      function Xi2(e3) {
        d2(this, Xi2), this._grpM = e3, this._n = "GroupTipsHandler", this._cachedGroupTipsMap = /* @__PURE__ */ new Map(), this._checkCountMap = /* @__PURE__ */ new Map(), this.MAX_CHECK_COUNT = 4;
      }
      function Zi2(e3) {
        return d2(this, Zi2), (e3 = Zo.call(this, e3))._n = "ConvModule", Bo2.mixin(i2(e3)), e3._msgListHandler = new xo2(i2(e3)), e3._msgRemindHandler = new si2(i2(e3)), e3._convGroupHandler = new ri2(i2(e3)), e3._sll = new ti2(100), e3._pagingStatus = Nn2, e3._pagingTs = 0, e3._pagingStartIdx = 0, e3._pagingPinnedTs = 0, e3._pagingPinnedStartIdx = 0, e3._pagingConvIDMap = /* @__PURE__ */ new Map(), e3._convIDFromUnreadDBMap = /* @__PURE__ */ new Map(), e3._convMap = /* @__PURE__ */ new Map(), e3._tmpGroupList = [], e3._tmpGroupAtTipsList = [], e3._peerReadTimeMap = /* @__PURE__ */ new Map(), e3._completedMap = /* @__PURE__ */ new Map(), e3._roamingMsgKeyAndTimeMap = /* @__PURE__ */ new Map(), e3._remoteGroupReadSeqMap = /* @__PURE__ */ new Map(), e3._convTotalUnreadCount = 0, e3._pagingGetCostList = [], e3._convMapForDiff = /* @__PURE__ */ new Map(), e3._partialUpdatedConvMap = /* @__PURE__ */ new Map(), e3._everClearedMap = /* @__PURE__ */ new Map(), e3._bPullOnInvite = true, e3._initListeners(), e3;
      }
      function Qi2(e3) {
        d2(this, Qi2), this._convM = e3, this._n = "ConvGroupHandler", this._convGroupMap = /* @__PURE__ */ new Map(), this._startIndex = 0, this._pagingStatus = Nn2;
      }
      function $i2(e3) {
        d2(this, $i2), this._convM = e3, this._n = "MsgRemindHandler";
      }
      function ea(e3, t3) {
        var n3 = 2 < arguments.length && void 0 !== arguments[2] && arguments[2];
        d2(this, ea), this.conversationID = e3.conversationID || "", this.unreadCount = e3.unreadCount || 0, this.type = e3.type || "", this.lastMessage = Ko(e3.lastMessage, t3, n3), e3.lastMsgTime && (this.lastMessage.lastTime = e3.lastMsgTime), this._isInfoCompleted = false, this.peerReadTime = e3.peerReadTime || 0, this.groupAtInfoList = [], this.remark = "", this.isPinned = e3.isPinned || false, this.messageRemindType = e3.messageRemindType, this.markList = e3.markList || [], this.customData = e3.customData || "", this.conversationGroupList = e3.conversationGroupList || [], this.draftText = e3.draftText || "", this._initProfile(e3), this.subType = this.groupProfile ? this.groupProfile.type : "";
      }
      function ta(e3) {
        d2(this, ta), this.groupID = "", this.name = "", this.avatar = "", this.type = "", this.introduction = "", this.notification = "", this.ownerID = "", this.createTime = "", this.infoSequence = "", this.lastInfoTime = "", this.selfInfo = { messageRemindType: "", joinTime: "", nameCard: "", role: "", userID: "", memberCustomField: void 0, readedSequence: 0, excludedUnreadSequenceList: void 0 }, this.lastMessage = { lastTime: "", lastSequence: "", fromAccount: "", messageForShow: "" }, this.nextMessageSeq = "", this.memberNum = "", this.memberCount = "", this.maxMemberNum = "", this.maxMemberCount = "", this.joinOption = "", this.inviteOption = "", this.groupCustomField = [], this.muteAllMembers = false, this.isSupportTopic = false, this._lastRevokedTime = 0, this._initGroup(e3);
      }
      function na(e3) {
        d2(this, na), this.MAX_LENGTH = e3, this.map = /* @__PURE__ */ new Map();
      }
      function oa(e3) {
        var t3 = this;
        d2(this, oa), S2(e3) || (this.userID = e3.userID || "", this.nick = e3.nick || "", this.gender = e3.gender || "", this.birthday = e3.birthday || 0, this.location = e3.location || "", this.selfSignature = e3.selfSignature || "", this.allowType = e3.allowType || A2.ALLOW_TYPE_ALLOW_ANY, this.language = e3.language || 0, this.avatar = e3.avatar || "", this.messageSettings = e3.messageSettings || 0, this.adminForbidType = e3.adminForbidType || A2.FORBID_TYPE_NONE, this.level = e3.level || 0, this.role = e3.role || 0, this.lastUpdatedTime = 0, this.profileCustomField = [], S2(e3.profileCustomField)) || e3.profileCustomField.forEach(function(e4) {
          t3.profileCustomField.push({ key: e4.key, value: e4.value });
        });
      }
      function ia() {
        return null;
      }
      function aa(e3) {
        var t3 = e3.get(12);
        return { SDKType: 10, SDKAppID: t3.getSDKAppID(), SDKVersion: t3.getVersion(), tinyID: Number(t3.getTinyID()), userID: t3.getUserID(), platform: e3.getPlatform(), instanceID: t3.getInstanceID(), traceID: We2() };
      }
      e2(fa, [{ key: "_errorTolerantHandle", value: function() {
        v2 || "undefined" != typeof window && this._canIUseCookies() || (this.getItem = ia, this.setItem = ia, this.removeItem = ia, this.clear = ia);
      } }, { key: "onCheckTimer", value: function(e3) {
        e3 % 20 == 0 && 0 !== this._storageQueue.size && this._doFlush();
      } }, { key: "_doFlush", value: function() {
        try {
          var e3, t3 = Z2(this._storageQueue);
          try {
            for (t3.s(); !(e3 = t3.n()).done; ) {
              var n3 = Y2(e3.value, 2), o3 = n3[0], i3 = n3[1];
              this._setStorageSync(this._getKey(o3), i3);
            }
          } catch (e4) {
            t3.e(e4);
          } finally {
            t3.f();
          }
          this._storageQueue.clear();
        } catch (e4) {
          M2.w("".concat(this._n, "._doFlush error:"), e4);
        }
      } }, { key: "_getPrefix", value: function() {
        var e3 = this._m.get(12);
        return "TIM_".concat(e3.getSDKAppID(), "_").concat(e3.getUserID(), "_");
      } }, { key: "_getKey", value: function(e3) {
        return "".concat(this._getPrefix()).concat(e3);
      } }, { key: "getItem", value: function(e3) {
        var t3 = !(1 < arguments.length && void 0 !== arguments[1]) || arguments[1];
        try {
          var n3 = t3 ? this._getKey(e3) : e3;
          return this.getStorageSync(n3);
        } catch (e4) {
          return M2.w("".concat(this._n, ".getItem error:"), e4), {};
        }
      } }, { key: "setItem", value: function(e3, t3) {
        var n3;
        2 < arguments.length && void 0 !== arguments[2] && arguments[2] ? (n3 = !(3 < arguments.length && void 0 !== arguments[3]) || arguments[3] ? this._getKey(e3) : e3, this._setStorageSync(n3, t3)) : this._storageQueue.set(e3, t3);
      } }, { key: "clear", value: function() {
        try {
          v2 ? I2.clearStorageSync() : this._canIUseCookies() && localStorage.clear();
        } catch (e3) {
          M2.w("".concat(this._n, ".clear error:"), e3);
        }
      } }, { key: "removeItem", value: function(e3) {
        var t3 = !(1 < arguments.length && void 0 !== arguments[1]) || arguments[1];
        try {
          var n3 = t3 ? this._getKey(e3) : e3;
          this._removeStorageSync(n3);
        } catch (e4) {
          M2.w("".concat(this._n, ".removeItem error:"), e4);
        }
      } }, { key: "getSize", value: function(e3) {
        var t3 = this, n3 = 1 < arguments.length && void 0 !== arguments[1] ? arguments[1] : "b";
        try {
          var o3 = { size: 0, limitSize: 5242880, unit: n3 };
          if (Object.defineProperty(o3, "leftSize", { enumerable: true, get: function() {
            return o3.limitSize - o3.size;
          } }), v2 && (o3.limitSize = 1024 * I2.getStorageInfoSync().limitSize), e3)
            o3.size = JSON.stringify(this.getItem(e3)).length + this._getKey(e3).length;
          else if (v2)
            I2.getStorageInfoSync().keys.forEach(function(e4) {
              o3.size += JSON.stringify(t3.getStorageSync(e4)).length + t3._getKey(e4).length;
            });
          else if (this._canIUseCookies())
            for (var i3 in localStorage)
              localStorage.hasOwnProperty(i3) && (o3.size += localStorage.getItem(i3).length + i3.length);
          return this._convertUnit(o3);
        } catch (e4) {
          M2.w("".concat(this._n, " error:"), e4);
        }
      } }, { key: "_convertUnit", value: function(e3) {
        var t3, n3 = {}, o3 = e3.unit;
        for (t3 in n3.unit = o3, e3)
          "number" == typeof e3[t3] && ("kb" === o3.toLowerCase() ? n3[t3] = Math.round(e3[t3] / 1024) : "mb" === o3.toLowerCase() ? n3[t3] = Math.round(e3[t3] / 1024 / 1024) : n3[t3] = e3[t3]);
        return n3;
      } }, { key: "_setStorageSync", value: function(e3, t3) {
        v2 ? ve2 ? my.setStorageSync({ key: e3, data: t3 }) : I2.setStorageSync(e3, t3) : this._canIUseCookies() && localStorage.setItem(e3, JSON.stringify(t3));
      } }, { key: "getStorageSync", value: function(e3) {
        return v2 ? ve2 ? my.getStorageSync({ key: e3 }).data : I2.getStorageSync(e3) : this._canIUseCookies() ? JSON.parse(localStorage.getItem(e3)) : {};
      } }, { key: "_removeStorageSync", value: function(e3) {
        v2 ? ve2 ? my.removeStorageSync({ key: e3 }) : I2.removeStorageSync(e3) : this._canIUseCookies() && localStorage.removeItem(e3);
      } }, { key: "_canIUseCookies", value: function() {
        return "undefined" != typeof window && navigator && navigator.cookieEnabled && localStorage;
      } }, { key: "reset", value: function() {
        M2.l("".concat(this._n, ".reset")), this._doFlush();
      } }]);
      var sa, ra = fa, ca = (e2(ga, [{ key: "pushIn", value: function(e3) {
        M2.d("".concat(this._n, ".pushIn"), this._report.length, e3), this._report.push(e3);
      } }, { key: "backfill", value: function(e3) {
        var t3;
        O2(e3) && 0 !== e3.length && (M2.d("".concat(this._n, ".backfill"), this._report.length, e3.length), (t3 = this._report).unshift.apply(t3, p2(e3)));
      } }, { key: "getLogsNumInMemory", value: function() {
        return this._report.length;
      } }, { key: "isEmpty", value: function() {
        return 0 === this._report.length;
      } }, { key: "_reset", value: function() {
        this._report.length = 0, this._report = [];
      } }, { key: "getLogsInMemory", value: function() {
        var e3 = this._report.slice();
        return this._reset(), e3;
      } }]), ga), ua = (t2(ha, u2), sa = n2(ha), e2(ha, [{ key: "reportAtOnce", value: function() {
        this._report();
      } }, { key: "_onLoginSuccess", value: function() {
        var t3 = this, e3 = this.get(13), n3 = e3.getItem(this.TAG, false);
        !S2(n3) && lt2(n3.forEach) && (M2.l("".concat(this._n, "._onLoginSuccess. logs count:").concat(n3.length)), n3.forEach(function(e4) {
          t3._reportBody.pushIn(e4);
        }), e3.removeItem(this.TAG, false));
      } }, { key: "_onCloudConfig", value: function() {
        var e3 = this.getCloudConfig("evt_rpt_threshold"), t3 = this.getCloudConfig("evt_rpt_waiting"), n3 = this.getCloudConfig("evt_rpt_level"), o3 = this.getCloudConfig("evt_rpt_sdkappid_bl"), i3 = this.getCloudConfig("evt_rpt_tinyid_wl");
        N2(e3) || (this.MIN_THRESHOLD = Number(e3)), N2(t3) || (this.WAITING_TIME = Number(t3)), N2(n3) || (this.REPORT_LEVEL = n3.split(",").map(function(e4) {
          return Number(e4);
        })), N2(o3) || (this.REPORT_SDKAPPID_BLACKLIST = o3.split(",").map(function(e4) {
          return Number(e4);
        })), N2(i3) || (this.REPORT_TINYID_WHITELIST = i3.split(","));
      } }, { key: "pushIn", value: function(e3) {
        e3 instanceof G2 && (e3.updateTimeStamp(), this._reportBody.pushIn(e3), this._reportBody.getLogsNumInMemory() >= this.MIN_THRESHOLD) && this._report();
      } }, { key: "onCheckTimer", value: function() {
        Date.now() < this._lastReportTime + this.WAITING_TIME || this._reportBody.isEmpty() || this._report();
      } }, { key: "_filterLogs", value: function(e3) {
        var t3 = this, n3 = this.get(12), o3 = n3.getSDKAppID(), n3 = n3.getTinyID();
        return Wt2(this.REPORT_SDKAPPID_BLACKLIST, o3) && !jt2(this.REPORT_TINYID_WHITELIST, n3) ? [] : e3.filter(function(e4) {
          return t3.REPORT_LEVEL.includes(e4.level);
        });
      } }, { key: "_report", value: function() {
        var t3, e3, n3 = this;
        this._reportBody.isEmpty() || (t3 = this._reportBody.getLogsInMemory(), 0 !== (e3 = this._filterLogs(t3)).length ? (e3 = { header: aa(this), event: e3 }, this.req({ P: k2.SSO_STAT, data: y2({}, e3) }).then(function() {
          n3._lastReportTime = Date.now();
        }).catch(function(e4) {
          M2.w("".concat(n3._n, "._report failed. error:"), e4), n3._lastReportTime = Date.now(), n3._reportBody.backfill(t3), n3._reportBody.getLogsNumInMemory() > n3.MAX_THRESHOLD && n3._flushAtOnce();
        })) : this._lastReportTime = Date.now());
      } }, { key: "_flushAtOnce", value: function() {
        var e3 = this.get(13), t3 = e3.getItem(this.TAG, false), n3 = this._reportBody.getLogsInMemory(), o3 = "".concat(this._n, "._flushAtOnce");
        S2(t3) ? (M2.l("".concat(o3, " count:").concat(n3.length)), e3.setItem(this.TAG, n3, true, false)) : ((n3 = n3.concat(t3)).length > this.MAX_THRESHOLD && (n3 = n3.slice(0, this.MAX_THRESHOLD)), M2.l("".concat(o3, " count:").concat(n3.length)), e3.setItem(this.TAG, n3, true, false));
      } }, { key: "reset", value: function() {
        M2.l("".concat(this._n, ".reset")), this._lastReportTime = 0, this._report(), this.REPORT_SDKAPPID_BLACKLIST = [], this.REPORT_TINYID_WHITELIST = [];
      } }]), ha), la = "none", da = "online", pa = (e2(_a, [{ key: "_startRN", value: function() {
        var e3, n3 = this;
        ye2 && (e3 = this._m.get(18).getPlugin("chat-network-monitor")) && (this._removeListener = e3.addEventListener(function(e4) {
          var t3 = e4.isConnected, e4 = e4.type;
          n3._networkType !== e4 && n3._onNetworkStatusChange({ isConnected: void 0 !== t3 && t3, networkType: e4 });
        }));
      } }, { key: "start", value: function() {
        var t3 = this, n3 = "".concat(this._n, ".start");
        v2 ? (I2.getNetworkType({ success: function(e3) {
          t3._networkType = e3.networkType || e3.subtype || "", e3.networkType === la ? M2.w("".concat(n3, " no network, please check!")) : M2.i("".concat(n3, " networkType:").concat(e3.networkType));
        } }), this._mpNetworkStatusCallback = this._onNetworkStatusChange.bind(this), I2.onNetworkStatusChange(this._mpNetworkStatusCallback)) : Ce2 && (this._networkType = da, this._webOnlineCallback = this._onWebOnline.bind(this), this._webOfflineCallback = this._onWebOffline.bind(this), window.addEventListener("online", this._webOnlineCallback), window.addEventListener("offline", this._webOfflineCallback));
      } }, { key: "_onWebOnline", value: function() {
        this._onNetworkStatusChange({ isConnected: true, networkType: da });
      } }, { key: "_onWebOffline", value: function() {
        this._onNetworkStatusChange({ isConnected: false, networkType: la });
      } }, { key: "_onNetworkStatusChange", value: function(e3) {
        var t3 = e3.isConnected, e3 = e3.networkType, n3 = "".concat(this._n, "._onNetworkStatusChange"), o3 = false, i3 = "previous:".concat(this._networkType, " current:").concat(e3);
        t3 ? (M2.i("".concat(n3, " ").concat(i3)), this._networkType !== e3 && (o3 = true, this._networkType = e3, this._m.get(21).reConnect(true))) : this._networkType !== e3 && (o3 = true, this._networkType = e3, M2.w("".concat(n3, " no network, please check!")), this._m.get(21).offline()), o3 && new G2("networkChange").setMessage("isConnected:".concat(t3, " ").concat(i3)).end();
      } }, { key: "isOnline", value: function() {
        return this._networkType !== la;
      } }, { key: "getNetworkType", value: function() {
        return this._networkType;
      } }, { key: "reset", value: function() {
        M2.l("".concat(this._n, ".reset")), v2 ? null !== this._mpNetworkStatusCallback && (I2.offNetworkStatusChange && I2.offNetworkStatusChange(this._mpNetworkStatusCallback), this._mpNetworkStatusCallback = null) : Ce2 ? (null !== this._webOnlineCallback && (window.removeEventListener("online", this._webOnlineCallback), this._webOnlineCallback = null), null !== this._onWebOffline && (window.removeEventListener("offline", this._webOfflineCallback), this._webOfflineCallback = null)) : ye2 && this._removeListener && (this._removeListener(), this._removeListener = null);
      } }]), _a);
      function _a(e3) {
        d2(this, _a), this._m = e3, this._networkType = da, this._n = "NetMonitorModule", this._mpNetworkStatusCallback = null, this._webOnlineCallback = null, this._webOfflineCallback = null, this._removeListener = null, this._m.getIEmitInst().on(P2.A2KEY_AND_TINYID_UPDATED, this._startRN, this);
      }
      function ha(e3) {
        d2(this, ha), (e3 = sa.call(this, e3))._n = "EventStatModule", e3.TAG = "im-ssolog-event", e3._reportBody = new ca(), e3.MIN_THRESHOLD = 20, e3.MAX_THRESHOLD = 100, e3.WAITING_TIME = 6e4, e3.REPORT_LEVEL = [4, 5, 6], e3.REPORT_SDKAPPID_BLACKLIST = [], e3.REPORT_TINYID_WHITELIST = [], e3._lastReportTime = Date.now();
        var t3 = e3.getIEmitInst();
        return t3.on(P2.A2KEY_AND_TINYID_UPDATED, e3._onLoginSuccess, i2(e3)), t3.on(P2.CLOUD_CONFIG, e3._onCloudConfig, i2(e3)), e3;
      }
      function ga(e3) {
        d2(this, ga), this._n = "SSOLogBody", this._report = [];
      }
      function fa(e3) {
        d2(this, fa), this._m = e3, this._n = "StorageModule", this._storageQueue = /* @__PURE__ */ new Map(), this._errorTolerantHandle();
      }
      function ma(e3, t3) {
        return e3(t3 = { exports: {} }, t3.exports), t3.exports;
      }
      var va, Ia = ma(function(e3) {
        var o3 = Object.prototype.hasOwnProperty, _3 = "~";
        function n3() {
        }
        function a3(e4, t4, n4) {
          this.fn = e4, this.context = t4, this.once = n4 || false;
        }
        function i3(e4, t4, n4, o4, i4) {
          if ("function" != typeof n4)
            throw new TypeError("The listener must be a function");
          n4 = new a3(n4, o4 || e4, i4), o4 = _3 ? _3 + t4 : t4;
          return e4._events[o4] ? e4._events[o4].fn ? e4._events[o4] = [e4._events[o4], n4] : e4._events[o4].push(n4) : (e4._events[o4] = n4, e4._eventsCount++), e4;
        }
        function c3(e4, t4) {
          0 == --e4._eventsCount ? e4._events = new n3() : delete e4._events[t4];
        }
        function t3() {
          this._events = new n3(), this._eventsCount = 0;
        }
        Object.create && (n3.prototype = /* @__PURE__ */ Object.create(null), new n3().__proto__ || (_3 = false)), t3.prototype.eventNames = function() {
          var e4, t4, n4 = [];
          if (0 === this._eventsCount)
            return n4;
          for (t4 in e4 = this._events)
            o3.call(e4, t4) && n4.push(_3 ? t4.slice(1) : t4);
          return Object.getOwnPropertySymbols ? n4.concat(Object.getOwnPropertySymbols(e4)) : n4;
        }, t3.prototype.listeners = function(e4) {
          var e4 = _3 ? _3 + e4 : e4, t4 = this._events[e4];
          if (!t4)
            return [];
          if (t4.fn)
            return [t4.fn];
          for (var n4 = 0, o4 = t4.length, i4 = new Array(o4); n4 < o4; n4++)
            i4[n4] = t4[n4].fn;
          return i4;
        }, t3.prototype.listenerCount = function(e4) {
          e4 = _3 ? _3 + e4 : e4, e4 = this._events[e4];
          return e4 ? e4.fn ? 1 : e4.length : 0;
        }, t3.prototype.emit = function(e4, t4, n4, o4, i4, a4) {
          var s3 = _3 ? _3 + e4 : e4;
          if (!this._events[s3])
            return false;
          var r3, c4 = this._events[s3], u3 = arguments.length;
          if (c4.fn) {
            switch (c4.once && this.removeListener(e4, c4.fn, void 0, true), u3) {
              case 1:
                return c4.fn.call(c4.context), true;
              case 2:
                return c4.fn.call(c4.context, t4), true;
              case 3:
                return c4.fn.call(c4.context, t4, n4), true;
              case 4:
                return c4.fn.call(c4.context, t4, n4, o4), true;
              case 5:
                return c4.fn.call(c4.context, t4, n4, o4, i4), true;
              case 6:
                return c4.fn.call(c4.context, t4, n4, o4, i4, a4), true;
            }
            for (p3 = 1, r3 = new Array(u3 - 1); p3 < u3; p3++)
              r3[p3 - 1] = arguments[p3];
            c4.fn.apply(c4.context, r3);
          } else
            for (var l3, d3 = c4.length, p3 = 0; p3 < d3; p3++)
              switch (c4[p3].once && this.removeListener(e4, c4[p3].fn, void 0, true), u3) {
                case 1:
                  c4[p3].fn.call(c4[p3].context);
                  break;
                case 2:
                  c4[p3].fn.call(c4[p3].context, t4);
                  break;
                case 3:
                  c4[p3].fn.call(c4[p3].context, t4, n4);
                  break;
                case 4:
                  c4[p3].fn.call(c4[p3].context, t4, n4, o4);
                  break;
                default:
                  if (!r3)
                    for (l3 = 1, r3 = new Array(u3 - 1); l3 < u3; l3++)
                      r3[l3 - 1] = arguments[l3];
                  c4[p3].fn.apply(c4[p3].context, r3);
              }
          return true;
        }, t3.prototype.on = function(e4, t4, n4) {
          return i3(this, e4, t4, n4, false);
        }, t3.prototype.once = function(e4, t4, n4) {
          return i3(this, e4, t4, n4, true);
        }, t3.prototype.removeListener = function(e4, t4, n4, o4) {
          e4 = _3 ? _3 + e4 : e4;
          if (this._events[e4])
            if (t4) {
              var i4 = this._events[e4];
              if (i4.fn)
                i4.fn !== t4 || o4 && !i4.once || n4 && i4.context !== n4 || c3(this, e4);
              else {
                for (var a4 = 0, s3 = [], r3 = i4.length; a4 < r3; a4++)
                  (i4[a4].fn !== t4 || o4 && !i4[a4].once || n4 && i4[a4].context !== n4) && s3.push(i4[a4]);
                s3.length ? this._events[e4] = 1 === s3.length ? s3[0] : s3 : c3(this, e4);
              }
            } else
              c3(this, e4);
          return this;
        }, t3.prototype.removeAllListeners = function(e4) {
          return e4 ? (e4 = _3 ? _3 + e4 : e4, this._events[e4] && c3(this, e4)) : (this._events = new n3(), this._eventsCount = 0), this;
        }, t3.prototype.off = t3.prototype.removeListener, t3.prototype.addListener = t3.prototype.on, t3.prefixed = _3, e3.exports = t3.EventEmitter = t3;
      }), Ma = ["rich.my-imcloud.com", "imrich.qcloud.com"], ya = ["requestSnapshotUrl"], Ca = (t2(ka, u2), va = n2(ka), e2(ka, [{ key: "_init", value: function() {
        this._fileDownloadProxy = this.getFileDownloadProxy(), this._authKey = this.getDowloadFileAuthKey();
        var e3 = this.get(18);
        this.TIMUploadPlugin = e3.getPlugin("tim-upload-plugin"), this.TIMUploadPlugin ? this._initUploaderMethod() : (this.COSSDK = e3.getPlugin(e3 = v2 ? "cos-wx-sdk" : "cos-js-sdk"), this.COSSDK ? (this._getAuthorizationKey(), this.warn("CosReplacement", e3)) : this.warn("PluginUndetected"));
      } }, { key: "_onCloudConfig", value: function() {
        var t3 = this, e3 = "".concat(this._n, "._onCloudConfig"), n3 = this.getCloudConfig("upload_size_limit"), o3 = this.getCloudConfig("simple_cos"), i3 = this.getCloudConfig("file_dn_list");
        if (M2.l("".concat(e3, " uploadSizeLimit:").concat(n3, " simpleCos:").concat(o3)), !N2(n3))
          try {
            var a3 = JSON.parse(n3);
            this.UPLOAD_SIZE_LIMIT = { A: a3.a ? 1048576 * parseInt(a3.a) : this.UPLOAD_SIZE_LIMIT.A, F: a3.f ? 1048576 * parseInt(a3.f) : this.UPLOAD_SIZE_LIMIT.F, I: a3.i ? 1048576 * parseInt(a3.i) : this.UPLOAD_SIZE_LIMIT.I, V: a3.v ? 1048576 * parseInt(a3.v) : this.UPLOAD_SIZE_LIMIT.V };
          } catch (e4) {
          }
        if (N2(o3) || (this.isSimpleCos = "1" === o3), !N2(i3))
          try {
            JSON.parse(i3).forEach(function(e4) {
              t3._fileDNList.includes(e4) || t3._fileDNList.push(e4);
            });
          } catch (e4) {
          }
      } }, { key: "_getAuthorizationKey", value: function() {
        var n3 = this, o3 = "".concat(this._n, ".").concat("_getAuthorizationKey"), i3 = new G2("_getAuthorizationKey"), a3 = Math.ceil(Date.now() / 1e3);
        this.req({ P: k2.COS_SIGN, data: { duration: this.expiredTimeLimit } }).then(function(e3) {
          var e3 = e3.data, t3 = (M2.l("".concat(o3, " ok. data:"), e3), e3.expiredTime - a3);
          i3.setMessage("requestId:".concat(e3.requestId, " requestTime:").concat(a3, " expiredTime:").concat(e3.expiredTime, " diff:").concat(t3, "s")).end(), !v2 && e3.region && (n3.region = e3.region), n3.appid = e3.appid, n3.bucketName = e3.bucketName, n3.ciUrl = e3.ciUrl, n3.directory = e3.directory, n3.downloadUrl = e3.downloadUrl, n3.uploadUrl = e3.uploadUrl, n3.cosOptions = { secretId: e3.secretId, secretKey: e3.secretKey, sessionToken: e3.sessionToken, expiredTime: e3.expiredTime }, M2.l("".concat(o3, " ok. region:").concat(n3.region, " bucketName:").concat(n3.bucketName)), n3._initUploaderMethod();
        }).catch(function(e3) {
          i3.setError(e3).end(), M2.w("".concat(o3, " failed. error:"), e3);
        });
      } }, { key: "_getCosPreSigUrl", value: function(t3) {
        var i3 = this, a3 = "".concat(this._n, ".").concat("_getCosPreSigUrl"), s3 = Math.ceil(Date.now() / 1e3), r3 = new G2("_getCosPreSigUrl"), e3 = { uploadMethod: t3.uploadMethod, platform: this.getPlatform(), SDKAppID: this.getSDKAppID(), userID: t3.userID, conversationType: t3.conversationType, uploadConfig: [{ fileID: 1, fileType: t3.fileType, fileName: t3.fileName }] }, n3 = k2.SIMPLE_COS_PRE_SIG;
        return this.isSimpleCos || (e3 = { fileType: t3.fileType, fileName: t3.fileName, uploadMethod: t3.uploadMethod, duration: t3.duration }, n3 = k2.COS_PRE_SIG), this.req({ P: n3, data: e3 }).then(function(e4) {
          i3.tryCount = 0;
          var t4, n4, e4 = e4.data || {}, o3 = (M2.l("".concat(a3, " ok. isSimpleCos:").concat(i3.isSimpleCos, " data:"), e4), "");
          return o3 = i3.isSimpleCos ? (t4 = (n4 = e4.preSig[0]).uploadUrl, n4 = n4.fileKey, "uploadIP:".concat(e4.uploadIP, " uploadUrl:").concat(t4, " fileKey:").concat(n4, " cost:").concat(nn2(s3))) : "requestId:".concat(e4.requestId, " expiredTime:").concat(e4.expiredTime, " diff:").concat(e4.expiredTime - s3, "s"), r3.setMessage(o3).end(), e4;
        }).catch(function(e4) {
          return -1 === e4.code && (e4.code = L2.COS_GET_SIG_FAIL), r3.setError(e4).end(), M2.w("".concat(a3, " failed. error:"), e4), i3.tryCount < 1 ? (i3.tryCount++, i3._getCosPreSigUrl(t3)) : (i3.tryCount = 0, D2({ code: L2.COS_GET_SIG_FAIL }));
        });
      } }, { key: "_initUploaderMethod", value: function() {
        var n3 = this;
        this.TIMUploadPlugin ? (this.timUploadPlugin = new this.TIMUploadPlugin(), this._cosUploadMethod = function(e3, t3) {
          n3.timUploadPlugin.uploadFile(e3, t3);
        }) : this.appid && (this.cos = v2 ? new this.COSSDK({ ForcePathStyle: true, getAuthorization: this._getAuthorization.bind(this) }) : new this.COSSDK({ getAuthorization: this._getAuthorization.bind(this) }), this._cosUploadMethod = v2 ? function(e3, t3) {
          n3.cos.postObject(e3, t3);
        } : function(e3, t3) {
          n3.cos.uploadFiles(e3, t3);
        });
      } }, { key: "onCheckTimer", value: function(e3) {
        !this.COSSDK || this.TIMUploadPlugin || this.isLoggedIn() && e3 % 60 == 0 && Math.ceil(Date.now() / 1e3) >= this.cosOptions.expiredTime - 120 && this._getAuthorizationKey();
      } }, { key: "getFileDNList", value: function() {
        return this._fileDNList;
      } }, { key: "_getAuthorization", value: function(e3, t3) {
        t3({ TmpSecretId: this.cosOptions.secretId, TmpSecretKey: this.cosOptions.secretKey, XCosSecurityToken: this.cosOptions.sessionToken, ExpiredTime: this.cosOptions.expiredTime });
      } }, { key: "upload", value: function(e3) {
        if (true === e3._relayFlag)
          return Promise.resolve();
        var t3 = this.get(26);
        switch (e3.type) {
          case A2.MSG_IMAGE:
            return t3.addTotalCount(Wn2), this._uploadImage(e3);
          case A2.MSG_FILE:
            return t3.addTotalCount(Wn2), this._uploadFile(e3);
          case A2.MSG_AUDIO:
            return t3.addTotalCount(Wn2), this._uploadAudio(e3);
          case A2.MSG_VIDEO:
            return t3.addTotalCount(Wn2), this._uploadVideo(e3);
          default:
            return Promise.resolve();
        }
      } }, { key: "_uploadImage", value: function(v3) {
        var I3 = this, e3 = this.get(2), M3 = v3.getElements()[0], t3 = e3.getMessageOption(v3.clientSequence);
        return this.doUploadImage({ file: t3.payload.file, to: t3.to, message: v3, onProgress: function(e4) {
          if (M3.updatePercent(e4), lt2(t3.onProgress))
            try {
              t3.onProgress(e4);
            } catch (e5) {
              return D2({ code: L2.MSG_ONPROGRESS_ERR });
            }
        } }).then(function(e4) {
          var t4 = e4.location, n3 = e4.fileType, o3 = e4.fileSize, i3 = e4.width, a3 = e4.height, s3 = e4.smallImageUrl, r3 = e4.smallImageWidth, c3 = e4.smallImageHeight, u3 = e4.largeImageUrl, l3 = e4.largeImageWidth, d3 = e4.largeImageHeight, p3 = e4.imageInfoArray, e4 = I3.isPrivateNetWork() ? t4 : It2(t4);
          M3.updateImageFormat(n3);
          var _3, h3, g3 = { size: o3, url: e4, width: i3, height: a3 };
          if (p3 && 0 < p3.length)
            for (var f3 = 0; f3 < p3.length; f3++) {
              var m3 = p3[f3];
              1 === m3.type ? _3 = m3 : 2 === m3.type ? h3 = m3 : g3 = y2(y2({}, g3), m3);
            }
          else
            h3 = s3 && u3 ? (_3 = { url: s3, width: r3, height: c3 }, { url: u3, width: l3, height: d3 }) : (_3 = Ht2({ originUrl: e4, originWidth: i3, originHeight: a3, min: 198 }), Ht2({ originUrl: e4, originWidth: i3, originHeight: a3, min: 720 }));
          return M3.updateImageInfoArray([y2({}, g3), y2({}, h3), y2({}, _3)]), v3;
        });
      } }, { key: "_uploadFile", value: function(n3) {
        var o3 = this, e3 = this.get(2), i3 = n3.getElements()[0], t3 = e3.getMessageOption(n3.clientSequence);
        return this.doUploadFile({ file: t3.payload.file, to: t3.to, message: n3, onProgress: function(e4) {
          if (i3.updatePercent(e4), lt2(t3.onProgress))
            try {
              t3.onProgress(e4);
            } catch (e5) {
              return D2({ code: L2.MSG_ONPROGRESS_ERR });
            }
        } }).then(function(e4) {
          var e4 = e4.location, t4 = e4;
          return o3.isPrivateNetWork() || (t4 = ao2(t4 = It2(e4), o3._fileDownloadProxy, o3._authKey, o3._fileDNList)), i3.updateFileUrl(t4), n3;
        });
      } }, { key: "_uploadAudio", value: function(t3) {
        var n3 = this, e3 = this.get(2), o3 = t3.getElements()[0], i3 = e3.getMessageOption(t3.clientSequence);
        return this.doUploadAudio({ file: i3.payload.file, to: i3.to, message: t3, onProgress: function(e4) {
          if (o3.updatePercent(e4), lt2(i3.onProgress))
            try {
              i3.onProgress(e4);
            } catch (e5) {
              return D2({ code: L2.MSG_ONPROGRESS_ERR });
            }
        } }).then(function(e4) {
          e4 = e4.location, e4 = n3.isPrivateNetWork() ? e4 : It2(e4);
          return o3.updateAudioUrl(e4), t3;
        });
      } }, { key: "_uploadVideo", value: function(n3) {
        var o3 = this, e3 = this.get(2), i3 = n3.getElements()[0], t3 = e3.getMessageOption(n3.clientSequence);
        return this.doUploadVideo({ file: t3.payload.file, to: t3.to, message: n3, onProgress: function(e4) {
          if (i3.updatePercent(e4), lt2(t3.onProgress))
            try {
              t3.onProgress(e4);
            } catch (e5) {
              return D2({ code: L2.MSG_ONPROGRESS_ERR });
            }
        } }).then(function(e4) {
          var t4 = e4.location, e4 = e4.snapshotInfo, t4 = o3.isPrivateNetWork() ? t4 : It2(t4);
          return i3.updateVideoUrl(t4), S2(e4) || i3.updateSnapshotInfo(e4), n3;
        });
      } }, { key: "_checkSizeError", value: function(e3) {
        var t3 = "";
        return "A" === e3 ? t3 = "audio" : "I" === e3 ? t3 = "image" : "V" === e3 ? t3 = "video" : "F" === e3 && (t3 = "file"), D2({ code: L2["MSG_".concat(e3, "_SIZE_LIMIT")], message: this.getErrMsg("UploadSizeLimit", t3, "".concat(this.UPLOAD_SIZE_LIMIT[e3] / 1048576, "MB")) });
      } }, { key: "doUploadImage", value: function(o3) {
        var e3, i3, a3 = this;
        return !o3.file || this._isEmptyFileList(o3.file.files) ? D2({ code: L2.MSG_I_SELECT_F_FIRST }) : true !== (e3 = this._checkImageType(o3.file)) ? e3 : true !== (e3 = this._checkImageSize(o3.file)) ? e3 : (i3 = null, this._setUploadFileType(1), this.uploadByCOS(o3).then(function(e4) {
          if (i3 = e4, a3.isPrivateNetWork())
            return Ft2(n3);
          if (O2(i3.imageInfoArray)) {
            var t3 = i3.imageInfoArray.find(function(e5) {
              return 3 === e5.type;
            });
            if (t3)
              return t3;
          }
          var n3;
          return ye2 ? { width: o3.file.width, height: o3.file.height } : (n3 = It2(e4.location), a3.COSSDK ? Ft2(n3) : Ft2(n3 = ao2(n3, a3._fileDownloadProxy, a3._authKey, a3._fileDNList)));
        }).then(function(e4) {
          return i3.width = e4.width, i3.height = e4.height, Promise.resolve(i3);
        }));
      } }, { key: "_checkImageType", value: function(e3) {
        var t3 = "", t3 = v2 ? e3.url.slice(e3.url.lastIndexOf(".") + 1) : ye2 ? e3.type.split("/")[1] : e3.files[0].name.slice(e3.files[0].name.lastIndexOf(".") + 1);
        return 0 <= Qo.indexOf(t3.toLowerCase()) || D2({ code: L2.MSG_I_TYPES_LIMIT });
      } }, { key: "_checkImageSize", value: function(e3) {
        return 0 === (e3 = (v2 || ye2 ? e3 : e3.files[0]).size) ? D2({ code: L2.MSG_F_IS_EMPTY }) : e3 < this.UPLOAD_SIZE_LIMIT.I || this._checkSizeError("I");
      } }, { key: "doUploadFile", value: function(e3) {
        return !e3.file || this._isEmptyFileList(e3.file.files) ? D2({ code: L2.MSG_F_SELECT_F_FIRST }) : e3.file.files[0].size > this.UPLOAD_SIZE_LIMIT.F ? this._checkSizeError("F") : 0 === e3.file.files[0].size ? D2({ code: L2.MSG_F_IS_EMPTY }) : (this._setUploadFileType(255), this.uploadByCOS(e3));
      } }, { key: "doUploadVideo", value: function(e3) {
        return e3.file.videoFile.size > this.UPLOAD_SIZE_LIMIT.V ? this._checkSizeError("V") : 0 === e3.file.videoFile.size ? D2({ code: L2.MSG_F_IS_EMPTY }) : -1 === $o.indexOf(e3.file.videoFile.type) ? D2({ code: L2.MSG_V_TYPES_LIMIT }) : (this._setUploadFileType(2), v2 || ye2 ? this.handleVideoUpload(y2(y2({}, e3), {}, { file: e3.file.videoFile })) : Ce2 ? this.handleVideoUpload(e3) : void 0);
      } }, { key: "handleVideoUpload", value: function(n3) {
        var o3 = this;
        return new Promise(function(t3, e3) {
          o3.uploadByCOS(n3).then(function(e4) {
            t3(e4);
          }).catch(function() {
            o3.uploadByCOS(n3).then(function(e4) {
              t3(e4);
            }).catch(function() {
              e3(new E2({ code: L2.MSG_V_UPLOAD_FAIL }));
            });
          });
        });
      } }, { key: "doUploadAudio", value: function(e3) {
        return e3.file ? e3.file.size > this.UPLOAD_SIZE_LIMIT.A ? this._checkSizeError("A") : 0 === e3.file.size ? D2({ code: L2.MSG_F_IS_EMPTY }) : (this._setUploadFileType(3), this.uploadByCOS(e3)) : D2({ code: L2.MSG_A_UPLOAD_FAIL });
      } }, { key: "uploadByCOS", value: function(t3) {
        var c3, u3, l3, d3, p3 = this;
        return lt2(this._cosUploadMethod) ? this.timUploadPlugin ? this._uploadWithPreSigUrl(t3) : (c3 = new G2("upload"), u3 = "".concat(this._n, ".uploadByCOS"), l3 = Date.now(), d3 = this._getFile(t3), new Promise(function(a3, s3) {
          var e3 = v2 ? p3._createCosOptionsWXMiniApp(t3) : p3._createCosOptionsWeb(t3), r3 = p3;
          p3._cosUploadMethod(e3, function(e4, t4) {
            var n3, o3, i3 = /* @__PURE__ */ Object.create(null);
            t4 ? e4 || O2(t4.files) && t4.files[0].error ? (n3 = new E2({ code: L2.MSG_F_UPLOAD_FAIL }), c3.setError(n3).end(), M2.l("".concat(u3, " failed. error:"), t4.files[0].error), 403 === t4.files[0].error.statusCode && p3._getAuthorizationKey(), s3(n3)) : (i3.fileName = d3.name, i3.fileSize = d3.size, i3.fileType = d3.type.slice(d3.type.indexOf("/") + 1).toLowerCase(), i3.location = (v2 ? t4 : t4.files[0].data).Location, n3 = Date.now() - l3, t4 = r3._formatFileSize(d3.size), o3 = r3._formatSpeed(1e3 * d3.size / n3), t4 = "size:".concat(t4, " time:").concat(n3, "ms speed:").concat(o3), M2.l("".concat(u3, " success. name:").concat(d3.name, " ").concat(t4)), a3(i3), (o3 = p3.get(26)).addCost(Wn2, n3), o3.addFileSize(Wn2, d3.size), c3.setMessage(t4).end()) : (i3 = new E2({ code: L2.MSG_F_UPLOAD_FAIL }), c3.setError(i3).end(), M2.w("".concat(u3, " failed. error:"), e4), 403 === e4.statusCode && p3._getAuthorizationKey(), s3(i3));
          });
        })) : (this.warn("PluginUndetected"), D2({ code: L2.COS_UNDETECTED }));
      } }, { key: "_uploadWithPreSigUrl", value: function(e3) {
        var p3 = this, _3 = "".concat(this._n, "._uploadWithPreSigUrl"), h3 = this._getFile(e3);
        return this._createCosOptionsPreSigUrl(e3).then(function(d3) {
          return new Promise(function(a3, s3) {
            var r3 = new G2("upload"), e4 = d3.requestSnapshotUrl, c3 = void 0 === e4 ? void 0 : e4, u3 = K2(d3, ya), l3 = Date.now();
            p3._cosUploadMethod(u3, function(e5, t3) {
              if (e5 || 403 === t3.statusCode)
                r3.setError(new E2(e5)).end(), o3 = { HttpStatusCode: 9999, CostTime: nn2(l3, false), error: e5, url: d3.url }, t3.data && t3.data.uploadIP && (o3.uploadIP = t3.data.uploadIP), p3._uploadSSOLog(o3), M2.l("".concat(_3, " failed, error:"), e5), s3(new E2({ code: L2.MSG_F_UPLOAD_FAIL }));
              else {
                var n3 = /* @__PURE__ */ Object.create(null), o3 = t3.data.location || "", e5 = (p3.isPrivateNetWork() || 0 !== o3.indexOf("https://") && 0 !== o3.indexOf("http://") || (o3 = o3.split("//")[1]), n3.fileName = h3.name, n3.fileSize = h3.size, n3.fileType = h3.type.slice(h3.type.indexOf("/") + 1).toLowerCase(), n3.location = o3, nn2(l3, false)), o3 = p3._formatFileSize(h3.size), i3 = p3._formatSpeed(1e3 * h3.size / e5), o3 = "size:".concat(o3, " time:").concat(e5, "ms speed:").concat(i3, " res:").concat(JSON.stringify(t3.data)), i3 = (M2.l("".concat(_3, " ok. name:").concat(h3.name, " ").concat(o3)), r3.setMessage(o3).end(), { HttpStatusCode: t3.statusCode, FileSize: h3.size, CostTime: e5, url: d3.url }), o3 = (t3.data && t3.data.uploadIP && (i3.uploadIP = t3.data.uploadIP), p3._uploadSSOLog(i3), p3.get(26)), i3 = (o3.addCost(Wn2, e5), o3.addFileSize(Wn2, h3.size), []);
                if (u3.thumbUrl && u3.largeUrl && i3.push.apply(i3, [p3._getSmallImageInfoByUrl(u3.thumbUrl, n3), p3._getLargeImageInfoByUrl(u3.largeUrl, n3)]), 1 === p3.uploadFileType && p3.isSimpleCos && !p3.isPrivateNetWork() && (i3.push(p3._getImageInfoArray(u3.downloadUrl, n3)), t3.data.uploadIP) && i3.push(p3._getDownloadIP(u3.downloadUrl.split("//")[1].split("/")[0], n3)), c3 && i3.push(p3._getSnapshotInfoByUrl(c3, n3)), 0 < i3.length)
                  return Promise.all(i3).then(function() {
                    a3(n3);
                  });
                a3(n3);
              }
            });
          });
        });
      } }, { key: "_getDownloadIP", value: function(e3, n3) {
        var o3 = "".concat(this._n, "._getDownloadIP"), i3 = Date.now();
        return this.req({ P: k2.GET_IP, data: { domainName: e3 } }).then(function(e4) {
          var t3;
          e4.data && e4.data.ip && (M2.l("".concat(o3, " ok. downloadIP:").concat(e4.data.ip, " cost:").concat(nn2(i3))), (t3 = n3.location.split("/"))[0] = e4.data.ip, n3.location = t3.join("/"));
        }).catch(function(e4) {
        });
      } }, { key: "_getImageInfoArray", value: function(t3, n3) {
        var o3 = this, i3 = "".concat(this._n, "._getImageInfoArray"), a3 = Date.now();
        return this.req({ P: k2.GET_IMAGE_INFO, data: { imageUrl: t3 } }).then(function(e3) {
          e3 = e3.data || {};
          return M2.l("".concat(i3, " ok. data: ").concat(JSON.stringify(e3), " cost:").concat(nn2(a3))), n3.imageInfoArray = e3.imageInfoArray, e3;
        }).catch(function(e3) {
          n3.imageInfoArray = void 0, o3._uploadSSOLog({ HttpStatusCode: 1e4, CostTime: nn2(a3, false), url: t3 });
        });
      } }, { key: "_uploadSSOLog", value: function(e3) {
        var t3, n3;
        this.isSimpleCos && ((t3 = new G2()).setEventType(18), e3.error && t3.setError(new E2(e3.error)), n3 = "HttpStatusCode:".concat(e3.HttpStatusCode, "|CosRequestId:").concat(e3.CosRequestId || "", "|") + "FileAlreadyExist:".concat(e3.FileAlreadyExist || 0, "|FileSize:").concat(e3.FileSize || 0, "|CostTime:").concat(e3.CostTime), e3.uploadIP && (n3 += "|FinalIP:".concat(e3.uploadIP)), t3.setMessage("OK").setMoreMessage(e3.url).setExtension(n3).end());
      } }, { key: "_getRawOrUploadProxyUrl", value: function(e3) {
        var t3 = this.get(12).getFileUploadProxy(), n3 = e3;
        return n3 = t3 ? e3.replace(/^https:\/\/[^/]+/, t3) : n3;
      } }, { key: "_getFile", value: function(e3) {
        return O2(e3.file.files) || dt2(e3.file.files) ? e3.file.files[0] : e3.file;
      } }, { key: "_formatFileSize", value: function(e3) {
        return e3 < 1024 ? e3 + "B" : e3 < 1048576 ? Math.floor(e3 / 1024) + "KB" : Math.floor(e3 / 1048576) + "MB";
      } }, { key: "_formatSpeed", value: function(e3) {
        return e3 <= 1048576 ? Yt2(e3 / 1024, 1) + "KB/s" : Yt2(e3 / 1048576, 1) + "MB/s";
      } }, { key: "_createCosOptionsWeb", value: function(t3) {
        var e3 = this._getFile(t3), n3 = e3.name, n3 = n3.slice(n3.lastIndexOf(".")), n3 = this._genFileName("".concat(ft2(999999)).concat(n3));
        return { files: [{ Bucket: "".concat(this.bucketName, "-").concat(this.appid), Region: this.region, Key: "".concat(this.directory, "/").concat(n3), Body: e3 }], SliceSize: 1048576, onProgress: function(e4) {
          if ("function" == typeof t3.onProgress)
            try {
              t3.onProgress(e4.percent);
            } catch (e5) {
              M2.w("onProgress callback error:", e5);
            }
        }, onFileFinish: function(e4, t4, n4) {
        } };
      } }, { key: "_createCosOptionsWXMiniApp", value: function(t3) {
        var e3 = this._getFile(t3), n3 = this._genFileName(e3.name), e3 = e3.url;
        return { Bucket: "".concat(this.bucketName, "-").concat(this.appid), Region: this.region, Key: "".concat(this.directory, "/").concat(n3), FilePath: e3, onProgress: function(e4) {
          if (M2.l(JSON.stringify(e4)), "function" == typeof t3.onProgress)
            try {
              t3.onProgress(e4.percent);
            } catch (e5) {
              M2.w("onProgress callback error:", e5);
            }
        } };
      } }, { key: "_createCosOptionsPreSigUrl", value: function(r3) {
        var e3, c3 = this, u3 = "", l3 = "", t3 = 0, n3 = this._getFile(r3), t3 = v2 || ye2 ? (u3 = r3.message.type === A2.MSG_FILE ? (e3 = (e3 = n3.name).slice(e3.lastIndexOf(".")), this._genFileName("".concat(ft2(999999)).concat(e3))) : this._genFileName(n3.name), l3 = n3.url, 1) : (e3 = (e3 = n3.name).slice(e3.lastIndexOf(".")), u3 = this._genFileName("".concat(ft2(999999)).concat(e3)), l3 = n3, 0);
        return this._getCosPreSigUrl({ fileType: this.uploadFileType, fileName: u3, uploadMethod: t3, duration: this.duration, userID: r3.message.from, conversationType: Pt2(r3.message.conversationID) ? 1 : 2 }).then(function(e4) {
          var t4 = c3.isSimpleCos ? e4.preSig[0] : e4, n4 = t4.uploadUrl, o3 = t4.downloadUrl, i3 = t4.requestSnapshotUrl, i3 = void 0 === i3 ? void 0 : i3, a3 = t4.thumbUrl, s3 = t4.largeUrl, t4 = t4.fileKey, e4 = e4.uploadIP, e4 = void 0 === e4 ? "" : e4;
          return { url: c3._getRawOrUploadProxyUrl(n4), fileType: c3.uploadFileType, fileName: u3, resources: l3, downloadUrl: o3, requestSnapshotUrl: i3, thumbUrl: a3, largeUrl: s3, fileKey: t4, uploadIP: !c3.isPrivateNetWork() && e4, onProgress: function(e5) {
            if ("function" == typeof r3.onProgress)
              try {
                r3.onProgress(e5.percent);
              } catch (e6) {
                M2.w("onProgress callback error:", e6), M2.e(e6);
              }
          } };
        });
      } }, { key: "_genFileName", value: function(e3) {
        return "".concat(qt2(), "-").concat(e3);
      } }, { key: "_setUploadFileType", value: function(e3) {
        this.uploadFileType = e3;
      } }, { key: "_getSnapshotInfoByUrl", value: function(e3, n3) {
        var o3 = this, i3 = "_getSnapshotInfoByUrl", a3 = new G2(i3);
        return this.req({ P: k2.VIDEO_COVER, data: { platform: this.getPlatform(), coverName: this._genFileName(ft2(99999)), requestSnapshotUrl: e3 } }).then(function(e4) {
          var t3, e4 = (e4.data || {}).snapshotUrl;
          return M2.l("".concat(o3._n, ".").concat(i3, " ok. snapshotUrl:").concat(e4)), a3.setMessage("snapshotUrl:".concat(e4)).end(), S2(e4) ? {} : Ft2(t3 = ao2(e4, o3._fileDownloadProxy, o3._authKey, o3._fileDNList)).then(function(e5) {
            n3.snapshotInfo = { snapshotUrl: t3, snapshotWidth: e5.width, snapshotHeight: e5.height };
          });
        }).catch(function(e4) {
          return M2.w("".concat(o3._n, ".").concat(i3, " failed. error:"), e4), a3.setCode(e4.errorCode).setMessage(e4.errorInfo).end(), {};
        });
      } }, { key: "_getSmallImageInfoByUrl", value: function(t3, n3) {
        return Ft2(ao2(t3, this._fileDownloadProxy, this._authKey, this._fileDNList)).then(function(e3) {
          n3.smallImageUrl = t3, n3.smallImageWidth = e3.width, n3.smallImageHeight = e3.height;
        });
      } }, { key: "_getLargeImageInfoByUrl", value: function(t3, n3) {
        return Ft2(ao2(t3, this._fileDownloadProxy, this._authKey, this._fileDNList)).then(function(e3) {
          n3.largeImageUrl = t3, n3.largeImageWidth = e3.width, n3.largeImageHeight = e3.height;
        });
      } }, { key: "_isEmptyFileList", value: function(e3) {
        return !(!dt2(e3) || 0 !== e3.length);
      } }, { key: "reset", value: function() {
        M2.l("".concat(this._n, ".reset"));
      } }]), ka), Ta = ["downloadKey", "pbDownloadKey", "messageList"], Da = (e2(Sa, [{ key: "uploadMergerMessage", value: function(e3, n3) {
        var o3 = "".concat(this._n, ".").concat("uploadMergerMessage"), e3 = (M2.d("".concat(o3, " message:"), e3, "messageBytes:".concat(n3)), JSON.parse(JSON.stringify(e3.payload)).messageList), i3 = e3.length, t3 = this._msgM.get(17).getFileDNList(), a3 = new G2("uploadMergerMessage");
        return e3.forEach(function(e4) {
          so2(e4.messageBody[0].type, e4.messageBody, t3);
        }), this._msgM.req({ P: k2.UPLOAD_MERGER_MSG, data: { messageList: e3 } }).then(function(e4) {
          M2.d("".concat(o3, " ok. response:"), e4.data);
          var e4 = e4.data, t4 = e4.pbDownloadKey, e4 = e4.downloadKey, t4 = { pbDownloadKey: t4, downloadKey: e4, messageNumber: i3 };
          return a3.setMessage("".concat(i3, "-").concat(n3, "-").concat(e4)).end(), t4;
        }).catch(function(e4) {
          throw M2.w("".concat(o3, " failed. error:"), e4), a3.setError(e4).end(), e4;
        });
      } }, { key: "downloadMergerMessage", value: function(i3) {
        var a3 = this, s3 = "".concat(this._n, ".").concat("downloadMergerMessage"), t3 = (M2.d("".concat(s3, " message:"), i3), i3.payload.downloadKey), r3 = this._msgM.getFileDownloadProxy(), c3 = this._msgM.getDowloadFileAuthKey(), u3 = new G2("downloadMergerMessage");
        return u3.setMessage("downloadKey:".concat(t3)), this._msgM.req({ P: k2.DOWNLOAD_MERGER_MSG, data: { downloadKey: t3 } }).then(function(e3) {
          M2.d("".concat(s3, " ok. response:"), e3.data);
          var t4, n3, o3 = a3._msgM.get(17).getFileDNList();
          return lt2(i3.clearElement) ? ((t4 = i3.payload).downloadKey, t4.pbDownloadKey, t4.messageList, t4 = K2(t4, Ta), i3.clearElement(), i3.setElement({ type: i3.type, content: y2({ messageList: e3.data.messageList }, t4) }, r3, c3, o3)) : (n3 = [], e3.data.messageList.forEach(function(e4) {
            S2(e4) || (e4 = new yo2(e4, r3, c3, o3), n3.push(e4));
          }), i3.payload.messageList = n3, i3.payload.downloadKey = "", i3.payload.pbDownloadKey = ""), u3.end(), i3;
        }).catch(function(e3) {
          throw M2.w("".concat(s3, " failed. key:").concat(t3, " error:"), e3), u3.setError(e3).end(), e3;
        });
      } }, { key: "createMergerMessagePack", value: function(e3, t3, n3) {
        return e3.conversationType === A2.CONV_C2C ? this._createC2CMergerMessagePack(e3, t3, n3) : this._createGroupMergerMessagePack(e3, t3, n3);
      } }, { key: "_createC2CMergerMessagePack", value: function(e3, t3, n3) {
        var o3 = null, i3 = (t3 && (t3.offlinePushInfo && (o3 = t3.offlinePushInfo), true === t3.onlineUserOnly) && (o3 ? o3.disablePush = true : o3 = { disablePush: true }), []), a3 = (f2(t3) && f2(t3.messageControlInfo) && (a3 = (r3 = t3.messageControlInfo).excludedFromUnreadCount, s3 = r3.excludedFromLastMessage, r3 = r3.excludedFromContentModeration, true === a3 && i3.push("NoUnread"), true === s3 && i3.push("NoLastMsg"), true === r3) && i3.push("NoMsgCheck"), ""), s3 = (m2(e3.cloudCustomData) && 0 < e3.cloudCustomData.length && (a3 = e3.cloudCustomData), n3.pbDownloadKey), r3 = n3.downloadKey, n3 = n3.messageNumber, c3 = e3.payload, u3 = c3.title, l3 = c3.abstractList, c3 = c3.compatibleText, d3 = this._msgM.get(6), d3 = d3 && d3.isOnlineMessage(e3, t3) ? 0 : void 0;
        return { P: k2.SEND_C2C_MSG, data: { fromAccount: this._msgM.getMyUserID(), toAccount: e3.to, msgBody: [{ msgType: e3.type, msgContent: { pbDownloadKey: s3, downloadKey: r3, title: u3, abstractList: l3, compatibleText: c3, messageNumber: n3 } }], cloudCustomData: a3, clientTime: e3.clientTime, msgSeq: e3.sequence, msgRandom: e3.random, msgLifeTime: d3, offlinePushInfo: wo2(o3), messageControlInfo: 0 !== d3 ? i3 : void 0, isSupportExtension: true === e3.isSupportExtension ? 1 : 0, isRelayMessage: true === e3._relayFlag ? 1 : 0 } };
      } }, { key: "_createGroupMergerMessagePack", value: function(e3, t3, n3) {
        var o3 = null, i3 = (t3 && t3.offlinePushInfo && (o3 = t3.offlinePushInfo), []), a3 = (f2(t3) && f2(t3.messageControlInfo) && (a3 = (r3 = t3.messageControlInfo).excludedFromUnreadCount, s3 = r3.excludedFromLastMessage, r3 = r3.excludedFromContentModeration, true === a3 && i3.push("NoUnread"), true === s3 && i3.push("NoLastMsg"), true === r3) && i3.push("NoMsgCheck"), ""), s3 = (m2(e3.cloudCustomData) && 0 < e3.cloudCustomData.length && (a3 = e3.cloudCustomData), n3.pbDownloadKey), r3 = n3.downloadKey, n3 = n3.messageNumber, c3 = e3.payload, u3 = c3.title, l3 = c3.abstractList, c3 = c3.compatibleText, d3 = this._msgM.get(7), t3 = d3 && d3.isOnlineMessage(e3, t3) ? 1 : 0;
        return { P: k2.SEND_GRP_MSG, data: { fromAccount: this._msgM.getMyUserID(), groupID: e3.to, msgBody: [{ msgType: e3.type, msgContent: { pbDownloadKey: s3, downloadKey: r3, title: u3, abstractList: l3, compatibleText: c3, messageNumber: n3 } }], random: e3.random, priority: e3.priority, clientSequence: e3.clientSequence, groupAtInfo: void 0, cloudCustomData: a3, onlineOnlyFlag: t3, offlinePushInfo: wo2(o3), clientTime: e3.clientTime, needReadReceipt: true !== e3.needReadReceipt || d3.isMessageFromOrToAVChatroom(e3.to) ? 0 : 1, messageControlInfo: 0 == t3 ? i3 : void 0, isSupportExtension: true === e3.isSupportExtension ? 1 : 0, isRelayMessage: true === e3._relayFlag ? 1 : 0 } };
      } }]), Sa), Ea = { ERR_SVR_COMM_SENSITIVE_TEXT: 80001, ERR_SVR_COMM_BODY_SIZE_LIMIT: 80002, OPEN_SERVICE_OVERLOAD_ERROR: 60022, ERR_SVR_MSG_PKG_PARSE_FAILED: 20001, ERR_SVR_MSG_INTERNAL_AUTH_FAILED: 20002, ERR_SVR_MSG_INVALID_ID: 20003, ERR_SVR_MSG_PUSH_DENY: 20006, ERR_SVR_MSG_IN_PEER_BLACKLIST: 20007, ERR_SVR_MSG_BOTH_NOT_FRIEND: 20009, ERR_SVR_MSG_NOT_PEER_FRIEND: 20010, ERR_SVR_MSG_NOT_SELF_FRIEND: 20011, ERR_SVR_MSG_SHUTUP_DENY: 20012, ERR_SVR_GROUP_INVALID_PARAMETERS: 10004, ERR_SVR_GROUP_PERMISSION_DENY: 10007, ERR_SVR_GROUP_NOT_FOUND: 10010, ERR_SVR_GROUP_INVALID_GROUPID: 10015, ERR_SVR_GROUP_REJECT_FROM_THIRDPARTY: 10016, ERR_SVR_GROUP_SHUTUP_DENY: 10017, MSG_SEND_FAIL: 2100, OVER_FREQUENCY_LIMIT: 2996 }, La = [L2.MSG_ONPROGRESS_ERR, L2.MSG_I_SELECT_F_FIRST, L2.MSG_I_TYPES_LIMIT, L2.MSG_F_IS_EMPTY, L2.MSG_I_SIZE_LIMIT, L2.MSG_F_SELECT_F_FIRST, L2.MSG_F_SIZE_LIMIT, L2.MSG_V_SIZE_LIMIT, L2.MSG_V_TYPES_LIMIT, L2.MSG_A_UPLOAD_FAIL, L2.MSG_A_SIZE_LIMIT, L2.COS_UNDETECTED];
      function Sa(e3) {
        d2(this, Sa), this._n = "MergerMessageHandler", this._msgM = e3;
      }
      function ka(e3) {
        d2(this, ka), (e3 = va.call(this, e3))._n = "UploadModule", e3.TIMUploadPlugin = null, e3.timUploadPlugin = null, e3.COSSDK = null, e3._cosUploadMethod = null, e3.expiredTimeLimit = 600, e3.appid = 0, e3.bucketName = "", e3.ciUrl = "", e3.directory = "", e3.downloadUrl = "", e3.uploadUrl = "", e3.region = "ap-shanghai", e3.cos = null, e3.cosOptions = { secretId: "", secretKey: "", sessionToken: "", expiredTime: 0 }, e3.uploadFileType = "", e3.duration = 900, e3.tryCount = 0, e3.UPLOAD_SIZE_LIMIT = { A: 20971520, F: 104857600, I: 20971520, V: 104857600 }, e3.isSimpleCos = false, e3._fileDownloadProxy = "", e3._authKey = "", e3._fileDNList = Ma;
        var t3 = e3.getIEmitInst();
        return t3.on(P2.A2KEY_AND_TINYID_UPDATED, e3._init, i2(e3)), t3.on(P2.CLOUD_CONFIG, e3._onCloudConfig, i2(e3)), e3;
      }
      function Aa(e3) {
        var t3 = false;
        return Object.values(Ea).includes(e3) && (t3 = true), t3 = 120001 <= e3 && e3 <= 13e4 || 10100 <= e3 && e3 <= 10200 ? true : t3;
      }
      var Ra, Oa, Na, Ga, Pa, Ua, ba = ["conversationID", "timePosition", "timePeriod"], wa = (t2(za, u2), Ua = n2(za), e2(za, [{ key: "createTextMessage", value: function(e3) {
        var t3 = this.getMyUserID(), n3 = (e3.currentUser = t3, e3.senderTinyID = this.getMyTinyID(), new Do2(e3)), e3 = m2(e3.payload) ? e3.payload : e3.payload.text, e3 = new eo2({ text: e3 }), t3 = this._getNickAndAvatarByUserID(t3);
        return n3.setElement(e3), n3.setNickAndAvatar(t3), n3.setNameCard(this._getNameCardByGroupID(n3)), n3;
      } }, { key: "createImageMessage", value: function(e3) {
        var t3 = this.getMyUserID(), n3 = (e3.currentUser = t3, e3.senderTinyID = this.getMyTinyID(), new Do2(e3));
        if (v2) {
          var o3 = e3.payload.file;
          if (ct2(o3))
            return void this.warn("FileUnsupportedInMP", "createImageMessage");
          var i3 = o3.tempFiles[0].path || o3.tempFiles[0].tempFilePath, o3 = { url: i3, name: i3.slice(i3.lastIndexOf("/") + 1), size: o3.tempFiles && o3.tempFiles[0].size || 1, type: i3.slice(i3.lastIndexOf(".") + 1).toLowerCase() };
          e3.payload.file = o3;
        } else
          ye2 ? (o3 = { url: (i3 = e3.payload.file).uri, name: i3.fileName, size: i3.fileSize || 1, type: i3.type, width: i3.width, height: i3.height }, e3.payload.file = o3) : Ce2 && (ct2(e3.payload.file) ? (i3 = e3.payload.file, e3.payload.file = { files: [i3] }) : f2(e3.payload.file) && "undefined" != typeof uni && (o3 = e3.payload.file.tempFiles[0], e3.payload.file = { files: [o3] }));
        i3 = new uo2({ imageFormat: Xe2.UNKNOWN, uuid: this._generateUUID(e3.payload.file), file: e3.payload.file }), o3 = this._getNickAndAvatarByUserID(t3);
        return n3.setElement(i3), n3.setNickAndAvatar(o3), n3.setNameCard(this._getNameCardByGroupID(n3)), this._messageOptionsMap.set(n3.clientSequence, e3), n3;
      } }, { key: "createAudioMessage", value: function(e3) {
        var t3 = e3.payload.file, n3 = (v2 && (n3 = { url: t3.tempFilePath, name: t3.tempFilePath.slice(t3.tempFilePath.lastIndexOf("/") + 1), size: t3.fileSize, second: parseInt(t3.duration) / 1e3, type: t3.tempFilePath.slice(t3.tempFilePath.lastIndexOf(".") + 1).toLowerCase() }, e3.payload.file = n3), ye2 && (n3 = { url: t3.uri, name: t3.uri.slice(t3.uri.lastIndexOf("/") + 1), size: t3.fileSize || 1, second: Math.floor(t3.duration / 1e3), type: t3.uri.slice(t3.uri.lastIndexOf(".") + 1).toLowerCase() }, e3.payload.file = n3), this.getMyUserID()), o3 = (e3.currentUser = n3, e3.senderTinyID = this.getMyTinyID(), new Do2(e3)), t3 = new po2({ second: Math.floor(t3.duration / 1e3), size: t3.fileSize || t3.size || 1, url: t3.tempFilePath, uuid: this._generateUUID(e3.payload.file) }), n3 = this._getNickAndAvatarByUserID(n3);
        return o3.setElement(t3), o3.setNickAndAvatar(n3), o3.setNameCard(this._getNameCardByGroupID(o3)), this._messageOptionsMap.set(o3.clientSequence, e3), o3;
      } }, { key: "createVideoMessage", value: function(e3) {
        var t3 = this.getMyUserID(), n3 = (e3.currentUser = t3, e3.senderTinyID = this.getMyTinyID(), e3.payload.file.thumbUrl = "", e3.payload.file.thumbSize = 0, {});
        if (v2) {
          if (ve2)
            return void this.warn("VideoUnsupportedInAlipay");
          if (ct2(e3.payload.file))
            return void this.warn("FileUnsupportedInMP", "createVideoMessage");
          var o3 = e3.payload.file;
          O2(o3.tempFiles) && (o3 = o3.tempFiles[0]), n3.url = o3.tempFilePath, n3.name = o3.tempFilePath.slice(o3.tempFilePath.lastIndexOf("/") + 1), n3.size = o3.size || 1, n3.second = o3.duration || 0, n3.type = o3.tempFilePath.slice(o3.tempFilePath.lastIndexOf(".") + 1).toLowerCase();
        } else
          ye2 ? (o3 = e3.payload.file, n3.url = o3.uri, n3.name = o3.fileName, n3.size = o3.fileSize || 1, n3.second = o3.duration || 0, n3.type = o3.type.split("/")[1]) : Ce2 && (ct2(e3.payload.file) ? (o3 = e3.payload.file, e3.payload.file.files = [o3]) : f2(e3.payload.file) && "undefined" != typeof uni && (o3 = e3.payload.file.tempFile, e3.payload.file.files = [o3]), o3 = e3.payload.file, n3.url = window.URL.createObjectURL(o3.files[0]), n3.name = o3.files[0].name, n3.size = o3.files[0].size || 1, n3.second = o3.files[0].duration || 0, n3.type = o3.files[0].type.split("/")[1]);
        e3.payload.file.videoFile = n3;
        o3 = new Do2(e3), n3 = new Io2({ videoFormat: n3.type, videoSecond: Yt2(n3.second, 0), videoSize: n3.size, remoteVideoUrl: "", videoUrl: n3.url, videoUUID: this._generateUUID(e3.payload.file.videoFile), thumbUUID: this._generateUUID(e3.payload.file.videoFile), thumbWidth: e3.payload.file.width || 200, thumbHeight: e3.payload.file.height || 200, thumbUrl: e3.payload.file.thumbUrl, thumbSize: e3.payload.file.thumbSize, thumbFormat: e3.payload.file.thumbUrl.slice(e3.payload.file.thumbUrl.lastIndexOf(".") + 1).toLowerCase() }), t3 = this._getNickAndAvatarByUserID(t3);
        return o3.setElement(n3), o3.setNickAndAvatar(t3), o3.setNameCard(this._getNameCardByGroupID(o3)), this._messageOptionsMap.set(o3.clientSequence, e3), o3;
      } }, { key: "createCustomMessage", value: function(e3) {
        var t3 = this.getMyUserID(), n3 = (e3.currentUser = t3, e3.senderTinyID = this.getMyTinyID(), new Do2(e3)), e3 = new vo2({ data: e3.payload.data, description: e3.payload.description, extension: e3.payload.extension }), t3 = this._getNickAndAvatarByUserID(t3);
        return n3.setElement(e3), n3.setNickAndAvatar(t3), n3.setNameCard(this._getNameCardByGroupID(n3)), n3;
      } }, { key: "createFaceMessage", value: function(e3) {
        var t3 = this.getMyUserID(), n3 = (e3.currentUser = t3, e3.senderTinyID = this.getMyTinyID(), new Do2(e3)), e3 = new lo2(e3.payload), t3 = this._getNickAndAvatarByUserID(t3);
        return n3.setElement(e3), n3.setNickAndAvatar(t3), n3.setNameCard(this._getNameCardByGroupID(n3)), n3;
      } }, { key: "createMergerMessage", value: function(e3) {
        var t3 = this.getMyUserID(), t3 = (e3.currentUser = t3, e3.senderTinyID = this.getMyTinyID(), this._getNickAndAvatarByUserID(t3)), n3 = new Do2(e3), e3 = new Co2(e3.payload);
        return n3.setElement(e3), n3.setNickAndAvatar(t3), n3.setNameCard(this._getNameCardByGroupID(n3)), n3.setRelayFlag(true), n3;
      } }, { key: "createForwardMessage", value: function(e3) {
        var t3, n3, o3 = e3.to, i3 = e3.conversationType, a3 = e3.priority, s3 = e3.payload, r3 = e3.needReadReceipt, c3 = e3.receiverList;
        return O2(s3._elements) ? (t3 = this.getMyUserID(), n3 = this._getNickAndAvatarByUserID(t3), s3.type === A2.MSG_GRP_TIP ? D2({ code: L2.MSG_FORWARD_TYPE_INVALID }) : (i3 = { to: o3, conversationType: i3, conversationID: "".concat(i3).concat(o3), priority: a3, isPlaceMessage: 0, status: An2, currentUser: t3, senderTinyID: this.getMyTinyID(), cloudCustomData: e3.cloudCustomData || s3.cloudCustomData || "", needReadReceipt: r3, receiverList: c3, isSupportExtension: e3.isSupportExtension || false }, (o3 = new Do2(i3)).setElement(s3._elements[0]), o3.setNickAndAvatar(n3), o3.setNameCard(this._getNameCardByGroupID(s3)), o3.setRelayFlag(true), o3)) : D2({ code: L2.MSG_FORWARD_INVALID_ELEMENTS });
      } }, { key: "downloadMergerMessage", value: function(e3) {
        return this._mergerMessageHandler.downloadMergerMessage(e3);
      } }, { key: "createFileMessage", value: function(e3) {
        if (v2) {
          if (!_e3 && !ge2 && !Ie2)
            return;
          var t3 = I2.getSystemInfoSync().SDKVersion;
          if (_e3 && Vt2(t3, "2.5.0") < 0)
            return void this.warn("WXChooseMessageFile");
          if (ge2 && Vt2(t3, "1.18.0") < 0)
            return void this.warn("QQChooseMessageFile");
        }
        Ce2 || Ie2 ? ct2(e3.payload.file) ? (t3 = e3.payload.file, e3.payload.file = { files: [t3] }) : f2(e3.payload.file) && "undefined" != typeof uni && (o3 = (t3 = e3.payload.file).tempFiles, t3 = t3.files, n3 = null, O2(o3) ? n3 = o3[0] : O2(t3) && (n3 = t3[0]), e3.payload.file = { files: [n3] }) : _e3 || ge2 ? (t3 = y2(y2({}, (o3 = e3.payload.file.tempFiles)[0]), {}, { url: o3[0].path }), e3.payload.file = { files: [t3] }) : ye2 && (o3 = y2(y2({}, n3 = e3.payload.file), {}, { url: n3.uri }), e3.payload.file = { files: [o3] });
        var t3 = this.getMyUserID(), n3 = (e3.currentUser = t3, e3.senderTinyID = this.getMyTinyID(), new Do2(e3)), o3 = new mo2({ uuid: this._generateUUID(e3.payload.file), file: e3.payload.file }), t3 = this._getNickAndAvatarByUserID(t3);
        return n3.setElement(o3), n3.setNickAndAvatar(t3), n3.setNameCard(this._getNameCardByGroupID(n3)), this._messageOptionsMap.set(n3.clientSequence, e3), n3;
      } }, { key: "createLocationMessage", value: function(e3) {
        var t3 = this.getMyUserID(), n3 = (e3.currentUser = t3, e3.senderTinyID = this.getMyTinyID(), new Do2(e3)), e3 = new Mo2(e3.payload), t3 = this._getNickAndAvatarByUserID(t3);
        return n3.setElement(e3), n3.setNickAndAvatar(t3), n3.setNameCard(this._getNameCardByGroupID(n3)), n3;
      } }, { key: "_onNoModule", value: function() {
        return D2({ code: L2.NO_MODULE });
      } }, { key: "sendMessageInstance", value: function(i3, a3) {
        var s3 = this;
        if (false === this.get(29).filterMessage(i3, a3))
          return i3.hasRiskContent = true, this._onSendMessageFailed(i3, new E2({ code: L2.PROFANITY_FOUND }));
        var r3, c3, u3, l3, t3 = null;
        if (i3.conversationType === A2.CONV_C2C)
          t3 = this.get(6);
        else {
          if (i3.conversationType !== A2.CONV_GROUP)
            return D2({ code: L2.MSG_INVALID_CONV_TYPE });
          t3 = this.get(7);
        }
        return t3 ? (c3 = "".concat(this._n, ".sendMessageInstance"), u3 = this.get(11), l3 = t3.isOnlineMessage(i3, a3), this.get(17).upload(i3).then(function() {
          return s3._getSendMessageSpecifiedKey(i3) === Yn2 && s3.get(26).addSuccessCount(Wn2), s3._guardForGroup(i3).then(function() {
            if (!i3.isSendable())
              return D2({ code: L2.MSG_F_URL_IS_EMPTY });
            s3._addSendMessageTotalCount(i3), r3 = Date.now();
            var e3 = function(e4) {
              var t4 = "utf-8";
              Ce2 && document && (t4 = document.charset.toLowerCase());
              var n3, o3 = 0, i4 = e4.length;
              if ("utf-8" === t4 || "utf8" === t4)
                for (var a4 = 0; a4 < i4; a4++)
                  (n3 = e4.codePointAt(a4)) <= 127 ? o3 += 1 : n3 <= 2047 ? o3 += 2 : n3 <= 65535 ? o3 += 3 : (o3 += 4, a4++);
              else if ("utf-16" === t4 || "utf16" === t4)
                for (var s4 = 0; s4 < i4; s4++)
                  (n3 = e4.codePointAt(s4)) <= 65535 ? o3 += 2 : (o3 += 4, s4++);
              else
                o3 = e4.replace(/[^\x00-\xff]/g, "aa").length;
              return o3;
            }(JSON.stringify(i3));
            return i3.type === A2.MSG_MERGER && 11264 < e3 ? s3._mergerMessageHandler.uploadMergerMessage(i3, e3).then(function(e4) {
              e4 = s3._mergerMessageHandler.createMergerMessagePack(i3, a3, e4);
              return s3.req(e4);
            }) : (u3.setMessageRandom(i3), t3.sendMessage(i3, a3));
          }).then(function(e3) {
            var e3 = e3.data, t4 = e3.time, n3 = e3.sequence, o3 = e3.readReceiptCode, e3 = e3.messageDropReason, e3 = (R2(o3) && 0 !== o3 && (new G2("sendMessageWithReceipt").setMessage("from:".concat(i3.from, " to:").concat(i3.to, " sequence:").concat(n3, " readReceiptCode:").concat(o3)).end(), M2.w("".concat(c3, " readReceiptCode:").concat(o3, " message:").concat(s3.getErrMsg(o3)))), e3 && (o3 = new G2("messageDropReason"), e3 = "from:".concat(i3.from, " to:").concat(i3.to, " sequence:").concat(n3, " messageDropReason:").concat(e3), o3.setMessage(e3).end(), M2.w("".concat(c3, " ").concat(e3))), s3._addSendMessageSuccessCount(i3, r3), s3._messageOptionsMap.delete(i3.clientSequence), true === i3.isResend && (o3 = u3.findMessage(i3.ID)) && (M2.l("".concat(c3, " resend ok. ID:").concat(o3.ID)), u3.deleteLocalMessage(o3)), i3.status = Rn2, i3.time = t4, false);
            return i3.conversationType === A2.CONV_GROUP ? i3.sequence = n3 : i3.conversationType === A2.CONV_C2C && (o3 = u3.getLatestMessageSentByMe(i3.conversationID)) && (t4 = o3.nick, n3 = o3.avatar, t4 === i3.nick && n3 === i3.avatar || (e3 = true)), e3 && u3.modifyMessageSentByMe({ conversationID: i3.conversationID, latestNick: i3.nick, latestAvatar: i3.avatar }), true === l3 ? i3._onlineOnlyFlag = true : (u3.appendToMessageList(i3), o3 = i3, f2(a3) && f2(a3.messageControlInfo) && (true === a3.messageControlInfo.excludedFromLastMessage && (i3._isExcludedFromLastMessage = true, o3 = ""), true === a3.messageControlInfo.excludedFromUnreadCount) && (i3._isExcludedFromUnreadCount = true), t4 = i3.conversationType, Gt2(i3.to) && (t4 = A2.CONV_TOPIC, s3.get(10).onMessageSent({ groupID: Jt2(i3.to), topicID: i3.to, lastMessage: o3 })), u3.onMessageSent({ conversationOptionsList: [{ conversationID: i3.conversationID, unreadCount: 0, type: t4, subType: i3.conversationSubType, lastMessage: o3 }] })), i3._relayFlag || "TIMImageElem" !== i3.type || Bt2(i3.payload.imageInfoArray), C2({ message: i3 });
          });
        }).catch(function(e3) {
          return s3._onSendMessageFailed(i3, e3, l3);
        })) : this._onNoModule();
      } }, { key: "_guardForGroup", value: function(e3) {
        if (e3.conversationType !== A2.CONV_GROUP)
          return Promise.resolve();
        var t3 = this.get(7);
        if (!t3)
          return this._onNoModule();
        if (Nt2({ groupID: e3.to })) {
          var n3 = t3.getLocalGroupProfile(e3.to);
          if (n3 && n3.isSupportTopic)
            return D2({ code: L2.MSG_SEND_GRP_WITH_TOPIC_FAIL });
        }
        return t3.guardForAVChatRoom(e3);
      } }, { key: "_onSendMessageFailed", value: function(e3, t3) {
        var n3 = 2 < arguments.length && void 0 !== arguments[2] && arguments[2], o3 = "".concat(this._n, "._onSendMessageFailed"), i3 = (e3.status = On2, 80001 !== t3.code && 80004 !== t3.code || (e3.hasRiskContent = true), this.get(11)), a3 = (i3.deleteMessageRandom(e3), 10100 <= t3.code && t3.code <= 10200 || 120001 <= t3.code && t3.code <= 13e4), n3 = (n3 || a3 || true === i3.appendToMessageList(e3) && M2.l("".concat(o3, " message stored, ID:").concat(e3.ID)), this._addSendMessageFailCountOnUser(e3, t3), new G2("sendMessage")), a3 = "head.seq:".concat(t3.data.headSeq, " type:").concat(e3.type, " from:").concat(e3.from, " to:").concat(e3.to);
        return Ce2 && ("connection" in navigator && (i3 = navigator.connection, a3 += " downlink:".concat(i3.downlink, " effectiveType:").concat(i3.effectiveType, " rtt:").concat(i3.rtt)), "memory" in window.performance) && (i3 = window.performance.memory, a3 += " usedJSHeapSize:".concat(i3.usedJSHeapSize, " totalJSHeapSize:").concat(i3.totalJSHeapSize, " jsHeapSizeLimit:").concat(i3.jsHeapSizeLimit)), n3.setMessage(a3).setError(t3).end(), M2.e("".concat(o3, " ").concat(a3, " error:"), t3), D2(new E2({ code: t3 && t3.code ? t3.code : L2.MSG_SEND_FAIL, message: t3 && t3.message ? t3.message : void 0, data: { message: e3 } }));
      } }, { key: "_getSendMessageSpecifiedKey", value: function(e3) {
        if ([A2.MSG_IMAGE, A2.MSG_AUDIO, A2.MSG_VIDEO, A2.MSG_FILE].includes(e3.type))
          return Yn2;
        if (e3.conversationType === A2.CONV_C2C)
          return Hn2;
        if (e3.conversationType === A2.CONV_GROUP) {
          var t3 = this.get(7);
          if (t3) {
            t3 = t3.getLocalGroupProfile(e3.to);
            if (t3)
              return e3 = t3.type, Ot2(e3) ? Kn2 : Bn2;
          }
        }
      } }, { key: "_addSendMessageTotalCount", value: function(e3) {
        e3 = this._getSendMessageSpecifiedKey(e3);
        e3 && this.get(26).addTotalCount(e3);
      } }, { key: "_addSendMessageSuccessCount", value: function(e3, t3) {
        var n3, e3 = this._getSendMessageSpecifiedKey(e3);
        e3 && ((n3 = this.get(26)).addSuccessCount(e3), n3.addCost(e3, nn2(t3, false)));
      } }, { key: "_addSendMessageFailCountOnUser", value: function(e3, t3) {
        var n3, t3 = t3.code, t3 = void 0 === t3 ? -1 : t3, o3 = this.get(26), e3 = this._getSendMessageSpecifiedKey(e3);
        e3 === Yn2 && (n3 = false, n3 = La.includes(t3) ? true : n3) ? o3.addFailedCountOfUserSide(Wn2) : Aa(t3) && e3 && o3.addFailedCountOfUserSide(e3);
      } }, { key: "resendMessage", value: function(e3, t3) {
        return e3.isResend = true, e3.status = An2, this.sendMessageInstance(e3, t3);
      } }, { key: "revokeMessage", value: function(n3) {
        var o3, i3, t3 = this, e3 = null;
        return n3.conversationType === A2.CONV_C2C ? e3 = this.get(6) : n3.conversationType === A2.CONV_GROUP && (e3 = this.get(7)), e3 ? ((o3 = new G2("revokeMessage")).setMessage("type:".concat(n3.type, " from:").concat(n3.from, " to:").concat(n3.to)), i3 = "".concat(this._n, ".").concat("revokeMessage"), e3.revokeMessage(n3).then(function(e4) {
          var e4 = e4.data.recallRetList;
          return S2(e4) || 0 === e4[0].retCode ? (M2.i("".concat(i3, " ok. ID:").concat(n3.ID)), n3.isRevoked = true, o3.end(), t3.get(11).onMessageRevoked([n3]), C2({ message: n3 })) : (e4 = new E2({ code: e4[0].retCode, data: { message: n3 } }), o3.setCode(e4.code).setMoreMessage(e4.message).end(), D2(e4));
        }).catch(function(e4) {
          o3.setError(e4).end();
          var t4 = new E2({ code: e4 && e4.code ? e4.code : L2.MSG_REVOKE_FAIL, message: e4 && e4.message ? e4.message : void 0, data: { message: n3 } });
          return M2.w("".concat(i3, " failed. error:"), e4), D2(t4);
        })) : this._onNoModule();
      } }, { key: "deleteMessage", value: function(e3) {
        var t3 = this, n3 = null, o3 = e3[0], i3 = o3.conversationID, a3 = "", s3 = [], r3 = [];
        if (o3.conversationType === A2.CONV_C2C)
          n3 = this.get(6), a3 = i3.replace(A2.CONV_C2C, ""), e3.forEach(function(e4) {
            e4 && e4.status === Rn2 && e4.conversationID === i3 && (e4._onlineOnlyFlag || s3.push("".concat(e4.sequence, "_").concat(e4.random, "_").concat(e4.time)), r3.push(e4));
          });
        else if (o3.conversationType === A2.CONV_GROUP)
          n3 = this.get(7), a3 = i3.replace(A2.CONV_GROUP, ""), e3.forEach(function(e4) {
            e4 && e4.status === Rn2 && e4.conversationID === i3 && (e4._onlineOnlyFlag || s3.push("".concat(e4.sequence)), r3.push(e4));
          });
        else if (o3.conversationType === A2.CONV_SYSTEM)
          return D2({ code: L2.CANNOT_DELETE_GRP_SYSTEM_NOTICE });
        if (!n3)
          return this._onNoModule();
        if (0 === s3.length)
          return this._onMessageDeleted(r3);
        30 < s3.length && (s3 = s3.slice(0, 30), r3 = r3.slice(0, 30));
        var c3 = new G2("deleteMessage"), u3 = (c3.setMessage("to:".concat(a3, " count:").concat(s3.length)), "".concat(this._n, ".").concat("deleteMessage"));
        return n3.deleteMessage({ to: a3, keyList: s3 }).then(function(e4) {
          return c3.end(), M2.i("".concat(u3, " ok")), t3._onMessageDeleted(r3);
        }).catch(function(e4) {
          c3.setError(e4).end(), M2.w("".concat(u3, " failed. error:"), e4);
          e4 = new E2({ code: e4 && e4.code ? e4.code : L2.MSG_DELETE_FAIL, message: e4 && e4.message ? e4.message : void 0 });
          return D2(e4);
        });
      } }, { key: "_onMessageDeleted", value: function(e3) {
        return this.get(11).onMessageDeleted(e3), T2({ messageList: e3 });
      } }, { key: "translateText", value: function(e3) {
        var o3 = "".concat(this._n, ".").concat("translateText"), t3 = e3.sourceTextList, n3 = e3.sourceLanguage, e3 = e3.targetLanguage, i3 = new G2("translateText");
        return i3.setMessage("sourceLanguage:".concat(n3, " targetLanguage:").concat(e3)), this.req({ P: k2.TRANSLATE_TEXT, data: { sourceTextList: t3, source: n3 || "auto", target: e3, from: this.getMyTinyID(), SDKAppID: this.getSDKAppID() } }).then(function(e4) {
          var e4 = e4.data, t4 = e4.error, n4 = e4.requestID, e4 = e4.translatedTextList;
          if (0 === t4.code)
            return i3.end(), M2.i("".concat(o3, " ok. requestID:").concat(n4)), C2({ translatedTextList: e4 });
          throw y2(y2({}, t4), {}, { requestID: n4 });
        }).catch(function(e4) {
          return i3.setCode(e4.code).setMoreMessage(e4.requestID).end(), M2.w("".concat(o3, " failed. error:"), e4), D2({ code: L2.TRANSLATE_TEXT_FAIL });
        });
      } }, { key: "convertVoiceToText", value: function(e3) {
        var t3, o3, i3, n3 = e3.message, e3 = e3.language, a3 = n3.payload.url, n3 = (n3.from === this.getMyUserID() && "out" === n3.flow && (a3 = n3.payload.remoteAudioUrl), /\.(wav|pcm|ogg-opus|speex|silk|mp3|m4a|aac|amr)/);
        return n3.test(a3) ? (n3 = n3.exec(a3)[1] || "mp3", t3 = "16k_zh-PY", e3 ? "zh (cmn-Hans-CN)" === e3 ? t3 = "16k_zh" : "en-US" === e3 ? t3 = "16k_en" : "yue-Hant-HK" === e3 ? t3 = "16k_yue" : "ja-JP" === e3 && (t3 = "16k_ja") : t3 = "16k_zh-PY", e3 = "serviceType:".concat(t3, " url:").concat(a3), o3 = "".concat(this._n, ".").concat("convertVoiceToText"), M2.i("".concat(o3, " ").concat(e3)), (i3 = new G2("convertVoiceToText")).setMessage(e3), this.req({ P: k2.VOICE_TO_TEXT, data: { url: a3, language: t3, SDKAppID: this.getSDKAppID(), format: n3 } }).then(function(e4) {
          var e4 = e4.data, t4 = e4.error, n4 = e4.requestID, e4 = e4.result;
          if (0 === t4.code)
            return i3.end(), M2.i("".concat(o3, " ok. requestID:").concat(n4)), C2({ result: e4 });
          throw y2(y2({}, t4), {}, { requestID: n4 });
        }).catch(function(e4) {
          return i3.setCode(e4.code).setMoreMessage(e4.requestID || "").end(), M2.w("".concat(o3, " failed. error:"), e4), D2({ code: L2.VOICE_TO_TEXT_FAIL });
        })) : D2({ code: L2.UNSUPPORTED_VOICE_FORMAT });
      } }, { key: "modifyRemoteMessage", value: function(n3) {
        var o3 = this, e3 = null, t3 = n3.conversationType, i3 = n3.to, a3 = this.get(7);
        if (!a3)
          return this._onNoModule();
        if (a3.isMessageFromOrToAVChatroom(i3))
          return D2({ code: L2.MSG_MODIFY_DISABLED_IN_AV, data: { message: n3 } });
        if (false === this.get(29).filterMessage(n3))
          return n3.hasRiskContent = true, D2({ code: L2.PROFANITY_FOUND, data: { message: n3 } });
        t3 === A2.CONV_C2C ? e3 = this.get(6) : t3 === A2.CONV_GROUP && (e3 = this.get(7));
        var s3 = new G2("modifyMessage"), r3 = (s3.setMessage("to:".concat(i3)), "".concat(this._n, ".modifyRemoteMessage"));
        return e3.modifyRemoteMessage(n3).then(function(e4) {
          s3.end(), M2.i("".concat(r3, " ok"));
          e4 = o3._onModifyRemoteMessageResp(n3, e4.data);
          return C2({ message: e4 });
        }).catch(function(e4) {
          var t4;
          return s3.setCode(e4.code).setMoreMessage(e4.message).end(), M2.w("".concat(r3, " failed. error:"), e4), 20027 === e4.code ? (t4 = o3._onModifyRemoteMessageResp(n3, e4.data), D2({ code: L2.MSG_MODIFY_CONFLICT, data: { message: t4 } })) : D2({ code: e4.code, message: e4.message, data: { message: n3 } });
        });
      } }, { key: "_generateSearchdata", value: function(e3) {
        var t3 = e3.conversationID, n3 = e3.timePosition, o3 = e3.timePeriod, e3 = K2(e3, ba);
        return N2(t3) || (Pt2(t3) && (e3.account = t3.replace(A2.CONV_C2C, "")), Ut2(t3) && (e3.groupID = t3.replace(A2.CONV_GROUP, ""))), R2(o3) && 0 < o3 && (R2(n3) && 0 < n3 ? e3.startTime = n3 - o3 : e3.startTime = Be2() - o3), e3.startTime && e3.startTime < 0 && (e3.startTime = void 0), R2(n3) && 0 < n3 && (e3.endTime = n3), e3;
      } }, { key: "searchCloudMessages", value: function(i3) {
        var a3 = this, e3 = "searchCloudMessages", s3 = "".concat(this._n, ".").concat(e3);
        if (!i3)
          return D2({ code: L2.OPTIONS_IS_EMPTY, message: this.getErrMsg(L2.OPTIONS_IS_EMPTY, e3) });
        var r3, c3, u3, t3 = i3.keywordList, n3 = i3.keywordListMatchType, o3 = i3.conversationID, l3 = i3.cursor, d3 = O2(i3.senderUserIDList) && 0 < i3.senderUserIDList.length, p3 = O2(i3.messageTypeList) && 0 < i3.messageTypeList.length;
        if (t3 || d3 || p3)
          return r3 = Date.now(), c3 = new G2(e3), u3 = "keywordList:".concat(t3, " keywordListMatchType:").concat(n3, " ") + "convID:".concat(o3, " cursor:").concat(l3), M2.l("".concat(s3, " ").concat(u3)), this.req({ P: k2.MSG_CLOUD_SEARCH, data: this._generateSearchdata(i3) }).then(function(e4) {
            var t4 = e4.data, n4 = t4.code, t4 = t4.message;
            if (0 !== n4)
              return t4 = a3.getErrMsg(60020 === n4 ? "SearchCloudMessagesUnavailable" : n4) || t4, n4 = new E2({ code: n4, message: t4 }), c3.setMessage(u3).setError(n4).end(), D2(n4);
            a3.get(27).isSearchCloudMessagesEnabled();
            var t4 = e4.data, n4 = t4.cursor, e4 = t4.totalCount, t4 = t4.searchResult, o4 = "totalCount:".concat(e4, " cost:").concat(nn2(r3)), o4 = (M2.l("".concat(s3, " ok. cursor:").concat(n4, " ").concat(o4)), c3.setMessage("".concat(u3, " ").concat(o4)).end(), a3._handleSearchResults(t4, !i3.conversationID));
            return C2({ searchResultList: o4, cursor: n4, totalCount: e4 });
          }).catch(function(e4) {
            return c3.setMessage(u3).setError(e4).end(), D2(e4);
          });
        throw M2.e("[".concat(e3, '] Missing required params: "keywordList".')), new Error("Params validate failed.");
      } }, { key: "_handleSearchResults", value: function(e3, a3) {
        var s3 = this.get(11);
        return O2(e3) && 0 !== e3.length ? e3.map(function(e4) {
          var t3 = e4.groupID, n3 = e4.userID, o3 = e4.messageCount, e4 = e4.messageList, e4 = void 0 === e4 ? [] : e4, n3 = t3 ? "".concat(A2.CONV_GROUP).concat(t3) : "".concat(A2.CONV_C2C).concat(n3), i3 = { conversationID: n3, messageCount: o3, messageList: [] };
          return a3 && 1 < o3 || 0 < (o3 = e4.filter(function(e5) {
            return !!e5;
          })).length && (e4 = s3.onRoamingMessage(o3, n3, false), t3 && e4.reverse(), i3.messageList = e4, i3.messageCount = e4.length), i3;
        }) : [];
      } }, { key: "_onModifyRemoteMessageResp", value: function(e3, t3) {
        M2.d("".concat(this._n, "._onModifyRemoteMessageResp options:"), t3);
        var n3 = e3.conversationType, o3 = e3.from, i3 = e3.to, a3 = e3.random, s3 = e3.sequence, e3 = e3.time, r3 = t3.elements, c3 = t3.messageVersion, t3 = t3.cloudCustomData, t3 = void 0 === t3 ? "" : t3;
        return this.get(11).onMessageModified({ conversationType: n3, from: o3, to: i3, time: e3, random: a3, sequence: s3, elements: r3, cloudCustomData: t3, messageVersion: c3 });
      } }, { key: "_generateUUID", value: function(e3) {
        var t3 = this.get(12), t3 = "".concat(t3.getSDKAppID(), "-").concat(t3.getUserID(), "-").concat(mt2()), e3 = e3.name || e3.value || e3.url || e3.tempFilePath, e3 = e3 && e3.slice(e3.lastIndexOf(".") + 1);
        return t3 = e3 ? "".concat(t3, ".").concat(e3) : t3;
      } }, { key: "getMessageOption", value: function(e3) {
        return this._messageOptionsMap.get(e3);
      } }, { key: "_getNickAndAvatarByUserID", value: function(e3) {
        return this.get(4).getNickAndAvatarByUserID(e3);
      } }, { key: "_getNameCardByGroupID", value: function(e3) {
        if (e3.conversationType === A2.CONV_GROUP) {
          var t3 = this.get(7);
          if (t3)
            return t3.getMyNameCardByGroupID(e3.to);
        }
        return "";
      } }, { key: "reset", value: function() {
        M2.l("".concat(this._n, ".reset")), this._messageOptionsMap.clear();
      } }]), za), Fa = (t2(Ja, u2), Pa = n2(Ja), e2(Ja, [{ key: "onMsgExtNotify", value: function(e3) {
        var o3 = this, e3 = e3.dataList, t3 = e3.messageInfo, i3 = e3.operateType, n3 = e3.operateResultList, a3 = e3.tinyID, e3 = e3.globalSequence, s3 = t3.clientTime, t3 = t3.random, r3 = "".concat(a3, "-").concat(s3, "-").concat(t3), c3 = [], u3 = [], l3 = (M2.l("".concat(this._n, ".onMsgExtNotify messageID:").concat(r3, " operateType:").concat(i3, " globalSequence:").concat(e3)), this._updateGlobalSeq(r3, e3), false), d3 = false;
        n3.forEach(function(e4) {
          var t4 = e4.extensions, t4 = void 0 === t4 ? [] : t4, n4 = e4.clearSequence;
          1 === i3 ? (l3 = true, t4.forEach(function(e5) {
            c3.push({ key: e5.key, value: e5.value });
          }), o3._updateLocalExt(r3, t4)) : 2 === i3 ? (d3 = true, t4.forEach(function(e5) {
            u3.push(e5.key);
          }), o3._updateLocalExt(r3, t4)) : 3 === i3 && (d3 = true, o3._hasLocalExt(r3) && o3._getLocalExt(r3).forEach(function(e5, t5) {
            e5.seq <= n4 && !S2(e5.value) && u3.push(t5);
          }), o3._clearLocalExt(r3, n4));
        }), l3 && this.emitOEvt(h2.MESSAGE_EXTENSIONS_UPDATED, { messageID: r3, extensions: c3 }), d3 && this.emitOEvt(h2.MESSAGE_EXTENSIONS_DELETED, { messageID: r3, keyList: u3 });
      } }, { key: "setMessageExtensions", value: function(e3, t3) {
        var o3, n3, i3, a3, s3, r3, c3, u3 = "setMessageExtensions";
        return this.canIUse(_2.MSG_EXT) ? (o3 = "".concat(this._n, ".").concat(u3), n3 = e3.ID, i3 = e3.conversationID, a3 = e3.sequence, s3 = e3.time, r3 = p2(t3), 20 < t3.length && (r3 = t3.slice(0, 20), M2.w("".concat(o3, ". the length of extensions cannot exceed 20."))), t3 = "convID:".concat(i3, " messageID:").concat(n3, " sequence:").concat(a3, " time:").concat(s3, " count:").concat(r3.length), (c3 = new G2(u3)).setMessage(t3), M2.l("".concat(o3, " ").concat(t3)), this._modifyMsgExts(e3, r3).then(function(e4) {
          var t4 = e4.resultList, n4 = e4.successCount, e4 = e4.failureCount, n4 = "successCount:".concat(n4, " failCount:").concat(e4);
          return c3.setMoreMessage(n4).end(), M2.l("".concat(o3, " ok. ").concat(n4)), C2({ extensions: t4 });
        }).catch(function(e4) {
          return c3.setError(e4).end(), M2.e("".concat(o3, " failed. error:"), e4), D2(e4);
        })) : this.noUse(u3);
      } }, { key: "getMessageExtensions", value: function(e3) {
        var t3, n3, o3, i3, a3, s3, r3, c3 = this, u3 = "getMessageExtensions";
        return this.canIUse(_2.MSG_EXT) ? (t3 = "".concat(this._n, ".").concat(u3), n3 = e3.ID, a3 = e3.conversationID, o3 = e3.sequence, i3 = e3.time, a3 = "convID:".concat(a3, " messageID:").concat(n3, " sequence:").concat(o3, " time:").concat(i3), (s3 = new G2(u3)).setMessage(a3), r3 = void M2.l("".concat(t3, " ").concat(a3)), this.getMsgExtsMap.has(n3) && (r3 = this._getGlobalSeq(n3)), this._getMsgExts(e3, r3).then(function(e4) {
          return s3.end(), M2.l("".concat(t3, " ok. extCount:").concat(e4.length)), N2(r3) && 0 < e4.length && c3.getMsgExtsMap.set(n3, 1), C2({ extensions: e4 });
        }).catch(function(e4) {
          return s3.setError(e4).end(), M2.e("".concat(t3, " failed. error:"), e4), D2(e4);
        })) : this.noUse(u3);
      } }, { key: "deleteMessageExtensions", value: function(e3, t3) {
        var i3, n3, a3, o3, s3, r3, c3, u3 = "deleteMessageExtensions";
        return this.canIUse(_2.MSG_EXT) ? (i3 = "".concat(this._n, ".").concat(u3), n3 = [], a3 = 3, S2(t3) || (a3 = 2, t3.forEach(function(e4) {
          n3.push({ key: e4, value: "", seq: 0 });
        })), t3 = e3.ID, r3 = e3.conversationID, o3 = e3.sequence, s3 = e3.time, r3 = "convID:".concat(r3, " messageID:").concat(t3, " sequence:").concat(o3, " time:").concat(s3, " operateType:").concat(a3), (c3 = new G2(u3)).setMessage(r3), M2.l("".concat(i3, " ").concat(r3)), this._modifyMsgExts(e3, n3, a3).then(function(e4) {
          var t4 = e4.resultList, n4 = e4.successCount, e4 = e4.failureCount, o4 = "";
          return 2 === a3 && (o4 = "success count:".concat(n4, " fail count:").concat(e4)), c3.setMoreMessage("".concat(o4)).end(), M2.l("".concat(i3, " ok. ").concat(o4)), C2({ extensions: t4 });
        }).catch(function(e4) {
          return c3.setError(e4).end(), M2.e("".concat(i3, " failed. error:"), e4), D2(e4);
        })) : this.noUse(u3);
      } }, { key: "_modifyMsgExts", value: function(n3, e3) {
        var o3 = this, t3 = 2 < arguments.length && void 0 !== arguments[2] ? arguments[2] : 1, i3 = Gt2(n3.to) ? A2.CONV_TOPIC : n3.conversationType, a3 = void 0, s3 = (3 !== t3 && (a3 = this._getReqExts(n3, e3)), null);
        switch (i3) {
          case A2.CONV_C2C:
            s3 = this.get(6);
            break;
          case A2.CONV_GROUP:
            s3 = this.get(7);
            break;
          case A2.CONV_TOPIC:
            s3 = this.get(10);
            break;
          default:
            return D2({ code: L2.NO_MODULE });
        }
        return s3.modifyMsgExts(n3, a3, t3).then(function(e4) {
          var e4 = e4.data, t4 = e4.extensions, e4 = e4.seq, i4 = [], a4 = 0, s4 = 0, r3 = [];
          return (t4 = S2(t4) ? [] : t4).forEach(function(e5) {
            var t5 = e5.errorCode, e5 = e5.extension, n4 = e5.key, o4 = e5.value, e5 = e5.seq;
            i4.push({ code: t5, key: n4, value: o4 }), 0 === t5 ? a4++ : s4++, r3.push({ key: n4, value: o4, seq: e5 });
          }), o3._updateGlobalSeq(n3.ID, e4), 0 < r3.length && (o3._updateLocalExt(n3.ID, r3), r3 = null), { resultList: i4, successCount: a4, failureCount: s4 };
        }).catch(function(e4) {
          return D2(e4);
        });
      } }, { key: "_getReqExts", value: function(e3, t3) {
        var o3, i3 = [];
        return this._hasLocalExt(e3.ID) ? (o3 = this._getLocalExt(e3.ID), t3.forEach(function(e4) {
          var t4 = e4.key, e4 = e4.value, n3 = 0;
          o3.has(t4) && (n3 = o3.get(t4).seq), i3.push({ key: t4, value: e4, seq: n3 });
        })) : t3.forEach(function(e4) {
          var t4 = e4.key, e4 = e4.value;
          i3.push({ key: t4, value: e4, seq: 0 });
        }), i3;
      } }, { key: "_getMsgExts", value: function(i3, e3) {
        var a3 = this, s3 = "".concat(this._n, "._getMsgExts"), r3 = i3.ID, t3 = i3.to, n3 = null;
        switch (Gt2(t3) ? A2.CONV_TOPIC : i3.conversationType) {
          case A2.CONV_C2C:
            n3 = this.get(6);
            break;
          case A2.CONV_GROUP:
            n3 = this.get(7);
            break;
          case A2.CONV_TOPIC:
            n3 = this.get(10);
            break;
          default:
            return D2({ code: L2.NO_MODULE });
        }
        return n3.getMessageExtensions(i3, e3).then(function(e4) {
          var e4 = e4.data, t4 = e4.extensions, n4 = e4.completeFlag, o3 = e4.globalSequence, e4 = e4.clearSequence, t4 = S2(t4) ? [] : t4;
          return M2.l("".concat(s3, " ok. completeFlag:").concat(n4, " globalSequence:").concat(o3, " clearSequence:").concat(e4, " count:").concat(t4.length)), a3._updateLocalExt(r3, t4), a3._clearLocalExt(r3, e4), a3._updateGlobalSeq(r3, o3), 1 !== n4 ? (e4 = t4.slice(-1)[0].seq + 1, a3._getMsgExts(i3, e4)) : a3._getLocalExtList(r3);
        }).catch(function(e4) {
          return D2(e4);
        });
      } }, { key: "_hasLocalExt", value: function(e3) {
        return this.msgExtMap.has(e3);
      } }, { key: "_getLocalExt", value: function(e3) {
        return this.msgExtMap.get(e3);
      } }, { key: "_updateLocalExt", value: function(e3, t3) {
        this._hasLocalExt(e3) || this.msgExtMap.set(e3, /* @__PURE__ */ new Map());
        var o3 = this._getLocalExt(e3);
        t3.forEach(function(e4) {
          var t4 = e4.key, n3 = e4.value, e4 = e4.seq;
          o3.set(t4, { value: void 0 === n3 ? "" : n3, seq: e4 });
        });
      } }, { key: "_clearLocalExt", value: function(e3, n3) {
        var o3;
        n3 <= 0 || !this._hasLocalExt(e3) || (o3 = this._getLocalExt(e3)).forEach(function(e4, t3) {
          e4.seq <= n3 && o3.delete(t3);
        });
      } }, { key: "_getLocalExtList", value: function(e3) {
        var n3 = [];
        return this._hasLocalExt(e3) && this._getLocalExt(e3).forEach(function(e4, t3) {
          e4 = e4.value;
          S2(e4) || n3.push({ key: t3, value: e4 });
        }), n3;
      } }, { key: "_getGlobalSeq", value: function(e3) {
        return this.globalSeqMap.get(e3);
      } }, { key: "_updateGlobalSeq", value: function(e3, t3) {
        this.globalSeqMap.set(e3, t3);
      } }, { key: "reset", value: function() {
        M2.l("".concat(this._n, ".reset")), this.msgExtMap.clear(), this.globalSeqMap.clear(), this.getMsgExtsMap.clear();
      } }]), Ja), qa = (t2(ja, u2), Ga = n2(ja), e2(ja, [{ key: "onReactionNotifyList", value: function(e3) {
        var a3 = this, e3 = (e3 || {}).dataList;
        (void 0 === e3 ? [] : e3).forEach(function(e4) {
          var t3 = e4.C2CMessageInfo, n3 = e4.groupMessageInfo, n3 = void 0 === n3 ? {} : n3, e4 = e4.reactionList, e4 = void 0 === e4 ? [] : e4, t3 = y2(y2({}, void 0 === t3 ? {} : t3), n3), n3 = t3.tinyID, o3 = t3.clientTime, t3 = t3.random, n3 = "".concat(n3, "-").concat(o3, "-").concat(t3), i3 = [];
          e4.forEach(function(e5) {
            N2(e5.userIDList) && (e5.userIDList = [], e5.count = 0), i3.push.apply(i3, p2(e5.userIDList));
          }), M2.l("".concat(a3._n, ".onReactionNotifyList messageID:").concat(n3, " reactionList:").concat(e4.length)), a3._handleReactionSummary([{ messageID: n3, reactionList: e4 }], i3).then(function(e5) {
            a3.emitOEvt(h2.MESSAGE_REACTIONS_UPDATED, y2({}, e5[0]));
          });
        });
      } }, { key: "onReactionNotify", value: function(e3) {
        var e3 = e3.dataList || {}, t3 = e3.C2CMessageInfo, n3 = e3.groupMessageInfo, n3 = void 0 === n3 ? {} : n3, o3 = e3.reactionID, e3 = e3.operateType, t3 = y2(y2({}, void 0 === t3 ? {} : t3), n3), n3 = t3.tinyID, i3 = t3.clientTime, t3 = t3.random, n3 = "".concat(n3, "-").concat(i3, "-").concat(t3), i3 = (M2.l("".concat(this._n, ".onReactionNotify messageID:").concat(n3, " reactionID:").concat(o3, " operateType:").concat(e3)), 1 === e3 ? this._addReactedByMyselfMap(n3, o3) : this._removeReactedByMyselfMap(n3, o3), "".concat(n3, "-").concat(o3));
        this._reactionInfoMap.has(i3) && ((t3 = this._reactionInfoMap.get(i3)).reactedByMyself = 1 === e3, this.emitOEvt(h2.MESSAGE_REACTIONS_UPDATED, { messageID: n3, reactionList: [t3] }));
      } }, { key: "addMessageReaction", value: function(t3, n3) {
        var o3, e3, i3, a3, s3 = this, r3 = "addMessageReaction";
        return this.canIUse(_2.MSG_REACTION) ? (o3 = "".concat(this._n, ".").concat(r3), a3 = t3.ID, e3 = t3.conversationID, e3 = "convID:".concat(e3, " messageID:").concat(a3, " reactionID:").concat(n3), (i3 = new G2(r3)).setMessage(e3), M2.l("".concat(o3, " ").concat(e3)), a3 = this._createReactionOperationPack(t3, n3, 1), this._addReactedByMyselfMap(t3.ID, n3), this.req(a3).then(function() {
          return i3.end(), M2.l("".concat(o3, " ok.")), C2();
        }).catch(function(e4) {
          return s3._removeReactedByMyselfMap(t3.ID, n3), i3.setError(e4).end(), M2.e("".concat(o3, " failed. error:"), e4), D2(e4);
        })) : this.noUse(r3);
      } }, { key: "removeMessageReaction", value: function(e3, t3) {
        var n3, o3, i3, a3, s3 = "removeMessageReaction";
        return this.canIUse(_2.MSG_REACTION) ? (n3 = "".concat(this._n, ".").concat(s3), a3 = e3.ID, o3 = e3.conversationID, o3 = "convID:".concat(o3, " messageID:").concat(a3, " reactionID:").concat(t3), (i3 = new G2(s3)).setMessage(o3), M2.l("".concat(n3, " ").concat(o3)), a3 = this._createReactionOperationPack(e3, t3, 2), this._removeReactedByMyselfMap(e3.ID, t3), this.req(a3).then(function() {
          return i3.end(), M2.l("".concat(n3, " ok.")), C2();
        }).catch(function(e4) {
          return i3.setError(e4).end(), M2.e("".concat(n3, " failed. error:"), e4), D2(e4);
        })) : this.noUse(s3);
      } }, { key: "getMessageReactions", value: function(e3) {
        var t3, n3, o3, i3, a3, s3, r3 = this, c3 = "getMessageReactions";
        return this.canIUse(_2.MSG_REACTION) ? (t3 = "".concat(this._n, ".").concat(c3), n3 = e3.messageList, s3 = e3.maxUserCountPerReaction, o3 = n3[0].conversationID, o3 = "convID:".concat(o3, " maxUserCountPerReaction:").concat(s3, " msgCount:").concat(n3.length), (i3 = new G2(c3)).setMessage(o3), M2.l("".concat(t3, " ").concat(o3)), a3 = /* @__PURE__ */ new Map(), s3 = this._createReactionSummaryPack(y2(y2({}, e3), {}, { messageIDMap: a3 })), this.req(s3).then(function(e4) {
          var e4 = e4.data.resultList, o4 = [], i4 = [];
          return (void 0 === e4 ? [] : e4).forEach(function(e5) {
            var t4 = e5.messageKey, t4 = void 0 === t4 ? void 0 : t4, n4 = e5.messageSequence, n4 = void 0 === n4 ? void 0 : n4, e5 = e5.reactionList, e5 = void 0 === e5 ? [] : e5, n4 = N2(t4) ? a3.get(n4) : a3.get(t4);
            o4.push({ messageID: n4, reactionList: e5 }), e5.forEach(function(e6) {
              i4.push.apply(i4, p2(e6.userIDList));
            });
          }), r3._handleReactionSummary(o4, i4);
        }).then(function(e4) {
          return i3.end(), M2.l("".concat(t3, " ok.")), a3.clear(), C2({ resultList: e4 });
        }).catch(function(e4) {
          return i3.setError(e4).end(), M2.e("".concat(t3, " failed. error:"), e4), D2(e4);
        })) : this.noUse(c3);
      } }, { key: "getAllUserListOfMessageReaction", value: function(e3) {
        var t3, n3, o3, i3, a3, s3, r3, c3, u3 = this, l3 = "getAllUserListOfMessageReaction";
        return this.canIUse(_2.MSG_REACTION) ? (t3 = "".concat(this._n, ".").concat(l3), a3 = e3.message, n3 = e3.reactionID, o3 = e3.nextSeq, i3 = e3.count, c3 = a3.ID, a3 = a3.conversationID, a3 = "convID:".concat(a3, " messageID:").concat(c3, " reactionID:").concat(n3, " nextSeq:").concat(o3, " count:").concat(i3), (s3 = new G2(l3)).setMessage(a3), M2.l("".concat(t3, " ").concat(a3)), r3 = { userList: [], nextSeq: 0, isCompleted: false }, c3 = this._createReactionUserListPack(e3), this.req(c3).then(function(e4) {
          var e4 = e4.data, t4 = e4.userIDList, t4 = void 0 === t4 ? [] : t4, e4 = e4.nextSeq, e4 = void 0 === e4 ? 0 : e4;
          return r3.nextSeq = e4, r3.isCompleted = 0 === e4, u3.get(4).getUserNickAndAvatar(t4);
        }).then(function(e4) {
          return r3.userList = e4, s3.end(), M2.l("".concat(t3, " ok.")), C2(r3);
        }).catch(function(e4) {
          return s3.setError(e4).end(), M2.e("".concat(t3, " failed. error:"), e4), D2(e4);
        })) : this.noUse(l3);
      } }, { key: "_createReactionOperationPack", value: function(e3, t3, n3) {
        var o3, i3, a3 = void 0, t3 = { reactionID: t3, userIDList: [this.getMyUserID()] };
        return e3.conversationType === A2.CONV_C2C && (o3 = this.get(6), a3 = 1 === n3 ? k2.ADD_C2C_MSG_REACTION : k2.RM_C2C_MSG_REACTION, t3.from = e3.from, t3.to = e3.to, t3.messageKey = o3.getMessageKey(e3)), e3.conversationType === A2.CONV_GROUP && (o3 = void 0, i3 = e3.to, Gt2(e3.to) && (i3 = Jt2(o3 = e3.to)), a3 = 1 === n3 ? k2.ADD_GRP_MSG_REACTION : k2.RM_GRP_MSG_REACTION, t3.groupID = i3, t3.topicID = o3, t3.messageSequence = e3.sequence), { P: a3, data: t3 };
      } }, { key: "_createReactionSummaryPack", value: function(e3) {
        var n3, t3, o3, i3 = e3.messageList, a3 = e3.maxUserCountPerReaction, a3 = void 0 === a3 ? 10 : a3, s3 = e3.messageIDMap, e3 = i3[0], r3 = void 0, c3 = void 0;
        return e3.conversationType === A2.CONV_C2C && (n3 = this.get(6), t3 = i3.map(function(e4) {
          var t4 = n3.getMessageKey(e4);
          return s3.set(t4, e4.ID), t4;
        }), r3 = k2.GET_C2C_MSG_REACTIONS, c3 = { from: e3.from, to: e3.to, messageKeyList: t3, count: a3 }), e3.conversationType === A2.CONV_GROUP && (t3 = void 0, o3 = e3.to, Gt2(e3.to) && (o3 = Jt2(t3 = e3.to)), e3 = i3.map(function(e4) {
          return s3.set(e4.sequence, e4.ID), e4.sequence;
        }), r3 = k2.GET_GRP_MSG_REACTIONS, c3 = { groupID: o3, topicID: t3, messageSequenceList: e3, count: a3 }), { P: r3, data: c3 };
      } }, { key: "_createReactionUserListPack", value: function(e3) {
        var t3 = e3.message, n3 = e3.reactionID, o3 = e3.nextSeq, e3 = e3.count, e3 = void 0 === e3 ? 100 : e3, i3 = void 0, n3 = { reactionID: n3, nextSeq: void 0 === o3 ? 0 : o3, count: 100 < e3 ? 100 : e3 };
        return t3.conversationType === A2.CONV_C2C && (o3 = this.get(6), i3 = k2.GET_C2C_MSG_REACTION_USER_LIST, n3.from = t3.from, n3.to = t3.to, n3.messageKey = o3.getMessageKey(t3)), t3.conversationType === A2.CONV_GROUP && (e3 = void 0, o3 = t3.to, Gt2(t3.to) && (o3 = Jt2(e3 = t3.to)), i3 = k2.GET_GRP_MSG_REACTION_USER_LIST, n3.groupID = o3, n3.topicID = e3, n3.messageSequence = t3.sequence), { P: i3, data: n3 };
      } }, { key: "_handleReactionSummary", value: function(t3, e3) {
        var c3 = this;
        return this.get(4).getUserNickAndAvatar(e3).then(function(r3) {
          var e4 = [];
          return t3.forEach(function(a3) {
            var s3 = [];
            a3.reactionList.forEach(function(e5) {
              var t4 = e5.reactionID, n3 = e5.count, o3 = e5.userIDList, e5 = e5.reactedByMyself, e5 = void 0 === e5 ? void 0 : e5, i3 = [], o3 = (o3.forEach(function(t5) {
                r3.forEach(function(e6) {
                  t5 === e6.userID && i3.push(e6);
                });
              }), { reactionID: t4, totalUserCount: n3, partialUserList: i3, reactedByMyself: c3._computeReactedByMyself({ reactedByMyself: e5, messageID: a3.messageID, reactionID: t4 }) });
              s3.push(o3), N2(e5) && !c3._reactedByMyselfMap.has(a3.messageID) && (n3 = "".concat(a3.messageID, "-").concat(t4), c3._reactionInfoMap.set(n3, o3));
            }), e4.push({ messageID: a3.messageID, reactionList: s3 });
          }), e4;
        });
      } }, { key: "_addReactedByMyselfMap", value: function(e3, t3) {
        this._reactedByMyselfMap.has(e3) || this._reactedByMyselfMap.set(e3, []);
        e3 = this._reactedByMyselfMap.get(e3);
        -1 === e3.indexOf(t3) && e3.push(t3);
      } }, { key: "_removeReactedByMyselfMap", value: function(e3, t3) {
        this._reactedByMyselfMap.has(e3) && -1 < (t3 = (e3 = this._reactedByMyselfMap.get(e3)).indexOf(t3)) && e3.splice(t3, 1);
      } }, { key: "_computeReactedByMyself", value: function(e3) {
        var t3 = e3.reactedByMyself, n3 = e3.messageID, e3 = e3.reactionID;
        return N2(t3) ? !!this._reactedByMyselfMap.has(n3) && this._reactedByMyselfMap.get(n3).includes(e3) : 1 === t3;
      } }, { key: "reset", value: function() {
        M2.l("".concat(this._n, ".reset")), this._reactedByMyselfMap.clear(), this._reactionInfoMap.clear();
      } }]), ja), xa = (t2(Wa, u2), Na = n2(Wa), e2(Wa, [{ key: "sendMessage", value: function(e3) {
        var o3 = this, i3 = this._createMsg(e3);
        if (null === i3)
          return D2({ code: L2.MSG_SEND_FAIL });
        this._addSendMessageTotalCount(i3);
        var a3 = Date.now();
        return this.get(11).setMessageRandom(i3), this._sendComboMessage(i3, e3).then(function(e4) {
          var e4 = e4.data, t3 = e4.time, n3 = e4.sequence, e4 = e4.readReceiptCode, e4 = (R2(e4) && 0 !== e4 && (new G2("sendMessageWithReceipt").setMessage("from:".concat(i3.from, " to:").concat(i3.to, " sequence:").concat(n3, " readReceiptCode:").concat(e4)).end(), M2.w("".concat(o3._n, ".sendMessage readReceiptCode:").concat(e4, " message:").concat(o3.getErrMsg(e4)))), o3._addSendMessageSuccessCount(i3, a3), o3.get(11)), t3 = (i3.status = Rn2, i3.time = t3, i3.conversationType === A2.CONV_GROUP && (i3.sequence = n3), e4.appendToMessageList(i3), i3);
          return true === i3._isExcludedFromLastMessage && (t3 = ""), e4.onMessageSent({ conversationOptionsList: [{ conversationID: i3.conversationID, unreadCount: 0, type: i3.conversationType, subType: i3.conversationSubType, lastMessage: t3 }] }), C2({ message: i3 });
        }).catch(function(e4) {
          return o3._onSendMessageFailed(i3, e4);
        });
      } }, { key: "_sendComboMessage", value: function(e3, t3) {
        var n3 = this._m.get(20), o3 = "";
        return e3.conversationType === A2.CONV_C2C && (o3 = "".concat(a2.NAME.OPEN_IM, ".").concat(k2.SEND_C2C_MSG)), e3.conversationType === A2.CONV_GROUP && (o3 = "".concat(a2.NAME.GRP, ".").concat(k2.SEND_GRP_MSG)), n3.sendComboMessage({ servcmd: o3, data: t3 });
      } }, { key: "_createMsg", value: function(e3) {
        var t3 = "".concat(this._n, "._createMsg"), n3 = null;
        try {
          var o3, i3 = this.getMyUserID(), a3 = {};
          a3.senderTinyID = this.getMyTinyID(), a3.currentUser = i3, a3.from = e3.From_Account || i3, e3.GroupId ? (a3.conversationID = "".concat(A2.CONV_GROUP).concat(e3.GroupId), a3.conversationType = A2.CONV_GROUP, a3.to = e3.GroupId) : e3.To_Account && (a3.conversationID = "".concat(A2.CONV_C2C).concat(e3.To_Account), a3.conversationType = A2.CONV_C2C, a3.to = e3.To_Account), a3.time = e3.MsgTimeStamp || 0, a3.random = e3.Random || e3.MsgRandom || 0, a3.priority = e3.MsgPriority, m2(e3.CloudCustomData) && 0 < e3.CloudCustomData.length && (a3.cloudCustomData = e3.CloudCustomData), O2(e3.SendMsgControl) && (a3.messageControlInfo = {}, e3.SendMsgControl.includes("NoUnread") && (a3.messageControlInfo.excludedFromUnreadCount = 1), e3.SendMsgControl.includes("NoLastMsg")) && (a3.messageControlInfo.excludedFromLastMessage = 1), a3.conversationType === A2.CONV_GROUP && O2(e3.To_Account) && 0 < e3.To_Account.length && (o3 = e3.To_Account, 50 < e3.To_Account.length && (o3 = e3.To_Account.slice(0, 50), M2.w("".concat(t3, " To_Account must be less than or equal to 50."))), a3.receiverList = p2(o3), e3.To_Account = p2(o3)), 1 !== e3.IsNeedReadReceipt && 1 !== e3.NeedReadReceipt || (a3.needReadReceipt = true), 1 === e3.SupportMessageExtension && (a3.isSupportExtension = true), (n3 = new Do2(a3)).status = An2, e3.MsgClientTime = n3.clientTime, n3.conversationType === A2.CONV_C2C && (e3.MsgSeq = n3.sequence);
          for (var s3, r3 = e3.MsgBody.length, c3 = 0; c3 < r3; c3++)
            "TIMTextElem" === (s3 = e3.MsgBody[c3]).MsgType ? n3.setTextElement(s3.MsgContent.Text) : "TIMCustomElem" === s3.MsgType ? n3.setCustomElement({ data: s3.MsgContent.Data || "", description: s3.MsgContent.Desc || "", extension: s3.MsgContent.Ext || "" }) : "TIMFaceElem" === s3.MsgType && n3.setFaceElement({ index: s3.MsgContent.Index, data: s3.MsgContent.Data });
          var u3 = n3.getElements();
          n3.payload = u3[0].content, n3.type = u3[0].type;
        } catch (e4) {
          n3 = null, M2.e("".concat(t3, " failed. error:"), e4);
        }
        return n3;
      } }, { key: "_onSendMessageFailed", value: function(e3, t3) {
        e3.status = On2, this.get(11).deleteMessageRandom(e3), this._addSendMessageFailCountOnUser(e3, t3);
        var n3 = new G2("sendMessage"), o3 = "head.seq:".concat(t3.data.headSeq, "  type:").concat(e3.type, " from:").concat(e3.from, " to:").concat(e3.to);
        return n3.setMessage(o3).setError(t3).end(), M2.e("".concat(this._n, "._onSendMessageFailed ").concat(o3, " error:"), t3), D2(new E2({ code: t3 && t3.code ? t3.code : L2.MSG_SEND_FAIL, message: t3 && t3.message ? t3.message : void 0, data: { message: e3 } }));
      } }, { key: "_getSendMessageSpecifiedKey", value: function(e3) {
        if (e3.conversationType === A2.CONV_C2C)
          return Hn2;
        if (e3.conversationType === A2.CONV_GROUP) {
          var e3 = this.get(7).getLocalGroupProfile(e3.to);
          if (e3)
            return e3 = e3.type, Ot2(e3) ? Kn2 : Bn2;
        }
      } }, { key: "_addSendMessageTotalCount", value: function(e3) {
        e3 = this._getSendMessageSpecifiedKey(e3);
        e3 && this.get(26).addTotalCount(e3);
      } }, { key: "_addSendMessageSuccessCount", value: function(e3, t3) {
        var n3, e3 = this._getSendMessageSpecifiedKey(e3);
        e3 && ((n3 = this.get(26)).addSuccessCount(e3), n3.addCost(e3, nn2(t3, false)));
      } }, { key: "_addSendMessageFailCountOnUser", value: function(e3, t3) {
        var t3 = t3.code, t3 = void 0 === t3 ? -1 : t3, n3 = this.get(26), e3 = this._getSendMessageSpecifiedKey(e3);
        Aa(t3) && e3 && n3.addFailedCountOfUserSide(e3);
      } }]), Wa), Va = (t2(Ya, u2), Oa = n2(Ya), e2(Ya, [{ key: "registerPlugin", value: function(t3) {
        var n3 = this, o3 = "0";
        Object.keys(t3).forEach(function(e3) {
          n3.plugins[e3] = t3[e3], "tim-upload-plugin" === e3 && "function" == typeof t3[e3].getVersion && (o3 = t3[e3].getVersion());
        }), new G2("registerPlugin").setMessage("".concat(Object.keys(t3))).setMoreMessage("version:".concat(o3)).end();
      } }, { key: "getPlugin", value: function(e3) {
        return this.plugins[e3];
      } }, { key: "reset", value: function() {
      } }]), Ya), Ha = (t2(Ka, u2), Ra = n2(Ka), e2(Ka, [{ key: "_init", value: function() {
        this._startSync({ cookie: this._cookie, syncFlag: 0, isOnlineSync: 0 });
      } }, { key: "_startSync", value: function(e3) {
        var i3 = this, t3 = e3.cookie, n3 = e3.syncFlag, o3 = e3.isOnlineSync, a3 = "".concat(this._n, "._startSync"), s3 = (M2.l("".concat(a3, " options:"), e3), new G2("syncUnread"));
        s3.setMessage(JSON.stringify(e3)), this.req({ P: k2.SYNC_UNREAD_MSG, data: { cookie: t3, syncFlag: n3, isOnlineSync: o3 } }).then(function(e4) {
          var t4 = e4.data, n4 = t4.cookie, t4 = t4.syncFlag, o4 = "$cookie:".concat(n4, " syncFlag:").concat(t4);
          M2.l("".concat(a3, " ok. ").concat(o4)), i3._cookie = n4, s3.setMoreMessage(o4).end(), S2(n4) || (0 === t4 || 1 === t4 ? (i3._dispatch(y2(y2({}, e4.data), {}, { isSyncingEnded: false })), i3._startSync({ cookie: n4, syncFlag: t4, isOnlineSync: 0 })) : 2 === t4 && i3._dispatch(y2(y2({}, e4.data), {}, { isSyncingEnded: true })));
        }).catch(function(e4) {
          s3.setError(e4).end(), M2.e("".concat(a3, " failed. error:"), e4);
        });
      } }, { key: "_dispatch", value: function(e3) {
        e3.eventArray && this.get(20).onMessage({ head: {}, body: { eventArray: e3.eventArray, isInstantMessage: this._onlineSyncFlag, isSyncingEnded: e3.isSyncingEnded } }), this.get(6).onNewMessage({ dataList: e3.messageList, isInstantMessage: !!e3.isSyncingEnded && this._onlineSyncFlag, C2CRemainingUnreadList: e3.C2CRemainingUnreadList, C2CPairUnreadList: e3.C2CPairUnreadList, isSyncingEnded: e3.isSyncingEnded });
      } }, { key: "syncOnNeed", value: function() {
        M2.l("".concat(this._n, ".syncOnNeed cookie:").concat(this._cookie)), this._onlineSyncFlag = true, this._startSync({ cookie: this._cookie, syncFlag: 0, isOnlineSync: 1 });
      } }, { key: "syncOnReconnected", value: function() {
        M2.l("".concat(this._n, ".syncOnReconnected cookie:").concat(this._cookie)), this._onlineSyncFlag = true, this._startSync({ cookie: this._cookie, syncFlag: 0, isOnlineSync: 0 });
      } }, { key: "reset", value: function() {
        M2.l("".concat(this._n, ".reset")), this._onlineSyncFlag = false, this._cookie = "";
      } }]), Ka), Ba = { req: { toAccount: "To_Account", fromAccount: "From_Account", to: "To_Account", from: "From_Account", groupID: "GroupId", groupAtUserID: "GroupAt_Account", extension: "Ext", data: "Data", description: "Desc", elements: "MsgBody", sizeType: "Type", downloadFlag: "Download_Flag", thumbUUID: "ThumbUUID", videoUUID: "VideoUUID", remoteAudioUrl: "Url", remoteVideoUrl: "VideoUrl", videoUrl: "", imageUrl: "URL", fileUrl: "Url", uuid: "UUID", priority: "MsgPriority", receiverUserID: "To_Account", receiverGroupID: "GroupId", messageSender: "SenderId", messageReceiver: "ReceiverId", nick: "From_AccountNick", avatar: "From_AccountHeadurl", messageNumber: "MsgNum", pbDownloadKey: "PbMsgKey", downloadKey: "JsonMsgKey", applicationType: "PendencyType", userIDList: "To_Account", groupNameList: "GroupName", userID: "To_Account", groupAttributeList: "GroupAttr", mainSequence: "AttrMainSeq", avChatRoomKey: "BytesKey", attributeControl: "AttrControl", sequence: "seq", messageControlInfo: "SendMsgControl", updateSequence: "UpdateSeq", clientTime: "MsgClientTime", sequenceList: "MsgSeqList", topicID: "TopicId", customData: "CustomString", isSupportTopic: "SupportTopic", isWebUniapp: "is_web_uniapp", isSupportExtension: "SupportMessageExtension", messageSequence: "MsgSeq", messageKey: "MsgKey", startSequence: "startSeq", simplifiedMessage: "DownsizeFlag", isRelayMessage: "IsRelayMsg", reactionID: "Reaction", messageSequenceList: "MsgSeqList", messageKeyList: "MsgKeyList", cmConfigID: "CustomModerationConfigID" }, res: { MsgPriority: "priority", ThumbUUID: "thumbUUID", VideoUUID: "videoUUID", Download_Flag: "downloadFlag", GroupId: "groupID", Member_Account: "userID", MsgList: "messageList", SyncFlag: "syncFlag", To_Account: "to", From_Account: "from", MsgSeq: "sequence", MsgRandom: "random", MsgTime: "time", MsgTimeStamp: "time", MsgContent: "content", MsgBody: "elements", From_AccountNick: "nick", From_AccountHeadurl: "avatar", GroupWithdrawInfoArray: "revokedInfos", GroupReadInfoArray: "groupMessageReadNotice", LastReadMsgSeq: "lastMessageSeq", WithdrawC2cMsgNotify: "c2cMessageRevokedNotify", C2cWithdrawInfoArray: "revokedInfos", C2cReadedReceipt: "c2cMessageReadReceipt", ReadC2cMsgNotify: "c2cMessageReadNotice", LastReadTime: "peerReadTime", MsgRand: "random", MsgType: "type", MsgShow: "messageShow", NextMsgSeq: "nextMessageSeq", FaceUrl: "avatar", ProfileDataMod: "profileModify", Profile_Account: "userID", ValueBytes: "value", ValueNum: "value", NoticeSeq: "noticeSequence", NotifySeq: "notifySequence", MsgFrom_AccountExtraInfo: "messageFromAccountExtraInformation", Operator_Account: "operatorID", OpType: "operationType", ReportType: "operationType", UserId: "userID", User_Account: "userID", List_Account: "userIDList", MsgOperatorMemberExtraInfo: "operatorInfo", MsgMemberExtraInfo: "memberInfoList", ImageUrl: "avatar", NickName: "nick", MsgGroupNewInfo: "newGroupProfile", MsgAppDefinedData: "groupCustomField", Owner_Account: "ownerID", GroupFaceUrl: "avatar", GroupIntroduction: "introduction", GroupNotification: "notification", GroupApplyJoinOption: "joinOption", MsgKey: "messageKey", GroupInfo: "groupProfile", ShutupTime: "muteTime", Desc: "description", Ext: "extension", GroupAt_Account: "groupAtUserID", MsgNum: "messageNumber", PbMsgKey: "pbDownloadKey", JsonMsgKey: "downloadKey", MsgModifiedFlag: "isModified", PendencyItem: "applicationItem", PendencyType: "applicationType", AddTime: "time", AddSource: "source", AddWording: "wording", ProfileImImage: "avatar", PendencyAdd: "friendApplicationAdded", FrienPencydDel_Account: "friendApplicationDeletedUserIDList", Peer_Account: "userID", GroupAttr: "groupAttributeList", GroupAttrAry: "groupAttributeList", AttrMainSeq: "mainSequence", seq: "sequence", GroupAttrOption: "groupAttributeOption", BytesChangedKeys: "changedKeyList", GroupAttrInfo: "groupAttributeList", GroupAttrSeq: "mainSequence", PushChangedAttrValFlag: "isWithChangedAttributeInfo", SubKeySeq: "sequence", Val: "value", MsgGroupFromCardName: "senderNameCard", MsgGroupFromNickName: "senderNick", C2cNick: "peerNick", C2cImage: "peerAvatar", SendMsgControl: "messageControlInfo", NoLastMsg: "excludedFromLastMessage", NoUnread: "excludedFromUnreadCount", UpdateSeq: "updateSequence", MuteNotifications: "muteFlag", MsgClientTime: "clientTime", TinyId: "tinyID", GroupMsgReceiptList: "readReceiptList", ReadNum: "readCount", UnreadNum: "unreadCount", TopicId: "topicID", MillionGroupFlag: "communityType", SupportTopic: "isSupportTopic", MsgTopicNewInfo: "newTopicInfo", ShutupAll: "muteAllMembers", CustomString: "customData", TopicFaceUrl: "avatar", TopicIntroduction: "introduction", TopicNotification: "notification", TopicIdArray: "topicIDList", MsgVersion: "messageVersion", C2cMsgModNotifys: "c2cMessageModified", GroupMsgModNotifys: "groupMessageModified", ApplyJoinOption: "joinOption", MsgFlag: "messageRemindType", AtInfoList: "groupAtInfoList", AtFlagList: "groupAtType", AtMsgSeq: "sequence", BanDuration: "duration", BanDescription: "reason", NotVisible: "invisible", BytesTag: "tag", BytesValue: "value", RptBytesValue: "value", LatestSeq: "globalSequence", ClearSeq: "clearSequence", SupportMessageExtension: "isSupportExtension", ExtensionList: "extensions", GroupCounter: "counterList", Revoker_Account: "revoker", MsgExtensionNotify: "messageExtensionNotify", ExtensionC2cMsgInfo: "messageInfo", ExtensionGroupMsgInfo: "messageInfo", MsgOptType: "operateType", SetKVInfo: "operateResultList", DeleteKVInfo: "operateResultList", ClearKVInfo: "operateResultList", MsgKeyValue: "extensions", ClearMsgSeq: "clearSequence", MsgLastSeq: "globalSequence", InviteJoinOption: "inviteOption", MemberList_Account: "inviteeList", MsgMemberExtraInfoList: "inviteeInfoList", E: "event", GInf: "groupProfile", MCT: "clientTime", MR: "random", MP: "priority", MTS: "time", GId: "groupID", MS: "sequence", CCD: "cloudCustomData", F_Account: "from", F_Hd: "avatar", F_NN: "nick", GN: "groupName", GT: "groupType", IsSys: "isSystemMessage", OpInf: "operatorInfo", Img: "avatar", NN: "nick", OnlineInf: "onlineMemberInfo", ET: "expireTime", Num: "onlineMemberNum", Opt: "operationType", O_Account: "operatorID", RT: "operationType", UDF: "userDefinedField", L_Account: "userIDList", IsPlaceMsg: "isPlaceMessage", MsgCheckResult: "checkResult", Results: "resultList", Reaction: "reactionID", Reaction_Account: "userIDList", MsgReactionNotifyList: "messageReactionNotifyList", MsgReactionNotify: "messageReactionNotify", MsgReactionSummary: "reactionList", C2CMsgInfo: "C2CMessageInfo", GroupMsgInfo: "groupMessageInfo", int32_err_code: "errorCode", str_err_msg: "errorMsg", MsgDropReason: "messageDropReason", ReactedByMe: "reactedByMyself", Level: "messageRemindType", PeerReadTime: "timestamp", NoUnreadSeqList: "excludedUnreadSequenceList", NewMsg: "topicLatestMessage" }, ignoreKeyWord: ["C2C", "ID", "USP"] };
      function Ka(e3) {
        return d2(this, Ka), (e3 = Ra.call(this, e3))._n = "SyncUnreadMsgModule", e3._cookie = "", e3._onlineSyncFlag = false, e3.getIEmitInst().on(P2.A2KEY_AND_TINYID_UPDATED, e3._init, i2(e3)), e3;
      }
      function Ya(e3) {
        return d2(this, Ya), (e3 = Oa.call(this, e3))._n = "PluginModule", e3.plugins = {}, e3;
      }
      function Wa(e3) {
        return d2(this, Wa), (e3 = Na.call(this, e3))._n = "ComboMsgModule", e3;
      }
      function ja(e3) {
        return d2(this, ja), (e3 = Ga.call(this, e3))._n = "MsgReactionModule", e3._reactedByMyselfMap = /* @__PURE__ */ new Map(), e3._reactionInfoMap = /* @__PURE__ */ new Map(), e3;
      }
      function Ja(e3) {
        return d2(this, Ja), (e3 = Pa.call(this, e3))._n = "MsgExtModule", e3.msgExtMap = /* @__PURE__ */ new Map(), e3.globalSeqMap = /* @__PURE__ */ new Map(), e3.getMsgExtsMap = /* @__PURE__ */ new Map(), e3;
      }
      function za(e3) {
        return d2(this, za), (e3 = Ua.call(this, e3))._n = "MessageModule", e3._messageOptionsMap = /* @__PURE__ */ new Map(), e3._mergerMessageHandler = new Da(i2(e3)), e3;
      }
      function Xa(e3, t3) {
        if ("string" == typeof e3 || Array.isArray(e3))
          return t3 = Object.assign({ pascalCase: false }, t3), 0 === (e3 = Array.isArray(e3) ? e3.map(function(e4) {
            return e4.trim();
          }).filter(function(e4) {
            return e4.length;
          }).join("-") : e3.trim()).length ? "" : 1 === e3.length ? t3.pascalCase ? e3.toUpperCase() : e3.toLowerCase() : (e3 = e3 = (e3 = e3 !== e3.toLowerCase() ? Za(e3) : e3).replace(/^[_.\- ]+/, "").toLowerCase().replace(/[_.\- ]+(\w|$)/g, function(e4, t4) {
            return t4.toUpperCase();
          }).replace(/\d+(\w|$)/g, function(e4) {
            return e4.toUpperCase();
          }), t3.pascalCase ? e3.charAt(0).toUpperCase() + e3.slice(1) : e3);
        throw new TypeError("Expected the input to be `string | string[]`");
      }
      var Za = function(e3) {
        for (var t3 = false, n3 = false, o3 = false, i3 = 0; i3 < e3.length; i3++) {
          var a3 = e3[i3];
          t3 && /[a-zA-Z]/.test(a3) && a3.toUpperCase() === a3 ? (e3 = e3.slice(0, i3) + "-" + e3.slice(i3), o3 = n3, n3 = !(t3 = false), i3++) : n3 && o3 && /[a-zA-Z]/.test(a3) && a3.toLowerCase() === a3 ? (e3 = e3.slice(0, i3 - 1) + "-" + e3.slice(i3 - 1), o3 = n3, t3 = !(n3 = false)) : (t3 = a3.toLowerCase() === a3 && a3.toUpperCase() !== a3, o3 = n3, n3 = a3.toUpperCase() === a3 && a3.toLowerCase() !== a3);
        }
        return e3;
      };
      function Qa(e3, t3) {
        var r3 = 0;
        return function n3(e4, i3) {
          var t4, o3, a3, s3;
          return 100 < ++r3 ? (r3--, e4) : O2(e4) ? (t4 = e4.map(function(e5) {
            return ut2(e5) ? n3(e5, i3) : e5;
          }), r3--, t4) : ut2(e4) ? (o3 = e4, a3 = function(e5, t5) {
            if (!pt2(t5))
              return false;
            if (t5 !== Xa(t5))
              for (var n4 = 0; n4 < Ba.ignoreKeyWord.length && !t5.includes(Ba.ignoreKeyWord[n4]); n4++)
                ;
            var o4;
            return N2(i3[t5]) ? "OPPOChannelID" === (o4 = t5) ? o4 : o4[0].toUpperCase() + Xa(o4).slice(1) : i3[t5];
          }, s3 = /* @__PURE__ */ Object.create(null), Object.keys(o3).forEach(function(e5) {
            var t5 = a3(o3[e5], e5);
            t5 && (s3[t5] = o3[e5]);
          }), t4 = wt2(t4 = s3, function(e5, t5) {
            return O2(e5) || ut2(e5) ? n3(e5, i3) : e5;
          }), r3--, t4) : void 0;
        }(e3, t3);
      }
      for (var $a, es2 = String.fromCharCode, ts = function(e3) {
        var t3 = 0 | e3.charCodeAt(0);
        if (55296 <= t3)
          if (t3 < 56320) {
            e3 = 0 | e3.charCodeAt(1);
            if (56320 <= e3 && e3 <= 57343) {
              if (65535 < (t3 = (t3 << 10) + e3 - 56613888 | 0))
                return es2(240 | t3 >>> 18, 128 | t3 >>> 12 & 63, 128 | t3 >>> 6 & 63, 128 | 63 & t3);
            } else
              t3 = 65533;
          } else
            t3 <= 57343 && (t3 = 65533);
        return t3 <= 2047 ? es2(192 | t3 >>> 6, 128 | 63 & t3) : es2(224 | t3 >>> 12, 128 | t3 >>> 6 & 63, 128 | 63 & t3);
      }, ns = function(e3) {
        for (var t3 = void 0 === e3 ? "" : ("" + e3).replace(/[\x80-\uD7ff\uDC00-\uFFFF]|[\uD800-\uDBFF][\uDC00-\uDFFF]?/g, ts), n3 = 0 | t3.length, o3 = new Uint8Array(n3), i3 = 0; i3 < n3; i3 = i3 + 1 | 0)
          o3[i3] = 0 | t3.charCodeAt(i3);
        return o3;
      }, os2 = (e2(Ls, [{ key: "getID", value: function() {
        return this._id;
      } }, { key: "_onOpen", value: function(e3) {
        this._handler.onOpen({ id: this._id, res: JSON.stringify(e3) });
      } }, { key: "_onClose", value: function(e3) {
        this._handler.onClose({ id: this._id, e: e3 });
      } }, { key: "_onMessage", value: function(e3) {
        e3 = this._canIUseBinaryFrame ? this._isAppCompressedData(e3.data) ? this._handler.inflate(e3.data) : function(e4) {
          for (var t3 = new Uint8Array(e4), n3 = "", o3 = 0, i3 = t3.length; o3 < i3; ) {
            var a3 = t3[o3], s3 = 0, r3 = 0;
            if (a3 <= 127 ? (s3 = 0, r3 = 255 & a3) : a3 <= 223 ? (s3 = 1, r3 = 31 & a3) : a3 <= 239 ? (s3 = 2, r3 = 15 & a3) : a3 <= 244 && (s3 = 3, r3 = 7 & a3), 0 < i3 - o3 - s3)
              for (var c3 = 0; c3 < s3; )
                r3 = r3 << 6 | 63 & (a3 = t3[o3 + c3 + 1]), c3 += 1;
            else
              r3 = 65533, s3 = i3 - o3;
            n3 += String.fromCodePoint(r3), o3 += s3 + 1;
          }
          return n3;
        }(e3.data) : e3.data;
        this._handler.onMessage({ data: e3 });
      } }, { key: "_isAppCompressedData", value: function(e3) {
        e3 = new Uint8Array(e3);
        return 67 === e3[0] && 79 === e3[1] && 77 === e3[2] && 80 === e3[3];
      } }, { key: "_onError", value: function(e3) {
        this._handler.onError({ id: this._id, e: e3 });
      } }, { key: "setIsWorkerEnabled", value: function(e3) {
        this._isWorkerEnabled = true;
      } }, { key: "close", value: function(e3) {
        this._workerSocket && (this._workerSocket.postMessage({ cmd: "stop", code: e3 }), this._workerSocket.terminate(), this._workerSocket = null), ve2 ? (I2.offSocketClose(), I2.offSocketMessage(), I2.offSocketOpen(), I2.offSocketError(), I2.closeSocket()) : this._socket && (v2 ? (this._socket.onClose(function() {
        }), this._socket.onOpen(function() {
        }), this._socket.onMessage(function() {
        }), this._socket.onError(function() {
        })) : (this._socket.onopen = null, this._socket.onmessage = null, this._socket.onclose = null, this._socket.onerror = null), me2 ? this._socket.close({ code: e3 }) : this._socket.close(e3), this._socket = null);
      } }, { key: "send", value: function(e3) {
        this._workerSocket ? this._workerSocket.postMessage({ cmd: "sendMessage", data: this._canIUseBinaryFrame ? ns(e3.data).buffer : e3.data }) : ve2 ? I2.sendSocketMessage({ data: e3.data, fail: function() {
          e3.fail && e3.requestID && e3.fail(e3.requestID);
        } }) : this._socket && (v2 ? this._socket.send({ data: this._canIUseBinaryFrame ? ns(e3.data).buffer : e3.data, fail: function() {
          e3.fail && e3.requestID && e3.fail(e3.requestID);
        } }) : this._socket.send(this._canIUseBinaryFrame ? ns(e3.data) : e3.data));
      } }]), Ls), is = ["keyMap"], as = ["keyMap"], ss = "connected", rs = "connecting", cs = "disconnected", us = (e2(Es, [{ key: "_setWebsocketHost", value: function() {
        var e3 = this._chM.get(12);
        this._currentSite = se2, this._chM.isOversea() && (this._currentSite = "OVERSEA"), e3.isSingaporeSite() ? this._currentSite = "SINGAPORE" : e3.isKoreaSite() ? this._currentSite = "KOREA" : e3.isGermanySite() ? this._currentSite = "GERMANY" : e3.isIndiaSite() ? this._currentSite = "IND" : e3.isJapanSite() ? this._currentSite = "JPN" : e3.isUSASite() ? this._currentSite = "USA" : e3.isIndonesiaSite() && (this._currentSite = "INDONESIA"), a2.HOST.setCurrent(this._currentSite);
      } }, { key: "_initConnection", value: function() {
        var e3 = this._chM.get(12).getSDKAppID() + "", e3 = (N2(a2.HOST.CURRENT.BACKUP) ? this._url = a2.HOST.CURRENT.DEFAULT : "" === this._url ? this._url = a2.HOST.CURRENT.DEFAULT0.replace("*", e3) : -1 < this._url.indexOf(e3) ? this._url = a2.HOST.CURRENT.DEFAULT : this._url === a2.HOST.CURRENT.DEFAULT ? this._url = a2.HOST.CURRENT.BACKUP : this._url === a2.HOST.CURRENT.BACKUP ? this._url = this._canIUseAnyCast() ? a2.HOST.CURRENT.ANYCAST : a2.HOST.CURRENT.DEFAULT : this._url === a2.HOST.CURRENT.ANYCAST && (a2.HOST.CURRENT.ANYCAST = "", this._url = a2.HOST.CURRENT.DEFAULT), this._chM.get(12)), t3 = e3.getProxyServer();
        S2(t3) || (this._url = t3), e3.isTestEnv() && (this._url = te2.TEST[this._currentSite].DEFAULT), this._connect(), this._nextPingTs = 0;
      } }, { key: "_canIUseAnyCast", value: function() {
        return Ce2 && a2.HOST.CURRENT.ANYCAST;
      } }, { key: "onCheckTimer", value: function(e3) {
        e3 % 1 == 0 && (this._checkPromiseMap(), this._checkNativeAppWS());
      } }, { key: "_checkPromiseMap", value: function() {
        var a3 = this;
        0 !== this._promiseMap.size && this._promiseMap.forEach(function(e3, t3) {
          var n3 = e3.reject, o3 = e3.timestamp, e3 = e3.headSeq, i3 = 15e3;
          -1 !== t3.indexOf(k2.LOGIN) ? i3 = 9e4 : -1 !== t3.indexOf(k2.PING) && (i3 = 3e3), Date.now() - o3 >= i3 && (M2.l("".concat(a3._n, "._checkPromiseMap request timeout, delete requestID:").concat(t3)), a3._promiseMap.delete(t3), n3(new E2({ code: L2.NETWORK_TIMEOUT, data: { headSeq: e3 } })), a3._chM.onRequestTimeout());
        });
      } }, { key: "_checkNativeAppWS", value: function() {
        Ie2 && !this.isConnected() && this._reConnect();
      } }, { key: "onOpen", value: function(e3) {
        var t3, n3;
        this._readyState !== cs && (this._onOpenTs = Date.now(), n3 = e3.id, e3 = e3.res, this._socketID = n3, t3 = nn2(this._startTs, false), n3 = "socketID:".concat(n3, " res:").concat(e3), M2.l("".concat(this._n, "._onOpen cost:").concat(t3, " ms. ").concat(n3)), new G2("wsOnOpen").setMessage(t3).setCostTime(t3).setMoreMessage(n3).end(), this._readyState = ss, this._reConnectCount = 0, this._resend(), true === this._reConnectFlag && (this._chM.onReconnected(), this._reConnectFlag = false), this._chM.onOpen());
      } }, { key: "onClose", value: function(e3) {
        var t3 = new G2("wsOnClose"), n3 = e3.id, e3 = e3.e, o3 = "sourceSocketID:".concat(n3, " currentSocketID:").concat(this._socketID, " code:").concat(e3.code, " reason:").concat(e3.reason), i3 = 0;
        0 !== this._onOpenTs && (i3 = Date.now() - this._onOpenTs), t3.setMessage(i3).setCostTime(i3).setMoreMessage(o3).setCode(e3.code).end(true), M2.l("".concat(this._n, "._onClose ").concat(o3, " onlineTime:").concat(i3)), n3 === this._socketID && (this._readyState = cs, i3 < 1e3 ? this._chM.onReconnectFailed() : this._chM.onClose());
      } }, { key: "onError", value: function(e3) {
        var t3 = e3.id, e3 = e3.e, n3 = "sourceSocketID:".concat(t3, " currentSocketID:").concat(this._socketID);
        new G2("wsOnError").setMessage(e3.errMsg || JSON.stringify(e3, ["message", "code"])).setMoreMessage(n3).setLevel("error").end(true), M2.w("".concat(this._n, "._onError"), e3, n3), t3 === this._socketID && (this._readyState = cs, this._chM.onError());
      } }, { key: "onMessage", value: function(t3) {
        var e3, n3, o3, i3, a3, s3;
        try {
          e3 = JSON.parse(t3.data);
        } catch (e4) {
          new G2("jsonParseError").setMessage(t3.data).end();
        }
        e3 && e3.head && (t3 = this._getRequestIDFromHead(e3.head), n3 = e3.body, this._chM.get(30).isTRTCCommand(t3) || (s3 = Kt2(e3.head), n3 = function t4(e4, n4) {
          var o4, i4, a4;
          return O2(e4) ? e4.map(function(e5) {
            return ut2(e5) ? t4(e5, n4) : e5;
          }) : ut2(e4) ? (o4 = e4, i4 = function(e5, t5) {
            return N2(n4[t5]) ? Xa(t5) : n4[t5];
          }, a4 = {}, Object.keys(o4).forEach(function(e5) {
            a4[i4(o4[e5], e5)] = o4[e5];
          }), wt2(a4, function(e5) {
            return O2(e5) || ut2(e5) ? t4(e5, n4) : e5;
          })) : void 0;
        }(e3.body, this._getResKeyMap(s3))), M2.d("".concat(this._n, ".onMessage ret:").concat(JSON.stringify(n3), " requestID:").concat(t3, " has:").concat(this._promiseMap.has(t3))), this._setNextPingTs(), this._promiseMap.has(t3) ? (o3 = (s3 = this._promiseMap.get(t3)).resolve, i3 = s3.reject, a3 = s3.timestamp, s3 = s3.headSeq, this._promiseMap.delete(t3), this._calcRTT(a3), n3.errorCode && 0 !== n3.errorCode ? (this._chM.onErrorCodeNotZero(n3), i3(new E2({ code: n3.errorCode, message: n3.errorInfo || "", data: t3.includes(k2.MODIFY_C2C_MSG) || t3.includes(k2.MODIFY_GRP_MSG) ? { elements: n3.elements, messageVersion: n3.messageVersion, cloudCustomData: n3.cloudCustomData, headSeq: s3 } : { headSeq: s3 } }))) : o3(C2(n3))) : this._chM.onMessage({ head: e3.head, body: n3 }));
      } }, { key: "_calcRTT", value: function(e3) {
        e3 = Date.now() - e3;
        this._chM.get(26).addRTT(e3);
      } }, { key: "_connect", value: function() {
        this._readyState !== rs && this._readyState !== ss && (this._startTs = Date.now(), this._onOpenTs = 0, this._readyState = rs, this._socket = new os2(this), this._socketID = this._socket.getID(), M2.l("".concat(this._n, "._connect isWorkerEnabled:").concat(this.getIsWorkerEnabled(), " socketID:").concat(this._socketID, " url:").concat(this.getURL())), new G2("wsConnect").setMessage("socketID:".concat(this._socketID, " url:").concat(this.getURL())).end());
      } }, { key: "getURL", value: function() {
        this._chM.isDevMode() && (this._canIUseBinaryFrame = false);
        var e3 = xt2(), t3 = ((ve2 || _e3 && "windows" === e3 || Ie2) && (this._canIUseBinaryFrame = false), -1), n3 = ("ios" === e3 ? t3 = Le2 || -1 : "android" === e3 && (t3 = ke2 || -1), this._chM.get(12)), o3 = this._chM.getPlatform(), i3 = n3.getSDKAppID(), n3 = n3.getInstanceID(), i3 = "sdkappid=".concat(i3, "&instanceid=").concat(n3, "&random=").concat(this._getRandom(), "&platform=").concat(o3, "&host=").concat(e3) + "&version=".concat(t3, "&sdkversion=").concat("3.4.7");
        return he2 && (i3 += "&isminigame=1"), this._chM.canIUseInflate() && (i3 += "&compress=gzip"), (this._canIUseBinaryFrame ? "".concat(this._url, "/binfo?") : "".concat(this._url, "/info?")).concat(i3);
      } }, { key: "_closeConnection", value: function(e3) {
        M2.l("".concat(this._n, "._closeConnection socketID:").concat(this._socketID)), this._socket && (this._socket.close(e3), this._socketID = -1, this._socket = null, this._readyState = cs);
      } }, { key: "_resend", value: function() {
        var i3 = this;
        if (M2.l("".concat(this._n, "._resend reConnectFlag:").concat(this._reConnectFlag), "promiseMap.size:".concat(this._promiseMap.size, " simpleRequestMap.size:").concat(this._simpleRequestMap.size)), 0 < this._promiseMap.size && this._promiseMap.forEach(function(e4, t4) {
          var n4 = e4.uplinkData, o4 = e4.resolve, e4 = e4.reject;
          -1 !== t4.indexOf(k2.AV_POLLING) ? i3._promiseMap.delete(t4) : (i3._promiseMap.set(t4, { resolve: o4, reject: e4, timestamp: Date.now(), uplinkData: n4 }), i3._execute(t4, n4));
        }), 0 < this._simpleRequestMap.size) {
          var e3, t3 = Z2(this._simpleRequestMap);
          try {
            for (t3.s(); !(e3 = t3.n()).done; ) {
              var n3 = Y2(e3.value, 2), o3 = n3[0], a3 = n3[1];
              this._execute(o3, a3);
            }
          } catch (e4) {
            t3.e(e4);
          } finally {
            t3.f();
          }
          this._simpleRequestMap.clear();
        }
      } }, { key: "send", value: function(n3) {
        var o3 = this, i3 = (n3.head.seq = this._getSequence(), n3.head.reqtime = Math.floor(Date.now() / 1e3), n3.keyMap, K2(n3, is)), a3 = this._getRequestIDFromHead(n3.head), s3 = JSON.stringify(i3);
        return new Promise(function(e3, t3) {
          o3._promiseMap.set(a3, { resolve: e3, reject: t3, timestamp: Date.now(), uplinkData: s3, headSeq: n3.head.seq }), M2.d("".concat(o3._n, ".send uplinkData:").concat(JSON.stringify(i3), " requestID:").concat(a3, " readyState:").concat(o3._readyState)), o3._readyState !== ss ? o3._reConnect() : (o3._execute(a3, s3), o3._chM.get(26).addRequestCount());
        });
      } }, { key: "simplySend", value: function(e3) {
        e3.head.seq = this._getSequence(), e3.head.reqtime = Math.floor(Date.now() / 1e3), e3.keyMap;
        var t3 = K2(e3, as), e3 = this._getRequestIDFromHead(e3.head), t3 = JSON.stringify(t3);
        this._readyState !== ss ? (this._simpleRequestMap.size < this.MAX_SIZE ? this._simpleRequestMap.set(e3, t3) : M2.l("".concat(this._n, ".simplySend. simpleRequestMap is full, drop request!")), this._reConnect()) : this._execute(e3, t3);
      } }, { key: "_execute", value: function(e3, t3) {
        this._socket.send({ data: t3, fail: v2 ? this._onSendFail.bind(this) : void 0, requestID: e3 });
      } }, { key: "_onSendFail", value: function(e3) {
        M2.l("".concat(this._n, "._onSendFail requestID:").concat(e3)), this._chM.onSendFail();
      } }, { key: "_getSequence", value: function() {
        var e3;
        if (this._startSequence < 2415919103)
          return e3 = this._startSequence, this._startSequence += 1, 2415919103 === this._startSequence && (this._startSequence = ft2()), e3;
      } }, { key: "_getRequestIDFromHead", value: function(e3) {
        return e3.servcmd + e3.seq;
      } }, { key: "_getResKeyMap", value: function(e3) {
        e3 = this._chM.getKeyMap(e3);
        return y2(y2({}, Ba.res), e3.res);
      } }, { key: "_reConnect", value: function() {
        this._readyState !== ss && this._readyState !== rs && this.forcedReconnect();
      } }, { key: "forcedReconnect", value: function() {
        var e3 = "".concat(this._n, ".forcedReconnect");
        M2.l("".concat(e3, " count:").concat(this._reConnectCount, " readyState:").concat(this._readyState)), this._reConnectFlag = true, this._resetRandom(), this._reConnectCount < this.MAX_RECONNECT_COUNT ? (this._reConnectCount += 1, this._closeConnection(4001), this._initConnection()) : (this._reConnectCount = 0, this._chM.get(15).isOnline() ? (M2.w("".concat(e3, " disconnected from wsserver but network is ok, continue...")), this._closeConnection(4001), this._initConnection()) : this._chM.onReconnectFailed());
      } }, { key: "getReconnectFlag", value: function() {
        return this._reConnectFlag;
      } }, { key: "_setNextPingTs", value: function() {
        this._nextPingTs = Ie2 ? Date.now() + 5e3 : Date.now() + 1e4;
      } }, { key: "getNextPingTs", value: function() {
        return this._nextPingTs;
      } }, { key: "isConnected", value: function() {
        return this._readyState === ss;
      } }, { key: "canIUseBinaryFrame", value: function() {
        return this._canIUseBinaryFrame;
      } }, { key: "getSocketID", value: function() {
        return this._socketID;
      } }, { key: "inflate", value: function(e3) {
        if (this._chM.canIUseInflate())
          return this._chM.get(37).inflate(e3);
      } }, { key: "setIsWorkerEnabled", value: function(e3) {
        M2.l("".concat(this._n, ".setIsWorkerEnabled flag:").concat(e3)), this._isWorkerEnabled = e3;
      } }, { key: "getIsWorkerEnabled", value: function() {
        return this._isWorkerEnabled && Ge2;
      } }, { key: "_getRandom", value: function() {
        return 0 === this._random && (this._random = Math.random()), this._random;
      } }, { key: "_resetRandom", value: function() {
        this._random = 0;
      } }, { key: "close", value: function() {
        M2.l("".concat(this._n, ".close")), this._closeConnection(4e3), this._promiseMap.clear(), this._startSequence = ft2(), this._readyState = cs, this._simpleRequestMap.clear(), this._reConnectFlag = false, this._reConnectCount = 0, this._onOpenTs = 0, this._url = "", this._random = 0, this._canIUseBinaryFrame = true, this._isWorkerEnabled = true;
      } }]), Es), ls = function(a3, s3, r3) {
        return new Promise(function(t3, e3) {
          var n3, o3, i3 = "application/x-www-form-urlencoded;charset=UTF-8";
          v2 ? I2.request({ url: s3, data: r3, method: a3, timeout: 3e3, header: { "content-type": i3 }, success: function(e4) {
            e4 && e4.data && e4.data.NetCheckInfo && M2.l("".concat("getconninfo ok in", " miniapp. ret:"), e4.data), t3();
          }, fail: function() {
            e3(new E2({ code: L2.NETWORK_ERROR }));
          } }) : (n3 = new XMLHttpRequest(), o3 = setTimeout(function() {
            n3.abort(), e3(new E2({ code: L2.NETWORK_TIMEOUT }));
          }, 3e3), n3.onreadystatechange = function() {
            4 === n3.readyState && (clearTimeout(o3), 200 === n3.status || 304 === n3.status ? (n3.responseText && -1 < n3.responseText.indexOf("NetCheckInfo") && M2.l("".concat("getconninfo ok in", " web. ret:"), JSON.parse(n3.responseText)), t3()) : e3(new E2({ code: L2.NETWORK_ERROR })));
          }, n3.open(a3, s3, true), n3.setRequestHeader("Content-type", i3), r3 ? n3.send(r3) : n3.send());
        });
      }, ds = (t2(Ds, u2), $a = n2(Ds), e2(Ds, [{ key: "onCheckTimer", value: function(e3) {
        this._socketHandler && (this.isLoggedIn() ? (0 < this._timerForNotLoggedIn && (clearInterval(this._timerForNotLoggedIn), this._timerForNotLoggedIn = -1), this._socketHandler.onCheckTimer(e3)) : this._socketHandler.onCheckTimer(1), this._checkNextPing());
      } }, { key: "onErrorCodeNotZero", value: function(e3) {
        this.get(20).onErrorCodeNotZero(e3);
      } }, { key: "onMessage", value: function(e3) {
        this.get(20).onMessage(e3);
      } }, { key: "send", value: function(e3) {
        return this._socketHandler ? this._previousState !== A2.NET_STATE_CONNECTED && e3.head.servcmd.includes(k2.SSO_STAT) ? (this.reConnect(), this.isPrivateNetWork() ? Promise.resolve() : this._sendLogViaHTTP(e3)) : this._socketHandler.send(e3) : Promise.reject();
      } }, { key: "_sendLogViaHTTP", value: function(e3) {
        var t3 = a2.HOST.CURRENT.STAT, t3 = "".concat(t3, "/v4/imopenstat/tim_web_report_v2?sdkappid=").concat(e3.head.sdkappid, "&reqtime=").concat(Date.now()), e3 = JSON.stringify(e3.body);
        return ls("POST", t3, e3);
      } }, { key: "simplySend", value: function(e3) {
        return this._socketHandler ? this._socketHandler.simplySend(e3) : Promise.reject();
      } }, { key: "onOpen", value: function() {
        this._ping();
      } }, { key: "onClose", value: function() {
        this._socketHandler && this._socketHandler.getReconnectFlag() && this._emitNetStateChangeEvent(A2.NET_STATE_DISCONNECTED), this.reConnect();
      } }, { key: "onError", value: function() {
        v2 && !Ie2 && this.warn("DomainNameInMP"), this._emitNetStateChangeEvent(A2.NET_STATE_DISCONNECTED);
      } }, { key: "getKeyMap", value: function(e3) {
        return this.get(20).getKeyMap(e3);
      } }, { key: "onRequestTimeout", value: function() {
        3e4 <= Date.now() - this._lastDiagnoseTS && this.diagnose();
      } }, { key: "onSendFail", value: function() {
        this._emitNetStateChangeEvent(A2.NET_STATE_DISCONNECTED);
      } }, { key: "onReconnected", value: function() {
        M2.l("".concat(this._n, ".onReconnected cost:").concat(nn2(this._disconnectedTS, true, true))), this._m.restartTimer(), this.get(20).onReconnected(nn2(this._disconnectedTS, false, false)), this._disconnectedTS = 0, this._emitNetStateChangeEvent(A2.NET_STATE_CONNECTED);
      } }, { key: "onReconnectFailed", value: function() {
        M2.l("".concat(this._n, ".onReconnectFailed")), this._emitNetStateChangeEvent(A2.NET_STATE_DISCONNECTED);
      } }, { key: "setIsWorkerEnabled", value: function(e3) {
        this._socketHandler && this._socketHandler.setIsWorkerEnabled(false);
      } }, { key: "offline", value: function() {
        this._emitNetStateChangeEvent(A2.NET_STATE_DISCONNECTED);
      } }, { key: "reConnect", value: function() {
        var e3 = 0 < arguments.length && void 0 !== arguments[0] && arguments[0], t3 = false, n3 = (this._socketHandler && (t3 = this._socketHandler.getReconnectFlag()), "forcedFlag:".concat(e3, " fatalErrorFlag:").concat(this._fatalErrorFlag, " previousState:").concat(this._previousState, " reconnectFlag:").concat(t3));
        M2.l("".concat(this._n, ".reConnect ").concat(n3)), this._fatalErrorFlag || !this._socketHandler || true !== e3 && this._previousState === A2.NET_STATE_CONNECTING && t3 || (this._socketHandler.forcedReconnect(), this._emitNetStateChangeEvent(A2.NET_STATE_CONNECTING));
      } }, { key: "_emitNetStateChangeEvent", value: function(e3) {
        this._previousState !== e3 && (M2.l("".concat(this._n, "._emitNetStateChangeEvent from ").concat(this._previousState, " to ").concat(e3)), e3 === A2.NET_STATE_DISCONNECTED && 0 === this._disconnectedTS && (this._disconnectedTS = Date.now(), this.diagnose()), this._previousState = e3, this.emitOEvt(h2.NET_STATE_CHANGE, { state: e3 }));
      } }, { key: "_ping", value: function() {
        var e3, n3 = this;
        true !== this._probing && (this._probing = true, e3 = this.get(20).getProtocolData({ P: k2.PING }), this.send(e3).then(function() {
          n3._probing = false;
        }).catch(function(e4) {
          n3._probing = false;
          var t3 = n3.get(15).isOnline();
          M2.w("".concat(n3._n, "._ping failed. bOnline:").concat(t3, " error:"), e4), e4 && 60002 === e4.code ? (new G2("error").setMessage("code:".concat(e4.code, " message:").concat(e4.message)).end(), n3._fatalErrorFlag = true, n3._emitNetStateChangeEvent(A2.NET_STATE_DISCONNECTED)) : t3 ? n3.reConnect() : n3._emitNetStateChangeEvent(A2.NET_STATE_DISCONNECTED);
        }));
      } }, { key: "_checkNextPing", value: function() {
        this._socketHandler && this._socketHandler.isConnected() && Date.now() >= this._socketHandler.getNextPingTs() && this._ping();
      } }, { key: "dealloc", value: function() {
        this._socketHandler && (this._socketHandler.close(), this._socketHandler = null), -1 < this._timerForNotLoggedIn && clearInterval(this._timerForNotLoggedIn);
      } }, { key: "onRestApiKickedOut", value: function() {
        this._socketHandler && (this._socketHandler.close(), this.reConnect(true));
      } }, { key: "canIUseInflate", value: function() {
        return this._m.canIUseInflate();
      } }, { key: "getSocketID", value: function() {
        if (this._socketHandler)
          return this._socketHandler.getSocketID();
      } }, { key: "diagnose", value: function() {
        this.isPrivateNetWork() || (this._lastDiagnoseTS = Date.now(), this._diagnoseBySSO(), this._diagnoseByCDN());
      } }, { key: "_diagnoseBySSO", value: function() {
        var t3 = this, e3 = this._socketHandler.getURL(), n3 = e3.split("/")[2];
        n3.startsWith("ws") && (e3 = e3.slice(e3.indexOf("info?") + 5), n3 = "https://".concat(n3, "/v3/netcheck/getconninfo?").concat(e3, "&reqtime=").concat(Date.now()), ls("GET", n3).catch(function(e4) {
          M2.w("".concat(t3._n, "._diagnoseBySSO failed. error:"), e4);
        }));
      } }, { key: "_diagnoseByCDN", value: function() {
        var t3 = this, e3 = this._socketHandler.getURL(), e3 = e3.slice(e3.indexOf("info?") + 5), e3 = "https://boce-cdn.my-imcloud.com/v3/netcheck/getconninfo?".concat(e3, "&reqtime=").concat(Date.now());
        ls("GET", e3).catch(function(e4) {
          M2.w("".concat(t3._n, "._diagnoseByCDN failed. error:"), e4);
        });
      } }, { key: "reset", value: function() {
        M2.l("".concat(this._n, ".reset")), this._previousState = A2.NET_STATE_CONNECTED, this._probing = false, this._fatalErrorFlag = false, this._timerForNotLoggedIn = setInterval(this.onCheckTimer.bind(this), 1e3), this._disconnectedTS = 0, this._lastDiagnoseTS = 0;
      } }]), Ds), ps = ["a2", "tinyid"], _s2 = ["a2", "tinyid"], hs = (e2(Ts, [{ key: "_fillMap", value: function() {
        this._map.clear();
        var e3 = this._sessionM.genCommonHead(), t3 = this._sessionM.genCosSpecifiedHead(), n3 = this._sessionM.genSSOReportHead();
        this._map.set(k2.LOGIN, { head: y2(y2({}, e3), {}, { servcmd: "".concat(a2.NAME.IM_OPEN_STATUS, ".").concat(k2.LOGIN) }), body: { state: "Online", isWebUniapp: 0, deviceBrand: 0, customInfo: "" }, keyMap: { req: { deviceBrand: "InstType" }, res: { InstId: "instanceID", HelloInterval: "helloInterval", RichMsgAuthKey: "authKey" } } }), this._map.set(k2.LOGOUT, { head: y2(y2({}, e3), {}, { servcmd: "".concat(a2.NAME.IM_OPEN_STATUS, ".").concat(k2.LOGOUT) }), body: { type: 0, isWebUniapp: 0 }, keyMap: { req: { type: "wslogout_type" } } }), this._map.set(k2.HELLO, { head: y2(y2({}, e3), {}, { servcmd: "".concat(a2.NAME.IM_OPEN_STATUS, ".").concat(k2.HELLO) }), body: { isWebUniapp: 0 }, keyMap: { res: { NewInstInfo: "newInstanceInfo" } } }), this._map.set(k2.KICK_OTHER, { head: y2(y2({}, e3), {}, { servcmd: "".concat(a2.NAME.STAT_SERVICE, ".").concat(k2.KICK_OTHER) }), body: {} }), this._map.set(k2.COS_SIGN, { head: y2(y2({}, t3), {}, { servcmd: "".concat(a2.NAME.IM_COS_SIGN, ".").concat(k2.COS_SIGN) }), body: { cmd: "open_im_cos_svc", subCmd: "get_cos_token", duration: 300, version: 2 }, keyMap: { req: { userSig: "usersig", subCmd: "sub_cmd", cmd: "cmd", duration: "duration", version: "version" }, res: { expired_time: "expiredTime", bucket_name: "bucketName", session_token: "sessionToken", tmp_secret_id: "secretId", tmp_secret_key: "secretKey" } } }), this._map.set(k2.COS_PRE_SIG, { head: y2(y2({}, t3), {}, { servcmd: "".concat(a2.NAME.CUSTOM_UPLOAD, ".").concat(k2.COS_PRE_SIG) }), body: { fileType: void 0, fileName: void 0, uploadMethod: 0, duration: 900 }, keyMap: { req: { userSig: "usersig", fileType: "file_type", fileName: "file_name", uploadMethod: "upload_method" }, res: { expired_time: "expiredTime", request_id: "requestId", head_url: "headUrl", upload_url: "uploadUrl", download_url: "downloadUrl", ci_url: "ciUrl", snapshot_url: "requestSnapshotUrl" } } }), this._map.set(k2.SIMPLE_COS_PRE_SIG, { head: y2(y2({}, t3), {}, { servcmd: "".concat(a2.NAME.CUSTOM_UPLOAD, ".").concat(k2.SIMPLE_COS_PRE_SIG) }), body: { uploadMethod: 0, platform: 2, SDKAppID: 0, userID: "", conversationType: 1, uploadConfig: [{ fileID: 1, fileType: 1, fileName: "" }] }, keyMap: { req: { platform: "uint32_platform", SDKAppID: "uint32_sdkappid", userID: "str_user_id", uploadMethod: "uint32_upload_method", conversationType: "uint32_scene", uploadConfig: "rpt_upload_object", fileID: "uint32_file_id", fileType: "uint32_file_type", fileName: "str_file_name" }, res: { str_final_ip: "uploadIP", rpt_pre_sig: "preSig", uint32_file_id: "fileID", uint32_exist_flag: "existFlag", str_download_url: "downloadUrl", str_upload_url: "uploadUrl", str_snapshot_url: "requestSnapshotUrl", str_file_key: "fileKey" } } }), this._map.set(k2.GET_IMAGE_INFO, { head: y2(y2({}, t3), {}, { servcmd: "".concat(a2.NAME.CUSTOM_UPLOAD, ".").concat(k2.GET_IMAGE_INFO) }), body: { imageUrl: "" }, keyMap: { req: { imageUrl: "str_image_url" }, res: { rpt_msg_image_info: "imageInfoArray", uint32_image_type: "type", str_url: "url", uint32_width: "width", uint32_height: "height", str_image_format: "imageFormat" } } }), this._map.set(k2.GET_IP, { head: y2(y2({}, t3), {}, { servcmd: "".concat(a2.NAME.CUSTOM_UPLOAD, ".").concat(k2.GET_IP) }), body: { domainName: "" }, keyMap: { req: { domainName: "str_domain" }, res: { str_final_ip: "ip" } } }), this._map.set(k2.VIDEO_COVER, { head: y2(y2({}, t3), {}, { servcmd: "".concat(a2.NAME.CUSTOM_UPLOAD, ".").concat(k2.VIDEO_COVER) }), body: { version: 1, platform: void 0, coverName: void 0, requestSnapshotUrl: void 0 }, keyMap: { req: { version: "version", platform: "platform", coverName: "cover_name", requestSnapshotUrl: "snapshot_url" }, res: { error_code: "errorCode", error_msg: "errorInfo", download_url: "snapshotUrl" } } }), this._map.set(k2.FETCH_COMMERCIAL_CONFIG, { head: y2(y2({}, e3), {}, { servcmd: "".concat(a2.NAME.IM_CONFIG_MANAGER, ".").concat(k2.FETCH_COMMERCIAL_CONFIG) }), body: { SDKAppID: 0 }, keyMap: { req: { SDKAppID: "uint32_sdkappid" }, res: { int32_error_code: "errorCode", str_error_message: "errorMessage", str_purchase_bits: "purchaseBits", uint32_expired_time: "expiredTime" } } }), this._map.set(k2.PUSHED_COMMERCIAL_CONFIG, { head: y2(y2({}, e3), {}, { servcmd: "".concat(a2.NAME.IM_CONFIG_MANAGER, ".").concat(k2.PUSHED_COMMERCIAL_CONFIG) }), body: {}, keyMap: { res: { int32_error_code: "errorCode", str_error_message: "errorMessage", str_purchase_bits: "purchaseBits", uint32_expired_time: "expiredTime" } } }), this._map.set(k2.FETCH_CLOUD_CTRL_CONFIG, { head: y2(y2({}, e3), {}, { servcmd: "".concat(a2.NAME.IM_CONFIG_MANAGER, ".").concat(k2.FETCH_CLOUD_CTRL_CONFIG) }), body: { SDKAppID: 0, version: 0 }, keyMap: { req: { SDKAppID: "uint32_sdkappid", version: "uint64_version" }, res: { int32_error_code: "errorCode", str_error_message: "errorMessage", str_json_config: "cloudControlConfig", uint32_expired_time: "expiredTime", uint32_sdkappid: "SDKAppID", uint64_version: "version" } } }), this._map.set(k2.PUSHED_CLOUD_CTRL_CONFIG, { head: y2(y2({}, e3), {}, { servcmd: "".concat(a2.NAME.IM_CONFIG_MANAGER, ".").concat(k2.PUSHED_CLOUD_CTRL_CONFIG) }), body: {}, keyMap: { res: { int32_error_code: "errorCode", str_error_message: "errorMessage", str_json_config: "cloudControlConfig", uint32_expired_time: "expiredTime", uint32_sdkappid: "SDKAppID", uint64_version: "version" } } }), this._map.set(k2.OVERLOAD_NOTIFY, { head: y2(y2({}, e3), {}, { servcmd: "".concat(a2.NAME.OVERLOAD_PUSH, ".").concat(k2.OVERLOAD_NOTIFY) }), body: {}, keyMap: { res: { OverLoadServCmd: "overloadCommand", DelaySecs: "waitingTime" } } }), this._map.set(k2.SYNC_UNREAD_MSG, { head: y2(y2({}, e3), {}, { servcmd: "".concat(a2.NAME.OPEN_IM, ".").concat(k2.SYNC_UNREAD_MSG) }), body: { cookie: "", syncFlag: 0, needAbstract: 1, isOnlineSync: 0, needSignaling: 1, needCachedMsg: 1 }, keyMap: { req: { fromAccount: "From_Account", toAccount: "To_Account", from: "From_Account", to: "To_Account", time: "MsgTimeStamp", sequence: "MsgSeq", random: "MsgRandom", elements: "MsgBody" }, res: { MsgList: "messageList", SyncFlag: "syncFlag", To_Account: "to", From_Account: "from", ClientSeq: "clientSequence", MsgSeq: "sequence", NoticeSeq: "noticeSequence", NotifySeq: "notifySequence", MsgRandom: "random", MsgTimeStamp: "time", MsgContent: "content", ToGroupId: "to", MsgKey: "messageKey", GroupTips: "groupTips", MsgBody: "elements", MsgType: "type", C2CRemainingUnreadCount: "C2CRemainingUnreadList", C2CPairUnreadCount: "C2CPairUnreadList" } } }), this._map.set(k2.GET_PROFANITY_LIST, { head: y2(y2({}, e3), {}, { servcmd: "".concat(a2.NAME.IM_MSG_AUDIT_MGR, ".").concat(k2.GET_PROFANITY_LIST) }), body: { version: 0, deviceID: "", startIndex: void 0 }, keyMap: { req: { version: "uint64_version", deviceID: "str_device_id", startIndex: "uint64_start_index" }, res: { msg_cmd_error_code: "errorInfo", str_err_msg: "errorMessage", uint32_code: "errorCode", msg_scene_ctl_config: "filterConfig", uint64_c2c_custom_msg_flag: "c2c_custom_message", uint64_c2c_text_msg_flag: "c2c_text_message", uint64_group_custom_msg_flag: "group_custom_message", uint64_group_text_msg_flag: "group_text_message", uint64_group_info_flag: "group_profile", uint64_group_member_info_flag: "group_member_profile", uint64_relation_chain_flag: "sns", uint64_user_info_flag: "user_profile", rpt_msg_dirty_word: "lexicon", str_dirty_word: "profanity", str_replaced_content: "replacement", uint64_filter_type: "filterType", uint64_id: "id", uint64_word_type: "profanityType", uint64_complete_flag: "completeFlag", uint64_next_start_index: "nextStartIndex", uint64_version: "version", uint64_expired_time: "expiredTime" } } }), this._map.set(k2.SEND_C2C_MSG, { head: y2(y2({}, e3), {}, { servcmd: "".concat(a2.NAME.OPEN_IM, ".").concat(k2.SEND_C2C_MSG) }), body: { fromAccount: "", toAccount: "", msgSeq: 0, msgRandom: 0, msgBody: [], cloudCustomData: void 0, nick: "", avatar: "", msgLifeTime: void 0, offlinePushInfo: { pushFlag: 0, title: "", desc: "", ext: "", apnsInfo: { sound: "", badgeMode: 0, isVoipPush: void 0, image: "" }, androidInfo: { sound: "", XiaoMiChannelID: "", OPPOChannelID: "", GoogleChannelID: "", VIVOClassification: 1, VIVOCategory: "", HuaWeiCategory: "", HuaWeiImage: "", HonorImage: "", GoogleImage: "" } }, messageControlInfo: void 0, clientTime: void 0, needReadReceipt: 0, isSupportExtension: 0, isRelayMessage: 0, cmConfigID: void 0 }, keyMap: { req: { fromAccount: "From_Account", toAccount: "To_Account", msgTimeStamp: "MsgTimeStamp", msgSeq: "MsgSeq", msgRandom: "MsgRandom", msgBody: "MsgBody", count: "MaxCnt", lastMessageTime: "LastMsgTime", messageKey: "MsgKey", peerAccount: "Peer_Account", data: "Data", description: "Desc", extension: "Ext", type: "MsgType", content: "MsgContent", sizeType: "Type", uuid: "UUID", url: "", imageUrl: "URL", fileUrl: "Url", remoteAudioUrl: "Url", remoteVideoUrl: "VideoUrl", thumbUUID: "ThumbUUID", videoUUID: "VideoUUID", videoUrl: "", downloadFlag: "Download_Flag", nick: "From_AccountNick", avatar: "From_AccountHeadurl", from: "From_Account", time: "MsgTimeStamp", messageRandom: "MsgRandom", messageSequence: "MsgSeq", elements: "MsgBody", clientSequence: "ClientSeq", payload: "MsgContent", messageList: "MsgList", messageNumber: "MsgNum", abstractList: "AbstractList", messageBody: "MsgBody", needReadReceipt: "IsNeedReadReceipt", GoogleChannelID: "GoogleChannelID", XiaoMiChannelID: "XiaoMiChannelID" } } }), this._map.set(k2.SEND_GRP_MSG, { head: y2(y2({}, e3), {}, { servcmd: "".concat(a2.NAME.GRP, ".").concat(k2.SEND_GRP_MSG) }), body: { fromAccount: "", groupID: "", random: 0, clientSequence: 0, priority: "", msgBody: [], cloudCustomData: void 0, onlineOnlyFlag: 0, offlinePushInfo: { pushFlag: 0, title: "", desc: "", ext: "", apnsInfo: { sound: "", badgeMode: 0, isVoipPush: void 0, image: "" }, androidInfo: { sound: "", XiaoMiChannelID: "", OPPOChannelID: "", GoogleChannelID: "", VIVOClassification: 1, VIVOCategory: "", HuaWeiCategory: "", HuaWeiImage: "", HonorImage: "", GoogleImage: "" } }, groupAtInfo: [], messageControlInfo: void 0, clientTime: void 0, needReadReceipt: 0, topicID: void 0, receiverList: void 0, isSupportExtension: 0, isRelayMessage: 0, cmConfigID: void 0 }, keyMap: { req: { to: "GroupId", extension: "Ext", data: "Data", description: "Desc", random: "Random", sequence: "ReqMsgSeq", count: "ReqMsgNumber", type: "MsgType", priority: "MsgPriority", content: "MsgContent", elements: "MsgBody", sizeType: "Type", uuid: "UUID", url: "", imageUrl: "URL", fileUrl: "Url", remoteAudioUrl: "Url", remoteVideoUrl: "VideoUrl", thumbUUID: "ThumbUUID", videoUUID: "VideoUUID", videoUrl: "", downloadFlag: "Download_Flag", clientSequence: "ClientSeq", from: "From_Account", time: "MsgTimeStamp", messageRandom: "MsgRandom", messageSequence: "MsgSeq", payload: "MsgContent", messageList: "MsgList", messageNumber: "MsgNum", abstractList: "AbstractList", messageBody: "MsgBody", needReadReceipt: "NeedReadReceipt", receiverList: "To_Account", GoogleChannelID: "GoogleChannelID", XiaoMiChannelID: "XiaoMiChannelID" }, res: { MsgTime: "time", MsgSeq: "sequence" } } }), this._map.set(k2.REVOKE_C2C_MSG, { head: y2(y2({}, e3), {}, { servcmd: "".concat(a2.NAME.OPEN_IM, ".").concat(k2.REVOKE_C2C_MSG) }), body: { msgInfo: { fromAccount: "", toAccount: "", msgTimeStamp: 0, msgSeq: 0, msgRandom: 0 } }, keyMap: { req: { msgInfo: "MsgInfo", msgTimeStamp: "MsgTimeStamp", msgSeq: "MsgSeq", msgRandom: "MsgRandom" } } }), this._map.set(k2.REVOKE_GRP_MSG, { head: y2(y2({}, e3), {}, { servcmd: "".concat(a2.NAME.GRP, ".").concat(k2.REVOKE_GRP_MSG) }), body: { groupID: "", msgSeqList: void 0, topicID: "" }, keyMap: { req: { msgSeqList: "MsgSeqList", msgSeq: "MsgSeq" } } }), this._map.set(k2.GET_C2C_ROAMING_MSG, { head: y2(y2({}, e3), {}, { servcmd: "".concat(a2.NAME.OPEN_IM, ".").concat(k2.GET_C2C_ROAMING_MSG) }), body: { peerAccount: "", count: 15, lastMessageTime: 0, messageKey: "", withRecalledMessage: 1, direction: 0 }, keyMap: { req: { messageKey: "MsgKey", peerAccount: "Peer_Account", count: "MaxCnt", lastMessageTime: "LastMsgTime", withRecalledMessage: "WithRecalledMsg", direction: "GetDirection" }, res: { LastMsgTime: "lastMessageTime", IsNeedReadReceipt: "needReadReceipt", IsPeerRead: "readReceiptSentByPeer" } } }), this._map.set(k2.MODIFY_C2C_MSG, { head: y2(y2({}, e3), {}, { servcmd: "".concat(a2.NAME.OPEN_IM, ".").concat(k2.MODIFY_C2C_MSG) }), body: { from: "", to: "", sequence: 0, random: 0, time: 0, version: 0, elements: void 0, cloudCustomData: void 0 }, keyMap: { req: { sequence: "MsgSeq", random: "MsgRandom", time: "MsgTime", version: "MsgVersion", type: "MsgType", content: "MsgContent" } } }), this._map.set(k2.GET_GRP_ROAMING_MSG, { head: y2(y2({}, e3), {}, { servcmd: "".concat(a2.NAME.GRP, ".").concat(k2.GET_GRP_ROAMING_MSG) }), body: { withRecalledMsg: 1, groupID: "", count: 15, sequence: "", topicID: void 0 }, keyMap: { req: { sequence: "ReqMsgSeq", count: "ReqMsgNumber", withRecalledMessage: "WithRecalledMsg" }, res: { Random: "random", MsgTime: "time", MsgSeq: "sequence", ReqMsgSeq: "sequence", RspMsgList: "messageList", IsSystemMsg: "isSystemMessage", ToGroupId: "to", EnumFrom_AccountType: "fromAccountType", EnumTo_AccountType: "toAccountType", GroupCode: "groupCode", MsgPriority: "priority", MsgBody: "elements", MsgType: "type", MsgContent: "content", IsFinished: "complete", Download_Flag: "downloadFlag", ClientSeq: "clientSequence", ThumbUUID: "thumbUUID", VideoUUID: "videoUUID", ToTopicId: "topicID", InvisibleMsgSeq: "invisibleSequenceList", NextReqMsgSeq: "nextSequence" } } }), this._map.set(k2.SET_C2C_MSG_READ, { head: y2(y2({}, e3), {}, { servcmd: "".concat(a2.NAME.OPEN_IM, ".").concat(k2.SET_C2C_MSG_READ) }), body: { C2CMsgReaded: void 0 }, keyMap: { req: { lastMessageTime: "LastedMsgTime" } } }), this._map.set(k2.SET_C2C_PEER_MUTE_NOTIFICATIONS, { head: y2(y2({}, e3), {}, { servcmd: "".concat(a2.NAME.OPEN_IM, ".").concat(k2.SET_C2C_PEER_MUTE_NOTIFICATIONS) }), body: { userIDList: void 0, muteFlag: 0 }, keyMap: { req: { userIDList: "Peer_Account", muteFlag: "Mute_Notifications" } } }), this._map.set(k2.GET_C2C_PEER_MUTE_NOTIFICATIONS, { head: y2(y2({}, e3), {}, { servcmd: "".concat(a2.NAME.OPEN_IM, ".").concat(k2.GET_C2C_PEER_MUTE_NOTIFICATIONS) }), body: { toAccount: void 0, userIDList: void 0 }, keyMap: { req: { userIDList: "Peer_Account" }, res: { MuteNotificationsList: "muteFlagList" } } }), this._map.set(k2.SET_GRP_MSG_READ, { head: y2(y2({}, e3), {}, { servcmd: "".concat(a2.NAME.GRP, ".").concat(k2.SET_GRP_MSG_READ) }), body: { groupID: void 0, messageReadSeq: void 0, topicID: void 0 }, keyMap: { req: { messageReadSeq: "MsgReadedSeq" } } }), this._map.set(k2.SET_ALL_MSG_READ, { head: y2(y2({}, e3), {}, { servcmd: "".concat(a2.NAME.OPEN_IM, ".").concat(k2.SET_ALL_MSG_READ) }), body: { readAllC2CMessage: 0, groupMessageReadInfoList: [] }, keyMap: { req: { readAllC2CMessage: "C2CReadAllMsg", groupMessageReadInfoList: "GroupReadInfo", messageSequence: "MsgSeq" }, res: { C2CReadAllMsg: "readAllC2CMessage", GroupReadInfoArray: "groupMessageReadInfoList" } } }), this._map.set(k2.DEL_C2C_MSG, { head: y2(y2({}, e3), {}, { servcmd: "".concat(a2.NAME.OPEN_IM, ".").concat(k2.DEL_C2C_MSG) }), body: { fromAccount: "", to: "", keyList: void 0 }, keyMap: { req: { keyList: "MsgKeyList" } } }), this._map.set(k2.DEL_GRP_MSG, { head: y2(y2({}, e3), {}, { servcmd: "".concat(a2.NAME.GRP, ".").concat(k2.DEL_GRP_MSG) }), body: { groupID: "", deleter: "", keyList: void 0, topicID: void 0 }, keyMap: { req: { deleter: "Deleter_Account", keyList: "Seqs" } } }), this._map.set(k2.TRANSLATE_TEXT, { head: y2(y2({}, e3), {}, { servcmd: "".concat(a2.NAME.IM_OPEN_TRANSLATE, ".").concat(k2.TRANSLATE_TEXT) }), body: { sourceTextList: void 0, SDKAppID: 0, from: 0, source: "", target: "" }, keyMap: { req: { sourceTextList: "SourceText", SDKAppID: "SdkAppId", from: "FromAccount" }, res: { TargetText: "translatedTextList", RequestId: "requestID", CmdErrorCode: "error", ErrorCode: "code", ErrorInfo: "message" } } }), this._map.set(k2.VOICE_TO_TEXT, { head: y2(y2({}, e3), {}, { servcmd: "".concat(a2.NAME.IM_OPEN_SPEECH, ".").concat(k2.VOICE_TO_TEXT) }), body: { url: "", SDKAppID: 0, format: "", sourceType: 0, language: "" }, keyMap: { req: { url: "BytesUrl", SDKAppID: "Uint32Sdkappid", format: "BytesVoiceFormat", sourceType: "Uint64SourceType", language: "BytesEngServiceType" }, res: { BytesRequestid: "requestID", BytesResult: "result", CmdErrorCode: "error", ErrorCode: "code", ErrorInfo: "message" } } }), this._map.set(k2.MODIFY_GRP_MSG, { head: y2(y2({}, e3), {}, { servcmd: "".concat(a2.NAME.OPEN_IM, ".").concat(k2.MODIFY_GRP_MSG) }), body: { groupID: "", topicID: void 0, sequence: 0, version: 0, elements: void 0, cloudCustomData: void 0 }, keyMap: { req: { sequence: "MsgSeq", version: "MsgVersion", type: "MsgType", content: "MsgContent" } } }), this._map.set(k2.GET_READ_RECEIPT, { head: y2(y2({}, e3), {}, { servcmd: "".concat(a2.NAME.GRP, ".").concat(k2.GET_READ_RECEIPT) }), body: { groupID: "", sequenceList: void 0 }, keyMap: { req: { sequence: "MsgSeq" } } }), this._map.set(k2.SEND_C2C_READ_RECEIPT, { head: y2(y2({}, e3), {}, { servcmd: "".concat(a2.NAME.OPEN_IM, ".").concat(k2.SEND_C2C_READ_RECEIPT) }), body: { peerAccount: "", messageInfoList: void 0 }, keyMap: { req: { peerAccount: "Peer_Account", messageInfoList: "C2CMsgInfo", fromAccount: "From_Account", toAccount: "To_Account", sequence: "MsgSeq", random: "MsgRandom", time: "MsgTime", clientTime: "MsgClientTime" } } }), this._map.set(k2.SEND_READ_RECEIPT, { head: y2(y2({}, e3), {}, { servcmd: "".concat(a2.NAME.GRP, ".").concat(k2.SEND_READ_RECEIPT) }), body: { groupID: "", sequenceList: void 0 }, keyMap: { req: { sequenceList: "MsgSeqList", sequence: "MsgSeq" } } }), this._map.set(k2.GET_READ_RECEIPT_DETAIL, { head: y2(y2({}, e3), {}, { servcmd: "".concat(a2.NAME.GRP, ".").concat(k2.GET_READ_RECEIPT_DETAIL) }), body: { groupID: "", sequence: void 0, flag: 0, cursor: 0, count: 0 }, keyMap: { req: { sequence: "MsgSeq", count: "Num" }, res: { ReadList: "readUserIDList", Read_Account: "userID", UnreadList: "unreadUserIDList", Unread_Account: "userID", IsFinish: "isCompleted" } } }), this._map.set(k2.MODIFY_C2C_MSG_EXT, { head: y2(y2({}, e3), {}, { servcmd: "".concat(a2.NAME.OPEN_IM_MSG_EXT, ".").concat(k2.MODIFY_C2C_MSG_EXT) }), body: { from: void 0, to: void 0, messageKey: void 0, operateType: void 0, extensionList: void 0 } }), this._map.set(k2.GET_C2C_MSG_EXT, { head: y2(y2({}, e3), {}, { servcmd: "".concat(a2.NAME.OPEN_IM_MSG_EXT, ".").concat(k2.GET_C2C_MSG_EXT) }), body: { from: void 0, to: void 0, messageKey: void 0, startSequence: void 0 } }), this._map.set(k2.MODIFY_GRP_MSG_EXT, { head: y2(y2({}, e3), {}, { servcmd: "".concat(a2.NAME.OPEN_IM_MSG_EXT, ".").concat(k2.MODIFY_GRP_MSG_EXT) }), body: { groupID: void 0, topicID: void 0, messageSequence: void 0, operateType: void 0, extensionList: void 0 } }), this._map.set(k2.GET_GRP_MSG_EXT, { head: y2(y2({}, e3), {}, { servcmd: "".concat(a2.NAME.OPEN_IM_MSG_EXT, ".").concat(k2.GET_GRP_MSG_EXT) }), body: { groupID: void 0, topicID: void 0, messageSequence: void 0, startSequence: void 0 } }), this._map.set(k2.MSG_CLOUD_SEARCH, { head: y2(y2({}, e3), {}, { servcmd: "".concat(a2.NAME.MSG_SEARCH, ".").concat(k2.MSG_CLOUD_SEARCH) }), body: { keywordList: void 0, keywordListMatchType: "or", account: void 0, groupID: void 0, count: 100, cursor: void 0, messageTypeList: void 0, senderUserIDList: void 0, startTime: void 0, endTime: void 0 }, keyMap: { req: { keywordListMatchType: "MatchType", account: "PeerAccount", groupID: "GroupID", messageTypeList: "MsgTypeList", senderUserIDList: "SendUserIDList" }, res: { GroupID: "groupID", UserID: "userID", Count: "messageCount", LastMsgTime: "lastMessageTime", ConversationMsgs: "searchResult", IsNeedReadReceipt: "needReadReceipt", IsPeerRead: "readReceiptSentByPeer", MsgSeq: "sequence", ReqMsgSeq: "sequence", IsSystemMsg: "isSystemMessage", ToGroupId: "to", EnumFrom_AccountType: "fromAccountType", EnumTo_AccountType: "toAccountType", GroupCode: "groupCode", MsgContent: "content", ClientSeq: "clientSequence", ToTopicId: "topicID", InvisibleMsgSeq: "invisibleSequenceList", ErrorCode: "code", ErrorInfo: "message" } } }), this._map.set(k2.ADD_C2C_MSG_REACTION, { head: y2(y2({}, e3), {}, { servcmd: "".concat(a2.NAME.OPEN_IM_MSG_EXT, ".").concat(k2.ADD_C2C_MSG_REACTION) }), body: { from: void 0, to: void 0, reactionID: void 0, messageKey: void 0, userIDList: void 0 }, keyMap: { req: { userIDList: "Add_Account" } } }), this._map.set(k2.RM_C2C_MSG_REACTION, { head: y2(y2({}, e3), {}, { servcmd: "".concat(a2.NAME.OPEN_IM_MSG_EXT, ".").concat(k2.RM_C2C_MSG_REACTION) }), body: { from: void 0, to: void 0, reactionID: void 0, messageKey: void 0, userIDList: void 0 }, keyMap: { req: { userIDList: "Del_Account" } } }), this._map.set(k2.GET_C2C_MSG_REACTIONS, { head: y2(y2({}, e3), {}, { servcmd: "".concat(a2.NAME.OPEN_IM_MSG_EXT, ".").concat(k2.GET_C2C_MSG_REACTIONS) }), body: { from: void 0, to: void 0, messageKeyList: void 0, count: void 0 } }), this._map.set(k2.GET_C2C_MSG_REACTION_USER_LIST, { head: y2(y2({}, e3), {}, { servcmd: "".concat(a2.NAME.OPEN_IM_MSG_EXT, ".").concat(k2.GET_C2C_MSG_REACTION_USER_LIST) }), body: { from: void 0, to: void 0, reactionID: void 0, messageKey: void 0, count: void 0 } }), this._map.set(k2.ADD_GRP_MSG_REACTION, { head: y2(y2({}, e3), {}, { servcmd: "".concat(a2.NAME.OPEN_IM_MSG_EXT, ".").concat(k2.ADD_GRP_MSG_REACTION) }), body: { groupID: void 0, topicID: void 0, reactionID: void 0, messageSequence: void 0, userIDList: void 0 }, keyMap: { req: { userIDList: "Add_Account" } } }), this._map.set(k2.RM_GRP_MSG_REACTION, { head: y2(y2({}, e3), {}, { servcmd: "".concat(a2.NAME.OPEN_IM_MSG_EXT, ".").concat(k2.RM_GRP_MSG_REACTION) }), body: { groupID: void 0, topicID: void 0, reactionID: void 0, messageSequence: void 0, userIDList: void 0 }, keyMap: { req: { userIDList: "Del_Account" } } }), this._map.set(k2.GET_GRP_MSG_REACTIONS, { head: y2(y2({}, e3), {}, { servcmd: "".concat(a2.NAME.OPEN_IM_MSG_EXT, ".").concat(k2.GET_GRP_MSG_REACTIONS) }), body: { groupID: void 0, topicID: void 0, messageSequenceList: void 0, count: void 0 }, keyMap: { res: { MsgSeq: "messageSequence" } } }), this._map.set(k2.GET_GRP_MSG_REACTION_USER_LIST, { head: y2(y2({}, e3), {}, { servcmd: "".concat(a2.NAME.OPEN_IM_MSG_EXT, ".").concat(k2.GET_GRP_MSG_REACTION_USER_LIST) }), body: { groupID: void 0, topicID: void 0, reactionID: void 0, messageSequence: void 0, nextSeq: void 0, count: void 0 } }), this._map.set(k2.GET_C2C_PEER_READ_TIME, { head: y2(y2({}, e3), {}, { servcmd: "".concat(a2.NAME.OPEN_IM, ".").concat(k2.GET_C2C_PEER_READ_TIME) }), body: { userIDList: void 0 }, keyMap: { req: { userIDList: "To_Account" }, res: { ReadTime: "peerReadTimeList" } } }), this._map.set(k2.PAGING_GET_CONV_LIST, { head: y2(y2({}, e3), {}, { servcmd: "".concat(a2.NAME.RECENT_CONTACT, ".").concat(k2.PAGING_GET_CONV_LIST) }), body: { fromAccount: void 0, timeStamp: void 0, startIndex: void 0, pinnedTimeStamp: void 0, pinnedStartIndex: void 0, orderType: void 0, messageAssistFlag: 15, assistFlag: 31 }, keyMap: { req: { messageAssistFlag: "MsgAssistFlags", assistFlag: "AssistFlags", pinnedTimeStamp: "TopTimeStamp", pinnedStartIndex: "TopStartIndex" }, res: { SessionItem: "conversations", ToAccount: "groupID", To_Account: "userID", UnreadMsgCount: "unreadCount", MsgGroupReadedSeq: "messageReadSeq", C2cPeerReadTime: "c2cPeerReadTime", LastMsgFlags: "lastMessageFlag", TopFlags: "isPinned", TopTimeStamp: "pinnedTimeStamp", TopStartIndex: "pinnedStartIndex", GroupId: "convGroupID", C2cRemark: "friendRemark", MsgRecvOption: "messageRemindType", GroupIgnoredUnreadSeqCount: "noUnreadCount", GroupNextMsgSeq: "nextMessageSeq" } } }), this._map.set(k2.DEL_CONV, { head: y2(y2({}, e3), {}, { servcmd: "".concat(a2.NAME.RECENT_CONTACT, ".").concat(k2.DEL_CONV) }), body: { fromAccount: "", conversationList: void 0, clearHistoryMessage: void 0 }, keyMap: { req: { toGroupID: "ToGroupid", clearHistoryMessage: "ClearRamble", conversationList: "ContactItem" }, res: { ResultItem: "resultList", ToGroupid: "groupID", ResultCode: "code", ResultInfo: "info" } } }), this._map.set(k2.CLEAR_HISTORY_MSG, { head: y2(y2({}, e3), {}, { servcmd: "".concat(a2.NAME.RECENT_CONTACT, ".").concat(k2.CLEAR_HISTORY_MSG) }), body: { fromAccount: "", toAccount: void 0, type: 1, toGroupID: void 0 }, keyMap: { req: { toGroupID: "ToGroupid" } } }), this._map.set(k2.PIN_CONV, { head: y2(y2({}, e3), {}, { servcmd: "".concat(a2.NAME.RECENT_CONTACT, ".").concat(k2.PIN_CONV) }), body: { fromAccount: "", operationType: 1, itemList: void 0 }, keyMap: { req: { itemList: "RecentContactItem" } } }), this._map.set(k2.DEL_GROUP_AT_TIPS, { head: y2(y2({}, e3), {}, { servcmd: "".concat(a2.NAME.OPEN_IM, ".").concat(k2.DEL_GROUP_AT_TIPS) }), body: { messageListToDelete: void 0 }, keyMap: { req: { messageListToDelete: "DelMsgList", messageSeq: "MsgSeq", messageRandom: "MsgRandom" } } }), this._map.set(k2.SET_CONV_CUSTOM_DATA, { head: y2(y2({}, e3), {}, { servcmd: "".concat(a2.NAME.RECENT_CONTACT, ".").concat(k2.MARK_CONV) }), body: { fromAccount: "", itemList: void 0 }, keyMap: { req: { itemList: "MarkItem", operationType: "OptType", groupID: "ToGroupId" }, res: { ToGroupId: "groupID", OptType: "operationType" } } }), this._map.set(k2.MARK_CONV, { head: y2(y2({}, e3), {}, { servcmd: "".concat(a2.NAME.RECENT_CONTACT, ".").concat(k2.MARK_CONV) }), body: { fromAccount: "", itemList: void 0 }, keyMap: { req: { itemList: "MarkItem", operationType: "OptType", groupID: "ToGroupId" }, res: { ToGroupId: "groupID", OptType: "operationType" } } }), this._map.set(k2.CREATE_CONV_GRP, { head: y2(y2({}, e3), {}, { servcmd: "".concat(a2.NAME.RECENT_CONTACT, ".").concat(k2.CREATE_CONV_GRP) }), body: { fromAccount: "", itemList: void 0 }, keyMap: { req: { itemList: "GroupContactItem", groupID: "ToGroupId" }, res: { GroupId: "convGroupID", ToGroupId: "groupID", OptType: "operationType" } } }), this._map.set(k2.DEL_CONV_GRP, { head: y2(y2({}, e3), {}, { servcmd: "".concat(a2.NAME.RECENT_CONTACT, ".").concat(k2.DEL_CONV_GRP) }), body: { fromAccount: "", groupName: void 0 }, keyMap: { res: { GroupId: "convGroupID" } } }), this._map.set(k2.RENAME_CONV_GRP, { head: y2(y2({}, e3), {}, { servcmd: "".concat(a2.NAME.RECENT_CONTACT, ".").concat(k2.RENAME_CONV_GRP) }), body: { fromAccount: "", updateType: void 0, updateGroup: void 0 }, keyMap: { req: { oldName: "OldGroupName", newName: "NewGroupName", groupID: "ToGroupId", operationType: "ContactOptType", groupName: "OldGroupName", updateItem: "ContactUpdateItem" }, res: { ContactOptType: "operationType", ToGroupId: "groupID", GroupId: "convGroupID" } } }), this._map.set(k2.ADD_CONV_TO_GRP, { head: y2(y2({}, e3), {}, { servcmd: "".concat(a2.NAME.RECENT_CONTACT, ".").concat(k2.RENAME_CONV_GRP) }), body: { fromAccount: "", updateType: void 0, updateGroup: { groupName: void 0, updateGroupType: void 0, updateItem: void 0 } } }), this._map.set(k2.DEL_CONV_FROM_GRP, { head: y2(y2({}, e3), {}, { servcmd: "".concat(a2.NAME.RECENT_CONTACT, ".").concat(k2.RENAME_CONV_GRP) }), body: { fromAccount: "", updateType: void 0, updateGroup: void 0 } }), this._map.set(k2.GET_CONV_GRP_LIST, { head: y2(y2({}, e3), {}, { servcmd: "".concat(a2.NAME.RECENT_CONTACT, ".").concat(k2.GET_CONV_GRP_LIST) }), body: { fromAccount: "", startIndex: void 0 }, keyMap: { res: { GroupId: "convGroupID", ToGroupId: "groupID", OptType: "operationType", CustomMark: "customData", ContactGroupId: "convGroupIDList" } } }), this._map.set(k2.SEARCH_CONV_GRP_MARK, { head: y2(y2({}, e3), {}, { servcmd: "".concat(a2.NAME.RECENT_CONTACT, ".").concat(k2.SEARCH_CONV_GRP_MARK) }), body: { fromAccount: "", contactItem: void 0 }, keyMap: { req: { groupID: "ToGroupId" }, res: { GroupId: "convGroupID", ToGroupId: "groupID", OptType: "operationType", CustomMark: "customData", ContactGroupId: "convGroupIDList", ContactResultItem: "contactItem" } } }), this._map.set(k2.GET_USER_PROFILE, { head: y2(y2({}, e3), {}, { servcmd: "".concat(a2.NAME.PROFILE, ".").concat(k2.GET_USER_PROFILE) }), body: { fromAccount: "", userItem: [] }, keyMap: { req: { toAccount: "To_Account", standardSequence: "StandardSequence", customSequence: "CustomSequence" } } }), this._map.set(k2.UPDATE_MY_PROFILE, { head: y2(y2({}, e3), {}, { servcmd: "".concat(a2.NAME.PROFILE, ".").concat(k2.UPDATE_MY_PROFILE) }), body: { fromAccount: "", profileItem: [{ tag: g2.NICK, value: "" }, { tag: g2.GENDER, value: "" }, { tag: g2.ALLOWTYPE, value: "" }, { tag: g2.AVATAR, value: "" }] }, keyMap: { req: { toAccount: "To_Account", standardSequence: "StandardSequence", customSequence: "CustomSequence" } } }), this._map.set(k2.GET_BL, { head: y2(y2({}, e3), {}, { servcmd: "".concat(a2.NAME.FD, ".").concat(k2.GET_BL) }), body: { fromAccount: "", startIndex: 0, maxLimited: 30, lastSequence: 0 }, keyMap: { res: { CurruentSequence: "currentSequence" } } }), this._map.set(k2.ADD_TO_BL, { head: y2(y2({}, e3), {}, { servcmd: "".concat(a2.NAME.FD, ".").concat(k2.ADD_TO_BL) }), body: { fromAccount: "", toAccount: [] } }), this._map.set(k2.RM_FROM_BL, { head: y2(y2({}, e3), {}, { servcmd: "".concat(a2.NAME.FD, ".").concat(k2.RM_FROM_BL) }), body: { fromAccount: "", toAccount: [] } }), this._map.set(k2.SET_SELF_STATUS, { head: y2(y2({}, e3), {}, { servcmd: "".concat(a2.NAME.IM_OPEN_STATUS, ".").concat(k2.SET_SELF_STATUS) }), body: { customStatus: "" } }), this._map.set(k2.GET_USER_STATUS, { head: y2(y2({}, e3), {}, { servcmd: "".concat(a2.NAME.IM_OPEN_STATUS, ".").concat(k2.GET_USER_STATUS) }), body: { userIDList: void 0 }, keyMap: { res: { UserStatusList: "successUserList", ErrorList: "failureUserList", To_Account: "userID", Invalid_Account: "invalidUserID", Status: "statusType" } } }), this._map.set(k2.SUB_USER_STATUS, { head: y2(y2({}, e3), {}, { servcmd: "".concat(a2.NAME.IM_OPEN_STATUS, ".").concat(k2.SUB_USER_STATUS) }), body: { userIDList: void 0 }, keyMap: { res: { ErrorList: "failureUserList", To_Account: "userID", Invalid_Account: "invalidUserID" } } }), this._map.set(k2.UNSUB_USER_STATUS, { head: y2(y2({}, e3), {}, { servcmd: "".concat(a2.NAME.IM_OPEN_STATUS, ".").concat(k2.UNSUB_USER_STATUS) }), body: { userIDList: void 0, unsubscribeAll: void 0 }, keyMap: { res: { ErrorList: "failureUserList", To_Account: "userID", Invalid_Account: "invalidUserID" } } }), this._map.set(k2.GET_FD_LIST, { head: y2(y2({}, e3), {}, { servcmd: "".concat(a2.NAME.FD, ".").concat(k2.GET_FD_LIST) }), body: { fromAccount: "", startIndex: 0, standardSequence: 0, customSequence: 0 }, keyMap: { res: { FriendNum: "friendCount", UserDataItem: "resultList", ValueItem: "tagValueList" } } }), this._map.set(k2.ADD_FD, { head: y2(y2({}, e3), {}, { servcmd: "".concat(a2.NAME.FD, ".").concat(k2.ADD_FD) }), body: { fromAccount: "", addFriendItem: [], type: "" }, keyMap: { req: { source: "AddSource", wording: "AddWording", type: "AddType" }, res: { ResultItem: "resultList" } } }), this._map.set(k2.UPDATE_FD, { head: y2(y2({}, e3), {}, { servcmd: "".concat(a2.NAME.FD, ".").concat(k2.UPDATE_FD) }), body: { fromAccount: "", updateItem: void 0 }, keyMap: { req: { snsItem: "SnsItem" }, res: { ResultItem: "resultList" } } }), this._map.set(k2.DEL_FD, { head: y2(y2({}, e3), {}, { servcmd: "".concat(a2.NAME.FD, ".").concat(k2.DEL_FD) }), body: { fromAccount: "", userIDList: [], type: "" }, keyMap: { req: { type: "DeleteType" }, res: { ResultItem: "resultList" } } }), this._map.set(k2.GET_FD_PROFILE, { head: y2(y2({}, e3), {}, { servcmd: "".concat(a2.NAME.FD, ".").concat(k2.GET_FD_PROFILE) }), body: { fromAccount: "", userIDList: void 0 }, keyMap: { res: { InfoItem: "resultList", SnsProfileItem: "tagValueList" } } }), this._map.set(k2.CHECK_FD, { head: y2(y2({}, e3), {}, { servcmd: "".concat(a2.NAME.FD, ".").concat(k2.CHECK_FD) }), body: { fromAccount: "", userIDList: [], type: "" }, keyMap: { req: { type: "CheckType" }, res: { InfoItem: "resultList" } } }), this._map.set(k2.GET_FD_APPLICATION_LIST, { head: y2(y2({}, e3), {}, { servcmd: "".concat(a2.NAME.FD, ".").concat(k2.GET_FD_APPLICATION_LIST) }), body: { fromAccount: "", applicationType: "", startTime: 0, maxLimited: 0, lastSequence: 0 }, keyMap: { res: { PendencyItem: "resultList", AddSource: "source", AddTime: "time", AddWording: "wording", Image: "avatar", UnreadPendencyCount: "unreadCount", To_Account: "userID", PendencyType: "type" } } }), this._map.set(k2.RESPOND_FD_APPLICATION, { head: y2(y2({}, e3), {}, { servcmd: "".concat(a2.NAME.FD, ".").concat(k2.RESPOND_FD_APPLICATION) }), body: { fromAccount: "", responseFriendItem: [] }, keyMap: { req: { tag: "TagName", action: "ResponseAction" }, res: { ResultItem: "resultList" } } }), this._map.set(k2.DEL_FD_APPLICATION, { head: y2(y2({}, e3), {}, { servcmd: "".concat(a2.NAME.FD, ".").concat(k2.DEL_FD_APPLICATION) }), body: { fromAccount: "", type: "", userIDList: void 0 }, keyMap: { req: { type: "PendencyType", userIDList: "To_Account" }, res: { ResultItem: "resultList" } } }), this._map.set(k2.REPORT_FD_APPLICATION, { head: y2(y2({}, e3), {}, { servcmd: "".concat(a2.NAME.FD, ".").concat(k2.REPORT_FD_APPLICATION) }), body: { fromAccount: "", latestTimeStamp: "" }, keyMap: { req: { latestTimeStamp: "LatestPendencyTimeStamp" } } }), this._map.set(k2.CREATE_FD_GRP, { head: y2(y2({}, e3), {}, { servcmd: "".concat(a2.NAME.FD, ".").concat(k2.CREATE_FD_GRP) }), body: { fromAccount: "", groupName: void 0, userIDList: void 0 }, keyMap: { req: { groupName: "GroupName", userIDList: "To_Account" }, res: { ResultItem: "resultList" } } }), this._map.set(k2.DEL_FD_GRP, { head: y2(y2({}, e3), {}, { servcmd: "".concat(a2.NAME.FD, ".").concat(k2.DEL_FD_GRP) }), body: { fromAccount: "", nameList: void 0 }, keyMap: { req: { nameList: "GroupName" } } }), this._map.set(k2.GET_FD_GRP_LIST, { head: y2(y2({}, e3), {}, { servcmd: "".concat(a2.NAME.FD, ".").concat(k2.GET_FD_GRP_LIST) }), body: { fromAccount: "", lastSequence: 0, needFriend: "Need_Friend_Type_Yes" }, keyMap: { res: { ResultItem: "resultList", GroupName: "name", FriendNumber: "friendCount", To_Account: "userIDList" } } }), this._map.set(k2.UPDATE_FD_GRP, { head: y2(y2({}, e3), {}, { servcmd: "".concat(a2.NAME.FD, ".").concat(k2.UPDATE_FD_GRP) }), body: { fromAccount: "", oldName: "", newName: void 0, updateGroupItem: void 0 }, keyMap: { req: { oldName: "GroupOldName", newName: "GroupNewName" }, res: { UpdateType: "type", ResultItem: "resultList" } } }), this._map.set(k2.GET_GRP_LIST, { head: y2(y2({}, e3), {}, { servcmd: "".concat(a2.NAME.GRP, ".").concat(k2.GET_GRP_LIST) }), body: { memberAccount: "", limit: void 0, offset: void 0, groupType: void 0, responseFilter: { groupBaseInfoFilter: void 0, selfInfoFilter: void 0 }, isSupportTopic: 0, needAppDefineData: 1 }, keyMap: { req: { memberAccount: "Member_Account" }, res: { GroupIdList: "groups", MsgSeq: "readedSequence", LastRecallTime: "_lastRevokedTime", AppDefinedData: "groupCustomField" } } }), this._map.set(k2.GET_GRP_PROFILE, { head: y2(y2({}, e3), {}, { servcmd: "".concat(a2.NAME.GRP, ".").concat(k2.GET_GRP_PROFILE) }), body: { groupIDList: void 0, responseFilter: { groupBaseInfoFilter: void 0, groupCustomFieldFilter: void 0, memberInfoFilter: void 0, memberCustomFieldFilter: void 0 } }, keyMap: { req: { groupIDList: "GroupIdList", groupCustomField: "AppDefinedData", memberCustomField: "AppMemberDefinedData", groupCustomFieldFilter: "AppDefinedDataFilter_Group", memberCustomFieldFilter: "AppDefinedDataFilter_GroupMember" }, res: { GroupIdList: "groups", AppDefinedData: "groupCustomField", AppMemberDefinedData: "memberCustomField", AppDefinedDataFilter_Group: "groupCustomFieldFilter", AppDefinedDataFilter_GroupMember: "memberCustomFieldFilter", InfoSeq: "infoSequence", MemberList: "members", GroupInfo: "groups", ShutUpUntil: "muteUntil", ShutUpAllMember: "muteAllMembers" } } }), this._map.set(k2.CREATE_GRP, { head: y2(y2({}, e3), {}, { servcmd: "".concat(a2.NAME.GRP, ".").concat(k2.CREATE_GRP) }), body: { type: void 0, name: void 0, groupID: void 0, ownerID: void 0, introduction: void 0, notification: void 0, maxMemberNum: void 0, joinOption: void 0, memberList: void 0, groupCustomField: void 0, memberCustomField: void 0, webPushFlag: 1, avatar: "", isSupportTopic: void 0, inviteOption: void 0 }, keyMap: { req: { ownerID: "Owner_Account", userID: "Member_Account", avatar: "FaceUrl", maxMemberNum: "MaxMemberCount", joinOption: "ApplyJoinOption", groupCustomField: "AppDefinedData", memberCustomField: "AppMemberDefinedData", inviteOption: "InviteJoinOption" }, res: { HugeGroupFlag: "avChatRoomFlag", OverJoinedGroupLimit_Account: "overLimitUserIDList" } } }), this._map.set(k2.DISMISS_GRP, { head: y2(y2({}, e3), {}, { servcmd: "".concat(a2.NAME.GRP, ".").concat(k2.DISMISS_GRP) }), body: { groupID: void 0 } }), this._map.set(k2.UPDATE_GRP_PROFILE, { head: y2(y2({}, e3), {}, { servcmd: "".concat(a2.NAME.GRP, ".").concat(k2.UPDATE_GRP_PROFILE) }), body: { groupID: void 0, name: void 0, introduction: void 0, notification: void 0, avatar: void 0, joinOption: void 0, groupCustomField: void 0, muteAllMembers: void 0, inviteOption: void 0 }, keyMap: { req: { groupCustomField: "AppDefinedData", muteAllMembers: "ShutUpAllMember", joinOption: "ApplyJoinOption", avatar: "FaceUrl", inviteOption: "InviteJoinOption" }, res: { AppDefinedData: "groupCustomField", ShutUpAllMember: "muteAllMembers" } } }), this._map.set(k2.APPLY_JOIN_GRP, { head: y2(y2({}, e3), {}, { servcmd: "".concat(a2.NAME.GRP, ".").concat(k2.APPLY_JOIN_GRP) }), body: { groupID: void 0, applyMessage: void 0, userDefinedField: void 0, webPushFlag: 1, historyMessageFlag: void 0 }, keyMap: { req: { applyMessage: "ApplyMsg", historyMessageFlag: "HugeGroupHistoryMsgFlag" }, res: { HugeGroupFlag: "avChatRoomFlag", AVChatRoomKey: "avChatRoomKey", RspMsgList: "messageList", ToGroupId: "to" } } }), this._map.set(k2.APPLY_JOIN_GRP_NOAUTH, (e3.a2, e3.tinyid, { head: y2(y2({}, K2(e3, ps)), {}, { servcmd: "".concat(a2.NAME.BIG_GRP_NO_AUTH, ".").concat(k2.APPLY_JOIN_GRP) }), body: { groupID: void 0, applyMessage: void 0, userDefinedField: void 0, webPushFlag: 1 }, keyMap: { req: { applyMessage: "ApplyMsg" }, res: { HugeGroupFlag: "avChatRoomFlag" } } })), this._map.set(k2.QUIT_GRP, { head: y2(y2({}, e3), {}, { servcmd: "".concat(a2.NAME.GRP, ".").concat(k2.QUIT_GRP) }), body: { groupID: void 0 } }), this._map.set(k2.SEARCH_GRP, { head: y2(y2({}, e3), {}, { servcmd: "".concat(a2.NAME.GRP, ".").concat(k2.SEARCH_GRP) }), body: { groupIDList: void 0, responseFilter: { groupBasePublicInfoFilter: ["Type", "Name", "Introduction", "Notification", "FaceUrl", "CreateTime", "Owner_Account", "LastInfoTime", "LastMsgTime", "NextMsgSeq", "MemberNum", "MaxMemberNum", "ApplyJoinOption", "InviteJoinOption"] } } }), this._map.set(k2.CHANGE_GRP_OWNER, { head: y2(y2({}, e3), {}, { servcmd: "".concat(a2.NAME.GRP, ".").concat(k2.CHANGE_GRP_OWNER) }), body: { groupID: void 0, newOwnerID: void 0 }, keyMap: { req: { newOwnerID: "NewOwner_Account" } } }), this._map.set(k2.HANDLE_GRP_APPLICATION, { head: y2(y2({}, e3), {}, { servcmd: "".concat(a2.NAME.GRP, ".").concat(k2.HANDLE_GRP_APPLICATION) }), body: { groupID: void 0, applicant: void 0, handleAction: void 0, handleMessage: void 0, authentication: void 0, messageKey: void 0, userDefinedField: void 0 }, keyMap: { req: { applicant: "Applicant_Account", handleAction: "HandleMsg", handleMessage: "ApprovalMsg", messageKey: "MsgKey" } } }), this._map.set(k2.HANDLE_INVITE_JOIN_GRP, { head: y2(y2({}, e3), {}, { servcmd: "".concat(a2.NAME.GRP, ".").concat(k2.HANDLE_INVITE_JOIN_GRP) }), body: { groupID: void 0, applicant: void 0, invitee: void 0, handleAction: void 0, handleMessage: void 0, authentication: void 0, userDefinedField: void 0 }, keyMap: { req: { applicant: "Applicant_Account", invitee: "Invited_Account", handleAction: "HandleMsg", handleMessage: "ApprovalMsg" } } }), this._map.set(k2.HANDLE_GRP_INVITATION, { head: y2(y2({}, e3), {}, { servcmd: "".concat(a2.NAME.GRP, ".").concat(k2.HANDLE_GRP_INVITATION) }), body: { groupID: void 0, inviter: void 0, handleAction: void 0, handleMessage: void 0, authentication: void 0, messageKey: void 0, userDefinedField: void 0 }, keyMap: { req: { inviter: "Inviter_Account", handleAction: "HandleMsg", handleMessage: "ApprovalMsg", messageKey: "MsgKey" } } }), this._map.set(k2.GET_GRP_PENDENCY, { head: y2(y2({}, e3), {}, { servcmd: "".concat(a2.NAME.GRP, ".").concat(k2.GET_GRP_PENDENCY) }), body: { startTime: void 0, limit: void 0, handleAccount: void 0 }, keyMap: { req: { handleAccount: "Handle_Account" }, res: { To_Account: "userID", ApplyInviteMsg: "note" } } }), this._map.set(k2.DEL_GRP_SYSTEM_NOTICE, { head: y2(y2({}, e3), {}, { servcmd: "".concat(a2.NAME.OPEN_IM, ".").concat(k2.DEL_GRP_SYSTEM_NOTICE) }), body: { messageListToDelete: void 0 }, keyMap: { req: { messageListToDelete: "DelMsgList", messageSeq: "MsgSeq", messageRandom: "MsgRandom" } } }), this._map.set(k2.AV_POLLING, { head: y2(y2({}, e3), {}, { servcmd: "".concat(a2.NAME.BIG_GRP_POLLING, ".").concat(k2.AV_POLLING) }), body: { USP: 1, startSeq: 1, startBroadcastSeq: void 0, holdTime: 90, key: void 0, simplifiedMessage: void 0 }, keyMap: { req: { USP: "USP" }, res: { ToGroupId: "groupID", RspBroadcastMsgList: "broadcastMessageList", IsSystemMsg: "isSystemMessage" } } }), this._map.set(k2.AV_NOAUTH_POLLING, (e3.a2, e3.tinyid, { head: y2(y2({}, K2(e3, _s2)), {}, { servcmd: "".concat(a2.NAME.BIG_GRP_POLLING_NO_AUTH, ".").concat(k2.AV_POLLING) }), body: { USP: 1, startSeq: 1, holdTime: 90, key: void 0, simplifiedMessage: void 0 }, keyMap: { req: { USP: "USP" }, res: { ToGroupId: "groupID", RspBroadcastMsgList: "broadcastMessageList", IsSystemMsg: "isSystemMessage" } } })), this._map.set(k2.GET_ONLINE_MBR_NUM, { head: y2(y2({}, e3), {}, { servcmd: "".concat(a2.NAME.GRP, ".").concat(k2.GET_ONLINE_MBR_NUM) }), body: { groupID: void 0 }, keyMap: { res: { OnlineMemberNum: "memberCount" } } }), this._map.set(k2.SET_GRP_ATTR, { head: y2(y2({}, e3), {}, { servcmd: "".concat(a2.NAME.GRP, ".").concat(k2.SET_GRP_ATTR) }), body: { groupID: void 0, groupAttributeList: void 0, mainSequence: void 0, avChatRoomKey: void 0, attributeControl: ["RaceConflict"] }, keyMap: { req: { key: "key", value: "value" } } }), this._map.set(k2.MODIFY_GRP_ATTR, { head: y2(y2({}, e3), {}, { servcmd: "".concat(a2.NAME.GRP, ".").concat(k2.MODIFY_GRP_ATTR) }), body: { groupID: void 0, groupAttributeList: void 0, mainSequence: void 0, avChatRoomKey: void 0, attributeControl: ["RaceConflict"] }, keyMap: { req: { key: "key", value: "value" } } }), this._map.set(k2.DEL_GRP_ATTR, { head: y2(y2({}, e3), {}, { servcmd: "".concat(a2.NAME.GRP, ".").concat(k2.DEL_GRP_ATTR) }), body: { groupID: void 0, groupAttributeList: void 0, mainSequence: void 0, avChatRoomKey: void 0, attributeControl: ["RaceConflict"] }, keyMap: { req: { key: "key" } } }), this._map.set(k2.CLEAR_GRP_ATTR, { head: y2(y2({}, e3), {}, { servcmd: "".concat(a2.NAME.GRP, ".").concat(k2.CLEAR_GRP_ATTR) }), body: { groupID: void 0, mainSequence: void 0, avChatRoomKey: void 0, attributeControl: ["RaceConflict"] } }), this._map.set(k2.GET_GRP_ATTR, { head: y2(y2({}, e3), {}, { servcmd: "".concat(a2.NAME.GRP_ATTR, ".").concat(k2.GET_GRP_ATTR) }), body: { groupID: void 0, avChatRoomKey: void 0, groupType: 1 }, keyMap: { req: { avChatRoomKey: "Key", groupType: "GroupType" } } }), this._map.set(k2.GET_GRP_NOTIFY, { head: y2(y2({}, e3), {}, { servcmd: "".concat(a2.NAME.GRP, ".").concat(k2.GET_GRP_NOTIFY) }), body: { notifyReqList: [] }, keyMap: { req: { notifyReqList: "NotifyReqList" }, res: { NextMsgTime: "nextRevokedTime", NotifyMsgList: "notifyList", NotifyRspList: "notifyRspList" } } }), this._map.set(k2.UPDATE_GRP_COUNTER, { head: y2(y2({}, e3), {}, { servcmd: "".concat(a2.NAME.GRP, ".").concat(k2.UPDATE_GRP_COUNTER) }), body: { groupID: void 0, counterList: void 0, avChatRoomKey: void 0, mode: void 0 }, keyMap: { req: { counterList: "GroupCounter" } } }), this._map.set(k2.GET_GRP_COUNTER, { head: y2(y2({}, e3), {}, { servcmd: "".concat(a2.NAME.GRP, ".").concat(k2.GET_GRP_COUNTER) }), body: { groupID: void 0, keyList: [], avChatRoomKey: void 0 }, keyMap: { req: { keyList: "GroupCounterKeys" } } }), this._map.set(k2.CREATE_TOPIC, { head: y2(y2({}, e3), {}, { servcmd: "".concat(a2.NAME.GRP_COMMUNITY, ".").concat(k2.CREATE_TOPIC) }), body: { groupID: void 0, topicName: void 0, avatar: void 0, customData: void 0, topicID: void 0, notification: void 0, introduction: void 0 }, keyMap: { req: { avatar: "FaceUrl" } } }), this._map.set(k2.DEL_TOPIC, { head: y2(y2({}, e3), {}, { servcmd: "".concat(a2.NAME.GRP_COMMUNITY, ".").concat(k2.DEL_TOPIC) }), body: { groupID: void 0, topicIDList: void 0 }, keyMap: { req: { topicIDList: "TopicIdList" }, res: { DestroyResultItem: "resultList" } } }), this._map.set(k2.UPDATE_TOPIC_PROFILE, { head: y2(y2({}, e3), {}, { servcmd: "".concat(a2.NAME.GRP_COMMUNITY, ".").concat(k2.UPDATE_TOPIC_PROFILE) }), body: { groupID: void 0, topicID: void 0, avatar: void 0, customData: void 0, notification: void 0, introduction: void 0, muteAllMembers: void 0, topicName: void 0 }, keyMap: { req: { avatar: "FaceUrl", muteAllMembers: "ShutUpAllMember" } } }), this._map.set(k2.GET_TOPIC_LIST, { head: y2(y2({}, e3), {}, { servcmd: "".concat(a2.NAME.GRP_COMMUNITY, ".").concat(k2.GET_TOPIC_LIST) }), body: { groupID: void 0, topicIDList: void 0, MemberInfoFilter: ["NoUnreadSeqList"] }, keyMap: { req: { topicIDList: "TopicIdList" }, res: { TopicAndSelfInfo: "topicInfoList", TopicInfo: "topic", GroupID: "groupID", ShutUpTime: "muteTime", ShutUpAllFlag: "muteAllMembers", LastMsgTime: "lastMessageTime", MsgSeq: "readedSequence", LastMsgSeq: "sequence" } } }), this._map.set(k2.GET_GRP_MBR_LIST, { head: y2(y2({}, e3), {}, { servcmd: "".concat(a2.NAME.GRP, ".").concat(k2.GET_GRP_MBR_LIST) }), body: { groupID: void 0, limit: 0, offset: void 0, next: void 0, memberRoleFilter: void 0, memberInfoFilter: void 0, memberCustomFieldFilter: void 0 }, keyMap: { req: { memberCustomFieldFilter: "AppDefinedDataFilter_GroupMember" }, res: { AppMemberDefinedData: "memberCustomField", AppDefinedDataFilter_GroupMember: "memberCustomFieldFilter", MemberList: "members", ShutUpUntil: "muteUntil" } } }), this._map.set(k2.GET_AV_MBR_LIST, { head: y2(y2({}, e3), {}, { servcmd: "".concat(a2.NAME.GRP_AV, ".").concat(k2.GET_AV_MBR_LIST) }), body: { groupID: void 0, offset: void 0, filter: void 0 }, keyMap: { req: { offset: "Timestamp", filter: "Mark" }, res: { NextTimestamp: "offset" } } }), this._map.set(k2.GET_GRP_MBR_PROFILE, { head: y2(y2({}, e3), {}, { servcmd: "".concat(a2.NAME.GRP, ".").concat(k2.GET_GRP_MBR_PROFILE) }), body: { groupID: void 0, userIDList: void 0, memberInfoFilter: void 0, memberCustomFieldFilter: void 0 }, keyMap: { req: { userIDList: "Member_List_Account", memberCustomFieldFilter: "AppDefinedDataFilter_GroupMember" }, res: { MemberList: "members", ShutUpUntil: "muteUntil", AppDefinedDataFilter_GroupMember: "memberCustomFieldFilter", AppMemberDefinedData: "memberCustomField" } } }), this._map.set(k2.ADD_GRP_MBR, { head: y2(y2({}, e3), {}, { servcmd: "".concat(a2.NAME.GRP, ".").concat(k2.ADD_GRP_MBR) }), body: { groupID: void 0, silence: void 0, userIDList: void 0 }, keyMap: { req: { userID: "Member_Account", userIDList: "MemberList" }, res: { MemberList: "members" } } }), this._map.set(k2.DEL_GRP_MBR, { head: y2(y2({}, e3), {}, { servcmd: "".concat(a2.NAME.GRP, ".").concat(k2.DEL_GRP_MBR) }), body: { groupID: void 0, userIDList: void 0, reason: void 0 }, keyMap: { req: { userIDList: "MemberToDel_Account" } } }), this._map.set(k2.BAN_AV_MBR, { head: y2(y2({}, e3), {}, { servcmd: "".concat(a2.NAME.GRP, ".").concat(k2.BAN_AV_MBR) }), body: { groupID: void 0, userIDList: void 0, duration: void 0, reason: "" }, keyMap: { req: { userIDList: "Members_Account", duration: "Duration", reason: "Description" } } }), this._map.set(k2.MODIFY_GRP_MBR_INFO, { head: y2(y2({}, e3), {}, { servcmd: "".concat(a2.NAME.GRP, ".").concat(k2.MODIFY_GRP_MBR_INFO) }), body: { groupID: void 0, topicID: void 0, userID: void 0, messageRemindType: void 0, nameCard: void 0, role: void 0, memberCustomField: void 0, muteTime: void 0 }, keyMap: { req: { userID: "Member_Account", memberCustomField: "AppMemberDefinedData", muteTime: "ShutUpTime", messageRemindType: "MsgFlag" } } }), this._map.set(k2.MARK_AV_MBR_INFO, { head: y2(y2({}, e3), {}, { servcmd: "".concat(a2.NAME.GRP_AV, ".").concat(k2.MARK_AV_MBR_INFO) }), body: { groupID: void 0, operationType: 1, memberList: [] }, keyMap: { req: { operationType: "CommandType", memberList: "MemberList", markType: "Marks", userID: "Member_Account" }, res: { CommandType: "operationType", Marks: "markType", Member_Account: "userID" } } }), this._map.set(k2.SSO_STAT, { head: y2(y2({}, n3), {}, { servcmd: "".concat(a2.NAME.IM_OPEN_STAT, ".").concat(k2.SSO_STAT) }), body: { header: {}, event: [], quality: [] }, keyMap: { req: { SDKType: "sdk_type", SDKVersion: "sdk_version", deviceType: "device_type", platform: "platform", instanceID: "instance_id", traceID: "trace_id", SDKAppID: "sdk_app_id", userID: "user_id", tinyID: "tiny_id", extension: "extension", timestamp: "timestamp", networkType: "network_type", eventType: "event_type", code: "error_code", message: "error_message", moreMessage: "more_message", duplicate: "duplicate", costTime: "cost_time", level: "level", qualityType: "quality_type", reportIndex: "report_index", wholePeriod: "whole_period", totalCount: "total_count", rttCount: "success_count_business", successRateOfRequest: "percent_business", countLessThan1Second: "success_count_business", percentOfCountLessThan1Second: "percent_business", countLessThan3Second: "success_count_platform", percentOfCountLessThan3Second: "percent_platform", successCountOfBusiness: "success_count_business", successRateOfBusiness: "percent_business", successCountOfPlatform: "success_count_platform", successRateOfPlatform: "percent_platform", successCountOfMessageReceived: "success_count_business", successRateOfMessageReceived: "percent_business", avgRTT: "average_value", avgDelay: "average_value", avgValue: "average_value", uiPlatform: "ui_platform" } } }), this._map.set(k2.PING, { head: y2(y2({}, e3), {}, { servcmd: "".concat(a2.NAME.HEARTBEAT, ".").concat(k2.PING) }), body: {} }), this._map.set(k2.MSG_PUSH, { head: y2(y2({}, e3), {}, { servcmd: "".concat(a2.NAME.IM_OPEN_PUSH, ".").concat(k2.MSG_PUSH) }), body: {}, keyMap: { res: { C2cMsgArray: "C2CMessageArray", GroupMsgArray: "groupMessageArray", GroupTips: "groupTips", C2cNotifyMsgArray: "C2CNotifyMessageArray", C2cMsgInfo: "C2CReadReceiptArray", ClientSeq: "clientSequence", MsgPriority: "priority", NoticeSeq: "noticeSequence", MsgContent: "content", MsgType: "type", MsgBody: "elements", ToGroupId: "to", Desc: "description", Ext: "extension", IsSyncMsg: "isSyncMessage", Flag: "needSync", NeedAck: "needAck", PendencyAdd_Account: "userID", ProfileImNick: "nick", PendencyType: "applicationType", C2CReadAllMsg: "readAllC2CMessage", IsNeedReadReceipt: "needReadReceipt", Status: "statusType" } } }), this._map.set(k2.MULTI_MSG_PUSH, { head: y2(y2({}, e3), {}, { servcmd: "".concat(a2.NAME.IM_OPEN_PUSH, ".").concat(k2.MULTI_MSG_PUSH) }), body: {}, keyMap: { res: { GroupMsgArray: "groupMessageArray", GroupTips: "groupTips", ClientSeq: "clientSequence", MsgPriority: "priority", NoticeSeq: "noticeSequence", MsgContent: "content", MsgType: "type", MsgBody: "elements", ToGroupId: "to", Desc: "description", Ext: "extension", IsSyncMsg: "isSyncMessage", Flag: "needSync", NeedAck: "needAck", PendencyType: "applicationType" } } }), this._map.set(k2.MSG_PUSH_ACK, { head: y2(y2({}, e3), {}, { servcmd: "".concat(a2.NAME.OPEN_IM, ".").concat(k2.MSG_PUSH_ACK) }), body: { sessionData: void 0 }, keyMap: { req: { sessionData: "SessionData" } } }), this._map.set(k2.STATUS_FORCE_OFFLINE, { head: y2(y2({}, e3), {}, { servcmd: "".concat(a2.NAME.IM_OPEN_STATUS, ".").concat(k2.STATUS_FORCE_OFFLINE) }), body: {}, keyMap: { res: { C2cNotifyMsgArray: "C2CNotifyMessageArray", NoticeSeq: "noticeSequence", KickoutMsgNotify: "kickoutMsgNotify", NewInstInfo: "newInstanceInfo" } } }), this._map.set(k2.DOWNLOAD_MERGER_MSG, { head: y2(y2({}, e3), {}, { servcmd: "".concat(a2.NAME.IM_LONG_MSG, ".").concat(k2.DOWNLOAD_MERGER_MSG) }), body: { downloadKey: "" }, keyMap: { res: { Data: "data", Desc: "description", Ext: "extension", Download_Flag: "downloadFlag", ThumbUUID: "thumbUUID", VideoUUID: "videoUUID" } } }), this._map.set(k2.UPLOAD_MERGER_MSG, { head: y2(y2({}, e3), {}, { servcmd: "".concat(a2.NAME.IM_LONG_MSG, ".").concat(k2.UPLOAD_MERGER_MSG) }), body: { messageList: [] }, keyMap: { req: { fromAccount: "From_Account", toAccount: "To_Account", msgTimeStamp: "MsgTimeStamp", msgSeq: "MsgSeq", msgRandom: "MsgRandom", msgBody: "MsgBody", type: "MsgType", content: "MsgContent", data: "Data", description: "Desc", extension: "Ext", sizeType: "Type", uuid: "UUID", url: "", imageUrl: "URL", fileUrl: "Url", remoteAudioUrl: "Url", remoteVideoUrl: "VideoUrl", thumbUUID: "ThumbUUID", videoUUID: "VideoUUID", videoUrl: "", downloadFlag: "Download_Flag", from: "From_Account", time: "MsgTimeStamp", messageRandom: "MsgRandom", messageSequence: "MsgSeq", elements: "MsgBody", clientSequence: "ClientSeq", payload: "MsgContent", messageList: "MsgList", messageNumber: "MsgNum", abstractList: "AbstractList", messageBody: "MsgBody" } } }), this._map.set(k2.FOLLOW, { head: y2(y2({}, e3), {}, { servcmd: "".concat(a2.NAME.FOLLOW, ".").concat(k2.FOLLOW) }), body: { fromAccount: "", userIDList: [] }, keyMap: { req: { userIDList: "FollowItem" }, res: { ResultItem: "resultList", To_Account: "userID" } } }), this._map.set(k2.UNFOLLOW, { head: y2(y2({}, e3), {}, { servcmd: "".concat(a2.NAME.FOLLOW, ".").concat(k2.UNFOLLOW) }), body: { fromAccount: "", userIDList: [] }, keyMap: { req: { userIDList: "To_Account" }, res: { ResultItem: "resultList", To_Account: "userID" } } }), this._map.set(k2.GET_FOLLOW_INFO, { head: y2(y2({}, e3), {}, { servcmd: "".concat(a2.NAME.FOLLOW, ".").concat(k2.GET_FOLLOW_INFO) }), body: { fromAccount: "", userIDList: [] }, keyMap: { req: { userIDList: "To_Account" }, res: { FollowInfo: "followInfoList", To_Account: "userID", FollowerCount: "followersCount", FollowingCount: "followingCount", MutualFollowingCount: "mutualFollowersCount" } } }), this._map.set(k2.GET_FOLLOW, { head: y2(y2({}, e3), {}, { servcmd: "".concat(a2.NAME.FOLLOW, ".").concat(k2.GET_FOLLOW) }), body: { fromAccount: "", type: 1, nextCursor: "", count: 500 }, keyMap: { req: { type: "FollowType", nextCursor: "StartCursor", count: "WantNum" }, res: { FollowItem: "resultList", To_Account: "userID", ProfileItem: "profileList" } } }), this._map.set(k2.CHECK_FOLLOW_TYPE, { head: y2(y2({}, e3), {}, { servcmd: "".concat(a2.NAME.FOLLOW, ".").concat(k2.CHECK_FOLLOW_TYPE) }), body: { fromAccount: "", userIDList: [] }, keyMap: { req: { userIDList: "To_Account" }, res: { ResultItem: "resultList", To_Account: "userID" } } }), this._map.set(k2.SET_TOKEN, { head: y2(y2({}, e3), {}, { servcmd: "".concat(a2.NAME.IM_OPEN_STATUS, ".").concat(k2.SET_TOKEN) }), body: { tokenID: "", pushMsg: 0, sdkAppID: 0, businessID: "", deviceBrand: "", deviceToken: "", isTpns: 0, isWebUniapp: 0, notificationStatus: 0, deviceModel: "", systemVersion: "", pushVersion: "" }, keyMap: { req: { tokenID: "TokenID", pushMsg: "PushMsg", sdkAppID: "EnterVersion", businessID: "BusiID", deviceBrand: "InstType", deviceToken: "VarToken", isTpns: "IsTpns", notificationStatus: "NotificationStatus", deviceModel: "DeviceModel", systemVersion: "SystemVersion", pushVersion: "PushPluginVersion" } } }), this._map.set(k2.STAT_FOREGROUND, { head: y2(y2({}, e3), {}, { servcmd: "".concat(a2.NAME.IM_OPEN_STATUS, ".").concat(k2.STAT_FOREGROUND) }), body: { isWebUniapp: 0 } }), this._map.set(k2.STAT_BACKGROUND, { head: y2(y2({}, e3), {}, { servcmd: "".concat(a2.NAME.IM_OPEN_STATUS, ".").concat(k2.STAT_BACKGROUND) }), body: { C2CUnread: 0, GroupUnread: 0, isWebUniapp: 0 }, keyMap: { req: { c2cUnreadCount: "C2cUnread", groupUnreadCount: "GrpUnread" } } }), this._map.set(k2.PUSH_REPORT, { head: y2(y2({}, e3), {}, { servcmd: "".concat(a2.NAME.OFFLINE_PUSH_REPORT, ".").concat(k2.PUSH_REPORT) }), body: { eventList: [] }, keyMap: { req: { eventList: "UinappPushEvents", type: "EventType", time: "EventTime", pushId: "ClickExt" } } }), this._map.set(k2.SET_ALL_RECEIVE_MSG_OPT, { head: y2(y2({}, e3), {}, { servcmd: "".concat(a2.NAME.IM_MSG_LOGIC, ".").concat(k2.SET_ALL_RECEIVE_MSG_OPT) }), body: { startTime: 0, endTime: 0, isRepeated: 0, messageRemindType: 0 }, keyMap: { req: { messageRemindType: "Level" } } }), this._map.set(k2.GET_ALL_RECEIVE_MSG_OPT, { head: y2(y2({}, e3), {}, { servcmd: "".concat(a2.NAME.IM_MSG_LOGIC, ".").concat(k2.GET_ALL_RECEIVE_MSG_OPT) }), body: { toAccount: void 0 } });
      } }, { key: "has", value: function(e3) {
        return this._map.has(e3);
      } }, { key: "get", value: function(e3) {
        return this._map.get(e3);
      } }, { key: "update", value: function() {
        this._fillMap();
      } }, { key: "getKeyMap", value: function(e3) {
        return this.has(e3) ? this.get(e3).keyMap || {} : (M2.w("".concat(this._n, ".getKeyMap unknown P:").concat(e3)), {});
      } }, { key: "getProtocolData", value: function(e3) {
        var t3 = e3.P, n3 = e3.data, e3 = this.get(t3), t3 = null;
        if (n3) {
          var o3, i3 = this._simpleDeepCopy(e3), i3 = this._updateService(n3, i3), a3 = i3.body, s3 = /* @__PURE__ */ Object.create(null);
          for (o3 in a3)
            if (Object.prototype.hasOwnProperty.call(a3, o3)) {
              if (s3[o3] = a3[o3], void 0 === n3[o3])
                continue;
              s3[o3] = n3[o3];
            }
          i3.body = s3, t3 = this._getUplinkData(i3);
        } else
          t3 = this._getUplinkData(e3);
        return t3;
      } }, { key: "_getUplinkData", value: function(e3) {
        var e3 = this._dataCleaner(e3), t3 = Kt2(e3.head), t3 = Qa(e3.body, this._getReqKeyMap(t3));
        return e3.body = t3, e3;
      } }, { key: "_updateService", value: function(e3, t3) {
        var n3, o3, i3 = Kt2(t3.head);
        return this._isFromGroupRequest(t3) && (n3 = e3.type, o3 = e3.groupID, e3 = void 0 === (e3 = e3.groupIDList) ? [] : e3, N2(o3 = void 0 === o3 ? void 0 : o3) && (o3 = e3[0] || ""), Nt2({ type: n3, groupID: o3 })) && (t3.head.servcmd = "".concat(a2.NAME.GRP_COMMUNITY, ".").concat(i3)), t3;
      } }, { key: "_isFromGroupRequest", value: function(e3) {
        return e3.head.servcmd.includes(a2.NAME.GRP) || e3.head.servcmd.includes(a2.NAME.GRP_ATTR);
      } }, { key: "_getReqKeyMap", value: function(e3) {
        e3 = this.getKeyMap(e3);
        return y2(y2({}, Ba.req), e3.req);
      } }, { key: "_dataCleaner", value: function(e3) {
        var t3, n3 = Array.isArray(e3) ? [] : /* @__PURE__ */ Object.create(null);
        for (t3 in e3)
          Object.prototype.hasOwnProperty.call(e3, t3) && pt2(t3) && null !== e3[t3] && void 0 !== e3[t3] && ("object" !== b2(e3[t3]) ? n3[t3] = e3[t3] : n3[t3] = this._dataCleaner.bind(this)(e3[t3]));
        return n3;
      } }, { key: "_simpleDeepCopy", value: function(e3) {
        for (var t3, n3 = Object.keys(e3), o3 = {}, i3 = 0, a3 = n3.length; i3 < a3; i3++)
          t3 = n3[i3], O2(e3[t3]) ? o3[t3] = Array.from(e3[t3]) : ut2(e3[t3]) ? o3[t3] = this._simpleDeepCopy(e3[t3]) : o3[t3] = e3[t3];
        return o3;
      } }]), Ts), gs = [k2.MSG_PUSH_ACK], fs = (e2(Cs, [{ key: "_onC2CMsgArray", value: function(e3) {
        var t3 = this._sessionM.get(6);
        e3.dataList.forEach(function(e4) {
          var t4;
          1 === e4.isSyncMessage && (t4 = e4.from, e4.from = e4.to, e4.to = t4);
        }), 1 === e3.needSync && this._sessionM.get(19).syncOnNeed(), t3.onNewMessage({ dataList: e3.dataList, isInstantMessage: true });
      } }, { key: "_onC2CMsgModified", value: function(e3) {
        this._sessionM.get(6).onMsgModified(e3);
      } }, { key: "_onGroupMsgArray", value: function(e3) {
        var t3 = this._sessionM.get(7);
        t3 && t3.onNewMessage({ event: e3.event, dataList: e3.dataList, isInstantMessage: true });
      } }, { key: "_onGroupMsgModified", value: function(e3) {
        var t3 = this._sessionM.get(7);
        t3 && t3.onMsgModified(e3);
      } }, { key: "_onGroupTips", value: function(e3) {
        var t3 = this._sessionM.get(7);
        if (t3) {
          var n3 = e3.event, o3 = e3.dataList, i3 = e3.isInstantMessage, a3 = void 0 === i3 || i3, s3 = e3.isSyncingEnded;
          switch (n3) {
            case 4:
            case 6:
              t3.onNewGroupTips({ event: n3, dataList: o3 });
              break;
            case 5:
              for (var r3 = 0; r3 < o3.length; r3++)
                if (O2(o3[r3].elements.revokedInfos))
                  t3.onMsgRevoked({ dataList: o3 });
                else if (O2(o3[r3].elements.groupMessageReadNotice))
                  t3.onMsgReadNotice({ dataList: o3 });
                else {
                  if (!O2(o3[r3].elements.readReceiptList)) {
                    t3.onNewGroupSystemNotice({ dataList: o3, isInstantMessage: a3, isSyncingEnded: s3 });
                    break;
                  }
                  t3.onReadReceiptList({ dataList: o3 });
                }
              break;
            case 12:
              this._sessionM.get(11).onNewGroupAtTips({ dataList: o3 });
              break;
            default:
              M2.l("".concat(this._n, "._onGroupTips unknown event:").concat(n3, " dataList:"), o3);
          }
        }
      } }, { key: "_onC2CNotifyMsgArray", value: function(e3) {
        var o3, i3 = this, a3 = e3.dataList;
        O2(a3) && (o3 = this._sessionM.get(6), a3.forEach(function(e4) {
          var t3, n3;
          f2(e4) && (e4.hasOwnProperty("kickoutMsgNotify") ? (t3 = (n3 = e4.kickoutMsgNotify).kickType, n3 = void 0 === (n3 = n3.newInstanceInfo) ? {} : n3, 1 === t3 ? i3._sessionM.onMultipleAccountKickedOut(n3) : 2 === t3 ? i3._sessionM.onMultipleDeviceKickedOut(n3) : 3 === t3 && i3._sessionM.onRestApiKickedOut(n3)) : e4.hasOwnProperty("c2cMessageRevokedNotify") ? o3 && o3.onMsgRevoked({ dataList: a3 }) : e4.hasOwnProperty("c2cMessageReadReceipt") ? o3 && o3.onMsgReadReceipt({ dataList: a3 }) : e4.hasOwnProperty("c2cMessageReadNotice") ? o3 && o3.onMsgReadNotice({ dataList: a3 }) : e4.hasOwnProperty("muteNotificationsSync") && i3._sessionM.get(11).onC2CMsgRemindTypeSynced({ dataList: a3 }));
        }));
      } }, { key: "_onC2CReadReceiptArray", value: function(e3) {
        this._sessionM.get(6).onReadReceiptList(e3);
      } }, { key: "_onProfileModified", value: function(e3) {
        this._sessionM.get(4).onProfileModified({ dataList: e3.dataList });
        var t3 = this._sessionM.get(8);
        t3 && t3.onFriendProfileModified({ dataList: e3.dataList });
      } }, { key: "_onRelationChainModified", value: function(e3) {
        this._sessionM.get(4).onRelationChainModified({ dataList: e3.dataList });
        var t3 = this._sessionM.get(8);
        t3 && t3.onRelationChainModified({ dataList: e3.dataList });
      } }, { key: "_onRecentContact", value: function(e3) {
        var i3, e3 = e3.dataList;
        O2(e3) && (i3 = this._sessionM.get(11)) && e3.forEach(function(e4) {
          var t3, n3, o3 = e4.pushType;
          1 === o3 ? (t3 = e4.recentContactDeleteItem, i3.onConvDeleted(t3.recentContactList)) : 2 === o3 ? (t3 = e4.recentContactTopItem, i3.onConvPinnedStatus(t3.recentContactList, true)) : 3 === o3 ? (t3 = e4.recentContactTopItem, i3.onConvPinnedStatus(t3.recentContactList, false)) : 4 === o3 ? (t3 = e4.recentContactMarkContact, i3.onConvMarkUpdated(t3.recentContactMarkContactItem)) : 5 === o3 ? (t3 = e4.recentContactCreateContactGroup, i3.onConvGroupCreated(t3.msgContactGroupContactItem)) : 6 === o3 ? (t3 = e4.recentContactDelContactGroup, i3.onConvGroupDeleted(t3.msgGroupItem)) : 7 === o3 && (o3 = (t3 = e4.recentContactUpdateContactGroup).updateType, e4 = t3.msgUpdateGroup, t3 = t3.msgUpdateContact, 1 === o3 ? 1 === (n3 = e4.updateGroupType) ? i3.onConvGroupNameUpdated(e4) : 2 === n3 && i3.onConvInGroupUpdated(e4) : 2 === o3 && i3.onConvAddedToOrDeletedFromGroup(t3));
        });
      } }, { key: "_onAllMsgRead", value: function(e3) {
        var e3 = e3.dataList, t3 = this._sessionM.get(11);
        t3 && t3.onPushedAllMessageRead(e3);
      } }, { key: "_onUserStatusList", value: function(e3) {
        this._sessionM.get(4).onUserStatusUpdated(e3);
      } }, { key: "_onMsgExtNotify", value: function(e3) {
        this._sessionM.get(3).onMsgExtNotify(e3);
      } }, { key: "_onMsgReactionNotifyList", value: function(e3) {
        this._sessionM.get(34).onReactionNotifyList(e3);
      } }, { key: "_onMsgReactionNotify", value: function(e3) {
        this._sessionM.get(34).onReactionNotify(e3);
      } }, { key: "_onFollowNotify", value: function(e3) {
        this._sessionM.get(35).onFollowNotify(e3);
      } }, { key: "_onTopicLatestMsg", value: function(e3) {
        this._sessionM.get(10).onTopicLatestMsg(e3);
      } }, { key: "onMessage", value: function(e3) {
        var t3 = this, n3 = e3.body;
        if (this._filterMsgFromIMOpenPush(e3)) {
          var o3, i3 = n3.eventArray, a3 = n3.isInstantMessage, s3 = n3.isSyncingEnded, r3 = n3.needSync;
          if (O2(i3))
            for (var c3, u3, l3, d3 = 0, p3 = i3.length; d3 < p3; d3++)
              100 !== (l3 = (c3 = i3[d3]).event) ? 24 !== l3 ? 26 !== l3 ? (o3 = Object.keys(c3).find(function(e4) {
                return -1 !== t3._keys.indexOf(e4);
              })) ? (u3 = 14 === l3 ? { readAllC2CMessage: c3[o3], groupMessageReadInfoList: c3.groupMessageReadNotice || [] } : 16 === l3 ? { userID: c3.userID, timestamp: c3.timestamp, readReceiptList: c3[o3] } : c3[o3], this._eventHandlerMap.get(o3)({ event: l3, dataList: u3, isInstantMessage: a3, isSyncingEnded: s3, needSync: r3 })) : M2.l("".concat(this._n, ".onMessage unknown eventItem:"), c3) : this._onTopicLatestMsg(c3) : this._onAllRcvMsgOptNotify(c3) : this._onRoomCustomData(c3.content);
        }
      } }, { key: "_onRoomCustomData", value: function(e3) {
        this._sessionM.get(30).onRoomCustomDataReceived(e3), M2.l("".concat(this._n, "._onRoomCustomData data:").concat(e3));
      } }, { key: "_onAllRcvMsgOptNotify", value: function(e3) {
        this._sessionM.get(11).onAllRcvMsgOptNotify(e3);
      } }, { key: "_filterMsgFromIMOpenPush", value: function(e3) {
        var t3 = e3.head, e3 = e3.body, t3 = t3.servcmd, n3 = false;
        return !(n3 = N2(t3) ? n3 : t3.includes(a2.NAME.IM_CONFIG_MANAGER) || t3.includes(a2.NAME.OVERLOAD_PUSH) || t3.includes(a2.NAME.STAT_SERVICE)) || (t3.includes(k2.PUSHED_CLOUD_CTRL_CONFIG) ? this._sessionM.get(23).onPushedConfig(e3) : t3.includes(k2.PUSHED_COMMERCIAL_CONFIG) ? this._sessionM.get(27).onPushedConfig(e3) : t3.includes(k2.OVERLOAD_NOTIFY) ? this._sessionM.onPushedServerOverload(e3) : t3.includes(k2.KICK_OTHER) && (n3 = Date.now(), this._sessionM.reLoginOnKickOther(), e3 = new G2("kickOther"), n3 = n3 - (t3 = this._sessionM.get(1).getLastWsHelloTs()), e3.setMessage("last wshello time:".concat(t3, " diff:").concat(n3, "ms")).end()), false);
      } }]), Cs), ms = [{ cmd: k2.GET_GRP_PROFILE, interval: 1, count: 8 }, { cmd: k2.UPDATE_GRP_PROFILE, interval: 1, count: 8 }, { cmd: k2.GET_AV_MBR_LIST, interval: 3, count: 1 }, { cmd: k2.GET_GRP_PENDENCY, interval: 1, count: 15 }, { cmd: k2.GET_TOPIC_LIST, interval: 1, count: 10 }, { cmd: k2.SET_GRP_ATTR, interval: 5, count: 10 }, { cmd: k2.MODIFY_GRP_ATTR, interval: 5, count: 10 }, { cmd: k2.DEL_GRP_ATTR, interval: 5, count: 10 }, { cmd: k2.CLEAR_GRP_ATTR, interval: 5, count: 10 }, { cmd: k2.GET_GRP_ATTR, interval: 5, count: 20 }, { cmd: k2.UPDATE_GRP_COUNTER, interval: 5, count: 20 }, { cmd: k2.GET_GRP_COUNTER, interval: 5, count: 20 }, { cmd: k2.SET_ALL_MSG_READ, interval: 1, count: 1 }, { cmd: k2.GET_USER_STATUS, interval: 5, count: 20 }, { cmd: k2.SUB_USER_STATUS, interval: 5, count: 20 }, { cmd: k2.UNSUB_USER_STATUS, interval: 5, count: 20 }, { cmd: k2.MSG_CLOUD_SEARCH, interval: 1, count: 2 }, { cmd: k2.CHECK_FOLLOW_TYPE, interval: 5, count: 20 }, { cmd: k2.GET_GRP_ROAMING_MSG, interval: 1, count: 20 }, { cmd: k2.GET_C2C_ROAMING_MSG, interval: 1, count: 20 }], vs = /* @__PURE__ */ new Map(), Is = ["0", "1", "2", "3", "4", "5", "6", "7", "8", "9", "A", "B", "C", "D", "E", "F"], Ms = 0, ys = Is.length; Ms < ys; Ms++)
        vs.set(Ms, Is[Ms]);
      function Cs(e3) {
        d2(this, Cs), this._sessionM = e3, this._n = "MsgDispatcher", this._eventHandlerMap = /* @__PURE__ */ new Map(), this._eventHandlerMap.set("C2CMessageArray", this._onC2CMsgArray.bind(this)), this._eventHandlerMap.set("groupMessageArray", this._onGroupMsgArray.bind(this)), this._eventHandlerMap.set("groupTips", this._onGroupTips.bind(this)), this._eventHandlerMap.set("C2CNotifyMessageArray", this._onC2CNotifyMsgArray.bind(this)), this._eventHandlerMap.set("C2CReadReceiptArray", this._onC2CReadReceiptArray.bind(this)), this._eventHandlerMap.set("profileModify", this._onProfileModified.bind(this)), this._eventHandlerMap.set("friendListMod", this._onRelationChainModified.bind(this)), this._eventHandlerMap.set("recentContactMod", this._onRecentContact.bind(this)), this._eventHandlerMap.set("readAllC2CMessage", this._onAllMsgRead.bind(this)), this._eventHandlerMap.set("c2cMessageModified", this._onC2CMsgModified.bind(this)), this._eventHandlerMap.set("groupMessageModified", this._onGroupMsgModified.bind(this)), this._eventHandlerMap.set("userStatusList", this._onUserStatusList.bind(this)), this._eventHandlerMap.set("messageExtensionNotify", this._onMsgExtNotify.bind(this)), this._eventHandlerMap.set("messageReactionNotifyList", this._onMsgReactionNotifyList.bind(this)), this._eventHandlerMap.set("messageReactionNotify", this._onMsgReactionNotify.bind(this)), this._eventHandlerMap.set("followChangeList", this._onFollowNotify.bind(this)), this._keys = p2(this._eventHandlerMap.keys());
      }
      function Ts(e3) {
        d2(this, Ts), this._n = "PHandler", this._sessionM = e3, this._map = /* @__PURE__ */ new Map(), this._fillMap();
      }
      function Ds(e3) {
        return d2(this, Ds), (e3 = $a.call(this, e3))._n = "ChannelModule", e3._socketHandler = new us(i2(e3)), e3._probing = false, e3._isAppShowing = true, e3._previousState = A2.NET_STATE_CONNECTED, e3._timerForNotLoggedIn = -1, e3._timerForNotLoggedIn = setInterval(e3.onCheckTimer.bind(i2(e3)), 1e3), e3._fatalErrorFlag = false, e3._disconnectedTS = 0, e3._lastDiagnoseTS = 0, e3;
      }
      function Es(e3) {
        d2(this, Es), this._chM = e3, this._n = "SocketHandler", this._promiseMap = /* @__PURE__ */ new Map(), this._readyState = cs, this._simpleRequestMap = /* @__PURE__ */ new Map(), this.MAX_SIZE = 100, this._startSequence = ft2(), this._startTs = 0, this._reConnectFlag = false, this._nextPingTs = 0, this._reConnectCount = 0, this.MAX_RECONNECT_COUNT = 3, this._socketID = -1, this._random = 0, this._socket = null, this._url = "", this._onOpenTs = 0, this._canIUseBinaryFrame = true, this._isWorkerEnabled = true, this._currentSite = se2, this._setWebsocketHost(), this._initConnection();
      }
      function Ls(e3) {
        d2(this, Ls);
        var t3, i3, n3 = (this._handler = e3).getURL();
        this._socket = null, this._workerSocket = null, this._id = ft2(), this._handler.getIsWorkerEnabled() ? (t3 = URL.createObjectURL(new Blob([';let _socket = null;onmessage = function(event) {  if (event.data.cmd === "start") {    const url = event.data.url;    _socket = new WebSocket(url);    _socket.binaryType = "arraybuffer";    _socket.onopen = function() {      postMessage({ callback: "onOpen", extensions: _socket.extensions });    };    _socket.onclose = function(e) {      postMessage({ callback: "onOpen", e: { code: e.code, reason: e.reason } });    };    _socket.onmessage = function(e) {      postMessage({ callback: "onMessage", data: e.data });    };    _socket.onerror = function(e) {      postMessage({ callback: "onError", e: { isTrusted: "true" } });    };  } else if (event.data.cmd === "sendMessage") {    if (_socket !== null) {      _socket.send(event.data.data);    }  } else if (event.data.cmd === "stop") {    if (_socket !== null) {      _socket.close(event.data.code);      _socket = null;    }  }};'], { type: "application/javascript; charset=utf-8" })), this._workerSocket = new Worker(t3), (i3 = this)._workerSocket.onmessage = function(e4) {
          var t4 = e4.data, n4 = t4.callback, o3 = t4.e, t4 = t4.extensions;
          "onOpen" === n4 ? i3._onOpen(t4) : "onClose" === n4 ? i3._onClose(o3) : "onError" === n4 ? i3._onError(o3) : "onMessage" === n4 && i3._onMessage(e4.data);
        }, this._workerSocket.postMessage({ cmd: "start", id: this._id, url: n3 })) : v2 ? ve2 ? (I2.connectSocket({ url: n3, header: { "content-type": "application/json" } }), I2.onSocketClose(this._onClose.bind(this)), I2.onSocketOpen(this._onOpen.bind(this)), I2.onSocketMessage(this._onMessage.bind(this)), I2.onSocketError(this._onError.bind(this))) : (this._socket = I2.connectSocket({ url: n3, header: { "content-type": "application/json" }, complete: function() {
        } }), this._socket.onClose(this._onClose.bind(this)), this._socket.onOpen(this._onOpen.bind(this)), this._socket.onMessage(this._onMessage.bind(this)), this._socket.onError(this._onError.bind(this))) : (this._socket = new WebSocket(n3), this._socket.binaryType = "arraybuffer", this._socket.onopen = this._onOpen.bind(this, this._socket.extensions), this._socket.onmessage = this._onMessage.bind(this), this._socket.onclose = this._onClose.bind(this), this._socket.onerror = this._onError.bind(this)), this._canIUseBinaryFrame = e3.canIUseBinaryFrame();
      }
      function Ss(e3) {
        for (var t3, n3, o3 = e3, i3 = "", a3 = 0, s3 = (o3 = e3.length % 8 != 0 ? "0".repeat(8 - e3.length % 8) + e3 : o3).length; a3 < s3; a3 += 8)
          t3 = parseInt(o3.slice(a3, a3 + 4), 2), n3 = parseInt(o3.slice(a3 + 4, a3 + 8), 2), i3 += vs.get(t3) + vs.get(n3);
        return i3;
      }
      function ks(e3) {
        var t3;
        return e3 < 0 || 53 < e3 ? NaN : (t3 = 0 | 1073741824 * Math.random(), 30 < e3 ? t3 + 1073741824 * (0 | Math.random() * (1 << e3 - 30)) : t3 >>> 30 - e3);
      }
      function As(e3, t3) {
        for (var n3 = e3.toString(16), o3 = t3 - n3.length, i3 = "0"; 0 < o3; o3 >>>= 1, i3 += i3)
          1 & o3 && (n3 = i3 + n3);
        return n3;
      }
      t2(Wr2, u2), xs = n2(Wr2), e2(Wr2, [{ key: "_init", value: function() {
        this._updateCmdFreqLimitMap(ms);
      } }, { key: "_onCloudConfig", value: function() {
        var e3 = this.getCloudConfig("cmd_frequency_limit");
        N2(e3) || (e3 = JSON.parse(e3), this._updateCmdFreqLimitMap(e3));
      } }, { key: "_updateCmdFreqLimitMap", value: function(e3) {
        var t3 = this;
        e3.forEach(function(e4) {
          t3._cmdFreqLimitMap.set(e4.cmd, { interval: e4.interval, count: e4.count });
        });
      } }, { key: "updateProtocolConfig", value: function() {
        this._pHandler.update();
      } }, { key: "req", value: function(e3) {
        M2.d("".concat(this._n, ".req options:"), e3);
        var t3, n3, o3 = e3.P;
        return this._pHandler.has(o3) ? (t3 = (e3 = this.getProtocolData(e3)).head.servcmd, this._isFreqOverLimit(t3) ? D2({ code: n3 = L2.OVER_FREQUENCY_LIMIT, message: this.getErrMsg(n3, this._getCmd(t3)) }) : this._isServerOverload(t3) ? D2({ code: n3 = L2.OPEN_SERVICE_OVERLOAD_ERROR, message: this.getErrMsg(n3, this._getCmd(t3)) }) : (n3 = this.get(21), gs.includes(o3) ? n3.simplySend(e3) : n3.send(e3))) : (M2.w("".concat(this._n, ".req unknown P:").concat(o3)), D2({ code: L2.NO_PROTOCOL }));
      } }, { key: "getKeyMap", value: function(e3) {
        return this._pHandler.getKeyMap(e3);
      } }, { key: "genCommonHead", value: function() {
        var e3 = this.get(12);
        return { ver: "v4", platform: this._platform, websdkappid: ae2, websdkversion: oe2, a2: e3.getA2Key() || void 0, tinyid: e3.getTinyID() || void 0, status_instid: e3.getStatusInstanceID(), sdkappid: e3.getSDKAppID(), contenttype: e3.getContentType(), reqtime: 0, identifier: e3.getA2Key() ? void 0 : e3.getUserID(), usersig: e3.getA2Key() ? void 0 : e3.getUserSig(), sdkability: 12775283, sdkability_ext: Ss(""), cappid: e3.getApplicationID() };
      } }, { key: "genCosSpecifiedHead", value: function() {
        var e3 = this.get(12);
        return { ver: "v4", platform: this._platform, websdkappid: ae2, websdkversion: oe2, sdkappid: e3.getSDKAppID(), contenttype: e3.getContentType(), reqtime: 0, identifier: e3.getUserID(), usersig: e3.getUserSig(), status_instid: e3.getStatusInstanceID(), sdkability: 12775283, sdkability_ext: Ss(""), cappid: e3.getApplicationID() };
      } }, { key: "genSSOReportHead", value: function() {
        var e3 = this.get(12);
        return { ver: "v4", platform: this._platform, websdkappid: ae2, websdkversion: oe2, sdkappid: e3.getSDKAppID(), contenttype: "", reqtime: 0, identifier: "", usersig: "", status_instid: e3.getStatusInstanceID(), sdkability: 12775283, sdkability_ext: Ss(""), cappid: e3.getApplicationID() };
      } }, { key: "getProtocolData", value: function(e3) {
        return this._pHandler.getProtocolData(e3);
      } }, { key: "trans", value: function(e3) {
        var t3 = e3.servcmd, e3 = e3.data, t3 = { head: y2(y2({}, this.genCommonHead()), {}, { servcmd: t3 }), body: e3 };
        return this.get(21).send(t3);
      } }, { key: "sendComboMessage", value: function(e3) {
        var t3 = e3.servcmd, e3 = e3.data, t3 = { head: y2(y2({}, this.genCommonHead()), {}, { servcmd: t3 }), body: e3 };
        return this.get(21).send(t3);
      } }, { key: "onErrorCodeNotZero", value: function(e3) {
        var t3, n3 = e3.errorCode;
        n3 === L2.HELLO_ANSWER_KICKED_OUT && (t3 = e3.kickType, e3 = void 0 === (e3 = e3.newInstanceInfo) ? {} : e3, 1 === t3 ? this.onMultipleAccountKickedOut(e3) : 2 === t3 ? this.onMultipleDeviceKickedOut(e3) : 3 === t3 && this.onRestApiKickedOut(e3)), n3 !== L2.MSG_A2KEY_EXPIRED && n3 !== L2.ACCOUNT_A2KEY_EXPIRED || (this._onUserSigExpired(), this.get(21).reConnect());
      } }, { key: "onMessage", value: function(e3) {
        var t3 = e3.body, n3 = t3.needAck, t3 = t3.sessionData;
        1 === (void 0 === n3 ? 0 : n3) && this._sendACK(t3), this._msgDispatcher.onMessage(e3);
      } }, { key: "onReconnected", value: function(e3) {
        this._incrementalPullContactFlag = e3 <= 300, this._reLoginOnReconnected();
      } }, { key: "reLoginOnKickOther", value: function() {
        M2.l("".concat(this._n, ".reLoginOnKickOther")), this._reLogin();
      } }, { key: "_reLoginOnReconnected", value: function() {
        M2.l("".concat(this._n, "._reLoginOnReconnected")), this._reLogin();
      } }, { key: "_reLogin", value: function() {
        var e3, t3, s3, r3 = this, c3 = "".concat(this._n, "._reLogin");
        this.isLoggedIn() && (e3 = 0, (t3 = this.get(1).getPushModule()) && (e3 = t3.getUniAppPlatform()), s3 = new G2("reLogin"), this.req({ P: k2.LOGIN, data: { isWebUniapp: e3, customInfo: this.get(12).getCustomLoginInfo() } }).then(function(e4) {
          var e4 = e4.data, t4 = e4.instanceID, e4 = e4.customStatus, n3 = r3.get(12), o3 = Wo(e4), i3 = (n3.setStatusInstanceID(t4), r3.get(21)), a3 = i3.getSocketID(), a3 = "socketID:".concat(a3, " instanceID:").concat(t4, " customStatus:").concat(o3), t4 = (s3.setMessage(a3).end(true), M2.l("".concat(c3, " ok. ").concat(a3)), n3.getCustomStatus() !== o3 && r3.get(4).onUserStatusUpdated({ dataList: [{ to: r3.getMyUserID(), statusType: A2.USER_STATUS_ONLINE, customStatus: e4 }] }), i3.diagnose(), r3.get(11).syncConvList(r3._incrementalPullContactFlag).then(function() {
            M2.l("".concat(c3, ", sync conv list ok.")), r3.get(25).start();
          }), r3.get(7)), a3 = (t4 && t4.updateLocalMainSequenceOnReconnected(), r3.get(10)), n3 = (a3.resetGetTopicTime(), a3.getTopicListOnReconnected(), r3.get(35));
          n3 && n3.clearCacheOnReconnected();
        }));
      } }, { key: "onMultipleAccountKickedOut", value: function(e3) {
        this.get(1).onMultipleAccountKickedOut(e3);
      } }, { key: "onMultipleDeviceKickedOut", value: function(e3) {
        this.get(1).onMultipleDeviceKickedOut(e3);
      } }, { key: "_onUserSigExpired", value: function() {
        this.get(1).onUserSigExpired();
      } }, { key: "onRestApiKickedOut", value: function(e3) {
        this.get(1).onRestApiKickedOut(e3);
      } }, { key: "_sendACK", value: function(e3) {
        this.req({ P: k2.MSG_PUSH_ACK, data: { sessionData: e3 } });
      } }, { key: "_isFreqOverLimit", value: function(e3) {
        var t3, n3, o3, i3, e3 = e3.split(".")[1];
        return !!this._cmdFreqLimitMap.has(e3) && (!this._cmdReqInfoMap.has(e3) || (t3 = (n3 = this._cmdFreqLimitMap.get(e3)).count, n3 = n3.interval, o3 = (i3 = this._cmdReqInfoMap.get(e3)).startTime, i3 = i3.requestCount, Date.now() - o3 > 1e3 * n3) ? (this._cmdReqInfoMap.set(e3, { startTime: Date.now(), requestCount: 1 }), false) : (this._cmdReqInfoMap.set(e3, { startTime: o3, requestCount: i3 += 1 }), t3 < i3));
      } }, { key: "_isServerOverload", value: function(e3) {
        var t3, n3;
        return !!this._serverOverloadInfoMap.has(e3) && (t3 = (n3 = this._serverOverloadInfoMap.get(e3)).overloadTime, n3 = n3.waitingTime, Date.now() - t3 <= 1e3 * n3 || (this._serverOverloadInfoMap.delete(e3), false));
      } }, { key: "_getCmd", value: function(e3) {
        var t3 = "";
        if (e3.includes(".")) {
          var n3, o3 = e3.split(".")[1];
          for (n3 in k2)
            if (k2[n3] === o3) {
              t3 = n3;
              break;
            }
        }
        return t3;
      } }, { key: "onPushedServerOverload", value: function(e3) {
        var t3 = e3.overloadCommand, e3 = e3.waitingTime;
        this._serverOverloadInfoMap.set(t3, { overloadTime: Date.now(), waitingTime: e3 }), M2.w("".concat(this._n, ".onPushedServerOverload waitingTime:").concat(e3, "s cmd:").concat(this._getCmd(t3)));
      } }, { key: "reset", value: function() {
        M2.l("".concat(this._n, ".reset")), this._updateCmdFreqLimitMap(ms), this._cmdReqInfoMap.clear(), this._serverOverloadInfoMap.clear(), this._incrementalPullContactFlag = true;
      } }]);
      var Rs, Os, Ns, Gs, Ps, Us, bs, ws, Fs, qs, xs, Vs = Wr2, Hs = (t2(Yr2, u2), qs = n2(Yr2), e2(Yr2, [{ key: "getCloudConfig", value: function(e3) {
        return N2(e3) ? this._cloudConfig : this._cloudConfig.has(e3) ? this._cloudConfig.get(e3) : void 0;
      } }, { key: "getServerConfig", value: function(e3) {
        var t3 = { code: 0, data: "" };
        return !N2(e3) && this._cloudConfig.has(e3) && (t3.data = this._cloudConfig.get(e3)), Promise.resolve(t3);
      } }, { key: "_canFetch", value: function() {
        return this.isLoggedIn() && !this._isFetching && Date.now() >= this._expiredTime;
      } }, { key: "fetchConfig", value: function() {
        var o3, i3 = this, a3 = "".concat(this._n, ".fetchConfig"), e3 = this._canFetch();
        M2.l("".concat(a3, " canFetch:").concat(e3)), e3 && (o3 = new G2("fetchCloudCtrlConfig"), e3 = this.get(12).getSDKAppID(), this._isFetching = true, this.req({ P: k2.FETCH_CLOUD_CTRL_CONFIG, data: { SDKAppID: e3, version: this._version } }).then(function(e4) {
          i3._isFetching = false;
          var t3 = e4.data, n3 = t3.version, t3 = t3.cloudControlConfig;
          o3.setMessage("version:".concat(i3._version, " newVersion:").concat(n3, " config:").concat(t3)).end(), M2.l("".concat(a3, " ok")), i3._parse(e4.data);
        }).catch(function(e4) {
          i3._isFetching = false, o3.setError(e4).end(), M2.l("".concat(a3, " failed. error:"), e4), i3._setExpiredTime(12e4);
        }));
      } }, { key: "onPushedConfig", value: function(e3) {
        M2.l("".concat(this._n, ".onPushedConfig config:"), e3), new G2("pushedCloudCtrlConfig").setMessage("newVersion:".concat(e3.version, " config:").concat(e3.cloudControlConfig)).end(), this._parse(e3);
      } }, { key: "onCheckTimer", value: function(e3) {
        this._canFetch() && this.fetchConfig();
      } }, { key: "_parse", value: function(e3) {
        var t3 = this, n3 = "".concat(this._n, "._parse"), o3 = e3.errorCode, i3 = e3.errorMessage, a3 = e3.cloudControlConfig, s3 = e3.version, r3 = e3.expiredTime;
        if (0 === o3) {
          if (this._version !== s3) {
            var c3 = null;
            try {
              c3 = JSON.parse(a3);
            } catch (e4) {
              this.isPrivateNetWork() || M2.e("".concat(n3, " failed. config:"), a3);
            }
            c3 && (this._cloudConfig.clear(), Object.keys(c3).forEach(function(e4) {
              t3._cloudConfig.set(e4, c3[e4]);
            }), this._version = s3, this.emitIEvt(P2.CLOUD_CONFIG));
          }
          this._setExpiredTime(1e3 * r3);
        } else
          N2(o3) ? (M2.l("".concat(n3, " failed. Invalid message format:"), e3), this._setExpiredTime(36e5)) : (M2.e("".concat(n3, " errorCode:").concat(o3, " errorMessage:").concat(i3)), this._setExpiredTime(12e4));
      } }, { key: "_setExpiredTime", value: function(e3) {
        this._expiredTime = Date.now() + e3;
      } }, { key: "reset", value: function() {
        M2.l("".concat(this._n, ".reset")), this._cloudConfig.clear(), this._expiredTime = 0, this._version = 0, this._isFetching = false;
      } }]), Yr2), Bs = (t2(Kr2, u2), Fs = n2(Kr2), e2(Kr2, [{ key: "start", value: function() {
        this._recoverGroupChat(), this._recoverC2CChat();
      } }, { key: "_recoverGroupChat", value: function() {
        var n3, o3, i3, a3, s3 = this, e3 = this._getLocalConvList().filter(function(e4) {
          return e4.type === A2.CONV_GROUP && e4.groupProfile.type !== A2.GRP_AVCHATROOM;
        }), r3 = this.get(11), c3 = [];
        e3.forEach(function(e4) {
          var t3 = e4.conversationID, e4 = e4.lastMessage;
          n3 = t3.replace(A2.CONV_GROUP, ""), o3 = r3.getLocalLastMessage(t3), e4 && 0 !== e4.lastSequence && o3 && (i3 = e4.lastSequence, o3 = o3.sequence, a3 = i3 - o3, 0 < o3) && 1 <= a3 && a3 < 300 ? s3._recoverGroupMsg({ groupID: n3, localLastMessageSequence: o3, remoteLastMessageSequence: i3 }) : c3.push(n3);
        }), this._getGroupNotice(c3);
      } }, { key: "_recoverC2CChat", value: function() {
        var n3, o3, i3, a3 = this, e3 = this._getLocalConvList().filter(function(e4) {
          return e4.type === A2.CONV_C2C;
        }), s3 = this.get(11), r3 = [Promise.resolve()];
        e3.forEach(function(e4) {
          var t3 = e4.conversationID, e4 = e4.lastMessage;
          n3 = s3.getLocalLastMessage(t3), e4 && 0 !== e4.lastTime && n3 && (o3 = e4.lastTime, n3 = n3.time, i3 = o3 - n3, 0 < n3) && 1 <= i3 && i3 <= 600 && r3.push(a3._recoverC2CMsg({ conversationID: t3, localLastMessageTime: n3, remoteLastMessageTime: o3 }));
        }), Promise.all(r3).then(function() {
          M2.l("".concat(a3._n, "._recoverC2CChat all done")), a3.get(19).syncOnReconnected();
        });
      } }, { key: "_getLocalConvList", value: function() {
        return this.get(11).getLocalConvList();
      } }, { key: "_recoverGroupMsg", value: function(e3) {
        var d3 = this, p3 = "".concat(this._n, ".").concat("_recoverGroupMsg"), _3 = (M2.l("".concat(p3, " options:"), e3), e3.groupID), h3 = e3.localLastMessageSequence, g3 = e3.remoteLastMessageSequence, f3 = JSON.stringify(e3), m3 = new G2("_recoverGroupMsg");
        m3.setMessage(f3), this._getGroupRoamingMsg({ groupID: _3, sequence: h3 }).then(function(e4) {
          var e4 = e4.data, t3 = e4.complete, n3 = e4.messageList;
          if (!N2(n3)) {
            var e4 = n3[0].sequence, o3 = n3.map(function(e5) {
              return e5.sequence;
            }), o3 = "".concat(f3, " complete:").concat(t3, " sequenceList:").concat(o3), i3 = (M2.l("".concat(p3, " ").concat(o3)), e4 !== h3 && e4 < g3 && 2 !== t3 && d3._recoverGroupMsg({ groupID: _3, localLastMessageSequence: e4, remoteLastMessageSequence: g3 }), m3.setMessage(o3).end(), d3.get(7));
            1 < n3.length && n3.sort(function(e5, t4) {
              return e5.sequence - t4.sequence;
            });
            for (var a3 = false, s3 = 0, r3 = n3.length; s3 < r3; s3++)
              if (n3[s3].from === A2.CONV_SYSTEM) {
                a3 = true;
                break;
              }
            if (a3)
              for (var c3 = 0, u3 = n3.length; c3 < u3; c3++) {
                var l3 = n3[c3];
                l3.from !== A2.CONV_SYSTEM ? i3.onNewMessage({ dataList: [l3], isInstantMessage: false, updateUnreadCount: false }) : i3.onNewGroupTips({ event: l3.event, dataList: [l3] });
              }
            else
              i3.onNewMessage({ dataList: n3, isInstantMessage: false, updateUnreadCount: false });
          }
        }).catch(function(e4) {
          m3.setError(e4).end(), M2.w("".concat(p3, " failed. error:"), e4);
        });
      } }, { key: "_getGroupNotice", value: function(e3) {
        var t3 = e3.length;
        if (M2.l("".concat(this._n, "._getGroupNotice length:").concat(t3)), 0 !== t3) {
          var n3 = this.get(7);
          if (t3 <= 10)
            n3.getNotice(e3);
          else {
            var o3 = Math.floor(t3 / 10);
            5 <= o3 && (o3 = 5);
            for (var i3 = 0; i3 <= o3; i3++)
              n3.getNotice(e3.slice(10 * i3, 10 * (i3 + 1)));
          }
        }
      } }, { key: "_getGroupRoamingMsg", value: function(e3) {
        var t3 = e3.groupID, e3 = e3.sequence;
        return this.req({ P: k2.GET_GRP_ROAMING_MSG, data: { groupID: t3, count: this.PULL_LIMIT_COUNT, sequence: e3 + this.PULL_LIMIT_COUNT - 1 } });
      } }, { key: "_recoverC2CMsg", value: function(e3) {
        var o3 = this, i3 = "".concat(this._n, ".").concat("_recoverC2CMsg"), a3 = (M2.l("".concat(i3, " options:"), e3), e3.conversationID), t3 = e3.localLastMessageTime, s3 = e3.remoteLastMessageTime, r3 = JSON.stringify(e3), c3 = new G2("_recoverC2CMsg");
        return c3.setMessage(r3), this._getC2CRoamingMsg({ conversationID: a3, time: t3 }).then(function(e4) {
          var e4 = e4.data, t4 = e4.complete, e4 = e4.messageList;
          if (!N2(e4)) {
            var n3 = e4.length, n3 = (o3.get(6).onNewMessage({ dataList: e4, isInstantMessage: true }), e4[n3 - 1].time), e4 = e4.map(function(e5) {
              return e5.random;
            }), e4 = "".concat(r3, " complete:").concat(t4, " randomList:").concat(e4);
            if (M2.l("".concat(i3, " ").concat(e4)), c3.setMessage(e4).end(), n3 < s3 && 1 !== t4)
              return o3._recoverC2CMsg({ conversationID: a3, localLastMessageTime: n3, remoteLastMessageTime: s3 });
          }
        }).catch(function(e4) {
          c3.setError(e4).end(), M2.w("".concat(i3, " failed. error:"), e4);
        });
      } }, { key: "_getC2CRoamingMsg", value: function(e3) {
        var t3 = e3.conversationID, e3 = e3.time;
        return this.req({ P: k2.GET_C2C_ROAMING_MSG, data: { peerAccount: t3.replace(A2.CONV_C2C, ""), count: this.PULL_LIMIT_COUNT + 1, lastMessageTime: e3, direction: 1 } });
      } }, { key: "reset", value: function() {
        M2.l("".concat(this._n, ".reset"));
      } }]), Kr2), Ks = (e2(Br2, [{ key: "addMessageDelay", value: function(e3) {
        e3 = Be2() - e3;
        0 <= e3 && this._e2eDelayArray.push(e3);
      } }, { key: "_calcAvg", value: function(e3, t3) {
        var n3;
        return 0 === t3 ? 0 : (n3 = 0, e3.forEach(function(e4) {
          n3 += e4;
        }), Yt2(n3 / t3, 1));
      } }, { key: "_calcCountWithLimit", value: function(e3) {
        var t3 = e3.e2eDelayArray, n3 = e3.min, o3 = e3.max;
        return t3.filter(function(e4) {
          return n3 <= e4 && e4 < o3;
        }).length;
      } }, { key: "_calcPercent", value: function(e3, t3) {
        e3 = Yt2(e3 / t3 * 100, 2);
        return e3 = 100 < e3 ? 100 : e3;
      } }, { key: "_checkE2EDelayException", value: function(e3, t3) {
        var n3, o3, i3, a3 = e3.filter(function(e4) {
          return t3 < e4;
        });
        0 < a3.length && (n3 = a3.length, o3 = Math.min.apply(Math, p2(a3)), i3 = Math.max.apply(Math, p2(a3)), a3 = this._calcAvg(a3, n3), 50 < (e3 = Yt2(n3 / e3.length * 100, 2))) && new G2("messageE2EDelayException").setMessage("count:".concat(n3, " min:").concat(o3, " max:").concat(i3, " avg:").concat(a3, " percent:").concat(e3)).setLevel("warning").end();
      } }, { key: "getStatResult", value: function() {
        var e3, t3, n3, o3, i3, a3, s3 = this._e2eDelayArray.length;
        return 0 === s3 ? null : (e3 = p2(this._e2eDelayArray), t3 = this._calcCountWithLimit({ e2eDelayArray: e3, min: 0, max: 1 }), n3 = this._calcCountWithLimit({ e2eDelayArray: e3, min: 1, max: 3 }), o3 = this._calcPercent(t3, s3), i3 = this._calcPercent(n3, s3), a3 = this._calcAvg(e3, s3), this._checkE2EDelayException(e3, 3), e3.length = 0, this.reset(), { totalCount: s3, countLessThan1Second: t3, percentOfCountLessThan1Second: o3, countLessThan3Second: n3, percentOfCountLessThan3Second: i3, avgDelay: a3 });
      } }, { key: "reset", value: function() {
        this._e2eDelayArray.length = 0;
      } }]), Br2), Ys = (e2(Hr2, [{ key: "addRequestCount", value: function() {
        this._requestCount += 1;
      } }, { key: "addRTT", value: function(e3) {
        this._rttArray.push(e3);
      } }, { key: "_calcTotalCount", value: function() {
        return this._requestCount;
      } }, { key: "_calcRTTCount", value: function(e3) {
        return e3.length;
      } }, { key: "_calcSuccessRateOfRequest", value: function(e3, t3) {
        return 0 === t3 ? 0 : 100 < (e3 = Yt2(e3 / t3 * 100, 2)) ? 100 : e3;
      } }, { key: "_calcAvg", value: function(e3, t3) {
        var n3;
        return 0 === t3 ? 0 : (n3 = 0, e3.forEach(function(e4) {
          n3 += e4;
        }), parseInt(n3 / t3));
      } }, { key: "_calcMax", value: function() {
        return Math.max.apply(Math, p2(this._rttArray));
      } }, { key: "_calcMin", value: function() {
        return Math.min.apply(Math, p2(this._rttArray));
      } }, { key: "getStatResult", value: function() {
        var e3, t3, n3 = this._calcTotalCount(), o3 = p2(this._rttArray);
        return 0 === n3 ? null : (e3 = this._calcRTTCount(o3), t3 = this._calcSuccessRateOfRequest(e3, n3), o3 = this._calcAvg(o3, e3), M2.l("".concat(this._n, ".getStatResult max:").concat(this._calcMax(), " min:").concat(this._calcMin(), " avg:").concat(o3)), this.reset(), { totalCount: n3, rttCount: e3, successRateOfRequest: t3, avgRTT: o3 });
      } }, { key: "reset", value: function() {
        this._requestCount = 0, this._rttArray.length = 0;
      } }]), Hr2), Ws = (e2(Vr2, [{ key: "initMap", value: function(e3) {
        var t3 = this;
        e3.forEach(function(e4) {
          t3._map.set(e4, { totalCount: 0, successCount: 0, failedCountOfUserSide: 0, costArray: [], fileSizeArray: [] });
        });
      } }, { key: "addTotalCount", value: function(e3) {
        return !(N2(e3) || !this._map.has(e3) || (this._map.get(e3).totalCount += 1, 0));
      } }, { key: "addSuccessCount", value: function(e3) {
        return !(N2(e3) || !this._map.has(e3) || (this._map.get(e3).successCount += 1, 0));
      } }, { key: "addFailedCountOfUserSide", value: function(e3) {
        return !(N2(e3) || !this._map.has(e3) || (this._map.get(e3).failedCountOfUserSide += 1, 0));
      } }, { key: "addCost", value: function(e3, t3) {
        return !(N2(e3) || !this._map.has(e3) || (this._map.get(e3).costArray.push(t3), 0));
      } }, { key: "addFileSize", value: function(e3, t3) {
        return !(N2(e3) || !this._map.has(e3) || (this._map.get(e3).fileSizeArray.push(t3), 0));
      } }, { key: "_calcSuccessRateOfBusiness", value: function(e3) {
        return N2(e3) || !this._map.has(e3) ? -1 : 100 < (e3 = Yt2((e3 = this._map.get(e3)).successCount / e3.totalCount * 100, 2)) ? 100 : e3;
      } }, { key: "_calcSuccessRateOfPlatform", value: function(e3) {
        var t3;
        return N2(e3) || !this._map.has(e3) ? -1 : (t3 = this._map.get(e3), 100 < (e3 = Yt2(e3 = this._calcSuccessCountOfPlatform(e3) / t3.totalCount * 100, 2)) ? 100 : e3);
      } }, { key: "_calcTotalCount", value: function(e3) {
        return N2(e3) || !this._map.has(e3) ? -1 : this._map.get(e3).totalCount;
      } }, { key: "_calcSuccessCountOfBusiness", value: function(e3) {
        return N2(e3) || !this._map.has(e3) ? -1 : this._map.get(e3).successCount;
      } }, { key: "_calcSuccessCountOfPlatform", value: function(e3) {
        return N2(e3) || !this._map.has(e3) ? -1 : (e3 = this._map.get(e3)).successCount + e3.failedCountOfUserSide;
      } }, { key: "_calcAvg", value: function(e3) {
        return N2(e3) || !this._map.has(e3) ? -1 : e3 === Wn2 ? this._calcAvgSpeed(e3) : this._calcAvgCost(e3);
      } }, { key: "_calcAvgCost", value: function(e3) {
        var t3, n3 = this._map.get(e3).costArray.length;
        return 0 === n3 ? 0 : (t3 = 0, this._map.get(e3).costArray.forEach(function(e4) {
          t3 += e4;
        }), parseInt(t3 / n3));
      } }, { key: "_calcAvgSpeed", value: function(e3) {
        var t3 = 0, n3 = 0;
        return this._map.get(e3).costArray.forEach(function(e4) {
          t3 += e4;
        }), this._map.get(e3).fileSizeArray.forEach(function(e4) {
          n3 += e4;
        }), parseInt(1e3 * n3 / t3);
      } }, { key: "getStatResult", value: function(e3) {
        var t3, n3, o3, i3, a3, s3 = this._calcTotalCount(e3);
        return 0 === s3 ? null : (t3 = this._calcSuccessCountOfBusiness(e3), n3 = this._calcSuccessRateOfBusiness(e3), o3 = this._calcSuccessCountOfPlatform(e3), i3 = this._calcSuccessRateOfPlatform(e3), a3 = this._calcAvg(e3), this.reset(e3), { totalCount: s3, successCountOfBusiness: t3, successRateOfBusiness: n3, successCountOfPlatform: o3, successRateOfPlatform: i3, avgValue: a3 });
      } }, { key: "reset", value: function(e3) {
        N2(e3) ? this._map.clear() : this._map.set(e3, { totalCount: 0, successCount: 0, failedCountOfUserSide: 0, costArray: [], fileSizeArray: [] });
      } }]), Vr2), js = (e2(xr2, [{ key: "initMap", value: function(e3) {
        var t3 = this;
        e3.forEach(function(e4) {
          t3._lastMap.set(e4, /* @__PURE__ */ new Map()), t3._currentMap.set(e4, /* @__PURE__ */ new Map());
        });
      } }, { key: "addMessageSequence", value: function(e3) {
        var t3, n3, o3, i3 = e3.key, a3 = e3.message;
        return !(N2(i3) || !this._lastMap.has(i3) || !this._currentMap.has(i3) || (t3 = a3.conversationID, a3 = a3.sequence, t3 = t3.replace(A2.CONV_GROUP, ""), 0 !== this._lastMap.get(i3).size && this._lastMap.get(i3).has(t3) && (o3 = (n3 = this._lastMap.get(i3).get(t3)).length - 1, a3 > n3[0]) && a3 < n3[o3] ? (n3.push(a3), n3.sort(), this._lastMap.get(i3).set(t3, n3)) : this._addCurrentMap(e3), 0));
      } }, { key: "_addCurrentMap", value: function(e3) {
        var t3 = e3.key, e3 = e3.message, n3 = e3.conversationID, e3 = e3.sequence, n3 = n3.replace(A2.CONV_GROUP, "");
        this._currentMap.get(t3).has(n3) || this._currentMap.get(t3).set(n3, []), this._currentMap.get(t3).get(n3).push(e3);
      } }, { key: "_copyData", value: function(e3) {
        if (!N2(e3)) {
          this._lastMap.set(e3, /* @__PURE__ */ new Map());
          var t3, n3 = this._lastMap.get(e3), o3 = Z2(this._currentMap.get(e3));
          try {
            for (o3.s(); !(t3 = o3.n()).done; ) {
              var i3 = Y2(t3.value, 2), a3 = i3[0], s3 = i3[1];
              n3.set(a3, s3);
            }
          } catch (e4) {
            o3.e(e4);
          } finally {
            o3.f();
          }
          n3 = null, this._currentMap.set(e3, /* @__PURE__ */ new Map());
        }
      } }, { key: "getStatResult", value: function(e3) {
        var o3, i3, t3;
        return N2(this._currentMap.get(e3)) || N2(this._lastMap.get(e3)) ? null : 0 === this._lastMap.get(e3).size ? (this._copyData(e3), null) : (i3 = o3 = 0, this._lastMap.get(e3).forEach(function(e4, t4) {
          var e4 = p2(e4.values()), n3 = e4.length, e4 = e4[n3 - 1] - e4[0] + 1;
          o3 += e4, i3 += n3;
        }), 0 === o3 ? null : (100 < (t3 = Yt2(i3 / o3 * 100, 2)) && (t3 = 100), this._copyData(e3), { totalCount: o3, successCountOfMessageReceived: i3, successRateOfMessageReceived: t3 }));
      } }, { key: "reset", value: function() {
        this._currentMap.clear(), this._lastMap.clear();
      } }]), xr2), Js = (t2(qr2, u2), ws = n2(qr2), e2(qr2, [{ key: "_onLoginSuccess", value: function() {
        var t3 = this, e3 = (this._rateMessageSent.initMap(this._messageSentItems), this._rateMessageReceived.initMap(this._messageReceivedItems), this.get(13)), n3 = e3.getItem(this.TAG, false);
        !S2(n3) && lt2(n3.forEach) && (M2.l("".concat(this._n, "._onLoginSuccess. logs count:").concat(n3.length)), n3.forEach(function(e4) {
          t3._statInfoArr.push(e4);
        }), e3.removeItem(this.TAG, false));
      } }, { key: "_onCloudConfig", value: function() {
        var e3 = this.getCloudConfig("q_rpt_interval"), t3 = this.getCloudConfig("q_rpt_sdkappid_bl"), n3 = this.getCloudConfig("q_rpt_tinyid_wl");
        N2(e3) || (this.REPORT_INTERVAL = Number(e3)), N2(t3) || (this.REPORT_SDKAPPID_BLACKLIST = t3.split(",").map(function(e4) {
          return Number(e4);
        })), N2(n3) || (this.REPORT_TINYID_WHITELIST = n3.split(","));
      } }, { key: "onCheckTimer", value: function(e3) {
        this.isLoggedIn() && e3 % this.REPORT_INTERVAL == 0 && (this.wholePeriod = true, this._report());
      } }, { key: "addRequestCount", value: function() {
        this._avgRTT.addRequestCount();
      } }, { key: "addRTT", value: function(e3) {
        this._avgRTT.addRTT(e3);
      } }, { key: "addMessageDelay", value: function(e3) {
        this._avgE2EDelay.addMessageDelay(e3);
      } }, { key: "addTotalCount", value: function(e3) {
        this._rateMessageSent.addTotalCount(e3) || M2.w("".concat(this._n, ".addTotalCount invalid key:"), e3);
      } }, { key: "addSuccessCount", value: function(e3) {
        this._rateMessageSent.addSuccessCount(e3) || M2.w("".concat(this._n, ".addSuccessCount invalid key:"), e3);
      } }, { key: "addFailedCountOfUserSide", value: function(e3) {
        this._rateMessageSent.addFailedCountOfUserSide(e3) || M2.w("".concat(this._n, ".addFailedCountOfUserSide invalid key:"), e3);
      } }, { key: "addCost", value: function(e3, t3) {
        this._rateMessageSent.addCost(e3, t3) || M2.w("".concat(this._n, ".addCost invalid key or cost:"), e3, t3);
      } }, { key: "addFileSize", value: function(e3, t3) {
        this._rateMessageSent.addFileSize(e3, t3) || M2.w("".concat(this._n, ".addFileSize invalid key or size:"), e3, t3);
      } }, { key: "addMessageSequence", value: function(e3) {
        this._rateMessageReceived.addMessageSequence(e3) || M2.w("".concat(this._n, ".addMessageSequence invalid key:"), e3.key);
      } }, { key: "_getQualityItem", value: function(e3) {
        var t3 = {}, n3 = Qn2[this.get(15).getNetworkType()], n3 = (N2(n3) && (n3 = 8), { qualityType: Xn2[e3], timestamp: We2(), networkType: n3, extension: "" });
        switch (e3) {
          case xn2:
            t3 = this._avgRTT.getStatResult();
            break;
          case Vn2:
            t3 = this._avgE2EDelay.getStatResult();
            break;
          case Hn2:
          case Bn2:
          case Kn2:
          case Yn2:
          case Wn2:
            t3 = this._rateMessageSent.getStatResult(e3);
            break;
          case jn2:
          case Jn2:
          case zn2:
            t3 = this._rateMessageReceived.getStatResult(e3);
        }
        return null === t3 ? null : y2(y2({}, n3), t3);
      } }, { key: "_report", value: function(e3) {
        var t3 = this, n3 = [], o3 = null, e3 = (N2(e3) ? this._qualityItems.forEach(function(e4) {
          null !== (o3 = t3._getQualityItem(e4)) && (o3.reportIndex = t3.reportIndex, o3.wholePeriod = t3.wholePeriod, n3.push(o3));
        }) : null !== (o3 = this._getQualityItem(e3)) && (o3.reportIndex = this.reportIndex, o3.wholePeriod = this.wholePeriod, n3.push(o3)), M2.d("".concat(this._n, "._report"), n3), 0 < this._statInfoArr.length && (n3 = n3.concat(this._statInfoArr), this._statInfoArr = []), this.get(12)), i3 = e3.getSDKAppID(), e3 = e3.getTinyID();
        0 < (n3 = Wt2(this.REPORT_SDKAPPID_BLACKLIST, i3) && !jt2(this.REPORT_TINYID_WHITELIST, e3) ? [] : n3).length && this._doReport(n3);
      } }, { key: "_doReport", value: function(t3) {
        var n3 = this, e3 = { header: aa(this), quality: t3 };
        this.req({ P: k2.SSO_STAT, data: y2({}, e3) }).then(function() {
          n3.reportIndex++, n3.wholePeriod = false;
        }).catch(function(e4) {
          M2.w("".concat(n3._n, "._doReport failed. error:"), e4), n3._statInfoArr = n3._statInfoArr.concat(t3), n3._flushAtOnce();
        });
      } }, { key: "_flushAtOnce", value: function() {
        var e3 = this.get(13), t3 = e3.getItem(this.TAG, false), n3 = this._statInfoArr, o3 = "".concat(this._n, "._flushAtOnce");
        S2(t3) ? (M2.l("".concat(o3, " count:").concat(n3.length)), e3.setItem(this.TAG, n3, true, false)) : (10 < (n3 = n3.concat(t3)).length && (n3 = n3.slice(0, 10)), M2.l("".concat(o3, " count:").concat(n3.length)), e3.setItem(this.TAG, n3, true, false)), this._statInfoArr = [];
      } }, { key: "reset", value: function() {
        M2.l("".concat(this._n, ".reset")), this._report(), this.reportIndex = 0, this.wholePeriod = false, this.REPORT_SDKAPPID_BLACKLIST = [], this.REPORT_TINYID_WHITELIST = [], this._avgRTT.reset(), this._avgE2EDelay.reset(), this._rateMessageSent.reset(), this._rateMessageReceived.reset();
      } }]), qr2), zs = e2(function e3(t3) {
        d2(this, e3), S2(t3) || (this.userID = t3.userID || "", this.nick = t3.nick || "", this.avatar = t3.avatar || "", this.time = t3.time || 0, this.source = t3.source || "", this.wording = t3.wording || "", this.type = t3.type || "");
      }), Xs = (e2(Fr2, [{ key: "getLocalApplicationList", value: function() {
        return { friendApplicationList: p2(this._map.values()), unreadCount: this._unreadCount };
      } }, { key: "_onApplicationListUpdated", value: function() {
        this._snsM.emitOEvt(h2.FRIEND_APPLICATION_LIST_UPDATED, { friendApplicationList: p2(this._map.values()), unreadCount: this._unreadCount });
      } }, { key: "onApplicationRead", value: function() {
        this._unreadCount = 0, this._onApplicationListUpdated();
      } }, { key: "onApplicationAdded", value: function(e3, t3) {
        var n3, o3, i3 = this;
        S2(e3) || (n3 = "", n3 = t3 === this._snsM.getMyUserID() ? A2.SNS_APPLICATION_SENT_BY_ME : A2.SNS_APPLICATION_SENT_TO_ME, o3 = false, e3.forEach(function(e4) {
          var t4 = "".concat(e4.userID, "_").concat(n3);
          n3 !== A2.SNS_APPLICATION_SENT_TO_ME || i3._map.has(t4) || (i3._unreadCount += 1), i3._map.set(t4, new zs(y2(y2({}, e4), {}, { type: n3 }))), o3 = true;
        }), o3 && this._onApplicationListUpdated());
      } }, { key: "onApplicationDeleted", value: function(e3) {
        S2(e3) || (this._startTime = 0, this._currentSeq = 0, this.getApplicationList());
      } }, { key: "getApplicationList", value: function() {
        var a3 = this, s3 = "".concat(this._n, ".").concat("getApplicationList"), r3 = new G2("getApplicationList");
        return this._snsM.req({ P: k2.GET_FD_APPLICATION_LIST, data: { applicationType: A2.SNS_APPLICATION_TYPE_BOTH, fromAccount: this._snsM.getMyUserID(), maxLimited: this._maxLimited, startTime: this._startTime, lastSequence: this._currentSeq } }).then(function(e3) {
          var e3 = e3.data, t3 = e3.resultList, n3 = e3.unreadCount, o3 = e3.startTime, e3 = e3.currentSequence, i3 = (a3._startTime = o3, a3._currentSeq = e3, a3._unreadCount = n3, O2(t3) ? t3.length : 0), i3 = "applicationCount:".concat(i3, " unreadCount:").concat(n3, " startTime:").concat(o3, " currentSequence:").concat(e3);
          r3.setMessage(i3).end(), M2.i("".concat(s3, " ok. ").concat(i3)), a3._map.clear(), O2(t3) && t3.forEach(function(e4) {
            var t4 = e4.userID, n4 = e4.type, e4 = new zs(e4);
            a3._map.set("".concat(t4, "_").concat(n4), e4);
          }), a3._onApplicationListUpdated();
        }).catch(function(e3) {
          return r3.setError(e3).end(), M2.w("".concat(s3, " failed. error:"), e3), D2(e3);
        });
      } }, { key: "deleteApplication", value: function(e3) {
        var i3, a3 = "".concat(this._n, ".").concat("deleteApplication"), s3 = e3.userID, r3 = e3.type;
        return r3 && (r3 === A2.SNS_APPLICATION_SENT_BY_ME || r3 === A2.SNS_APPLICATION_SENT_TO_ME) || (r3 = A2.SNS_APPLICATION_SENT_TO_ME), this._map.has("".concat(s3, "_").concat(r3)) ? ((i3 = new G2("deleteApplication")).setMessage("userID:".concat(s3, " type:").concat(r3)), this._snsM.req({ P: k2.DEL_FD_APPLICATION, data: { fromAccount: this._snsM.getMyUserID(), userIDList: [s3], type: r3 } }).then(function(e4) {
          var e4 = e4.data.resultList, t3 = e4[0], n3 = t3.to, o3 = t3.resultCode, t3 = t3.resultInfo;
          return i3.setMoreMessage("resultList:".concat(JSON.stringify(e4))).end(), M2.i("".concat(a3, " ok. userID:").concat(s3, " type:").concat(r3)), 0 === o3 ? C2() : D2({ userID: n3, code: o3, message: t3 });
        }).catch(function(e4) {
          return i3.setError(e4).end(), M2.w("".concat(a3, " failed. error:"), e4), D2(e4);
        })) : D2({ code: L2.FRIEND_APPLICATION_NOT_EXIST });
      } }, { key: "acceptApplication", value: function(e3) {
        var n3 = "".concat(this._n, ".").concat("acceptApplication"), o3 = e3.userID, t3 = e3.remark, i3 = e3.tag, a3 = e3.type, s3 = (a3 && (a3 === A2.SNS_APPLICATION_AGREE || a3 === A2.SNS_APPLICATION_AGREE_AND_ADD) || (a3 = A2.SNS_APPLICATION_AGREE_AND_ADD), new G2("acceptApplication"));
        return s3.setMessage("userID:".concat(o3, " type:").concat(a3)), this._snsM.req({ P: k2.RESPOND_FD_APPLICATION, data: { fromAccount: this._snsM.getMyUserID(), responseFriendItem: [{ userID: o3, remark: t3, tag: i3, action: a3 }] } }).then(function(e4) {
          s3.end();
          var e4 = e4.data.resultList[0], t4 = e4.resultCode, e4 = e4.resultInfo;
          if (0 !== t4)
            return D2({ code: t4, message: e4 });
          M2.i("".concat(n3, " ok. userID:").concat(o3, " type:").concat(a3));
        }).catch(function(e4) {
          return s3.setError(e4).end(), M2.w("".concat(n3, " failed. error:"), e4), D2(e4);
        });
      } }, { key: "refuseApplication", value: function(e3) {
        var n3 = "".concat(this._n, ".").concat("refuseApplication"), o3 = e3.userID, i3 = new G2("refuseApplication");
        return i3.setMessage("userID:".concat(o3)), this._snsM.req({ P: k2.RESPOND_FD_APPLICATION, data: { fromAccount: this._snsM.getMyUserID(), responseFriendItem: [{ userID: o3, action: "Response_Action_Reject" }] } }).then(function(e4) {
          i3.end();
          var e4 = e4.data.resultList[0], t3 = e4.resultCode, e4 = e4.resultInfo;
          if (0 !== t3)
            return D2({ code: t3, message: e4 });
          M2.i("".concat(n3, " ok. userID:").concat(o3));
        }).catch(function(e4) {
          return i3.setError(e4).end(), M2.w("".concat(n3, " failed. error:"), e4), D2(e4);
        });
      } }, { key: "setApplicationRead", value: function() {
        var t3 = this, n3 = "".concat(this._n, ".").concat("setApplicationRead"), o3 = new G2("setApplicationRead");
        return this._snsM.req({ P: k2.REPORT_FD_APPLICATION, data: { fromAccount: this._snsM.getMyUserID(), latestTimeStamp: Yt2(We2() / 1e3, 0) } }).then(function(e3) {
          o3.end(), M2.i("".concat(n3, " ok")), t3._unreadCount = 0;
        }).catch(function(e3) {
          return o3.setError(e3).end(), M2.w("".concat(n3, " failed. error:"), e3), D2(e3);
        });
      } }, { key: "reset", value: function() {
        this._maxLimited = 100, this._currentSeq = 0, this._unreadCount = 0, this._map.clear();
      } }]), Fr2), Zs = (e2(wr2, [{ key: "validate", value: function(e3) {
        var t3, n3 = true, o3 = "";
        if (S2(e3))
          return { valid: false, tips: "empty options" };
        if (e3.profileCustomField)
          for (var i3 = e3.profileCustomField.length, a3 = null, s3 = 0; s3 < i3; s3++) {
            if (a3 = e3.profileCustomField[s3], !m2(a3.key) || -1 === a3.key.indexOf("Tag_Profile_Custom"))
              return { valid: false, tips: "The prefix of keys of the custom profile key-value pairs (which is profileCustomField) must be Tag_Profile_Custom" };
            if (!m2(a3.value))
              return { valid: false, tips: "The type of values of the custom profile key-value pairs (which is profileCustomField) must be String" };
          }
        for (t3 in e3)
          if (Object.prototype.hasOwnProperty.call(e3, t3)) {
            if ("profileCustomField" === t3)
              continue;
            if (S2(e3[t3]) && !m2(e3[t3]) && !R2(e3[t3])) {
              o3 = "key:" + t3 + ", invalid value:" + e3[t3], n3 = false;
              continue;
            }
            switch (t3) {
              case "nick":
                m2(e3[t3]) || (n3 = !(o3 = "nick must be a string")), 500 < gt2(e3[t3]) && (o3 = "nick name limited: must less than or equal to ".concat(500, " bytes, current size: ").concat(gt2(e3[t3]), " bytes"), n3 = false);
                break;
              case "gender":
                vt2(Qe2, e3.gender) || (o3 = "key:gender, invalid value:" + e3.gender, n3 = false);
                break;
              case "birthday":
                R2(e3.birthday) || (n3 = !(o3 = "birthday must be a number"));
                break;
              case "location":
                m2(e3.location) || (n3 = !(o3 = "location must be a string"));
                break;
              case "selfSignature":
                m2(e3.selfSignature) || (n3 = !(o3 = "selfSignature must be a string"));
                break;
              case "allowType":
                vt2(et2, e3.allowType) || (o3 = "key:allowType, invalid value:" + e3.allowType, n3 = false);
                break;
              case "language":
                R2(e3.language) || (n3 = !(o3 = "language must be a number"));
                break;
              case "avatar":
                m2(e3.avatar) || (n3 = !(o3 = "avatar must be a string"));
                break;
              case "messageSettings":
                0 !== e3.messageSettings && 1 !== e3.messageSettings && (n3 = !(o3 = "messageSettings must be 0 or 1"));
                break;
              case "adminForbidType":
                vt2($e2, e3.adminForbidType) || (o3 = "key:adminForbidType, invalid value:" + e3.adminForbidType, n3 = false);
                break;
              case "level":
                R2(e3.level) || (n3 = !(o3 = "level must be a number"));
                break;
              case "role":
                R2(e3.role) || (n3 = !(o3 = "role must be a number"));
                break;
              default:
                o3 = "unknown key:" + t3 + "  " + e3[t3], n3 = false;
            }
          }
        return { valid: n3, tips: o3 };
      } }, { key: "update", value: function(e3) {
        var t3, n3 = "", o3 = [];
        this.friendCustomField.forEach(function(e4) {
          o3.push(e4.key);
        });
        for (var i3 = 0, a3 = e3.length; i3 < a3; i3++)
          if (n3 = e3[i3].tag, t3 = e3[i3].value, -1 < n3.indexOf("Tag_SNS_Custom"))
            -1 < o3.indexOf(n3) ? this.friendCustomField.forEach(function(e4) {
              e4.key === n3 && (e4.value = t3);
            }) : this.friendCustomField.push({ key: n3, value: t3 });
          else if (-1 < n3.indexOf("Tag_Profile_Custom")) {
            var s3 = false;
            this.profile.profileCustomField.forEach(function(e4) {
              e4.key === n3 && (e4.value = t3, s3 = true);
            }), s3 || this.profile.profileCustomField.push({ key: n3, value: t3 });
          } else
            switch (n3) {
              case g2.NICK:
                this.profile.nick = t3;
                break;
              case g2.GENDER:
                this.profile.gender = t3;
                break;
              case g2.BIRTHDAY:
                this.profile.birthday = t3;
                break;
              case g2.LOCATION:
                this.profile.location = t3;
                break;
              case g2.SELFSIGNATURE:
                this.profile.selfSignature = t3;
                break;
              case g2.ALLOWTYPE:
                this.profile.allowType = t3;
                break;
              case g2.LANGUAGE:
                this.profile.language = t3;
                break;
              case g2.AVATAR:
                this.profile.avatar = t3;
                break;
              case g2.MESSAGESETTINGS:
                this.profile.messageSettings = t3;
                break;
              case g2.ADMINFORBIDTYPE:
                this.profile.adminForbidType = t3;
                break;
              case g2.LEVEL:
                this.profile.level = t3;
                break;
              case g2.ROLE:
                this.profile.role = t3;
                break;
              case Ze2.REMARK:
                this.remark = t3;
                break;
              case Ze2.ADDTIME:
                this.addTime = t3;
                break;
              case Ze2.GROUP:
                this.groupList = JSON.parse(JSON.stringify(t3));
                break;
              case Ze2.ADDSOURCE:
                this.source = t3;
                break;
              case Ze2.ADDWORDING:
                break;
              default:
                M2.d("snsProfileItem unkown tag->", e3[i3].tag);
            }
        this.timestamp = Date.now(), o3.length = 0;
      } }, { key: "updateProfile", value: function(e3) {
        this.profile = JSON.parse(JSON.stringify(e3)), this.timestamp = Date.now();
      } }, { key: "addToGroupList", value: function(e3) {
        -1 === this.groupList.indexOf(e3) && (this.groupList.push(e3), this.count = this.groupList.length);
      } }, { key: "removeFromGroupList", value: function(e3) {
        e3 = this.groupList.indexOf(e3);
        -1 < e3 && (this.groupList.splice(e3, 1), this.count = this.groupList.length);
      } }]), wr2), Qs = (e2(br2, [{ key: "getLocalFriendList", value: function() {
        return p2(this._map.values());
      } }, { key: "getFriendRemark", value: function(e3) {
        return this._map.has(e3) ? this._map.get(e3).remark : "";
      } }, { key: "onFriendProfileModified", value: function(e3) {
        var o3, i3 = this, e3 = e3.dataList;
        S2(e3) || (o3 = this._snsM.get(11), e3.forEach(function(e4) {
          var t3, n3 = e4.userID, e4 = e4.profileList;
          i3.isMyFriend(n3) && (M2.l("".concat(i3._n, ".onFriendProfileModified. friend account:").concat(n3, ", profileList:").concat(JSON.stringify(e4))), (t3 = i3._map.get(n3)).update(e4), o3.modifyMessageSentByPeer({ conversationID: "".concat(A2.CONV_C2C).concat(n3), latestNick: t3.profile.nick, latestAvatar: t3.profile.avatar }));
        }), this._onFriendListUpdated());
      } }, { key: "onFriendAdded", value: function(t3) {
        var n3 = this;
        0 !== t3.length && (M2.l("".concat(this._n, ".onFriendAdded userIDList:").concat(t3)), t3.forEach(function(e3) {
          n3._map.set(e3, new Zs(e3));
        }), this.getFriendProfile({ userIDList: t3 }).then(function(e3) {
          t3.forEach(function(e4) {
            var t4 = n3._map.get(e4);
            0 < t4.groupList.length && n3._snsM.updateWhenFriendAdded({ nameList: t4.groupList, userID: e4 });
          }), n3._onFriendListUpdated();
        }));
      } }, { key: "onFriendDeleted", value: function(e3) {
        var n3 = this;
        0 !== e3.length && (M2.l("".concat(this._n, ".onFriendDeleted userIDList:").concat(e3)), e3.forEach(function(e4) {
          var t3 = n3._map.get(e4);
          0 < t3.groupList.length && n3._snsM.updateWhenFriendDeleted({ nameList: t3.groupList, userID: e4 }), n3._map.delete(e4);
        }), this._onFriendListUpdated());
      } }, { key: "_onFriendListUpdated", value: function() {
        this._snsM.emitOEvt(h2.FRIEND_LIST_UPDATED), this._snsM.get(11).checkAndPatchRemark();
      } }, { key: "getFriendProfile", value: function(e3) {
        var t3, a3 = this, n3 = "".concat(this._n, ".").concat("getFriendProfile"), e3 = e3.userIDList, s3 = [], r3 = [], o3 = [];
        return e3.forEach(function(e4) {
          var t4;
          a3._map.has(e4) ? (t4 = a3._map.get(e4), Date.now() - t4.timestamp < a3._expirationTime ? r3.push(t4) : o3.push(e4)) : s3.push({ userID: e4, code: L2.NOT_MY_FRIEND, message: a3._snsM.getErrMsg(L2.NOT_MY_FRIEND) });
        }), 0 === o3.length ? (M2.i("".concat(n3, " newUserIDList is empty")), T2({ friendList: r3, failureUserIDList: s3 })) : ((t3 = new G2("getFriendProfile")).setMessage("userIDList:".concat(o3)), M2.i("".concat(n3, " userIDList:").concat(o3)), this._snsM.req({ P: k2.GET_FD_PROFILE, data: { fromAccount: this._snsM.getMyUserID(), userIDList: o3 } }).then(function(e4) {
          return t3.end(), M2.i("".concat(n3, " ok")), e4.data.resultList.forEach(function(e5) {
            var t4, n4 = e5.to, o4 = e5.resultCode, i3 = e5.resultInfo, e5 = e5.tagValueList;
            N2(o4) || 0 === o4 ? (a3._map.has(n4) ? (t4 = a3._map.get(n4)).update(e5) : (t4 = new Zs(n4, e5), a3._map.set(n4, t4)), r3.push(t4)) : s3.push({ userID: n4, code: o4, message: i3 });
          }), C2({ friendList: r3, failureUserIDList: s3 });
        }).catch(function(e4) {
          return t3.setError(e4).end(), M2.w("".concat(n3, " failed. error:"), e4), D2(e4);
        }));
      } }, { key: "isMyFriend", value: function(e3) {
        return this._map.has(e3);
      } }, { key: "pagingGetFriendList", value: function() {
        var s3 = this, r3 = "".concat(this._n, ".").concat("getFriendList"), c3 = new G2("getFriendList"), u3 = Date.now();
        this._snsM.req({ P: k2.GET_FD_LIST, data: { fromAccount: this._snsM.getMyUserID(), startIndex: this._startIdx, standardSequence: this._standardSeq, customSequence: this._customSeq } }).then(function(e3) {
          var e3 = e3.data, t3 = e3.friendCount, n3 = e3.resultList, o3 = e3.nextStartIndex, i3 = e3.standardSequence, a3 = e3.customSequence, e3 = e3.completeFlag, t3 = (s3._startIdx = o3, s3._standardSeq = i3, s3._customSeq = a3, "friendCount:".concat(t3, " nextStartIndex:").concat(o3, " standardSequence:").concat(i3, " ") + "customSequence:".concat(a3, " completeFlag:").concat(e3, " cost:").concat(nn2(u3)));
          c3.setMessage(t3).end(), M2.i("".concat(r3, " ok."), t3), S2(n3) || n3.forEach(function(e4) {
            var t4 = e4.to, e4 = e4.tagValueList;
            s3._map.set(t4, new Zs(t4, e4));
          }), 0 === e3 ? s3.pagingGetFriendList() : (s3._snsM.emitOEvt(h2.FRIEND_LIST_UPDATED), s3._pagingGetFriendProfile());
        }).catch(function(e3) {
          return c3.setError(e3).end(), M2.w("".concat(r3, " failed. error:"), e3), D2(e3);
        });
      } }, { key: "_pagingGetFriendProfile", value: function() {
        var n3 = this, e3 = p2(this._map.keys()), t3 = this._snsM.get(4), o3 = e3.length, i3 = o3 <= 100 ? 1 : Math.ceil(o3 / 100);
        M2.l("".concat(this._n, "._pagingGetFriendProfile friendCount:").concat(o3, " pageCount:").concat(i3));
        for (var a3 = 0; a3 < i3; a3++)
          t3.getUserProfile({ userIDList: e3.slice(100 * a3, 100 * (a3 + 1)) }).then(function(e4) {
            e4.data.forEach(function(e5) {
              var t4 = n3._map.get(e5.userID);
              t4 && t4.updateProfile(e5);
            }), n3._onFriendListUpdated();
          });
      } }, { key: "addFriend", value: function(e3) {
        var t3, n3, o3, i3, a3, s3, r3, c3 = this, u3 = "".concat(this._n, ".").concat("addFriend");
        return this._map.has(e3.to) ? D2({ code: L2.ALREADY_MY_FRIEND }) : e3.wording && false === this._snsM.filterProfanity("wording", e3) ? D2({ code: L2.PROFANITY_FOUND }) : (t3 = e3.to, n3 = e3.source, o3 = e3.type, i3 = e3.wording, a3 = e3.remark, e3 = e3.groupName, (s3 = o3) && (s3 === A2.SNS_ADD_TYPE_SINGLE || s3 === A2.SNS_ADD_TYPE_BOTH) || (s3 = A2.SNS_ADD_TYPE_BOTH), (r3 = new G2("addFriend")).setMessage("to:".concat(t3, " source:").concat(n3, " type:").concat(s3)), this._snsM.req({ P: k2.ADD_FD, data: { fromAccount: this._snsM.getMyUserID(), addFriendItem: [{ to: t3, source: n3, wording: i3, remark: a3, groupName: e3 }], type: s3 } }).then(function(e4) {
          var e4 = e4.data.resultList, e4 = (r3.setMoreMessage("resultList:".concat(JSON.stringify(e4))).end(), e4[0]), t4 = e4.to, n4 = e4.resultCode, e4 = e4.resultInfo;
          return M2.i("".concat(u3, " ok. to:").concat(t4, " type:").concat(s3, " code:").concat(n4)), N2(n4) || 0 === n4 ? C2({ userID: t4, code: 0 }) : 30539 === n4 ? C2({ userID: t4, code: n4, message: c3._snsM.getErrMsg(n4) }) : D2({ userID: t4, code: n4, message: c3._snsM.getErrMsg(n4) || e4 });
        }).catch(function(e4) {
          return r3.setError(e4).end(), M2.w("".concat(u3, " failed. error:"), e4), D2(e4);
        }));
      } }, { key: "deleteFriend", value: function(e3) {
        var t3, n3 = this, o3 = "".concat(this._n, ".").concat("deleteFriend"), i3 = e3.userIDList, e3 = e3.type, a3 = (1e3 < i3.length && (M2.w("".concat(o3, " ").concat($t2(1e3))), i3.length = 1e3), []), s3 = [], r3 = [];
        return i3.forEach(function(e4) {
          n3._map.has(e4) ? r3.push(e4) : a3.push({ userID: e4, code: L2.NOT_MY_FRIEND, message: n3._snsM.getErrMsg(L2.NOT_MY_FRIEND) });
        }), 0 === r3.length ? T2({ successUserIDList: s3, failureUserIDList: a3 }) : ((i3 = e3) && (i3 === A2.SNS_DELETE_TYPE_SINGLE || i3 === A2.SNS_DELETE_TYPE_BOTH) || (i3 = A2.SNS_DELETE_TYPE_BOTH), (t3 = new G2("deleteFriend")).setMessage("userIDList:".concat(r3, " type:").concat(i3)), this._snsM.req({ P: k2.DEL_FD, data: { fromAccount: this._snsM.getMyUserID(), userIDList: r3, type: i3 } }).then(function(e4) {
          t3.end(), M2.i("".concat(o3, " ok"));
          e4 = e4.data.resultList;
          return S2(e4) || e4.forEach(function(e5) {
            var t4 = e5.to, n4 = e5.resultCode, e5 = e5.resultInfo;
            N2(n4) || 0 === n4 ? s3.push({ userID: t4 }) : a3.push({ userID: t4, code: n4, message: e5 });
          }), C2({ successUserIDList: s3, failureUserIDList: a3 });
        }).catch(function(e4) {
          return t3.setError(e4).end(), M2.w("".concat(o3, " error:"), e4), D2(e4);
        }));
      } }, { key: "updateFriend", value: function(e3) {
        var o3, i3, t3, a3 = this, n3 = e3.userID, s3 = e3.remark, r3 = e3.friendCustomField;
        return this._map.has(n3) ? (o3 = "".concat(this._n, ".").concat("updateFriend"), (i3 = new G2("updateFriend")).setMessage("userID:".concat(n3, " remark:").concat(s3, " friendCustomField:").concat(r3)), t3 = [], N2(s3) || t3.push({ tag: Ze2.REMARK, value: s3 }), O2(r3) && 0 < r3.length && r3.forEach(function(e4) {
          t3.push({ tag: e4.key, value: e4.value });
        }), this._snsM.req({ P: k2.UPDATE_FD, data: { fromAccount: this._snsM.getMyUserID(), updateItem: [{ to: n3, snsItem: t3 }] } }).then(function(e4) {
          i3.end(), M2.i("".concat(o3, " ok"));
          var e4 = e4.data.resultList[0], t4 = e4.to, n4 = e4.resultCode, e4 = e4.resultInfo;
          return N2(n4) || 0 === n4 ? ((t4 = a3._map.get(t4)) && (N2(s3) || (t4.remark = s3), O2(r3) && 0 < r3.length && kt2(t4.friendCustomField, r3), a3._onFriendListUpdated()), C2(t4)) : D2({ code: n4, message: e4 });
        }).catch(function(e4) {
          return i3.setError(e4).end(), M2.w("".concat(o3, " failed. error:"), e4), D2(e4);
        })) : D2({ code: L2.NOT_MY_FRIEND });
      } }, { key: "checkFriend", value: function(e3) {
        var t3 = "".concat(this._n, ".").concat("checkFriend"), n3 = e3.userIDList, o3 = e3.type, s3 = (o3 && (o3 === A2.SNS_CHECK_TYPE_SINGLE || o3 === A2.SNS_CHECK_TYPE_BOTH) || (o3 = A2.SNS_CHECK_TYPE_BOTH), new G2("checkFriend"));
        return s3.setMessage("userIDList:".concat(n3, " type:").concat(o3)), this._snsM.req({ P: k2.CHECK_FD, data: { fromAccount: this._snsM.getMyUserID(), userIDList: n3, type: o3 } }).then(function(e4) {
          s3.end(), M2.i("".concat(t3, " ok. userIDList:").concat(n3, " type:").concat(o3));
          var i3 = [], a3 = [], e4 = e4.data.resultList;
          return O2(e4) && e4.forEach(function(e5) {
            var t4 = e5.to, n4 = e5.relation, o4 = e5.resultCode, e5 = e5.resultInfo;
            N2(o4) || 0 === o4 ? i3.push({ userID: t4, code: 0, relation: n4 }) : a3.push({ userID: t4, code: o4, message: e5 });
          }), C2({ successUserIDList: i3, failureUserIDList: a3 });
        }).catch(function(e4) {
          return s3.setError(e4).end(), M2.w("".concat(t3, " failed. error:"), e4), D2(e4);
        });
      } }, { key: "onAddedToFriendGroup", value: function(e3) {
        var t3 = this, n3 = e3.name, e3 = e3.userIDList;
        M2.l("".concat(this._n, ".onAddedToFriendGroup groupName:").concat(n3, " userIDList:").concat(e3)), n3 && !S2(e3) && e3.forEach(function(e4) {
          t3._map.has(e4) && t3._map.get(e4).addToGroupList(n3);
        });
      } }, { key: "onRemovedFromFriendGroup", value: function(e3) {
        var t3 = this, n3 = e3.name, e3 = e3.userIDList;
        M2.l("".concat(this._n, ".onRemovedFromFriendGroup groupName:").concat(n3, " userIDList:").concat(e3)), n3 && !S2(e3) && e3.forEach(function(e4) {
          t3._map.has(e4) && t3._map.get(e4).removeFromGroupList(n3);
        });
      } }, { key: "reset", value: function() {
        this._map.clear(), this._startIdx = 0, this._standardSeq = 0, this._customSeq = 0;
      } }]), br2), $s = (e2(Ur2, [{ key: "addToUserIDList", value: function(e3) {
        -1 === this.userIDList.indexOf(e3) && (this.userIDList.push(e3), this.count = this.userIDList.length);
      } }, { key: "removeFromUserIDList", value: function(e3) {
        e3 = this.userIDList.indexOf(e3);
        -1 < e3 && (this.userIDList.splice(e3, 1), this.count = this.userIDList.length);
      } }]), Ur2), er2 = (e2(Pr2, [{ key: "getLocalGroupList", value: function() {
        return p2(this._map.values());
      } }, { key: "_onGroupListUpdated", value: function() {
        var e3 = p2(this._map.values());
        this._snsM.emitOEvt(h2.FRIEND_GROUP_LIST_UPDATED, e3);
      } }, { key: "getGroupList", value: function() {
        var n3 = this, t3 = "".concat(this._n, ".").concat("getGroupList"), o3 = new G2("getGroupList");
        return this._snsM.req({ P: k2.GET_FD_GRP_LIST, data: { fromAccount: this._snsM.getMyUserID() } }).then(function(e3) {
          o3.end();
          e3 = e3.data.resultList;
          S2(e3) ? M2.i("".concat(t3, " ok. count:0")) : (M2.i("".concat(t3, " ok. count:").concat(e3.length)), n3._map.clear(), e3.forEach(function(e4) {
            var t4 = new $s(e4);
            n3._map.set(e4.name, t4);
          }), n3._onGroupListUpdated());
        }).catch(function(e3) {
          return o3.setError(e3).end(), M2.w("".concat(t3, " error:"), e3), D2(e3);
        });
      } }, { key: "createGroup", value: function(e3) {
        var t3, n3, o3 = this, s3 = "".concat(this._n, ".").concat("createGroup"), r3 = e3.name, e3 = e3.userIDList;
        return this._map.has(r3) ? D2({ code: L2.FRIEND_GRP_EXISTED }) : (t3 = "name:".concat(r3, " userIDList:").concat(e3), (n3 = new G2("createGroup")).setMessage(t3), this._snsM.req({ P: k2.CREATE_FD_GRP, data: { fromAccount: this._snsM.getMyUserID(), groupName: [r3], userIDList: O2(e3) ? e3 : void 0 } }).then(function(e4) {
          n3.end(), M2.l("".concat(s3, " ok. ").concat(t3));
          var e4 = e4.data.resultList, i3 = [], a3 = [], e4 = (e4 && e4.forEach(function(e5) {
            var t4 = e5.to, n4 = e5.resultCode, o4 = e5.resultInfo;
            N2(n4) || 0 === n4 ? i3.push(t4) : (t4 = { userID: e5.to, code: n4, message: o4 }, a3.push(t4));
          }), new $s({ name: r3, userIDList: i3 }));
          return o3._map.set(r3, e4), o3._snsM.onAddedToFriendGroup({ name: r3, userIDList: i3 }), o3._onGroupListUpdated(), C2({ friendGroup: e4, failureUserIDList: a3 });
        }).catch(function(e4) {
          return n3.setError(e4).end(), M2.w("".concat(s3, " failed. error:"), e4), D2(e4);
        }));
      } }, { key: "deleteGroup", value: function(e3) {
        var n3, o3, i3 = this, a3 = "".concat(this._n, ".").concat("deleteGroup"), s3 = e3.name;
        return this._map.has(s3) ? (n3 = "name:".concat(s3), (o3 = new G2("deleteGroup")).setMessage(n3), this._snsM.req({ P: k2.DEL_FD_GRP, data: { fromAccount: this._snsM.getMyUserID(), nameList: [s3] } }).then(function(e4) {
          o3.end(), M2.l("".concat(a3, " ok. ").concat(n3));
          var t3 = i3._map.get(s3);
          return t3 && (i3._snsM.onRemovedFromFriendGroup({ name: s3, userIDList: t3.userIDList }), i3._map.delete(s3), t3.userIDList.length = 0), i3._onGroupListUpdated(), C2(t3);
        }).catch(function(e4) {
          return o3.setError(e4).end(), M2.w("".concat(a3, " failed. error:"), e4), D2(e4);
        })) : this._onGroupNotExist();
      } }, { key: "renameGroup", value: function(e3) {
        var t3, n3, o3 = this, i3 = "".concat(this._n, ".").concat("renameGroup"), a3 = e3.oldName, s3 = e3.newName;
        return this._map.has(a3) ? (t3 = "oldName:".concat(a3, " newName:").concat(s3), (n3 = new G2("renameGroup")).setMessage(t3), this._snsM.req({ P: k2.UPDATE_FD_GRP, data: { fromAccount: this._snsM.getMyUserID(), oldName: a3, newName: s3 } }).then(function() {
          var e4;
          return n3.end(), M2.l("".concat(i3, " ok. ").concat(t3)), o3._map.has(a3) ? ((e4 = o3._map.get(a3)).name = s3, o3._map.delete(a3), o3._map.set(s3, e4), o3._snsM.onRemovedFromFriendGroup({ name: a3, userIDList: e4.userIDList }), o3._snsM.onAddedToFriendGroup({ name: s3, userIDList: e4.userIDList }), o3._onGroupListUpdated(), C2(e4)) : C2();
        }).catch(function(e4) {
          return n3.setError(e4).end(), M2.w("".concat(i3, " failed. error:"), e4), D2(e4);
        })) : this._onGroupNotExist();
      } }, { key: "addToGroup", value: function(e3) {
        var t3, n3, o3 = this, i3 = "".concat(this._n, ".").concat("addToGroup"), a3 = e3.name, e3 = e3.userIDList;
        return this._map.has(a3) ? (t3 = "name:".concat(a3, " userIDList:").concat(e3), (n3 = new G2("addToGroup")).setMessage(t3), this._snsM.req({ P: k2.UPDATE_FD_GRP, data: { fromAccount: this._snsM.getMyUserID(), oldName: a3, updateGroupItem: e3.filter(function(e4) {
          return o3._snsM.isMyFriend(e4);
        }).map(function(e4) {
          return { to: e4, updateType: "Update_Type_Add" };
        }) } }).then(function(e4) {
          return n3.end(), M2.l("".concat(i3, " ok. ").concat(t3)), o3._onGroupUpdated(a3, e4);
        }).catch(function(e4) {
          return n3.setError(e4).end(), M2.w("".concat(i3, " failed. error:"), e4), D2(e4);
        })) : this._onGroupNotExist();
      } }, { key: "removeFromGroup", value: function(e3) {
        var t3, n3, o3 = this, i3 = "".concat(this._n, ".").concat("removeFromGroup"), a3 = e3.name, e3 = e3.userIDList;
        return this._map.has(a3) ? (t3 = "name:".concat(a3, " userIDList:").concat(e3), (n3 = new G2("removeFromGroup")).setMessage(t3), this._snsM.req({ P: k2.UPDATE_FD_GRP, data: { fromAccount: this._snsM.getMyUserID(), oldName: a3, updateGroupItem: e3.filter(function(e4) {
          return o3._snsM.isMyFriend(e4);
        }).map(function(e4) {
          return { to: e4, updateType: "Update_Type_Delete" };
        }) } }).then(function(e4) {
          return n3.end(), M2.l("".concat(i3, " ok. ").concat(t3)), o3._onGroupUpdated(a3, e4);
        }).catch(function(e4) {
          return n3.setError(e4).end(), M2.w("".concat(i3, " failed. error:"), e4), D2(e4);
        })) : this._onGroupNotExist();
      } }, { key: "_onGroupUpdated", value: function(e3, t3) {
        var t3 = t3.data.resultList, a3 = this._map.get(e3), s3 = [], r3 = [], c3 = [];
        return O2(t3) && t3.forEach(function(e4) {
          var t4 = e4.to, n3 = e4.resultCode, o3 = e4.resultInfo, i3 = e4.type;
          0 === n3 ? "Update_Type_Add" === i3 ? a3 && (a3.addToUserIDList(t4), r3.push(t4)) : "Update_Type_Delete" === i3 && a3 && (a3.removeFromUserIDList(t4), c3.push(t4)) : s3.push({ to: e4.to, code: n3, message: o3 });
        }), M2.l("".concat(this._n, "._onGroupUpdated name:").concat(e3, " userIDList:").concat(a3.userIDList)), 0 < r3.length && this._snsM.onAddedToFriendGroup({ name: e3, userIDList: r3 }), 0 < c3.length && this._snsM.onRemovedFromFriendGroup({ name: e3, userIDList: c3 }), C2({ friendGroup: a3, failureUserIDList: s3 });
      } }, { key: "updateWhenFriendAdded", value: function(e3) {
        var t3 = this, n3 = e3.nameList, o3 = e3.userID;
        M2.l("".concat(this._n, ".updateWhenFriendAdded userID:").concat(o3, " nameList:").concat(n3)), S2(n3) || n3.forEach(function(e4) {
          t3._map.has(e4) && t3._map.get(e4).addToUserIDList(o3);
        });
      } }, { key: "updateWhenFriendDeleted", value: function(e3) {
        var t3 = this, n3 = e3.nameList, o3 = e3.userID;
        M2.l("".concat(this._n, ".updateWhenFriendDeleted userID:").concat(o3, " nameList:").concat(n3)), S2(n3) || n3.forEach(function(e4) {
          t3._map.has(e4) && t3._map.get(e4).removeFromUserIDList(o3);
        });
      } }, { key: "_onGroupNotExist", value: function(e3) {
        return D2({ code: L2.FRIEND_GRP_NOT_EXIST });
      } }, { key: "reset", value: function() {
        this._map.clear();
      } }]), Pr2), tr2 = (t2(Gr2, u2), bs = n2(Gr2), e2(Gr2, [{ key: "onContextUpdated", value: function(e3) {
        this._friendHandler.pagingGetFriendList(), this._friendGroupHandler.getGroupList(), this._friendApplicationHandler.getApplicationList();
      } }, { key: "onRelationChainModified", value: function(e3) {
        var n3, o3, i3, a3, s3, r3, c3 = this, e3 = e3.dataList;
        S2(e3) || (n3 = [], o3 = [], i3 = [], s3 = !(a3 = []), r3 = "", e3.forEach(function(e4) {
          var t3;
          3 !== e4.pushType && 4 !== e4.pushType || !e4.from || (r3 = e4.from), e4.friendAddAccount && (n3.push.apply(n3, p2(e4.friendAddAccount)), a3.push.apply(a3, p2(e4.friendAddAccount))), e4.friendDelAccount && o3.push.apply(o3, p2(e4.friendDelAccount)), e4.friendApplicationAdded && i3.push.apply(i3, p2(e4.friendApplicationAdded)), e4.friendApplicationDeletedUserIDList && a3.push.apply(a3, p2(e4.friendApplicationDeletedUserIDList)), e4.reportTime && 7 === e4.pushType && (s3 = true), e4.friendUpInfo && (t3 = { dataList: [] }, e4.friendUpInfo.forEach(function(e5) {
            t3.dataList.push({ userID: e5.friendAccount, profileList: p2(e5.sns) });
          }), c3.onFriendProfileModified(t3));
        }), s3 && this._friendApplicationHandler.onApplicationRead(), this._friendApplicationHandler.onApplicationAdded(i3, r3), this._friendApplicationHandler.onApplicationDeleted(a3), this._friendHandler.onFriendAdded(n3), this._friendHandler.onFriendDeleted(o3));
      } }, { key: "isMyFriend", value: function(e3) {
        return this._friendHandler.isMyFriend(e3);
      } }, { key: "filterProfanity", value: function(e3, t3) {
        var n3, o3 = this.get(29);
        return !o3 || (n3 = (o3 = o3.filterText(t3[e3], "sns")).isAllowedToSend, o3 = o3.modifiedText, true === n3 && (t3[e3] = o3, true));
      } }, { key: "onFriendProfileModified", value: function(e3) {
        this._friendHandler.onFriendProfileModified(e3);
      } }, { key: "getLocalFriendList", value: function() {
        var e3 = !(0 < arguments.length && void 0 !== arguments[0]) || arguments[0], t3 = this._friendHandler.getLocalFriendList();
        return e3 ? T2(t3) : t3;
      } }, { key: "getFriendRemark", value: function(e3) {
        return this._friendHandler.getFriendRemark(e3);
      } }, { key: "getFriendList", value: function() {
        return this._friendHandler.pagingGetFriendList();
      } }, { key: "addFriend", value: function(e3) {
        return this._friendHandler.addFriend(e3);
      } }, { key: "deleteFriend", value: function(e3) {
        return this._friendHandler.deleteFriend(e3);
      } }, { key: "checkFriend", value: function(e3) {
        return this._friendHandler.checkFriend(e3);
      } }, { key: "getFriendProfile", value: function(e3) {
        return this._friendHandler.getFriendProfile(e3);
      } }, { key: "updateFriend", value: function(e3) {
        return this._friendHandler.updateFriend(e3);
      } }, { key: "onAddedToFriendGroup", value: function(e3) {
        this._friendHandler.onAddedToFriendGroup(e3);
      } }, { key: "onRemovedFromFriendGroup", value: function(e3) {
        this._friendHandler.onRemovedFromFriendGroup(e3);
      } }, { key: "getLocalFriendApplicationList", value: function() {
        var e3 = this._friendApplicationHandler.getLocalApplicationList();
        return T2(e3);
      } }, { key: "deleteFriendApplication", value: function(e3) {
        return this._friendApplicationHandler.deleteApplication(e3);
      } }, { key: "refuseFriendApplication", value: function(e3) {
        return this._friendApplicationHandler.refuseApplication(e3);
      } }, { key: "acceptFriendApplication", value: function(e3) {
        return this._friendApplicationHandler.acceptApplication(e3);
      } }, { key: "setFriendApplicationRead", value: function(e3) {
        return this._friendApplicationHandler.setApplicationRead(e3);
      } }, { key: "getLocalFriendGroupList", value: function() {
        var e3 = this._friendGroupHandler.getLocalGroupList();
        return T2(e3);
      } }, { key: "createFriendGroup", value: function(e3) {
        return this._friendGroupHandler.createGroup(e3);
      } }, { key: "deleteFriendGroup", value: function(e3) {
        return this._friendGroupHandler.deleteGroup(e3);
      } }, { key: "addToFriendGroup", value: function(e3) {
        return this._friendGroupHandler.addToGroup(e3);
      } }, { key: "removeFromFriendGroup", value: function(e3) {
        return this._friendGroupHandler.removeFromGroup(e3);
      } }, { key: "renameFriendGroup", value: function(e3) {
        return this._friendGroupHandler.renameGroup(e3);
      } }, { key: "updateWhenFriendAdded", value: function(e3) {
        this._friendGroupHandler.updateWhenFriendAdded(e3);
      } }, { key: "updateWhenFriendDeleted", value: function(e3) {
        this._friendGroupHandler.updateWhenFriendDeleted(e3);
      } }, { key: "reset", value: function() {
        M2.l("".concat(this._n, ".reset")), this._friendHandler.reset(), this._friendGroupHandler.reset(), this._friendApplicationHandler.reset();
      } }]), Gr2), nr2 = (t2(Nr2, u2), Us = n2(Nr2), e2(Nr2, [{ key: "isWorkerEnabled", value: function() {
        return this._isWorkerEnabled && Ge2;
      } }, { key: "startWorkerTimer", value: function() {
        M2.l("".concat(this._n, ".startWorkerTimer")), this._workerTimer && this._workerTimer.postMessage("start");
      } }, { key: "stopWorkerTimer", value: function() {
        M2.l("".concat(this._n, ".stopWorkerTimer")), this._workerTimer && this._workerTimer.postMessage("stop");
      } }, { key: "_init", value: function() {
        var e3, t3;
        Ge2 && (e3 = URL.createObjectURL(new Blob(['let interval = -1;onmessage = function(event) {  if (event.data === "start") {    if (interval > 0) {      clearInterval(interval);    }    interval = setInterval(() => {      postMessage("");    }, 1000);    postMessage(interval);  } else if (event.data === "stop") {    clearInterval(interval);    interval = -1;  }};'], { type: "application/javascript; charset=utf-8" })), this._workerTimer = new Worker(e3), (t3 = this)._workerTimer.onmessage = function(e4) {
          e4.data ? (t3._timerID = e4.data, M2.l("".concat(t3._n, "._init seed:").concat(t3._timerID))) : t3._m.onCheckTimer();
        });
      } }, { key: "_onCloudConfig", value: function() {
        var e3 = this.getCloudConfig("enable_worker");
        M2.l("".concat(this._n, "._onCloudConfig enableWorker:").concat(e3)), N2(e3) || "1" === e3 ? !this._isWorkerEnabled && Ge2 && (this._isWorkerEnabled = true, this.startWorkerTimer(), this._m.onWorkerTimerEnabled()) : this._isWorkerEnabled && Ge2 && (this._isWorkerEnabled = false, this.stopWorkerTimer(), this._m.onWorkerTimerDisabled());
      } }, { key: "terminate", value: function() {
        M2.l("".concat(this._n, ".terminate")), this._workerTimer && (this._workerTimer.terminate(), this._workerTimer = null, this._timerID = -1);
      } }, { key: "getTimerID", value: function() {
        return this._timerID;
      } }, { key: "reset", value: function() {
        M2.l("".concat(this._n, ".reset"));
      } }]), Nr2), or2 = (e2(Or2, [{ key: "isValidPurchaseBits", value: function(e3) {
        return e3 && "string" == typeof e3 && 1 <= e3.length && e3.length <= 64 && /[01]{1,64}/.test(e3);
      } }, { key: "parsePurchaseBits", value: function(e3) {
        if (this.isValidPurchaseBits(e3)) {
          this._featureMap.clear();
          for (var t3, n3 = e3.length - 1, o3 = 0; 0 <= n3; n3--, o3++)
            t3 = (o3 < 32 ? new ee2(0, Math.pow(2, o3)) : new ee2(Math.pow(2, o3 - 32), 0)).toString(), "1" === e3[n3] ? this._featureMap.set(t3, true) : this._featureMap.set(t3, false);
        } else
          M2.w("".concat(this._n, ".parsePurchaseBits invalid purchasebits:").concat(e3));
      } }, { key: "hasPurchasedFeature", value: function(e3) {
        return !!this._featureMap.get(e3);
      } }, { key: "isFeatureEnabled", value: function(e3) {
        for (var t3 = parseInt(e3).toString(2), n3 = void 0, o3 = true, i3 = t3.length - 1, a3 = 0; 0 <= i3; i3--, a3++)
          if ("1" === t3.charAt(i3) && (n3 = (a3 < 32 ? new ee2(0, Math.pow(2, a3)) : new ee2(Math.pow(2, a3 - 32), 0)).toString(), !this._featureMap.get(n3))) {
            o3 = false;
            break;
          }
        return M2.l("".concat(this._n, ".isFeatureEnabled decimalNumber:").concat(e3, " key:").concat(n3, " ret:").concat(o3)), T2({ enabled: o3 });
      } }, { key: "isFeatureEnabledForStat", value: function(e3) {
        for (var t3 = parseInt(e3).toString(2), n3 = t3.length - 1, o3 = 0; 0 <= n3; n3--, o3++)
          if ("1" === t3.charAt(n3)) {
            if (i3 = (o3 < 32 ? new ee2(0, Math.pow(2, o3)) : new ee2(Math.pow(2, o3 - 32), 0)).toString(), !this._featureMap.get(i3))
              break;
            var i3, a3 = "", s3 = 0;
            i3 === _2.PLUGIN_TRANSLATE ? (a3 = "plugin_translate", s3 = 16) : i3 === _2.PLUGIN_VOICE_TO_TEXT ? (a3 = "plugin_voice_to_text", s3 = 17) : i3 === _2.PLUGIN_CS ? (a3 = "plugin_cs", s3 = 14) : i3 === _2.PLUGIN_PUSH ? (a3 = "plugin_push", s3 = 13) : i3 === _2.PLUGIN_BOT ? (a3 = "plugin_bot", s3 = 15) : i3 === _2.MSG_REACTION && (a3 = "plugin_emoji_reaction", s3 = 18), "" !== a3 && (i3 = this._commercialConfigM.get(12).getUIPlatform(), new G2(a3).setCode(s3).setUIPlatform(i3).end(), M2.l("".concat(this._n, ".isFeatureEnabledForStat ").concat(a3, " code:").concat(s3, " uiPlatform:").concat(i3)));
          }
      } }, { key: "isSearchCloudMessagesEnabled", value: function() {
        var e3;
        this._isSCMReported || (e3 = this._commercialConfigM.get(12).getUIPlatform(), new G2("plugin_search").setCode(6).setUIPlatform(e3).end(), this._isSCMReported = true);
      } }, { key: "clear", value: function() {
        this._featureMap.clear(), this._isSCMReported = false;
      } }]), Or2), ir2 = (e2(Rr2, [{ key: "_canFetch", value: function() {
        return this.get(12).isLoggedIn() ? !this._isFetching && Date.now() >= this._expiredTime : (this._expiredTime = Date.now() + 2e3, false);
      } }, { key: "onCheckTimer", value: function(e3) {
        this._canFetch() && this.fetchConfig();
      } }, { key: "fetchConfig", value: function() {
        var t3, e3, n3 = this, o3 = this._canFetch(), i3 = "".concat(this._n, ".fetchConfig");
        M2.l("".concat(i3, " canFetch:").concat(o3)), o3 && (t3 = new G2("fetchCommercialConfig"), o3 = this.get(12).getSDKAppID(), e3 = this.get(20), this._isFetching = true, e3.req({ P: k2.FETCH_COMMERCIAL_CONFIG, data: { SDKAppID: o3 } }).then(function(e4) {
          t3.setMessage("purchaseBits:".concat(e4.data.purchaseBits)).end(), M2.l("".concat(i3, " ok.")), n3._parseConfig(e4.data), n3._isFetching = false;
        }).catch(function(e4) {
          t3.setError(e4).end(), n3._isFetching = false;
        }));
      } }, { key: "onPushedConfig", value: function(e3) {
        var t3 = "".concat(this._n, ".onPushedConfig data:").concat(JSON.stringify(e3));
        M2.l("".concat(t3)), new G2("pushedCommercialConfig").setMessage("purchaseBits:".concat(e3.purchaseBits)).end(), this._parseConfig(e3);
      } }, { key: "_parseConfig", value: function(e3) {
        var t3 = "".concat(this._n, "._parseConfig"), n3 = e3.errorCode, o3 = e3.errorMessage, i3 = e3.purchaseBits, a3 = e3.expiredTime;
        0 === n3 ? (this._purchasedFeatureHandler.parsePurchaseBits(i3), this._expiredTime = Date.now() + 1e3 * a3) : N2(n3) ? (M2.l("".concat(t3, " failed. Invalid message format:"), e3), this._setExpiredTimeOnResponseError(36e5)) : (M2.e("".concat(t3, " errorCode:").concat(n3, " errorMessage:").concat(o3)), this._setExpiredTimeOnResponseError(12e4));
      } }, { key: "_setExpiredTimeOnResponseError", value: function(e3) {
        this._expiredTime = Date.now() + e3;
      } }, { key: "canIUse", value: function(e3) {
        return this._purchasedFeatureHandler.hasPurchasedFeature(e3);
      } }, { key: "isFeatureEnabled", value: function(e3) {
        return this._purchasedFeatureHandler.isFeatureEnabled(e3);
      } }, { key: "isFeatureEnabledForStat", value: function(e3) {
        this._purchasedFeatureHandler.isFeatureEnabledForStat(e3);
      } }, { key: "isSearchCloudMessagesEnabled", value: function() {
        this._purchasedFeatureHandler.isSearchCloudMessagesEnabled();
      } }, { key: "get", value: function(e3) {
        return this._m.get(e3);
      } }, { key: "reset", value: function() {
        M2.l("".concat(this._n, ".reset")), this._expiredTime = 0, this._isFetching = false, this._purchasedFeatureHandler.clear();
      } }]), Rr2), ar2 = (t2(Ar2, u2), Ps = n2(Ar2), e2(Ar2, [{ key: "registerPlugin", value: function(e3) {
        var t3, n3, o3, i3, a3, s3, r3, c3, u3, l3, d3, p3, _3;
        Ie2 ? (this._offlinePushPlugin = e3["tim-offline-push-plugin"], t3 = (_3 = e3.offlinePushConfig || {}).huaweiBusinessID, n3 = _3.xiaomiBusinessID, o3 = _3.xiaomiAppID, i3 = _3.xiaomiAppKey, a3 = _3.meizuBusinessID, s3 = _3.meizuAppID, r3 = _3.meizuAppKey, c3 = _3.vivoBusinessID, u3 = _3.oppoBusinessID, l3 = _3.oppoAppKey, d3 = _3.oppoAppSecret, p3 = _3.honorBusinessID, _3 = _3.iosBusinessID, this._androidPushConfig.huaweiPushBussinessId = t3, this._androidPushConfig.xiaomiPushBussinessId = n3, this._androidPushConfig.xiaomiPushAppId = o3, this._androidPushConfig.xiaomiPushAppKey = i3, this._androidPushConfig.meizuPushBussinessId = a3, this._androidPushConfig.meizuPushAppId = s3, this._androidPushConfig.meizuPushAppKey = r3, this._androidPushConfig.vivoPushBussinessId = c3, this._androidPushConfig.oppoPushBussinessId = u3, this._androidPushConfig.oppoPushAppKey = l3, this._androidPushConfig.oppoPushAppSecret = d3, this._androidPushConfig.honorPushBussinessId = p3, new G2("registerPlugin").setMessage("tim-offline-push-plugin").setMoreMessage("isExist:".concat(!N2(this._offlinePushPlugin))).end(true), M2.l("".concat(this._n, ".").concat("registerPlugin", " ok. offlinePushConfig:").concat(JSON.stringify(e3.offlinePushConfig))), this._iosBusinessID = _3, this._setAppShowListener()) : this.warn("OfflinePushInUniapp");
      } }, { key: "init", value: function() {
        this._isWebUniapp = this.getUniAppPlatform(), this._getDeviceToken();
      } }, { key: "_getDeviceToken", value: function() {
        var c3, u3 = this, l3 = "".concat(this._n, ".").concat("_getDeviceToken");
        lt2(this._offlinePushPlugin.getDeviceToken) ? (c3 = "androidPushConfig:".concat(JSON.stringify(this._androidPushConfig), ", iosBusinessID:").concat(this._iosBusinessID), M2.l("".concat(l3, " start. ").concat(c3)), new G2("_getDeviceToken").setMessage("".concat(c3)).end(true), this._offlinePushPlugin.getDeviceToken(this._androidPushConfig, function(e3) {
          var t3, n3, o3, i3, a3 = new G2("getDeviceTokenRes"), s3 = e3.code, r3 = e3.msg;
          0 === s3 ? (t3 = (i3 = e3.data).deviceToken, n3 = i3.deviceBrand, o3 = i3.deviceType, i3 = i3.bussinessId, u3._deviceToken = t3, u3._businessID = i3 || u3._iosBusinessID, c3 = "deviceToken:".concat(t3, ", deviceBrand:").concat(n3 || o3, ", businessID:").concat(u3._businessID), M2.l("".concat(l3, " ok. ").concat(c3)), a3.setMessage(c3).end(true), u3._setToken()) : (a3.setMessage("code:".concat(s3, ", msg:").concat(r3)).end(true), M2.e("".concat(l3, " failed. error:"), e3));
        })) : M2.e("".concat(l3, " getDeviceToken is not a function"));
      } }, { key: "canIUseOfflinePush", value: function() {
        return Ie2 && !N2(this._offlinePushPlugin);
      } }, { key: "_setAppShowListener", value: function() {
        var t3 = this, n3 = "".concat(this._n, ".").concat("_setAppShowListener");
        N2(this._offlinePushPlugin) ? M2.e("".concat(n3, " offlinePushPlugin is undefined")) : lt2(this._offlinePushPlugin.setAppShowListener) ? (new G2("_setAppShowListener").end(true), M2.l("".concat(n3, " start")), this._offlinePushPlugin.setAppShowListener(function(e3) {
          e3 = (e3 || {}).appShow;
          new G2("setAppShowListenerRes").setMessage("appShow:".concat(e3)).end(true), M2.l("".concat(n3, " ok. appShow:").concat(e3)), t3._m.isReady() && (0 === e3 ? (t3._getConvUnreadCount(), t3._onBackground()) : 1 === e3 && t3._onForeground());
        })) : M2.e("".concat(n3, " setAppShowListener is not a function"));
      } }, { key: "getDeviceBrand", value: function() {
        var e3;
        if (!N2(this._offlinePushPlugin) && lt2(this._offlinePushPlugin.getDeviceType))
          return e3 = (this._offlinePushPlugin.getDeviceType() || {}).deviceType, M2.l("".concat(this._n, ".getDeviceBrand ok. deviceType:").concat(e3)), e3;
      } }, { key: "_setToken", value: function() {
        var t3 = "".concat(this._n, "._setToken"), e3 = this.get(12), n3 = 1, o3 = "", i3 = "", a3 = (S2(this._deviceToken) && (n3 = 0), this.getUniAppPlatform()), s3 = this.getDeviceBrand(), r3 = (a3 === ne2.IOS || a3 === ne2.IPAD || a3 === ne2.MAC ? i3 = this._deviceToken : a3 === ne2.ANDROID && (o3 = this._deviceToken), new G2("offlinePushSetToken")), a3 = "deviceToken:".concat(i3 || o3, ", businessID:").concat(this._businessID, ", ") + "deviceBrand:".concat(s3, ", isWebUniapp:").concat(this._isWebUniapp, ", pushMsg:").concat(n3, ", platform:").concat(a3);
        return r3.setMessage("".concat(a3)), M2.l("".concat(t3, " ").concat(a3)), this.req({ P: k2.SET_TOKEN, data: { tokenID: o3, pushMsg: n3, sdkAppID: e3.getSDKAppID(), businessID: parseInt(this._businessID), deviceBrand: s3, deviceToken: i3, isWebUniapp: this._isWebUniapp } }).then(function(e4) {
          return r3.end(), M2.l("".concat(t3, " ok")), e4;
        }).catch(function(e4) {
          return r3.setError(e4).end(), M2.e("".concat(t3, " failed. error:"), e4), D2(e4);
        });
      } }, { key: "_getConvUnreadCount", value: function() {
        var t3 = this;
        this._c2cUnreadCount = 0, this._groupUnreadCount = 0, this.get(11).getLocalConvList().forEach(function(e3) {
          e3.type === A2.CONV_C2C && (t3._c2cUnreadCount += e3.unreadCount), e3.type === A2.CONV_GROUP && (t3._groupUnreadCount += e3.unreadCount);
        });
      } }, { key: "_onBackground", value: function() {
        var t3 = this, n3 = "".concat(this._n, ".").concat("_onBackground"), o3 = new G2("_onBackground");
        this.req({ P: k2.STAT_BACKGROUND, data: { c2cUnreadCount: this._c2cUnreadCount, groupUnreadCount: this._groupUnreadCount, isWebUniapp: this._isWebUniapp } }).then(function(e3) {
          return o3.setMessage("c2cUnreadCount: ".concat(t3._c2cUnreadCount, ", groupUnreadCount: ").concat(t3._groupUnreadCount)).end(), M2.l("".concat(n3, " ok")), e3;
        }).catch(function(e3) {
          o3.setError(e3).end(), M2.e("".concat(n3, " failed. error:"), e3);
        });
      } }, { key: "_onForeground", value: function() {
        var t3 = "".concat(this._n, ".").concat("_onForeground"), n3 = new G2("_onForeground");
        this.req({ P: k2.STAT_FOREGROUND, data: { isWebUniapp: this._isWebUniapp } }).then(function(e3) {
          return n3.end(), M2.l("".concat(t3, " ok")), e3;
        }).catch(function(e3) {
          n3.setError(e3).end(), M2.e("".concat(t3, " failed. error:"), e3);
        });
      } }, { key: "getUniAppPlatform", value: function() {
        var e3 = uni.getSystemInfoSync().platform, t3 = this.getDeviceBrand();
        return "ios" === e3 ? ne2.IOS : "android" === e3 ? ne2.ANDROID : 1002 === t3 ? ne2.IPAD : 1001 === t3 ? ne2.MAC : void 0;
      } }, { key: "reset", value: function() {
        this._deviceToken = "", this._businessID = 0, this._c2cUnreadCount = 0, this._groupUnreadCount = 0, this._isWebUniapp = 0, M2.l("".concat(this._n, ".reset"));
      } }]), Ar2), sr2 = (t2(kr2, u2), Gs = n2(kr2), e2(kr2, [{ key: "registerPlugin", value: function(e3) {
        var t3, n3, o3;
        Ie2 ? (t3 = "".concat(this._n, ".").concat("registerPlugin"), this._pushPlugin = e3["tim-push"], this._getDeviceInfo(), n3 = (o3 = e3.pushConfig || {}).androidConfig, o3 = o3.iOSConfig, ut2(n3) && (this._androidPushConfig = n3[this._deviceInfo.packageName]), n3 = (o3 || {}).iOSBusinessID, this._iOSBusinessID = n3, o3 = !N2(this._pushPlugin), new G2("registerPlugin").setMessage(this._pluginName).setMoreMessage("isExisted:".concat(o3)).end(true), M2.l("".concat(t3, " ok. pushConfig:").concat(JSON.stringify(e3.pushConfig))), o3 ? (this._setAppShowListener(), this._setPushEventReportListener()) : M2.e("".concat(t3, " ").concat(this._pluginName, " is undefined"))) : this.warn("TIMPushInUniapp");
      } }, { key: "init", value: function() {
        this._isWebUniapp = this.getUniAppPlatform(), this._reportEventCacheList(), this._getDeviceToken(), this.get(27).isFeatureEnabledForStat(Math.pow(2, 41));
      } }, { key: "_reportEventCacheList", value: function() {
        var a3 = this, s3 = "".concat(this._n, ".").concat("_reportEventCacheList");
        lt2(this._pushPlugin.getPushEventCacheList) ? (new G2("_reportEventCacheList").end(true), this._pushPlugin.getPushEventCacheList(function(e3) {
          var t3 = e3.code, n3 = e3.data.eventList, o3 = new G2("getPushEventCacheListRes");
          if (o3.setCode(t3), 0 !== t3)
            o3.setMessage("res:".concat(JSON.stringify(e3))).end(true), M2.e("".concat(s3, " failed. error:").concat(JSON.stringify(e3)));
          else {
            t3 = n3.length < 10 ? "eventList:".concat(JSON.stringify(n3)) : "eventList.length:".concat(n3.length);
            M2.l("".concat(s3, " ok. ").concat(t3)), o3.setMessage(t3).end(true);
            for (var i3 = y2(y2({}, e3.data), {}, { eventList: [] }); 0 < n3.length; )
              i3.eventList = n3.splice(0, 40), a3._pushReport(i3);
          }
        })) : M2.e("".concat(this._pluginName, ".getPushEventCacheList is not a function"));
      } }, { key: "_getDeviceToken", value: function() {
        var r3, c3 = this, u3 = "".concat(this._n, ".").concat("_getDeviceToken");
        lt2(this._pushPlugin.getDeviceToken) ? (r3 = "androidPushConfig:".concat(JSON.stringify(this._androidPushConfig), " iOSBusinessID:").concat(this._iOSBusinessID), M2.l("".concat(u3, " start. ").concat(r3)), new G2("_getDeviceToken").setMessage("".concat(r3)).end(true), this._pushPlugin.getDeviceToken(this._androidPushConfig, function(e3) {
          var t3, n3, o3, i3 = e3.code, a3 = e3.msg, s3 = new G2("getDeviceTokenRes");
          s3.setCode(i3), 0 === i3 ? (t3 = (i3 = e3.data).deviceToken, n3 = i3.deviceBrand, o3 = i3.deviceType, i3 = i3.bussinessId, c3._deviceToken = t3, c3._businessID = i3 || c3._iOSBusinessID, r3 = "deviceToken:".concat(t3, " deviceBrand:").concat(n3 || o3, " businessID:").concat(c3._businessID), M2.l("".concat(u3, " ok. ").concat(r3)), s3.setMessage(r3).end(true), c3._setToken()) : (s3.setMessage(a3).end(true), M2.e("".concat(u3, " failed. error:").concat(JSON.stringify(e3))));
        })) : M2.e("".concat(this._pluginName, ".getDeviceToken is not a function"));
      } }, { key: "_getDeviceInfo", value: function() {
        var e3, t3, n3, o3, i3 = "".concat(this._n, ".").concat("_getDeviceInfo");
        lt2(this._pushPlugin.getDeviceInfo) ? (o3 = (e3 = this._pushPlugin.getDeviceInfo()).code, t3 = e3.data, (n3 = new G2("_getDeviceInfo")).setCode(o3), 0 === o3 ? (this._deviceInfo = y2(y2({}, this._deviceInfo), t3), this._deviceInfo.pushVersion || (this._deviceInfo.pushVersion = "1.0.1"), o3 = "deviceInfo:".concat(JSON.stringify(this._deviceInfo)), M2.l("".concat(i3, " ok. ").concat(o3)), n3.setMessage(o3).end(true)) : (n3.setMessage("deviceInfoRes:".concat(JSON.stringify(e3))).end(true), M2.e("".concat(i3, " failed. error:").concat(JSON.stringify(e3))))) : M2.e("".concat(this._pluginName, ".getDeviceInfo is not a function"));
      } }, { key: "canIUseTIMPush", value: function() {
        return Ie2 && !N2(this._pushPlugin);
      } }, { key: "_setAppShowListener", value: function() {
        var t3 = this, n3 = "".concat(this._n, ".").concat("_setAppShowListener");
        lt2(this._pushPlugin.setAppShowListener) ? (new G2("_setAppShowListener").end(true), M2.l("".concat(n3, " start")), this._pushPlugin.setAppShowListener(function(e3) {
          e3 = (e3 || {}).appShow;
          new G2("setAppShowListenerRes").setMessage("appShow:".concat(e3)).end(true), M2.l("".concat(n3, " ok. appShow:").concat(e3)), t3._m.isReady() && (0 === e3 ? (t3._getConvUnreadCount(), t3._onBackground()) : 1 === e3 && t3._onForeground());
        })) : M2.e("".concat(this._pluginName, ".setAppShowListener is not a function"));
      } }, { key: "_setPushEventReportListener", value: function() {
        var a3 = this, s3 = "".concat(this._n, ".").concat("_setPushEventReportListener");
        lt2(this._pushPlugin.setPushEventReportListener) ? (new G2("_setPushEventReportListener").end(true), this._pushPlugin.setPushEventReportListener(function(e3) {
          var t3 = e3.code, n3 = e3.data, o3 = n3.eventList, i3 = new G2("setPushEventReportListenerRes");
          i3.setCode(t3), 0 === t3 ? (t3 = "eventList:".concat(JSON.stringify(o3)), M2.l("".concat(s3, " ok. ").concat(t3)), i3.setMessage(t3).end(true), a3._m.isReady() && O2(o3) && 0 < o3.length && a3._pushReport(n3)) : (i3.setMessage("res:".concat(JSON.stringify(e3))).end(true), M2.e("".concat(s3, " failed. error:").concat(JSON.stringify(e3))));
        })) : M2.e("".concat(this._pluginName, ".setPushEventReportListener is not a function"));
      } }, { key: "getDeviceBrand", value: function() {
        var e3;
        if (!N2(this._pushPlugin) && lt2(this._pushPlugin.getDeviceType))
          return e3 = (this._pushPlugin.getDeviceType() || {}).deviceType, M2.l("".concat(this._n, ".getDeviceBrand ok. deviceType:").concat(e3)), e3;
      } }, { key: "_setToken", value: function() {
        var t3 = "".concat(this._n, ".").concat("_setToken"), e3 = this.get(12), n3 = 1, o3 = "", i3 = "", a3 = (S2(this._deviceToken) && (n3 = 0), this.getUniAppPlatform()), s3 = this.getDeviceBrand(), a3 = (a3 === ne2.IOS || a3 === ne2.IPAD || a3 === ne2.MAC ? i3 = this._deviceToken : a3 === ne2.ANDROID && (o3 = this._deviceToken), y2({ tokenID: o3, pushMsg: n3, sdkAppID: e3.getSDKAppID(), businessID: parseInt(this._businessID), deviceBrand: s3, deviceToken: i3, isWebUniapp: this._isWebUniapp }, this._deviceInfo)), r3 = new G2("_setToken"), o3 = "data:".concat(JSON.stringify(a3));
        r3.setMessage("".concat(o3)), M2.l("".concat(t3, " ").concat(o3)), this.req({ P: k2.SET_TOKEN, data: a3 }).then(function() {
          r3.end(), M2.w("".concat(t3, " ok"));
        }).catch(function(e4) {
          r3.setError(e4).end(), M2.e("".concat(t3, " failed. error:"), e4), D2(e4);
        });
      } }, { key: "_getConvUnreadCount", value: function() {
        var t3 = this;
        this._c2cUnreadCount = 0, this._groupUnreadCount = 0, this.get(11).getLocalConvList().forEach(function(e3) {
          e3.type === A2.CONV_C2C && (t3._c2cUnreadCount += e3.unreadCount), e3.type === A2.CONV_GROUP && (t3._groupUnreadCount += e3.unreadCount);
        });
      } }, { key: "_onBackground", value: function() {
        var e3 = this, t3 = "".concat(this._n, ".").concat("_onBackground"), n3 = new G2("_onBackground");
        this.req({ P: k2.STAT_BACKGROUND, data: { c2cUnreadCount: this._c2cUnreadCount, groupUnreadCount: this._groupUnreadCount, isWebUniapp: this._isWebUniapp } }).then(function() {
          n3.setMessage("c2cUnreadCount:".concat(e3._c2cUnreadCount, " groupUnreadCount:").concat(e3._groupUnreadCount)).end(), M2.l("".concat(t3, " ok"));
        }).catch(function(e4) {
          n3.setError(e4).end(), M2.e("".concat(t3, " failed. error:"), e4);
        });
      } }, { key: "_onForeground", value: function() {
        var t3 = "".concat(this._n, ".").concat("_onForeground"), n3 = new G2("_onForeground");
        this.req({ P: k2.STAT_FOREGROUND, data: { isWebUniapp: this._isWebUniapp } }).then(function() {
          n3.end(), M2.l("".concat(t3, " ok"));
        }).catch(function(e3) {
          n3.setError(e3).end(), M2.e("".concat(t3, " failed. error:"), e3);
        });
      } }, { key: "_pushReport", value: function(e3) {
        var t3 = this, n3 = "".concat(this._n, ".").concat("_pushReport"), o3 = new G2("_pushReport");
        this.req({ P: k2.PUSH_REPORT, data: { eventList: e3.eventList } }).then(function() {
          o3.end(), t3._notifyReportSuccess(e3);
        }).catch(function(e4) {
          o3.setError(e4).end(), M2.e("".concat(n3, " failed. error:"), e4);
        });
      } }, { key: "_notifyReportSuccess", value: function(e3) {
        !N2(this._pushPlugin) && lt2(this._pushPlugin.notifyReportSuccess) && (this._pushPlugin.notifyReportSuccess(e3), M2.l("".concat(this._n, "._notifyReportSuccess ok")));
      } }, { key: "getUniAppPlatform", value: function() {
        var e3 = uni.getSystemInfoSync().platform, t3 = this.getDeviceBrand();
        return "ios" === e3 ? ne2.IOS : "android" === e3 ? ne2.ANDROID : 1002 === t3 ? ne2.IPAD : 1001 === t3 ? ne2.MAC : void 0;
      } }, { key: "reset", value: function() {
        this._deviceToken = "", this._businessID = 0, this._c2cUnreadCount = 0, this._groupUnreadCount = 0, this._isWebUniapp = 0, M2.l("".concat(this._n, ".reset"));
      } }]), kr2), rr2 = (t2(Sr2, u2), Ns = n2(Sr2), e2(Sr2, [{ key: "init", value: function() {
        var e3 = this.get(18).getPlugin("tim-profanity-filter-plugin");
        e3 && (this._plugin = new e3({ logger: M2, isArray: O2, isMap: st2, isDevMode: this.isDevMode() }), this._getLexicon());
      } }, { key: "onCheckTimer", value: function() {
        this._plugin && this._canIUseLexicon && this.isLoggedIn() && !this._isFetching && Date.now() >= this._expiredTime && this._getLexicon();
      } }, { key: "filterMessage", value: function(e3, t3) {
        var n3 = true;
        if (this._plugin && this._canIUseLexicon && (!t3 || !t3.messageControlInfo || true !== t3.messageControlInfo.excludedFromContentModeration)) {
          var t3 = e3.type, o3 = e3.conversationType;
          if (t3 === A2.MSG_TEXT || t3 === A2.MSG_CUSTOM) {
            var i3, a3 = "".concat(this._n, ".filterMessage");
            if (M2.l("".concat(a3)), t3 === A2.MSG_TEXT) {
              if (o3 === A2.CONV_C2C ? i3 = "c2c_text_message" : o3 === A2.CONV_GROUP && (i3 = "group_text_message"), !this._isConfigOn(i3))
                return n3;
              var s3 = this._plugin.filter(e3.payload.text), r3 = s3.type, s3 = s3.modifiedText;
              1 === r3 ? n3 = false : 2 === r3 && (e3.payload.text = s3);
            } else if (t3 === A2.MSG_CUSTOM) {
              if (o3 === A2.CONV_C2C ? i3 = "c2c_custom_message" : o3 === A2.CONV_GROUP && (i3 = "group_custom_message"), !this._isConfigOn(i3))
                return n3;
              r3 = this._plugin.filter(e3.payload.data), s3 = this._plugin.filter(e3.payload.description), t3 = this._plugin.filter(e3.payload.extension);
              1 === r3.type || 1 === s3.type || 1 === t3.type ? n3 = false : (2 === r3.type && (e3.payload.data = r3.modifiedText), 2 === s3.type && (e3.payload.description = s3.modifiedText), 2 === t3.type && (e3.payload.extension = t3.modifiedText));
            }
            M2.l("".concat(a3, " done. isAllowedToSend:").concat(n3));
          }
        }
        return n3;
      } }, { key: "filterText", value: function(e3, t3) {
        var n3 = "".concat(this._n, ".filterText"), o3 = { isAllowedToSend: true, modifiedText: e3 };
        return this._plugin && this._canIUseLexicon && this._isConfigOn(t3) && (M2.l("".concat(n3)), e3 = (t3 = this._plugin.filter(e3)).type, t3 = t3.modifiedText, 1 === e3 ? o3.isAllowedToSend = false : 2 === e3 && (o3.modifiedText = t3), M2.l("".concat(n3, " done. ret:"), o3)), o3;
      } }, { key: "_getLexicon", value: function() {
        var l3 = this, d3 = new G2("profanityFilter"), p3 = "".concat(this._n, "._getLexicon");
        this._isFetching = true, this.req({ P: k2.GET_PROFANITY_LIST, data: { startIndex: this._startIndex, version: this._version } }).then(function(e3) {
          var e3 = e3.data, t3 = e3.errorInfo, n3 = e3.filterConfig, o3 = e3.lexicon, i3 = e3.strToken, a3 = e3.completeFlag, s3 = e3.nextStartIndex, r3 = e3.version, e3 = e3.expiredTime, c3 = t3.errorCode, u3 = t3.errorMessage;
          return 0 !== c3 ? (l3._isFetching = false, M2.w("".concat(p3, " failed. error:"), t3), void d3.setCode(c3).setMessage(u3).end()) : (l3._onFilterConfig(n3), l3._getToken(i3), 1 === a3 ? (M2.l("".concat(p3, " done. version:").concat(r3, " expiredTime:").concat(e3)), l3._version = r3, l3._canIUseLexicon = true, l3._isFetching = false, l3._expiredTime = Date.now() + 1e3 * e3, void l3._plugin.onLexiconCompleted(o3)) : (l3._startIndex = s3, l3._plugin.onLexiconSliced(o3), void l3._getLexicon()));
        }).catch(function(e3) {
          d3.setError(e3).end(), l3._isFetching = false, M2.l("".concat(p3, " failed. error:"), e3);
        });
      } }, { key: "_onFilterConfig", value: function(t3) {
        var n3 = this;
        S2(t3) || (this._filterConfigMap.clear(), Object.keys(t3).forEach(function(e3) {
          n3._filterConfigMap.set(e3, t3[e3]);
        }), M2.l("".concat(this._n, "._onFilterConfig. keys:").concat(Array.from(this._filterConfigMap.keys()), " values:").concat(Array.from(this._filterConfigMap.values()))));
      } }, { key: "_isConfigOn", value: function(e3) {
        return 1 === this._filterConfigMap.get(e3);
      } }, { key: "_getToken", value: function(e3) {
        if (m2(e3)) {
          var t3 = e3.length, n3 = "";
          if (t3 % 2 == 0)
            for (var o3 = 0; o3 <= t3 - 1; o3 += 2)
              n3 = (n3 += e3[o3 + 1]) + e3[o3];
          else {
            for (var i3 = 0; i3 < t3 - 1; i3 += 2)
              n3 = (n3 += e3[i3 + 1]) + e3[i3];
            n3 += e3[t3 - 1];
          }
          this._plugin.onToken(n3);
        }
      } }, { key: "reset", value: function() {
        M2.l("".concat(this._n, ".reset")), this._plugin && (this._plugin.reset(), this._plugin = null), this._filterConfigMap.clear(), this._startIndex = 0, this._version = 0, this._canIUseLexicon = false, this._isFetching = false, this._expiredTime = 0;
      } }]), Sr2), cr2 = (e2(Lr2, [{ key: "_onCloudConfig", value: function() {
        var t3 = this, e3 = this._m.get(23).getCloudConfig("rtc_cmd");
        N2(e3) || ((e3 = JSON.parse(e3)).forEach(function(e4) {
          t3._TRTCCommandList.includes(e4) || t3._TRTCCommandList.push(e4);
        }), this._setTRTCCommandMap());
      } }, { key: "_setTRTCCommandMap", value: function() {
        for (var e3, t3 = 0, n3 = this._TRTCCommandList.length; t3 < n3; t3++)
          e3 = this._TRTCCommandList[t3].split(".")[0], this._TRTCCommandMap.set(e3, 1);
      } }, { key: "onRoomCustomDataReceived", value: function(e3) {
        this._m.getOEmitInst().emit(h2.ROOM_CUSTOM_DATA_RECEIVED, e3);
      } }, { key: "sendTRTCCustomData", value: function(e3) {
        var t3 = e3.serviceCommand, e3 = e3.data, n3 = "".concat(a2.NAME.TUIROOM_SVR, ".*");
        return N2(t3) || (n3 = t3), this._isValidServiceCommand(n3) ? this._trans({ servcmd: n3, data: e3 }) : D2({ code: L2.INVALID_TRTC_CMD });
      } }, { key: "_trans", value: function(e3) {
        M2.d("".concat(this._n, "._trans. options:").concat(JSON.stringify(e3)));
        var t3 = e3.servcmd, e3 = e3.data;
        return this._m.get(20).trans({ servcmd: t3, data: m2(e3) ? JSON.parse(e3) : e3 });
      } }, { key: "_isValidServiceCommand", value: function(e3) {
        return e3.endsWith(".*") ? this._TRTCCommandList.includes(e3) : (e3 = e3.split(".")[0], this._TRTCCommandMap.has(e3));
      } }, { key: "isTRTCCommand", value: function(e3) {
        e3 = e3.split(".")[0];
        return this._TRTCCommandMap.has(e3);
      } }, { key: "reset", value: function() {
        M2.l("".concat(this._n, ".reset"));
      } }]), Lr2), ur2 = (e2(Er2, [{ key: "_init", value: function() {
        var e3, t3 = this._getStorageModule().getItem(this.TIM_ERROR_ASSISTANCE, false);
        if (t3) {
          try {
            e3 = JSON.parse(t3);
          } catch (e4) {
            this._getStorageModule().removeItem(this.TIM_ERROR_ASSISTANCE, false), M2.w("".concat(this._n, "._init error:"), e4);
          }
          e3 && (this._needToUpdate(e3) ? this._fetch() : this._fillMap(e3.message));
        } else
          this._fetch();
      } }, { key: "_needToUpdate", value: function(e3) {
        var t3 = e3.localSavedTime, e3 = e3.localSavedVersion, t3 = t3 && (/* @__PURE__ */ new Date()).getTime() - t3 >= this.STORAGE_EXPIRES_TIME, e3 = !e3 || "3.4.7" !== e3;
        return M2.l("".concat(this._n, "._needToUpdate isTimeout:").concat(t3, " isDifferentVersion:").concat(e3)), t3 || e3;
      } }, { key: "_fetch", value: function() {
        var e3, t3, n3, o3, i3, a3;
        this._m.get(12).isPrivateNetWork() || (e3 = "https://web.sdk.qcloud.com/im/download/error-message/v3/0.0.6/tim-error-message.txt", t3 = "application/x-www-form-urlencoded;charset=UTF-8", n3 = "".concat(this._n, "._fetch ok in"), o3 = this, v2 ? I2.request({ url: e3, method: "GET", timeout: 3e3, header: { "content-type": t3 }, dataType: "text", success: function(e4) {
          o3._fillAndSave(e4.data), M2.l("".concat(n3, " mini program"));
        }, fail: function() {
        } }) : (i3 = new XMLHttpRequest(), a3 = setTimeout(function() {
          i3.abort();
        }, 3e3), i3.onreadystatechange = function() {
          4 === i3.readyState && (clearTimeout(a3), 200 !== i3.status && 304 !== i3.status || (M2.l("".concat(n3, " browser")), o3._fillAndSave(i3.responseText)));
        }, i3.open("GET", e3, true), i3.setRequestHeader("Content-type", t3), i3.send()));
      } }, { key: "_fillAndSave", value: function(e3) {
        this._fillMap(e3), this._getStorageModule().setItem(this.TIM_ERROR_ASSISTANCE, JSON.stringify({ message: e3, localSavedTime: (/* @__PURE__ */ new Date()).getTime(), localSavedVersion: "3.4.7" }), true, false);
      } }, { key: "_getStorageModule", value: function() {
        return this._m.get(13);
      } }, { key: "_fillMap", value: function(e3) {
        this._map.clear();
        for (var t3, n3, o3 = e3.split(";\n"), i3 = o3.length, a3 = new RegExp(/'/g), s3 = 0; s3 < i3; s3++)
          if (n3 = o3[s3].indexOf(":"), t3 = o3[s3].slice(0, n3), n3 = o3[s3].slice(n3 + 1, o3[s3].length), !t3.startsWith("//")) {
            if (N2(n3))
              continue;
            this._map.set(t3, n3.replace(a3, ""));
          }
      } }, { key: "get", value: function(e3) {
        var t3 = e3.isIntl, n3 = e3.key, o3 = e3.replacement1, e3 = e3.replacement2, t3 = "".concat(n3, t3 ? "_en" : "_cn"), n3 = (!this._map.has(t3) && this._map.has(n3) && (t3 = n3), "");
        return this._map.has(t3) && (n3 = this._map.get(t3), N2(o3) || (n3 = n3.replace("$replacement1", o3)), N2(e3) || (n3 = n3.replace("$replacement2", e3))), n3;
      } }, { key: "reset", value: function() {
        M2.l("".concat(this._n, ".reset"));
      } }]), Er2), lr2 = (e2(Dr2, [{ key: "onNewMessageList", value: function(e3) {
        var n3 = this;
        e3.forEach(function(e4) {
          var t3 = n3.getPayloadData(e4);
          t3 && n3._handleActionType(t3, e4);
        });
      } }, { key: "onMessageModified", value: function(e3) {
        var n3 = this;
        e3.forEach(function(e4) {
          var t3 = n3.getPayloadData(e4);
          t3 && n3._onInvitationModified(t3, e4);
        });
      } }, { key: "getPayloadData", value: function(t3) {
        var n3 = "".concat(this._n, ".getPayloadData"), t3 = t3.payload.data;
        try {
          return JSON.parse(t3);
        } catch (e3) {
          return M2.e("".concat(n3, " JSON parse error. signalingData:").concat(t3)), null;
        }
      } }, { key: "_handleActionType", value: function(e3, t3) {
        switch (e3.actionType) {
          case Q2.ACTION_TYPE_INVITE:
            this._onNewInvitationReceived(e3, t3);
            break;
          case Q2.ACTION_TYPE_REJECT_INVITE:
            this._onInviteeRejected(e3);
            break;
          case Q2.ACTION_TYPE_ACCEPT_INVITE:
            this._onInviteeAccepted(e3);
            break;
          case Q2.ACTION_TYPE_CANCEL_INVITE:
            this._onInvitationCancelled(e3);
            break;
          case Q2.ACTION_TYPE_INVITE_TIMEOUT:
            this._onInvitationTimeout(e3);
        }
      } }, { key: "_genBaseEmitData", value: function(e3) {
        return { inviteID: e3.inviteID, inviter: e3.inviter, groupID: e3.groupID, data: e3.data || "" };
      } }, { key: "_onNewInvitationReceived", value: function(e3, t3) {
        var n3 = "".concat(this._n, "._onNewInvitationReceived"), o3 = e3.inviteID, i3 = e3.inviteeList, a3 = e3.groupID, s3 = e3.inviter, r3 = this._sigM.getMyUserID(), c3 = i3.includes(r3), u3 = e3.timeout, l3 = (Ve2().getTime() - 1e3 * t3.time) / 1e3, n3 = (0 < u3 && 0 < l3 && l3 < u3 && (u3 -= l3), "".concat(n3, " myselfIncluded:").concat(c3, " groupID:").concat(a3, " signalObj:").concat(JSON.stringify(e3)));
        M2.l("".concat(n3, " timeout:").concat(u3, "s delta:").concat(l3, "s")), !(a3 && c3 || !a3) || (n3 = this._sigM.getInviteInfo(o3)) && n3 === e3 || (n3 || this._sigM.setInviteInfo(o3, y2(y2({}, e3), {}, { message: t3 })), this._sigM.emitEvent(Q2.NEW_INVITATION_RECEIVED, y2(y2({}, this._genBaseEmitData(e3)), {}, { inviteeList: i3 })), s3 !== r3 && this._sigM.startTimer(y2(y2({}, e3), {}, { timeout: u3 })));
      } }, { key: "_onInviteeRejected", value: function(e3) {
        var t3 = "".concat(this._n, "._onInviteeRejected"), n3 = e3.inviteID, o3 = e3.inviter, i3 = e3.groupID, a3 = this._sigM.hasInviteInfo(n3);
        M2.l("".concat(t3, " inviteID:").concat(n3, " hasInviteID:").concat(a3, " inviter:").concat(o3, " groupID:").concat(i3)), a3 && (this._sigM.updateInviteInfo(e3), this._sigM.emitEvent(Q2.INVITEE_REJECTED, y2(y2({}, this._genBaseEmitData(e3)), {}, { invitee: e3.inviteeList[0] })));
      } }, { key: "_onInviteeAccepted", value: function(e3) {
        var t3 = "".concat(this._n, "._onInviteeAccepted"), n3 = e3.inviteID, o3 = e3.inviter, i3 = e3.groupID, a3 = this._sigM.hasInviteInfo(n3);
        M2.l("".concat(t3, " inviteID:").concat(n3, " hasInviteID:").concat(a3, " inviter:").concat(o3, " groupID:").concat(i3)), a3 && (this._sigM.updateInviteInfo(e3), this._sigM.emitEvent(Q2.INVITEE_ACCEPTED, y2(y2({}, this._genBaseEmitData(e3)), {}, { invitee: e3.inviteeList[0] })));
      } }, { key: "_onInvitationCancelled", value: function(e3) {
        var t3 = "".concat(this._n, "._onInvitationCancelled"), n3 = e3.inviteID, o3 = e3.inviter, i3 = e3.groupID, a3 = this._sigM.hasInviteInfo(n3);
        M2.l("".concat(t3, " inviteID:").concat(n3, " hasInviteID:").concat(a3, " inviter:").concat(o3, " groupID:").concat(i3)), a3 && (this._sigM.deleteInviteInfo(n3), this._sigM.emitEvent(Q2.INVITATION_CANCELLED, this._genBaseEmitData(e3)));
      } }, { key: "_onInvitationTimeout", value: function(e3) {
        var t3 = "".concat(this._n, "._onInvitationTimeout"), n3 = e3.inviteID, o3 = e3.inviter, i3 = e3.groupID, a3 = e3.inviteeList, s3 = this._sigM.hasInviteInfo(n3);
        M2.l("".concat(t3, " inviteID:").concat(n3, " hasInviteID:").concat(s3, " inviter:").concat(o3, " groupID:").concat(i3, "  data:").concat(e3.data)), s3 && (this._sigM.updateInviteInfo(e3), this._sigM.emitEvent(Q2.INVITATION_TIMEOUT, y2(y2({}, this._genBaseEmitData(e3)), {}, { inviteeList: a3, isSelfTimeout: false })));
      } }, { key: "_onInvitationModified", value: function(e3, t3) {
        var n3 = "".concat(this._n, "._onInvitationModified"), o3 = e3.inviteID, i3 = e3.data;
        M2.l("".concat(n3, " inviteID:").concat(o3, " data:").concat(i3)), this._sigM.setInviteInfo(o3, y2(y2({}, e3), {}, { message: t3 })), this._sigM.emitEvent(Q2.INVITATION_MODIFIED, { inviteID: o3, data: i3 });
      } }]), Dr2), dr2 = (e2(Tr2, [{ key: "generateInviteID", value: function() {
        var e3, t3 = (t3 = As)((e3 = ks)(32), 8) + "-" + t3(e3(16), 4) + "-" + t3(16384 | e3(12), 4) + "-" + t3(32768 | e3(14), 4) + "-" + t3(e3(48), 12);
        return M2.l("".concat(this._n, ".generateInviteID inviteID:").concat(t3)), t3;
      } }, { key: "createInviteInfo", value: function(e3) {
        var t3 = this.generateInviteID(), e3 = this.createInviteCustomData(y2(y2({}, e3), {}, { inviteID: t3 })), n3 = e3.groupID, o3 = e3.inviteeList, n3 = n3 || o3[0];
        return { customData: e3, message: this._sigM.createSignaling(e3, n3), inviteID: t3 };
      } }, { key: "_genBaseCustomData", value: function(e3) {
        var t3 = e3.data, n3 = e3.inviteID, e3 = e3.groupID;
        return { businessID: 1, timeout: 0, data: void 0 === t3 ? "" : t3, inviteID: void 0 === n3 ? "" : n3, groupID: void 0 === e3 ? "" : e3 };
      } }, { key: "createInviteCustomData", value: function(e3) {
        var t3 = e3.userID, n3 = e3.timeout, n3 = void 0 === n3 ? 0 : n3, o3 = e3.groupID, o3 = void 0 === o3 ? "" : o3, i3 = this._sigM.getMyUserID(), i3 = y2(y2({}, this._genBaseCustomData(e3)), {}, { actionType: Q2.ACTION_TYPE_INVITE, inviter: i3, inviteeList: o3 ? e3.inviteeList : [t3], timeout: n3 });
        return M2.l("".concat(this._n, ".createInviteCustomData customData:"), i3), i3;
      } }, { key: "createCancelCustomData", value: function(e3) {
        var t3, n3 = "".concat(this._n, ".createCancelCustomData"), o3 = e3.inviteID, i3 = this._sigM.getMyUserID(), o3 = this._sigM.getInviteInfo(o3), a3 = o3.inviteeList, s3 = o3.groupID, o3 = o3.inviter;
        return o3 === i3 ? t3 = y2(y2({}, this._genBaseCustomData(e3)), {}, { actionType: Q2.ACTION_TYPE_CANCEL_INVITE, groupID: s3, inviter: i3, inviteeList: a3 }) : M2.e("".concat(n3, " unmatched inviter:").concat(o3, " and my userID:").concat(i3)), M2.l("".concat(n3, " customData:"), t3), t3;
      } }, { key: "createAcceptCustomData", value: function(e3) {
        var t3, n3 = "".concat(this._n, ".createAcceptCustomData"), o3 = e3.inviteID, i3 = this._sigM.getMyUserID(), a3 = this._sigM.getInviteInfo(o3), s3 = a3.inviter, r3 = a3.groupID;
        return a3.inviteeList.includes(i3) ? t3 = y2(y2({}, this._genBaseCustomData(e3)), {}, { actionType: Q2.ACTION_TYPE_ACCEPT_INVITE, groupID: r3, inviter: s3, inviteeList: [i3] }) : M2.e("".concat(n3, " userID:").concat(i3, " not in inviteeList. inviteID:").concat(o3, " groupID:").concat(r3)), M2.l("".concat(n3, " customData:"), t3), t3;
      } }, { key: "createRejectCustomData", value: function(e3) {
        var t3, n3 = "".concat(this._n, ".createRejectCustomData"), o3 = e3.inviteID, i3 = this._sigM.getMyUserID(), a3 = this._sigM.getInviteInfo(o3), s3 = a3.inviter, r3 = a3.groupID;
        return a3.inviteeList.includes(i3) ? t3 = y2(y2({}, this._genBaseCustomData(e3)), {}, { actionType: Q2.ACTION_TYPE_REJECT_INVITE, groupID: r3, inviter: s3, inviteeList: [i3] }) : M2.e("".concat(n3, " userID:").concat(i3, " not in inviteeList. inviteID:").concat(o3, " groupID:").concat(r3)), M2.l("".concat(n3, " customData:"), t3), t3;
      } }, { key: "createTimeoutCustomData", value: function(e3) {
        var t3 = "".concat(this._n, ".createTimeoutCustomData"), n3 = e3.inviteeList, o3 = e3.inviter, i3 = e3.isInviter, i3 = void 0 !== i3 && i3, a3 = this._sigM.getMyUserID(), e3 = y2(y2({}, this._genBaseCustomData(e3)), {}, { actionType: Q2.ACTION_TYPE_INVITE_TIMEOUT, inviter: o3, inviteeList: i3 ? n3 : [a3] });
        return M2.l("".concat(t3, " customData:"), e3), e3;
      } }]), Tr2), pr2 = (e2(Cr2, [{ key: "setCloudConfig", value: function() {
        var e3 = 0 < arguments.length && void 0 !== arguments[0] ? arguments[0] : 20, t3 = 1 < arguments.length && void 0 !== arguments[1] ? arguments[1] : 300;
        this.COUNT = e3, this.EXPIRED_TIME = t3, M2.l("".concat(this._n, ".setCloudConfig count:").concat(e3, ", time:").concat(t3));
      } }, { key: "getHistorySignaling", value: function() {
        var t3 = this, e3 = this._sigM.get(11).getLocalConvList();
        S2(e3) || (this._getC2CSignalingList(), e3 = this._getValidGroupConvList(e3), this._getGroupSignalingList(e3).then(function(e4) {
          t3._handleSignalingList(e4);
        }));
      } }, { key: "_getC2CSignalingList", value: function() {
        var e3 = this._sigM.get(6).getMessageListFromUnreadDB(), e3 = this._sigM.filterMessageList(e3);
        this._getRelatedToMeMap(e3);
      } }, { key: "_getGroupSignalingList", value: function(e3) {
        var n3 = this, e3 = this._createPromiseList(e3);
        return 0 === e3.length ? Promise.resolve(this._sortSignaling(this._relatedToMeMap)) : this._concurrentGetMessageList(e3).then(function(e4) {
          var t3 = /* @__PURE__ */ new Map();
          return e4.forEach(function(e5) {
            e5 = e5.list, e5 = n3._getRelatedToMeMap(e5);
            t3 = new Map([].concat(p2(t3), p2(e5)));
          }), n3._sortSignaling(t3);
        });
      } }, { key: "_handleSignalingList", value: function(e3) {
        S2(e3) || this._sigM.onNewMessageList(e3);
      } }, { key: "_getValidGroupConvList", value: function(e3) {
        for (var t3 = [], n3 = 0, o3 = e3.length; n3 < o3; n3++) {
          var i3 = e3[n3], a3 = i3.type, s3 = i3.unreadCount, i3 = i3.lastMessage, a3 = a3 === A2.CONV_GROUP, i3 = this._isNotExpired(i3);
          a3 && s3 && i3 && t3.push(e3[n3]);
        }
        return t3;
      } }, { key: "_isNotExpired", value: function(e3) {
        return !(!e3 || !e3.lastTime) && e3.lastTime > Be2() - this.EXPIRED_TIME;
      } }, { key: "_createPromiseList", value: function(e3) {
        for (var t3 = [], n3 = 0; n3 < e3.length; n3++) {
          var o3 = e3[n3], i3 = o3.conversationID, o3 = o3.unreadCount, o3 = o3 < this.COUNT ? o3 : this.COUNT, o3 = (this._map.set(i3, { msgCount: o3, list: [] }), this._sigM.get(11).getMessageList({ conversationID: i3 }));
          t3.push(o3);
        }
        return t3;
      } }, { key: "_concurrentGetMessageList", value: function(e3) {
        var i3 = this, a3 = [];
        return Promise.all(e3).then(function(e4) {
          for (var t3 = 0; t3 < e4.length; t3++) {
            var n3 = e4[t3], o3 = n3.code, n3 = n3.data;
            0 === o3 && 0 !== n3.messageList.length && (i3._handleMessageList(n3.messageList), o3 = i3._relayGetMessageList(n3)) && a3.push(o3);
          }
          return 0 < a3.length ? i3._concurrentGetMessageList(a3) : i3._map;
        });
      } }, { key: "_relayGetMessageList", value: function(e3) {
        var t3, n3 = e3.messageList, o3 = e3.nextReqMessageID, e3 = e3.isCompleted;
        return 0 === n3.length || (n3 = n3[0].conversationID, 0 === (t3 = this._map.get(n3).msgCount)) || e3 ? null : this._sigM.get(11).getMessageList({ conversationID: n3, nextReqMessageID: o3, count: t3 });
      } }, { key: "_handleMessageList", value: function(e3) {
        var t3 = e3.length, n3 = e3[0].conversationID, o3 = this._map.get(n3), i3 = o3.msgCount, o3 = o3.list;
        this._map.set(n3, { msgCount: 0 < i3 - t3 ? i3 - t3 : 0, list: o3.concat(this._sigM.filterMessageList(e3)) });
      } }, { key: "_getRelatedToMeMap", value: function(e3) {
        for (var t3 = 0; t3 < e3.length; t3++) {
          var n3 = e3[t3];
          this._saveRelatedToMe(n3);
        }
        return this._relatedToMeMap;
      } }, { key: "_saveRelatedToMe", value: function(e3) {
        var t3 = this._sigM.getPayloadData(e3) || {}, n3 = t3.actionType, t3 = t3.inviteID, o3 = void 0 === t3 ? "" : t3;
        switch (void 0 === n3 ? "" : n3) {
          case Q2.ACTION_TYPE_INVITE:
            this._setHistoryInvite(e3);
            break;
          case Q2.ACTION_TYPE_REJECT_INVITE:
          case Q2.ACTION_TYPE_ACCEPT_INVITE:
            this._updateHistoryInvite(e3);
            break;
          case Q2.ACTION_TYPE_CANCEL_INVITE:
            this._delHistoryInvite(o3);
            break;
          case Q2.ACTION_TYPE_INVITE_TIMEOUT:
            this._updateHistoryInvite(e3);
        }
      } }, { key: "_setHistoryInvite", value: function(e3) {
        var t3 = this._sigM.getPayloadData(e3) || {}, n3 = t3.inviteID, n3 = void 0 === n3 ? "" : n3, o3 = t3.inviteeList, o3 = void 0 === o3 ? [] : o3, i3 = t3.timeout, i3 = void 0 === i3 ? 0 : i3, a3 = this._sigM.getMyUserID();
        o3.includes(a3) && (o3 = Be2() - e3.time, 0 < i3 && i3 < o3 && 0 !== i3 || this._relatedToMeMap.set(n3, y2(y2({}, t3), {}, { messageList: [e3] })));
      } }, { key: "_delHistoryInvite", value: function(e3) {
        this._relatedToMeMap.has(e3) && this._relatedToMeMap.delete(e3);
      } }, { key: "_updateHistoryInvite", value: function(e3) {
        var t3 = this._sigM.getPayloadData(e3) || {}, n3 = t3.inviteID, n3 = void 0 === n3 ? "" : n3, t3 = t3.inviteeList, o3 = void 0 === t3 ? [] : t3;
        if (this._relatedToMeMap.has(n3)) {
          for (var t3 = this._relatedToMeMap.get(n3), i3 = t3.inviteeList, t3 = t3.messageList, a3 = 0; a3 < o3.length; a3++) {
            var s3 = o3[a3];
            i3.includes(s3) && i3.splice(i3.indexOf(s3), 1);
          }
          0 === i3.length ? this._delHistoryInvite(n3) : t3.push(e3);
        } else
          this._delHistoryInvite(n3);
      } }, { key: "_sortSignaling", value: function(e3) {
        var t3 = [];
        return e3.forEach(function(e4) {
          t3 = [].concat(p2(t3), p2(e4.messageList));
        }), t3.sort(function(e4, t4) {
          return e4.time - t4.time;
        });
      } }, { key: "reset", value: function() {
        this._map.clear(), this._relatedToMeMap.clear();
      } }]), Cr2), _r3 = e2(function e3(t3, n3) {
        d2(this, e3), this.businessID = t3.businessID || 1, this.inviteID = t3.inviteID, this.groupID = t3.groupID || "", this.inviter = t3.inviter || "", this.inviteeList = t3.inviteeList || [], this.data = t3.data || "", this.actionType = t3.actionType || Q2.ACTION_TYPE_INVITE, this.timeout = t3.timeout || 0;
      }), hr2 = ["message"], gr2 = ["message"], fr2 = (t2(yr2, u2), Os = n2(yr2), e2(yr2, [{ key: "onC2CUnreadHandleCompleted", value: function() {
        this._isC2CUnreadHandleCompleted = true, this._isCloudConfigCompleted && this._isConvSyncCompleted && !this._isSyncCompleted && this.onReady();
      } }, { key: "onConvSyncCompleted", value: function() {
        this._isConvSyncCompleted = true, this._isC2CUnreadHandleCompleted && this._isCloudConfigCompleted && !this._isSyncCompleted && this.onReady();
      } }, { key: "onCloudConfig", value: function() {
        this._isCloudConfigCompleted = true;
        var e3 = this.getCloudConfig("history_s_count"), t3 = this.getCloudConfig("history_s_time");
        N2(e3) || (e3 = Number(e3)), N2(t3) || (t3 = Number(t3)), this._historySignalingHandler.setCloudConfig(e3, t3), this._isC2CUnreadHandleCompleted && this._isConvSyncCompleted && !this._isSyncCompleted && this.onReady();
      } }, { key: "_isListenerExisted", value: function() {
        return -1 < this._m.getOEmitInst().eventNames().indexOf(Q2.NEW_INVITATION_RECEIVED);
      } }, { key: "onReady", value: function() {
        this._isSyncCompleted = true;
        var e3 = this._isListenerExisted();
        M2.l("".concat(this._n, ".onReady. isListenerExisted: ").concat(e3)), e3 && this._historySignalingHandler.getHistorySignaling();
      } }, { key: "onNewMessageList", value: function(e3) {
        e3 = this.filterMessageList(e3);
        if (0 < e3.length)
          return this._remoteSignalingHandler.onNewMessageList(e3);
      } }, { key: "onMessageModified", value: function(e3) {
        e3 = this.filterMessageList(e3);
        if (0 < e3.length)
          return this._remoteSignalingHandler.onMessageModified(e3);
      } }, { key: "hasInviteInfo", value: function(e3) {
        return this._inviteInfoMap.has(e3);
      } }, { key: "getInviteInfo", value: function(e3) {
        return this._inviteInfoMap.get(e3);
      } }, { key: "setInviteInfo", value: function(e3, t3) {
        var n3 = t3.message, t3 = K2(t3, hr2);
        M2.l("".concat(this._n, ".setInviteInfo inviteID:").concat(e3, " data:"), t3), this._inviteInfoMap.set(e3, y2(y2({}, t3), {}, { message: n3 }));
      } }, { key: "deleteInviteInfo", value: function(e3) {
        this.hasInviteInfo(e3) && (M2.l("".concat(this._n, ".deleteInviteInfo inviteID:").concat(e3, ".")), this._inviteInfoMap.delete(e3));
      } }, { key: "updateInviteInfo", value: function(e3) {
        var t3 = "".concat(this._n, ".updateInviteInfo"), n3 = e3.inviteID, o3 = e3.inviter, i3 = e3.inviteeList, e3 = e3.groupID;
        M2.l("".concat(t3, " inviteID:").concat(n3, " inviter:").concat(o3, " groupID:").concat(e3)), e3 && this.hasInviteInfo(n3) && (o3 = i3[0], (e3 = this.getInviteInfo(n3).inviteeList).includes(o3) && (e3.splice(e3.indexOf(o3), 1), M2.l("".concat(t3, " remove ").concat(o3, ". localInviteeList.length:").concat(e3.length))), 0 !== e3.length) || this.deleteInviteInfo(n3);
      } }, { key: "canIUseSignaling", value: function() {
        return this._canIUseSignaling;
      } }, { key: "emitEvent", value: function(e3, t3) {
        this.emitOEvt(e3, t3);
      } }, { key: "addSignalingListener", value: function(e3, t3, n3) {
        this._canIUseSignaling || (this._canIUseSignaling = true), this._m.getOEmitInst().on(e3, t3, n3);
      } }, { key: "removeSignalingListener", value: function(e3, t3, n3) {
        this._m.getOEmitInst().off(e3, t3, n3), this._isListenerExisted() || (this._canIUseSignaling = false);
      } }, { key: "invite", value: function(e3) {
        var t3 = this, n3 = "".concat(this._n, ".").concat("invite"), o3 = this._localSignalingHandler.createInviteInfo(e3), i3 = o3.message, a3 = o3.customData, s3 = o3.inviteID;
        return M2.l("".concat(n3, " options:").concat(JSON.stringify(e3), " inviteID:").concat(s3)), this.sendSignaling(i3, e3).then(function(e4) {
          return e4 && 0 === e4.code ? (t3.setInviteInfo(s3, y2(y2({}, a3), {}, { message: i3 })), t3.startTimer(y2(y2({}, a3), {}, { inviteID: s3 })), y2(y2({}, e4), {}, { inviteID: s3 })) : e4;
        }).catch(function(e4) {
          return D2(e4);
        });
      } }, { key: "inviteSync", value: function(e3, t3, n3) {
        var o3 = this, i3 = "".concat(this._n, ".").concat("inviteSync"), a3 = this._localSignalingHandler.createInviteInfo(e3), s3 = a3.message, r3 = a3.customData, c3 = a3.inviteID;
        return M2.l("".concat(i3, " options:").concat(JSON.stringify(e3), " inviteID:").concat(c3)), this.sendSignaling(s3, e3).then(function(e4) {
          if (e4 && 0 === e4.code)
            return o3.setInviteInfo(c3, y2(y2({}, r3), {}, { message: s3 })), o3.startTimer(y2(y2({}, r3), {}, { inviteID: c3 })), t3 && t3({ inviteID: c3 }), { inviteID: c3 };
          n3 && n3(0 === e4.code, e4.message || "");
        }).catch(function(e4) {
          return n3 && n3(e4.code, e4.message), D2(e4);
        }), c3;
      } }, { key: "_handleImResponse", value: function(e3, t3, n3) {
        t3 && 0 === t3.code && (this._isHandling = false, n3 ? this.deleteInviteInfo(e3.inviteID) : this.updateInviteInfo(e3));
      } }, { key: "cancel", value: function(t3) {
        var n3 = this, e3 = "".concat(this._n, ".").concat("cancel");
        if (M2.l("".concat(e3, " options:").concat(JSON.stringify(t3))), !this.hasInviteInfo(t3.inviteID) || this._isHandling)
          return D2({ code: L2.INVALID_CANCEL_MESSAGE });
        this._isHandling = true;
        var o3, i3 = this._localSignalingHandler.createCancelCustomData(t3);
        return i3 ? (e3 = i3.groupID, o3 = i3.inviteeList, e3 = e3 || o3[0], o3 = this.createSignaling(i3, e3), this.sendSignaling(o3, t3).then(function(e4) {
          return n3._handleImResponse(i3, e4, true), 0 === e4.code ? y2(y2({}, e4), {}, { inviteID: t3.inviteID }) : e4;
        }).catch(function(e4) {
          return D2(e4);
        })) : (this._isHandling = false, D2({ code: L2.SIGNALING_NO_PERMISSION }));
      } }, { key: "accept", value: function(t3) {
        var n3 = this, e3 = "".concat(this._n, ".").concat("accept");
        if (M2.l("".concat(e3, " options:").concat(JSON.stringify(t3))), !this.hasInviteInfo(t3.inviteID) || this._isHandling)
          return D2({ code: L2.SIGNALING_INVALID_INVITE_ID });
        this._isHandling = true;
        var o3 = this._localSignalingHandler.createAcceptCustomData(t3);
        return o3 ? (e3 = this.createSignaling(o3), this.sendSignaling(e3, t3).then(function(e4) {
          return n3._handleImResponse(o3, e4), 0 === e4.code ? y2(y2({}, e4), {}, { inviteID: t3.inviteID }) : e4;
        }).catch(function(e4) {
          return D2(e4);
        })) : (this._isHandling = false, D2({ code: L2.SIGNALING_NO_PERMISSION }));
      } }, { key: "reject", value: function(t3) {
        var n3 = this, e3 = "".concat(this._n, ".").concat("reject");
        if (M2.l("".concat(e3, " options:").concat(JSON.stringify(t3))), !this.hasInviteInfo(t3.inviteID) || this._isHandling)
          return D2({ code: L2.SIGNALING_INVALID_INVITE_ID });
        this._isHandling = true;
        var o3 = this._localSignalingHandler.createRejectCustomData(t3);
        return o3 ? (e3 = this.createSignaling(o3), this.sendSignaling(e3, t3).then(function(e4) {
          return n3._handleImResponse(o3, e4, true), 0 === e4.code ? y2(y2({}, e4), {}, { inviteID: t3.inviteID }) : e4;
        }).catch(function(e4) {
          return D2(e4);
        })) : (this._isHandling = false, D2({ code: L2.SIGNALING_NO_PERMISSION }));
      } }, { key: "getSignalingInfo", value: function(e3) {
        var t3 = "".concat(this._n, ".getSignalingInfo"), n3 = e3.ID, o3 = e3.from, i3 = e3.to, a3 = this._filterSignaling(e3), s3 = null, e3 = (a3 && (e3 = this.getPayloadData(e3), s3 = new _r3(e3)), a3 ? "actionType:".concat(s3.actionType) : "");
        return M2.l("".concat(t3, " messageID:").concat(n3, " from:").concat(o3, " to:").concat(i3, " ") + "".concat(e3, " isSignaling:").concat(a3)), s3;
      } }, { key: "modifyInvitation", value: function(e3) {
        var t3 = this, n3 = e3.inviteID, o3 = e3.data;
        if (!this.hasInviteInfo(e3.inviteID) || this._isHandling)
          return D2({ code: L2.SIGNALING_INVALID_INVITE_ID });
        this._isHandling = true;
        var e3 = this.getInviteInfo(n3), i3 = e3.message, a3 = K2(e3, gr2), s3 = i3.payload.data;
        return a3.data = o3, i3.payload.data = JSON.stringify(a3), this.get(2).modifyRemoteMessage(i3).then(function(e4) {
          return t3.setInviteInfo(n3, y2(y2({}, a3), {}, { message: i3 })), t3._isHandling = false, e4;
        }).catch(function(e4) {
          return t3._isHandling = false, i3.payload.data = s3, D2(e4);
        });
      } }, { key: "_genMsgCtrlInfo", value: function() {
        var e3 = 0 < arguments.length && void 0 !== arguments[0] ? arguments[0] : {}, t3 = e3.data, t3 = void 0 === t3 ? "" : t3, n3 = e3.onlineUserOnly, o3 = e3.inviteID, o3 = void 0 === o3 ? "" : o3, i3 = e3.offlinePushInfo, e3 = e3.actionType, a3 = { _onlineOnlyFlag: false }, o3 = { onlineUserOnly: (a3 = o3 && this.getInviteInfo(o3) ? this.getInviteInfo(o3).message : a3)._onlineOnlyFlag || n3 || false, offlinePushInfo: i3, messageControlInfo: { excludedFromContentModeration: true, excludedFromUnreadCount: false, excludedFromLastMessage: false } };
        return e3 === Q2.ACTION_TYPE_INVITE_TIMEOUT ? (a3 = !!t3.match(/excludeTimeoutSignalingFromHistoryMessage/), o3.messageControlInfo.excludedFromUnreadCount = a3, o3.messageControlInfo.excludedFromLastMessage = a3) : (n3 = !!t3.match(/excludeFromHistoryMessage/), i3 = !!t3.match(/excludeOriginalSignalingFromHistoryMessage/), o3.messageControlInfo.excludedFromUnreadCount = n3 || i3, o3.messageControlInfo.excludedFromLastMessage = n3 || i3), o3;
      } }, { key: "sendSignaling", value: function(e3, t3) {
        var n3 = this;
        return this.get(2).sendMessageInstance(e3, this._genMsgCtrlInfo(t3)).catch(function(e4) {
          return n3._isHandling = false, D2(e4);
        });
      } }, { key: "filterMessageList", value: function(e3) {
        var t3 = this;
        return e3.filter(function(e4) {
          return t3._filterSignaling(e4);
        });
      } }, { key: "getPayloadData", value: function(e3) {
        return this._remoteSignalingHandler.getPayloadData(e3);
      } }, { key: "createSignaling", value: function(e3, t3) {
        var n3 = e3.groupID, o3 = e3.inviter, t3 = { to: t3 || n3 || o3, conversationType: n3 ? A2.CONV_GROUP : A2.CONV_C2C, priority: A2.MSG_PRIORITY_HIGH, payload: { data: JSON.stringify(e3) } }, o3 = this.get(2).createCustomMessage(t3);
        return M2.l("".concat(this._n, ".createSignaling. message:"), o3), o3;
      } }, { key: "_filterSignaling", value: function(e3) {
        var t3, n3, o3 = false;
        return e3.type && e3.type === A2.MSG_CUSTOM && (t3 = e3.cloudCustomData, e3 = void 0 === (e3 = e3.payload.data) ? "" : e3, t3 = (void 0 === t3 ? "" : t3).match(/"type":"tsignaling"/), n3 = e3.match(/inviteID/), e3 = e3.match(/actionType/), o3 = t3 || n3 && e3), !!o3;
      } }, { key: "startTimer", value: function(t3) {
        var n3, o3, i3, a3 = this, s3 = "".concat(this._n, ".startTimer"), e3 = t3.timeout, r3 = t3.inviteID, c3 = t3.inviter, u3 = t3.groupID, l3 = c3 === this.getMyUserID();
        M2.l("".concat(s3, " timeout:").concat(e3, " isInviter:").concat(l3, " groupID:").concat(u3)), e3 <= 0 || (n3 = l3 ? e3 + 5 : e3, o3 = 1, i3 = setInterval(function() {
          var e4 = a3._hasLocalInviteInfo(t3, l3);
          o3 < n3 && e4 ? ++o3 : (e4 && a3._sendTimeoutNotice(r3, l3), M2.l("".concat(s3, " end.")), clearInterval(i3));
        }, 1e3));
      } }, { key: "_hasLocalInviteInfo", value: function(e3, t3) {
        var n3, o3, i3 = e3.inviteID, e3 = e3.groupID;
        return !!this.hasInviteInfo(i3) && (n3 = "".concat(this._n, "._hasLocalInviteInfo"), o3 = this.getInviteInfo(i3).inviteeList, M2.l("".concat(n3, " inviteID:").concat(i3, " inviteeList:").concat(o3, " groupID:").concat(e3)), !e3 || (t3 ? 0 < o3.length : 0 < o3.length && o3.includes(this.getMyUserID())));
      } }, { key: "_getReceiver", value: function(e3, t3) {
        var n3 = t3.groupID, o3 = t3.inviteeList, t3 = t3.inviter;
        return e3 ? n3 || o3[0] : n3 || t3;
      } }, { key: "_sendTimeoutNotice", value: function(i3, a3) {
        var s3 = this, e3 = this.getInviteInfo(i3), t3 = this._getReceiver(a3, e3), r3 = (M2.l("".concat(this._n, "._sendTimeoutNotice inviteID:").concat(i3, " to:").concat(t3, " isInviter:").concat(a3)), this._localSignalingHandler.createTimeoutCustomData(y2(y2({}, e3), {}, { isInviter: a3 }))), c3 = this.createSignaling(r3, t3);
        return this.sendSignaling(c3, r3).then(function(e4) {
          var t4, n3, o3;
          e4 && 0 === e4.code && (e4 = r3.data, t4 = r3.groupID, n3 = r3.inviteeList, o3 = r3.inviter, s3.emitEvent(Q2.INVITATION_TIMEOUT, { data: e4, groupID: t4, inviteID: i3, inviteeList: n3, inviter: o3, isSelfTimeout: true, message: c3 }), a3 ? s3.deleteInviteInfo(i3) : s3.updateInviteInfo(r3));
        });
      } }, { key: "reset", value: function() {
        M2.l("".concat(this._n, ".reset")), this._inviteInfoMap.clear(), this._canIUseSignaling = false, this._isHandling = false, this._historySignalingHandler.reset(), this._isC2CUnreadHandleCompleted = false, this._isConvSyncCompleted = false, this._isSyncCompleted = false, this._isCloudConfigCompleted = false;
      } }]), yr2), mr2 = ["followDiffList"], vr2 = { NONE: 0, FOLLOWERS: 1, FOLLOWING: 2, MUTUAL: 3 }, Ir2 = (t2(Mr2, u2), Rs = n2(Mr2), e2(Mr2, [{ key: "_onCloudConfig", value: function() {
        var e3 = this.getCloudConfig("follow_req_count");
        N2(e3) || (e3 = Number(e3), this.DEFAULT_COUNT = e3 > this.MAX_COUNT ? this.MAX_COUNT : e3, this._clearFollowList());
      } }, { key: "clearCacheOnReconnected", value: function() {
        this._clearFollowList(), this._followType.clear();
      } }, { key: "onFollowNotify", value: function(e3) {
        var i3 = this, e3 = e3.dataList || [];
        M2.l("".concat(this._n, ".onFollowNotify followChangeList:").concat(e3.length)), e3.forEach(function(e4) {
          var t3 = e4.followDiffList, t3 = void 0 === t3 ? [] : t3, o3 = K2(e4, mr2);
          t3.forEach(function(e5) {
            var t4 = e5.isAdd, e5 = e5.followType, e5 = void 0 === e5 ? [] : e5, n3 = i3._initFollowInfo();
            n3[e5].userInfoList.push(o3), n3[e5].isAdd = 1 === t4, i3._emitEvent(n3);
          });
        });
      } }, { key: "_initFollowInfo", value: function() {
        var t3 = {};
        return Object.values(vr2).forEach(function(e3) {
          e3 !== vr2.NONE && (t3[e3] = { userInfoList: [], isAdd: false });
        }), t3;
      } }, { key: "_emitEvent", value: function(n3) {
        var o3 = this;
        Object.keys(n3).forEach(function(e3) {
          var e3 = Number(e3), t3 = n3[e3];
          0 < t3.userInfoList.length && (e3 === vr2.FOLLOWERS && (o3._clearFollowList(vr2.FOLLOWERS), o3.emitOEvt(h2.MY_FOLLOWERS_LIST_UPDATED, t3)), e3 === vr2.FOLLOWING && (o3._clearFollowList(vr2.FOLLOWING), o3.emitOEvt(h2.MY_FOLLOWING_LIST_UPDATED, t3)), e3 === vr2.MUTUAL) && (o3._clearFollowList(vr2.MUTUAL), o3.emitOEvt(h2.MUTUAL_FOLLOWERS_LIST_UPDATED, t3));
        });
      } }, { key: "followUser", value: function(e3) {
        var t3, n3, o3;
        return this.canIUse(_2.FOLLOW) ? (t3 = "".concat(this._n, ".").concat("followUser"), n3 = "userIDList:".concat(e3.length), (o3 = new G2("followUser")).setMessage(n3), M2.l("".concat(t3, " ").concat(n3)), this.req({ P: k2.FOLLOW, data: { fromAccount: this.getMyUserID(), userIDList: e3.map(function(e4) {
          return { userID: e4 };
        }) } }).then(function(e4) {
          return o3.end(), M2.l("".concat(t3, " ok.")), C2(e4.data.resultList);
        }).catch(function(e4) {
          return o3.setError(e4).end(), M2.e("".concat(t3, " failed. error:"), e4), D2(e4);
        })) : this.noUse("followUser");
      } }, { key: "unfollowUser", value: function(e3) {
        var t3, n3, o3;
        return this.canIUse(_2.FOLLOW) ? (t3 = "".concat(this._n, ".").concat("unfollowUser"), n3 = "userIDList:".concat(e3.length), (o3 = new G2("unfollowUser")).setMessage(n3), M2.l("".concat(t3, " ").concat(n3)), this.req({ P: k2.UNFOLLOW, data: { fromAccount: this.getMyUserID(), userIDList: e3 } }).then(function(e4) {
          return o3.end(), M2.l("".concat(t3, " ok.")), C2(e4.data.resultList);
        }).catch(function(e4) {
          return o3.setError(e4).end(), M2.e("".concat(t3, " failed. error:"), e4), D2(e4);
        })) : this.noUse("unfollowUser");
      } }, { key: "getMyFollowersList", value: function() {
        var t3 = this, n3 = 0 < arguments.length && void 0 !== arguments[0] ? arguments[0] : "", o3 = "getMyFollowersList";
        if (!this.canIUse(_2.FOLLOW))
          return this.noUse(o3);
        var i3 = n3 || this.FIRST_PAGE_INDEX;
        if (this._myFollowersList.has(i3)) {
          var e3 = this._myFollowersList.get(i3), a3 = e3.resultList, s3 = e3.nextCursor, e3 = e3.lastUpdateTime;
          if (Date.now() - e3 < this.MAX_CATCH_TIME && 0 < a3.length)
            return M2.l("".concat(this._n, ".").concat(o3, " nextCursor:").concat(n3, " from local.")), T2({ resultList: a3, nextCursor: s3 });
        }
        return this._getFollowList(n3, vr2.FOLLOWERS).then(function(e4) {
          return t3._myFollowersList.set(i3, y2(y2({}, e4), {}, { lastUpdateTime: Date.now() })), M2.l("".concat(t3._n, ".").concat(o3, " nextCursor:").concat(n3, " from remote.")), C2(e4);
        });
      } }, { key: "getMyFollowingList", value: function() {
        var t3 = this, n3 = 0 < arguments.length && void 0 !== arguments[0] ? arguments[0] : "", o3 = "getMyFollowingList";
        if (!this.canIUse(_2.FOLLOW))
          return this.noUse(o3);
        var i3 = n3 || this.FIRST_PAGE_INDEX;
        if (this._myFollowingList.has(i3)) {
          var e3 = this._myFollowingList.get(i3), a3 = e3.resultList, s3 = e3.nextCursor, e3 = e3.lastUpdateTime;
          if (Date.now() - e3 < this.MAX_CATCH_TIME && 0 < a3.length)
            return M2.l("".concat(this._n, ".").concat(o3, " nextCursor:").concat(n3, " from local.")), T2({ resultList: a3, nextCursor: s3 });
        }
        return this._getFollowList(n3, vr2.FOLLOWING).then(function(e4) {
          return t3._myFollowingList.set(i3, y2(y2({}, e4), {}, { lastUpdateTime: Date.now() })), M2.l("".concat(t3._n, ".").concat(o3, " nextCursor:").concat(n3, " from remote.")), C2(e4);
        });
      } }, { key: "getMutualFollowersList", value: function() {
        var t3 = this, n3 = 0 < arguments.length && void 0 !== arguments[0] ? arguments[0] : "", o3 = "getMutualFollowersList";
        if (!this.canIUse(_2.FOLLOW))
          return this.noUse(o3);
        var i3 = n3 || this.FIRST_PAGE_INDEX;
        if (this._myMutualFollowersList.has(i3)) {
          var e3 = this._myMutualFollowersList.get(i3), a3 = e3.resultList, s3 = e3.nextCursor, e3 = e3.lastUpdateTime;
          if (Date.now() - e3 < this.MAX_CATCH_TIME && 0 < a3.length)
            return M2.l("".concat(this._n, ".").concat(o3, " nextCursor:").concat(n3, " from local.")), T2({ resultList: a3, nextCursor: s3 });
        }
        return this._getFollowList(n3, vr2.MUTUAL).then(function(e4) {
          return t3._myMutualFollowersList.set(i3, y2(y2({}, e4), {}, { lastUpdateTime: Date.now() })), M2.l("".concat(t3._n, ".").concat(o3, " nextCursor:").concat(n3, " from remote.")), C2(e4);
        });
      } }, { key: "_getFollowList", value: function(e3, t3) {
        var i3 = this, n3 = new G2("_getFollowList");
        return n3.setMessage("nextCursor:".concat(e3, " type:").concat(t3)), this.req({ P: k2.GET_FOLLOW, data: { fromAccount: this.getMyUserID(), count: this.DEFAULT_COUNT, nextCursor: e3, type: t3 } }).then(function(e4) {
          n3.end();
          var e4 = e4.data, t4 = e4.resultList, t4 = void 0 === t4 ? [] : t4, e4 = e4.nextCursor, e4 = void 0 === e4 ? "" : e4, o3 = [];
          return t4.forEach(function(e5) {
            var t5 = e5.userID, n4 = e5.followTime, e5 = e5.profileList;
            o3.push(y2({ userID: t5, followTime: n4 }, i3._handleProfileItem(void 0 === e5 ? [] : e5)));
          }), { resultList: o3, nextCursor: e4 };
        }).catch(function(e4) {
          return n3.setError(e4).end(), M2.e("".concat(i3._n, "._getFollowList failed. error:"), e4), D2(e4);
        });
      } }, { key: "_handleProfileItem", value: function(e3) {
        var t3 = {};
        return e3.forEach(function(e4) {
          switch (e4.tag) {
            case g2.NICK:
              t3.nick = e4.value;
              break;
            case g2.GENDER:
              t3.gender = e4.value;
              break;
            case g2.BIRTHDAY:
              t3.birthday = e4.value;
              break;
            case g2.LOCATION:
              t3.location = e4.value;
              break;
            case g2.SELFSIGNATURE:
              t3.selfSignature = e4.value;
              break;
            case g2.ALLOWTYPE:
              t3.allowType = e4.value;
              break;
            case g2.LANGUAGE:
              t3.language = e4.value;
              break;
            case g2.AVATAR:
              t3.avatar = e4.value;
              break;
            case g2.MESSAGESETTINGS:
              t3.messageSettings = e4.value;
              break;
            case g2.ADMINFORBIDTYPE:
              t3.adminForbidType = e4.value;
              break;
            case g2.LEVEL:
              t3.level = e4.value;
              break;
            case g2.ROLE:
              t3.role = e4.value;
              break;
            default:
              t3[e4.tag] = e4.value;
          }
        }), t3;
      } }, { key: "getUserFollowInfo", value: function(e3) {
        var t3, n3, i3;
        return this.canIUse(_2.FOLLOW) ? (n3 = false, N2(e3 = e3) && (e3 = [this.getMyUserID()], n3 = true), t3 = "".concat(this._n, ".").concat("getUserFollowInfo"), n3 = "userIDList:".concat(e3.length, " isGetMyFollowInfo:").concat(n3), (i3 = new G2("getUserFollowInfo")).setMessage(n3), M2.l("".concat(t3, " ").concat(n3)), this.req({ P: k2.GET_FOLLOW_INFO, data: { fromAccount: this.getMyUserID(), userIDList: e3 } }).then(function(e4) {
          i3.end(), M2.l("".concat(t3, " ok."));
          var e4 = e4.data.followInfoList, o3 = [];
          return (void 0 === e4 ? [] : e4).forEach(function(e5) {
            var t4 = e5.followersCount, n4 = e5.followingCount, e5 = e5.mutualFollowersCount;
            o3.push({ followersCount: t4, followingCount: n4, mutualFollowersCount: e5 });
          }), C2(o3);
        }).catch(function(e4) {
          return i3.setError(e4).end(), M2.e("".concat(t3, " failed. error:"), e4), D2(e4);
        })) : this.noUse("getUserFollowInfo");
      } }, { key: "checkFollowType", value: function(e3) {
        var n3 = this;
        if (!this.canIUse(_2.FOLLOW))
          return this.noUse("checkFollowType");
        100 < e3.length && (e3 = e3.slice(0, 100), M2.w("".concat(t3, " ").concat($t2(100))));
        var t3 = "".concat(this._n, ".").concat("checkFollowType"), o3 = "userIDList length:".concat(e3.length, " "), i3 = new G2("checkFollowType"), a3 = (i3.setMessage(o3), M2.l("".concat(t3, " ").concat(o3)), []), s3 = [];
        return e3.forEach(function(e4) {
          var t4;
          n3._followType.has(e4) ? (t4 = n3._followType.get(e4), a3.push({ userID: e4, followType: t4 })) : s3.push(e4);
        }), M2.l("".concat(t3, " from local count:").concat(a3.length, ", from remote count:").concat(s3.length, ".")), 0 === s3.length ? T2(a3) : this.req({ P: k2.CHECK_FOLLOW_TYPE, data: { fromAccount: this.getMyUserID(), userIDList: s3 } }).then(function(e4) {
          i3.end(), M2.l("".concat(t3, " ok."));
          e4 = e4.data.resultList;
          return (void 0 === e4 ? [] : e4).forEach(function(e5) {
            var t4 = e5.userID, e5 = e5.followType;
            n3._setFollowType(t4, e5), a3.push({ userID: t4, followType: e5 });
          }), C2(a3);
        }).catch(function(e4) {
          return i3.setError(e4).end(), M2.e("".concat(t3, " failed. error:"), e4), D2(e4);
        });
      } }, { key: "_setFollowType", value: function(e3, t3) {
        this._followType.set(e3, t3);
      } }, { key: "_clearFollowList", value: function(e3) {
        N2(e3) ? (this._myFollowersList.clear(), this._myFollowingList.clear(), this._myMutualFollowersList.clear()) : e3 !== vr2.FOLLOWERS ? e3 !== vr2.FOLLOWING ? e3 === vr2.MUTUAL && this._myMutualFollowersList.clear() : this._myFollowingList.clear() : this._myFollowersList.clear();
      } }, { key: "reset", value: function() {
        M2.l("".concat(this._n, ".reset")), this._clearFollowList(), this._followType.clear();
      } }]), Mr2), ie2 = ma(function(e3, t3) {
        var n3 = "undefined" != typeof Uint8Array && "undefined" != typeof Uint16Array && "undefined" != typeof Int32Array;
        t3.assign = function(e4) {
          for (var t4, n4, o4 = Array.prototype.slice.call(arguments, 1); o4.length; ) {
            var i4 = o4.shift();
            if (i4) {
              if ("object" !== b2(i4))
                throw new TypeError(i4 + "must be non-object");
              for (var a3 in i4)
                t4 = i4, n4 = a3, Object.prototype.hasOwnProperty.call(t4, n4) && (e4[a3] = i4[a3]);
            }
          }
          return e4;
        }, t3.shrinkBuf = function(e4, t4) {
          return e4.length === t4 ? e4 : e4.subarray ? e4.subarray(0, t4) : (e4.length = t4, e4);
        };
        var o3 = { arraySet: function(e4, t4, n4, o4, i4) {
          if (t4.subarray && e4.subarray)
            e4.set(t4.subarray(n4, n4 + o4), i4);
          else
            for (var a3 = 0; a3 < o4; a3++)
              e4[i4 + a3] = t4[n4 + a3];
        }, flattenChunks: function(e4) {
          for (var t4, n4, o4, i4 = 0, a3 = 0, s3 = e4.length; a3 < s3; a3++)
            i4 += e4[a3].length;
          for (o4 = new Uint8Array(i4), a3 = t4 = 0, s3 = e4.length; a3 < s3; a3++)
            n4 = e4[a3], o4.set(n4, t4), t4 += n4.length;
          return o4;
        } }, i3 = { arraySet: function(e4, t4, n4, o4, i4) {
          for (var a3 = 0; a3 < o4; a3++)
            e4[i4 + a3] = t4[n4 + a3];
        }, flattenChunks: function(e4) {
          return [].concat.apply([], e4);
        } };
        t3.setTyped = function(e4) {
          e4 ? (t3.Buf8 = Uint8Array, t3.Buf16 = Uint16Array, t3.Buf32 = Int32Array, t3.assign(t3, o3)) : (t3.Buf8 = Array, t3.Buf16 = Array, t3.Buf32 = Array, t3.assign(t3, i3));
        }, t3.setTyped(n3);
      });
      function Mr2(e3) {
        return d2(this, Mr2), (e3 = Rs.call(this, e3))._n = "FollowModule", e3._myFollowersList = /* @__PURE__ */ new Map(), e3._myFollowingList = /* @__PURE__ */ new Map(), e3._myMutualFollowersList = /* @__PURE__ */ new Map(), e3._followType = /* @__PURE__ */ new Map(), e3.MAX_CATCH_TIME = 6e5, e3.FIRST_PAGE_INDEX = mt2(), e3.DEFAULT_COUNT = 500, e3.MAX_COUNT = 1e3, e3.getIEmitInst().on(P2.CLOUD_CONFIG, e3._onCloudConfig, i2(e3)), e3;
      }
      function yr2(e3) {
        d2(this, yr2), (e3 = Os.call(this, e3))._n = "SignalingModule", e3._inviteInfoMap = /* @__PURE__ */ new Map(), e3._canIUseSignaling = false, e3._isHandling = false, e3._remoteSignalingHandler = new lr2(i2(e3)), e3._localSignalingHandler = new dr2(i2(e3)), e3._historySignalingHandler = new pr2(i2(e3)), e3._isC2CUnreadHandleCompleted = false, e3._isConvSyncCompleted = false, e3._isSyncCompleted = false, e3._isCloudConfigCompleted = false;
        var t3 = e3.getIEmitInst();
        return t3.on(P2.C2C_UNREAD_HANDLE_COMPLETED, e3.onC2CUnreadHandleCompleted, i2(e3)), t3.on(P2.CONV_SYNC_COMPLETED, e3.onConvSyncCompleted, i2(e3)), t3.on(P2.CLOUD_CONFIG, e3.onCloudConfig, i2(e3)), e3;
      }
      function Cr2(e3) {
        d2(this, Cr2), this._n = "HistorySignalingHandler", this._sigM = e3, this.COUNT = 20, this.EXPIRED_TIME = 300, this._map = /* @__PURE__ */ new Map(), this._relatedToMeMap = /* @__PURE__ */ new Map();
      }
      function Tr2(e3) {
        d2(this, Tr2), this._n = "LocalSignalingHandler", this._sigM = e3;
      }
      function Dr2(e3) {
        d2(this, Dr2), this._n = "RemoteSignalingHandler", this._sigM = e3;
      }
      function Er2(e3) {
        d2(this, Er2), this._m = e3, this._n = "ErrMsgModule", this.TIM_ERROR_ASSISTANCE = "tim_error_assistance", this.STORAGE_EXPIRES_TIME = 6048e5, this._map = /* @__PURE__ */ new Map(), this._init();
      }
      function Lr2(e3) {
        d2(this, Lr2), this._m = e3, this._n = "TransCmdModule", this._TRTCCommandList = ["tui_room_svr.*", "callkit_records_svr.*", "room_engine_srv.*", "room_engine_http_srv.*", "room_engine_mic.*", "live_engine_srv.*", "live_engine_http_srv.*", "live_engine_pk.*", "trtc_ai_service.*"], this._TRTCCommandMap = /* @__PURE__ */ new Map(), this._setTRTCCommandMap(), this._m.getIEmitInst().on(P2.CLOUD_CONFIG, this._onCloudConfig, this);
      }
      function Sr2(e3) {
        return d2(this, Sr2), (e3 = Ns.call(this, e3))._n = "ProfanityFilterModule", e3._plugin = null, e3._filterConfigMap = /* @__PURE__ */ new Map(), e3._startIndex = 0, e3._version = 0, e3._canIUseLexicon = false, e3._isFetching = false, e3._expiredTime = 0, e3;
      }
      function kr2(e3) {
        var t3;
        return d2(this, kr2), (t3 = Gs.call(this, e3))._m = e3, t3._n = "TIMPushModule", t3._pluginName = "TIMPush", t3._pushPlugin = void 0, t3._androidPushConfig = {}, t3._deviceToken = "", t3._businessID = 0, t3._iOSBusinessID = 0, t3._c2cUnreadCount = 0, t3._groupUnreadCount = 0, t3._isWebUniapp = 0, t3._deviceInfo = { notificationStatus: 0, deviceModel: "", systemVersion: "", pushVersion: "1.0.1", packageName: "" }, t3;
      }
      function Ar2(e3) {
        var t3;
        return d2(this, Ar2), (t3 = Ps.call(this, e3))._m = e3, t3._n = "OfflinePushModule", t3._offlinePushPlugin = void 0, t3._androidPushConfig = { huaweiPushBussinessId: "", xiaomiPushBussinessId: "", xiaomiPushAppId: "", xiaomiPushAppKey: "", meizuPushBussinessId: "", meizuPushAppId: "", meizuPushAppKey: "", vivoPushBussinessId: "", fcmPushBussinessId: "", oppoPushBussinessId: "", oppoPushAppKey: "", oppoPushAppSecret: "", honorPushBussinessId: "" }, t3._deviceToken = "", t3._businessID = 0, t3._iosBusinessID = 0, t3._c2cUnreadCount = 0, t3._groupUnreadCount = 0, t3._isWebUniapp = 0, t3;
      }
      function Rr2(e3) {
        d2(this, Rr2), this._m = e3, this._n = "CommercialConfigModule", this._expiredTime = 0, this._isFetching = false, this._purchasedFeatureHandler = new or2(this);
      }
      function Or2(e3) {
        d2(this, Or2), this._commercialConfigM = e3, this._n = "PurchasedFeatureHandler", this._isSCMReported = false, this._featureMap = /* @__PURE__ */ new Map();
      }
      function Nr2(e3) {
        return d2(this, Nr2), (e3 = Us.call(this, e3))._n = "WorkerTimerModule", e3._isWorkerEnabled = true, e3._workerTimer = null, e3._timerID = -1, e3._init(), e3.getIEmitInst().on(P2.CLOUD_CONFIG, e3._onCloudConfig, i2(e3)), e3;
      }
      function Gr2(e3) {
        return d2(this, Gr2), (e3 = bs.call(this, e3))._n = "SnsModule", e3._friendHandler = new Qs(i2(e3)), e3._friendApplicationHandler = new Xs(i2(e3)), e3._friendGroupHandler = new er2(i2(e3)), e3.getIEmitInst().on(P2.A2KEY_AND_TINYID_UPDATED, e3.onContextUpdated, i2(e3)), e3;
      }
      function Pr2(e3) {
        d2(this, Pr2), this._snsM = e3, this._n = "FriendGroupHandler", this._map = /* @__PURE__ */ new Map();
      }
      function Ur2(e3) {
        d2(this, Ur2), S2(e3) || (this.name = e3.name || "", this.userIDList = e3.userIDList || [], this.count = this.userIDList.length || 0);
      }
      function br2(e3) {
        d2(this, br2), this._snsM = e3, this._n = "FriendHandler", this._map = /* @__PURE__ */ new Map(), this._startIdx = 0, this._standardSeq = 0, this._customSeq = 0, this._expirationTime = 18e4;
      }
      function wr2(e3, t3) {
        d2(this, wr2), this.userID = e3, this.remark = "", this.groupList = [], this.source = "", this.addTime = 0, this.friendCustomField = [], this.timestamp = 0;
        var n3 = {}, o3 = [];
        if (n3.userID = e3, !S2(t3))
          for (var i3, a3 = "", s3 = 0, r3 = t3.length; s3 < r3; s3++)
            if (a3 = t3[s3].tag, i3 = t3[s3].value, -1 < a3.indexOf("Tag_SNS_Custom"))
              this.friendCustomField.push({ key: a3, value: i3 });
            else if (-1 < a3.indexOf("Tag_Profile_Custom"))
              o3.push({ key: a3, value: i3 });
            else
              switch (a3) {
                case g2.NICK:
                  n3.nick = i3;
                  break;
                case g2.GENDER:
                  n3.gender = i3;
                  break;
                case g2.BIRTHDAY:
                  n3.birthday = i3;
                  break;
                case g2.LOCATION:
                  n3.location = i3;
                  break;
                case g2.SELFSIGNATURE:
                  n3.selfSignature = i3;
                  break;
                case g2.ALLOWTYPE:
                  n3.allowType = i3;
                  break;
                case g2.LANGUAGE:
                  n3.language = i3;
                  break;
                case g2.AVATAR:
                  n3.avatar = i3;
                  break;
                case g2.MESSAGESETTINGS:
                  n3.messageSettings = i3;
                  break;
                case g2.ADMINFORBIDTYPE:
                  n3.adminForbidType = i3;
                  break;
                case g2.LEVEL:
                  n3.level = i3;
                  break;
                case g2.ROLE:
                  n3.role = i3;
                  break;
                case Ze2.REMARK:
                  this.remark = i3;
                  break;
                case Ze2.ADDTIME:
                  this.addTime = i3;
                  break;
                case Ze2.GROUP:
                  this.groupList = JSON.parse(JSON.stringify(i3));
                  break;
                case Ze2.ADDSOURCE:
                  this.source = i3;
                  break;
                case Ze2.ADDWORDING:
                  break;
                default:
                  M2.l("snsProfileItem unknown tag->", t3[s3].tag);
              }
        this.profile = new ei2(y2(y2({}, n3), {}, { profileCustomField: o3 }));
      }
      function Fr2(e3) {
        d2(this, Fr2), this._snsM = e3, this._n = "FriendApplicationHandler", this._startTime = 0, this._maxLimited = 100, this._currentSeq = 0, this._map = /* @__PURE__ */ new Map(), this._unreadCount = 0;
      }
      function qr2(e3) {
        d2(this, qr2), (e3 = ws.call(this, e3))._n = "QualityStatModule", e3.TAG = "im-ssolog-quality-stat", e3.reportIndex = 0, e3.wholePeriod = false, e3._qualityItems = [xn2, Vn2, Hn2, Bn2, Kn2, Yn2, Wn2, jn2, Jn2, zn2], e3._messageSentItems = [Hn2, Bn2, Kn2, Yn2, Wn2], e3._messageReceivedItems = [jn2, Jn2, zn2], e3.REPORT_INTERVAL = 120, e3.REPORT_SDKAPPID_BLACKLIST = [], e3.REPORT_TINYID_WHITELIST = [], e3._statInfoArr = [], e3._avgRTT = new Ys(), e3._avgE2EDelay = new Ks(), e3._rateMessageSent = new Ws(), e3._rateMessageReceived = new js();
        var t3 = e3.getIEmitInst();
        return t3.on(P2.A2KEY_AND_TINYID_UPDATED, e3._onLoginSuccess, i2(e3)), t3.on(P2.CLOUD_CONFIG, e3._onCloudConfig, i2(e3)), e3;
      }
      function xr2() {
        d2(this, xr2), this._lastMap = /* @__PURE__ */ new Map(), this._currentMap = /* @__PURE__ */ new Map();
      }
      function Vr2() {
        d2(this, Vr2), this._map = /* @__PURE__ */ new Map();
      }
      function Hr2() {
        d2(this, Hr2), this._n = "AvgRTT", this._requestCount = 0, this._rttArray = [];
      }
      function Br2() {
        d2(this, Br2), this._n = "AvgE2EDelay", this._e2eDelayArray = [];
      }
      function Kr2(e3) {
        return d2(this, Kr2), (e3 = Fs.call(this, e3))._n = "RecoverMsgModule", e3.PULL_LIMIT_COUNT = 15, e3;
      }
      function Yr2(e3) {
        return d2(this, Yr2), (e3 = qs.call(this, e3))._n = "CloudControlModule", e3._cloudConfig = /* @__PURE__ */ new Map(), e3._expiredTime = 0, e3._version = 0, e3._isFetching = false, e3;
      }
      function Wr2(e3) {
        return d2(this, Wr2), (e3 = xs.call(this, e3))._n = "SessionModule", e3._platform = e3.getPlatform(), e3._pHandler = new hs(i2(e3)), e3._msgDispatcher = new fs(i2(e3)), e3._cmdFreqLimitMap = /* @__PURE__ */ new Map(), e3._cmdReqInfoMap = /* @__PURE__ */ new Map(), e3._serverOverloadInfoMap = /* @__PURE__ */ new Map(), e3._incrementalPullContactFlag = true, e3._init(), e3.getIEmitInst().on(P2.CLOUD_CONFIG, e3._onCloudConfig, i2(e3)), e3;
      }
      ie2.assign, ie2.shrinkBuf, ie2.setTyped, ie2.Buf8, ie2.Buf16, ie2.Buf32;
      function jr2(e3, t3, n3, o3) {
        for (var i3 = 65535 & e3 | 0, a3 = e3 >>> 16 & 65535 | 0, s3 = 0; 0 !== n3; ) {
          for (n3 -= s3 = 2e3 < n3 ? 2e3 : n3; a3 = a3 + (i3 = i3 + t3[o3++] | 0) | 0, --s3; )
            ;
          i3 %= 65521, a3 %= 65521;
        }
        return i3 | a3 << 16 | 0;
      }
      function Jr2(e3, t3, n3, o3) {
        var i3 = Xr2, a3 = o3 + n3;
        e3 ^= -1;
        for (var s3 = o3; s3 < a3; s3++)
          e3 = e3 >>> 8 ^ i3[255 & (e3 ^ t3[s3])];
        return -1 ^ e3;
      }
      function zr2(e3, t3, n3, o3, i3, a3, s3, r3) {
        for (var c3, u3, l3, d3, p3, _3, h3, g3, f3, m3 = r3.bits, v3 = 0, I3 = 0, M3 = 0, y3 = 0, C3 = 0, T3 = 0, D3 = 0, E3 = 0, L3 = 0, S3 = 0, k3 = null, A3 = 0, R3 = new ie2.Buf16(16), O3 = new ie2.Buf16(16), N3 = null, G3 = 0, v3 = 0; v3 <= 15; v3++)
          R3[v3] = 0;
        for (I3 = 0; I3 < o3; I3++)
          R3[t3[n3 + I3]]++;
        for (C3 = m3, y3 = 15; 1 <= y3 && 0 === R3[y3]; y3--)
          ;
        if (y3 < C3 && (C3 = y3), 0 === y3)
          i3[a3++] = 20971520, i3[a3++] = 20971520, r3.bits = 1;
        else {
          for (M3 = 1; M3 < y3 && 0 === R3[M3]; M3++)
            ;
          for (C3 < M3 && (C3 = M3), v3 = E3 = 1; v3 <= 15; v3++)
            if ((E3 = (E3 << 1) - R3[v3]) < 0)
              return -1;
          if (0 < E3 && (0 === e3 || 1 !== y3))
            return -1;
          for (O3[1] = 0, v3 = 1; v3 < 15; v3++)
            O3[v3 + 1] = O3[v3] + R3[v3];
          for (I3 = 0; I3 < o3; I3++)
            0 !== t3[n3 + I3] && (s3[O3[t3[n3 + I3]]++] = I3);
          if (_3 = 0 === e3 ? (k3 = N3 = s3, 19) : 1 === e3 ? (k3 = Zr2, A3 -= 257, N3 = Qr2, G3 -= 257, 256) : (k3 = $r2, N3 = ec, -1), v3 = M3, p3 = a3, D3 = I3 = S3 = 0, l3 = -1, d3 = (L3 = 1 << (T3 = C3)) - 1, 1 === e3 && 852 < L3 || 2 === e3 && 592 < L3)
            return 1;
          for (; ; ) {
            for (f3 = s3[I3] < _3 ? (g3 = 0, s3[I3]) : s3[I3] > _3 ? (g3 = N3[G3 + s3[I3]], k3[A3 + s3[I3]]) : (g3 = 96, 0), c3 = 1 << (h3 = v3 - D3), M3 = u3 = 1 << T3; i3[p3 + (S3 >> D3) + (u3 -= c3)] = h3 << 24 | g3 << 16 | f3 | 0, 0 !== u3; )
              ;
            for (c3 = 1 << v3 - 1; S3 & c3; )
              c3 >>= 1;
            if (0 !== c3 ? S3 = (S3 & c3 - 1) + c3 : S3 = 0, I3++, 0 == --R3[v3]) {
              if (v3 === y3)
                break;
              v3 = t3[n3 + s3[I3]];
            }
            if (C3 < v3 && (S3 & d3) !== l3) {
              for (p3 += M3, E3 = 1 << (T3 = v3 - (D3 = 0 === D3 ? C3 : D3)); T3 + D3 < y3 && !((E3 -= R3[T3 + D3]) <= 0); )
                T3++, E3 <<= 1;
              if (L3 += 1 << T3, 1 === e3 && 852 < L3 || 2 === e3 && 592 < L3)
                return 1;
              i3[l3 = S3 & d3] = C3 << 24 | T3 << 16 | p3 - a3 | 0;
            }
          }
          0 !== S3 && (i3[p3 + S3] = v3 - D3 << 24 | 64 << 16 | 0), r3.bits = C3;
        }
        return 0;
      }
      var Xr2 = function() {
        for (var e3 = [], t3 = 0; t3 < 256; t3++) {
          for (var n3 = t3, o3 = 0; o3 < 8; o3++)
            n3 = 1 & n3 ? 3988292384 ^ n3 >>> 1 : n3 >>> 1;
          e3[t3] = n3;
        }
        return e3;
      }(), Zr2 = [3, 4, 5, 6, 7, 8, 9, 10, 11, 13, 15, 17, 19, 23, 27, 31, 35, 43, 51, 59, 67, 83, 99, 115, 131, 163, 195, 227, 258, 0, 0], Qr2 = [16, 16, 16, 16, 16, 16, 16, 16, 17, 17, 17, 17, 18, 18, 18, 18, 19, 19, 19, 19, 20, 20, 20, 20, 21, 21, 21, 21, 16, 72, 78], $r2 = [1, 2, 3, 4, 5, 7, 9, 13, 17, 25, 33, 49, 65, 97, 129, 193, 257, 385, 513, 769, 1025, 1537, 2049, 3073, 4097, 6145, 8193, 12289, 16385, 24577, 0, 0], ec = [16, 16, 16, 16, 17, 17, 18, 18, 19, 19, 20, 20, 21, 21, 22, 22, 23, 23, 24, 24, 25, 25, 26, 26, 27, 27, 28, 28, 29, 29, 64, 64];
      function tc(e3) {
        return (e3 >>> 24 & 255) + (e3 >>> 8 & 65280) + ((65280 & e3) << 8) + ((255 & e3) << 24);
      }
      function nc() {
        this.mode = 0, this.last = false, this.wrap = 0, this.havedict = false, this.flags = 0, this.dmax = 0, this.check = 0, this.total = 0, this.head = null, this.wbits = 0, this.wsize = 0, this.whave = 0, this.wnext = 0, this.window = null, this.hold = 0, this.bits = 0, this.length = 0, this.offset = 0, this.extra = 0, this.lencode = null, this.distcode = null, this.lenbits = 0, this.distbits = 0, this.ncode = 0, this.nlen = 0, this.ndist = 0, this.have = 0, this.next = null, this.lens = new ie2.Buf16(320), this.work = new ie2.Buf16(288), this.lendyn = null, this.distdyn = null, this.sane = 0, this.back = 0, this.was = 0;
      }
      function oc(e3) {
        var t3;
        return e3 && e3.state ? (t3 = e3.state, e3.total_in = e3.total_out = t3.total = 0, e3.msg = "", t3.wrap && (e3.adler = 1 & t3.wrap), t3.mode = 1, t3.last = 0, t3.havedict = 0, t3.dmax = 32768, t3.head = null, t3.hold = 0, t3.bits = 0, t3.lencode = t3.lendyn = new ie2.Buf32(852), t3.distcode = t3.distdyn = new ie2.Buf32(592), t3.sane = 1, t3.back = -1, 0) : -2;
      }
      function ic(e3) {
        var t3;
        return e3 && e3.state ? ((t3 = e3.state).wsize = 0, t3.whave = 0, t3.wnext = 0, oc(e3)) : -2;
      }
      function ac(e3, t3) {
        var n3, o3;
        return !e3 || !e3.state || (o3 = e3.state, t3 < 0 ? (n3 = 0, t3 = -t3) : (n3 = 1 + (t3 >> 4), t3 < 48 && (t3 &= 15)), t3 && (t3 < 8 || 15 < t3)) ? -2 : (null !== o3.window && o3.wbits !== t3 && (o3.window = null), o3.wrap = n3, o3.wbits = t3, ic(e3));
      }
      function sc(e3, t3) {
        var n3;
        return e3 ? (n3 = new nc(), (e3.state = n3).window = null, 0 !== (n3 = ac(e3, t3)) && (e3.state = null), n3) : -2;
      }
      var rc, cc, uc = true;
      function lc(e3, t3, n3, o3) {
        var i3, e3 = e3.state;
        return null === e3.window && (e3.wsize = 1 << e3.wbits, e3.wnext = 0, e3.whave = 0, e3.window = new ie2.Buf8(e3.wsize)), o3 >= e3.wsize ? (ie2.arraySet(e3.window, t3, n3 - e3.wsize, e3.wsize, 0), e3.wnext = 0, e3.whave = e3.wsize) : ((i3 = e3.wsize - e3.wnext) > o3 && (i3 = o3), ie2.arraySet(e3.window, t3, n3 - o3, i3, e3.wnext), (o3 -= i3) ? (ie2.arraySet(e3.window, t3, n3 - o3, o3, 0), e3.wnext = o3, e3.whave = e3.wsize) : (e3.wnext += i3, e3.wnext === e3.wsize && (e3.wnext = 0), e3.whave < e3.wsize && (e3.whave += i3))), 0;
      }
      var dc = { inflateReset: ic, inflateReset2: ac, inflateResetKeep: oc, inflateInit: function(e3) {
        return sc(e3, 15);
      }, inflateInit2: sc, inflate: function(e3, b3) {
        var t3, n3, w3, o3, i3, a3, s3, r3, c3, F3, u3, l3, q3, x3, d3, p3, _3, h3, V3, H3, g3, f3, m3, v3, I3 = 0, M3 = new ie2.Buf8(4), B3 = [16, 17, 18, 0, 8, 7, 9, 6, 10, 5, 11, 4, 12, 3, 13, 2, 14, 1, 15];
        if (!e3 || !e3.state || !e3.output || !e3.input && 0 !== e3.avail_in)
          return -2;
        12 === (t3 = e3.state).mode && (t3.mode = 13), i3 = e3.next_out, w3 = e3.output, s3 = e3.avail_out, o3 = e3.next_in, n3 = e3.input, a3 = e3.avail_in, r3 = t3.hold, c3 = t3.bits, F3 = a3, u3 = s3, f3 = 0;
        e:
          for (; ; )
            switch (t3.mode) {
              case 1:
                if (0 === t3.wrap)
                  t3.mode = 13;
                else {
                  for (; c3 < 16; ) {
                    if (0 === a3)
                      break e;
                    a3--, r3 += n3[o3++] << c3, c3 += 8;
                  }
                  if (2 & t3.wrap && 35615 === r3)
                    M3[t3.check = 0] = 255 & r3, M3[1] = r3 >>> 8 & 255, t3.check = Jr2(t3.check, M3, 2, 0), c3 = r3 = 0, t3.mode = 2;
                  else if (t3.flags = 0, t3.head && (t3.head.done = false), !(1 & t3.wrap) || (((255 & r3) << 8) + (r3 >> 8)) % 31)
                    e3.msg = "incorrect header check", t3.mode = 30;
                  else if (8 != (15 & r3))
                    e3.msg = "unknown compression method", t3.mode = 30;
                  else {
                    if (c3 -= 4, g3 = 8 + (15 & (r3 >>>= 4)), 0 === t3.wbits)
                      t3.wbits = g3;
                    else if (g3 > t3.wbits) {
                      e3.msg = "invalid window size", t3.mode = 30;
                      break;
                    }
                    t3.dmax = 1 << g3, e3.adler = t3.check = 1, t3.mode = 512 & r3 ? 10 : 12, c3 = r3 = 0;
                  }
                }
                break;
              case 2:
                for (; c3 < 16; ) {
                  if (0 === a3)
                    break e;
                  a3--, r3 += n3[o3++] << c3, c3 += 8;
                }
                if (t3.flags = r3, 8 != (255 & t3.flags)) {
                  e3.msg = "unknown compression method", t3.mode = 30;
                  break;
                }
                if (57344 & t3.flags) {
                  e3.msg = "unknown header flags set", t3.mode = 30;
                  break;
                }
                t3.head && (t3.head.text = r3 >> 8 & 1), 512 & t3.flags && (M3[0] = 255 & r3, M3[1] = r3 >>> 8 & 255, t3.check = Jr2(t3.check, M3, 2, 0)), c3 = r3 = 0, t3.mode = 3;
              case 3:
                for (; c3 < 32; ) {
                  if (0 === a3)
                    break e;
                  a3--, r3 += n3[o3++] << c3, c3 += 8;
                }
                t3.head && (t3.head.time = r3), 512 & t3.flags && (M3[0] = 255 & r3, M3[1] = r3 >>> 8 & 255, M3[2] = r3 >>> 16 & 255, M3[3] = r3 >>> 24 & 255, t3.check = Jr2(t3.check, M3, 4, 0)), c3 = r3 = 0, t3.mode = 4;
              case 4:
                for (; c3 < 16; ) {
                  if (0 === a3)
                    break e;
                  a3--, r3 += n3[o3++] << c3, c3 += 8;
                }
                t3.head && (t3.head.xflags = 255 & r3, t3.head.os = r3 >> 8), 512 & t3.flags && (M3[0] = 255 & r3, M3[1] = r3 >>> 8 & 255, t3.check = Jr2(t3.check, M3, 2, 0)), c3 = r3 = 0, t3.mode = 5;
              case 5:
                if (1024 & t3.flags) {
                  for (; c3 < 16; ) {
                    if (0 === a3)
                      break e;
                    a3--, r3 += n3[o3++] << c3, c3 += 8;
                  }
                  t3.length = r3, t3.head && (t3.head.extra_len = r3), 512 & t3.flags && (M3[0] = 255 & r3, M3[1] = r3 >>> 8 & 255, t3.check = Jr2(t3.check, M3, 2, 0)), c3 = r3 = 0;
                } else
                  t3.head && (t3.head.extra = null);
                t3.mode = 6;
              case 6:
                if (1024 & t3.flags && ((l3 = (l3 = t3.length) > a3 ? a3 : l3) && (t3.head && (g3 = t3.head.extra_len - t3.length, t3.head.extra || (t3.head.extra = new Array(t3.head.extra_len)), ie2.arraySet(t3.head.extra, n3, o3, l3, g3)), 512 & t3.flags && (t3.check = Jr2(t3.check, n3, l3, o3)), a3 -= l3, o3 += l3, t3.length -= l3), t3.length))
                  break e;
                t3.length = 0, t3.mode = 7;
              case 7:
                if (2048 & t3.flags) {
                  if (0 === a3)
                    break e;
                  for (l3 = 0; g3 = n3[o3 + l3++], t3.head && g3 && t3.length < 65536 && (t3.head.name += String.fromCharCode(g3)), g3 && l3 < a3; )
                    ;
                  if (512 & t3.flags && (t3.check = Jr2(t3.check, n3, l3, o3)), a3 -= l3, o3 += l3, g3)
                    break e;
                } else
                  t3.head && (t3.head.name = null);
                t3.length = 0, t3.mode = 8;
              case 8:
                if (4096 & t3.flags) {
                  if (0 === a3)
                    break e;
                  for (l3 = 0; g3 = n3[o3 + l3++], t3.head && g3 && t3.length < 65536 && (t3.head.comment += String.fromCharCode(g3)), g3 && l3 < a3; )
                    ;
                  if (512 & t3.flags && (t3.check = Jr2(t3.check, n3, l3, o3)), a3 -= l3, o3 += l3, g3)
                    break e;
                } else
                  t3.head && (t3.head.comment = null);
                t3.mode = 9;
              case 9:
                if (512 & t3.flags) {
                  for (; c3 < 16; ) {
                    if (0 === a3)
                      break e;
                    a3--, r3 += n3[o3++] << c3, c3 += 8;
                  }
                  if (r3 !== (65535 & t3.check)) {
                    e3.msg = "header crc mismatch", t3.mode = 30;
                    break;
                  }
                  c3 = r3 = 0;
                }
                t3.head && (t3.head.hcrc = t3.flags >> 9 & 1, t3.head.done = true), e3.adler = t3.check = 0, t3.mode = 12;
                break;
              case 10:
                for (; c3 < 32; ) {
                  if (0 === a3)
                    break e;
                  a3--, r3 += n3[o3++] << c3, c3 += 8;
                }
                e3.adler = t3.check = tc(r3), c3 = r3 = 0, t3.mode = 11;
              case 11:
                if (0 === t3.havedict)
                  return e3.next_out = i3, e3.avail_out = s3, e3.next_in = o3, e3.avail_in = a3, t3.hold = r3, t3.bits = c3, 2;
                e3.adler = t3.check = 1, t3.mode = 12;
              case 12:
                if (5 === b3 || 6 === b3)
                  break e;
              case 13:
                if (t3.last)
                  r3 >>>= 7 & c3, c3 -= 7 & c3, t3.mode = 27;
                else {
                  for (; c3 < 3; ) {
                    if (0 === a3)
                      break e;
                    a3--, r3 += n3[o3++] << c3, c3 += 8;
                  }
                  switch (t3.last = 1 & r3, --c3, 3 & (r3 >>>= 1)) {
                    case 0:
                      t3.mode = 14;
                      break;
                    case 1:
                      y3 = C3 = void 0;
                      var y3, C3 = t3;
                      if (uc) {
                        for (rc = new ie2.Buf32(512), cc = new ie2.Buf32(32), y3 = 0; y3 < 144; )
                          C3.lens[y3++] = 8;
                        for (; y3 < 256; )
                          C3.lens[y3++] = 9;
                        for (; y3 < 280; )
                          C3.lens[y3++] = 7;
                        for (; y3 < 288; )
                          C3.lens[y3++] = 8;
                        for (zr2(1, C3.lens, 0, 288, rc, 0, C3.work, { bits: 9 }), y3 = 0; y3 < 32; )
                          C3.lens[y3++] = 5;
                        zr2(2, C3.lens, 0, 32, cc, 0, C3.work, { bits: 5 }), uc = false;
                      }
                      if (C3.lencode = rc, C3.lenbits = 9, C3.distcode = cc, C3.distbits = 5, t3.mode = 20, 6 !== b3)
                        break;
                      r3 >>>= 2, c3 -= 2;
                      break e;
                    case 2:
                      t3.mode = 17;
                      break;
                    case 3:
                      e3.msg = "invalid block type", t3.mode = 30;
                  }
                  r3 >>>= 2, c3 -= 2;
                }
                break;
              case 14:
                for (r3 >>>= 7 & c3, c3 -= 7 & c3; c3 < 32; ) {
                  if (0 === a3)
                    break e;
                  a3--, r3 += n3[o3++] << c3, c3 += 8;
                }
                if ((65535 & r3) != (r3 >>> 16 ^ 65535)) {
                  e3.msg = "invalid stored block lengths", t3.mode = 30;
                  break;
                }
                if (t3.length = 65535 & r3, c3 = r3 = 0, t3.mode = 15, 6 === b3)
                  break e;
              case 15:
                t3.mode = 16;
              case 16:
                if (l3 = t3.length) {
                  if (0 === (l3 = s3 < (l3 = a3 < l3 ? a3 : l3) ? s3 : l3))
                    break e;
                  ie2.arraySet(w3, n3, o3, l3, i3), a3 -= l3, o3 += l3, s3 -= l3, i3 += l3, t3.length -= l3;
                } else
                  t3.mode = 12;
                break;
              case 17:
                for (; c3 < 14; ) {
                  if (0 === a3)
                    break e;
                  a3--, r3 += n3[o3++] << c3, c3 += 8;
                }
                if (t3.nlen = 257 + (31 & r3), r3 >>>= 5, c3 -= 5, t3.ndist = 1 + (31 & r3), r3 >>>= 5, c3 -= 5, t3.ncode = 4 + (15 & r3), r3 >>>= 4, c3 -= 4, 286 < t3.nlen || 30 < t3.ndist) {
                  e3.msg = "too many length or distance symbols", t3.mode = 30;
                  break;
                }
                t3.have = 0, t3.mode = 18;
              case 18:
                for (; t3.have < t3.ncode; ) {
                  for (; c3 < 3; ) {
                    if (0 === a3)
                      break e;
                    a3--, r3 += n3[o3++] << c3, c3 += 8;
                  }
                  t3.lens[B3[t3.have++]] = 7 & r3, r3 >>>= 3, c3 -= 3;
                }
                for (; t3.have < 19; )
                  t3.lens[B3[t3.have++]] = 0;
                if (t3.lencode = t3.lendyn, t3.lenbits = 7, m3 = { bits: t3.lenbits }, f3 = zr2(0, t3.lens, 0, 19, t3.lencode, 0, t3.work, m3), t3.lenbits = m3.bits, f3) {
                  e3.msg = "invalid code lengths set", t3.mode = 30;
                  break;
                }
                t3.have = 0, t3.mode = 19;
              case 19:
                for (; t3.have < t3.nlen + t3.ndist; ) {
                  for (; p3 = (I3 = t3.lencode[r3 & (1 << t3.lenbits) - 1]) >>> 16 & 255, _3 = 65535 & I3, !((d3 = I3 >>> 24) <= c3); ) {
                    if (0 === a3)
                      break e;
                    a3--, r3 += n3[o3++] << c3, c3 += 8;
                  }
                  if (_3 < 16)
                    r3 >>>= d3, c3 -= d3, t3.lens[t3.have++] = _3;
                  else {
                    if (16 === _3) {
                      for (v3 = d3 + 2; c3 < v3; ) {
                        if (0 === a3)
                          break e;
                        a3--, r3 += n3[o3++] << c3, c3 += 8;
                      }
                      if (r3 >>>= d3, c3 -= d3, 0 === t3.have) {
                        e3.msg = "invalid bit length repeat", t3.mode = 30;
                        break;
                      }
                      g3 = t3.lens[t3.have - 1], l3 = 3 + (3 & r3), r3 >>>= 2, c3 -= 2;
                    } else if (17 === _3) {
                      for (v3 = d3 + 3; c3 < v3; ) {
                        if (0 === a3)
                          break e;
                        a3--, r3 += n3[o3++] << c3, c3 += 8;
                      }
                      g3 = 0, l3 = 3 + (7 & (r3 >>>= d3)), r3 >>>= 3, c3 = c3 - d3 - 3;
                    } else {
                      for (v3 = d3 + 7; c3 < v3; ) {
                        if (0 === a3)
                          break e;
                        a3--, r3 += n3[o3++] << c3, c3 += 8;
                      }
                      g3 = 0, l3 = 11 + (127 & (r3 >>>= d3)), r3 >>>= 7, c3 = c3 - d3 - 7;
                    }
                    if (t3.have + l3 > t3.nlen + t3.ndist) {
                      e3.msg = "invalid bit length repeat", t3.mode = 30;
                      break;
                    }
                    for (; l3--; )
                      t3.lens[t3.have++] = g3;
                  }
                }
                if (30 === t3.mode)
                  break;
                if (0 === t3.lens[256]) {
                  e3.msg = "invalid code -- missing end-of-block", t3.mode = 30;
                  break;
                }
                if (t3.lenbits = 9, m3 = { bits: t3.lenbits }, f3 = zr2(1, t3.lens, 0, t3.nlen, t3.lencode, 0, t3.work, m3), t3.lenbits = m3.bits, f3) {
                  e3.msg = "invalid literal/lengths set", t3.mode = 30;
                  break;
                }
                if (t3.distbits = 6, t3.distcode = t3.distdyn, m3 = { bits: t3.distbits }, f3 = zr2(2, t3.lens, t3.nlen, t3.ndist, t3.distcode, 0, t3.work, m3), t3.distbits = m3.bits, f3) {
                  e3.msg = "invalid distances set", t3.mode = 30;
                  break;
                }
                if (t3.mode = 20, 6 === b3)
                  break e;
              case 20:
                t3.mode = 21;
              case 21:
                if (6 <= a3 && 258 <= s3) {
                  e3.next_out = i3, e3.avail_out = s3, e3.next_in = o3, e3.avail_in = a3, t3.hold = r3, t3.bits = c3, G3 = Y3 = k3 = S3 = L3 = E3 = D3 = T3 = oe3 = ne3 = te3 = ee3 = U3 = P3 = $3 = Q3 = Z3 = X3 = z3 = J3 = j3 = N3 = W3 = O3 = R3 = void 0;
                  var T3, D3, E3, L3, S3, k3, A3 = e3, K3 = u3, R3 = A3.state, O3 = A3.next_in, Y3 = A3.input, W3 = O3 + (A3.avail_in - 5), N3 = A3.next_out, G3 = A3.output, j3 = N3 - (K3 - A3.avail_out), J3 = N3 + (A3.avail_out - 257), z3 = R3.dmax, X3 = R3.wsize, Z3 = R3.whave, Q3 = R3.wnext, $3 = R3.window, P3 = R3.hold, U3 = R3.bits, ee3 = R3.lencode, te3 = R3.distcode, ne3 = (1 << R3.lenbits) - 1, oe3 = (1 << R3.distbits) - 1;
                  t:
                    do {
                      for (U3 < 15 && (P3 += Y3[O3++] << U3, U3 += 8, P3 += Y3[O3++] << U3, U3 += 8), T3 = ee3[P3 & ne3]; ; ) {
                        if (P3 >>>= D3 = T3 >>> 24, U3 -= D3, 0 == (D3 = T3 >>> 16 & 255))
                          G3[N3++] = 65535 & T3;
                        else {
                          if (!(16 & D3)) {
                            if (0 == (64 & D3)) {
                              T3 = ee3[(65535 & T3) + (P3 & (1 << D3) - 1)];
                              continue;
                            }
                            if (32 & D3) {
                              R3.mode = 12;
                              break t;
                            }
                            A3.msg = "invalid literal/length code", R3.mode = 30;
                            break t;
                          }
                          for (E3 = 65535 & T3, (D3 &= 15) && (U3 < D3 && (P3 += Y3[O3++] << U3, U3 += 8), E3 += P3 & (1 << D3) - 1, P3 >>>= D3, U3 -= D3), U3 < 15 && (P3 += Y3[O3++] << U3, U3 += 8, P3 += Y3[O3++] << U3, U3 += 8), T3 = te3[P3 & oe3]; ; ) {
                            if (P3 >>>= D3 = T3 >>> 24, U3 -= D3, !(16 & (D3 = T3 >>> 16 & 255))) {
                              if (0 == (64 & D3)) {
                                T3 = te3[(65535 & T3) + (P3 & (1 << D3) - 1)];
                                continue;
                              }
                              A3.msg = "invalid distance code", R3.mode = 30;
                              break t;
                            }
                            if (L3 = 65535 & T3, U3 < (D3 &= 15) && (P3 += Y3[O3++] << U3, (U3 += 8) < D3) && (P3 += Y3[O3++] << U3, U3 += 8), (L3 += P3 & (1 << D3) - 1) > z3) {
                              A3.msg = "invalid distance too far back", R3.mode = 30;
                              break t;
                            }
                            if (P3 >>>= D3, U3 -= D3, L3 > (D3 = N3 - j3)) {
                              if ((D3 = L3 - D3) > Z3 && R3.sane) {
                                A3.msg = "invalid distance too far back", R3.mode = 30;
                                break t;
                              }
                              if (k3 = $3, (S3 = 0) === Q3) {
                                if (S3 += X3 - D3, D3 < E3) {
                                  for (E3 -= D3; G3[N3++] = $3[S3++], --D3; )
                                    ;
                                  S3 = N3 - L3, k3 = G3;
                                }
                              } else if (Q3 < D3) {
                                if (S3 += X3 + Q3 - D3, (D3 -= Q3) < E3) {
                                  for (E3 -= D3; G3[N3++] = $3[S3++], --D3; )
                                    ;
                                  if (S3 = 0, Q3 < E3) {
                                    for (E3 -= D3 = Q3; G3[N3++] = $3[S3++], --D3; )
                                      ;
                                    S3 = N3 - L3, k3 = G3;
                                  }
                                }
                              } else if (S3 += Q3 - D3, D3 < E3) {
                                for (E3 -= D3; G3[N3++] = $3[S3++], --D3; )
                                  ;
                                S3 = N3 - L3, k3 = G3;
                              }
                              for (; 2 < E3; )
                                G3[N3++] = k3[S3++], G3[N3++] = k3[S3++], G3[N3++] = k3[S3++], E3 -= 3;
                              E3 && (G3[N3++] = k3[S3++], 1 < E3) && (G3[N3++] = k3[S3++]);
                            } else {
                              for (S3 = N3 - L3; G3[N3++] = G3[S3++], G3[N3++] = G3[S3++], G3[N3++] = G3[S3++], 2 < (E3 -= 3); )
                                ;
                              E3 && (G3[N3++] = G3[S3++], 1 < E3) && (G3[N3++] = G3[S3++]);
                            }
                            break;
                          }
                        }
                        break;
                      }
                    } while (O3 < W3 && N3 < J3);
                  O3 -= E3 = U3 >> 3, P3 &= (1 << (U3 -= E3 << 3)) - 1, A3.next_in = O3, A3.next_out = N3, A3.avail_in = O3 < W3 ? W3 - O3 + 5 : 5 - (O3 - W3), A3.avail_out = N3 < J3 ? J3 - N3 + 257 : 257 - (N3 - J3), R3.hold = P3, R3.bits = U3, i3 = e3.next_out, w3 = e3.output, s3 = e3.avail_out, o3 = e3.next_in, n3 = e3.input, a3 = e3.avail_in, r3 = t3.hold, c3 = t3.bits, 12 === t3.mode && (t3.back = -1);
                  break;
                }
                for (t3.back = 0; p3 = (I3 = t3.lencode[r3 & (1 << t3.lenbits) - 1]) >>> 16 & 255, _3 = 65535 & I3, !((d3 = I3 >>> 24) <= c3); ) {
                  if (0 === a3)
                    break e;
                  a3--, r3 += n3[o3++] << c3, c3 += 8;
                }
                if (p3 && 0 == (240 & p3)) {
                  for (h3 = d3, V3 = p3, H3 = _3; p3 = (I3 = t3.lencode[H3 + ((r3 & (1 << h3 + V3) - 1) >> h3)]) >>> 16 & 255, _3 = 65535 & I3, !(h3 + (d3 = I3 >>> 24) <= c3); ) {
                    if (0 === a3)
                      break e;
                    a3--, r3 += n3[o3++] << c3, c3 += 8;
                  }
                  r3 >>>= h3, c3 -= h3, t3.back += h3;
                }
                if (r3 >>>= d3, c3 -= d3, t3.back += d3, t3.length = _3, 0 === p3) {
                  t3.mode = 26;
                  break;
                }
                if (32 & p3) {
                  t3.back = -1, t3.mode = 12;
                  break;
                }
                if (64 & p3) {
                  e3.msg = "invalid literal/length code", t3.mode = 30;
                  break;
                }
                t3.extra = 15 & p3, t3.mode = 22;
              case 22:
                if (t3.extra) {
                  for (v3 = t3.extra; c3 < v3; ) {
                    if (0 === a3)
                      break e;
                    a3--, r3 += n3[o3++] << c3, c3 += 8;
                  }
                  t3.length += r3 & (1 << t3.extra) - 1, r3 >>>= t3.extra, c3 -= t3.extra, t3.back += t3.extra;
                }
                t3.was = t3.length, t3.mode = 23;
              case 23:
                for (; p3 = (I3 = t3.distcode[r3 & (1 << t3.distbits) - 1]) >>> 16 & 255, _3 = 65535 & I3, !((d3 = I3 >>> 24) <= c3); ) {
                  if (0 === a3)
                    break e;
                  a3--, r3 += n3[o3++] << c3, c3 += 8;
                }
                if (0 == (240 & p3)) {
                  for (h3 = d3, V3 = p3, H3 = _3; p3 = (I3 = t3.distcode[H3 + ((r3 & (1 << h3 + V3) - 1) >> h3)]) >>> 16 & 255, _3 = 65535 & I3, !(h3 + (d3 = I3 >>> 24) <= c3); ) {
                    if (0 === a3)
                      break e;
                    a3--, r3 += n3[o3++] << c3, c3 += 8;
                  }
                  r3 >>>= h3, c3 -= h3, t3.back += h3;
                }
                if (r3 >>>= d3, c3 -= d3, t3.back += d3, 64 & p3) {
                  e3.msg = "invalid distance code", t3.mode = 30;
                  break;
                }
                t3.offset = _3, t3.extra = 15 & p3, t3.mode = 24;
              case 24:
                if (t3.extra) {
                  for (v3 = t3.extra; c3 < v3; ) {
                    if (0 === a3)
                      break e;
                    a3--, r3 += n3[o3++] << c3, c3 += 8;
                  }
                  t3.offset += r3 & (1 << t3.extra) - 1, r3 >>>= t3.extra, c3 -= t3.extra, t3.back += t3.extra;
                }
                if (t3.offset > t3.dmax) {
                  e3.msg = "invalid distance too far back", t3.mode = 30;
                  break;
                }
                t3.mode = 25;
              case 25:
                if (0 === s3)
                  break e;
                if (t3.offset > (l3 = u3 - s3)) {
                  if ((l3 = t3.offset - l3) > t3.whave && t3.sane) {
                    e3.msg = "invalid distance too far back", t3.mode = 30;
                    break;
                  }
                  q3 = l3 > t3.wnext ? (l3 -= t3.wnext, t3.wsize - l3) : t3.wnext - l3, l3 > t3.length && (l3 = t3.length), x3 = t3.window;
                } else
                  x3 = w3, q3 = i3 - t3.offset, l3 = t3.length;
                for (s3 -= l3 = s3 < l3 ? s3 : l3, t3.length -= l3; w3[i3++] = x3[q3++], --l3; )
                  ;
                0 === t3.length && (t3.mode = 21);
                break;
              case 26:
                if (0 === s3)
                  break e;
                w3[i3++] = t3.length, s3--, t3.mode = 21;
                break;
              case 27:
                if (t3.wrap) {
                  for (; c3 < 32; ) {
                    if (0 === a3)
                      break e;
                    a3--, r3 |= n3[o3++] << c3, c3 += 8;
                  }
                  if (u3 -= s3, e3.total_out += u3, t3.total += u3, u3 && (e3.adler = t3.check = (t3.flags ? Jr2 : jr2)(t3.check, w3, u3, i3 - u3)), u3 = s3, (t3.flags ? r3 : tc(r3)) !== t3.check) {
                    e3.msg = "incorrect data check", t3.mode = 30;
                    break;
                  }
                  c3 = r3 = 0;
                }
                t3.mode = 28;
              case 28:
                if (t3.wrap && t3.flags) {
                  for (; c3 < 32; ) {
                    if (0 === a3)
                      break e;
                    a3--, r3 += n3[o3++] << c3, c3 += 8;
                  }
                  if (r3 !== (4294967295 & t3.total)) {
                    e3.msg = "incorrect length check", t3.mode = 30;
                    break;
                  }
                  c3 = r3 = 0;
                }
                t3.mode = 29;
              case 29:
                f3 = 1;
                break e;
              case 30:
                f3 = -3;
                break e;
              case 31:
                return -4;
              default:
                return -2;
            }
        return e3.next_out = i3, e3.avail_out = s3, e3.next_in = o3, e3.avail_in = a3, t3.hold = r3, t3.bits = c3, (t3.wsize || u3 !== e3.avail_out && t3.mode < 30 && (t3.mode < 27 || 4 !== b3)) && lc(e3, e3.output, e3.next_out, u3 - e3.avail_out), F3 -= e3.avail_in, u3 -= e3.avail_out, e3.total_in += F3, e3.total_out += u3, t3.total += u3, t3.wrap && u3 && (e3.adler = t3.check = (t3.flags ? Jr2 : jr2)(t3.check, w3, u3, e3.next_out - u3)), e3.data_type = t3.bits + (t3.last ? 64 : 0) + (12 === t3.mode ? 128 : 0) + (20 === t3.mode || 15 === t3.mode ? 256 : 0), f3 = (0 == F3 && 0 === u3 || 4 === b3) && 0 === f3 ? -5 : f3;
      }, inflateEnd: function(e3) {
        var t3;
        return e3 && e3.state ? ((t3 = e3.state).window && (t3.window = null), e3.state = null, 0) : -2;
      }, inflateGetHeader: function(e3, t3) {
        return !e3 || !e3.state || 0 == (2 & (e3 = e3.state).wrap) ? -2 : ((e3.head = t3).done = false, 0);
      }, inflateSetDictionary: function(e3, t3) {
        var n3, o3 = t3.length;
        return !e3 || !e3.state || 0 !== (n3 = e3.state).wrap && 11 !== n3.mode ? -2 : 11 === n3.mode && jr2(1, t3, o3, 0) !== n3.check ? -3 : lc(e3, t3, o3, o3) ? (n3.mode = 31, -4) : (n3.havedict = 1, 0);
      }, inflateInfo: "pako inflate (from Nodeca project)" }, pc = true, _c = true;
      try {
        String.fromCharCode.apply(null, [0]);
      } catch (e3) {
        pc = false;
      }
      try {
        String.fromCharCode.apply(null, new Uint8Array(1));
      } catch (e3) {
        _c = false;
      }
      for (var hc = new ie2.Buf8(256), gc = 0; gc < 256; gc++)
        hc[gc] = 252 <= gc ? 6 : 248 <= gc ? 5 : 240 <= gc ? 4 : 224 <= gc ? 3 : 192 <= gc ? 2 : 1;
      hc[254] = hc[254] = 1;
      function fc(e3, t3) {
        for (var n3, o3, i3 = t3 || e3.length, a3 = new Array(2 * i3), s3 = 0, r3 = 0; r3 < i3; )
          if ((n3 = e3[r3++]) < 128)
            a3[s3++] = n3;
          else if (4 < (o3 = hc[n3]))
            a3[s3++] = 65533, r3 += o3 - 1;
          else {
            for (n3 &= 2 === o3 ? 31 : 3 === o3 ? 15 : 7; 1 < o3 && r3 < i3; )
              n3 = n3 << 6 | 63 & e3[r3++], o3--;
            1 < o3 ? a3[s3++] = 65533 : n3 < 65536 ? a3[s3++] = n3 : (n3 -= 65536, a3[s3++] = 55296 | n3 >> 10 & 1023, a3[s3++] = 56320 | 1023 & n3);
          }
        var c3 = a3, u3 = s3;
        if (u3 < 65534 && (c3.subarray && _c || !c3.subarray && pc))
          return String.fromCharCode.apply(null, ie2.shrinkBuf(c3, u3));
        for (var l3 = "", d3 = 0; d3 < u3; d3++)
          l3 += String.fromCharCode(c3[d3]);
        return l3;
      }
      function mc() {
        this.input = null, this.next_in = 0, this.avail_in = 0, this.total_in = 0, this.output = null, this.next_out = 0, this.avail_out = 0, this.total_out = 0, this.msg = "", this.state = null, this.data_type = 2, this.adler = 0;
      }
      function vc() {
        this.text = 0, this.time = 0, this.xflags = 0, this.os = 0, this.extra = null, this.extra_len = 0, this.name = "", this.comment = "", this.hcrc = 0, this.done = false;
      }
      var Ic = { Z_NO_FLUSH: 0, Z_PARTIAL_FLUSH: 1, Z_SYNC_FLUSH: 2, Z_FULL_FLUSH: 3, Z_FINISH: 4, Z_BLOCK: 5, Z_TREES: 6, Z_OK: 0, Z_STREAM_END: 1, Z_NEED_DICT: 2, Z_ERRNO: -1, Z_STREAM_ERROR: -2, Z_DATA_ERROR: -3, Z_BUF_ERROR: -5, Z_NO_COMPRESSION: 0, Z_BEST_SPEED: 1, Z_BEST_COMPRESSION: 9, Z_DEFAULT_COMPRESSION: -1, Z_FILTERED: 1, Z_HUFFMAN_ONLY: 2, Z_RLE: 3, Z_FIXED: 4, Z_DEFAULT_STRATEGY: 0, Z_BINARY: 0, Z_TEXT: 1, Z_UNKNOWN: 2, Z_DEFLATED: 8 }, Mc = { 2: "need dictionary", 1: "stream end", 0: "", "-1": "file error", "-2": "stream error", "-3": "data error", "-4": "insufficient memory", "-5": "buffer error", "-6": "incompatible version" }, yc = Object.prototype.toString;
      function Cc(e3) {
        if (!(this instanceof Cc))
          return new Cc(e3);
        this.options = ie2.assign({ chunkSize: 16384, windowBits: 0, to: "" }, e3 || {});
        var t3 = this.options, e3 = (t3.raw && 0 <= t3.windowBits && t3.windowBits < 16 && (t3.windowBits = -t3.windowBits, 0 === t3.windowBits) && (t3.windowBits = -15), !(0 <= t3.windowBits && t3.windowBits < 16) || e3 && e3.windowBits || (t3.windowBits += 32), 15 < t3.windowBits && t3.windowBits < 48 && 0 == (15 & t3.windowBits) && (t3.windowBits |= 15), this.err = 0, this.msg = "", this.ended = false, this.chunks = [], this.strm = new mc(), this.strm.avail_out = 0, dc.inflateInit2(this.strm, t3.windowBits));
        if (e3 !== Ic.Z_OK)
          throw new Error(Mc[e3]);
        if (this.header = new vc(), dc.inflateGetHeader(this.strm, this.header), t3.dictionary && ("string" == typeof t3.dictionary ? t3.dictionary = function(e4) {
          for (var t4, n3, o3, i3, a3 = e4.length, s3 = 0, r3 = 0; r3 < a3; r3++)
            55296 == (64512 & (n3 = e4.charCodeAt(r3))) && r3 + 1 < a3 && 56320 == (64512 & (o3 = e4.charCodeAt(r3 + 1))) && (n3 = 65536 + (n3 - 55296 << 10) + (o3 - 56320), r3++), s3 += n3 < 128 ? 1 : n3 < 2048 ? 2 : n3 < 65536 ? 3 : 4;
          for (t4 = new ie2.Buf8(s3), r3 = i3 = 0; i3 < s3; r3++)
            55296 == (64512 & (n3 = e4.charCodeAt(r3))) && r3 + 1 < a3 && 56320 == (64512 & (o3 = e4.charCodeAt(r3 + 1))) && (n3 = 65536 + (n3 - 55296 << 10) + (o3 - 56320), r3++), n3 < 128 ? t4[i3++] = n3 : (n3 < 2048 ? t4[i3++] = 192 | n3 >>> 6 : (n3 < 65536 ? t4[i3++] = 224 | n3 >>> 12 : (t4[i3++] = 240 | n3 >>> 18, t4[i3++] = 128 | n3 >>> 12 & 63), t4[i3++] = 128 | n3 >>> 6 & 63), t4[i3++] = 128 | 63 & n3);
          return t4;
        }(t3.dictionary) : "[object ArrayBuffer]" === yc.call(t3.dictionary) && (t3.dictionary = new Uint8Array(t3.dictionary)), t3.raw) && (e3 = dc.inflateSetDictionary(this.strm, t3.dictionary)) !== Ic.Z_OK)
          throw new Error(Mc[e3]);
      }
      function Tc(e3, t3) {
        t3 = new Cc(t3);
        if (t3.push(e3, true), t3.err)
          throw t3.msg || Mc[t3.err];
        return t3.result;
      }
      Cc.prototype.push = function(e3, t3) {
        var n3, o3, i3, a3, s3, r3 = this.strm, c3 = this.options.chunkSize, u3 = this.options.dictionary, l3 = false;
        if (this.ended)
          return false;
        o3 = t3 === ~~t3 ? t3 : true === t3 ? Ic.Z_FINISH : Ic.Z_NO_FLUSH, "string" == typeof e3 ? r3.input = function(e4) {
          for (var t4 = new ie2.Buf8(e4.length), n4 = 0, o4 = t4.length; n4 < o4; n4++)
            t4[n4] = e4.charCodeAt(n4);
          return t4;
        }(e3) : "[object ArrayBuffer]" === yc.call(e3) ? r3.input = new Uint8Array(e3) : r3.input = e3, r3.next_in = 0, r3.avail_in = r3.input.length;
        do {
          if (0 === r3.avail_out && (r3.output = new ie2.Buf8(c3), r3.next_out = 0, r3.avail_out = c3), (n3 = (n3 = dc.inflate(r3, Ic.Z_NO_FLUSH)) === Ic.Z_NEED_DICT && u3 ? dc.inflateSetDictionary(this.strm, u3) : n3) === Ic.Z_BUF_ERROR && true === l3 && (n3 = Ic.Z_OK, l3 = false), n3 !== Ic.Z_STREAM_END && n3 !== Ic.Z_OK)
            return this.onEnd(n3), !(this.ended = true);
          !r3.next_out || 0 !== r3.avail_out && n3 !== Ic.Z_STREAM_END && (0 !== r3.avail_in || o3 !== Ic.Z_FINISH && o3 !== Ic.Z_SYNC_FLUSH) || ("string" === this.options.to ? (i3 = function(e4, t4) {
            for (var n4 = (t4 = (t4 = t4 || e4.length) > e4.length ? e4.length : t4) - 1; 0 <= n4 && 128 == (192 & e4[n4]); )
              n4--;
            return !(n4 < 0 || 0 === n4) && n4 + hc[e4[n4]] > t4 ? n4 : t4;
          }(r3.output, r3.next_out), a3 = r3.next_out - i3, s3 = fc(r3.output, i3), r3.next_out = a3, r3.avail_out = c3 - a3, a3 && ie2.arraySet(r3.output, r3.output, i3, a3, 0), this.onData(s3)) : this.onData(ie2.shrinkBuf(r3.output, r3.next_out))), 0 === r3.avail_in && 0 === r3.avail_out && (l3 = true);
        } while ((0 < r3.avail_in || 0 === r3.avail_out) && n3 !== Ic.Z_STREAM_END);
        return (o3 = n3 === Ic.Z_STREAM_END ? Ic.Z_FINISH : o3) === Ic.Z_FINISH ? (n3 = dc.inflateEnd(this.strm), this.onEnd(n3), this.ended = true, n3 === Ic.Z_OK) : o3 !== Ic.Z_SYNC_FLUSH || (this.onEnd(Ic.Z_OK), !(r3.avail_out = 0));
      }, Cc.prototype.onData = function(e3) {
        this.chunks.push(e3);
      }, Cc.prototype.onEnd = function(e3) {
        e3 === Ic.Z_OK && ("string" === this.options.to ? this.result = this.chunks.join("") : this.result = ie2.flattenChunks(this.chunks)), this.chunks = [], this.err = e3, this.msg = this.strm.msg;
      };
      var s2 = {}, Dc = ((0, ie2.assign)(s2, { Inflate: Cc, inflate: Tc, inflateRaw: function(e3, t3) {
        return (t3 = t3 || {}).raw = true, Tc(e3, t3);
      }, ungzip: Tc }, Ic), s2), Ec = (e2(Gc, [{ key: "inflate", value: function(e3) {
        var t3, e3 = new Uint8Array(e3).slice(4), n3 = Date.now();
        try {
          t3 = Dc.inflate(e3, { to: "string" }), this._bLogForInflateOK || (this._bLogForInflateOK = true, new G2("inflateOK").end());
        } catch (e4) {
          return this._bLogForInflateError ? void 0 : (this._bLogForInflateError = true, void new G2("inflateError").setMessage(e4).end());
        }
        var e3 = e3.length + 4, o3 = t3.length;
        return M2.d("inflate ok. zipped:".concat(e3, " unzipped:").concat(o3) + " compression ratio:".concat(Math.round(100 * (o3 - e3) / o3), "% cost:").concat(Date.now() - n3)), t3;
      } }, { key: "reset", value: function() {
        M2.l("".concat(this._n, ".reset")), this._bLogForInflateOK = false, this._bLogForInflateError = false;
      } }]), Gc), Lc = (e2(Nc, [{ key: "_startTimer", value: function() {
        var e3 = this._map.get(24), t3 = e3.isWorkerEnabled();
        M2.l("".concat(this._n, ".startTimer isWorkerEnabled:").concat(t3, " seed:").concat(this._checkTimer)), t3 ? e3.startWorkerTimer() : this._startMainThreadTimer();
      } }, { key: "_startMainThreadTimer", value: function() {
        this._checkTimer < 0 && (this._checkTimer = setInterval(this.onCheckTimer.bind(this), 1e3)), M2.l("".concat(this._n, "._startMainThreadTimer seed:").concat(this._checkTimer));
      } }, { key: "stopTimer", value: function() {
        var e3 = this._map.get(24), t3 = e3.isWorkerEnabled();
        M2.l("".concat(this._n, ".stopTimer isWorkerEnabled:").concat(t3, " seed:").concat(this._checkTimer)), t3 ? e3.stopWorkerTimer() : this._stopMainThreadTimer();
      } }, { key: "_stopMainThreadTimer", value: function() {
        M2.l("".concat(this._n, "._stopMainThreadTimer")), 0 < this._checkTimer && (clearInterval(this._checkTimer), this._checkTimer = -1, this._checkCount = 0);
      } }, { key: "_stopMainThreadSocket", value: function() {
        M2.l("".concat(this._n, "._stopMainThreadSocket"));
        var e3 = this._map.get(21);
        e3.setIsWorkerEnabled(true), e3.reConnect();
      } }, { key: "_startMainThreadSocket", value: function() {
        M2.l("".concat(this._n, "._startMainThreadSocket"));
        var e3 = this._map.get(21);
        e3.setIsWorkerEnabled(false), e3.reConnect();
      } }, { key: "onWorkerTimerEnabled", value: function() {
        M2.l("".concat(this._n, ".onWorkerTimerEnabled, disable main thread timer and socket")), this._stopMainThreadTimer(), this._stopMainThreadSocket();
      } }, { key: "onWorkerTimerDisabled", value: function() {
        M2.l("".concat(this._n, ".onWorkerTimerDisabled, enable main thread timer and socket")), this._startMainThreadTimer(), this._startMainThreadSocket();
      } }, { key: "onCheckTimer", value: function() {
        this._checkCount += 1;
        var e3, t3 = Z2(this._map);
        try {
          for (t3.s(); !(e3 = t3.n()).done; ) {
            var n3 = Y2(e3.value, 2)[1];
            n3.onCheckTimer && n3.onCheckTimer(this._checkCount);
          }
        } catch (e4) {
          t3.e(e4);
        } finally {
          t3.f();
        }
      } }, { key: "_initReadyList", value: function() {
        var t3 = this;
        this._readyList = [this._map.get(1)], this._readyList.forEach(function(e3) {
          e3.ready(function() {
            return t3._onModuleReady();
          });
        });
      } }, { key: "_onModuleReady", value: function() {
        var e3, t3, n3 = true;
        this._readyList.forEach(function(e4) {
          e4.isReady() || (n3 = false);
        }), n3 && !this._isReady && (this._isReady = true, this._oEmitter.emit(h2.SDK_READY), e3 = Date.now() - this._startLoginTs, M2.w("SDK is ready. cost ".concat(e3, " ms")), this._startLoginTs = Date.now(), t3 = this._ssoLogForReady.getStartTs() + Ye2, this._ssoLogForReady.setMessage(e3).start(t3).end());
      } }, { key: "login", value: function() {
        0 === this._startLoginTs && (He2(), this._startLoginTs = Date.now(), this._startTimer(), this._map.get(15).start(), this._ssoLogForReady = new G2("sdkReady"), this._reason = L2.LOGGING_IN);
      } }, { key: "onLoginFailed", value: function() {
        this._startLoginTs = 0;
      } }, { key: "getOEmitInst", value: function() {
        return null === this._oEmitter && (this._oEmitter = new Ia(), e3 = this._oEmitter, qn2 = e3, this._oEmitter._emit = this._oEmitter.emit, this._oEmitter.emit = (function(e4, t3) {
          var n3, o3, i3 = this;
          this._canIUseSignaling() && (e4 === h2.MESSAGE_RECEIVED && this.get(33).onNewMessageList(t3), e4 === h2.MESSAGE_MODIFIED) && this.get(33).onMessageModified(t3), e4 === h2.CONVERSATION_LIST_UPDATED || e4 === h2.FRIEND_LIST_UPDATED || e4 === h2.GROUP_LIST_UPDATED || e4 === h2.TOTAL_UNREAD_MESSAGE_COUNT_UPDATED ? false !== this._eventThrottling ? this._eventThrottleMap.has(e4) ? (n3 = Date.now()) - (o3 = this._eventThrottleMap.get(e4)).last <= 1e3 ? (o3.timeoutID && clearTimeout(o3.timeoutID), o3.timeoutID = setTimeout(function() {
            o3.last = Date.now(), i3._oEmitter._emit.apply(i3._oEmitter, [e4, { name: e4, data: i3._getEventData(e4) }]);
          }, 1e3)) : (o3.last = n3, this._oEmitter._emit.apply(this._oEmitter, [e4, { name: e4, data: this._getEventData(e4) }])) : (this._eventThrottleMap.set(e4, { last: Date.now(), timeoutID: -1 }), this._oEmitter._emit.apply(this._oEmitter, [e4, { name: e4, data: this._getEventData(e4) }])) : this._oEmitter._emit.apply(this._oEmitter, [e4, { name: e4, data: this._getEventData(e4) }]) : this._oEmitter._emit.apply(this._oEmitter, [e4, { name: e4, data: t3 }]);
        }).bind(this)), this._oEmitter;
        var e3;
      } }, { key: "_canIUseSignaling", value: function() {
        var e3 = this.get(33);
        return !!e3 && e3.canIUseSignaling();
      } }, { key: "_getEventData", value: function(e3) {
        return e3 === h2.CONVERSATION_LIST_UPDATED ? this._map.get(12).isPartialUpdatedConvs() ? this._map.get(11).getPartialUpdatedConvs() : this._map.get(11).getLocalConvList() : e3 === h2.FRIEND_LIST_UPDATED ? this._map.get(8).getLocalFriendList(false) : e3 === h2.GROUP_LIST_UPDATED ? this._map.get(7).getLocalGroupList() : e3 === h2.TOTAL_UNREAD_MESSAGE_COUNT_UPDATED ? this._map.get(11).getTotalUnreadCount() : e3 === h2.CONVERSATION_ID_LIST_UPDATED ? this._map.get(11).getUpdatedConvIDList() : void 0;
      } }, { key: "getIEmitInst", value: function() {
        return null === this._iEmitter && (this._iEmitter = new Ia(), this._iEmitter._emit = this._iEmitter.emit, this._iEmitter.emit = (function(e3, t3) {
          e3 = f2(t3) && t3.data ? [e3, { name: e3, data: t3.data }] : [e3, { name: e3, data: t3 }];
          this._iEmitter._emit.apply(this._iEmitter, e3);
        }).bind(this)), this._iEmitter;
      } }, { key: "hasModule", value: function(e3) {
        return this._map.has(e3);
      } }, { key: "get", value: function(e3) {
        return this._map.get(e3);
      } }, { key: "canIUseModule", value: function(e3) {
        return !this._map.get(12).isUsingChatCore() || this._optionalModuleMap.has(e3);
      } }, { key: "canIUseInflate", value: function() {
        return !!this._map.get(37);
      } }, { key: "isReady", value: function() {
        return this._isReady;
      } }, { key: "isIntl", value: function() {
        return this.get(12).isIntl();
      } }, { key: "getNotReadyReason", value: function() {
        return this._reason;
      } }, { key: "setNotReadyReason", value: function(e3) {
        this._reason = e3;
      } }, { key: "getErrMsg", value: function(e3, t3, n3) {
        return this._map.get(32).get({ key: e3, replacement1: t3, replacement2: n3, isIntl: this.isIntl() });
      } }, { key: "warn", value: function(e3, t3, n3) {
        e3 = this.getErrMsg(e3, t3, n3);
        e3 && M2.w(e3);
      } }, { key: "onError", value: function(e3) {
        var t3 = "code:".concat(e3.code, " message:").concat(e3.message);
        M2.w("Oops! ".concat(t3)), new G2("error").setMessage(t3).setLevel("error").end(), this.getOEmitInst().emit(h2.ERROR, e3);
      } }, { key: "restartTimer", value: function() {
        M2.l("".concat(this._n, ".restartTimer")), this.stopTimer(), this._startTimer();
        var e3 = this.get(7);
        e3 && e3.restartPolling();
      } }, { key: "getTimerID", value: function() {
        var e3 = this._map.get(24);
        return e3.isWorkerEnabled() ? e3.getTimerID() : this._checkTimer;
      } }, { key: "getPollingTimerID", value: function(e3) {
        return this._map.get(7).getPollingTimerID(e3);
      } }, { key: "reset", value: function() {
        M2.l("".concat(this._n, ".reset")), He2();
        var e3, t3 = Z2(this._map);
        try {
          for (t3.s(); !(e3 = t3.n()).done; ) {
            var n3 = Y2(e3.value, 2)[1];
            n3.reset && n3.reset();
          }
        } catch (e4) {
          t3.e(e4);
        } finally {
          t3.f();
        }
        this._startLoginTs = 0, this._initReadyList(), this._isReady = false, this.stopTimer(), this._oEmitter.emit(h2.SDK_NOT_READY);
        var o3, i3 = Z2(this._eventThrottleMap);
        try {
          for (i3.s(); !(o3 = i3.n()).done; ) {
            var a3 = Y2(o3.value, 2)[1];
            a3.timeoutID && clearTimeout(a3.timeoutID);
          }
        } catch (e4) {
          i3.e(e4);
        } finally {
          i3.f();
        }
        this._eventThrottleMap.clear();
      } }]), Nc), Sc = (e2(Oc, [{ key: "defense", value: function(e3, t3) {
        var n3 = 2 < arguments.length && void 0 !== arguments[2] ? arguments[2] : void 0;
        if ("string" != typeof e3)
          return null;
        if (0 === e3.length)
          return null;
        if ("function" != typeof t3)
          return null;
        if (this._funcMap.has(e3) && this._funcMap.get(e3).has(t3))
          return this._funcMap.get(e3).get(t3);
        this._funcMap.has(e3) || this._funcMap.set(e3, /* @__PURE__ */ new Map());
        var o3 = null;
        return this._funcMap.get(e3).has(t3) ? o3 = this._funcMap.get(e3).get(t3) : (o3 = this._pack(e3, t3, n3), this._funcMap.get(e3).set(t3, o3)), o3;
      } }, { key: "defenseOnce", value: function(e3, t3) {
        return "function" != typeof t3 ? null : this._pack(e3, t3, 2 < arguments.length && void 0 !== arguments[2] ? arguments[2] : void 0);
      } }, { key: "find", value: function(e3, t3) {
        return "string" != typeof e3 || 0 === e3.length || "function" != typeof t3 ? null : this._funcMap.has(e3) && this._funcMap.get(e3).has(t3) ? this._funcMap.get(e3).get(t3) : (this._m.warn("ListenerFnNotFound", e3), null);
      } }, { key: "delete", value: function(e3, t3) {
        return "function" == typeof t3 && !!this._funcMap.has(e3) && !!this._funcMap.get(e3).has(t3) && (this._funcMap.get(e3).delete(t3), 0 === this._funcMap.get(e3).size && this._funcMap.delete(e3), true);
      } }, { key: "_pack", value: function(o3, e3, i3) {
        var a3 = this;
        return function() {
          try {
            e3.apply(i3, Array.from(arguments));
          } catch (e4) {
            var t3 = Object.values(h2).indexOf(o3), n3 = "CallbackError";
            -1 !== t3 && (t3 = Object.keys(h2)[t3], a3._m.warn(n3, t3, e4)), a3._reportCount < 5 && (new G2(n3).setMessage("eventName:".concat(o3)).setMoreMessage(e4.message).end(), a3._reportCount += 1);
          }
        };
      } }, { key: "destroy", value: function() {
        this._funcMap.clear();
      } }, { key: "reset", value: function() {
        M2.l("".concat(this._n, ".reset")), this._reportCount = 0;
      } }]), Oc), kc = (e2(Rc, [{ key: "onError", value: function(e3) {
        this._m.onError(e3);
      } }, { key: "login", value: function(e3) {
        return this._m.login(), this._get(1).login(e3);
      } }, { key: "logout", value: function() {
        var t3 = this;
        return this._get(1).logout().then(function(e3) {
          return t3._safetyCallbackFactory.reset(), t3._m.reset(), e3;
        });
      } }, { key: "getLoginUser", value: function() {
        return this._get(1).getLoginUser();
      } }, { key: "getServerTime", value: function() {
        return We2();
      } }, { key: "isReady", value: function() {
        return this._m.isReady();
      } }, { key: "isIntl", value: function() {
        return this._m.isIntl();
      } }, { key: "getNotReadyReason", value: function() {
        return this._m.getNotReadyReason();
      } }, { key: "getErrMsg", value: function(e3, t3, n3) {
        return this._m.getErrMsg(e3, t3, n3);
      } }, { key: "_get", value: function(e3) {
        return this._m.get(e3);
      } }, { key: "destroy", value: function() {
        var e3 = this, t3 = this._get(12), n3 = t3.getSDKAppID();
        return M2.w("destroy ".concat(n3, " ").concat(t3.getInstanceID())), this.logout().finally(function() {
          e3._safetyCallbackFactory.destroy(), e3._m.stopTimer(), e3._get(24).terminate(), e3._get(21).dealloc(), e3._m.getOEmitInst().emit(h2.SDK_DESTROY, { SDKAppID: n3 });
        });
      } }, { key: "on", value: function(e3, t3, n3) {
        M2.d("on", "eventName:".concat(e3)), this._m.getOEmitInst().on(e3, this._safetyCallbackFactory.defense(e3, t3, n3), n3);
      } }, { key: "once", value: function(e3, t3, n3) {
        M2.d("once", "eventName:".concat(e3)), this._m.getOEmitInst().once(e3, this._safetyCallbackFactory.defenseOnce(e3, t3, n3), n3 || this);
      } }, { key: "off", value: function(e3, t3, n3, o3) {
        M2.d("off", "eventName:".concat(e3));
        var i3 = this._safetyCallbackFactory.find(e3, t3);
        null !== i3 && (this._m.getOEmitInst().off(e3, i3, n3, o3), this._safetyCallbackFactory.delete(e3, t3));
      } }, { key: "registerPlugin", value: function(e3) {
        (N2(e3["tim-push"]) ? N2(e3["tim-offline-push-plugin"]) ? this._get(18) : this._get(28) : this._get(36)).registerPlugin(e3);
      } }, { key: "setLogLevel", value: function(e3) {
        var t3;
        e3 <= 0 && ((t3 = this.getErrMsg("TIM_ASCII_ART")) && formatAppLog("log", "at node_modules/@tencentcloud/chat/index.js:1", t3), (t3 = this.getErrMsg("API_REFER")) && (Qt2() ? formatAppLog("log", "at node_modules/@tencentcloud/chat/index.js:1", "%c ".concat("IM SDK API ->", " %c"), "background:#ff9d00; padding:1px; border-radius:3px; color: #fff", "background:transparent", t3) : formatAppLog("log", "at node_modules/@tencentcloud/chat/index.js:1", "IM SDK API ->", t3)), (t3 = this.getErrMsg("DOCS_GUIDE")) && formatAppLog("log", "at node_modules/@tencentcloud/chat/index.js:1", t3), t3 = this.getErrMsg("IOS_WEBVIEW_WARNING"), be2) && t3 && formatAppLog("warn", "at node_modules/@tencentcloud/chat/index.js:1", t3), M2.setLevel(e3);
      } }, { key: "createTextMessage", value: function(e3) {
        return this._get(2).createTextMessage(e3);
      } }, { key: "createTextAtMessage", value: function(e3) {
        return this._get(2).createTextMessage(e3);
      } }, { key: "createImageMessage", value: function(e3) {
        return this._get(2).createImageMessage(e3);
      } }, { key: "createAudioMessage", value: function(e3) {
        return this._get(2).createAudioMessage(e3);
      } }, { key: "createVideoMessage", value: function(e3) {
        return this._get(2).createVideoMessage(e3);
      } }, { key: "createCustomMessage", value: function(e3) {
        return this._get(2).createCustomMessage(e3);
      } }, { key: "createFaceMessage", value: function(e3) {
        return this._get(2).createFaceMessage(e3);
      } }, { key: "createFileMessage", value: function(e3) {
        return this._get(2).createFileMessage(e3);
      } }, { key: "createLocationMessage", value: function(e3) {
        return this._get(2).createLocationMessage(e3);
      } }, { key: "createMergerMessage", value: function(e3) {
        return this._get(2).createMergerMessage(e3);
      } }, { key: "downloadMergerMessage", value: function(e3) {
        return e3.type !== A2.MSG_MERGER ? D2({ code: L2.MSG_MERGER_TYPE_INVALID }) : S2(e3.payload.downloadKey) ? D2({ code: L2.MSG_MERGER_KEY_INVALID }) : this._get(2).downloadMergerMessage(e3).catch(function(e4) {
          return D2({ code: L2.MSG_MERGER_DOWNLOAD_FAIL });
        });
      } }, { key: "createForwardMessage", value: function(e3) {
        return this._get(2).createForwardMessage(e3);
      } }, { key: "sendMessage", value: function(e3, t3) {
        return e3 instanceof Do2 ? this._get(2).sendMessageInstance(e3, t3) : D2({ code: L2.MSG_INSTANCE_REQUIRED });
      } }, { key: "searchCloudMessages", value: function(e3) {
        return this._get(2).searchCloudMessages(e3);
      } }, { key: "callExperimentalAPI", value: function(e3, t3) {
        return "sendComboMessage" === e3 ? this._get(31).sendMessage(t3) : "handleGroupInvitation" === e3 ? this._get(7).handleGroupInvitation(t3) : "isCommercialAbilityEnabled" === e3 ? this._get(27).isFeatureEnabled(t3) : "isFeatureEnabledForStat" === e3 ? this._get(27).isFeatureEnabledForStat(t3) : "isIntl" === e3 ? this.isIntl() : "sendTRTCCustomData" === e3 || "sendRoomCustomData" === e3 ? this._get(30).sendTRTCCustomData(t3) : "getTimerID" === e3 ? this._m.getTimerID() : "getPollingTimerID" === e3 ? this._m.getPollingTimerID(t3) : "setApplicationID" === e3 ? (this._get(12).setApplicationID(t3), void this._get(20).updateProtocolConfig()) : "getServerConfig" === e3 ? this._get(23).getServerConfig(t3) : "canIUseModule" === e3 ? this._m.canIUseModule(t3) : "startMessageLongPolling" === e3 ? this._get(7).startMessageLongPolling(t3) : "stopMessageLongPolling" === e3 ? this._get(7).stopMessageLongPolling(t3) : "disableMessagePullOnInvite" === e3 ? this._get(11).disableMsgPullOnInvite(t3) : "clearLocalMessage" === e3 ? this._get(11).clearMemMsg(t3, false) : "setCustomLoginInfo" === e3 ? this._get(12).setCustomLoginInfo(t3) : D2({ code: L2.INVALID_OPERATION });
      } }, { key: "revokeMessage", value: function(e3) {
        return this._get(2).revokeMessage(e3);
      } }, { key: "resendMessage", value: function(e3, t3) {
        return e3 instanceof Do2 ? this._get(2).resendMessage(e3, t3) : D2({ code: L2.MSG_INSTANCE_REQUIRED });
      } }, { key: "deleteMessage", value: function(e3) {
        return this._get(2).deleteMessage(e3);
      } }, { key: "translateText", value: function(e3) {
        return this._get(2).translateText(e3);
      } }, { key: "convertVoiceToText", value: function(e3) {
        return this._get(2).convertVoiceToText(e3);
      } }, { key: "setMessageExtensions", value: function(e3, t3) {
        return this._get(3).setMessageExtensions(e3, t3);
      } }, { key: "getMessageExtensions", value: function(e3) {
        return this._get(3).getMessageExtensions(e3);
      } }, { key: "deleteMessageExtensions", value: function(e3, t3) {
        return this._get(3).deleteMessageExtensions(e3, t3);
      } }, { key: "addMessageReaction", value: function(e3, t3) {
        return this._get(34).addMessageReaction(e3, t3);
      } }, { key: "removeMessageReaction", value: function(e3, t3) {
        return this._get(34).removeMessageReaction(e3, t3);
      } }, { key: "getMessageReactions", value: function(e3) {
        return this._get(34).getMessageReactions(e3);
      } }, { key: "getAllUserListOfMessageReaction", value: function(e3) {
        return this._get(34).getAllUserListOfMessageReaction(e3);
      } }, { key: "modifyMessage", value: function(e3) {
        return this._get(2).modifyRemoteMessage(e3);
      } }, { key: "getMessageList", value: function(e3) {
        return this._get(11).getMessageList(e3);
      } }, { key: "getMessageListHopping", value: function(e3) {
        return this._get(11).getMessageListHopping(e3);
      } }, { key: "sendMessageReadReceipt", value: function(e3) {
        return this._get(11).sendReadReceipt(e3);
      } }, { key: "getMessageReadReceiptList", value: function(e3) {
        return this._get(11).getReadReceiptList(e3);
      } }, { key: "getGroupMessageReadMemberList", value: function(e3) {
        var t3 = this._get(7);
        return t3 ? t3.getReadReceiptDetail(e3) : D2({ code: L2.NO_MODULE });
      } }, { key: "findMessage", value: function(e3) {
        return this._get(11).findMessage(e3);
      } }, { key: "setMessageRead", value: function(e3) {
        return this._get(11).setMessageRead(e3);
      } }, { key: "getConversationList", value: function(e3) {
        return this._get(11).getConvList(e3);
      } }, { key: "getConversationProfile", value: function(e3) {
        return this._get(11).getConversationProfile(e3);
      } }, { key: "deleteConversation", value: function(e3) {
        return this._get(11).deleteConversation(e3);
      } }, { key: "setConversationDraft", value: function(e3) {
        return this._get(11).setConvDraft(e3);
      } }, { key: "clearHistoryMessage", value: function(e3) {
        return this._get(11).clearHistoryMessage(e3);
      } }, { key: "pinConversation", value: function(e3) {
        return this._get(11).pinConversation(e3);
      } }, { key: "setAllMessageRead", value: function(e3) {
        return this._get(11).setAllMessageRead(e3);
      } }, { key: "setMessageRemindType", value: function(e3) {
        return this._get(11).setMessageRemindType(e3);
      } }, { key: "setAllReceiveMessageOpt", value: function(e3) {
        return this._get(11).setAllRcvMsgOpt(e3);
      } }, { key: "getAllReceiveMessageOpt", value: function() {
        return this._get(11).getAllRcvMsgOpt();
      } }, { key: "getTotalUnreadMessageCount", value: function() {
        return this._get(11).getTotalUnreadCount();
      } }, { key: "setConversationCustomData", value: function(e3) {
        return this._get(11).setConvCustomData(e3);
      } }, { key: "markConversation", value: function(e3) {
        return this._get(11).markConv(e3);
      } }, { key: "getConversationGroupList", value: function() {
        return this._get(11).getConvGroupList();
      } }, { key: "createConversationGroup", value: function(e3) {
        return this._get(11).createConvGroup(e3);
      } }, { key: "deleteConversationGroup", value: function(e3) {
        return this._get(11).deleteConvGroup(e3);
      } }, { key: "renameConversationGroup", value: function(e3) {
        return this._get(11).renameConvGroup(e3);
      } }, { key: "addConversationsToGroup", value: function(e3) {
        return this._get(11).addConvsToGroup(e3);
      } }, { key: "deleteConversationsFromGroup", value: function(e3) {
        return this._get(11).deleteConvsFromGroup(e3);
      } }, { key: "getMyProfile", value: function() {
        return this._get(4).getMyProfile();
      } }, { key: "getUserProfile", value: function(e3) {
        return this._get(4).getUserProfile(e3);
      } }, { key: "updateMyProfile", value: function(e3) {
        return this._get(4).updateMyProfile(e3);
      } }, { key: "getBlacklist", value: function() {
        return this._get(4).getLocalBlacklist();
      } }, { key: "addToBlacklist", value: function(e3) {
        return this._get(4).addBlacklist(e3);
      } }, { key: "removeFromBlacklist", value: function(e3) {
        return this._get(4).deleteBlacklist(e3);
      } }, { key: "setSelfStatus", value: function(e3) {
        return this._get(4).setSelfStatus(e3);
      } }, { key: "getUserStatus", value: function(e3) {
        return this._get(4).getUserStatus(e3);
      } }, { key: "subscribeUserStatus", value: function(e3) {
        return this._get(4).subscribeUserStatus(e3);
      } }, { key: "unsubscribeUserStatus", value: function(e3) {
        return this._get(4).unsubscribeUserStatus(e3);
      } }, { key: "getFriendList", value: function() {
        var e3 = this._get(8);
        return e3 ? e3.getLocalFriendList() : D2({ code: L2.NO_MODULE });
      } }, { key: "addFriend", value: function(e3) {
        var t3 = this._get(8);
        return t3 ? t3.addFriend(e3) : D2({ code: L2.NO_MODULE });
      } }, { key: "deleteFriend", value: function(e3) {
        var t3 = this._get(8);
        return t3 ? t3.deleteFriend(e3) : D2({ code: L2.NO_MODULE });
      } }, { key: "checkFriend", value: function(e3) {
        var t3 = this._get(8);
        return t3 ? t3.checkFriend(e3) : D2({ code: L2.NO_MODULE });
      } }, { key: "getFriendProfile", value: function(e3) {
        var t3 = this._get(8);
        return t3 ? t3.getFriendProfile(e3) : D2({ code: L2.NO_MODULE });
      } }, { key: "updateFriend", value: function(e3) {
        var t3 = this._get(8);
        return t3 ? t3.updateFriend(e3) : D2({ code: L2.NO_MODULE });
      } }, { key: "getFriendApplicationList", value: function() {
        var e3 = this._get(8);
        return e3 ? e3.getLocalFriendApplicationList() : D2({ code: L2.NO_MODULE });
      } }, { key: "acceptFriendApplication", value: function(e3) {
        var t3 = this._get(8);
        return t3 ? t3.acceptFriendApplication(e3) : D2({ code: L2.NO_MODULE });
      } }, { key: "refuseFriendApplication", value: function(e3) {
        var t3 = this._get(8);
        return t3 ? t3.refuseFriendApplication(e3) : D2({ code: L2.NO_MODULE });
      } }, { key: "deleteFriendApplication", value: function(e3) {
        var t3 = this._get(8);
        return t3 ? t3.deleteFriendApplication(e3) : D2({ code: L2.NO_MODULE });
      } }, { key: "setFriendApplicationRead", value: function() {
        var e3 = this._get(8);
        return e3 ? e3.setFriendApplicationRead() : D2({ code: L2.NO_MODULE });
      } }, { key: "getFriendGroupList", value: function() {
        var e3 = this._get(8);
        return e3 ? e3.getLocalFriendGroupList() : D2({ code: L2.NO_MODULE });
      } }, { key: "createFriendGroup", value: function(e3) {
        var t3 = this._get(8);
        return t3 ? t3.createFriendGroup(e3) : D2({ code: L2.NO_MODULE });
      } }, { key: "deleteFriendGroup", value: function(e3) {
        var t3 = this._get(8);
        return t3 ? t3.deleteFriendGroup(e3) : D2({ code: L2.NO_MODULE });
      } }, { key: "addToFriendGroup", value: function(e3) {
        var t3 = this._get(8);
        return t3 ? t3.addToFriendGroup(e3) : D2({ code: L2.NO_MODULE });
      } }, { key: "removeFromFriendGroup", value: function(e3) {
        var t3 = this._get(8);
        return t3 ? t3.removeFromFriendGroup(e3) : D2({ code: L2.NO_MODULE });
      } }, { key: "renameFriendGroup", value: function(e3) {
        var t3 = this._get(8);
        return t3 ? t3.renameFriendGroup(e3) : D2({ code: L2.NO_MODULE });
      } }, { key: "followUser", value: function(e3) {
        var t3 = this._get(35);
        return t3 ? t3.followUser(e3) : D2({ code: L2.NO_MODULE });
      } }, { key: "unfollowUser", value: function(e3) {
        var t3 = this._get(35);
        return t3 ? t3.unfollowUser(e3) : D2({ code: L2.NO_MODULE });
      } }, { key: "getMyFollowersList", value: function(e3) {
        var t3 = this._get(35);
        return t3 ? t3.getMyFollowersList(e3) : D2({ code: L2.NO_MODULE });
      } }, { key: "getMyFollowingList", value: function(e3) {
        var t3 = this._get(35);
        return t3 ? t3.getMyFollowingList(e3) : D2({ code: L2.NO_MODULE });
      } }, { key: "getMutualFollowersList", value: function(e3) {
        var t3 = this._get(35);
        return t3 ? t3.getMutualFollowersList(e3) : D2({ code: L2.NO_MODULE });
      } }, { key: "getUserFollowInfo", value: function(e3) {
        var t3 = this._get(35);
        return t3 ? t3.getUserFollowInfo(e3) : D2({ code: L2.NO_MODULE });
      } }, { key: "checkFollowType", value: function(e3) {
        var t3 = this._get(35);
        return t3 ? t3.checkFollowType(e3) : D2({ code: L2.NO_MODULE });
      } }, { key: "getGroupList", value: function() {
        var e3 = this._get(7);
        return e3 ? e3.getGroupList() : D2({ code: L2.NO_MODULE });
      } }, { key: "getGroupProfile", value: function(e3) {
        var t3 = this._get(7);
        return t3 ? t3.getGroupProfile(e3) : D2({ code: L2.NO_MODULE });
      } }, { key: "createGroup", value: function(e3) {
        var t3 = this._get(7);
        return t3 ? t3.createGroup(e3) : D2({ code: L2.NO_MODULE });
      } }, { key: "dismissGroup", value: function(e3) {
        var t3 = this._get(7);
        return t3 ? t3.dismissGroup(e3) : D2({ code: L2.NO_MODULE });
      } }, { key: "updateGroupProfile", value: function(e3) {
        var t3 = this._get(7);
        return t3 ? t3.updateGroupProfile(e3) : D2({ code: L2.NO_MODULE });
      } }, { key: "joinGroup", value: function(e3) {
        var t3 = this._get(7);
        return t3 ? t3.joinGroup(e3) : D2({ code: L2.NO_MODULE });
      } }, { key: "quitGroup", value: function(e3) {
        var t3 = this._get(7);
        return t3 ? t3.quitGroup(e3) : D2({ code: L2.NO_MODULE });
      } }, { key: "searchGroupByID", value: function(e3) {
        var t3 = this._get(7);
        return t3 ? t3.searchGroupByID(e3) : D2({ code: L2.NO_MODULE });
      } }, { key: "getGroupOnlineMemberCount", value: function(e3) {
        var t3 = this._get(7);
        return t3 ? t3.getGroupOnlineMemberCount(e3) : D2({ code: L2.NO_MODULE });
      } }, { key: "changeGroupOwner", value: function(e3) {
        var t3 = this._get(7);
        return t3 ? t3.changeGroupOwner(e3) : D2({ code: L2.NO_MODULE });
      } }, { key: "getGroupApplicationList", value: function() {
        var e3 = this._get(7);
        return e3 ? e3.getGroupApplicationList() : D2({ code: L2.NO_MODULE });
      } }, { key: "handleGroupApplication", value: function(e3) {
        var t3 = this._get(7);
        return t3 ? t3.handleGroupApplication(e3) : D2({ code: L2.NO_MODULE });
      } }, { key: "initGroupAttributes", value: function(e3) {
        var t3 = this._get(7);
        return t3 ? t3.initGroupAttributes(e3) : D2({ code: L2.NO_MODULE });
      } }, { key: "setGroupAttributes", value: function(e3) {
        var t3 = this._get(7);
        return t3 ? t3.setGroupAttributes(e3) : D2({ code: L2.NO_MODULE });
      } }, { key: "deleteGroupAttributes", value: function(e3) {
        var t3 = this._get(7);
        return t3 ? t3.deleteGroupAttributes(e3) : D2({ code: L2.NO_MODULE });
      } }, { key: "getGroupAttributes", value: function(e3) {
        var t3 = this._get(7);
        return t3 ? t3.getGroupAttributes(e3) : D2({ code: L2.NO_MODULE });
      } }, { key: "setGroupCounters", value: function(e3) {
        var t3 = this._get(7);
        return t3 ? t3.setGroupCounters(e3) : D2({ code: L2.NO_MODULE });
      } }, { key: "increaseGroupCounter", value: function(e3) {
        var t3 = this._get(7);
        return t3 ? t3.increaseGroupCounter(e3) : D2({ code: L2.NO_MODULE });
      } }, { key: "decreaseGroupCounter", value: function(e3) {
        var t3 = this._get(7);
        return t3 ? t3.decreaseGroupCounter(e3) : D2({ code: L2.NO_MODULE });
      } }, { key: "getGroupCounters", value: function(e3) {
        var t3 = this._get(7);
        return t3 ? t3.getGroupCounters(e3) : D2({ code: L2.NO_MODULE });
      } }, { key: "getGroupMemberList", value: function(e3) {
        var t3 = this._get(7);
        return t3 ? t3.getGroupMemberList(e3) : D2({ code: L2.NO_MODULE });
      } }, { key: "getGroupMemberProfile", value: function(e3) {
        var t3 = this._get(7);
        return t3 ? t3.getGroupMemberProfile(e3) : D2({ code: L2.NO_MODULE });
      } }, { key: "addGroupMember", value: function(e3) {
        var t3 = this._get(7);
        return t3 ? t3.addGroupMember(e3) : D2({ code: L2.NO_MODULE });
      } }, { key: "deleteGroupMember", value: function(e3) {
        var t3 = this._get(7);
        return t3 ? t3.deleteGroupMember(e3) : D2({ code: L2.NO_MODULE });
      } }, { key: "setGroupMemberMuteTime", value: function(e3) {
        var t3 = this._get(7);
        return t3 ? t3.setGroupMemberMuteTime(e3) : D2({ code: L2.NO_MODULE });
      } }, { key: "setGroupMemberRole", value: function(e3) {
        var t3 = this._get(7);
        return t3 ? t3.setGroupMemberRole(e3) : D2({ code: L2.NO_MODULE });
      } }, { key: "setGroupMemberNameCard", value: function(e3) {
        var t3 = this._get(7);
        return t3 ? t3.setGroupMemberNameCard(e3) : D2({ code: L2.NO_MODULE });
      } }, { key: "setGroupMemberCustomField", value: function(e3) {
        var t3 = this._get(7);
        return t3 ? t3.setGroupMemberCustomField(e3) : D2({ code: L2.NO_MODULE });
      } }, { key: "markGroupMemberList", value: function(e3) {
        var t3 = this._get(7);
        return t3 ? t3.markGroupMemberList(e3) : D2({ code: L2.NO_MODULE });
      } }, { key: "getJoinedCommunityList", value: function() {
        return this._get(10).getJoinedCommunityList();
      } }, { key: "createTopicInCommunity", value: function(e3) {
        return this._get(10).createTopicInCommunity(e3);
      } }, { key: "deleteTopicFromCommunity", value: function(e3) {
        return this._get(10).deleteTopicFromCommunity(e3);
      } }, { key: "updateTopicProfile", value: function(e3) {
        return this._get(10).updateTopicProfile(e3);
      } }, { key: "getTopicList", value: function(e3) {
        return this._get(10).getTopicList(e3);
      } }, { key: "addSignalingListener", value: function(e3, t3, n3) {
        var o3 = this._get(33);
        o3 && o3.addSignalingListener(e3, this._safetyCallbackFactory.defense(e3, t3, n3), n3);
      } }, { key: "removeSignalingListener", value: function(e3, t3, n3) {
        var o3, i3 = this._safetyCallbackFactory.find(e3, t3);
        null !== i3 && (o3 = this._get(33)) && (o3.removeSignalingListener(e3, i3, n3), this._safetyCallbackFactory.delete(e3, t3));
      } }, { key: "invite", value: function(e3) {
        var t3 = this._get(33);
        return t3 ? t3.invite(e3) : D2({ code: L2.NO_MODULE });
      } }, { key: "inviteSync", value: function(e3, t3, n3) {
        var o3 = this._get(33);
        return o3 ? o3.inviteSync(e3, t3, n3) : "";
      } }, { key: "inviteInGroup", value: function(e3) {
        var t3 = this._get(33);
        return t3 ? t3.invite(e3) : D2({ code: L2.NO_MODULE });
      } }, { key: "inviteInGroupSync", value: function(e3, t3, n3) {
        var o3 = this._get(33);
        return o3 ? o3.inviteSync(e3, t3, n3) : "";
      } }, { key: "cancel", value: function(e3) {
        var t3 = this._get(33);
        return t3 ? t3.cancel(e3) : D2({ code: L2.NO_MODULE });
      } }, { key: "accept", value: function(e3) {
        var t3 = this._get(33);
        return t3 ? t3.accept(e3) : D2({ code: L2.NO_MODULE });
      } }, { key: "reject", value: function(e3) {
        var t3 = this._get(33);
        return t3 ? t3.reject(e3) : D2({ code: L2.NO_MODULE });
      } }, { key: "getSignalingInfo", value: function(e3) {
        var t3 = this._get(33);
        return t3 ? t3.getSignalingInfo(e3) : null;
      } }, { key: "modifyInvitation", value: function(e3) {
        var t3 = this._get(33);
        return t3 ? t3.modifyInvitation(e3) : D2({ code: L2.NO_MODULE });
      } }]), Rc), Ac = { login: 1, logout: 1, getLoginUser: 1, destroy: 1, on: 1, off: 1, ready: 1, setLogLevel: 1, joinGroup: 1, quitGroup: 1, registerPlugin: 1, getGroupOnlineMemberCount: 1, isReady: 1, addSignalingListener: 1, removeSignalingListener: 1, callExperimentalAPI: 1 };
      function Rc(e3) {
        d2(this, Rc);
        e3 = { SDKAppID: e3.SDKAppID, unlimitedAVChatRoom: e3.unlimitedAVChatRoom || false, scene: e3.scene || "", oversea: e3.oversea || false, instanceID: qt2(), devMode: e3.devMode || false, testEnv: e3.testEnv || false, proxyServer: e3.proxyServer || void 0, fileUploadProxy: e3.fileUploadProxy || void 0, fileDownloadProxy: e3.fileDownloadProxy || e3.fileUploadProxy || void 0, eventThrottling: false !== e3.eventThrottling, partialUpdatedConversations: true === e3.partialUpdatedConversations, modules: e3.modules || void 0 };
        this._m = new Lc(e3), this._safetyCallbackFactory = new Sc(this._m);
      }
      function Oc(e3) {
        d2(this, Oc), this._funcMap = /* @__PURE__ */ new Map(), this._m = e3, this._n = "SafetyCallback", this._reportCount = 0;
      }
      function Nc(t3) {
        var n3 = this;
        d2(this, Nc);
        var o3, e3 = new G2("sdkConstruct"), i3 = (this._n = "ModuleManager", this._isReady = false, this._reason = L2.USER_NOT_LOGGED_IN, this._startLoginTs = 0, this._map = /* @__PURE__ */ new Map(), this._optionalModuleMap = /* @__PURE__ */ new Map(), this._iEmitter = null, this._oEmitter = null, this._checkCount = 0, this._checkTimer = -1, this._map.set(12, new Ri2(this, t3)), this._map.set(37, new Ec(this)), this._map.set(15, new pa(this)), this._map.set(27, new ir2(this)), this._map.set(23, new Hs(this)), this._map.set(24, new nr2(this)), this._map.set(26, new Js(this)), this._map.set(21, new ds(this)), this._map.set(20, new Vs(this)), this._map.set(1, new Ni2(this)), this._map.set(2, new wa(this)), this._map.set(3, new Fa(this)), this._map.set(34, new qa(this)), this._map.set(31, new xa(this)), this._map.set(4, new Ai2(this)), this._map.set(6, new qo(this)), this._map.set(11, new ci2(this)), this._map.set(7, new yi2(this)), this._map.set(10, new Di2(this)), this._map.set(13, new ra(this)), this._map.set(32, new ur2(this)), this._map.set(14, new ua(this)), this._map.set(17, new Ca(this)), this._map.set(18, new Va(this)), this._map.set(19, new Ha(this)), this._map.set(25, new Bs(this)), this._map.set(8, new tr2(this)), this._map.set(28, new ar2(this)), this._map.set(36, new sr2(this)), this._map.set(29, new rr2(this)), this._map.set(30, new cr2(this)), this._map.set(33, new fr2(this)), this._map.set(35, new Ir2(this)), this._eventThrottleMap = /* @__PURE__ */ new Map(), this._eventThrottling = t3.eventThrottling, this._map.get(12).isPartialUpdatedConvs() && (this._eventThrottling = false), f2(t3.modules) ? (Object.keys(t3.modules).forEach(function(e4) {
          o3 = t3.modules[e4], "group-module" === e4 ? n3._map.set(7, new o3(n3)) : "relationship-module" === e4 ? n3._map.set(8, new o3(n3)) : "signaling-module" === e4 ? n3._map.set(33, new o3(n3)) : "follow-module" === e4 && n3._map.set(35, new o3(n3)), n3._optionalModuleMap.set(e4, 1);
        }), this._map.get(12).setUsingChatCore(true)) : this._map.has(7) || this._map.get(12).setUsingChatCore(true), t3.instanceID), a3 = t3.SDKAppID, s3 = this._map.get(12).isIntl(), r3 = this._map.get(12).isUsingChatCore(), i3 = "instanceID:".concat(i3, " SDKAppID:").concat(a3, " isIntl:").concat(s3, " isUsingChatCore:").concat(r3, " host:").concat(xt2()) + " isIOSWebView:".concat(be2, " platform:").concat(De2, " canIUseInflate:").concat(this.canIUseInflate()) + " workerAvailable:".concat(Ge2, " eventThrottling:").concat(this._eventThrottling, " UserAgent:").concat(Te2);
        G2.bindEventStatModule(this._map.get(14)), G2.bindNetMonitorModule(this._map.get(15)), e3.setMessage("".concat(i3, " ").concat(function() {
          var t4 = "";
          if (v2)
            try {
              var e4 = I2.getSystemInfoSync(), n4 = e4.model, o4 = e4.version, i4 = e4.system, a4 = e4.platform, s4 = e4.SDKVersion, t4 = "model:".concat(n4, " version:").concat(o4, " system:").concat(i4, " platform:").concat(a4, " SDKVersion:").concat(s4);
            } catch (e5) {
              t4 = "";
            }
          return t4;
        }())).end(), M2.i("SDK ".concat(i3)), E2.prototype._getErrMsg = this.getErrMsg.bind(this), this._readyList = void 0, this._ssoLogForReady = null, this._initReadyList();
      }
      function Gc(e3) {
        d2(this, Gc), this._m = e3, this._n = "InflateModule", this._bLogForInflateOK = false, this._bLogForInflateError = false;
      }
      var Pc = {}, o2 = {};
      return o2.create = function(e3) {
        var t3 = "TencentCloudChat.create", n3 = 0, o3 = e3.SDKAppID;
        if (R2(o3))
          n3 = o3;
        else if (n3 = parseInt(o3), isNaN(o3))
          return M2.e("".concat(t3, " failed. Failed to parse the SDKAppID, please check the arguments")), null;
        if (n3 && Pc[n3])
          return Pc[n3];
        M2.l("".concat(t3));
        var s3, i3, o3 = new kc(y2(y2({}, e3), {}, { SDKAppID: n3 })), e3 = (o3.on(h2.SDK_DESTROY, function(e4) {
          Pc[e4.data.SDKAppID] = null, delete Pc[e4.data.SDKAppID];
        }), s3 = o3, i3 = /* @__PURE__ */ Object.create(null), Object.keys(Fn2).forEach(function(a3) {
          var t4;
          s3[a3] && (t4 = new $2(), i3[a3] = function() {
            var e4 = Array.from(arguments);
            return t4.use(function(e5, t5) {
              i4 = a3;
              var n4, o4, i4 = !(!(n4 = s3).isReady() && 1 !== Ac[i4]) || (o4 = { code: o4 = n4.getNotReadyReason(), message: "".concat(n4.getErrMsg(o4), " | ").concat(i4, " | ").concat(n4.getErrMsg(L2.SDK_IS_NOT_READY)) }, n4.onError(o4), o4);
              return true === i4 ? t5() : D2(i4);
            }).use(function(e5, t5) {
              if (true === function(n4, o4, i4) {
                if (void 0 === o4)
                  return true;
                var a4 = true;
                if (f2(o4))
                  Object.keys(o4).forEach(function(e7) {
                    var t6 = 1 === n4.length ? n4[0][e7] : void 0;
                    a4 = !!an2(t6, o4[e7], i4, e7) && a4;
                  });
                else if (O2(o4))
                  for (var e6 = 0; e6 < o4.length; e6++)
                    a4 = !!an2(n4[e6], o4[e6], i4, o4[e6].name) && a4;
                if (a4)
                  return a4;
                throw new Error("Params validate failed.");
              }(e5, wn2[a3], a3))
                return t5();
            }).use(function(e5, t5) {
              return s3[a3].apply(s3, e5);
            }), t4.run(e4);
          });
        }), i3);
        return Pc[n3] = e3, wn2.hookGetAPITips(o3.getErrMsg.bind(o3)), M2.l("".concat(t3, " ok")), e3;
      }, o2.TYPES = A2, o2.EVENT = h2, o2.TSignaling = Q2, o2.VERSION = "3.4.7", M2.l("TencentCloudChat.VERSION:".concat(o2.VERSION)), o2;
    });
  })(chat);
  var chatExports = chat.exports;
  const e$1 = /* @__PURE__ */ getDefaultExportFromCjs(chatExports);
  var timUploadPlugin = { exports: {} };
  (function(module, exports) {
    !function(e2, t2) {
      module.exports = t2();
    }(commonjsGlobal, function() {
      function e2(e3, t3) {
        var o3 = Object.keys(e3);
        if (Object.getOwnPropertySymbols) {
          var n3 = Object.getOwnPropertySymbols(e3);
          t3 && (n3 = n3.filter(function(t4) {
            return Object.getOwnPropertyDescriptor(e3, t4).enumerable;
          })), o3.push.apply(o3, n3);
        }
        return o3;
      }
      function t2(t3) {
        for (var o3 = 1; o3 < arguments.length; o3++) {
          var n3 = null != arguments[o3] ? arguments[o3] : {};
          o3 % 2 ? e2(Object(n3), true).forEach(function(e3) {
            s2(t3, e3, n3[e3]);
          }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(t3, Object.getOwnPropertyDescriptors(n3)) : e2(Object(n3)).forEach(function(e3) {
            Object.defineProperty(t3, e3, Object.getOwnPropertyDescriptor(n3, e3));
          });
        }
        return t3;
      }
      function o2(e3) {
        return (o2 = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function(e4) {
          return typeof e4;
        } : function(e4) {
          return e4 && "function" == typeof Symbol && e4.constructor === Symbol && e4 !== Symbol.prototype ? "symbol" : typeof e4;
        })(e3);
      }
      function n2(e3, t3) {
        if (!(e3 instanceof t3))
          throw new TypeError("Cannot call a class as a function");
      }
      function r2(e3, t3) {
        for (var o3 = 0; o3 < t3.length; o3++) {
          var n3 = t3[o3];
          n3.enumerable = n3.enumerable || false, n3.configurable = true, "value" in n3 && (n3.writable = true), Object.defineProperty(e3, n3.key, n3);
        }
      }
      function a2(e3, t3, o3) {
        return t3 && r2(e3.prototype, t3), o3 && r2(e3, o3), Object.defineProperty(e3, "prototype", { writable: false }), e3;
      }
      function s2(e3, t3, o3) {
        return t3 in e3 ? Object.defineProperty(e3, t3, { value: o3, enumerable: true, configurable: true, writable: true }) : e3[t3] = o3, e3;
      }
      function i2(e3, t3) {
        if (null == e3)
          return {};
        var o3, n3, r3 = function(e4, t4) {
          if (null == e4)
            return {};
          var o4, n4, r4 = {}, a4 = Object.keys(e4);
          for (n4 = 0; n4 < a4.length; n4++)
            o4 = a4[n4], t4.indexOf(o4) >= 0 || (r4[o4] = e4[o4]);
          return r4;
        }(e3, t3);
        if (Object.getOwnPropertySymbols) {
          var a3 = Object.getOwnPropertySymbols(e3);
          for (n3 = 0; n3 < a3.length; n3++)
            o3 = a3[n3], t3.indexOf(o3) >= 0 || Object.prototype.propertyIsEnumerable.call(e3, o3) && (r3[o3] = e3[o3]);
        }
        return r3;
      }
      var u2 = "undefined" != typeof commonjsGlobal ? commonjsGlobal : "undefined" != typeof self ? self : "undefined" != typeof window ? window : {}, l2 = "undefined" != typeof wx && "function" == typeof wx.getSystemInfoSync && Boolean(wx.getSystemInfoSync().fontSizeSetting), f2 = "undefined" != typeof qq && "function" == typeof qq.getSystemInfoSync && Boolean(qq.getSystemInfoSync().fontSizeSetting), c2 = "undefined" != typeof tt && "function" == typeof tt.getSystemInfoSync && Boolean(tt.getSystemInfoSync().fontSizeSetting), d2 = "undefined" != typeof swan && "function" == typeof swan.getSystemInfoSync && Boolean(swan.getSystemInfoSync().fontSizeSetting), p2 = "undefined" != typeof my && "function" == typeof my.getSystemInfoSync && Boolean(my.getSystemInfoSync().fontSizeSetting), y2 = "undefined" != typeof uni && "undefined" == typeof window && "function" == typeof requireNativePlugin, h2 = y2 && "ios" === uni.getDeviceInfo().platform.toLocaleLowerCase(), g2 = (y2 && uni.getDeviceInfo().platform.toLocaleLowerCase(), l2 || f2 || c2 || d2 || p2 || y2), m2 = void 0 !== u2 && (void 0 !== u2.nativeModuleProxy || void 0 !== u2.ReactNative), v2 = f2 ? qq : c2 ? tt : d2 ? swan : p2 ? my : l2 ? wx : y2 ? uni : {}, b2 = function(e3) {
        if ("object" !== o2(e3) || null === e3)
          return false;
        var t3 = Object.getPrototypeOf(e3);
        if (null === t3)
          return true;
        for (var n3 = t3; null !== Object.getPrototypeOf(n3); )
          n3 = Object.getPrototypeOf(n3);
        return t3 === n3;
      };
      function w2(e3) {
        if (null == e3)
          return true;
        if ("boolean" == typeof e3)
          return false;
        if ("number" == typeof e3)
          return 0 === e3;
        if ("string" == typeof e3)
          return 0 === e3.length;
        if ("function" == typeof e3)
          return 0 === e3.length;
        if (Array.isArray(e3))
          return 0 === e3.length;
        if (e3 instanceof Error)
          return "" === e3.message;
        if (b2(e3)) {
          for (var t3 in e3)
            if (Object.prototype.hasOwnProperty.call(e3, t3))
              return false;
          return true;
        }
        return false;
      }
      var O2 = function() {
        function e3() {
          n2(this, e3), this._n = "WebRequest";
        }
        return a2(e3, [{ key: "request", value: function(e4, o3) {
          var n3 = this, r3 = "".concat(this._n, ".request"), a3 = e4.downloadUrl || "", s3 = (e4.method || "PUT").toUpperCase(), i3 = e4.url;
          if (formatAppLog("log", "at node_modules/tim-upload-plugin/index.js:1", "%c tim-upload-plugin %c", "background:#0abf5b; padding:1px; border-radius:3px; color: #fff", "background:transparent", "".concat(r3, " URL:").concat(i3)), e4.qs) {
            var u3 = function(e5) {
              var t3 = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : "&", o4 = arguments.length > 2 && void 0 !== arguments[2] ? arguments[2] : "=";
              return w2(e5) ? "" : b2(e5) ? Object.keys(e5).map(function(n4) {
                var r4 = encodeURIComponent(n4) + o4;
                return Array.isArray(e5[n4]) ? e5[n4].map(function(e6) {
                  return r4 + encodeURIComponent(e6);
                }).join(t3) : r4 + encodeURIComponent(e5[n4]);
              }).filter(Boolean).join(t3) : void 0;
            }(e4.qs);
            u3 && (i3 += "".concat(-1 === i3.indexOf("?") ? "?" : "&").concat(u3));
          }
          var l3 = new XMLHttpRequest();
          l3.open(s3, i3, true), l3.responseType = e4.dataType || "text";
          var f3 = e4.headers || {};
          if (e4.uploadByIP && (f3 = t2(t2({}, f3), {}, { host: e4.uploadIP })), !w2(f3))
            for (var c3 in f3)
              f3.hasOwnProperty(c3) && "content-length" !== c3.toLowerCase() && "user-agent" !== c3.toLowerCase() && "origin" !== c3.toLowerCase() && "host" !== c3.toLowerCase() && l3.setRequestHeader(c3, f3[c3]);
          return l3.onload = function() {
            if (200 === l3.status)
              o3(null, n3._xhrRes(l3, n3._xhrBody(l3, a3, e4.uploadByIP && e4.uploadIP), f3));
            else {
              if (e4.uploadIP && -1 === e4.url.indexOf(e4.uploadIP))
                return e4.url = function(e5, t4) {
                  return e5.replace(/^http(s)?:\/\/(.*?)\//, "https://".concat(t4, "/"));
                }(e4.url, e4.uploadIP), e4.uploadByIP = true, n3.request(e4, o3);
              var t3 = { code: l3.status, message: JSON.stringify(l3.responseText) };
              o3(t3, n3._xhrRes(l3, n3._xhrBody(l3, a3, e4.uploadByIP && e4.uploadIP), f3));
            }
          }, l3.onerror = function(t3) {
            var r4 = n3._xhrBody(l3, a3, e4.uploadByIP && e4.uploadIP), s4 = { code: l3.status, message: JSON.stringify(l3.responseText) };
            r4 || l3.statusText || 0 !== l3.status || (t3.message = "CORS blocked or network error"), o3(s4, n3._xhrRes(l3, r4)), s4 = null;
          }, e4.onProgress && l3.upload && (l3.upload.onprogress = function(t3) {
            var o4 = t3.total, n4 = t3.loaded, r4 = Math.floor(100 * n4 / o4);
            e4.onProgress({ total: o4, loaded: n4, percent: (r4 >= 100 ? 100 : r4) / 100 });
          }), l3.send(e4.resources), l3;
        } }, { key: "_xhrRes", value: function(e4, t3) {
          var o3 = {};
          return e4.getAllResponseHeaders().trim().split("\n").forEach(function(e5) {
            if (e5) {
              var t4 = e5.indexOf(":"), n3 = e5.substr(0, t4).trim().toLowerCase(), r3 = e5.substr(t4 + 1).trim();
              o3[n3] = r3;
            }
          }), { statusCode: e4.status, statusMessage: e4.statusText, headers: o3, data: t3 };
        } }, { key: "_xhrBody", value: function(e4, t3, o3) {
          return 200 === e4.status && t3 ? { location: t3, uploadIP: o3 } : { response: e4.responseText, uploadIP: o3 };
        } }]), e3;
      }(), S2 = ["unknown", "image", "video", "audio", "log"], P2 = ["name"], I2 = function() {
        function e3() {
          n2(this, e3);
        }
        return a2(e3, [{ key: "request", value: function(e4, o3) {
          var n3 = this, r3 = e4.resources, a3 = void 0 === r3 ? "" : r3, s3 = e4.headers, u3 = void 0 === s3 ? {} : s3, l3 = e4.url, f3 = e4.downloadUrl, c3 = void 0 === f3 ? "" : f3, d3 = l3, y3 = null, g3 = c3.match(/^(https?:\/\/[^/]+\/)([^/]*\/?)(.*)$/), m3 = decodeURIComponent(g3[3]), b3 = m3.indexOf("?") > -1 ? m3.split("?")[0] : m3, w3 = { key: e4.fileKey ? e4.fileKey : b3, success_action_status: 200, "Content-Type": "" }, O3 = {};
          if (h2) {
            var I3 = l3.split("?sign=");
            if (I3.length > 1) {
              var C3 = I3[1];
              d3 = "".concat(I3[0], "?sign=").concat(encodeURIComponent("".concat(C3))), O3.sign = decodeURIComponent(C3), O3.signature = decodeURIComponent(C3);
            }
          }
          var k2 = { url: d3, header: u3, name: "file", filePath: a3, formData: t2(t2({}, w3), O3), timeout: e4.timeout || 3e5 };
          if (p2) {
            var x2 = k2;
            x2.name;
            k2 = t2(t2({}, i2(x2, P2)), {}, { fileName: "file", fileType: S2[e4.fileType] });
          }
          return (y3 = v2.uploadFile(t2(t2({}, k2), {}, { success: function(e5) {
            n3._handleResponse({ response: e5, downloadUrl: c3, callback: o3 });
          }, fail: function(e5) {
            n3._handleResponse({ response: e5, downloadUrl: c3, callback: o3 });
          } }))).onProgressUpdate && y3.onProgressUpdate(function(t3) {
            e4.onProgress && e4.onProgress({ total: t3.totalBytesExpectedToSend, loaded: t3.totalBytesSent, percent: Math.floor(t3.progress) / 100 });
          }), y3;
        } }, { key: "_handleResponse", value: function(e4) {
          var o3 = e4.downloadUrl, n3 = e4.response, r3 = e4.callback, a3 = n3.header, s3 = {};
          if (a3)
            for (var i3 in a3)
              a3.hasOwnProperty(i3) && (s3[i3.toLowerCase()] = a3[i3]);
          var u3 = +n3.statusCode;
          200 === u3 ? r3(null, { statusCode: u3, headers: s3, data: t2(t2({}, n3.data), {}, { location: o3 }) }) : r3({ code: u3, message: JSON.stringify(n3.data) }, { statusCode: u3, headers: s3, data: void 0 });
        } }]), e3;
      }(), C2 = function() {
        function e3() {
          n2(this, e3);
        }
        return a2(e3, [{ key: "request", value: function(e4, t3) {
          var o3 = this, n3 = e4.resources, r3 = void 0 === n3 ? "" : n3, a3 = e4.fileKey, s3 = void 0 === a3 ? "" : a3, i3 = e4.url, u3 = e4.downloadUrl, l3 = void 0 === u3 ? "" : u3, f3 = new FormData();
          f3.append("key", s3), f3.append("success_action_status", 200), f3.append("file", { uri: r3, type: "application/octet-stream", name: "uploaded_file" }), fetch(i3, { method: "POST", headers: { "Content-Type": "multipart/form-data" }, body: f3 }).then(function(e5) {
            o3._handleResponse({ response: e5, downloadUrl: l3, callback: t3 });
          }).catch(function(e5) {
            o3._handleResponse({ response: e5, downloadUrl: l3, callback: t3 });
          });
        } }, { key: "_handleResponse", value: function(e4) {
          var t3 = e4.downloadUrl, o3 = e4.response, n3 = e4.callback, r3 = o3.headers, a3 = o3.status, s3 = r3 && r3.map || {};
          200 === a3 ? n3(null, { statusCode: 200, headers: s3, data: { location: t3 } }) : n3({ code: a3, message: JSON.stringify(o3) }, { statusCode: a3, headers: s3, data: void 0 });
        } }]), e3;
      }();
      return function() {
        function e3() {
          n2(this, e3), this.retry = 1, this.tryCount = 0, this.systemClockOffset = 0, this.httpRequest = g2 ? new I2() : m2 ? new C2() : new O2(), formatAppLog("log", "at node_modules/tim-upload-plugin/index.js:1", "TIMUploadPlugin.VERSION: ".concat("1.4.1"));
        }
        return a2(e3, [{ key: "uploadFile", value: function(e4, t3) {
          var o3 = this;
          return this.httpRequest.request(e4, function(n3, r3) {
            n3 && o3.tryCount < o3.retry && o3.allowRetry(n3) ? (o3.tryCount++, o3.uploadFile(e4, t3)) : (o3.tryCount = 0, t3(n3, r3));
          });
        } }, { key: "allowRetry", value: function(e4) {
          var t3 = false, o3 = false;
          if (e4) {
            var n3 = e4.headers && (e4.headers.date || e4.headers.Date) || e4.error && e4.error.ServerTime;
            try {
              var r3 = e4.error && e4.error.Code, a3 = e4.error && e4.error.Message;
              ("RequestTimeTooSkewed" === r3 || "AccessDenied" === r3 && "Request has expired" === a3) && (o3 = true);
            } catch (u3) {
            }
            if (o3 && n3) {
              var s3 = Date.now(), i3 = Date.parse(n3);
              Math.abs(s3 + this.systemClockOffset - i3) >= 3e4 && (this.systemClockOffset = i3 - s3, t3 = true);
            } else
              5 === Math.floor(e4.statusCode / 100) && (t3 = true);
          }
          return t3;
        } }], [{ key: "getVersion", value: function() {
          return "1.4.1";
        } }]), e3;
      }();
    });
  })(timUploadPlugin);
  var timUploadPluginExports = timUploadPlugin.exports;
  const t$3 = /* @__PURE__ */ getDefaultExportFromCjs(timUploadPluginExports);
  var lookup = [
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    62,
    0,
    62,
    0,
    63,
    52,
    53,
    54,
    55,
    56,
    57,
    58,
    59,
    60,
    61,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    1,
    2,
    3,
    4,
    5,
    6,
    7,
    8,
    9,
    10,
    11,
    12,
    13,
    14,
    15,
    16,
    17,
    18,
    19,
    20,
    21,
    22,
    23,
    24,
    25,
    0,
    0,
    0,
    0,
    63,
    0,
    26,
    27,
    28,
    29,
    30,
    31,
    32,
    33,
    34,
    35,
    36,
    37,
    38,
    39,
    40,
    41,
    42,
    43,
    44,
    45,
    46,
    47,
    48,
    49,
    50,
    51
  ];
  function base64Decode(source, target) {
    var sourceLength = source.length;
    var paddingLength = source[sourceLength - 2] === "=" ? 2 : source[sourceLength - 1] === "=" ? 1 : 0;
    var tmp;
    var byteIndex = 0;
    var baseLength = sourceLength - paddingLength & 4294967292;
    for (var i2 = 0; i2 < baseLength; i2 += 4) {
      tmp = lookup[source.charCodeAt(i2)] << 18 | lookup[source.charCodeAt(i2 + 1)] << 12 | lookup[source.charCodeAt(i2 + 2)] << 6 | lookup[source.charCodeAt(i2 + 3)];
      target[byteIndex++] = tmp >> 16 & 255;
      target[byteIndex++] = tmp >> 8 & 255;
      target[byteIndex++] = tmp & 255;
    }
    if (paddingLength === 1) {
      tmp = lookup[source.charCodeAt(i2)] << 10 | lookup[source.charCodeAt(i2 + 1)] << 4 | lookup[source.charCodeAt(i2 + 2)] >> 2;
      target[byteIndex++] = tmp >> 8 & 255;
      target[byteIndex++] = tmp & 255;
    }
    if (paddingLength === 2) {
      tmp = lookup[source.charCodeAt(i2)] << 2 | lookup[source.charCodeAt(i2 + 1)] >> 4;
      target[byteIndex++] = tmp & 255;
    }
  }
  const $inject_window_crypto = {
    getRandomValues(arr) {
      if (!(arr instanceof Int8Array || arr instanceof Uint8Array || arr instanceof Int16Array || arr instanceof Uint16Array || arr instanceof Int32Array || arr instanceof Uint32Array || arr instanceof Uint8ClampedArray)) {
        throw new Error("Expected an integer array");
      }
      if (arr.byteLength > 65536) {
        throw new Error("Can only request a maximum of 65536 bytes");
      }
      var crypto = requireNativePlugin("DCloud-Crypto");
      base64Decode(crypto.getRandomValues(arr.byteLength), new Uint8Array(
        arr.buffer,
        arr.byteOffset,
        arr.byteLength
      ));
      return arr;
    }
  };
  var timProfanityFilterPlugin = { exports: {} };
  (function(module, exports) {
    !function(t2, e2) {
      module.exports = e2();
    }(commonjsGlobal, function() {
      function t2(t3, e3) {
        if (!(t3 instanceof e3))
          throw new TypeError("Cannot call a class as a function");
      }
      function e2(t3, e3) {
        for (var r3 = 0; r3 < e3.length; r3++) {
          var i3 = e3[r3];
          i3.enumerable = i3.enumerable || false, i3.configurable = true, "value" in i3 && (i3.writable = true), Object.defineProperty(t3, (n3 = i3.key, o3 = void 0, "symbol" == typeof (o3 = function(t4, e4) {
            if ("object" != typeof t4 || null === t4)
              return t4;
            var r4 = t4[Symbol.toPrimitive];
            if (void 0 !== r4) {
              var i4 = r4.call(t4, e4 || "default");
              if ("object" != typeof i4)
                return i4;
              throw new TypeError("@@toPrimitive must return a primitive value.");
            }
            return ("string" === e4 ? String : Number)(t4);
          }(n3, "string")) ? o3 : String(o3)), i3);
        }
        var n3, o3;
      }
      function r2(t3, r3, i3) {
        return r3 && e2(t3.prototype, r3), i3 && e2(t3, i3), Object.defineProperty(t3, "prototype", { writable: false }), t3;
      }
      function i2(t3, e3) {
        return function(t4) {
          if (Array.isArray(t4))
            return t4;
        }(t3) || function(t4, e4) {
          var r3 = null == t4 ? null : "undefined" != typeof Symbol && t4[Symbol.iterator] || t4["@@iterator"];
          if (null != r3) {
            var i3, n3, o3, s3, a3 = [], c3 = true, h3 = false;
            try {
              if (o3 = (r3 = r3.call(t4)).next, 0 === e4) {
                if (Object(r3) !== r3)
                  return;
                c3 = false;
              } else
                for (; !(c3 = (i3 = o3.call(r3)).done) && (a3.push(i3.value), a3.length !== e4); c3 = true)
                  ;
            } catch (t5) {
              h3 = true, n3 = t5;
            } finally {
              try {
                if (!c3 && null != r3.return && (s3 = r3.return(), Object(s3) !== s3))
                  return;
              } finally {
                if (h3)
                  throw n3;
              }
            }
            return a3;
          }
        }(t3, e3) || o2(t3, e3) || function() {
          throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.");
        }();
      }
      function n2(t3) {
        return function(t4) {
          if (Array.isArray(t4))
            return s2(t4);
        }(t3) || function(t4) {
          if ("undefined" != typeof Symbol && null != t4[Symbol.iterator] || null != t4["@@iterator"])
            return Array.from(t4);
        }(t3) || o2(t3) || function() {
          throw new TypeError("Invalid attempt to spread non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.");
        }();
      }
      function o2(t3, e3) {
        if (t3) {
          if ("string" == typeof t3)
            return s2(t3, e3);
          var r3 = Object.prototype.toString.call(t3).slice(8, -1);
          return "Object" === r3 && t3.constructor && (r3 = t3.constructor.name), "Map" === r3 || "Set" === r3 ? Array.from(t3) : "Arguments" === r3 || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(r3) ? s2(t3, e3) : void 0;
        }
      }
      function s2(t3, e3) {
        (null == e3 || e3 > t3.length) && (e3 = t3.length);
        for (var r3 = 0, i3 = new Array(e3); r3 < e3; r3++)
          i3[r3] = t3[r3];
        return i3;
      }
      function a2(t3, e3) {
        var r3 = "undefined" != typeof Symbol && t3[Symbol.iterator] || t3["@@iterator"];
        if (!r3) {
          if (Array.isArray(t3) || (r3 = o2(t3)) || e3 && t3 && "number" == typeof t3.length) {
            r3 && (t3 = r3);
            var i3 = 0, n3 = function() {
            };
            return { s: n3, n: function() {
              return i3 >= t3.length ? { done: true } : { done: false, value: t3[i3++] };
            }, e: function(t4) {
              throw t4;
            }, f: n3 };
          }
          throw new TypeError("Invalid attempt to iterate non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.");
        }
        var s3, a3 = true, c3 = false;
        return { s: function() {
          r3 = r3.call(t3);
        }, n: function() {
          var t4 = r3.next();
          return a3 = t4.done, t4;
        }, e: function(t4) {
          c3 = true, s3 = t4;
        }, f: function() {
          try {
            a3 || null == r3.return || r3.return();
          } finally {
            if (c3)
              throw s3;
          }
        } };
      }
      var c2 = function() {
        for (var t3 = ` 	\r
~!@#$%^&*()_+-=【】、{}|;':"，。、《》？αβγδεζηθικλμνξοπρστυφχψωΑΒΓΔΕΖΗΘΙΚΛΜΝΞΟΠΡΣΤΥΦΧΨΩ。，、；：？！…—·ˉ¨‘’“”々～‖∶＂＇｀｜〃〔〕〈〉《》「」『』．〖〗【】（）［］｛｝ⅠⅡⅢⅣⅤⅥⅦⅧⅨⅩⅪⅫ⒈⒉⒊⒋⒌⒍⒎⒏⒐⒑⒒⒓⒔⒕⒖⒗⒘⒙⒚⒛㈠㈡㈢㈣㈤㈥㈦㈧㈨㈩①②③④⑤⑥⑦⑧⑨⑩⑴⑵⑶⑷⑸⑹⑺⑻⑼⑽⑾⑿⒀⒁⒂⒃⒄⒅⒆⒇≈≡≠＝≤≥＜＞≮≯∷±＋－×÷／∫∮∝∞∧∨∑∏∪∩∈∵∴⊥∥∠⌒⊙≌∽√§№☆★○●◎◇◆□℃‰€■△▲※→←↑↓〓¤°＃＆＠＼︿＿￣―♂♀┌┍┎┐┑┒┓─┄┈├┝┞┟┠┡┢┣│┆┊┬┭┮┯┰┱┲┳┼┽┾┿╀╁╂╃└┕┖┗┘┙┚┛━┅┉┤┥┦┧┨┩┪┫┃┇┋┴┵┶┷┸┹┺┻╋╊╉╈╇╆╅╄`, e3 = /* @__PURE__ */ new Map(), r3 = 0, i3 = t3.length; r3 < i3; r3++)
          e3.set(t3.charCodeAt(0), true);
        return e3;
      }(), h2 = function() {
        function e3(r3) {
          t2(this, e3);
          var i3, o3 = r3.input, s3 = r3.isArray, a3 = r3.isMap;
          this._trieTree = {}, s3(o3) ? i3 = o3 : a3(o3) && (i3 = n2(o3.keys()), this._map = o3);
          for (var c3 = 0, h3 = i3.length; c3 < h3; c3++)
            if (i3[c3]) {
              for (var l3 = this._trieTree, f3 = i3[c3], u3 = 0, d2 = f3.length; u3 < d2; u3++)
                l3[f3[u3]] || (l3[f3[u3]] = {}), l3 = l3[f3[u3]];
              l3.isEnd = true;
            }
        }
        return r2(e3, [{ key: "filter", value: function(t3) {
          var e4 = t3.text, r3 = t3.replacingEnabled;
          if (0 === Object.keys(this._trieTree).length)
            return { isMatched: false, modifiedText: e4 };
          for (var i3 = this._trieTree, n3 = e4.toLowerCase(), o3 = "", s3 = false, a3 = n3.length, h3 = 0; h3 < a3; h3++)
            if (true !== c2.get(n3.charCodeAt(h3))) {
              for (var l3 = 0, f3 = "", u3 = false, d2 = h3; d2 < a3; d2++) {
                if (!i3[n3[d2]]) {
                  i3 = this._trieTree;
                  break;
                }
                if (f3 += n3[d2], i3[n3[d2]].isEnd) {
                  u3 = true, l3 = d2 - h3, i3 = this._trieTree;
                  break;
                }
                i3 = i3[n3[d2]];
              }
              if (l3 > 1 && (h3 += l3), u3) {
                if (s3 = true, !r3)
                  break;
                var p2 = this._map.get(f3) || "*";
                o3 = e4.replace(new RegExp(f3, "gi"), p2);
              }
            }
          return { isMatched: s3, modifiedText: o3 };
        } }, { key: "reset", value: function() {
          this._trieTree = {}, this._map = null;
        } }]), e3;
      }(), l2 = "undefined" != typeof globalThis ? globalThis : "undefined" != typeof window ? window : "undefined" != typeof commonjsGlobal ? commonjsGlobal : "undefined" != typeof self ? self : {};
      var f2 = {}, u2 = function(t3, e3) {
        return t3(e3 = { exports: {} }, e3.exports), e3.exports;
      }(function(t3, e3) {
        var r3, i3, n3, o3, s3, a3;
        t3.exports = (a3 = a3 || function(t4, e4) {
          var r4;
          if ("undefined" != typeof window && $inject_window_crypto && (r4 = $inject_window_crypto), !r4 && "undefined" != typeof window && window.msCrypto && (r4 = window.msCrypto), !r4 && void 0 !== l2 && l2.crypto && (r4 = l2.crypto), !r4)
            try {
              r4 = f2;
            } catch (v2) {
            }
          var i4 = function() {
            if (r4) {
              if ("function" == typeof r4.getRandomValues)
                try {
                  return r4.getRandomValues(new Uint32Array(1))[0];
                } catch (v2) {
                }
              if ("function" == typeof r4.randomBytes)
                try {
                  return r4.randomBytes(4).readInt32LE();
                } catch (v2) {
                }
            }
            throw new Error("Native crypto module could not be used to get secure random number.");
          }, n4 = Object.create || /* @__PURE__ */ function() {
            function t5() {
            }
            return function(e5) {
              var r5;
              return t5.prototype = e5, r5 = new t5(), t5.prototype = null, r5;
            };
          }(), o4 = {}, s4 = o4.lib = {}, a4 = s4.Base = { extend: function(t5) {
            var e5 = n4(this);
            return t5 && e5.mixIn(t5), e5.hasOwnProperty("init") && this.init !== e5.init || (e5.init = function() {
              e5.$super.init.apply(this, arguments);
            }), e5.init.prototype = e5, e5.$super = this, e5;
          }, create: function() {
            var t5 = this.extend();
            return t5.init.apply(t5, arguments), t5;
          }, init: function() {
          }, mixIn: function(t5) {
            for (var e5 in t5)
              t5.hasOwnProperty(e5) && (this[e5] = t5[e5]);
            t5.hasOwnProperty("toString") && (this.toString = t5.toString);
          }, clone: function() {
            return this.init.prototype.extend(this);
          } }, c3 = s4.WordArray = a4.extend({ init: function(t5, e5) {
            t5 = this.words = t5 || [], this.sigBytes = null != e5 ? e5 : 4 * t5.length;
          }, toString: function(t5) {
            return (t5 || u3).stringify(this);
          }, concat: function(t5) {
            var e5 = this.words, r5 = t5.words, i5 = this.sigBytes, n5 = t5.sigBytes;
            if (this.clamp(), i5 % 4)
              for (var o5 = 0; o5 < n5; o5++) {
                var s5 = r5[o5 >>> 2] >>> 24 - o5 % 4 * 8 & 255;
                e5[i5 + o5 >>> 2] |= s5 << 24 - (i5 + o5) % 4 * 8;
              }
            else
              for (o5 = 0; o5 < n5; o5 += 4)
                e5[i5 + o5 >>> 2] = r5[o5 >>> 2];
            return this.sigBytes += n5, this;
          }, clamp: function() {
            var e5 = this.words, r5 = this.sigBytes;
            e5[r5 >>> 2] &= 4294967295 << 32 - r5 % 4 * 8, e5.length = t4.ceil(r5 / 4);
          }, clone: function() {
            var t5 = a4.clone.call(this);
            return t5.words = this.words.slice(0), t5;
          }, random: function(t5) {
            for (var e5 = [], r5 = 0; r5 < t5; r5 += 4)
              e5.push(i4());
            return new c3.init(e5, t5);
          } }), h3 = o4.enc = {}, u3 = h3.Hex = { stringify: function(t5) {
            for (var e5 = t5.words, r5 = t5.sigBytes, i5 = [], n5 = 0; n5 < r5; n5++) {
              var o5 = e5[n5 >>> 2] >>> 24 - n5 % 4 * 8 & 255;
              i5.push((o5 >>> 4).toString(16)), i5.push((15 & o5).toString(16));
            }
            return i5.join("");
          }, parse: function(t5) {
            for (var e5 = t5.length, r5 = [], i5 = 0; i5 < e5; i5 += 2)
              r5[i5 >>> 3] |= parseInt(t5.substr(i5, 2), 16) << 24 - i5 % 8 * 4;
            return new c3.init(r5, e5 / 2);
          } }, d2 = h3.Latin1 = { stringify: function(t5) {
            for (var e5 = t5.words, r5 = t5.sigBytes, i5 = [], n5 = 0; n5 < r5; n5++) {
              var o5 = e5[n5 >>> 2] >>> 24 - n5 % 4 * 8 & 255;
              i5.push(String.fromCharCode(o5));
            }
            return i5.join("");
          }, parse: function(t5) {
            for (var e5 = t5.length, r5 = [], i5 = 0; i5 < e5; i5++)
              r5[i5 >>> 2] |= (255 & t5.charCodeAt(i5)) << 24 - i5 % 4 * 8;
            return new c3.init(r5, e5);
          } }, p2 = h3.Utf8 = { stringify: function(t5) {
            try {
              return decodeURIComponent(escape(d2.stringify(t5)));
            } catch (e5) {
              throw new Error("Malformed UTF-8 data");
            }
          }, parse: function(t5) {
            return d2.parse(unescape(encodeURIComponent(t5)));
          } }, _2 = s4.BufferedBlockAlgorithm = a4.extend({ reset: function() {
            this._data = new c3.init(), this._nDataBytes = 0;
          }, _append: function(t5) {
            "string" == typeof t5 && (t5 = p2.parse(t5)), this._data.concat(t5), this._nDataBytes += t5.sigBytes;
          }, _process: function(e5) {
            var r5, i5 = this._data, n5 = i5.words, o5 = i5.sigBytes, s5 = this.blockSize, a5 = o5 / (4 * s5), h4 = (a5 = e5 ? t4.ceil(a5) : t4.max((0 | a5) - this._minBufferSize, 0)) * s5, l3 = t4.min(4 * h4, o5);
            if (h4) {
              for (var f3 = 0; f3 < h4; f3 += s5)
                this._doProcessBlock(n5, f3);
              r5 = n5.splice(0, h4), i5.sigBytes -= l3;
            }
            return new c3.init(r5, l3);
          }, clone: function() {
            var t5 = a4.clone.call(this);
            return t5._data = this._data.clone(), t5;
          }, _minBufferSize: 0 }), y2 = (s4.Hasher = _2.extend({ cfg: a4.extend(), init: function(t5) {
            this.cfg = this.cfg.extend(t5), this.reset();
          }, reset: function() {
            _2.reset.call(this), this._doReset();
          }, update: function(t5) {
            return this._append(t5), this._process(), this;
          }, finalize: function(t5) {
            return t5 && this._append(t5), this._doFinalize();
          }, blockSize: 16, _createHelper: function(t5) {
            return function(e5, r5) {
              return new t5.init(r5).finalize(e5);
            };
          }, _createHmacHelper: function(t5) {
            return function(e5, r5) {
              return new y2.HMAC.init(t5, r5).finalize(e5);
            };
          } }), o4.algo = {});
          return o4;
        }(Math), s3 = (o3 = a3).lib.WordArray, o3.enc.Base64 = { stringify: function(t4) {
          var e4 = t4.words, r4 = t4.sigBytes, i4 = this._map;
          t4.clamp();
          for (var n4 = [], o4 = 0; o4 < r4; o4 += 3)
            for (var s4 = (e4[o4 >>> 2] >>> 24 - o4 % 4 * 8 & 255) << 16 | (e4[o4 + 1 >>> 2] >>> 24 - (o4 + 1) % 4 * 8 & 255) << 8 | e4[o4 + 2 >>> 2] >>> 24 - (o4 + 2) % 4 * 8 & 255, a4 = 0; a4 < 4 && o4 + 0.75 * a4 < r4; a4++)
              n4.push(i4.charAt(s4 >>> 6 * (3 - a4) & 63));
          var c3 = i4.charAt(64);
          if (c3)
            for (; n4.length % 4; )
              n4.push(c3);
          return n4.join("");
        }, parse: function(t4) {
          var e4 = t4.length, r4 = this._map, i4 = this._reverseMap;
          if (!i4) {
            i4 = this._reverseMap = [];
            for (var n4 = 0; n4 < r4.length; n4++)
              i4[r4.charCodeAt(n4)] = n4;
          }
          var o4 = r4.charAt(64);
          if (o4) {
            var a4 = t4.indexOf(o4);
            -1 !== a4 && (e4 = a4);
          }
          return function(t5, e5, r5) {
            for (var i5 = [], n5 = 0, o5 = 0; o5 < e5; o5++)
              if (o5 % 4) {
                var a5 = r5[t5.charCodeAt(o5 - 1)] << o5 % 4 * 2, c3 = r5[t5.charCodeAt(o5)] >>> 6 - o5 % 4 * 2, h3 = a5 | c3;
                i5[n5 >>> 2] |= h3 << 24 - n5 % 4 * 8, n5++;
              }
            return s3.create(i5, n5);
          }(t4, e4, i4);
        }, _map: "ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/=" }, function(t4) {
          var e4 = a3, r4 = e4.lib, i4 = r4.WordArray, n4 = r4.Hasher, o4 = e4.algo, s4 = [];
          !function() {
            for (var e5 = 0; e5 < 64; e5++)
              s4[e5] = 4294967296 * t4.abs(t4.sin(e5 + 1)) | 0;
          }();
          var c3 = o4.MD5 = n4.extend({ _doReset: function() {
            this._hash = new i4.init([1732584193, 4023233417, 2562383102, 271733878]);
          }, _doProcessBlock: function(t5, e5) {
            for (var r5 = 0; r5 < 16; r5++) {
              var i5 = e5 + r5, n5 = t5[i5];
              t5[i5] = 16711935 & (n5 << 8 | n5 >>> 24) | 4278255360 & (n5 << 24 | n5 >>> 8);
            }
            var o5 = this._hash.words, a4 = t5[e5 + 0], c4 = t5[e5 + 1], d2 = t5[e5 + 2], p2 = t5[e5 + 3], _2 = t5[e5 + 4], y2 = t5[e5 + 5], v2 = t5[e5 + 6], g2 = t5[e5 + 7], w2 = t5[e5 + 8], B2 = t5[e5 + 9], k2 = t5[e5 + 10], m2 = t5[e5 + 11], b2 = t5[e5 + 12], x2 = t5[e5 + 13], S2 = t5[e5 + 14], A2 = t5[e5 + 15], H2 = o5[0], C2 = o5[1], z2 = o5[2], E2 = o5[3];
            H2 = h3(H2, C2, z2, E2, a4, 7, s4[0]), E2 = h3(E2, H2, C2, z2, c4, 12, s4[1]), z2 = h3(z2, E2, H2, C2, d2, 17, s4[2]), C2 = h3(C2, z2, E2, H2, p2, 22, s4[3]), H2 = h3(H2, C2, z2, E2, _2, 7, s4[4]), E2 = h3(E2, H2, C2, z2, y2, 12, s4[5]), z2 = h3(z2, E2, H2, C2, v2, 17, s4[6]), C2 = h3(C2, z2, E2, H2, g2, 22, s4[7]), H2 = h3(H2, C2, z2, E2, w2, 7, s4[8]), E2 = h3(E2, H2, C2, z2, B2, 12, s4[9]), z2 = h3(z2, E2, H2, C2, k2, 17, s4[10]), C2 = h3(C2, z2, E2, H2, m2, 22, s4[11]), H2 = h3(H2, C2, z2, E2, b2, 7, s4[12]), E2 = h3(E2, H2, C2, z2, x2, 12, s4[13]), z2 = h3(z2, E2, H2, C2, S2, 17, s4[14]), H2 = l3(H2, C2 = h3(C2, z2, E2, H2, A2, 22, s4[15]), z2, E2, c4, 5, s4[16]), E2 = l3(E2, H2, C2, z2, v2, 9, s4[17]), z2 = l3(z2, E2, H2, C2, m2, 14, s4[18]), C2 = l3(C2, z2, E2, H2, a4, 20, s4[19]), H2 = l3(H2, C2, z2, E2, y2, 5, s4[20]), E2 = l3(E2, H2, C2, z2, k2, 9, s4[21]), z2 = l3(z2, E2, H2, C2, A2, 14, s4[22]), C2 = l3(C2, z2, E2, H2, _2, 20, s4[23]), H2 = l3(H2, C2, z2, E2, B2, 5, s4[24]), E2 = l3(E2, H2, C2, z2, S2, 9, s4[25]), z2 = l3(z2, E2, H2, C2, p2, 14, s4[26]), C2 = l3(C2, z2, E2, H2, w2, 20, s4[27]), H2 = l3(H2, C2, z2, E2, x2, 5, s4[28]), E2 = l3(E2, H2, C2, z2, d2, 9, s4[29]), z2 = l3(z2, E2, H2, C2, g2, 14, s4[30]), H2 = f3(H2, C2 = l3(C2, z2, E2, H2, b2, 20, s4[31]), z2, E2, y2, 4, s4[32]), E2 = f3(E2, H2, C2, z2, w2, 11, s4[33]), z2 = f3(z2, E2, H2, C2, m2, 16, s4[34]), C2 = f3(C2, z2, E2, H2, S2, 23, s4[35]), H2 = f3(H2, C2, z2, E2, c4, 4, s4[36]), E2 = f3(E2, H2, C2, z2, _2, 11, s4[37]), z2 = f3(z2, E2, H2, C2, g2, 16, s4[38]), C2 = f3(C2, z2, E2, H2, k2, 23, s4[39]), H2 = f3(H2, C2, z2, E2, x2, 4, s4[40]), E2 = f3(E2, H2, C2, z2, a4, 11, s4[41]), z2 = f3(z2, E2, H2, C2, p2, 16, s4[42]), C2 = f3(C2, z2, E2, H2, v2, 23, s4[43]), H2 = f3(H2, C2, z2, E2, B2, 4, s4[44]), E2 = f3(E2, H2, C2, z2, b2, 11, s4[45]), z2 = f3(z2, E2, H2, C2, A2, 16, s4[46]), H2 = u3(H2, C2 = f3(C2, z2, E2, H2, d2, 23, s4[47]), z2, E2, a4, 6, s4[48]), E2 = u3(E2, H2, C2, z2, g2, 10, s4[49]), z2 = u3(z2, E2, H2, C2, S2, 15, s4[50]), C2 = u3(C2, z2, E2, H2, y2, 21, s4[51]), H2 = u3(H2, C2, z2, E2, b2, 6, s4[52]), E2 = u3(E2, H2, C2, z2, p2, 10, s4[53]), z2 = u3(z2, E2, H2, C2, k2, 15, s4[54]), C2 = u3(C2, z2, E2, H2, c4, 21, s4[55]), H2 = u3(H2, C2, z2, E2, w2, 6, s4[56]), E2 = u3(E2, H2, C2, z2, A2, 10, s4[57]), z2 = u3(z2, E2, H2, C2, v2, 15, s4[58]), C2 = u3(C2, z2, E2, H2, x2, 21, s4[59]), H2 = u3(H2, C2, z2, E2, _2, 6, s4[60]), E2 = u3(E2, H2, C2, z2, m2, 10, s4[61]), z2 = u3(z2, E2, H2, C2, d2, 15, s4[62]), C2 = u3(C2, z2, E2, H2, B2, 21, s4[63]), o5[0] = o5[0] + H2 | 0, o5[1] = o5[1] + C2 | 0, o5[2] = o5[2] + z2 | 0, o5[3] = o5[3] + E2 | 0;
          }, _doFinalize: function() {
            var e5 = this._data, r5 = e5.words, i5 = 8 * this._nDataBytes, n5 = 8 * e5.sigBytes;
            r5[n5 >>> 5] |= 128 << 24 - n5 % 32;
            var o5 = t4.floor(i5 / 4294967296), s5 = i5;
            r5[15 + (n5 + 64 >>> 9 << 4)] = 16711935 & (o5 << 8 | o5 >>> 24) | 4278255360 & (o5 << 24 | o5 >>> 8), r5[14 + (n5 + 64 >>> 9 << 4)] = 16711935 & (s5 << 8 | s5 >>> 24) | 4278255360 & (s5 << 24 | s5 >>> 8), e5.sigBytes = 4 * (r5.length + 1), this._process();
            for (var a4 = this._hash, c4 = a4.words, h4 = 0; h4 < 4; h4++) {
              var l4 = c4[h4];
              c4[h4] = 16711935 & (l4 << 8 | l4 >>> 24) | 4278255360 & (l4 << 24 | l4 >>> 8);
            }
            return a4;
          }, clone: function() {
            var t5 = n4.clone.call(this);
            return t5._hash = this._hash.clone(), t5;
          } });
          function h3(t5, e5, r5, i5, n5, o5, s5) {
            var a4 = t5 + (e5 & r5 | ~e5 & i5) + n5 + s5;
            return (a4 << o5 | a4 >>> 32 - o5) + e5;
          }
          function l3(t5, e5, r5, i5, n5, o5, s5) {
            var a4 = t5 + (e5 & i5 | r5 & ~i5) + n5 + s5;
            return (a4 << o5 | a4 >>> 32 - o5) + e5;
          }
          function f3(t5, e5, r5, i5, n5, o5, s5) {
            var a4 = t5 + (e5 ^ r5 ^ i5) + n5 + s5;
            return (a4 << o5 | a4 >>> 32 - o5) + e5;
          }
          function u3(t5, e5, r5, i5, n5, o5, s5) {
            var a4 = t5 + (r5 ^ (e5 | ~i5)) + n5 + s5;
            return (a4 << o5 | a4 >>> 32 - o5) + e5;
          }
          e4.MD5 = n4._createHelper(c3), e4.HmacMD5 = n4._createHmacHelper(c3);
        }(Math), function() {
          var t4 = a3, e4 = t4.lib, r4 = e4.WordArray, i4 = e4.Hasher, n4 = t4.algo, o4 = [], s4 = n4.SHA1 = i4.extend({ _doReset: function() {
            this._hash = new r4.init([1732584193, 4023233417, 2562383102, 271733878, 3285377520]);
          }, _doProcessBlock: function(t5, e5) {
            for (var r5 = this._hash.words, i5 = r5[0], n5 = r5[1], s5 = r5[2], a4 = r5[3], c3 = r5[4], h3 = 0; h3 < 80; h3++) {
              if (h3 < 16)
                o4[h3] = 0 | t5[e5 + h3];
              else {
                var l3 = o4[h3 - 3] ^ o4[h3 - 8] ^ o4[h3 - 14] ^ o4[h3 - 16];
                o4[h3] = l3 << 1 | l3 >>> 31;
              }
              var f3 = (i5 << 5 | i5 >>> 27) + c3 + o4[h3];
              f3 += h3 < 20 ? 1518500249 + (n5 & s5 | ~n5 & a4) : h3 < 40 ? 1859775393 + (n5 ^ s5 ^ a4) : h3 < 60 ? (n5 & s5 | n5 & a4 | s5 & a4) - 1894007588 : (n5 ^ s5 ^ a4) - 899497514, c3 = a4, a4 = s5, s5 = n5 << 30 | n5 >>> 2, n5 = i5, i5 = f3;
            }
            r5[0] = r5[0] + i5 | 0, r5[1] = r5[1] + n5 | 0, r5[2] = r5[2] + s5 | 0, r5[3] = r5[3] + a4 | 0, r5[4] = r5[4] + c3 | 0;
          }, _doFinalize: function() {
            var t5 = this._data, e5 = t5.words, r5 = 8 * this._nDataBytes, i5 = 8 * t5.sigBytes;
            return e5[i5 >>> 5] |= 128 << 24 - i5 % 32, e5[14 + (i5 + 64 >>> 9 << 4)] = Math.floor(r5 / 4294967296), e5[15 + (i5 + 64 >>> 9 << 4)] = r5, t5.sigBytes = 4 * e5.length, this._process(), this._hash;
          }, clone: function() {
            var t5 = i4.clone.call(this);
            return t5._hash = this._hash.clone(), t5;
          } });
          t4.SHA1 = i4._createHelper(s4), t4.HmacSHA1 = i4._createHmacHelper(s4);
        }(), function(t4) {
          var e4 = a3, r4 = e4.lib, i4 = r4.WordArray, n4 = r4.Hasher, o4 = e4.algo, s4 = [], c3 = [];
          !function() {
            function e5(e6) {
              for (var r6 = t4.sqrt(e6), i6 = 2; i6 <= r6; i6++)
                if (!(e6 % i6))
                  return false;
              return true;
            }
            function r5(t5) {
              return 4294967296 * (t5 - (0 | t5)) | 0;
            }
            for (var i5 = 2, n5 = 0; n5 < 64; )
              e5(i5) && (n5 < 8 && (s4[n5] = r5(t4.pow(i5, 0.5))), c3[n5] = r5(t4.pow(i5, 1 / 3)), n5++), i5++;
          }();
          var h3 = [], l3 = o4.SHA256 = n4.extend({ _doReset: function() {
            this._hash = new i4.init(s4.slice(0));
          }, _doProcessBlock: function(t5, e5) {
            for (var r5 = this._hash.words, i5 = r5[0], n5 = r5[1], o5 = r5[2], s5 = r5[3], a4 = r5[4], l4 = r5[5], f3 = r5[6], u3 = r5[7], d2 = 0; d2 < 64; d2++) {
              if (d2 < 16)
                h3[d2] = 0 | t5[e5 + d2];
              else {
                var p2 = h3[d2 - 15], _2 = (p2 << 25 | p2 >>> 7) ^ (p2 << 14 | p2 >>> 18) ^ p2 >>> 3, y2 = h3[d2 - 2], v2 = (y2 << 15 | y2 >>> 17) ^ (y2 << 13 | y2 >>> 19) ^ y2 >>> 10;
                h3[d2] = _2 + h3[d2 - 7] + v2 + h3[d2 - 16];
              }
              var g2 = i5 & n5 ^ i5 & o5 ^ n5 & o5, w2 = (i5 << 30 | i5 >>> 2) ^ (i5 << 19 | i5 >>> 13) ^ (i5 << 10 | i5 >>> 22), B2 = u3 + ((a4 << 26 | a4 >>> 6) ^ (a4 << 21 | a4 >>> 11) ^ (a4 << 7 | a4 >>> 25)) + (a4 & l4 ^ ~a4 & f3) + c3[d2] + h3[d2];
              u3 = f3, f3 = l4, l4 = a4, a4 = s5 + B2 | 0, s5 = o5, o5 = n5, n5 = i5, i5 = B2 + (w2 + g2) | 0;
            }
            r5[0] = r5[0] + i5 | 0, r5[1] = r5[1] + n5 | 0, r5[2] = r5[2] + o5 | 0, r5[3] = r5[3] + s5 | 0, r5[4] = r5[4] + a4 | 0, r5[5] = r5[5] + l4 | 0, r5[6] = r5[6] + f3 | 0, r5[7] = r5[7] + u3 | 0;
          }, _doFinalize: function() {
            var e5 = this._data, r5 = e5.words, i5 = 8 * this._nDataBytes, n5 = 8 * e5.sigBytes;
            return r5[n5 >>> 5] |= 128 << 24 - n5 % 32, r5[14 + (n5 + 64 >>> 9 << 4)] = t4.floor(i5 / 4294967296), r5[15 + (n5 + 64 >>> 9 << 4)] = i5, e5.sigBytes = 4 * r5.length, this._process(), this._hash;
          }, clone: function() {
            var t5 = n4.clone.call(this);
            return t5._hash = this._hash.clone(), t5;
          } });
          e4.SHA256 = n4._createHelper(l3), e4.HmacSHA256 = n4._createHmacHelper(l3);
        }(Math), function() {
          var t4 = a3, e4 = t4.lib.WordArray, r4 = t4.enc;
          function i4(t5) {
            return t5 << 8 & 4278255360 | t5 >>> 8 & 16711935;
          }
          r4.Utf16 = r4.Utf16BE = { stringify: function(t5) {
            for (var e5 = t5.words, r5 = t5.sigBytes, i5 = [], n4 = 0; n4 < r5; n4 += 2) {
              var o4 = e5[n4 >>> 2] >>> 16 - n4 % 4 * 8 & 65535;
              i5.push(String.fromCharCode(o4));
            }
            return i5.join("");
          }, parse: function(t5) {
            for (var r5 = t5.length, i5 = [], n4 = 0; n4 < r5; n4++)
              i5[n4 >>> 1] |= t5.charCodeAt(n4) << 16 - n4 % 2 * 16;
            return e4.create(i5, 2 * r5);
          } }, r4.Utf16LE = { stringify: function(t5) {
            for (var e5 = t5.words, r5 = t5.sigBytes, n4 = [], o4 = 0; o4 < r5; o4 += 2) {
              var s4 = i4(e5[o4 >>> 2] >>> 16 - o4 % 4 * 8 & 65535);
              n4.push(String.fromCharCode(s4));
            }
            return n4.join("");
          }, parse: function(t5) {
            for (var r5 = t5.length, n4 = [], o4 = 0; o4 < r5; o4++)
              n4[o4 >>> 1] |= i4(t5.charCodeAt(o4) << 16 - o4 % 2 * 16);
            return e4.create(n4, 2 * r5);
          } };
        }(), function() {
          if ("function" == typeof ArrayBuffer) {
            var t4 = a3.lib.WordArray, e4 = t4.init;
            (t4.init = function(t5) {
              if (t5 instanceof ArrayBuffer && (t5 = new Uint8Array(t5)), (t5 instanceof Int8Array || "undefined" != typeof Uint8ClampedArray && t5 instanceof Uint8ClampedArray || t5 instanceof Int16Array || t5 instanceof Uint16Array || t5 instanceof Int32Array || t5 instanceof Uint32Array || t5 instanceof Float32Array || t5 instanceof Float64Array) && (t5 = new Uint8Array(t5.buffer, t5.byteOffset, t5.byteLength)), t5 instanceof Uint8Array) {
                for (var r4 = t5.byteLength, i4 = [], n4 = 0; n4 < r4; n4++)
                  i4[n4 >>> 2] |= t5[n4] << 24 - n4 % 4 * 8;
                e4.call(this, i4, r4);
              } else
                e4.apply(this, arguments);
            }).prototype = t4;
          }
        }(), /** @preserve
              (c) 2012 by C��dric Mesnil. All rights reserved.
               Redistribution and use in source and binary forms, with or without modification, are permitted provided that the following conditions are met:
                   - Redistributions of source code must retain the above copyright notice, this list of conditions and the following disclaimer.
                  - Redistributions in binary form must reproduce the above copyright notice, this list of conditions and the following disclaimer in the documentation and/or other materials provided with the distribution.
               THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
              */
        function(t4) {
          var e4 = a3, r4 = e4.lib, i4 = r4.WordArray, n4 = r4.Hasher, o4 = e4.algo, s4 = i4.create([0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 7, 4, 13, 1, 10, 6, 15, 3, 12, 0, 9, 5, 2, 14, 11, 8, 3, 10, 14, 4, 9, 15, 8, 1, 2, 7, 0, 6, 13, 11, 5, 12, 1, 9, 11, 10, 0, 8, 12, 4, 13, 3, 7, 15, 14, 5, 6, 2, 4, 0, 5, 9, 7, 12, 2, 10, 14, 1, 3, 8, 11, 6, 15, 13]), c3 = i4.create([5, 14, 7, 0, 9, 2, 11, 4, 13, 6, 15, 8, 1, 10, 3, 12, 6, 11, 3, 7, 0, 13, 5, 10, 14, 15, 8, 12, 4, 9, 1, 2, 15, 5, 1, 3, 7, 14, 6, 9, 11, 8, 12, 2, 10, 0, 4, 13, 8, 6, 4, 1, 3, 11, 15, 0, 5, 12, 2, 13, 9, 7, 10, 14, 12, 15, 10, 4, 1, 5, 8, 7, 6, 2, 13, 14, 0, 3, 9, 11]), h3 = i4.create([11, 14, 15, 12, 5, 8, 7, 9, 11, 13, 14, 15, 6, 7, 9, 8, 7, 6, 8, 13, 11, 9, 7, 15, 7, 12, 15, 9, 11, 7, 13, 12, 11, 13, 6, 7, 14, 9, 13, 15, 14, 8, 13, 6, 5, 12, 7, 5, 11, 12, 14, 15, 14, 15, 9, 8, 9, 14, 5, 6, 8, 6, 5, 12, 9, 15, 5, 11, 6, 8, 13, 12, 5, 12, 13, 14, 11, 8, 5, 6]), l3 = i4.create([8, 9, 9, 11, 13, 15, 15, 5, 7, 7, 8, 11, 14, 14, 12, 6, 9, 13, 15, 7, 12, 8, 9, 11, 7, 7, 12, 7, 6, 15, 13, 11, 9, 7, 15, 11, 8, 6, 6, 14, 12, 13, 5, 14, 13, 13, 7, 5, 15, 5, 8, 11, 14, 14, 6, 14, 6, 9, 12, 9, 12, 5, 15, 8, 8, 5, 12, 9, 12, 5, 14, 6, 8, 13, 6, 5, 15, 13, 11, 11]), f3 = i4.create([0, 1518500249, 1859775393, 2400959708, 2840853838]), u3 = i4.create([1352829926, 1548603684, 1836072691, 2053994217, 0]), d2 = o4.RIPEMD160 = n4.extend({ _doReset: function() {
            this._hash = i4.create([1732584193, 4023233417, 2562383102, 271733878, 3285377520]);
          }, _doProcessBlock: function(t5, e5) {
            for (var r5 = 0; r5 < 16; r5++) {
              var i5 = e5 + r5, n5 = t5[i5];
              t5[i5] = 16711935 & (n5 << 8 | n5 >>> 24) | 4278255360 & (n5 << 24 | n5 >>> 8);
            }
            var o5, a4, d3, B2, k2, m2, b2, x2, S2, A2, H2, C2 = this._hash.words, z2 = f3.words, E2 = u3.words, M2 = s4.words, R2 = c3.words, D2 = h3.words, P2 = l3.words;
            for (m2 = o5 = C2[0], b2 = a4 = C2[1], x2 = d3 = C2[2], S2 = B2 = C2[3], A2 = k2 = C2[4], r5 = 0; r5 < 80; r5 += 1)
              H2 = o5 + t5[e5 + M2[r5]] | 0, H2 += r5 < 16 ? p2(a4, d3, B2) + z2[0] : r5 < 32 ? _2(a4, d3, B2) + z2[1] : r5 < 48 ? y2(a4, d3, B2) + z2[2] : r5 < 64 ? v2(a4, d3, B2) + z2[3] : g2(a4, d3, B2) + z2[4], H2 = (H2 = w2(H2 |= 0, D2[r5])) + k2 | 0, o5 = k2, k2 = B2, B2 = w2(d3, 10), d3 = a4, a4 = H2, H2 = m2 + t5[e5 + R2[r5]] | 0, H2 += r5 < 16 ? g2(b2, x2, S2) + E2[0] : r5 < 32 ? v2(b2, x2, S2) + E2[1] : r5 < 48 ? y2(b2, x2, S2) + E2[2] : r5 < 64 ? _2(b2, x2, S2) + E2[3] : p2(b2, x2, S2) + E2[4], H2 = (H2 = w2(H2 |= 0, P2[r5])) + A2 | 0, m2 = A2, A2 = S2, S2 = w2(x2, 10), x2 = b2, b2 = H2;
            H2 = C2[1] + d3 + S2 | 0, C2[1] = C2[2] + B2 + A2 | 0, C2[2] = C2[3] + k2 + m2 | 0, C2[3] = C2[4] + o5 + b2 | 0, C2[4] = C2[0] + a4 + x2 | 0, C2[0] = H2;
          }, _doFinalize: function() {
            var t5 = this._data, e5 = t5.words, r5 = 8 * this._nDataBytes, i5 = 8 * t5.sigBytes;
            e5[i5 >>> 5] |= 128 << 24 - i5 % 32, e5[14 + (i5 + 64 >>> 9 << 4)] = 16711935 & (r5 << 8 | r5 >>> 24) | 4278255360 & (r5 << 24 | r5 >>> 8), t5.sigBytes = 4 * (e5.length + 1), this._process();
            for (var n5 = this._hash, o5 = n5.words, s5 = 0; s5 < 5; s5++) {
              var a4 = o5[s5];
              o5[s5] = 16711935 & (a4 << 8 | a4 >>> 24) | 4278255360 & (a4 << 24 | a4 >>> 8);
            }
            return n5;
          }, clone: function() {
            var t5 = n4.clone.call(this);
            return t5._hash = this._hash.clone(), t5;
          } });
          function p2(t5, e5, r5) {
            return t5 ^ e5 ^ r5;
          }
          function _2(t5, e5, r5) {
            return t5 & e5 | ~t5 & r5;
          }
          function y2(t5, e5, r5) {
            return (t5 | ~e5) ^ r5;
          }
          function v2(t5, e5, r5) {
            return t5 & r5 | e5 & ~r5;
          }
          function g2(t5, e5, r5) {
            return t5 ^ (e5 | ~r5);
          }
          function w2(t5, e5) {
            return t5 << e5 | t5 >>> 32 - e5;
          }
          e4.RIPEMD160 = n4._createHelper(d2), e4.HmacRIPEMD160 = n4._createHmacHelper(d2);
        }(), function() {
          var t4 = a3, e4 = t4.lib.Base, r4 = t4.enc.Utf8;
          t4.algo.HMAC = e4.extend({ init: function(t5, e5) {
            t5 = this._hasher = new t5.init(), "string" == typeof e5 && (e5 = r4.parse(e5));
            var i4 = t5.blockSize, n4 = 4 * i4;
            e5.sigBytes > n4 && (e5 = t5.finalize(e5)), e5.clamp();
            for (var o4 = this._oKey = e5.clone(), s4 = this._iKey = e5.clone(), a4 = o4.words, c3 = s4.words, h3 = 0; h3 < i4; h3++)
              a4[h3] ^= 1549556828, c3[h3] ^= 909522486;
            o4.sigBytes = s4.sigBytes = n4, this.reset();
          }, reset: function() {
            var t5 = this._hasher;
            t5.reset(), t5.update(this._iKey);
          }, update: function(t5) {
            return this._hasher.update(t5), this;
          }, finalize: function(t5) {
            var e5 = this._hasher, r5 = e5.finalize(t5);
            return e5.reset(), e5.finalize(this._oKey.clone().concat(r5));
          } });
        }(), function() {
          var t4 = a3, e4 = t4.lib, r4 = e4.Base, i4 = e4.WordArray, n4 = t4.algo, o4 = n4.SHA1, s4 = n4.HMAC, c3 = n4.PBKDF2 = r4.extend({ cfg: r4.extend({ keySize: 4, hasher: o4, iterations: 1 }), init: function(t5) {
            this.cfg = this.cfg.extend(t5);
          }, compute: function(t5, e5) {
            for (var r5 = this.cfg, n5 = s4.create(r5.hasher, t5), o5 = i4.create(), a4 = i4.create([1]), c4 = o5.words, h3 = a4.words, l3 = r5.keySize, f3 = r5.iterations; c4.length < l3; ) {
              var u3 = n5.update(e5).finalize(a4);
              n5.reset();
              for (var d2 = u3.words, p2 = d2.length, _2 = u3, y2 = 1; y2 < f3; y2++) {
                _2 = n5.finalize(_2), n5.reset();
                for (var v2 = _2.words, g2 = 0; g2 < p2; g2++)
                  d2[g2] ^= v2[g2];
              }
              o5.concat(u3), h3[0]++;
            }
            return o5.sigBytes = 4 * l3, o5;
          } });
          t4.PBKDF2 = function(t5, e5, r5) {
            return c3.create(r5).compute(t5, e5);
          };
        }(), function() {
          var t4 = a3, e4 = t4.lib, r4 = e4.Base, i4 = e4.WordArray, n4 = t4.algo, o4 = n4.MD5, s4 = n4.EvpKDF = r4.extend({ cfg: r4.extend({ keySize: 4, hasher: o4, iterations: 1 }), init: function(t5) {
            this.cfg = this.cfg.extend(t5);
          }, compute: function(t5, e5) {
            for (var r5, n5 = this.cfg, o5 = n5.hasher.create(), s5 = i4.create(), a4 = s5.words, c3 = n5.keySize, h3 = n5.iterations; a4.length < c3; ) {
              r5 && o5.update(r5), r5 = o5.update(t5).finalize(e5), o5.reset();
              for (var l3 = 1; l3 < h3; l3++)
                r5 = o5.finalize(r5), o5.reset();
              s5.concat(r5);
            }
            return s5.sigBytes = 4 * c3, s5;
          } });
          t4.EvpKDF = function(t5, e5, r5) {
            return s4.create(r5).compute(t5, e5);
          };
        }(), function() {
          var t4 = a3, e4 = t4.lib.WordArray, r4 = t4.algo, i4 = r4.SHA256, n4 = r4.SHA224 = i4.extend({ _doReset: function() {
            this._hash = new e4.init([3238371032, 914150663, 812702999, 4144912697, 4290775857, 1750603025, 1694076839, 3204075428]);
          }, _doFinalize: function() {
            var t5 = i4._doFinalize.call(this);
            return t5.sigBytes -= 4, t5;
          } });
          t4.SHA224 = i4._createHelper(n4), t4.HmacSHA224 = i4._createHmacHelper(n4);
        }(), function(t4) {
          var e4 = a3, r4 = e4.lib, i4 = r4.Base, n4 = r4.WordArray, o4 = e4.x64 = {};
          o4.Word = i4.extend({ init: function(t5, e5) {
            this.high = t5, this.low = e5;
          } }), o4.WordArray = i4.extend({ init: function(t5, e5) {
            t5 = this.words = t5 || [], this.sigBytes = null != e5 ? e5 : 8 * t5.length;
          }, toX32: function() {
            for (var t5 = this.words, e5 = t5.length, r5 = [], i5 = 0; i5 < e5; i5++) {
              var o5 = t5[i5];
              r5.push(o5.high), r5.push(o5.low);
            }
            return n4.create(r5, this.sigBytes);
          }, clone: function() {
            for (var t5 = i4.clone.call(this), e5 = t5.words = this.words.slice(0), r5 = e5.length, n5 = 0; n5 < r5; n5++)
              e5[n5] = e5[n5].clone();
            return t5;
          } });
        }(), function(t4) {
          var e4 = a3, r4 = e4.lib, i4 = r4.WordArray, n4 = r4.Hasher, o4 = e4.x64.Word, s4 = e4.algo, c3 = [], h3 = [], l3 = [];
          !function() {
            for (var t5 = 1, e5 = 0, r5 = 0; r5 < 24; r5++) {
              c3[t5 + 5 * e5] = (r5 + 1) * (r5 + 2) / 2 % 64;
              var i5 = (2 * t5 + 3 * e5) % 5;
              t5 = e5 % 5, e5 = i5;
            }
            for (t5 = 0; t5 < 5; t5++)
              for (e5 = 0; e5 < 5; e5++)
                h3[t5 + 5 * e5] = e5 + (2 * t5 + 3 * e5) % 5 * 5;
            for (var n5 = 1, s5 = 0; s5 < 24; s5++) {
              for (var a4 = 0, f4 = 0, u4 = 0; u4 < 7; u4++) {
                if (1 & n5) {
                  var d2 = (1 << u4) - 1;
                  d2 < 32 ? f4 ^= 1 << d2 : a4 ^= 1 << d2 - 32;
                }
                128 & n5 ? n5 = n5 << 1 ^ 113 : n5 <<= 1;
              }
              l3[s5] = o4.create(a4, f4);
            }
          }();
          var f3 = [];
          !function() {
            for (var t5 = 0; t5 < 25; t5++)
              f3[t5] = o4.create();
          }();
          var u3 = s4.SHA3 = n4.extend({ cfg: n4.cfg.extend({ outputLength: 512 }), _doReset: function() {
            for (var t5 = this._state = [], e5 = 0; e5 < 25; e5++)
              t5[e5] = new o4.init();
            this.blockSize = (1600 - 2 * this.cfg.outputLength) / 32;
          }, _doProcessBlock: function(t5, e5) {
            for (var r5 = this._state, i5 = this.blockSize / 2, n5 = 0; n5 < i5; n5++) {
              var o5 = t5[e5 + 2 * n5], s5 = t5[e5 + 2 * n5 + 1];
              o5 = 16711935 & (o5 << 8 | o5 >>> 24) | 4278255360 & (o5 << 24 | o5 >>> 8), s5 = 16711935 & (s5 << 8 | s5 >>> 24) | 4278255360 & (s5 << 24 | s5 >>> 8), (C2 = r5[n5]).high ^= s5, C2.low ^= o5;
            }
            for (var a4 = 0; a4 < 24; a4++) {
              for (var u4 = 0; u4 < 5; u4++) {
                for (var d2 = 0, p2 = 0, _2 = 0; _2 < 5; _2++)
                  d2 ^= (C2 = r5[u4 + 5 * _2]).high, p2 ^= C2.low;
                var y2 = f3[u4];
                y2.high = d2, y2.low = p2;
              }
              for (u4 = 0; u4 < 5; u4++) {
                var v2 = f3[(u4 + 4) % 5], g2 = f3[(u4 + 1) % 5], w2 = g2.high, B2 = g2.low;
                for (d2 = v2.high ^ (w2 << 1 | B2 >>> 31), p2 = v2.low ^ (B2 << 1 | w2 >>> 31), _2 = 0; _2 < 5; _2++)
                  (C2 = r5[u4 + 5 * _2]).high ^= d2, C2.low ^= p2;
              }
              for (var k2 = 1; k2 < 25; k2++) {
                var m2 = (C2 = r5[k2]).high, b2 = C2.low, x2 = c3[k2];
                x2 < 32 ? (d2 = m2 << x2 | b2 >>> 32 - x2, p2 = b2 << x2 | m2 >>> 32 - x2) : (d2 = b2 << x2 - 32 | m2 >>> 64 - x2, p2 = m2 << x2 - 32 | b2 >>> 64 - x2);
                var S2 = f3[h3[k2]];
                S2.high = d2, S2.low = p2;
              }
              var A2 = f3[0], H2 = r5[0];
              for (A2.high = H2.high, A2.low = H2.low, u4 = 0; u4 < 5; u4++)
                for (_2 = 0; _2 < 5; _2++) {
                  var C2 = r5[k2 = u4 + 5 * _2], z2 = f3[k2], E2 = f3[(u4 + 1) % 5 + 5 * _2], M2 = f3[(u4 + 2) % 5 + 5 * _2];
                  C2.high = z2.high ^ ~E2.high & M2.high, C2.low = z2.low ^ ~E2.low & M2.low;
                }
              C2 = r5[0];
              var R2 = l3[a4];
              C2.high ^= R2.high, C2.low ^= R2.low;
            }
          }, _doFinalize: function() {
            var e5 = this._data, r5 = e5.words, n5 = (this._nDataBytes, 8 * e5.sigBytes), o5 = 32 * this.blockSize;
            r5[n5 >>> 5] |= 1 << 24 - n5 % 32, r5[(t4.ceil((n5 + 1) / o5) * o5 >>> 5) - 1] |= 128, e5.sigBytes = 4 * r5.length, this._process();
            for (var s5 = this._state, a4 = this.cfg.outputLength / 8, c4 = a4 / 8, h4 = [], l4 = 0; l4 < c4; l4++) {
              var f4 = s5[l4], u4 = f4.high, d2 = f4.low;
              u4 = 16711935 & (u4 << 8 | u4 >>> 24) | 4278255360 & (u4 << 24 | u4 >>> 8), d2 = 16711935 & (d2 << 8 | d2 >>> 24) | 4278255360 & (d2 << 24 | d2 >>> 8), h4.push(d2), h4.push(u4);
            }
            return new i4.init(h4, a4);
          }, clone: function() {
            for (var t5 = n4.clone.call(this), e5 = t5._state = this._state.slice(0), r5 = 0; r5 < 25; r5++)
              e5[r5] = e5[r5].clone();
            return t5;
          } });
          e4.SHA3 = n4._createHelper(u3), e4.HmacSHA3 = n4._createHmacHelper(u3);
        }(Math), function() {
          var t4 = a3, e4 = t4.lib.Hasher, r4 = t4.x64, i4 = r4.Word, n4 = r4.WordArray, o4 = t4.algo;
          function s4() {
            return i4.create.apply(i4, arguments);
          }
          var c3 = [s4(1116352408, 3609767458), s4(1899447441, 602891725), s4(3049323471, 3964484399), s4(3921009573, 2173295548), s4(961987163, 4081628472), s4(1508970993, 3053834265), s4(2453635748, 2937671579), s4(2870763221, 3664609560), s4(3624381080, 2734883394), s4(310598401, 1164996542), s4(607225278, 1323610764), s4(1426881987, 3590304994), s4(1925078388, 4068182383), s4(2162078206, 991336113), s4(2614888103, 633803317), s4(3248222580, 3479774868), s4(3835390401, 2666613458), s4(4022224774, 944711139), s4(264347078, 2341262773), s4(604807628, 2007800933), s4(770255983, 1495990901), s4(1249150122, 1856431235), s4(1555081692, 3175218132), s4(1996064986, 2198950837), s4(2554220882, 3999719339), s4(2821834349, 766784016), s4(2952996808, 2566594879), s4(3210313671, 3203337956), s4(3336571891, 1034457026), s4(3584528711, 2466948901), s4(113926993, 3758326383), s4(338241895, 168717936), s4(666307205, 1188179964), s4(773529912, 1546045734), s4(1294757372, 1522805485), s4(1396182291, 2643833823), s4(1695183700, 2343527390), s4(1986661051, 1014477480), s4(2177026350, 1206759142), s4(2456956037, 344077627), s4(2730485921, 1290863460), s4(2820302411, 3158454273), s4(3259730800, 3505952657), s4(3345764771, 106217008), s4(3516065817, 3606008344), s4(3600352804, 1432725776), s4(4094571909, 1467031594), s4(275423344, 851169720), s4(430227734, 3100823752), s4(506948616, 1363258195), s4(659060556, 3750685593), s4(883997877, 3785050280), s4(958139571, 3318307427), s4(1322822218, 3812723403), s4(1537002063, 2003034995), s4(1747873779, 3602036899), s4(1955562222, 1575990012), s4(2024104815, 1125592928), s4(2227730452, 2716904306), s4(2361852424, 442776044), s4(2428436474, 593698344), s4(2756734187, 3733110249), s4(3204031479, 2999351573), s4(3329325298, 3815920427), s4(3391569614, 3928383900), s4(3515267271, 566280711), s4(3940187606, 3454069534), s4(4118630271, 4000239992), s4(116418474, 1914138554), s4(174292421, 2731055270), s4(289380356, 3203993006), s4(460393269, 320620315), s4(685471733, 587496836), s4(852142971, 1086792851), s4(1017036298, 365543100), s4(1126000580, 2618297676), s4(1288033470, 3409855158), s4(1501505948, 4234509866), s4(1607167915, 987167468), s4(1816402316, 1246189591)], h3 = [];
          !function() {
            for (var t5 = 0; t5 < 80; t5++)
              h3[t5] = s4();
          }();
          var l3 = o4.SHA512 = e4.extend({ _doReset: function() {
            this._hash = new n4.init([new i4.init(1779033703, 4089235720), new i4.init(3144134277, 2227873595), new i4.init(1013904242, 4271175723), new i4.init(2773480762, 1595750129), new i4.init(1359893119, 2917565137), new i4.init(2600822924, 725511199), new i4.init(528734635, 4215389547), new i4.init(1541459225, 327033209)]);
          }, _doProcessBlock: function(t5, e5) {
            for (var r5 = this._hash.words, i5 = r5[0], n5 = r5[1], o5 = r5[2], s5 = r5[3], a4 = r5[4], l4 = r5[5], f3 = r5[6], u3 = r5[7], d2 = i5.high, p2 = i5.low, _2 = n5.high, y2 = n5.low, v2 = o5.high, g2 = o5.low, w2 = s5.high, B2 = s5.low, k2 = a4.high, m2 = a4.low, b2 = l4.high, x2 = l4.low, S2 = f3.high, A2 = f3.low, H2 = u3.high, C2 = u3.low, z2 = d2, E2 = p2, M2 = _2, R2 = y2, D2 = v2, P2 = g2, F2 = w2, O2 = B2, L2 = k2, T2 = m2, I2 = b2, W2 = x2, j2 = S2, U2 = A2, K2 = H2, X2 = C2, N2 = 0; N2 < 80; N2++) {
              var q2, V2, Z2 = h3[N2];
              if (N2 < 16)
                V2 = Z2.high = 0 | t5[e5 + 2 * N2], q2 = Z2.low = 0 | t5[e5 + 2 * N2 + 1];
              else {
                var $2 = h3[N2 - 15], G2 = $2.high, J2 = $2.low, Q2 = (G2 >>> 1 | J2 << 31) ^ (G2 >>> 8 | J2 << 24) ^ G2 >>> 7, Y2 = (J2 >>> 1 | G2 << 31) ^ (J2 >>> 8 | G2 << 24) ^ (J2 >>> 7 | G2 << 25), tt2 = h3[N2 - 2], et2 = tt2.high, rt2 = tt2.low, it2 = (et2 >>> 19 | rt2 << 13) ^ (et2 << 3 | rt2 >>> 29) ^ et2 >>> 6, nt2 = (rt2 >>> 19 | et2 << 13) ^ (rt2 << 3 | et2 >>> 29) ^ (rt2 >>> 6 | et2 << 26), ot2 = h3[N2 - 7], st2 = ot2.high, at2 = ot2.low, ct2 = h3[N2 - 16], ht2 = ct2.high, lt2 = ct2.low;
                V2 = (V2 = (V2 = Q2 + st2 + ((q2 = Y2 + at2) >>> 0 < Y2 >>> 0 ? 1 : 0)) + it2 + ((q2 += nt2) >>> 0 < nt2 >>> 0 ? 1 : 0)) + ht2 + ((q2 += lt2) >>> 0 < lt2 >>> 0 ? 1 : 0), Z2.high = V2, Z2.low = q2;
              }
              var ft2, ut2 = L2 & I2 ^ ~L2 & j2, dt2 = T2 & W2 ^ ~T2 & U2, pt2 = z2 & M2 ^ z2 & D2 ^ M2 & D2, _t3 = E2 & R2 ^ E2 & P2 ^ R2 & P2, yt2 = (z2 >>> 28 | E2 << 4) ^ (z2 << 30 | E2 >>> 2) ^ (z2 << 25 | E2 >>> 7), vt2 = (E2 >>> 28 | z2 << 4) ^ (E2 << 30 | z2 >>> 2) ^ (E2 << 25 | z2 >>> 7), gt2 = (L2 >>> 14 | T2 << 18) ^ (L2 >>> 18 | T2 << 14) ^ (L2 << 23 | T2 >>> 9), wt2 = (T2 >>> 14 | L2 << 18) ^ (T2 >>> 18 | L2 << 14) ^ (T2 << 23 | L2 >>> 9), Bt2 = c3[N2], kt2 = Bt2.high, mt2 = Bt2.low, bt2 = K2 + gt2 + ((ft2 = X2 + wt2) >>> 0 < X2 >>> 0 ? 1 : 0), xt2 = vt2 + _t3;
              K2 = j2, X2 = U2, j2 = I2, U2 = W2, I2 = L2, W2 = T2, L2 = F2 + (bt2 = (bt2 = (bt2 = bt2 + ut2 + ((ft2 += dt2) >>> 0 < dt2 >>> 0 ? 1 : 0)) + kt2 + ((ft2 += mt2) >>> 0 < mt2 >>> 0 ? 1 : 0)) + V2 + ((ft2 += q2) >>> 0 < q2 >>> 0 ? 1 : 0)) + ((T2 = O2 + ft2 | 0) >>> 0 < O2 >>> 0 ? 1 : 0) | 0, F2 = D2, O2 = P2, D2 = M2, P2 = R2, M2 = z2, R2 = E2, z2 = bt2 + (yt2 + pt2 + (xt2 >>> 0 < vt2 >>> 0 ? 1 : 0)) + ((E2 = ft2 + xt2 | 0) >>> 0 < ft2 >>> 0 ? 1 : 0) | 0;
            }
            p2 = i5.low = p2 + E2, i5.high = d2 + z2 + (p2 >>> 0 < E2 >>> 0 ? 1 : 0), y2 = n5.low = y2 + R2, n5.high = _2 + M2 + (y2 >>> 0 < R2 >>> 0 ? 1 : 0), g2 = o5.low = g2 + P2, o5.high = v2 + D2 + (g2 >>> 0 < P2 >>> 0 ? 1 : 0), B2 = s5.low = B2 + O2, s5.high = w2 + F2 + (B2 >>> 0 < O2 >>> 0 ? 1 : 0), m2 = a4.low = m2 + T2, a4.high = k2 + L2 + (m2 >>> 0 < T2 >>> 0 ? 1 : 0), x2 = l4.low = x2 + W2, l4.high = b2 + I2 + (x2 >>> 0 < W2 >>> 0 ? 1 : 0), A2 = f3.low = A2 + U2, f3.high = S2 + j2 + (A2 >>> 0 < U2 >>> 0 ? 1 : 0), C2 = u3.low = C2 + X2, u3.high = H2 + K2 + (C2 >>> 0 < X2 >>> 0 ? 1 : 0);
          }, _doFinalize: function() {
            var t5 = this._data, e5 = t5.words, r5 = 8 * this._nDataBytes, i5 = 8 * t5.sigBytes;
            return e5[i5 >>> 5] |= 128 << 24 - i5 % 32, e5[30 + (i5 + 128 >>> 10 << 5)] = Math.floor(r5 / 4294967296), e5[31 + (i5 + 128 >>> 10 << 5)] = r5, t5.sigBytes = 4 * e5.length, this._process(), this._hash.toX32();
          }, clone: function() {
            var t5 = e4.clone.call(this);
            return t5._hash = this._hash.clone(), t5;
          }, blockSize: 32 });
          t4.SHA512 = e4._createHelper(l3), t4.HmacSHA512 = e4._createHmacHelper(l3);
        }(), function() {
          var t4 = a3, e4 = t4.x64, r4 = e4.Word, i4 = e4.WordArray, n4 = t4.algo, o4 = n4.SHA512, s4 = n4.SHA384 = o4.extend({ _doReset: function() {
            this._hash = new i4.init([new r4.init(3418070365, 3238371032), new r4.init(1654270250, 914150663), new r4.init(2438529370, 812702999), new r4.init(355462360, 4144912697), new r4.init(1731405415, 4290775857), new r4.init(2394180231, 1750603025), new r4.init(3675008525, 1694076839), new r4.init(1203062813, 3204075428)]);
          }, _doFinalize: function() {
            var t5 = o4._doFinalize.call(this);
            return t5.sigBytes -= 16, t5;
          } });
          t4.SHA384 = o4._createHelper(s4), t4.HmacSHA384 = o4._createHmacHelper(s4);
        }(), a3.lib.Cipher || function(t4) {
          var e4 = a3, r4 = e4.lib, i4 = r4.Base, n4 = r4.WordArray, o4 = r4.BufferedBlockAlgorithm, s4 = e4.enc, c3 = (s4.Utf8, s4.Base64), h3 = e4.algo.EvpKDF, l3 = r4.Cipher = o4.extend({ cfg: i4.extend(), createEncryptor: function(t5, e5) {
            return this.create(this._ENC_XFORM_MODE, t5, e5);
          }, createDecryptor: function(t5, e5) {
            return this.create(this._DEC_XFORM_MODE, t5, e5);
          }, init: function(t5, e5, r5) {
            this.cfg = this.cfg.extend(r5), this._xformMode = t5, this._key = e5, this.reset();
          }, reset: function() {
            o4.reset.call(this), this._doReset();
          }, process: function(t5) {
            return this._append(t5), this._process();
          }, finalize: function(t5) {
            return t5 && this._append(t5), this._doFinalize();
          }, keySize: 4, ivSize: 4, _ENC_XFORM_MODE: 1, _DEC_XFORM_MODE: 2, _createHelper: /* @__PURE__ */ function() {
            function t5(t6) {
              return "string" == typeof t6 ? w2 : v2;
            }
            return function(e5) {
              return { encrypt: function(r5, i5, n5) {
                return t5(i5).encrypt(e5, r5, i5, n5);
              }, decrypt: function(r5, i5, n5) {
                return t5(i5).decrypt(e5, r5, i5, n5);
              } };
            };
          }() }), f3 = (r4.StreamCipher = l3.extend({ _doFinalize: function() {
            return this._process(true);
          }, blockSize: 1 }), e4.mode = {}), u3 = r4.BlockCipherMode = i4.extend({ createEncryptor: function(t5, e5) {
            return this.Encryptor.create(t5, e5);
          }, createDecryptor: function(t5, e5) {
            return this.Decryptor.create(t5, e5);
          }, init: function(t5, e5) {
            this._cipher = t5, this._iv = e5;
          } }), d2 = f3.CBC = function() {
            var t5 = u3.extend();
            function e5(t6, e6, r5) {
              var i5, n5 = this._iv;
              n5 ? (i5 = n5, this._iv = void 0) : i5 = this._prevBlock;
              for (var o5 = 0; o5 < r5; o5++)
                t6[e6 + o5] ^= i5[o5];
            }
            return t5.Encryptor = t5.extend({ processBlock: function(t6, r5) {
              var i5 = this._cipher, n5 = i5.blockSize;
              e5.call(this, t6, r5, n5), i5.encryptBlock(t6, r5), this._prevBlock = t6.slice(r5, r5 + n5);
            } }), t5.Decryptor = t5.extend({ processBlock: function(t6, r5) {
              var i5 = this._cipher, n5 = i5.blockSize, o5 = t6.slice(r5, r5 + n5);
              i5.decryptBlock(t6, r5), e5.call(this, t6, r5, n5), this._prevBlock = o5;
            } }), t5;
          }(), p2 = (e4.pad = {}).Pkcs7 = { pad: function(t5, e5) {
            for (var r5 = 4 * e5, i5 = r5 - t5.sigBytes % r5, o5 = i5 << 24 | i5 << 16 | i5 << 8 | i5, s5 = [], a4 = 0; a4 < i5; a4 += 4)
              s5.push(o5);
            var c4 = n4.create(s5, i5);
            t5.concat(c4);
          }, unpad: function(t5) {
            var e5 = 255 & t5.words[t5.sigBytes - 1 >>> 2];
            t5.sigBytes -= e5;
          } }, _2 = (r4.BlockCipher = l3.extend({ cfg: l3.cfg.extend({ mode: d2, padding: p2 }), reset: function() {
            var t5;
            l3.reset.call(this);
            var e5 = this.cfg, r5 = e5.iv, i5 = e5.mode;
            this._xformMode == this._ENC_XFORM_MODE ? t5 = i5.createEncryptor : (t5 = i5.createDecryptor, this._minBufferSize = 1), this._mode && this._mode.__creator == t5 ? this._mode.init(this, r5 && r5.words) : (this._mode = t5.call(i5, this, r5 && r5.words), this._mode.__creator = t5);
          }, _doProcessBlock: function(t5, e5) {
            this._mode.processBlock(t5, e5);
          }, _doFinalize: function() {
            var t5, e5 = this.cfg.padding;
            return this._xformMode == this._ENC_XFORM_MODE ? (e5.pad(this._data, this.blockSize), t5 = this._process(true)) : (t5 = this._process(true), e5.unpad(t5)), t5;
          }, blockSize: 4 }), r4.CipherParams = i4.extend({ init: function(t5) {
            this.mixIn(t5);
          }, toString: function(t5) {
            return (t5 || this.formatter).stringify(this);
          } })), y2 = (e4.format = {}).OpenSSL = { stringify: function(t5) {
            var e5 = t5.ciphertext, r5 = t5.salt;
            return (r5 ? n4.create([1398893684, 1701076831]).concat(r5).concat(e5) : e5).toString(c3);
          }, parse: function(t5) {
            var e5, r5 = c3.parse(t5), i5 = r5.words;
            return 1398893684 == i5[0] && 1701076831 == i5[1] && (e5 = n4.create(i5.slice(2, 4)), i5.splice(0, 4), r5.sigBytes -= 16), _2.create({ ciphertext: r5, salt: e5 });
          } }, v2 = r4.SerializableCipher = i4.extend({ cfg: i4.extend({ format: y2 }), encrypt: function(t5, e5, r5, i5) {
            i5 = this.cfg.extend(i5);
            var n5 = t5.createEncryptor(r5, i5), o5 = n5.finalize(e5), s5 = n5.cfg;
            return _2.create({ ciphertext: o5, key: r5, iv: s5.iv, algorithm: t5, mode: s5.mode, padding: s5.padding, blockSize: t5.blockSize, formatter: i5.format });
          }, decrypt: function(t5, e5, r5, i5) {
            return i5 = this.cfg.extend(i5), e5 = this._parse(e5, i5.format), t5.createDecryptor(r5, i5).finalize(e5.ciphertext);
          }, _parse: function(t5, e5) {
            return "string" == typeof t5 ? e5.parse(t5, this) : t5;
          } }), g2 = (e4.kdf = {}).OpenSSL = { execute: function(t5, e5, r5, i5) {
            i5 || (i5 = n4.random(8));
            var o5 = h3.create({ keySize: e5 + r5 }).compute(t5, i5), s5 = n4.create(o5.words.slice(e5), 4 * r5);
            return o5.sigBytes = 4 * e5, _2.create({ key: o5, iv: s5, salt: i5 });
          } }, w2 = r4.PasswordBasedCipher = v2.extend({ cfg: v2.cfg.extend({ kdf: g2 }), encrypt: function(t5, e5, r5, i5) {
            var n5 = (i5 = this.cfg.extend(i5)).kdf.execute(r5, t5.keySize, t5.ivSize);
            i5.iv = n5.iv;
            var o5 = v2.encrypt.call(this, t5, e5, n5.key, i5);
            return o5.mixIn(n5), o5;
          }, decrypt: function(t5, e5, r5, i5) {
            i5 = this.cfg.extend(i5), e5 = this._parse(e5, i5.format);
            var n5 = i5.kdf.execute(r5, t5.keySize, t5.ivSize, e5.salt);
            return i5.iv = n5.iv, v2.decrypt.call(this, t5, e5, n5.key, i5);
          } });
        }(), a3.mode.CFB = function() {
          var t4 = a3.lib.BlockCipherMode.extend();
          function e4(t5, e5, r4, i4) {
            var n4, o4 = this._iv;
            o4 ? (n4 = o4.slice(0), this._iv = void 0) : n4 = this._prevBlock, i4.encryptBlock(n4, 0);
            for (var s4 = 0; s4 < r4; s4++)
              t5[e5 + s4] ^= n4[s4];
          }
          return t4.Encryptor = t4.extend({ processBlock: function(t5, r4) {
            var i4 = this._cipher, n4 = i4.blockSize;
            e4.call(this, t5, r4, n4, i4), this._prevBlock = t5.slice(r4, r4 + n4);
          } }), t4.Decryptor = t4.extend({ processBlock: function(t5, r4) {
            var i4 = this._cipher, n4 = i4.blockSize, o4 = t5.slice(r4, r4 + n4);
            e4.call(this, t5, r4, n4, i4), this._prevBlock = o4;
          } }), t4;
        }(), a3.mode.ECB = ((n3 = a3.lib.BlockCipherMode.extend()).Encryptor = n3.extend({ processBlock: function(t4, e4) {
          this._cipher.encryptBlock(t4, e4);
        } }), n3.Decryptor = n3.extend({ processBlock: function(t4, e4) {
          this._cipher.decryptBlock(t4, e4);
        } }), n3), a3.pad.AnsiX923 = { pad: function(t4, e4) {
          var r4 = t4.sigBytes, i4 = 4 * e4, n4 = i4 - r4 % i4, o4 = r4 + n4 - 1;
          t4.clamp(), t4.words[o4 >>> 2] |= n4 << 24 - o4 % 4 * 8, t4.sigBytes += n4;
        }, unpad: function(t4) {
          var e4 = 255 & t4.words[t4.sigBytes - 1 >>> 2];
          t4.sigBytes -= e4;
        } }, a3.pad.Iso10126 = { pad: function(t4, e4) {
          var r4 = 4 * e4, i4 = r4 - t4.sigBytes % r4;
          t4.concat(a3.lib.WordArray.random(i4 - 1)).concat(a3.lib.WordArray.create([i4 << 24], 1));
        }, unpad: function(t4) {
          var e4 = 255 & t4.words[t4.sigBytes - 1 >>> 2];
          t4.sigBytes -= e4;
        } }, a3.pad.Iso97971 = { pad: function(t4, e4) {
          t4.concat(a3.lib.WordArray.create([2147483648], 1)), a3.pad.ZeroPadding.pad(t4, e4);
        }, unpad: function(t4) {
          a3.pad.ZeroPadding.unpad(t4), t4.sigBytes--;
        } }, a3.mode.OFB = (r3 = a3.lib.BlockCipherMode.extend(), i3 = r3.Encryptor = r3.extend({ processBlock: function(t4, e4) {
          var r4 = this._cipher, i4 = r4.blockSize, n4 = this._iv, o4 = this._keystream;
          n4 && (o4 = this._keystream = n4.slice(0), this._iv = void 0), r4.encryptBlock(o4, 0);
          for (var s4 = 0; s4 < i4; s4++)
            t4[e4 + s4] ^= o4[s4];
        } }), r3.Decryptor = i3, r3), a3.pad.NoPadding = { pad: function() {
        }, unpad: function() {
        } }, function(t4) {
          var e4 = a3, r4 = e4.lib.CipherParams, i4 = e4.enc.Hex;
          e4.format.Hex = { stringify: function(t5) {
            return t5.ciphertext.toString(i4);
          }, parse: function(t5) {
            var e5 = i4.parse(t5);
            return r4.create({ ciphertext: e5 });
          } };
        }(), function() {
          var t4 = a3, e4 = t4.lib.BlockCipher, r4 = t4.algo, i4 = [], n4 = [], o4 = [], s4 = [], c3 = [], h3 = [], l3 = [], f3 = [], u3 = [], d2 = [];
          !function() {
            for (var t5 = [], e5 = 0; e5 < 256; e5++)
              t5[e5] = e5 < 128 ? e5 << 1 : e5 << 1 ^ 283;
            var r5 = 0, a4 = 0;
            for (e5 = 0; e5 < 256; e5++) {
              var p3 = a4 ^ a4 << 1 ^ a4 << 2 ^ a4 << 3 ^ a4 << 4;
              p3 = p3 >>> 8 ^ 255 & p3 ^ 99, i4[r5] = p3, n4[p3] = r5;
              var _3 = t5[r5], y2 = t5[_3], v2 = t5[y2], g2 = 257 * t5[p3] ^ 16843008 * p3;
              o4[r5] = g2 << 24 | g2 >>> 8, s4[r5] = g2 << 16 | g2 >>> 16, c3[r5] = g2 << 8 | g2 >>> 24, h3[r5] = g2, g2 = 16843009 * v2 ^ 65537 * y2 ^ 257 * _3 ^ 16843008 * r5, l3[p3] = g2 << 24 | g2 >>> 8, f3[p3] = g2 << 16 | g2 >>> 16, u3[p3] = g2 << 8 | g2 >>> 24, d2[p3] = g2, r5 ? (r5 = _3 ^ t5[t5[t5[v2 ^ _3]]], a4 ^= t5[t5[a4]]) : r5 = a4 = 1;
            }
          }();
          var p2 = [0, 1, 2, 4, 8, 16, 32, 64, 128, 27, 54], _2 = r4.AES = e4.extend({ _doReset: function() {
            if (!this._nRounds || this._keyPriorReset !== this._key) {
              for (var t5 = this._keyPriorReset = this._key, e5 = t5.words, r5 = t5.sigBytes / 4, n5 = 4 * ((this._nRounds = r5 + 6) + 1), o5 = this._keySchedule = [], s5 = 0; s5 < n5; s5++)
                s5 < r5 ? o5[s5] = e5[s5] : (h4 = o5[s5 - 1], s5 % r5 ? r5 > 6 && s5 % r5 == 4 && (h4 = i4[h4 >>> 24] << 24 | i4[h4 >>> 16 & 255] << 16 | i4[h4 >>> 8 & 255] << 8 | i4[255 & h4]) : (h4 = i4[(h4 = h4 << 8 | h4 >>> 24) >>> 24] << 24 | i4[h4 >>> 16 & 255] << 16 | i4[h4 >>> 8 & 255] << 8 | i4[255 & h4], h4 ^= p2[s5 / r5 | 0] << 24), o5[s5] = o5[s5 - r5] ^ h4);
              for (var a4 = this._invKeySchedule = [], c4 = 0; c4 < n5; c4++) {
                if (s5 = n5 - c4, c4 % 4)
                  var h4 = o5[s5];
                else
                  h4 = o5[s5 - 4];
                a4[c4] = c4 < 4 || s5 <= 4 ? h4 : l3[i4[h4 >>> 24]] ^ f3[i4[h4 >>> 16 & 255]] ^ u3[i4[h4 >>> 8 & 255]] ^ d2[i4[255 & h4]];
              }
            }
          }, encryptBlock: function(t5, e5) {
            this._doCryptBlock(t5, e5, this._keySchedule, o4, s4, c3, h3, i4);
          }, decryptBlock: function(t5, e5) {
            var r5 = t5[e5 + 1];
            t5[e5 + 1] = t5[e5 + 3], t5[e5 + 3] = r5, this._doCryptBlock(t5, e5, this._invKeySchedule, l3, f3, u3, d2, n4), r5 = t5[e5 + 1], t5[e5 + 1] = t5[e5 + 3], t5[e5 + 3] = r5;
          }, _doCryptBlock: function(t5, e5, r5, i5, n5, o5, s5, a4) {
            for (var c4 = this._nRounds, h4 = t5[e5] ^ r5[0], l4 = t5[e5 + 1] ^ r5[1], f4 = t5[e5 + 2] ^ r5[2], u4 = t5[e5 + 3] ^ r5[3], d3 = 4, p3 = 1; p3 < c4; p3++) {
              var _3 = i5[h4 >>> 24] ^ n5[l4 >>> 16 & 255] ^ o5[f4 >>> 8 & 255] ^ s5[255 & u4] ^ r5[d3++], y2 = i5[l4 >>> 24] ^ n5[f4 >>> 16 & 255] ^ o5[u4 >>> 8 & 255] ^ s5[255 & h4] ^ r5[d3++], v2 = i5[f4 >>> 24] ^ n5[u4 >>> 16 & 255] ^ o5[h4 >>> 8 & 255] ^ s5[255 & l4] ^ r5[d3++], g2 = i5[u4 >>> 24] ^ n5[h4 >>> 16 & 255] ^ o5[l4 >>> 8 & 255] ^ s5[255 & f4] ^ r5[d3++];
              h4 = _3, l4 = y2, f4 = v2, u4 = g2;
            }
            _3 = (a4[h4 >>> 24] << 24 | a4[l4 >>> 16 & 255] << 16 | a4[f4 >>> 8 & 255] << 8 | a4[255 & u4]) ^ r5[d3++], y2 = (a4[l4 >>> 24] << 24 | a4[f4 >>> 16 & 255] << 16 | a4[u4 >>> 8 & 255] << 8 | a4[255 & h4]) ^ r5[d3++], v2 = (a4[f4 >>> 24] << 24 | a4[u4 >>> 16 & 255] << 16 | a4[h4 >>> 8 & 255] << 8 | a4[255 & l4]) ^ r5[d3++], g2 = (a4[u4 >>> 24] << 24 | a4[h4 >>> 16 & 255] << 16 | a4[l4 >>> 8 & 255] << 8 | a4[255 & f4]) ^ r5[d3++], t5[e5] = _3, t5[e5 + 1] = y2, t5[e5 + 2] = v2, t5[e5 + 3] = g2;
          }, keySize: 8 });
          t4.AES = e4._createHelper(_2);
        }(), function() {
          var t4 = a3, e4 = t4.lib, r4 = e4.WordArray, i4 = e4.BlockCipher, n4 = t4.algo, o4 = [57, 49, 41, 33, 25, 17, 9, 1, 58, 50, 42, 34, 26, 18, 10, 2, 59, 51, 43, 35, 27, 19, 11, 3, 60, 52, 44, 36, 63, 55, 47, 39, 31, 23, 15, 7, 62, 54, 46, 38, 30, 22, 14, 6, 61, 53, 45, 37, 29, 21, 13, 5, 28, 20, 12, 4], s4 = [14, 17, 11, 24, 1, 5, 3, 28, 15, 6, 21, 10, 23, 19, 12, 4, 26, 8, 16, 7, 27, 20, 13, 2, 41, 52, 31, 37, 47, 55, 30, 40, 51, 45, 33, 48, 44, 49, 39, 56, 34, 53, 46, 42, 50, 36, 29, 32], c3 = [1, 2, 4, 6, 8, 10, 12, 14, 15, 17, 19, 21, 23, 25, 27, 28], h3 = [{ 0: 8421888, 268435456: 32768, 536870912: 8421378, 805306368: 2, 1073741824: 512, 1342177280: 8421890, 1610612736: 8389122, 1879048192: 8388608, 2147483648: 514, 2415919104: 8389120, 2684354560: 33280, 2952790016: 8421376, 3221225472: 32770, 3489660928: 8388610, 3758096384: 0, 4026531840: 33282, 134217728: 0, 402653184: 8421890, 671088640: 33282, 939524096: 32768, 1207959552: 8421888, 1476395008: 512, 1744830464: 8421378, 2013265920: 2, 2281701376: 8389120, 2550136832: 33280, 2818572288: 8421376, 3087007744: 8389122, 3355443200: 8388610, 3623878656: 32770, 3892314112: 514, 4160749568: 8388608, 1: 32768, 268435457: 2, 536870913: 8421888, 805306369: 8388608, 1073741825: 8421378, 1342177281: 33280, 1610612737: 512, 1879048193: 8389122, 2147483649: 8421890, 2415919105: 8421376, 2684354561: 8388610, 2952790017: 33282, 3221225473: 514, 3489660929: 8389120, 3758096385: 32770, 4026531841: 0, 134217729: 8421890, 402653185: 8421376, 671088641: 8388608, 939524097: 512, 1207959553: 32768, 1476395009: 8388610, 1744830465: 2, 2013265921: 33282, 2281701377: 32770, 2550136833: 8389122, 2818572289: 514, 3087007745: 8421888, 3355443201: 8389120, 3623878657: 0, 3892314113: 33280, 4160749569: 8421378 }, { 0: 1074282512, 16777216: 16384, 33554432: 524288, 50331648: 1074266128, 67108864: 1073741840, 83886080: 1074282496, 100663296: 1073758208, 117440512: 16, 134217728: 540672, 150994944: 1073758224, 167772160: 1073741824, 184549376: 540688, 201326592: 524304, 218103808: 0, 234881024: 16400, 251658240: 1074266112, 8388608: 1073758208, 25165824: 540688, 41943040: 16, 58720256: 1073758224, 75497472: 1074282512, 92274688: 1073741824, 109051904: 524288, 125829120: 1074266128, 142606336: 524304, 159383552: 0, 176160768: 16384, 192937984: 1074266112, 209715200: 1073741840, 226492416: 540672, 243269632: 1074282496, 260046848: 16400, 268435456: 0, 285212672: 1074266128, 301989888: 1073758224, 318767104: 1074282496, 335544320: 1074266112, 352321536: 16, 369098752: 540688, 385875968: 16384, 402653184: 16400, 419430400: 524288, 436207616: 524304, 452984832: 1073741840, 469762048: 540672, 486539264: 1073758208, 503316480: 1073741824, 520093696: 1074282512, 276824064: 540688, 293601280: 524288, 310378496: 1074266112, 327155712: 16384, 343932928: 1073758208, 360710144: 1074282512, 377487360: 16, 394264576: 1073741824, 411041792: 1074282496, 427819008: 1073741840, 444596224: 1073758224, 461373440: 524304, 478150656: 0, 494927872: 16400, 511705088: 1074266128, 528482304: 540672 }, { 0: 260, 1048576: 0, 2097152: 67109120, 3145728: 65796, 4194304: 65540, 5242880: 67108868, 6291456: 67174660, 7340032: 67174400, 8388608: 67108864, 9437184: 67174656, 10485760: 65792, 11534336: 67174404, 12582912: 67109124, 13631488: 65536, 14680064: 4, 15728640: 256, 524288: 67174656, 1572864: 67174404, 2621440: 0, 3670016: 67109120, 4718592: 67108868, 5767168: 65536, 6815744: 65540, 7864320: 260, 8912896: 4, 9961472: 256, 11010048: 67174400, 12058624: 65796, 13107200: 65792, 14155776: 67109124, 15204352: 67174660, 16252928: 67108864, 16777216: 67174656, 17825792: 65540, 18874368: 65536, 19922944: 67109120, 20971520: 256, 22020096: 67174660, 23068672: 67108868, 24117248: 0, 25165824: 67109124, 26214400: 67108864, 27262976: 4, 28311552: 65792, 29360128: 67174400, 30408704: 260, 31457280: 65796, 32505856: 67174404, 17301504: 67108864, 18350080: 260, 19398656: 67174656, 20447232: 0, 21495808: 65540, 22544384: 67109120, 23592960: 256, 24641536: 67174404, 25690112: 65536, 26738688: 67174660, 27787264: 65796, 28835840: 67108868, 29884416: 67109124, 30932992: 67174400, 31981568: 4, 33030144: 65792 }, { 0: 2151682048, 65536: 2147487808, 131072: 4198464, 196608: 2151677952, 262144: 0, 327680: 4198400, 393216: 2147483712, 458752: 4194368, 524288: 2147483648, 589824: 4194304, 655360: 64, 720896: 2147487744, 786432: 2151678016, 851968: 4160, 917504: 4096, 983040: 2151682112, 32768: 2147487808, 98304: 64, 163840: 2151678016, 229376: 2147487744, 294912: 4198400, 360448: 2151682112, 425984: 0, 491520: 2151677952, 557056: 4096, 622592: 2151682048, 688128: 4194304, 753664: 4160, 819200: 2147483648, 884736: 4194368, 950272: 4198464, 1015808: 2147483712, 1048576: 4194368, 1114112: 4198400, 1179648: 2147483712, 1245184: 0, 1310720: 4160, 1376256: 2151678016, 1441792: 2151682048, 1507328: 2147487808, 1572864: 2151682112, 1638400: 2147483648, 1703936: 2151677952, 1769472: 4198464, 1835008: 2147487744, 1900544: 4194304, 1966080: 64, 2031616: 4096, 1081344: 2151677952, 1146880: 2151682112, 1212416: 0, 1277952: 4198400, 1343488: 4194368, 1409024: 2147483648, 1474560: 2147487808, 1540096: 64, 1605632: 2147483712, 1671168: 4096, 1736704: 2147487744, 1802240: 2151678016, 1867776: 4160, 1933312: 2151682048, 1998848: 4194304, 2064384: 4198464 }, { 0: 128, 4096: 17039360, 8192: 262144, 12288: 536870912, 16384: 537133184, 20480: 16777344, 24576: 553648256, 28672: 262272, 32768: 16777216, 36864: 537133056, 40960: 536871040, 45056: 553910400, 49152: 553910272, 53248: 0, 57344: 17039488, 61440: 553648128, 2048: 17039488, 6144: 553648256, 10240: 128, 14336: 17039360, 18432: 262144, 22528: 537133184, 26624: 553910272, 30720: 536870912, 34816: 537133056, 38912: 0, 43008: 553910400, 47104: 16777344, 51200: 536871040, 55296: 553648128, 59392: 16777216, 63488: 262272, 65536: 262144, 69632: 128, 73728: 536870912, 77824: 553648256, 81920: 16777344, 86016: 553910272, 90112: 537133184, 94208: 16777216, 98304: 553910400, 102400: 553648128, 106496: 17039360, 110592: 537133056, 114688: 262272, 118784: 536871040, 122880: 0, 126976: 17039488, 67584: 553648256, 71680: 16777216, 75776: 17039360, 79872: 537133184, 83968: 536870912, 88064: 17039488, 92160: 128, 96256: 553910272, 100352: 262272, 104448: 553910400, 108544: 0, 112640: 553648128, 116736: 16777344, 120832: 262144, 124928: 537133056, 129024: 536871040 }, { 0: 268435464, 256: 8192, 512: 270532608, 768: 270540808, 1024: 268443648, 1280: 2097152, 1536: 2097160, 1792: 268435456, 2048: 0, 2304: 268443656, 2560: 2105344, 2816: 8, 3072: 270532616, 3328: 2105352, 3584: 8200, 3840: 270540800, 128: 270532608, 384: 270540808, 640: 8, 896: 2097152, 1152: 2105352, 1408: 268435464, 1664: 268443648, 1920: 8200, 2176: 2097160, 2432: 8192, 2688: 268443656, 2944: 270532616, 3200: 0, 3456: 270540800, 3712: 2105344, 3968: 268435456, 4096: 268443648, 4352: 270532616, 4608: 270540808, 4864: 8200, 5120: 2097152, 5376: 268435456, 5632: 268435464, 5888: 2105344, 6144: 2105352, 6400: 0, 6656: 8, 6912: 270532608, 7168: 8192, 7424: 268443656, 7680: 270540800, 7936: 2097160, 4224: 8, 4480: 2105344, 4736: 2097152, 4992: 268435464, 5248: 268443648, 5504: 8200, 5760: 270540808, 6016: 270532608, 6272: 270540800, 6528: 270532616, 6784: 8192, 7040: 2105352, 7296: 2097160, 7552: 0, 7808: 268435456, 8064: 268443656 }, { 0: 1048576, 16: 33555457, 32: 1024, 48: 1049601, 64: 34604033, 80: 0, 96: 1, 112: 34603009, 128: 33555456, 144: 1048577, 160: 33554433, 176: 34604032, 192: 34603008, 208: 1025, 224: 1049600, 240: 33554432, 8: 34603009, 24: 0, 40: 33555457, 56: 34604032, 72: 1048576, 88: 33554433, 104: 33554432, 120: 1025, 136: 1049601, 152: 33555456, 168: 34603008, 184: 1048577, 200: 1024, 216: 34604033, 232: 1, 248: 1049600, 256: 33554432, 272: 1048576, 288: 33555457, 304: 34603009, 320: 1048577, 336: 33555456, 352: 34604032, 368: 1049601, 384: 1025, 400: 34604033, 416: 1049600, 432: 1, 448: 0, 464: 34603008, 480: 33554433, 496: 1024, 264: 1049600, 280: 33555457, 296: 34603009, 312: 1, 328: 33554432, 344: 1048576, 360: 1025, 376: 34604032, 392: 33554433, 408: 34603008, 424: 0, 440: 34604033, 456: 1049601, 472: 1024, 488: 33555456, 504: 1048577 }, { 0: 134219808, 1: 131072, 2: 134217728, 3: 32, 4: 131104, 5: 134350880, 6: 134350848, 7: 2048, 8: 134348800, 9: 134219776, 10: 133120, 11: 134348832, 12: 2080, 13: 0, 14: 134217760, 15: 133152, 2147483648: 2048, 2147483649: 134350880, 2147483650: 134219808, 2147483651: 134217728, 2147483652: 134348800, 2147483653: 133120, 2147483654: 133152, 2147483655: 32, 2147483656: 134217760, 2147483657: 2080, 2147483658: 131104, 2147483659: 134350848, 2147483660: 0, 2147483661: 134348832, 2147483662: 134219776, 2147483663: 131072, 16: 133152, 17: 134350848, 18: 32, 19: 2048, 20: 134219776, 21: 134217760, 22: 134348832, 23: 131072, 24: 0, 25: 131104, 26: 134348800, 27: 134219808, 28: 134350880, 29: 133120, 30: 2080, 31: 134217728, 2147483664: 131072, 2147483665: 2048, 2147483666: 134348832, 2147483667: 133152, 2147483668: 32, 2147483669: 134348800, 2147483670: 134217728, 2147483671: 134219808, 2147483672: 134350880, 2147483673: 134217760, 2147483674: 134219776, 2147483675: 0, 2147483676: 133120, 2147483677: 2080, 2147483678: 131104, 2147483679: 134350848 }], l3 = [4160749569, 528482304, 33030144, 2064384, 129024, 8064, 504, 2147483679], f3 = n4.DES = i4.extend({ _doReset: function() {
            for (var t5 = this._key.words, e5 = [], r5 = 0; r5 < 56; r5++) {
              var i5 = o4[r5] - 1;
              e5[r5] = t5[i5 >>> 5] >>> 31 - i5 % 32 & 1;
            }
            for (var n5 = this._subKeys = [], a4 = 0; a4 < 16; a4++) {
              var h4 = n5[a4] = [], l4 = c3[a4];
              for (r5 = 0; r5 < 24; r5++)
                h4[r5 / 6 | 0] |= e5[(s4[r5] - 1 + l4) % 28] << 31 - r5 % 6, h4[4 + (r5 / 6 | 0)] |= e5[28 + (s4[r5 + 24] - 1 + l4) % 28] << 31 - r5 % 6;
              for (h4[0] = h4[0] << 1 | h4[0] >>> 31, r5 = 1; r5 < 7; r5++)
                h4[r5] = h4[r5] >>> 4 * (r5 - 1) + 3;
              h4[7] = h4[7] << 5 | h4[7] >>> 27;
            }
            var f4 = this._invSubKeys = [];
            for (r5 = 0; r5 < 16; r5++)
              f4[r5] = n5[15 - r5];
          }, encryptBlock: function(t5, e5) {
            this._doCryptBlock(t5, e5, this._subKeys);
          }, decryptBlock: function(t5, e5) {
            this._doCryptBlock(t5, e5, this._invSubKeys);
          }, _doCryptBlock: function(t5, e5, r5) {
            this._lBlock = t5[e5], this._rBlock = t5[e5 + 1], u3.call(this, 4, 252645135), u3.call(this, 16, 65535), d2.call(this, 2, 858993459), d2.call(this, 8, 16711935), u3.call(this, 1, 1431655765);
            for (var i5 = 0; i5 < 16; i5++) {
              for (var n5 = r5[i5], o5 = this._lBlock, s5 = this._rBlock, a4 = 0, c4 = 0; c4 < 8; c4++)
                a4 |= h3[c4][((s5 ^ n5[c4]) & l3[c4]) >>> 0];
              this._lBlock = s5, this._rBlock = o5 ^ a4;
            }
            var f4 = this._lBlock;
            this._lBlock = this._rBlock, this._rBlock = f4, u3.call(this, 1, 1431655765), d2.call(this, 8, 16711935), d2.call(this, 2, 858993459), u3.call(this, 16, 65535), u3.call(this, 4, 252645135), t5[e5] = this._lBlock, t5[e5 + 1] = this._rBlock;
          }, keySize: 2, ivSize: 2, blockSize: 2 });
          function u3(t5, e5) {
            var r5 = (this._lBlock >>> t5 ^ this._rBlock) & e5;
            this._rBlock ^= r5, this._lBlock ^= r5 << t5;
          }
          function d2(t5, e5) {
            var r5 = (this._rBlock >>> t5 ^ this._lBlock) & e5;
            this._lBlock ^= r5, this._rBlock ^= r5 << t5;
          }
          t4.DES = i4._createHelper(f3);
          var p2 = n4.TripleDES = i4.extend({ _doReset: function() {
            var t5 = this._key.words;
            if (2 !== t5.length && 4 !== t5.length && t5.length < 6)
              throw new Error("Invalid key length - 3DES requires the key length to be 64, 128, 192 or >192.");
            var e5 = t5.slice(0, 2), i5 = t5.length < 4 ? t5.slice(0, 2) : t5.slice(2, 4), n5 = t5.length < 6 ? t5.slice(0, 2) : t5.slice(4, 6);
            this._des1 = f3.createEncryptor(r4.create(e5)), this._des2 = f3.createEncryptor(r4.create(i5)), this._des3 = f3.createEncryptor(r4.create(n5));
          }, encryptBlock: function(t5, e5) {
            this._des1.encryptBlock(t5, e5), this._des2.decryptBlock(t5, e5), this._des3.encryptBlock(t5, e5);
          }, decryptBlock: function(t5, e5) {
            this._des3.decryptBlock(t5, e5), this._des2.encryptBlock(t5, e5), this._des1.decryptBlock(t5, e5);
          }, keySize: 6, ivSize: 2, blockSize: 2 });
          t4.TripleDES = i4._createHelper(p2);
        }(), function() {
          var t4 = a3, e4 = t4.lib.StreamCipher, r4 = t4.algo, i4 = r4.RC4 = e4.extend({ _doReset: function() {
            for (var t5 = this._key, e5 = t5.words, r5 = t5.sigBytes, i5 = this._S = [], n5 = 0; n5 < 256; n5++)
              i5[n5] = n5;
            n5 = 0;
            for (var o5 = 0; n5 < 256; n5++) {
              var s4 = n5 % r5, a4 = e5[s4 >>> 2] >>> 24 - s4 % 4 * 8 & 255;
              o5 = (o5 + i5[n5] + a4) % 256;
              var c3 = i5[n5];
              i5[n5] = i5[o5], i5[o5] = c3;
            }
            this._i = this._j = 0;
          }, _doProcessBlock: function(t5, e5) {
            t5[e5] ^= n4.call(this);
          }, keySize: 8, ivSize: 0 });
          function n4() {
            for (var t5 = this._S, e5 = this._i, r5 = this._j, i5 = 0, n5 = 0; n5 < 4; n5++) {
              r5 = (r5 + t5[e5 = (e5 + 1) % 256]) % 256;
              var o5 = t5[e5];
              t5[e5] = t5[r5], t5[r5] = o5, i5 |= t5[(t5[e5] + t5[r5]) % 256] << 24 - 8 * n5;
            }
            return this._i = e5, this._j = r5, i5;
          }
          t4.RC4 = e4._createHelper(i4);
          var o4 = r4.RC4Drop = i4.extend({ cfg: i4.cfg.extend({ drop: 192 }), _doReset: function() {
            i4._doReset.call(this);
            for (var t5 = this.cfg.drop; t5 > 0; t5--)
              n4.call(this);
          } });
          t4.RC4Drop = e4._createHelper(o4);
        }(), /** @preserve
               * Counter block mode compatible with  Dr Brian Gladman fileenc.c
               * derived from CryptoJS.mode.CTR
               * Jan Hruby jhruby.web@gmail.com
               */
        a3.mode.CTRGladman = function() {
          var t4 = a3.lib.BlockCipherMode.extend();
          function e4(t5) {
            if (255 == (t5 >> 24 & 255)) {
              var e5 = t5 >> 16 & 255, r5 = t5 >> 8 & 255, i4 = 255 & t5;
              255 === e5 ? (e5 = 0, 255 === r5 ? (r5 = 0, 255 === i4 ? i4 = 0 : ++i4) : ++r5) : ++e5, t5 = 0, t5 += e5 << 16, t5 += r5 << 8, t5 += i4;
            } else
              t5 += 1 << 24;
            return t5;
          }
          var r4 = t4.Encryptor = t4.extend({ processBlock: function(t5, r5) {
            var i4 = this._cipher, n4 = i4.blockSize, o4 = this._iv, s4 = this._counter;
            o4 && (s4 = this._counter = o4.slice(0), this._iv = void 0), function(t6) {
              0 === (t6[0] = e4(t6[0])) && (t6[1] = e4(t6[1]));
            }(s4);
            var a4 = s4.slice(0);
            i4.encryptBlock(a4, 0);
            for (var c3 = 0; c3 < n4; c3++)
              t5[r5 + c3] ^= a4[c3];
          } });
          return t4.Decryptor = r4, t4;
        }(), function() {
          var t4 = a3, e4 = t4.lib.StreamCipher, r4 = t4.algo, i4 = [], n4 = [], o4 = [], s4 = r4.Rabbit = e4.extend({ _doReset: function() {
            for (var t5 = this._key.words, e5 = this.cfg.iv, r5 = 0; r5 < 4; r5++)
              t5[r5] = 16711935 & (t5[r5] << 8 | t5[r5] >>> 24) | 4278255360 & (t5[r5] << 24 | t5[r5] >>> 8);
            var i5 = this._X = [t5[0], t5[3] << 16 | t5[2] >>> 16, t5[1], t5[0] << 16 | t5[3] >>> 16, t5[2], t5[1] << 16 | t5[0] >>> 16, t5[3], t5[2] << 16 | t5[1] >>> 16], n5 = this._C = [t5[2] << 16 | t5[2] >>> 16, 4294901760 & t5[0] | 65535 & t5[1], t5[3] << 16 | t5[3] >>> 16, 4294901760 & t5[1] | 65535 & t5[2], t5[0] << 16 | t5[0] >>> 16, 4294901760 & t5[2] | 65535 & t5[3], t5[1] << 16 | t5[1] >>> 16, 4294901760 & t5[3] | 65535 & t5[0]];
            for (this._b = 0, r5 = 0; r5 < 4; r5++)
              c3.call(this);
            for (r5 = 0; r5 < 8; r5++)
              n5[r5] ^= i5[r5 + 4 & 7];
            if (e5) {
              var o5 = e5.words, s5 = o5[0], a4 = o5[1], h3 = 16711935 & (s5 << 8 | s5 >>> 24) | 4278255360 & (s5 << 24 | s5 >>> 8), l3 = 16711935 & (a4 << 8 | a4 >>> 24) | 4278255360 & (a4 << 24 | a4 >>> 8), f3 = h3 >>> 16 | 4294901760 & l3, u3 = l3 << 16 | 65535 & h3;
              for (n5[0] ^= h3, n5[1] ^= f3, n5[2] ^= l3, n5[3] ^= u3, n5[4] ^= h3, n5[5] ^= f3, n5[6] ^= l3, n5[7] ^= u3, r5 = 0; r5 < 4; r5++)
                c3.call(this);
            }
          }, _doProcessBlock: function(t5, e5) {
            var r5 = this._X;
            c3.call(this), i4[0] = r5[0] ^ r5[5] >>> 16 ^ r5[3] << 16, i4[1] = r5[2] ^ r5[7] >>> 16 ^ r5[5] << 16, i4[2] = r5[4] ^ r5[1] >>> 16 ^ r5[7] << 16, i4[3] = r5[6] ^ r5[3] >>> 16 ^ r5[1] << 16;
            for (var n5 = 0; n5 < 4; n5++)
              i4[n5] = 16711935 & (i4[n5] << 8 | i4[n5] >>> 24) | 4278255360 & (i4[n5] << 24 | i4[n5] >>> 8), t5[e5 + n5] ^= i4[n5];
          }, blockSize: 4, ivSize: 2 });
          function c3() {
            for (var t5 = this._X, e5 = this._C, r5 = 0; r5 < 8; r5++)
              n4[r5] = e5[r5];
            for (e5[0] = e5[0] + 1295307597 + this._b | 0, e5[1] = e5[1] + 3545052371 + (e5[0] >>> 0 < n4[0] >>> 0 ? 1 : 0) | 0, e5[2] = e5[2] + 886263092 + (e5[1] >>> 0 < n4[1] >>> 0 ? 1 : 0) | 0, e5[3] = e5[3] + 1295307597 + (e5[2] >>> 0 < n4[2] >>> 0 ? 1 : 0) | 0, e5[4] = e5[4] + 3545052371 + (e5[3] >>> 0 < n4[3] >>> 0 ? 1 : 0) | 0, e5[5] = e5[5] + 886263092 + (e5[4] >>> 0 < n4[4] >>> 0 ? 1 : 0) | 0, e5[6] = e5[6] + 1295307597 + (e5[5] >>> 0 < n4[5] >>> 0 ? 1 : 0) | 0, e5[7] = e5[7] + 3545052371 + (e5[6] >>> 0 < n4[6] >>> 0 ? 1 : 0) | 0, this._b = e5[7] >>> 0 < n4[7] >>> 0 ? 1 : 0, r5 = 0; r5 < 8; r5++) {
              var i5 = t5[r5] + e5[r5], s5 = 65535 & i5, a4 = i5 >>> 16, c4 = ((s5 * s5 >>> 17) + s5 * a4 >>> 15) + a4 * a4, h3 = ((4294901760 & i5) * i5 | 0) + ((65535 & i5) * i5 | 0);
              o4[r5] = c4 ^ h3;
            }
            t5[0] = o4[0] + (o4[7] << 16 | o4[7] >>> 16) + (o4[6] << 16 | o4[6] >>> 16) | 0, t5[1] = o4[1] + (o4[0] << 8 | o4[0] >>> 24) + o4[7] | 0, t5[2] = o4[2] + (o4[1] << 16 | o4[1] >>> 16) + (o4[0] << 16 | o4[0] >>> 16) | 0, t5[3] = o4[3] + (o4[2] << 8 | o4[2] >>> 24) + o4[1] | 0, t5[4] = o4[4] + (o4[3] << 16 | o4[3] >>> 16) + (o4[2] << 16 | o4[2] >>> 16) | 0, t5[5] = o4[5] + (o4[4] << 8 | o4[4] >>> 24) + o4[3] | 0, t5[6] = o4[6] + (o4[5] << 16 | o4[5] >>> 16) + (o4[4] << 16 | o4[4] >>> 16) | 0, t5[7] = o4[7] + (o4[6] << 8 | o4[6] >>> 24) + o4[5] | 0;
          }
          t4.Rabbit = e4._createHelper(s4);
        }(), a3.mode.CTR = function() {
          var t4 = a3.lib.BlockCipherMode.extend(), e4 = t4.Encryptor = t4.extend({ processBlock: function(t5, e5) {
            var r4 = this._cipher, i4 = r4.blockSize, n4 = this._iv, o4 = this._counter;
            n4 && (o4 = this._counter = n4.slice(0), this._iv = void 0);
            var s4 = o4.slice(0);
            r4.encryptBlock(s4, 0), o4[i4 - 1] = o4[i4 - 1] + 1 | 0;
            for (var a4 = 0; a4 < i4; a4++)
              t5[e5 + a4] ^= s4[a4];
          } });
          return t4.Decryptor = e4, t4;
        }(), function() {
          var t4 = a3, e4 = t4.lib.StreamCipher, r4 = t4.algo, i4 = [], n4 = [], o4 = [], s4 = r4.RabbitLegacy = e4.extend({ _doReset: function() {
            var t5 = this._key.words, e5 = this.cfg.iv, r5 = this._X = [t5[0], t5[3] << 16 | t5[2] >>> 16, t5[1], t5[0] << 16 | t5[3] >>> 16, t5[2], t5[1] << 16 | t5[0] >>> 16, t5[3], t5[2] << 16 | t5[1] >>> 16], i5 = this._C = [t5[2] << 16 | t5[2] >>> 16, 4294901760 & t5[0] | 65535 & t5[1], t5[3] << 16 | t5[3] >>> 16, 4294901760 & t5[1] | 65535 & t5[2], t5[0] << 16 | t5[0] >>> 16, 4294901760 & t5[2] | 65535 & t5[3], t5[1] << 16 | t5[1] >>> 16, 4294901760 & t5[3] | 65535 & t5[0]];
            this._b = 0;
            for (var n5 = 0; n5 < 4; n5++)
              c3.call(this);
            for (n5 = 0; n5 < 8; n5++)
              i5[n5] ^= r5[n5 + 4 & 7];
            if (e5) {
              var o5 = e5.words, s5 = o5[0], a4 = o5[1], h3 = 16711935 & (s5 << 8 | s5 >>> 24) | 4278255360 & (s5 << 24 | s5 >>> 8), l3 = 16711935 & (a4 << 8 | a4 >>> 24) | 4278255360 & (a4 << 24 | a4 >>> 8), f3 = h3 >>> 16 | 4294901760 & l3, u3 = l3 << 16 | 65535 & h3;
              for (i5[0] ^= h3, i5[1] ^= f3, i5[2] ^= l3, i5[3] ^= u3, i5[4] ^= h3, i5[5] ^= f3, i5[6] ^= l3, i5[7] ^= u3, n5 = 0; n5 < 4; n5++)
                c3.call(this);
            }
          }, _doProcessBlock: function(t5, e5) {
            var r5 = this._X;
            c3.call(this), i4[0] = r5[0] ^ r5[5] >>> 16 ^ r5[3] << 16, i4[1] = r5[2] ^ r5[7] >>> 16 ^ r5[5] << 16, i4[2] = r5[4] ^ r5[1] >>> 16 ^ r5[7] << 16, i4[3] = r5[6] ^ r5[3] >>> 16 ^ r5[1] << 16;
            for (var n5 = 0; n5 < 4; n5++)
              i4[n5] = 16711935 & (i4[n5] << 8 | i4[n5] >>> 24) | 4278255360 & (i4[n5] << 24 | i4[n5] >>> 8), t5[e5 + n5] ^= i4[n5];
          }, blockSize: 4, ivSize: 2 });
          function c3() {
            for (var t5 = this._X, e5 = this._C, r5 = 0; r5 < 8; r5++)
              n4[r5] = e5[r5];
            for (e5[0] = e5[0] + 1295307597 + this._b | 0, e5[1] = e5[1] + 3545052371 + (e5[0] >>> 0 < n4[0] >>> 0 ? 1 : 0) | 0, e5[2] = e5[2] + 886263092 + (e5[1] >>> 0 < n4[1] >>> 0 ? 1 : 0) | 0, e5[3] = e5[3] + 1295307597 + (e5[2] >>> 0 < n4[2] >>> 0 ? 1 : 0) | 0, e5[4] = e5[4] + 3545052371 + (e5[3] >>> 0 < n4[3] >>> 0 ? 1 : 0) | 0, e5[5] = e5[5] + 886263092 + (e5[4] >>> 0 < n4[4] >>> 0 ? 1 : 0) | 0, e5[6] = e5[6] + 1295307597 + (e5[5] >>> 0 < n4[5] >>> 0 ? 1 : 0) | 0, e5[7] = e5[7] + 3545052371 + (e5[6] >>> 0 < n4[6] >>> 0 ? 1 : 0) | 0, this._b = e5[7] >>> 0 < n4[7] >>> 0 ? 1 : 0, r5 = 0; r5 < 8; r5++) {
              var i5 = t5[r5] + e5[r5], s5 = 65535 & i5, a4 = i5 >>> 16, c4 = ((s5 * s5 >>> 17) + s5 * a4 >>> 15) + a4 * a4, h3 = ((4294901760 & i5) * i5 | 0) + ((65535 & i5) * i5 | 0);
              o4[r5] = c4 ^ h3;
            }
            t5[0] = o4[0] + (o4[7] << 16 | o4[7] >>> 16) + (o4[6] << 16 | o4[6] >>> 16) | 0, t5[1] = o4[1] + (o4[0] << 8 | o4[0] >>> 24) + o4[7] | 0, t5[2] = o4[2] + (o4[1] << 16 | o4[1] >>> 16) + (o4[0] << 16 | o4[0] >>> 16) | 0, t5[3] = o4[3] + (o4[2] << 8 | o4[2] >>> 24) + o4[1] | 0, t5[4] = o4[4] + (o4[3] << 16 | o4[3] >>> 16) + (o4[2] << 16 | o4[2] >>> 16) | 0, t5[5] = o4[5] + (o4[4] << 8 | o4[4] >>> 24) + o4[3] | 0, t5[6] = o4[6] + (o4[5] << 16 | o4[5] >>> 16) + (o4[4] << 16 | o4[4] >>> 16) | 0, t5[7] = o4[7] + (o4[6] << 8 | o4[6] >>> 24) + o4[5] | 0;
          }
          t4.RabbitLegacy = e4._createHelper(s4);
        }(), a3.pad.ZeroPadding = { pad: function(t4, e4) {
          var r4 = 4 * e4;
          t4.clamp(), t4.sigBytes += r4 - (t4.sigBytes % r4 || r4);
        }, unpad: function(t4) {
          var e4 = t4.words, r4 = t4.sigBytes - 1;
          for (r4 = t4.sigBytes - 1; r4 >= 0; r4--)
            if (e4[r4 >>> 2] >>> 24 - r4 % 4 * 8 & 255) {
              t4.sigBytes = r4 + 1;
              break;
            }
        } }, a3);
      });
      return function() {
        function e3(r3) {
          t2(this, e3);
          var i3 = r3.isArray, n3 = r3.isMap, o3 = r3.isDevMode;
          this._isArray = i3, this._isMap = n3, this._isDevMode = o3, this._interceptProfanityList = [], this._interceptFilter = null, this._interceptRegExpList = [], this._replacingProfanityMap = /* @__PURE__ */ new Map(), this._replacingFilter = null, this._replacingRegExpMap = /* @__PURE__ */ new Map(), this._key = "", this._iv = "", this._decryptOptions = void 0, this._n = "TIMProfanityFilterPlugin", true === o3 && formatAppLog("log", "at node_modules/tim-profanity-filter-plugin/index.js:15", "".concat(this._n, ".VERSION:").concat("1.1.0"));
        }
        return r2(e3, [{ key: "onToken", value: function(t3) {
          this._key = u2.enc.Utf8.parse(t3.slice(0, 32)), this._iv = this._key, this._decryptOptions = { iv: this._iv, mode: u2.mode.CBC, padding: u2.pad.Pkcs7 };
        } }, { key: "onLexiconSliced", value: function(t3) {
          if (this._isArray(t3) && 0 !== t3.length) {
            var e4, r3, i3, n3 = a2(t3);
            try {
              for (n3.s(); !(i3 = n3.n()).done; ) {
                var o3 = i3.value, s3 = o3.filterType, c3 = o3.profanityType, h3 = o3.profanity, l3 = o3.replacement;
                e4 = this._getDecryptedString(h3), r3 = this._getDecryptedString(l3), 1 === s3 ? 1 === c3 ? this._interceptProfanityList.push(e4) : 2 === c3 && this._interceptRegExpList.push(e4) : 2 === s3 && (1 === c3 ? this._replacingProfanityMap.set(e4, r3) : 2 === c3 && this._replacingRegExpMap.set(e4, r3));
              }
            } catch (f3) {
              n3.e(f3);
            } finally {
              n3.f();
            }
          }
        } }, { key: "_getDecryptedString", value: function(t3) {
          var e4 = u2.AES.decrypt(t3, this._key, this._decryptOptions);
          return u2.enc.Utf8.stringify(e4).toLowerCase();
        } }, { key: "onLexiconCompleted", value: function(t3) {
          this.onLexiconSliced(t3), this._interceptFilter = new h2({ input: this._interceptProfanityList, isArray: this._isArray, isMap: this._isMap }), this._replacingFilter = new h2({ input: this._replacingProfanityMap, isArray: this._isArray, isMap: this._isMap }), true === this._isDevMode && (formatAppLog("log", "at node_modules/tim-profanity-filter-plugin/index.js:15", "".concat(this._n, " _interceptProfanityList ->"), this._interceptProfanityList), formatAppLog("log", "at node_modules/tim-profanity-filter-plugin/index.js:15", "".concat(this._n, " _interceptRegExpList ->"), this._interceptRegExpList), formatAppLog("log", "at node_modules/tim-profanity-filter-plugin/index.js:15", "".concat(this._n, " _replacingProfanityMap ->"), this._replacingProfanityMap), formatAppLog("log", "at node_modules/tim-profanity-filter-plugin/index.js:15", "".concat(this._n, " _replacingRegExpMap ->"), this._replacingRegExpMap));
        } }, { key: "filter", value: function(t3) {
          var e4 = { type: 0, modifiedText: t3 };
          if ("string" != typeof t3)
            return true === this._isDevMode && formatAppLog("warn", "at node_modules/tim-profanity-filter-plugin/index.js:15", "".concat(this._n, ".filter invalid params, string required!")), e4;
          if (true === this._interceptFilter.filter({ text: t3, replacingEnabled: false }).isMatched)
            return e4.type = 1, e4;
          for (var r3 = false, n3 = 0, o3 = this._interceptRegExpList.length; n3 < o3; n3++)
            if (new RegExp(this._interceptRegExpList[n3], "gi").test(t3.toLowerCase())) {
              r3 = true;
              break;
            }
          if (r3)
            return e4.type = 1, e4;
          var s3 = this._replacingFilter.filter({ text: t3, replacingEnabled: true });
          true === s3.isMatched && (e4.type = 2, e4.modifiedText = s3.modifiedText);
          var c3, h3 = e4.modifiedText, l3 = null, f3 = a2(this._replacingRegExpMap);
          try {
            for (f3.s(); !(c3 = f3.n()).done; ) {
              var u3 = i2(c3.value, 2), d2 = u3[0], p2 = u3[1];
              l3 = new RegExp(d2, "gi"), h3 = h3.replace(l3, p2);
            }
          } catch (_2) {
            f3.e(_2);
          } finally {
            f3.f();
          }
          return h3 !== t3 && (e4.type = 2, e4.modifiedText = h3), e4;
        } }, { key: "reset", value: function() {
          this._isArray = null, this._isMap = null, this._interceptProfanityList.length = 0, this._interceptRegExpList.length = 0, this._replacingProfanityMap.clear(), this._replacingRegExpMap.clear(), this._key = "", this._iv = "", this._decryptOptions = {}, this._interceptFilter && this._interceptFilter.reset(), this._replacingFilter && this._replacingFilter.reset();
        } }]), e3;
      }();
    });
  })(timProfanityFilterPlugin);
  var timProfanityFilterPluginExports = timProfanityFilterPlugin.exports;
  const n$2 = /* @__PURE__ */ getDefaultExportFromCjs(timProfanityFilterPluginExports);
  function n$1(e2, t2) {
    var s2 = {};
    for (var n2 in e2)
      Object.prototype.hasOwnProperty.call(e2, n2) && t2.indexOf(n2) < 0 && (s2[n2] = e2[n2]);
    if (null != e2 && "function" == typeof Object.getOwnPropertySymbols) {
      var i2 = 0;
      for (n2 = Object.getOwnPropertySymbols(e2); i2 < n2.length; i2++)
        t2.indexOf(n2[i2]) < 0 && Object.prototype.propertyIsEnumerable.call(e2, n2[i2]) && (s2[n2[i2]] = e2[n2[i2]]);
    }
    return s2;
  }
  function i$2(e2, t2, s2, n2) {
    return new (s2 || (s2 = Promise))(function(i2, r2) {
      function a2(e3) {
        try {
          u2(n2.next(e3));
        } catch (e4) {
          r2(e4);
        }
      }
      function o2(e3) {
        try {
          u2(n2.throw(e3));
        } catch (e4) {
          r2(e4);
        }
      }
      function u2(e3) {
        var t3;
        e3.done ? i2(e3.value) : (t3 = e3.value, t3 instanceof s2 ? t3 : new s2(function(e4) {
          e4(t3);
        })).then(a2, o2);
      }
      u2((n2 = n2.apply(e2, t2 || [])).next());
    });
  }
  "function" == typeof SuppressedError && SuppressedError;
  let r$2 = class r2 {
    constructor(e2) {
      return r2.instance || (r2.instance = this, this.engine = e2, this.events = {}, this.bindIMEvents()), r2.instance;
    }
    addEvent(e2, t2) {
      this.events[e2] || (this.events[e2] = /* @__PURE__ */ new Map()), this.events[e2].set(t2, 1);
    }
    removeEvents() {
      Object.keys(this.events).forEach((e2) => {
        this.events[e2].clear();
      }), this.events = {};
    }
    dispatch(e2, t2) {
      if (this.events[e2])
        for (const s2 of this.events[e2].keys())
          s2.call(this, t2);
    }
    bindIMEvents() {
      this.engine.chat.on(this.engine.EVENT.SDK_READY, this.onSDKReady, this), this.engine.chat.on(this.engine.EVENT.SDK_NOT_READY, this.onSDKNotReady, this), this.engine.chat.on(this.engine.EVENT.KICKED_OUT, this.onKickedOut, this), this.engine.chat.on(this.engine.EVENT.NET_STATE_CHANGE, this.onNetStateChange, this), this.engine.chat.on(this.engine.EVENT.MESSAGE_RECEIVED, this.onReceiveMessage, this), this.engine.chat.on(this.engine.EVENT.MESSAGE_MODIFIED, this.onMessageModified, this), this.engine.chat.on(this.engine.EVENT.MESSAGE_REVOKED, this.onMessageRevoked, this), this.engine.chat.on(this.engine.EVENT.MESSAGE_READ_BY_PEER, this.onMessageReadByPeer, this), this.engine.chat.on(this.engine.EVENT.MESSAGE_READ_RECEIPT_RECEIVED, this.onMessageReadReceiptReceived, this), this.engine.chat.on(this.engine.EVENT.MESSAGE_REACTIONS_UPDATED, this.onMessageReactionsUpdated, this), this.engine.chat.on(this.engine.EVENT.CONVERSATION_LIST_UPDATED, this.onConversationListUpdated, this), this.engine.chat.on(this.engine.EVENT.TOTAL_UNREAD_MESSAGE_COUNT_UPDATED, this.onTotalMessageCountUpdated, this), this.engine.chat.on(this.engine.EVENT.PROFILE_UPDATED, this.onProfileUpdated, this), this.engine.chat.on(this.engine.EVENT.BLACKLIST_UPDATED, this.onBlacklistUpdated, this), this.engine.chat.on(this.engine.EVENT.USER_STATUS_UPDATED, this.onUserStatusUpdated, this), this.engine.chat.on(this.engine.EVENT.GROUP_LIST_UPDATED, this.onGroupListUpdated, this), this.engine.chat.on(this.engine.EVENT.GROUP_ATTRIBUTES_UPDATED, this.onGroupAttributesUpdated, this), this.engine.chat.on(this.engine.EVENT.GROUP_COUNTER_UPDATED, this.onGroupCounterUpdated, this), this.engine.chat.on(this.engine.EVENT.FRIEND_LIST_UPDATED, this.onFriendListUpdated, this), this.engine.chat.on(this.engine.EVENT.FRIEND_APPLICATION_LIST_UPDATED, this.onFriendApplicationListUpdated, this);
    }
    unbindIMEvents() {
      this.engine.chat.off(this.engine.EVENT.SDK_READY, this.onSDKReady, this), this.engine.chat.off(this.engine.EVENT.SDK_NOT_READY, this.onSDKNotReady, this), this.engine.chat.off(this.engine.EVENT.KICKED_OUT, this.onKickedOut, this), this.engine.chat.off(this.engine.EVENT.NET_STATE_CHANGE, this.onNetStateChange, this), this.engine.chat.off(this.engine.EVENT.MESSAGE_RECEIVED, this.onReceiveMessage, this), this.engine.chat.off(this.engine.EVENT.MESSAGE_MODIFIED, this.onMessageModified, this), this.engine.chat.off(this.engine.EVENT.MESSAGE_REVOKED, this.onMessageRevoked, this), this.engine.chat.off(this.engine.EVENT.MESSAGE_READ_BY_PEER, this.onMessageReadByPeer, this), this.engine.chat.off(this.engine.EVENT.MESSAGE_READ_RECEIPT_RECEIVED, this.onMessageReadReceiptReceived, this), this.engine.chat.off(this.engine.EVENT.MESSAGE_REACTIONS_UPDATED, this.onMessageReactionsUpdated, this), this.engine.chat.off(this.engine.EVENT.CONVERSATION_LIST_UPDATED, this.onConversationListUpdated, this), this.engine.chat.off(this.engine.EVENT.TOTAL_UNREAD_MESSAGE_COUNT_UPDATED, this.onTotalMessageCountUpdated, this), this.engine.chat.off(this.engine.EVENT.PROFILE_UPDATED, this.onProfileUpdated, this), this.engine.chat.off(this.engine.EVENT.BLACKLIST_UPDATED, this.onBlacklistUpdated, this), this.engine.chat.off(this.engine.EVENT.USER_STATUS_UPDATED, this.onUserStatusUpdated, this), this.engine.chat.off(this.engine.EVENT.GROUP_LIST_UPDATED, this.onGroupListUpdated, this), this.engine.chat.off(this.engine.EVENT.GROUP_ATTRIBUTES_UPDATED, this.onGroupAttributesUpdated, this), this.engine.chat.off(this.engine.EVENT.GROUP_COUNTER_UPDATED, this.onGroupCounterUpdated, this), this.engine.chat.off(this.engine.EVENT.FRIEND_LIST_UPDATED, this.onFriendListUpdated, this), this.engine.chat.off(this.engine.EVENT.FRIEND_APPLICATION_LIST_UPDATED, this.onFriendApplicationListUpdated, this);
    }
    onSDKReady(e2) {
      this.dispatch(this.engine.EVENT.SDK_READY, e2.data);
    }
    onSDKNotReady(e2) {
      this.dispatch(this.engine.EVENT.SDK_NOT_READY, e2.data);
    }
    onKickedOut(e2) {
      this.dispatch(this.engine.EVENT.KICKED_OUT, e2.data);
    }
    onNetStateChange(e2) {
      this.dispatch(this.engine.EVENT.NET_STATE_CHANGE, e2.data);
    }
    onReceiveMessage(e2) {
      this.dispatch(this.engine.EVENT.MESSAGE_RECEIVED, e2.data);
    }
    onMessageModified(e2) {
      this.dispatch(this.engine.EVENT.MESSAGE_MODIFIED, e2.data);
    }
    onMessageRevoked(e2) {
      this.dispatch(this.engine.EVENT.MESSAGE_REVOKED, e2.data);
    }
    onMessageReadByPeer(e2) {
      this.dispatch(this.engine.EVENT.MESSAGE_READ_BY_PEER, e2.data);
    }
    onMessageReadReceiptReceived(e2) {
      this.dispatch(this.engine.EVENT.MESSAGE_READ_RECEIPT_RECEIVED, e2.data);
    }
    onMessageReactionsUpdated(e2) {
      this.dispatch(this.engine.EVENT.MESSAGE_REACTIONS_UPDATED, e2.data);
    }
    onConversationListUpdated(e2) {
      this.dispatch(this.engine.EVENT.CONVERSATION_LIST_UPDATED, e2.data);
    }
    onTotalMessageCountUpdated(e2) {
      this.dispatch(this.engine.EVENT.TOTAL_UNREAD_MESSAGE_COUNT_UPDATED, e2.data);
    }
    onProfileUpdated(e2) {
      this.dispatch(this.engine.EVENT.PROFILE_UPDATED, e2.data);
    }
    onBlacklistUpdated(e2) {
      this.dispatch(this.engine.EVENT.BLACKLIST_UPDATED, e2.data);
    }
    onUserStatusUpdated(e2) {
      this.dispatch(this.engine.EVENT.USER_STATUS_UPDATED, e2.data);
    }
    onGroupListUpdated(e2) {
      this.dispatch(this.engine.EVENT.GROUP_LIST_UPDATED, e2.data);
    }
    onGroupAttributesUpdated(e2) {
      this.dispatch(this.engine.EVENT.GROUP_ATTRIBUTES_UPDATED, e2.data);
    }
    onGroupCounterUpdated(e2) {
      this.dispatch(this.engine.EVENT.GROUP_COUNTER_UPDATED, e2.data);
    }
    onFriendListUpdated(e2) {
      this.dispatch(this.engine.EVENT.FRIEND_LIST_UPDATED, e2.data);
    }
    onFriendApplicationListUpdated(e2) {
      this.dispatch(this.engine.EVENT.FRIEND_APPLICATION_LIST_UPDATED, e2.data);
    }
  };
  var a$2, o$2, u$2, c$2, g$2, l$2, h$2, p$1, d$1;
  !function(e2) {
    e2.TUIStore = "TUIStore", e2.TUITranslate = "TUITranslate", e2.TUIConversation = "TUIConversation", e2.TUIChat = "TUIChat", e2.TUIGroup = "TUIGroup", e2.TUIUser = "TUIUser", e2.TUIFriend = "TUIFriend";
  }(a$2 || (a$2 = {})), function(e2) {
    e2.APP = "application", e2.CONV = "conversation", e2.CHAT = "chat", e2.GRP = "group", e2.USER = "user", e2.FRIEND = "friend", e2.SEARCH = "search", e2.CUSTOM = "custom";
  }(o$2 || (o$2 = {})), function(e2) {
    e2[e2.UNSUB_USER = -1] = "UNSUB_USER";
  }(u$2 || (u$2 = {})), function(e2) {
    e2.BUSINESS_ID = "user_typing_status", e2[e2.STATUS_START = 1] = "STATUS_START", e2[e2.STATUS_END = 0] = "STATUS_END", e2[e2.VERSION = 1] = "VERSION", e2[e2.ACTION_START_ID = 14] = "ACTION_START_ID", e2[e2.ACTION_END_ID = 0] = "ACTION_END_ID", e2.ACTION_START = "EIMAMSG_InputStatus_Ing", e2.ACTION_END = "EIMAMSG_InputStatus_End", e2[e2.NEED_TYPING = 1] = "NEED_TYPING";
  }(c$2 || (c$2 = {})), function(e2) {
    e2.ADD = "add", e2.REMOVE = "remove";
  }(g$2 || (g$2 = {})), function(e2) {
    e2[e2.MSG_MODIFY_CONFLICT = 2480] = "MSG_MODIFY_CONFLICT", e2[e2.MSG_MODIFY_DISABLED_IN_AVCHATROOM = 2481] = "MSG_MODIFY_DISABLED_IN_AVCHATROOM", e2[e2.MODIFY_MESSAGE_NOT_EXIST = 20026] = "MODIFY_MESSAGE_NOT_EXIST";
  }(l$2 || (l$2 = {})), function(e2) {
    e2[e2.NOT_INIT = -1e5] = "NOT_INIT", e2[e2.INVALID_CONV_ID = -100001] = "INVALID_CONV_ID", e2[e2.CONV_ID_SAME = -100002] = "CONV_ID_SAME", e2[e2.CONV_NOT_EXIST = -100003] = "CONV_NOT_EXIST", e2[e2.GET_MSG_LIST_ERROR = -100004] = "GET_MSG_LIST_ERROR", e2[e2.MISMATCH_TYPE_AND_PAYLOAD = -100005] = "MISMATCH_TYPE_AND_PAYLOAD";
  }(h$2 || (h$2 = {})), function(e2) {
    e2.MSG_MODIFY_CONFLICT = "MODIFY_MESSAGE_ERROR,修改消息发生冲突, data.message 是最新的消息", e2.MSG_MODIFY_DISABLED_IN_AVCHATROOM = "MODIFY_MESSAGE_ERROR,不支持修改直播群消息.", e2.MODIFY_MESSAGE_NOT_EXIST = "MODIFY_MESSAGE_ERROR,消息不存在.";
  }(p$1 || (p$1 = {})), function(e2) {
    e2.NOT_INIT = "TUIChatEngine 初始化未完成，请确认 TUIChatEngine.login 接口调用是否正常。", e2.INVALID_CONV_ID = "会话 ID 无效", e2.CONV_ID_SAME = "您切换的是同一个会话 ID", e2.CONV_NOT_EXIST = "会话不存在", e2.GET_MSG_LIST_ERROR = "Chat SDK is not ready.", e2.MISMATCH_TYPE_AND_PAYLOAD = "type 与 payload 不匹配.";
  }(d$1 || (d$1 = {}));
  const f$1 = { logout: 1, destroy: 1 }, m$1 = { deleteConversation: 1, pinConversation: 1, muteConversation: 1, switchConversation: 1, getConversationProfile: 1, clearHistoryMessage: 1 }, v$2 = { modifyMessage: 1, revokeMessage: 1, resendMessage: 1, deleteMessage: 1, quoteMessage: 1, replyMessage: 1, setMessageExtensions: 1, deleteMessageExtensions: 1, getMessageExtensions: 1, sendTextMessage: 1, sendTextAtMessage: 1, sendImageMessage: 1, sendAudioMessage: 1, sendVideoMessage: 1, sendFileMessage: 1, sendCustomMessage: 1, sendFaceMessage: 1, sendLocationMessage: 1, sendForwardMessage: 1, enterTypingState: 1, leaveTypingState: 1, sendMessageReadReceipt: 1, getGroupMessageReadMemberList: 1, getMessageList: 1, downloadMergedMessages: 1, setTranslationLanguage: 1, translateText: 1, searchCloudMessages: 1, addMessageReaction: 1, removeMessageReaction: 1, getMessageReactions: 1, getAllUserListOfMessageReaction: 1 }, T$2 = { switchGroup: 1, getGroupProfile: 1, updateGroupProfile: 1, createGroup: 1, dismissGroup: 1, searchGroupByID: 1, joinGroup: 1, quitGroup: 1, getGroupApplicationList: 1, handleGroupApplication: 1, getGroupOnlineMemberCount: 1, changeGroupOwner: 1, initGroupAttributes: 1, setGroupAttributes: 1, deleteGroupAttributes: 1, getGroupAttributes: 1, setGroupCounters: 1, increaseGroupCounter: 1, decreaseGroupCounter: 1, getGroupCounters: 1, getGroupMemberList: 1, getGroupMemberProfile: 1, addGroupMember: 1, deleteGroupMember: 1, setGroupMemberMuteTime: 1, setGroupMemberRole: 1, setGroupMemberNameCard: 1, setGroupMemberCustomField: 1, markGroupMemberList: 1 }, E$2 = { switchUserStatus: 1, switchMessageReadStatus: 1, getUserProfile: 1, updateMyProfile: 1, addToBlacklist: 1, removeFromBlacklist: 1 }, I$2 = { getFriendList: 1, addFriend: 1, deleteFriend: 1, checkFriend: 1, getFriendProfile: 1, updateFriend: 1, acceptFriendApplication: 1, refuseFriendApplication: 1, deleteFriendApplication: 1, setFriendApplicationRead: 1 }, S$1 = function(e2) {
    return void 0 === e2;
  }, y = function(e2) {
    return e2.startsWith("_");
  }, b$1 = function(e2) {
    return /^(https?:\/\/(([a-zA-Z0-9]+-?)+[a-zA-Z0-9]+\.)+[a-zA-Z]+)(:\d+)?(\/.*)?(\?.*)?(#.*)?$/.test(e2);
  };
  const U$1 = function(e2) {
    return e2 && function(e3) {
      if ("string" == typeof e3)
        try {
          return !!JSON.parse(e3);
        } catch (e4) {
          return false;
        }
      return false;
    }(e2) ? JSON.parse(e2) : e2;
  }, C$2 = function(e2) {
    let t2 = "";
    return t2 = e2 >= 1048576 ? `${(e2 / 1048576).toFixed(2)} Mb` : e2 >= 1024 ? `${(e2 / 1024).toFixed(2)} Kb` : `${e2.toFixed(2)}B`, t2;
  }, M$1 = "https://web.sdk.qcloud.com/component/TUIKit/assets/avatar_21.png", O = "https://web.sdk.qcloud.com/im/demo/TUIkit/web/img/constomer.svg", _$1 = "https://web.sdk.qcloud.com/component/TUIKit/assets/group_avatar.png", D = "https://web.sdk.qcloud.com/im/assets/emoji-plugin/", P = "https://web.sdk.qcloud.com/im/assets/face-elem/", R$2 = "https://map.qq.com/?type=marker&isopeninfowin=1&markertype=1&", L = "https://apis.map.qq.com/ws/staticmap/v2/?", A$1 = { "[TUIEmoji_Expect]": "emoji_0@2x.png", "[TUIEmoji_Blink]": "emoji_1@2x.png", "[TUIEmoji_Guffaw]": "emoji_2@2x.png", "[TUIEmoji_KindSmile]": "emoji_3@2x.png", "[TUIEmoji_Haha]": "emoji_4@2x.png", "[TUIEmoji_Cheerful]": "emoji_5@2x.png", "[TUIEmoji_Smile]": "emoji_6@2x.png", "[TUIEmoji_Sorrow]": "emoji_7@2x.png", "[TUIEmoji_Speechless]": "emoji_8@2x.png", "[TUIEmoji_Amazed]": "emoji_9@2x.png", "[TUIEmoji_Complacent]": "emoji_10@2x.png", "[TUIEmoji_Lustful]": "emoji_11@2x.png", "[TUIEmoji_Stareyes]": "emoji_12@2x.png", "[TUIEmoji_Giggle]": "emoji_13@2x.png", "[TUIEmoji_Daemon]": "emoji_14@2x.png", "[TUIEmoji_Rage]": "emoji_15@2x.png", "[TUIEmoji_Yawn]": "emoji_16@2x.png", "[TUIEmoji_TearsLaugh]": "emoji_17@2x.png", "[TUIEmoji_Silly]": "emoji_18@2x.png", "[TUIEmoji_Wail]": "emoji_19@2x.png", "[TUIEmoji_Kiss]": "emoji_20@2x.png", "[TUIEmoji_Trapped]": "emoji_21@2x.png", "[TUIEmoji_Fear]": "emoji_22@2x.png", "[TUIEmoji_BareTeeth]": "emoji_23@2x.png", "[TUIEmoji_FlareUp]": "emoji_24@2x.png", "[TUIEmoji_Tact]": "emoji_25@2x.png", "[TUIEmoji_Shit]": "emoji_26@2x.png", "[TUIEmoji_ShutUp]": "emoji_27@2x.png", "[TUIEmoji_Sigh]": "emoji_28@2x.png", "[TUIEmoji_Hehe]": "emoji_29@2x.png", "[TUIEmoji_Silent]": "emoji_30@2x.png", "[TUIEmoji_Skull]": "emoji_31@2x.png", "[TUIEmoji_Mask]": "emoji_32@2x.png", "[TUIEmoji_Beer]": "emoji_33@2x.png", "[TUIEmoji_Cake]": "emoji_34@2x.png", "[TUIEmoji_RedPacket]": "emoji_35@2x.png", "[TUIEmoji_Bombs]": "emoji_36@2x.png", "[TUIEmoji_Ai]": "emoji_37@2x.png", "[TUIEmoji_Celebrate]": "emoji_38@2x.png", "[TUIEmoji_Bless]": "emoji_39@2x.png", "[TUIEmoji_Flower]": "emoji_40@2x.png", "[TUIEmoji_Watermelon]": "emoji_41@2x.png", "[TUIEmoji_Cow]": "emoji_42@2x.png", "[TUIEmoji_Fool]": "emoji_43@2x.png", "[TUIEmoji_Surprised]": "emoji_44@2x.png", "[TUIEmoji_Askance]": "emoji_45@2x.png", "[TUIEmoji_Monster]": "emoji_46@2x.png", "[TUIEmoji_Pig]": "emoji_47@2x.png", "[TUIEmoji_Coffee]": "emoji_48@2x.png", "[TUIEmoji_Ok]": "emoji_49@2x.png", "[TUIEmoji_Heart]": "emoji_50@2x.png", "[TUIEmoji_Sun]": "emoji_51@2x.png", "[TUIEmoji_Moon]": "emoji_52@2x.png", "[TUIEmoji_Star]": "emoji_53@2x.png", "[TUIEmoji_Rich]": "emoji_54@2x.png", "[TUIEmoji_Fortune]": "emoji_55@2x.png", "[TUIEmoji_857]": "emoji_56@2x.png", "[TUIEmoji_666]": "emoji_57@2x.png", "[TUIEmoji_Prohibit]": "emoji_58@2x.png", "[TUIEmoji_Convinced]": "emoji_59@2x.png", "[TUIEmoji_Knife]": "emoji_60@2x.png", "[TUIEmoji_Like]": "emoji_61@2x.png" }, j = { "[TUIEmoji_Smile]": "[微笑]", "[TUIEmoji_Expect]": "[期待]", "[TUIEmoji_Blink]": "[眨眼]", "[TUIEmoji_Guffaw]": "[大笑]", "[TUIEmoji_KindSmile]": "[姨母笑]", "[TUIEmoji_Haha]": "[哈哈哈]", "[TUIEmoji_Cheerful]": "[愉快]", "[TUIEmoji_Speechless]": "[无语]", "[TUIEmoji_Amazed]": "[惊讶]", "[TUIEmoji_Sorrow]": "[悲伤]", "[TUIEmoji_Complacent]": "[得意]", "[TUIEmoji_Silly]": "[傻了]", "[TUIEmoji_Lustful]": "[色]", "[TUIEmoji_Giggle]": "[憨笑]", "[TUIEmoji_Kiss]": "[亲亲]", "[TUIEmoji_Wail]": "[大哭]", "[TUIEmoji_TearsLaugh]": "[哭笑]", "[TUIEmoji_Trapped]": "[困]", "[TUIEmoji_Mask]": "[口罩]", "[TUIEmoji_Fear]": "[恐惧]", "[TUIEmoji_BareTeeth]": "[龇牙]", "[TUIEmoji_FlareUp]": "[发怒]", "[TUIEmoji_Yawn]": "[打哈欠]", "[TUIEmoji_Tact]": "[机智]", "[TUIEmoji_Stareyes]": "[星星眼]", "[TUIEmoji_ShutUp]": "[闭嘴]", "[TUIEmoji_Sigh]": "[叹气]", "[TUIEmoji_Hehe]": "[呵呵]", "[TUIEmoji_Silent]": "[收声]", "[TUIEmoji_Surprised]": "[惊喜]", "[TUIEmoji_Askance]": "[白眼]", "[TUIEmoji_Ok]": "[OK]", "[TUIEmoji_Shit]": "[便便]", "[TUIEmoji_Monster]": "[怪兽]", "[TUIEmoji_Daemon]": "[恶魔]", "[TUIEmoji_Rage]": "[恶魔怒]", "[TUIEmoji_Fool]": "[衰]", "[TUIEmoji_Pig]": "[猪]", "[TUIEmoji_Cow]": "[牛]", "[TUIEmoji_Ai]": "[AI]", "[TUIEmoji_Skull]": "[骷髅]", "[TUIEmoji_Bombs]": "[炸弹]", "[TUIEmoji_Coffee]": "[咖啡]", "[TUIEmoji_Cake]": "[蛋糕]", "[TUIEmoji_Beer]": "[啤酒]", "[TUIEmoji_Flower]": "[花]", "[TUIEmoji_Watermelon]": "[瓜]", "[TUIEmoji_Rich]": "[壕]", "[TUIEmoji_Heart]": "[爱心]", "[TUIEmoji_Moon]": "[月亮]", "[TUIEmoji_Sun]": "[太阳]", "[TUIEmoji_Star]": "[星星]", "[TUIEmoji_RedPacket]": "[红包]", "[TUIEmoji_Celebrate]": "[庆祝]", "[TUIEmoji_Bless]": "[福]", "[TUIEmoji_Fortune]": "[发]", "[TUIEmoji_Convinced]": "[服]", "[TUIEmoji_Prohibit]": "[禁]", "[TUIEmoji_666]": "[666]", "[TUIEmoji_857]": "[857]", "[TUIEmoji_Knife]": "[刀]", "[TUIEmoji_Like]": "[赞]" }, k = { enabledMessageReadReceipt: Math.pow(2, 5), enabledEmojiPlugin: Math.pow(2, 48), enabledOnlineStatus: Math.pow(2, 7), enabledCustomerServicePlugin: Math.pow(2, 40), enabledTranslationPlugin: Math.pow(2, 38), enabledVoiceToText: Math.pow(2, 39) }, N$1 = ["messageList", "conversationList", "newMessageList"], x = ["translateTextInfo", "voiceToTextInfo"], G = "undefined" != typeof wx && "function" == typeof wx.getSystemInfoSync && Boolean(wx.getSystemInfoSync().fontSizeSetting), w$1 = "undefined" != typeof uni && "undefined" == typeof window, V = G || w$1, F = "undefined" != typeof uni, $ = ("undefined" != typeof uni || "undefined" != typeof window) && !V, H = G ? wx : F ? uni : window, Y = $ && window && window.navigator && window.navigator.userAgent || "", B = /Android/i.test(Y), K = /(?:Windows Phone)/.test(Y), q = /(?:SymbianOS)/.test(Y), z = /iPad/i.test(Y) || /iPhone/i.test(Y) || /iPod/i.test(Y), J = B || K || q || z, W = $ && !J;
  class X {
    constructor() {
      this.global = H, this.isOfficial = false;
    }
    static getInstance() {
      return X.instance || (X.instance = new X()), X.instance;
    }
    initOfficial(e2) {
      this.isOfficial = e2;
    }
    getPlatform() {
      let e2 = "";
      return W ? e2 = "pc" : J ? e2 = "h5" : G ? e2 = "wechat" : w$1 && !G && (e2 = "app"), e2;
    }
  }
  const Z = "group-module", Q = "relationship-module";
  class ee {
    constructor() {
      this.EVENT = e$1.EVENT, this.TYPES = e$1.TYPES, this.loginStatusPromise = /* @__PURE__ */ new Map(), this.userID = "", this.isInited = false;
    }
    static getInstance() {
      return ee.instance || (ee.instance = new ee()), ee.instance;
    }
    mount(e2, t2) {
      this[e2] = t2;
    }
    login(t2) {
      const { chat: s2, SDKAppID: n2, userID: i2 } = t2, a2 = 1400187352 === n2 || 1400188366 === n2;
      return this.createChat(t2), this.userID = i2, X.getInstance().initOfficial(a2), this.TUIStore.update(o$2.APP, "isOfficial", a2), this.TUIStore.update(o$2.APP, "SDKVersion", e$1.VERSION), this.eventCenter = new r$2(this), this.eventCenter.removeEvents(), this.initStore(), this.initService(), s2 && s2.isReady() ? (formatAppLog("log", "at node_modules/@tencentcloud/chat-uikit-engine/index.js:1", "TUIChatEngine.login ok, from TUICore."), this.TUIUser.getUserProfile(), this.checkCommercialAbility(), Promise.resolve({})) : (this.registerPlugin(t2), this.eventCenter.addEvent(this.EVENT.SDK_READY, () => {
        this.onSDKReady();
      }), this.eventCenter.addEvent(this.EVENT.SDK_NOT_READY, () => {
        this.onSDKNotReady();
      }), this.loginChat(t2));
    }
    logout() {
      return this.userID = "", this.isInited = false, this.chat.logout();
    }
    isReady() {
      var e2;
      return (null === (e2 = this.chat) || void 0 === e2 ? void 0 : e2.isReady()) || false;
    }
    setLogLevel(e2) {
      if (this.chat)
        return this.chat.setLogLevel(e2);
      formatAppLog("warn", "at node_modules/@tencentcloud/chat-uikit-engine/index.js:1", "TUIChatEngine 初始化未完成，请确认 TUIChatEngine.login 接口调用是否正常。");
    }
    destroy() {
      return this.eventCenter.unbindIMEvents(), this.isInited = false, this.chat.destroy();
    }
    getMyUserID() {
      return this.userID;
    }
    initStore() {
      this.TUIStore.reset(o$2.CHAT), this.TUIStore.reset(o$2.CONV), this.TUIStore.reset(o$2.GRP), this.TUIStore.reset(o$2.USER), this.TUIStore.reset(o$2.SEARCH), formatAppLog("log", "at node_modules/@tencentcloud/chat-uikit-engine/index.js:1", "TUIChatEngine.initStore ok.");
    }
    initService() {
      this.TUIChat.init(), this.TUIConversation.init(), this.TUIUser.init(), this.initOptionalServices(), this.isInited = true, formatAppLog("log", "at node_modules/@tencentcloud/chat-uikit-engine/index.js:1", "TUIChatEngine.initService ok.");
    }
    initOptionalServices() {
      const t2 = e$1.VERSION.split(".");
      t2[0] > 3 || 3 === t2[0] && t2[1] >= 3 && t2[2] > 0 ? (true === this.chat.callExperimentalAPI("canIUseModule", [Z]) && this.TUIGroup.init(), true === this.chat.callExperimentalAPI("canIUseModule", [Q]) && this.TUIFriend.init()) : (this.TUIGroup.init(), this.TUIFriend.init());
    }
    createChat(t2) {
      const { chat: s2 } = t2, i2 = n$1(t2, ["chat"]);
      S$1(s2) ? this.chat = e$1.create(Object.assign(Object.assign({}, i2), { scene: "chat-uikit-engine" })) : this.chat = s2;
    }
    loginChat(e2) {
      const { userID: t2, userSig: s2 } = e2;
      return new Promise((e3, n2) => {
        this.chat.login({ userID: t2, userSig: s2 }).then((t3) => {
          formatAppLog("log", "at node_modules/@tencentcloud/chat-uikit-engine/index.js:1", "TUIChatEngine.loginChat ok."), this.checkCommercialAbility(), t3.data.repeatLogin && this.chat.isReady() && e3(t3), this.loginStatusPromise.set("login", { resolve: e3, reject: n2, imResponse: t3 });
        }).catch((e4) => {
          n2(e4);
        });
      });
    }
    registerPlugin(e2) {
      const { useUploadPlugin: n2 = false, useProfanityFilterPlugin: i2 = false, TIMPush: r2, pushConfig: a2, TUIOfflinePush: o2, offlinePushConfig: u2 } = e2;
      true === n2 && this.chat.registerPlugin({ "tim-upload-plugin": t$3 }), true === i2 && this.chat.registerPlugin({ "tim-profanity-filter-plugin": n$2 }), !w$1 || G || S$1(r2) || S$1(a2) || this.chat.registerPlugin({ "tim-push": r2, pushConfig: a2 }), !w$1 || G || S$1(o2) || S$1(u2) || this.chat.registerPlugin({ "tim-offline-push-plugin": o2, offlinePushConfig: u2 });
    }
    onSDKReady() {
      if (this.loginStatusPromise.has("login")) {
        const e2 = this.loginStatusPromise.get("login");
        e2.resolve(e2.imResponse), this.TUIUser.getUserProfile();
      }
      this.loginStatusPromise.delete("login");
    }
    onSDKNotReady() {
      if (this.loginStatusPromise.has("login")) {
        this.loginStatusPromise.get("login").reject(new Error("sdk not ready"));
      }
      this.loginStatusPromise.delete("login");
    }
    checkCommercialAbility() {
      Object.keys(k).forEach((e2) => {
        const t2 = k[e2];
        this.chat.callExperimentalAPI("isCommercialAbilityEnabled", t2).then((t3) => {
          const { enabled: s2 = false } = t3.data;
          this.TUIStore.update(o$2.APP, e2, s2);
        });
      });
    }
  }
  class te {
    constructor() {
      this.defaultStore = { enabledMessageReadReceipt: false, enabledEmojiPlugin: false, enabledOnlineStatus: false, enabledCustomerServicePlugin: false, enabledTranslationPlugin: false, enabledVoiceToText: false, enableTyping: true, enableConversationDraft: true, isOfficial: false, SDKVersion: "3.0.0", tasks: { sendMessage: false, revokeMessage: false, modifyNickName: false, groupChat: false, muteGroup: false, dismissGroup: false, call: false, searchCloudMessage: false, customerService: false, translateTextMessage: false } }, this.store = { enabledEmojiPlugin: false, enabledMessageReadReceipt: false, enabledOnlineStatus: false, enabledCustomerServicePlugin: false, enabledTranslationPlugin: false, enabledVoiceToText: false, enableTyping: true, enableConversationDraft: true, isOfficial: false, SDKVersion: "3.0.0", tasks: { sendMessage: false, revokeMessage: false, modifyNickName: false, groupChat: false, muteGroup: false, dismissGroup: false, call: false, searchCloudMessage: false, customerService: false, translateTextMessage: false } };
    }
    update(e2, t2) {
      this.store[e2] = t2;
    }
    getData(e2) {
      return this.store[e2];
    }
    reset(e2 = []) {
      this.store = Object.assign(Object.assign(Object.assign({}, this.defaultStore), this.store), e2.reduce((e3, t2) => Object.assign(Object.assign({}, e3), { [t2]: this.defaultStore[t2] }), {}));
    }
  }
  class se {
    constructor() {
      this.defaultStore = { userProfile: {}, displayOnlineStatus: false, displayMessageReadReceipt: true, userStatusList: /* @__PURE__ */ new Map(), kickedOut: "", netStateChange: "", userBlacklist: [], targetLanguage: "zh" }, this.store = { userProfile: {}, displayOnlineStatus: false, displayMessageReadReceipt: true, userStatusList: /* @__PURE__ */ new Map(), kickedOut: "", netStateChange: "", userBlacklist: [], targetLanguage: "zh" };
    }
    update(e2, t2) {
      if ("userStatusList" === e2)
        this.updateUserStatusList(t2);
      else
        this.store[e2] = t2;
    }
    getData(e2) {
      return this.store[e2];
    }
    reset(e2 = []) {
      this.store = Object.assign(Object.assign(Object.assign({}, this.defaultStore), this.store), e2.reduce((e3, t2) => Object.assign(Object.assign({}, e3), { [t2]: this.defaultStore[t2] }), {}));
    }
    updateUserStatusList(e2) {
      0 !== e2.length ? e2.forEach((e3) => {
        const { userID: t2, statusType: s2 = 0, customStatus: n2 = "" } = e3;
        s2 === u$2.UNSUB_USER ? this.store.userStatusList.delete(t2) : this.store.userStatusList.set(t2, { statusType: s2, customStatus: n2 });
      }) : this.store.userStatusList.clear();
    }
  }
  class ne {
    getEngine() {
      return ee.getInstance();
    }
  }
  const ie = function(e2) {
    if (null == e2)
      return true;
    if ("boolean" == typeof e2)
      return false;
    if ("number" == typeof e2)
      return 0 === e2;
    if ("string" == typeof e2)
      return 0 === e2.length;
    if ("function" == typeof e2)
      return 0 === e2.length;
    if (Array.isArray(e2))
      return 0 === e2.length;
    if (e2 instanceof Error)
      return "" === e2.message;
    if (function(e3) {
      if ("object" != typeof e3 || null === e3)
        return false;
      const t2 = Object.getPrototypeOf(e3);
      if (null === t2)
        return true;
      let s2 = t2;
      for (; null !== Object.getPrototypeOf(s2); )
        s2 = Object.getPrototypeOf(s2);
      return t2 === s2;
    }(e2)) {
      for (const t2 in e2)
        if (Object.prototype.hasOwnProperty.call(e2, t2))
          return false;
      return true;
    }
    return false;
  }, re = ["[图片]", "[语音]", "[视频]", "[文件]", "[位置]", "[地理位置]", "[动画表情]", "[自定义消息]", "[群提示消息]", "[聊天记录]"];
  class ae extends ne {
    constructor(e2) {
      super(), this.initProxy(e2), this.isMuted = this.messageRemindType === this.getEngine().TYPES.MSG_REMIND_ACPT_NOT_NOTE || this.messageRemindType === this.getEngine().TYPES.MSG_REMIND_DISCARD, this.operationType = 0, this._conversation = e2;
    }
    initProxy(e2) {
      Object.keys(e2).forEach((t2) => {
        y(t2) || (this[t2] = e2[t2]);
      });
    }
    updateProperties(e2) {
      Object.keys(e2).forEach((t2) => {
        y(t2) || (this[t2] = e2[t2]);
      });
    }
    updateOperationType(e2) {
      this.operationType = e2;
    }
    getConversation() {
      return this._conversation;
    }
    deleteConversation() {
      return this.getEngine().TUIConversation.deleteConversation(this.conversationID);
    }
    pinConversation() {
      return this.getEngine().TUIConversation.pinConversation({ conversationID: this.conversationID, isPinned: !this.isPinned });
    }
    muteConversation() {
      const e2 = this.getEngine(), t2 = { messageRemindType: true === this.isMuted ? e2.TYPES.MSG_REMIND_ACPT_AND_NOTE : e2.TYPES.MSG_REMIND_ACPT_NOT_NOTE };
      if (this.type === e2.TYPES.CONV_C2C) {
        const s2 = this.conversationID.replace(e2.TYPES.CONV_C2C, "");
        t2.userIDList = [s2];
      } else if (this.type === e2.TYPES.CONV_GROUP) {
        const s2 = this.conversationID.replace(e2.TYPES.CONV_GROUP, "");
        t2.groupID = s2;
      }
      return e2.TUIConversation.muteConversation(t2);
    }
    getAvatar() {
      var e2, t2, s2, n2, i2, r2;
      const a2 = this.getEngine();
      let o2 = "";
      switch (this.type) {
        case a2.TYPES.CONV_C2C:
          o2 = b$1(null === (e2 = this.userProfile) || void 0 === e2 ? void 0 : e2.avatar) ? null === (t2 = this.userProfile) || void 0 === t2 ? void 0 : t2.avatar : M$1;
          break;
        case a2.TYPES.CONV_GROUP:
          o2 = b$1(null === (s2 = this.groupProfile) || void 0 === s2 ? void 0 : s2.avatar) ? null === (n2 = this.groupProfile) || void 0 === n2 ? void 0 : n2.avatar : O;
          break;
        case a2.TYPES.CONV_SYSTEM:
          o2 = b$1(null === (i2 = this.groupProfile) || void 0 === i2 ? void 0 : i2.avatar) ? null === (r2 = this.groupProfile) || void 0 === r2 ? void 0 : r2.avatar : _$1;
      }
      return o2;
    }
    getShowName() {
      var e2, t2, s2, n2;
      const i2 = this.getEngine();
      let r2 = "";
      switch (this.type) {
        case i2.TYPES.CONV_C2C:
          r2 = this.remark || (null === (e2 = this.userProfile) || void 0 === e2 ? void 0 : e2.nick) || (null === (t2 = this.userProfile) || void 0 === t2 ? void 0 : t2.userID) || "";
          break;
        case i2.TYPES.CONV_GROUP:
          r2 = (null === (s2 = this.groupProfile) || void 0 === s2 ? void 0 : s2.name) || (null === (n2 = this.groupProfile) || void 0 === n2 ? void 0 : n2.groupID) || "";
          break;
        case i2.TYPES.CONV_SYSTEM:
          r2 = i2.TUITranslate.t("系统通知");
      }
      return r2;
    }
    getGroupAtInfo() {
      const e2 = this.getEngine(), t2 = e2.TUITranslate.t.bind(e2.TUITranslate), s2 = [`[${t2("TUIConversation.有人@我")}]`, `[${t2("TUIConversation.@所有人")}]`, `[${t2("TUIConversation.@所有人")}][${t2("TUIConversation.有人@我")}]`];
      let n2 = "";
      for (let e3 = 0; e3 < this.groupAtInfoList.length; e3++)
        this.groupAtInfoList[e3].atTypeArray[0] && this.unreadCount > 0 && (n2 = s2[this.groupAtInfoList[e3].atTypeArray[0] - 1]);
      return n2;
    }
    getLastMessage(e2) {
      return "time" === e2 ? this.getLastMessageTime() : "text" === e2 ? this.getLastMessageText() : (formatAppLog("warn", "at node_modules/@tencentcloud/chat-uikit-engine/index.js:1", `ConversationModel.getLastMessage key:${e2} is invalid.`), null);
    }
    getLastMessageTime() {
      var e2;
      const t2 = this.getEngine();
      let s2 = "";
      return (null === (e2 = this.lastMessage) || void 0 === e2 ? void 0 : e2.lastTime) > 0 && (s2 = function(e3, t3) {
        const s3 = 6e4, n2 = 36e5, i2 = 24 * n2, r2 = 7 * i2, a2 = (/* @__PURE__ */ new Date()).getTime() - e3;
        let o2 = "";
        if (a2 < 0)
          return o2;
        const u2 = a2 / s3, c2 = a2 / n2, g2 = a2 / i2, l2 = a2 / r2;
        if (l2 >= 1 && l2 <= 4)
          o2 = ` ${parseInt(`${l2}`, 10)} ${t3("time.周")}${t3("time.前")}`;
        else if (g2 >= 1 && g2 <= 6)
          o2 = ` ${parseInt(`${g2}`, 10)} ${t3("time.天")}${t3("time.前")}`;
        else if (c2 >= 1 && c2 <= 23)
          o2 = ` ${parseInt(`${c2}`, 10)} ${t3("time.小时")}${t3("time.前")}`;
        else if (u2 >= 1 && u2 <= 59)
          o2 = ` ${parseInt(`${u2}`, 10)} ${t3("time.分钟")}${t3("time.前")}`;
        else if (a2 >= 0 && a2 <= s3)
          o2 = `${t3("time.刚刚")}`;
        else {
          const t4 = /* @__PURE__ */ new Date();
          t4.setTime(e3), o2 = `${t4.getFullYear()}-${t4.getMonth() + 1 < 10 ? `0${t4.getMonth() + 1}` : t4.getMonth() + 1}-${t4.getDate() < 10 ? `0${t4.getDate()}` : t4.getDate()}`;
        }
        return o2;
      }(1e3 * this.lastMessage.lastTime, t2.TUITranslate.t.bind(t2.TUITranslate))), s2;
    }
    getLastMessageText() {
      var e2;
      if (this.draftText) {
        return U$1(this.draftText).abstract;
      }
      const t2 = this.getEngine(), s2 = t2.TUITranslate.t.bind(t2.TUITranslate);
      if (4 === this.operationType)
        return s2("TUIConversation.您已被群管理员移出群聊");
      if (5 === this.operationType)
        return s2("TUIConversation.该群聊已被解散");
      if (8 === this.operationType)
        return s2("TUIConversation.您已退出该群聊");
      const n2 = this._conversation, i2 = this.lastMessage;
      let r2 = "", a2 = "";
      const o2 = n2.unreadCount > 0 && n2.messageRemindType === t2.TYPES.MSG_REMIND_ACPT_NOT_NOTE ? `[${n2.unreadCount > 99 ? "99+" : n2.unreadCount}${s2("TUIConversation.条")}]` : "";
      if (n2.type === t2.TYPES.CONV_GROUP)
        if (i2.fromAccount === t2.getMyUserID())
          r2 = s2("TUIConversation.我");
        else {
          const e3 = i2.fromAccount;
          r2 = t2.TUIFriend.getFriendRemark([e3])[e3] || i2.nameCard || i2.nick || e3;
        }
      if (i2.type === t2.TYPES.MSG_TEXT)
        a2 = this.decodeTextMessage(i2.payload.text);
      else if (i2.type === t2.TYPES.MSG_CUSTOM) {
        const n3 = U$1(null === (e2 = null == i2 ? void 0 : i2.payload) || void 0 === e2 ? void 0 : e2.data);
        if (1 === (null == n3 ? void 0 : n3.businessID))
          return a2 = t2.TUIChat.messageHandler.handleCallKitSignaling(i2), a2;
        a2 = re.includes(i2.messageForShow) ? s2(`TUIChat.${i2.messageForShow}`) : i2.messageForShow;
      } else
        a2 = re.includes(i2.messageForShow) ? s2(`TUIChat.${i2.messageForShow}`) : i2.messageForShow;
      return i2.isRevoked && (a2 = s2("TUIChat.撤回了一条消息")), n2.type === t2.TYPES.CONV_GROUP && i2.type === t2.TYPES.MSG_GRP_TIP ? a2 : `${o2}${r2 ? `${r2}:` : ""}${a2}`;
    }
    decodeTextMessage(e2) {
      if (ie(e2))
        return e2;
      const t2 = /(\[.+?\])/g;
      let s2 = e2;
      if (t2.test(e2)) {
        const n2 = this.getEngine(), i2 = n2.TUITranslate.t.bind(n2.TUITranslate);
        s2 = e2.replace(t2, (e3) => {
          const t3 = i2(`Emoji.${e3}`);
          return G || !t3 || t3.startsWith("Emoji.") ? j[e3] || e3 : t3;
        });
      }
      return s2;
    }
  }
  class oe {
    constructor() {
      this.defaultStore = { currentConversationID: "", totalUnreadCount: 0, conversationList: [], currentConversation: null, operationTypeMap: /* @__PURE__ */ new Map() }, this.store = { currentConversationID: "", totalUnreadCount: 0, conversationList: [], currentConversation: null, operationTypeMap: /* @__PURE__ */ new Map() };
    }
    update(e2, t2) {
      switch (e2) {
        case "conversationList":
          this.updateConversationList(t2);
          break;
        case "operationTypeMap":
          this.updateOperationTypeMap(t2);
          break;
        default:
          this.store[e2] = t2;
      }
    }
    getData(e2) {
      return this.store[e2];
    }
    getModel(e2) {
      return this.store.conversationList.find((t2) => t2.conversationID === e2);
    }
    reset(e2 = []) {
      this.store = Object.assign(Object.assign(Object.assign({}, this.defaultStore), this.store), e2.reduce((e3, t2) => Object.assign(Object.assign({}, e3), { [t2]: this.defaultStore[t2] }), {}));
    }
    updateConversationList(e2) {
      const t2 = [];
      e2.forEach((e3) => {
        let s2 = e3;
        e3 instanceof ae ? s2.updateProperties(e3) : s2 = new ae(e3);
        const n2 = this.getOperationType(e3);
        s2.updateOperationType(n2), t2.push(s2);
      }), this.store.conversationList = t2;
    }
    updateOperationTypeMap(e2) {
      const { conversationID: t2, operationType: s2 = 0 } = e2;
      this.store.operationTypeMap.set(t2, s2);
    }
    getOperationType(e2) {
      const { conversationID: t2 } = e2;
      return this.store.operationTypeMap.get(t2) || 0;
    }
  }
  class ue extends ne {
    constructor(e2) {
      super(), this.messageHandlers = { [this.getEngine().TYPES.MSG_TEXT]: (e3) => this.getEngine().TUIChat.messageHandler.handleTextMessage(e3), [this.getEngine().TYPES.MSG_FACE]: (e3) => this.getEngine().TUIChat.messageHandler.handleFaceMessage(e3), [this.getEngine().TYPES.MSG_LOCATION]: (e3) => this.getEngine().TUIChat.messageHandler.handleLocationMessage(e3), [this.getEngine().TYPES.MSG_IMAGE]: (e3) => this.getEngine().TUIChat.messageHandler.handleImageMessage(e3), [this.getEngine().TYPES.MSG_AUDIO]: (e3) => this.getEngine().TUIChat.messageHandler.handleAudioMessage(e3), [this.getEngine().TYPES.MSG_VIDEO]: (e3) => this.getEngine().TUIChat.messageHandler.handleVideoMessage(e3), [this.getEngine().TYPES.MSG_FILE]: (e3) => this.getEngine().TUIChat.messageHandler.handleFileMessage(e3), [this.getEngine().TYPES.MSG_CUSTOM]: (e3) => this.getEngine().TUIChat.messageHandler.handleCustomMessage(e3), [this.getEngine().TYPES.MSG_MERGER]: (e3) => this.getEngine().TUIChat.messageHandler.handleMergeMessage(e3), [this.getEngine().TYPES.MSG_GRP_TIP]: (e3) => this.getEngine().TUIChat.messageHandler.handleGroupTipsMessage(e3) }, this._message = e2, this._signalingInfo = void 0, this.progress = 0, this.reactionList = [], this.initProperties(e2);
    }
    initProperties(e2) {
      Object.keys(e2).forEach((t2) => {
        y(t2) || (this[t2] = e2[t2]);
      });
    }
    updateProperties(e2) {
      this._message = e2, Object.keys(e2).forEach((t2) => {
        y(t2) || (this[t2] = e2[t2]);
      });
    }
    getMessage() {
      return this._message;
    }
    modifyMessage(e2) {
      return e2.type && this._message.type !== e2.type && !e2.payload ? Promise.reject({ code: h$2.MISMATCH_TYPE_AND_PAYLOAD, message: d$1.MISMATCH_TYPE_AND_PAYLOAD }) : (this._message.type = e2.type || this._message.type, this._message.payload = e2.payload || this._message.payload, this._message.cloudCustomData = e2.cloudCustomData || this._message.cloudCustomData, this.getEngine().TUIChat.modifyMessage(this._message));
    }
    revokeMessage() {
      return this.getEngine().TUIChat.revokeMessage(this._message);
    }
    resendMessage() {
      return this.getEngine().TUIChat.resendMessage(this._message);
    }
    deleteMessage() {
      return this.getEngine().TUIChat.deleteMessage([this._message]);
    }
    quoteMessage() {
      return this.getEngine().TUIChat.quoteMessage(this._message);
    }
    replyMessage() {
      return this.getEngine().TUIChat.replyMessage(this._message);
    }
    setMessageExtensions(e2) {
      return this.getEngine().TUIChat.setMessageExtensions(this._message, e2);
    }
    getMessageExtensions() {
      return this.getEngine().TUIChat.getMessageExtensions(this._message);
    }
    deleteMessageExtensions(e2) {
      return this.getEngine().TUIChat.deleteMessageExtensions(this._message, e2);
    }
    getSignalingInfo() {
      return this.type !== this.getEngine().TYPES.MSG_CUSTOM ? null : S$1(this._signalingInfo) ? (this._signalingInfo = this.getEngine().chat.getSignalingInfo(this._message), this._signalingInfo) : this._signalingInfo;
    }
    getMessageContent() {
      const e2 = this.messageHandlers[this.type];
      if (S$1(e2))
        return {};
      if (this.type === this.getEngine().TYPES.MSG_GRP_TIP)
        return e2(this._message);
      const t2 = this.getEngine().TUIFriend.getFriendRemark([this.from]);
      return Object.assign(Object.assign({}, e2(this._message)), { showName: t2[this.from] || this.nameCard || this.nick || this.from });
    }
    sendForwardMessage(e2) {
      return this.getEngine().TUIChat.sendForwardMessage(e2, [this._message]);
    }
  }
  class ce {
    constructor() {
      this.defaultStore = { messageList: [], isCompleted: false, nextReqMessageID: "", quoteMessage: {}, newMessageList: [], typingStatus: false, messageSource: void 0, translateTextInfo: void 0, voiceToTextInfo: void 0, userInfo: {} }, this.store = { messageList: [], isCompleted: false, nextReqMessageID: "", quoteMessage: {}, newMessageList: [], typingStatus: false, messageSource: void 0, translateTextInfo: void 0, voiceToTextInfo: void 0, userInfo: {} };
    }
    update(e2, t2) {
      switch (e2) {
        case "messageList":
          this.updateMessageList(t2);
          break;
        case "translateTextInfo":
          this.updateTranslateTextInfo(t2);
          break;
        case "voiceToTextInfo":
          this.updateVoiceToTextInfo(t2);
          break;
        default:
          this.store[e2] = t2;
      }
    }
    getData(e2) {
      return this.store[e2];
    }
    getModel(e2) {
      return this.store.messageList.find((t2) => t2.ID === e2);
    }
    reset(e2 = []) {
      const t2 = e2.filter((e3) => !x.includes(e3));
      this.store = Object.assign(Object.assign(Object.assign({}, this.defaultStore), this.store), null == t2 ? void 0 : t2.reduce((e3, t3) => Object.assign(Object.assign({}, e3), { [t3]: this.defaultStore[t3] }), {}));
    }
    updateMessageList(e2) {
      const t2 = [];
      e2.forEach((e3) => {
        let s2 = e3;
        e3 instanceof ue || (s2 = this.getModel(e3.ID), s2 ? s2.updateProperties(e3) : s2 = new ue(e3)), t2.push(s2);
      }), this.store.messageList = t2;
    }
    updateTranslateTextInfo(e2) {
      this.updateBykey("translateTextInfo", e2);
    }
    updateVoiceToTextInfo(e2) {
      this.updateBykey("voiceToTextInfo", e2);
    }
    updateBykey(e2, t2) {
      const { conversationID: s2, messageID: n2, visible: i2 = false } = t2;
      this.store[e2] || (this.store[e2] = /* @__PURE__ */ new Map()), this.store[e2].has(s2) || this.store[e2].set(s2, []);
      const r2 = this.store[e2].get(s2) || [];
      let a2 = true;
      for (let e3 = 0; e3 < r2.length; e3++)
        if (r2[e3].messageID === n2) {
          r2[e3].visible = i2, a2 = false;
          break;
        }
      a2 && r2.push({ messageID: n2, visible: i2 }), this.store[e2].set(s2, r2);
    }
  }
  class ge {
    constructor(e2) {
      this.groupAttributes = {}, this.groupCounters = {}, this.initProxy(e2);
    }
    initProxy(e2) {
      Object.keys(e2).forEach((t2) => {
        y(t2) || (this[t2] = e2[t2]);
      });
    }
  }
  class le {
    constructor() {
      this.defaultStore = { currentGroupID: "", currentGroup: {}, currentGroupAttributes: {}, currentGroupCounters: {}, currentGroupMemberList: [], groupList: [], groupSystemNoticeList: [] }, this.store = { currentGroupID: "", currentGroup: void 0, currentGroupAttributes: {}, currentGroupCounters: {}, currentGroupMemberList: [], groupList: [], groupSystemNoticeList: [] };
    }
    update(e2, t2) {
      switch (e2) {
        case "groupList":
          this.updateGroupList(t2);
          break;
        case "currentGroup":
          this.store.currentGroup = t2 instanceof ge ? t2 : new ge(t2);
          break;
        default:
          this.store[e2] = t2;
      }
    }
    getData(e2) {
      if ("groupSystemNoticeList" === e2) {
        const e3 = [...this.store.groupSystemNoticeList];
        return this.store.groupSystemNoticeList.length = 0, e3;
      }
      return this.store[e2];
    }
    reset(e2 = []) {
      this.store = Object.assign(Object.assign(Object.assign({}, this.defaultStore), this.store), e2.reduce((e3, t2) => Object.assign(Object.assign({}, e3), { [t2]: this.defaultStore[t2] }), {}));
    }
    updateGroupList(e2) {
      this.store.groupList = e2.map((e3) => e3 instanceof ge ? e3 : new ge(e3));
    }
  }
  class he {
    constructor() {
      this.store = {};
    }
    update(e2, t2) {
      this.store[e2] = t2;
    }
    getData(e2) {
      return this.store[e2];
    }
    reset(e2 = []) {
      0 === e2.length && (this.store = {}), this.store = Object.assign(Object.assign({}, this.store), e2.reduce((e3, t2) => Object.assign(Object.assign({}, e3), { [t2]: void 0 }), {}));
    }
  }
  class pe {
    constructor() {
      this.defaultStore = { friendList: [], friendApplicationList: [], friendApplicationUnreadCount: 0 }, this.store = { friendList: [], friendApplicationList: [], friendApplicationUnreadCount: 0 };
    }
    update(e2, t2) {
      this.store[e2] = t2;
    }
    getData(e2) {
      return this.store[e2];
    }
    reset(e2 = []) {
      this.store = Object.assign(Object.assign(Object.assign({}, this.defaultStore), this.store), e2.reduce((e3, t2) => Object.assign(Object.assign({}, e3), { [t2]: this.defaultStore[t2] }), {}));
    }
  }
  class de {
    constructor() {
      this.defaultStore = { currentSearchInputValue: { value: "", searchType: "global" }, currentSearchMessageType: { value: { key: "", label: "", value: "" }, searchType: "global" }, currentSearchMessageTime: { value: { key: "", label: "", value: { timePosition: 0, timePeriod: 0 } }, searchType: "global" }, currentSearchingStatus: { isSearching: false, searchType: "global" }, isShowInConversationSearch: false }, this.store = { currentSearchInputValue: { value: "", searchType: "global" }, currentSearchMessageType: { value: { key: "", label: "", value: "" }, searchType: "global" }, currentSearchMessageTime: { value: { key: "", label: "", value: { timePosition: 0, timePeriod: 0 } }, searchType: "global" }, currentSearchingStatus: { isSearching: false, searchType: "global" }, isShowInConversationSearch: false };
    }
    update(e2, t2) {
      this.store[e2] = t2;
    }
    getData(e2) {
      return this.store[e2];
    }
    reset(e2 = []) {
      this.store = Object.assign(Object.assign(Object.assign({}, this.defaultStore), this.store), null == e2 ? void 0 : e2.reduce((e3, t2) => Object.assign(Object.assign({}, e3), { [t2]: this.defaultStore[t2] }), {}));
    }
  }
  class fe {
    constructor() {
      this.storeMap = { [o$2.APP]: new te(), [o$2.USER]: new se(), [o$2.CONV]: new oe(), [o$2.CHAT]: new ce(), [o$2.GRP]: new le(), [o$2.FRIEND]: new pe(), [o$2.SEARCH]: new de() }, this.task = {};
    }
    static getInstance() {
      return fe.instance || (fe.instance = new fe()), fe.instance;
    }
    watch(e2, t2) {
      this.task[e2] || (this.task[e2] = {});
      const s2 = this.task[e2];
      Object.keys(t2).forEach((n2) => {
        const i2 = t2[n2];
        s2[n2] || (s2[n2] = /* @__PURE__ */ new Map()), s2[n2].set(i2, 1), this.notifyOnWatch(e2, n2, i2);
      });
    }
    unwatch(e2, t2) {
      if (!this.task[e2])
        return;
      const s2 = this.task[e2];
      Object.keys(t2).forEach((e3) => {
        var n2;
        null === (n2 = s2[e3]) || void 0 === n2 || n2.delete(t2[e3]);
      });
    }
    update(e2, t2, s2) {
      var n2;
      e2 !== o$2.CUSTOM || this.storeMap[e2] || (this.storeMap[e2] = new he()), null === (n2 = this.storeMap[e2]) || void 0 === n2 || n2.update(t2, s2), this.notify(e2, t2);
    }
    getData(e2, t2) {
      var s2;
      return e2 !== o$2.CUSTOM || this.storeMap[e2] || (this.storeMap[e2] = new he()), null === (s2 = this.storeMap[e2]) || void 0 === s2 ? void 0 : s2.getData(t2);
    }
    getConversationModel(e2) {
      var t2;
      return null === (t2 = this.storeMap[o$2.CONV]) || void 0 === t2 ? void 0 : t2.getModel(e2);
    }
    getMessageModel(e2) {
      var t2;
      return null === (t2 = this.storeMap[o$2.CHAT]) || void 0 === t2 ? void 0 : t2.getModel(e2);
    }
    reset(e2, t2 = [], s2 = false) {
      if (e2 in this.storeMap) {
        const n2 = this.storeMap[e2];
        0 === t2.length && (t2 = Object.keys(null == n2 ? void 0 : n2.store)), n2.reset(t2), s2 && t2.forEach((t3) => {
          this.notify(e2, t3);
        });
      }
    }
    notifyOnWatch(e2, t2, s2) {
      const n2 = this.getData(e2, t2);
      N$1.indexOf(t2) > -1 && 0 === n2.length || s2 && s2.call(this, n2);
    }
    notify(e2, t2) {
      if (!this.task[e2])
        return;
      const s2 = this.task[e2];
      if (s2[t2]) {
        const n2 = s2[t2], i2 = this.getData(e2, t2);
        for (const [e3] of n2.entries())
          e3.call(this, i2);
      }
    }
  }
  function me(e2) {
    return me = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function(e3) {
      return typeof e3;
    } : function(e3) {
      return e3 && "function" == typeof Symbol && e3.constructor === Symbol && e3 !== Symbol.prototype ? "symbol" : typeof e3;
    }, me(e2);
  }
  function ve(e2, t2) {
    if (!(e2 instanceof t2))
      throw new TypeError("Cannot call a class as a function");
  }
  function Te(e2) {
    var t2 = function(e3, t3) {
      if ("object" != me(e3) || !e3)
        return e3;
      var s2 = e3[Symbol.toPrimitive];
      if (void 0 !== s2) {
        var n2 = s2.call(e3, t3 || "default");
        if ("object" != me(n2))
          return n2;
        throw new TypeError("@@toPrimitive must return a primitive value.");
      }
      return ("string" === t3 ? String : Number)(e3);
    }(e2, "string");
    return "symbol" == me(t2) ? t2 : t2 + "";
  }
  function Ee(e2, t2) {
    for (var s2 = 0; s2 < t2.length; s2++) {
      var n2 = t2[s2];
      n2.enumerable = n2.enumerable || false, n2.configurable = true, "value" in n2 && (n2.writable = true), Object.defineProperty(e2, Te(n2.key), n2);
    }
  }
  function Ie(e2, t2, s2) {
    return t2 && Ee(e2.prototype, t2), s2 && Ee(e2, s2), Object.defineProperty(e2, "prototype", { writable: false }), e2;
  }
  function Se(e2) {
    if (void 0 === e2)
      throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
    return e2;
  }
  function ye(e2, t2) {
    return ye = Object.setPrototypeOf ? Object.setPrototypeOf.bind() : function(e3, t3) {
      return e3.__proto__ = t3, e3;
    }, ye(e2, t2);
  }
  function be(e2, t2) {
    if ("function" != typeof t2 && null !== t2)
      throw new TypeError("Super expression must either be null or a function");
    e2.prototype = Object.create(t2 && t2.prototype, { constructor: { value: e2, writable: true, configurable: true } }), Object.defineProperty(e2, "prototype", { writable: false }), t2 && ye(e2, t2);
  }
  function Ue(e2, t2) {
    if (t2 && ("object" == me(t2) || "function" == typeof t2))
      return t2;
    if (void 0 !== t2)
      throw new TypeError("Derived constructors may only return object or undefined");
    return Se(e2);
  }
  function Ce(e2) {
    return Ce = Object.setPrototypeOf ? Object.getPrototypeOf.bind() : function(e3) {
      return e3.__proto__ || Object.getPrototypeOf(e3);
    }, Ce(e2);
  }
  function Me(e2, t2, s2) {
    return (t2 = Te(t2)) in e2 ? Object.defineProperty(e2, t2, { value: s2, enumerable: true, configurable: true, writable: true }) : e2[t2] = s2, e2;
  }
  function Oe(e2, t2) {
    (null == t2 || t2 > e2.length) && (t2 = e2.length);
    for (var s2 = 0, n2 = Array(t2); s2 < t2; s2++)
      n2[s2] = e2[s2];
    return n2;
  }
  function _e(e2) {
    return function(e3) {
      if (Array.isArray(e3))
        return e3;
    }(e2) || function(e3) {
      if ("undefined" != typeof Symbol && null != e3[Symbol.iterator] || null != e3["@@iterator"])
        return Array.from(e3);
    }(e2) || function(e3, t2) {
      if (e3) {
        if ("string" == typeof e3)
          return Oe(e3, t2);
        var s2 = {}.toString.call(e3).slice(8, -1);
        return "Object" === s2 && e3.constructor && (s2 = e3.constructor.name), "Map" === s2 || "Set" === s2 ? Array.from(e3) : "Arguments" === s2 || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(s2) ? Oe(e3, t2) : void 0;
      }
    }(e2) || function() {
      throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.");
    }();
  }
  function De(e2, t2) {
    var s2 = Object.keys(e2);
    if (Object.getOwnPropertySymbols) {
      var n2 = Object.getOwnPropertySymbols(e2);
      t2 && (n2 = n2.filter(function(t3) {
        return Object.getOwnPropertyDescriptor(e2, t3).enumerable;
      })), s2.push.apply(s2, n2);
    }
    return s2;
  }
  function Pe(e2) {
    for (var t2 = 1; t2 < arguments.length; t2++) {
      var s2 = null != arguments[t2] ? arguments[t2] : {};
      t2 % 2 ? De(Object(s2), true).forEach(function(t3) {
        Me(e2, t3, s2[t3]);
      }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e2, Object.getOwnPropertyDescriptors(s2)) : De(Object(s2)).forEach(function(t3) {
        Object.defineProperty(e2, t3, Object.getOwnPropertyDescriptor(s2, t3));
      });
    }
    return e2;
  }
  var Re = { type: "logger", log: function(e2) {
    this.output("log", e2);
  }, warn: function(e2) {
    this.output("warn", e2);
  }, error: function(e2) {
    this.output("error", e2);
  }, output: function(e2, t2) {
    console && console[e2] && console[e2].apply(console, t2);
  } }, Le = new (function() {
    function e2(t2) {
      var s2 = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : {};
      ve(this, e2), this.init(t2, s2);
    }
    return Ie(e2, [{ key: "init", value: function(e3) {
      var t2 = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : {};
      this.prefix = t2.prefix || "i18next:", this.logger = e3 || Re, this.options = t2, this.debug = t2.debug;
    } }, { key: "setDebug", value: function(e3) {
      this.debug = e3;
    } }, { key: "log", value: function() {
      for (var e3 = arguments.length, t2 = new Array(e3), s2 = 0; s2 < e3; s2++)
        t2[s2] = arguments[s2];
      return this.forward(t2, "log", "", true);
    } }, { key: "warn", value: function() {
      for (var e3 = arguments.length, t2 = new Array(e3), s2 = 0; s2 < e3; s2++)
        t2[s2] = arguments[s2];
      return this.forward(t2, "warn", "", true);
    } }, { key: "error", value: function() {
      for (var e3 = arguments.length, t2 = new Array(e3), s2 = 0; s2 < e3; s2++)
        t2[s2] = arguments[s2];
      return this.forward(t2, "error", "");
    } }, { key: "deprecate", value: function() {
      for (var e3 = arguments.length, t2 = new Array(e3), s2 = 0; s2 < e3; s2++)
        t2[s2] = arguments[s2];
      return this.forward(t2, "warn", "WARNING DEPRECATED: ", true);
    } }, { key: "forward", value: function(e3, t2, s2, n2) {
      return n2 && !this.debug ? null : ("string" == typeof e3[0] && (e3[0] = "".concat(s2).concat(this.prefix, " ").concat(e3[0])), this.logger[t2](e3));
    } }, { key: "create", value: function(t2) {
      return new e2(this.logger, Pe(Pe({}, { prefix: "".concat(this.prefix, ":").concat(t2, ":") }), this.options));
    } }, { key: "clone", value: function(t2) {
      return (t2 = t2 || this.options).prefix = t2.prefix || this.prefix, new e2(this.logger, t2);
    } }]), e2;
  }())(), Ae = function() {
    function e2() {
      ve(this, e2), this.observers = {};
    }
    return Ie(e2, [{ key: "on", value: function(e3, t2) {
      var s2 = this;
      return e3.split(" ").forEach(function(e4) {
        s2.observers[e4] = s2.observers[e4] || [], s2.observers[e4].push(t2);
      }), this;
    } }, { key: "off", value: function(e3, t2) {
      this.observers[e3] && (t2 ? this.observers[e3] = this.observers[e3].filter(function(e4) {
        return e4 !== t2;
      }) : delete this.observers[e3]);
    } }, { key: "emit", value: function(e3) {
      for (var t2 = arguments.length, s2 = new Array(t2 > 1 ? t2 - 1 : 0), n2 = 1; n2 < t2; n2++)
        s2[n2 - 1] = arguments[n2];
      this.observers[e3] && [].concat(this.observers[e3]).forEach(function(e4) {
        e4.apply(void 0, s2);
      });
      this.observers["*"] && [].concat(this.observers["*"]).forEach(function(t3) {
        t3.apply(t3, [e3].concat(s2));
      });
    } }]), e2;
  }();
  function je() {
    var e2, t2, s2 = new Promise(function(s3, n2) {
      e2 = s3, t2 = n2;
    });
    return s2.resolve = e2, s2.reject = t2, s2;
  }
  function ke(e2) {
    return null == e2 ? "" : "" + e2;
  }
  function Ne(e2, t2, s2) {
    function n2(e3) {
      return e3 && e3.indexOf("###") > -1 ? e3.replace(/###/g, ".") : e3;
    }
    function i2() {
      return !e2 || "string" == typeof e2;
    }
    for (var r2 = "string" != typeof t2 ? [].concat(t2) : t2.split("."); r2.length > 1; ) {
      if (i2())
        return {};
      var a2 = n2(r2.shift());
      !e2[a2] && s2 && (e2[a2] = new s2()), e2 = Object.prototype.hasOwnProperty.call(e2, a2) ? e2[a2] : {};
    }
    return i2() ? {} : { obj: e2, k: n2(r2.shift()) };
  }
  function xe(e2, t2, s2) {
    var n2 = Ne(e2, t2, Object);
    n2.obj[n2.k] = s2;
  }
  function Ge(e2, t2) {
    var s2 = Ne(e2, t2), n2 = s2.obj, i2 = s2.k;
    if (n2)
      return n2[i2];
  }
  function we(e2, t2, s2) {
    for (var n2 in t2)
      "__proto__" !== n2 && "constructor" !== n2 && (n2 in e2 ? "string" == typeof e2[n2] || e2[n2] instanceof String || "string" == typeof t2[n2] || t2[n2] instanceof String ? s2 && (e2[n2] = t2[n2]) : we(e2[n2], t2[n2], s2) : e2[n2] = t2[n2]);
    return e2;
  }
  function Ve(e2) {
    return e2.replace(/[\-\[\]\/\{\}\(\)\*\+\?\.\\\^\$\|]/g, "\\$&");
  }
  var Fe = { "&": "&amp;", "<": "&lt;", ">": "&gt;", '"': "&quot;", "'": "&#39;", "/": "&#x2F;" };
  function $e(e2) {
    return "string" == typeof e2 ? e2.replace(/[&<>"'\/]/g, function(e3) {
      return Fe[e3];
    }) : e2;
  }
  var He = "undefined" != typeof window && window.navigator && void 0 === window.navigator.userAgentData && window.navigator.userAgent && window.navigator.userAgent.indexOf("MSIE") > -1, Ye = [" ", ",", "?", "!", ";"];
  function Be(e2, t2) {
    var s2 = arguments.length > 2 && void 0 !== arguments[2] ? arguments[2] : ".";
    if (e2) {
      if (e2[t2])
        return e2[t2];
      for (var n2 = t2.split(s2), i2 = e2, r2 = 0; r2 < n2.length; ++r2) {
        if (!i2)
          return;
        if ("string" == typeof i2[n2[r2]] && r2 + 1 < n2.length)
          return;
        if (void 0 === i2[n2[r2]]) {
          for (var a2 = 2, o2 = n2.slice(r2, r2 + a2).join(s2), u2 = i2[o2]; void 0 === u2 && n2.length > r2 + a2; )
            a2++, u2 = i2[o2 = n2.slice(r2, r2 + a2).join(s2)];
          if (void 0 === u2)
            return;
          if (null === u2)
            return null;
          if (t2.endsWith(o2)) {
            if ("string" == typeof u2)
              return u2;
            if (o2 && "string" == typeof u2[o2])
              return u2[o2];
          }
          var c2 = n2.slice(r2 + a2).join(s2);
          return c2 ? Be(u2, c2, s2) : void 0;
        }
        i2 = i2[n2[r2]];
      }
      return i2;
    }
  }
  function Ke(e2, t2) {
    var s2 = Object.keys(e2);
    if (Object.getOwnPropertySymbols) {
      var n2 = Object.getOwnPropertySymbols(e2);
      t2 && (n2 = n2.filter(function(t3) {
        return Object.getOwnPropertyDescriptor(e2, t3).enumerable;
      })), s2.push.apply(s2, n2);
    }
    return s2;
  }
  function qe(e2) {
    for (var t2 = 1; t2 < arguments.length; t2++) {
      var s2 = null != arguments[t2] ? arguments[t2] : {};
      t2 % 2 ? Ke(Object(s2), true).forEach(function(t3) {
        Me(e2, t3, s2[t3]);
      }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e2, Object.getOwnPropertyDescriptors(s2)) : Ke(Object(s2)).forEach(function(t3) {
        Object.defineProperty(e2, t3, Object.getOwnPropertyDescriptor(s2, t3));
      });
    }
    return e2;
  }
  function ze(e2) {
    var t2 = function() {
      if ("undefined" == typeof Reflect || !Reflect.construct)
        return false;
      if (Reflect.construct.sham)
        return false;
      if ("function" == typeof Proxy)
        return true;
      try {
        return Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function() {
        })), true;
      } catch (e3) {
        return false;
      }
    }();
    return function() {
      var s2, n2 = Ce(e2);
      if (t2) {
        var i2 = Ce(this).constructor;
        s2 = Reflect.construct(n2, arguments, i2);
      } else
        s2 = n2.apply(this, arguments);
      return Ue(this, s2);
    };
  }
  var Je = function() {
    be(t2, Ae);
    var e2 = ze(t2);
    function t2(s2) {
      var n2, i2 = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : { ns: ["translation"], defaultNS: "translation" };
      return ve(this, t2), n2 = e2.call(this), He && Ae.call(Se(n2)), n2.data = s2 || {}, n2.options = i2, void 0 === n2.options.keySeparator && (n2.options.keySeparator = "."), void 0 === n2.options.ignoreJSONStructure && (n2.options.ignoreJSONStructure = true), n2;
    }
    return Ie(t2, [{ key: "addNamespaces", value: function(e3) {
      this.options.ns.indexOf(e3) < 0 && this.options.ns.push(e3);
    } }, { key: "removeNamespaces", value: function(e3) {
      var t3 = this.options.ns.indexOf(e3);
      t3 > -1 && this.options.ns.splice(t3, 1);
    } }, { key: "getResource", value: function(e3, t3, s2) {
      var n2 = arguments.length > 3 && void 0 !== arguments[3] ? arguments[3] : {}, i2 = void 0 !== n2.keySeparator ? n2.keySeparator : this.options.keySeparator, r2 = void 0 !== n2.ignoreJSONStructure ? n2.ignoreJSONStructure : this.options.ignoreJSONStructure, a2 = [e3, t3];
      s2 && "string" != typeof s2 && (a2 = a2.concat(s2)), s2 && "string" == typeof s2 && (a2 = a2.concat(i2 ? s2.split(i2) : s2)), e3.indexOf(".") > -1 && (a2 = e3.split("."));
      var o2 = Ge(this.data, a2);
      return o2 || !r2 || "string" != typeof s2 ? o2 : Be(this.data && this.data[e3] && this.data[e3][t3], s2, i2);
    } }, { key: "addResource", value: function(e3, t3, s2, n2) {
      var i2 = arguments.length > 4 && void 0 !== arguments[4] ? arguments[4] : { silent: false }, r2 = void 0 !== i2.keySeparator ? i2.keySeparator : this.options.keySeparator, a2 = [e3, t3];
      s2 && (a2 = a2.concat(r2 ? s2.split(r2) : s2)), e3.indexOf(".") > -1 && (n2 = t3, t3 = (a2 = e3.split("."))[1]), this.addNamespaces(t3), xe(this.data, a2, n2), i2.silent || this.emit("added", e3, t3, s2, n2);
    } }, { key: "addResources", value: function(e3, t3, s2) {
      var n2 = arguments.length > 3 && void 0 !== arguments[3] ? arguments[3] : { silent: false };
      for (var i2 in s2)
        "string" != typeof s2[i2] && "[object Array]" !== Object.prototype.toString.apply(s2[i2]) || this.addResource(e3, t3, i2, s2[i2], { silent: true });
      n2.silent || this.emit("added", e3, t3, s2);
    } }, { key: "addResourceBundle", value: function(e3, t3, s2, n2, i2) {
      var r2 = arguments.length > 5 && void 0 !== arguments[5] ? arguments[5] : { silent: false }, a2 = [e3, t3];
      e3.indexOf(".") > -1 && (n2 = s2, s2 = t3, t3 = (a2 = e3.split("."))[1]), this.addNamespaces(t3);
      var o2 = Ge(this.data, a2) || {};
      n2 ? we(o2, s2, i2) : o2 = qe(qe({}, o2), s2), xe(this.data, a2, o2), r2.silent || this.emit("added", e3, t3, s2);
    } }, { key: "removeResourceBundle", value: function(e3, t3) {
      this.hasResourceBundle(e3, t3) && delete this.data[e3][t3], this.removeNamespaces(t3), this.emit("removed", e3, t3);
    } }, { key: "hasResourceBundle", value: function(e3, t3) {
      return void 0 !== this.getResource(e3, t3);
    } }, { key: "getResourceBundle", value: function(e3, t3) {
      return t3 || (t3 = this.options.defaultNS), "v1" === this.options.compatibilityAPI ? qe(qe({}, {}), this.getResource(e3, t3)) : this.getResource(e3, t3);
    } }, { key: "getDataByLanguage", value: function(e3) {
      return this.data[e3];
    } }, { key: "hasLanguageSomeTranslations", value: function(e3) {
      var t3 = this.getDataByLanguage(e3);
      return !!(t3 && Object.keys(t3) || []).find(function(e4) {
        return t3[e4] && Object.keys(t3[e4]).length > 0;
      });
    } }, { key: "toJSON", value: function() {
      return this.data;
    } }]), t2;
  }(), We = { processors: {}, addPostProcessor: function(e2) {
    this.processors[e2.name] = e2;
  }, handle: function(e2, t2, s2, n2, i2) {
    var r2 = this;
    return e2.forEach(function(e3) {
      r2.processors[e3] && (t2 = r2.processors[e3].process(t2, s2, n2, i2));
    }), t2;
  } };
  function Xe(e2, t2) {
    var s2 = Object.keys(e2);
    if (Object.getOwnPropertySymbols) {
      var n2 = Object.getOwnPropertySymbols(e2);
      t2 && (n2 = n2.filter(function(t3) {
        return Object.getOwnPropertyDescriptor(e2, t3).enumerable;
      })), s2.push.apply(s2, n2);
    }
    return s2;
  }
  function Ze(e2) {
    for (var t2 = 1; t2 < arguments.length; t2++) {
      var s2 = null != arguments[t2] ? arguments[t2] : {};
      t2 % 2 ? Xe(Object(s2), true).forEach(function(t3) {
        Me(e2, t3, s2[t3]);
      }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e2, Object.getOwnPropertyDescriptors(s2)) : Xe(Object(s2)).forEach(function(t3) {
        Object.defineProperty(e2, t3, Object.getOwnPropertyDescriptor(s2, t3));
      });
    }
    return e2;
  }
  function Qe(e2) {
    var t2 = function() {
      if ("undefined" == typeof Reflect || !Reflect.construct)
        return false;
      if (Reflect.construct.sham)
        return false;
      if ("function" == typeof Proxy)
        return true;
      try {
        return Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function() {
        })), true;
      } catch (e3) {
        return false;
      }
    }();
    return function() {
      var s2, n2 = Ce(e2);
      if (t2) {
        var i2 = Ce(this).constructor;
        s2 = Reflect.construct(n2, arguments, i2);
      } else
        s2 = n2.apply(this, arguments);
      return Ue(this, s2);
    };
  }
  var et = {}, tt$1 = function() {
    be(t2, Ae);
    var e2 = Qe(t2);
    function t2(s2) {
      var n2, i2, r2, a2, o2 = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : {};
      return ve(this, t2), n2 = e2.call(this), He && Ae.call(Se(n2)), i2 = ["resourceStore", "languageUtils", "pluralResolver", "interpolator", "backendConnector", "i18nFormat", "utils"], r2 = s2, a2 = Se(n2), i2.forEach(function(e3) {
        r2[e3] && (a2[e3] = r2[e3]);
      }), n2.options = o2, void 0 === n2.options.keySeparator && (n2.options.keySeparator = "."), n2.logger = Le.create("translator"), n2;
    }
    return Ie(t2, [{ key: "changeLanguage", value: function(e3) {
      e3 && (this.language = e3);
    } }, { key: "exists", value: function(e3) {
      var t3 = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : { interpolation: {} };
      if (null == e3)
        return false;
      var s2 = this.resolve(e3, t3);
      return s2 && void 0 !== s2.res;
    } }, { key: "extractFromKey", value: function(e3, t3) {
      var s2 = void 0 !== t3.nsSeparator ? t3.nsSeparator : this.options.nsSeparator;
      void 0 === s2 && (s2 = ":");
      var n2 = void 0 !== t3.keySeparator ? t3.keySeparator : this.options.keySeparator, i2 = t3.ns || this.options.defaultNS || [], r2 = s2 && e3.indexOf(s2) > -1, a2 = !(this.options.userDefinedKeySeparator || t3.keySeparator || this.options.userDefinedNsSeparator || t3.nsSeparator || function(e4, t4, s3) {
        t4 = t4 || "", s3 = s3 || "";
        var n3 = Ye.filter(function(e5) {
          return t4.indexOf(e5) < 0 && s3.indexOf(e5) < 0;
        });
        if (0 === n3.length)
          return true;
        var i3 = new RegExp("(".concat(n3.map(function(e5) {
          return "?" === e5 ? "\\?" : e5;
        }).join("|"), ")")), r3 = !i3.test(e4);
        if (!r3) {
          var a3 = e4.indexOf(s3);
          a3 > 0 && !i3.test(e4.substring(0, a3)) && (r3 = true);
        }
        return r3;
      }(e3, s2, n2));
      if (r2 && !a2) {
        var o2 = e3.match(this.interpolator.nestingRegexp);
        if (o2 && o2.length > 0)
          return { key: e3, namespaces: i2 };
        var u2 = e3.split(s2);
        (s2 !== n2 || s2 === n2 && this.options.ns.indexOf(u2[0]) > -1) && (i2 = u2.shift()), e3 = u2.join(n2);
      }
      return "string" == typeof i2 && (i2 = [i2]), { key: e3, namespaces: i2 };
    } }, { key: "translate", value: function(e3, s2, n2) {
      var i2 = this;
      if ("object" !== me(s2) && this.options.overloadTranslationOptionHandler && (s2 = this.options.overloadTranslationOptionHandler(arguments)), "object" === me(s2) && (s2 = Ze({}, s2)), s2 || (s2 = {}), null == e3)
        return "";
      Array.isArray(e3) || (e3 = [String(e3)]);
      var r2 = void 0 !== s2.returnDetails ? s2.returnDetails : this.options.returnDetails, a2 = void 0 !== s2.keySeparator ? s2.keySeparator : this.options.keySeparator, o2 = this.extractFromKey(e3[e3.length - 1], s2), u2 = o2.key, c2 = o2.namespaces, g2 = c2[c2.length - 1], l2 = s2.lng || this.language, h2 = s2.appendNamespaceToCIMode || this.options.appendNamespaceToCIMode;
      if (l2 && "cimode" === l2.toLowerCase()) {
        if (h2) {
          var p2 = s2.nsSeparator || this.options.nsSeparator;
          return r2 ? { res: "".concat(g2).concat(p2).concat(u2), usedKey: u2, exactUsedKey: u2, usedLng: l2, usedNS: g2 } : "".concat(g2).concat(p2).concat(u2);
        }
        return r2 ? { res: u2, usedKey: u2, exactUsedKey: u2, usedLng: l2, usedNS: g2 } : u2;
      }
      var d2 = this.resolve(e3, s2), f2 = d2 && d2.res, m2 = d2 && d2.usedKey || u2, v2 = d2 && d2.exactUsedKey || u2, T2 = Object.prototype.toString.apply(f2), E2 = void 0 !== s2.joinArrays ? s2.joinArrays : this.options.joinArrays, I2 = !this.i18nFormat || this.i18nFormat.handleAsObject;
      if (I2 && f2 && ("string" != typeof f2 && "boolean" != typeof f2 && "number" != typeof f2) && ["[object Number]", "[object Function]", "[object RegExp]"].indexOf(T2) < 0 && ("string" != typeof E2 || "[object Array]" !== T2)) {
        if (!s2.returnObjects && !this.options.returnObjects) {
          this.options.returnedObjectHandler || this.logger.warn("accessing an object - but returnObjects options is not enabled!");
          var S2 = this.options.returnedObjectHandler ? this.options.returnedObjectHandler(m2, f2, Ze(Ze({}, s2), {}, { ns: c2 })) : "key '".concat(u2, " (").concat(this.language, ")' returned an object instead of string.");
          return r2 ? (d2.res = S2, d2) : S2;
        }
        if (a2) {
          var y2 = "[object Array]" === T2, b2 = y2 ? [] : {}, U2 = y2 ? v2 : m2;
          for (var C2 in f2)
            if (Object.prototype.hasOwnProperty.call(f2, C2)) {
              var M2 = "".concat(U2).concat(a2).concat(C2);
              b2[C2] = this.translate(M2, Ze(Ze({}, s2), { joinArrays: false, ns: c2 })), b2[C2] === M2 && (b2[C2] = f2[C2]);
            }
          f2 = b2;
        }
      } else if (I2 && "string" == typeof E2 && "[object Array]" === T2)
        (f2 = f2.join(E2)) && (f2 = this.extendTranslation(f2, e3, s2, n2));
      else {
        var O2 = false, _2 = false, D2 = void 0 !== s2.count && "string" != typeof s2.count, P2 = t2.hasDefaultValue(s2), R2 = D2 ? this.pluralResolver.getSuffix(l2, s2.count, s2) : "", L2 = s2["defaultValue".concat(R2)] || s2.defaultValue;
        !this.isValidLookup(f2) && P2 && (O2 = true, f2 = L2), this.isValidLookup(f2) || (_2 = true, f2 = u2);
        var A2 = (s2.missingKeyNoValueFallbackToKey || this.options.missingKeyNoValueFallbackToKey) && _2 ? void 0 : f2, j2 = P2 && L2 !== f2 && this.options.updateMissing;
        if (_2 || O2 || j2) {
          if (this.logger.log(j2 ? "updateKey" : "missingKey", l2, g2, u2, j2 ? L2 : f2), a2) {
            var k2 = this.resolve(u2, Ze(Ze({}, s2), {}, { keySeparator: false }));
            k2 && k2.res && this.logger.warn("Seems the loaded translations were in flat JSON format instead of nested. Either set keySeparator: false on init or make sure your translations are published in nested format.");
          }
          var N2 = [], x2 = this.languageUtils.getFallbackCodes(this.options.fallbackLng, s2.lng || this.language);
          if ("fallback" === this.options.saveMissingTo && x2 && x2[0])
            for (var G2 = 0; G2 < x2.length; G2++)
              N2.push(x2[G2]);
          else
            "all" === this.options.saveMissingTo ? N2 = this.languageUtils.toResolveHierarchy(s2.lng || this.language) : N2.push(s2.lng || this.language);
          var w2 = function(e4, t3, n3) {
            var r3 = P2 && n3 !== f2 ? n3 : A2;
            i2.options.missingKeyHandler ? i2.options.missingKeyHandler(e4, g2, t3, r3, j2, s2) : i2.backendConnector && i2.backendConnector.saveMissing && i2.backendConnector.saveMissing(e4, g2, t3, r3, j2, s2), i2.emit("missingKey", e4, g2, t3, f2);
          };
          this.options.saveMissing && (this.options.saveMissingPlurals && D2 ? N2.forEach(function(e4) {
            i2.pluralResolver.getSuffixes(e4, s2).forEach(function(t3) {
              w2([e4], u2 + t3, s2["defaultValue".concat(t3)] || L2);
            });
          }) : w2(N2, u2, L2));
        }
        f2 = this.extendTranslation(f2, e3, s2, d2, n2), _2 && f2 === u2 && this.options.appendNamespaceToMissingKey && (f2 = "".concat(g2, ":").concat(u2)), (_2 || O2) && this.options.parseMissingKeyHandler && (f2 = "v1" !== this.options.compatibilityAPI ? this.options.parseMissingKeyHandler(this.options.appendNamespaceToMissingKey ? "".concat(g2, ":").concat(u2) : u2, O2 ? f2 : void 0) : this.options.parseMissingKeyHandler(f2));
      }
      return r2 ? (d2.res = f2, d2) : f2;
    } }, { key: "extendTranslation", value: function(e3, t3, s2, n2, i2) {
      var r2 = this;
      if (this.i18nFormat && this.i18nFormat.parse)
        e3 = this.i18nFormat.parse(e3, Ze(Ze({}, this.options.interpolation.defaultVariables), s2), n2.usedLng, n2.usedNS, n2.usedKey, { resolved: n2 });
      else if (!s2.skipInterpolation) {
        s2.interpolation && this.interpolator.init(Ze(Ze({}, s2), { interpolation: Ze(Ze({}, this.options.interpolation), s2.interpolation) }));
        var a2, o2 = "string" == typeof e3 && (s2 && s2.interpolation && void 0 !== s2.interpolation.skipOnVariables ? s2.interpolation.skipOnVariables : this.options.interpolation.skipOnVariables);
        if (o2) {
          var u2 = e3.match(this.interpolator.nestingRegexp);
          a2 = u2 && u2.length;
        }
        var c2 = s2.replace && "string" != typeof s2.replace ? s2.replace : s2;
        if (this.options.interpolation.defaultVariables && (c2 = Ze(Ze({}, this.options.interpolation.defaultVariables), c2)), e3 = this.interpolator.interpolate(e3, c2, s2.lng || this.language, s2), o2) {
          var g2 = e3.match(this.interpolator.nestingRegexp);
          a2 < (g2 && g2.length) && (s2.nest = false);
        }
        !s2.lng && "v1" !== this.options.compatibilityAPI && n2 && n2.res && (s2.lng = n2.usedLng), false !== s2.nest && (e3 = this.interpolator.nest(e3, function() {
          for (var e4 = arguments.length, n3 = new Array(e4), a3 = 0; a3 < e4; a3++)
            n3[a3] = arguments[a3];
          return i2 && i2[0] === n3[0] && !s2.context ? (r2.logger.warn("It seems you are nesting recursively key: ".concat(n3[0], " in key: ").concat(t3[0])), null) : r2.translate.apply(r2, n3.concat([t3]));
        }, s2)), s2.interpolation && this.interpolator.reset();
      }
      var l2 = s2.postProcess || this.options.postProcess, h2 = "string" == typeof l2 ? [l2] : l2;
      return null != e3 && h2 && h2.length && false !== s2.applyPostProcessor && (e3 = We.handle(h2, e3, t3, this.options && this.options.postProcessPassResolved ? Ze({ i18nResolved: n2 }, s2) : s2, this)), e3;
    } }, { key: "resolve", value: function(e3) {
      var t3, s2, n2, i2, r2, a2 = this, o2 = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : {};
      return "string" == typeof e3 && (e3 = [e3]), e3.forEach(function(e4) {
        if (!a2.isValidLookup(t3)) {
          var u2 = a2.extractFromKey(e4, o2), c2 = u2.key;
          s2 = c2;
          var g2 = u2.namespaces;
          a2.options.fallbackNS && (g2 = g2.concat(a2.options.fallbackNS));
          var l2 = void 0 !== o2.count && "string" != typeof o2.count, h2 = l2 && !o2.ordinal && 0 === o2.count && a2.pluralResolver.shouldUseIntlApi(), p2 = void 0 !== o2.context && ("string" == typeof o2.context || "number" == typeof o2.context) && "" !== o2.context, d2 = o2.lngs ? o2.lngs : a2.languageUtils.toResolveHierarchy(o2.lng || a2.language, o2.fallbackLng);
          g2.forEach(function(e5) {
            a2.isValidLookup(t3) || (r2 = e5, !et["".concat(d2[0], "-").concat(e5)] && a2.utils && a2.utils.hasLoadedNamespace && !a2.utils.hasLoadedNamespace(r2) && (et["".concat(d2[0], "-").concat(e5)] = true, a2.logger.warn('key "'.concat(s2, '" for languages "').concat(d2.join(", "), `" won't get resolved as namespace "`).concat(r2, '" was not yet loaded'), "This means something IS WRONG in your setup. You access the t function before i18next.init / i18next.loadNamespace / i18next.changeLanguage was done. Wait for the callback or Promise to resolve before accessing it!!!")), d2.forEach(function(s3) {
              if (!a2.isValidLookup(t3)) {
                i2 = s3;
                var r3, u3 = [c2];
                if (a2.i18nFormat && a2.i18nFormat.addLookupKeys)
                  a2.i18nFormat.addLookupKeys(u3, c2, s3, e5, o2);
                else {
                  var g3;
                  l2 && (g3 = a2.pluralResolver.getSuffix(s3, o2.count, o2));
                  var d3 = "".concat(a2.options.pluralSeparator, "zero");
                  if (l2 && (u3.push(c2 + g3), h2 && u3.push(c2 + d3)), p2) {
                    var f2 = "".concat(c2).concat(a2.options.contextSeparator).concat(o2.context);
                    u3.push(f2), l2 && (u3.push(f2 + g3), h2 && u3.push(f2 + d3));
                  }
                }
                for (; r3 = u3.pop(); )
                  a2.isValidLookup(t3) || (n2 = r3, t3 = a2.getResource(s3, e5, r3, o2));
              }
            }));
          });
        }
      }), { res: t3, usedKey: s2, exactUsedKey: n2, usedLng: i2, usedNS: r2 };
    } }, { key: "isValidLookup", value: function(e3) {
      return !(void 0 === e3 || !this.options.returnNull && null === e3 || !this.options.returnEmptyString && "" === e3);
    } }, { key: "getResource", value: function(e3, t3, s2) {
      var n2 = arguments.length > 3 && void 0 !== arguments[3] ? arguments[3] : {};
      return this.i18nFormat && this.i18nFormat.getResource ? this.i18nFormat.getResource(e3, t3, s2, n2) : this.resourceStore.getResource(e3, t3, s2, n2);
    } }], [{ key: "hasDefaultValue", value: function(e3) {
      var t3 = "defaultValue";
      for (var s2 in e3)
        if (Object.prototype.hasOwnProperty.call(e3, s2) && t3 === s2.substring(0, 12) && void 0 !== e3[s2])
          return true;
      return false;
    } }]), t2;
  }();
  function st(e2) {
    return e2.charAt(0).toUpperCase() + e2.slice(1);
  }
  var nt = function() {
    function e2(t2) {
      ve(this, e2), this.options = t2, this.supportedLngs = this.options.supportedLngs || false, this.logger = Le.create("languageUtils");
    }
    return Ie(e2, [{ key: "getScriptPartFromCode", value: function(e3) {
      if (!e3 || e3.indexOf("-") < 0)
        return null;
      var t2 = e3.split("-");
      return 2 === t2.length ? null : (t2.pop(), "x" === t2[t2.length - 1].toLowerCase() ? null : this.formatLanguageCode(t2.join("-")));
    } }, { key: "getLanguagePartFromCode", value: function(e3) {
      if (!e3 || e3.indexOf("-") < 0)
        return e3;
      var t2 = e3.split("-");
      return this.formatLanguageCode(t2[0]);
    } }, { key: "formatLanguageCode", value: function(e3) {
      if ("string" == typeof e3 && e3.indexOf("-") > -1) {
        var t2 = ["hans", "hant", "latn", "cyrl", "cans", "mong", "arab"], s2 = e3.split("-");
        return this.options.lowerCaseLng ? s2 = s2.map(function(e4) {
          return e4.toLowerCase();
        }) : 2 === s2.length ? (s2[0] = s2[0].toLowerCase(), s2[1] = s2[1].toUpperCase(), t2.indexOf(s2[1].toLowerCase()) > -1 && (s2[1] = st(s2[1].toLowerCase()))) : 3 === s2.length && (s2[0] = s2[0].toLowerCase(), 2 === s2[1].length && (s2[1] = s2[1].toUpperCase()), "sgn" !== s2[0] && 2 === s2[2].length && (s2[2] = s2[2].toUpperCase()), t2.indexOf(s2[1].toLowerCase()) > -1 && (s2[1] = st(s2[1].toLowerCase())), t2.indexOf(s2[2].toLowerCase()) > -1 && (s2[2] = st(s2[2].toLowerCase()))), s2.join("-");
      }
      return this.options.cleanCode || this.options.lowerCaseLng ? e3.toLowerCase() : e3;
    } }, { key: "isSupportedCode", value: function(e3) {
      return ("languageOnly" === this.options.load || this.options.nonExplicitSupportedLngs) && (e3 = this.getLanguagePartFromCode(e3)), !this.supportedLngs || !this.supportedLngs.length || this.supportedLngs.indexOf(e3) > -1;
    } }, { key: "getBestMatchFromCodes", value: function(e3) {
      var t2, s2 = this;
      return e3 ? (e3.forEach(function(e4) {
        if (!t2) {
          var n2 = s2.formatLanguageCode(e4);
          s2.options.supportedLngs && !s2.isSupportedCode(n2) || (t2 = n2);
        }
      }), !t2 && this.options.supportedLngs && e3.forEach(function(e4) {
        if (!t2) {
          var n2 = s2.getLanguagePartFromCode(e4);
          if (s2.isSupportedCode(n2))
            return t2 = n2;
          t2 = s2.options.supportedLngs.find(function(e5) {
            return e5 === n2 ? e5 : e5.indexOf("-") < 0 && n2.indexOf("-") < 0 ? void 0 : 0 === e5.indexOf(n2) ? e5 : void 0;
          });
        }
      }), t2 || (t2 = this.getFallbackCodes(this.options.fallbackLng)[0]), t2) : null;
    } }, { key: "getFallbackCodes", value: function(e3, t2) {
      if (!e3)
        return [];
      if ("function" == typeof e3 && (e3 = e3(t2)), "string" == typeof e3 && (e3 = [e3]), "[object Array]" === Object.prototype.toString.apply(e3))
        return e3;
      if (!t2)
        return e3.default || [];
      var s2 = e3[t2];
      return s2 || (s2 = e3[this.getScriptPartFromCode(t2)]), s2 || (s2 = e3[this.formatLanguageCode(t2)]), s2 || (s2 = e3[this.getLanguagePartFromCode(t2)]), s2 || (s2 = e3.default), s2 || [];
    } }, { key: "toResolveHierarchy", value: function(e3, t2) {
      var s2 = this, n2 = this.getFallbackCodes(t2 || this.options.fallbackLng || [], e3), i2 = [], r2 = function(e4) {
        e4 && (s2.isSupportedCode(e4) ? i2.push(e4) : s2.logger.warn("rejecting language code not found in supportedLngs: ".concat(e4)));
      };
      return "string" == typeof e3 && e3.indexOf("-") > -1 ? ("languageOnly" !== this.options.load && r2(this.formatLanguageCode(e3)), "languageOnly" !== this.options.load && "currentOnly" !== this.options.load && r2(this.getScriptPartFromCode(e3)), "currentOnly" !== this.options.load && r2(this.getLanguagePartFromCode(e3))) : "string" == typeof e3 && r2(this.formatLanguageCode(e3)), n2.forEach(function(e4) {
        i2.indexOf(e4) < 0 && r2(s2.formatLanguageCode(e4));
      }), i2;
    } }]), e2;
  }(), it = [{ lngs: ["ach", "ak", "am", "arn", "br", "fil", "gun", "ln", "mfe", "mg", "mi", "oc", "pt", "pt-BR", "tg", "tl", "ti", "tr", "uz", "wa"], nr: [1, 2], fc: 1 }, { lngs: ["af", "an", "ast", "az", "bg", "bn", "ca", "da", "de", "dev", "el", "en", "eo", "es", "et", "eu", "fi", "fo", "fur", "fy", "gl", "gu", "ha", "hi", "hu", "hy", "ia", "it", "kk", "kn", "ku", "lb", "mai", "ml", "mn", "mr", "nah", "nap", "nb", "ne", "nl", "nn", "no", "nso", "pa", "pap", "pms", "ps", "pt-PT", "rm", "sco", "se", "si", "so", "son", "sq", "sv", "sw", "ta", "te", "tk", "ur", "yo"], nr: [1, 2], fc: 2 }, { lngs: ["ay", "bo", "cgg", "fa", "ht", "id", "ja", "jbo", "ka", "km", "ko", "ky", "lo", "ms", "sah", "su", "th", "tt", "ug", "vi", "wo", "zh"], nr: [1], fc: 3 }, { lngs: ["be", "bs", "cnr", "dz", "hr", "ru", "sr", "uk"], nr: [1, 2, 5], fc: 4 }, { lngs: ["ar"], nr: [0, 1, 2, 3, 11, 100], fc: 5 }, { lngs: ["cs", "sk"], nr: [1, 2, 5], fc: 6 }, { lngs: ["csb", "pl"], nr: [1, 2, 5], fc: 7 }, { lngs: ["cy"], nr: [1, 2, 3, 8], fc: 8 }, { lngs: ["fr"], nr: [1, 2], fc: 9 }, { lngs: ["ga"], nr: [1, 2, 3, 7, 11], fc: 10 }, { lngs: ["gd"], nr: [1, 2, 3, 20], fc: 11 }, { lngs: ["is"], nr: [1, 2], fc: 12 }, { lngs: ["jv"], nr: [0, 1], fc: 13 }, { lngs: ["kw"], nr: [1, 2, 3, 4], fc: 14 }, { lngs: ["lt"], nr: [1, 2, 10], fc: 15 }, { lngs: ["lv"], nr: [1, 2, 0], fc: 16 }, { lngs: ["mk"], nr: [1, 2], fc: 17 }, { lngs: ["mnk"], nr: [0, 1, 2], fc: 18 }, { lngs: ["mt"], nr: [1, 2, 11, 20], fc: 19 }, { lngs: ["or"], nr: [2, 1], fc: 2 }, { lngs: ["ro"], nr: [1, 2, 20], fc: 20 }, { lngs: ["sl"], nr: [5, 1, 2, 3], fc: 21 }, { lngs: ["he", "iw"], nr: [1, 2, 20, 21], fc: 22 }], rt = { 1: function(e2) {
    return Number(e2 > 1);
  }, 2: function(e2) {
    return Number(1 != e2);
  }, 3: function(e2) {
    return 0;
  }, 4: function(e2) {
    return Number(e2 % 10 == 1 && e2 % 100 != 11 ? 0 : e2 % 10 >= 2 && e2 % 10 <= 4 && (e2 % 100 < 10 || e2 % 100 >= 20) ? 1 : 2);
  }, 5: function(e2) {
    return Number(0 == e2 ? 0 : 1 == e2 ? 1 : 2 == e2 ? 2 : e2 % 100 >= 3 && e2 % 100 <= 10 ? 3 : e2 % 100 >= 11 ? 4 : 5);
  }, 6: function(e2) {
    return Number(1 == e2 ? 0 : e2 >= 2 && e2 <= 4 ? 1 : 2);
  }, 7: function(e2) {
    return Number(1 == e2 ? 0 : e2 % 10 >= 2 && e2 % 10 <= 4 && (e2 % 100 < 10 || e2 % 100 >= 20) ? 1 : 2);
  }, 8: function(e2) {
    return Number(1 == e2 ? 0 : 2 == e2 ? 1 : 8 != e2 && 11 != e2 ? 2 : 3);
  }, 9: function(e2) {
    return Number(e2 >= 2);
  }, 10: function(e2) {
    return Number(1 == e2 ? 0 : 2 == e2 ? 1 : e2 < 7 ? 2 : e2 < 11 ? 3 : 4);
  }, 11: function(e2) {
    return Number(1 == e2 || 11 == e2 ? 0 : 2 == e2 || 12 == e2 ? 1 : e2 > 2 && e2 < 20 ? 2 : 3);
  }, 12: function(e2) {
    return Number(e2 % 10 != 1 || e2 % 100 == 11);
  }, 13: function(e2) {
    return Number(0 !== e2);
  }, 14: function(e2) {
    return Number(1 == e2 ? 0 : 2 == e2 ? 1 : 3 == e2 ? 2 : 3);
  }, 15: function(e2) {
    return Number(e2 % 10 == 1 && e2 % 100 != 11 ? 0 : e2 % 10 >= 2 && (e2 % 100 < 10 || e2 % 100 >= 20) ? 1 : 2);
  }, 16: function(e2) {
    return Number(e2 % 10 == 1 && e2 % 100 != 11 ? 0 : 0 !== e2 ? 1 : 2);
  }, 17: function(e2) {
    return Number(1 == e2 || e2 % 10 == 1 && e2 % 100 != 11 ? 0 : 1);
  }, 18: function(e2) {
    return Number(0 == e2 ? 0 : 1 == e2 ? 1 : 2);
  }, 19: function(e2) {
    return Number(1 == e2 ? 0 : 0 == e2 || e2 % 100 > 1 && e2 % 100 < 11 ? 1 : e2 % 100 > 10 && e2 % 100 < 20 ? 2 : 3);
  }, 20: function(e2) {
    return Number(1 == e2 ? 0 : 0 == e2 || e2 % 100 > 0 && e2 % 100 < 20 ? 1 : 2);
  }, 21: function(e2) {
    return Number(e2 % 100 == 1 ? 1 : e2 % 100 == 2 ? 2 : e2 % 100 == 3 || e2 % 100 == 4 ? 3 : 0);
  }, 22: function(e2) {
    return Number(1 == e2 ? 0 : 2 == e2 ? 1 : (e2 < 0 || e2 > 10) && e2 % 10 == 0 ? 2 : 3);
  } }, at = ["v1", "v2", "v3"], ot = { zero: 0, one: 1, two: 2, few: 3, many: 4, other: 5 };
  var ut = function() {
    function e2(t2) {
      var s2, n2 = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : {};
      ve(this, e2), this.languageUtils = t2, this.options = n2, this.logger = Le.create("pluralResolver"), this.options.compatibilityJSON && "v4" !== this.options.compatibilityJSON || "undefined" != typeof Intl && Intl.PluralRules || (this.options.compatibilityJSON = "v3", this.logger.error("Your environment seems not to be Intl API compatible, use an Intl.PluralRules polyfill. Will fallback to the compatibilityJSON v3 format handling.")), this.rules = (s2 = {}, it.forEach(function(e3) {
        e3.lngs.forEach(function(t3) {
          s2[t3] = { numbers: e3.nr, plurals: rt[e3.fc] };
        });
      }), s2);
    }
    return Ie(e2, [{ key: "addRule", value: function(e3, t2) {
      this.rules[e3] = t2;
    } }, { key: "getRule", value: function(e3) {
      var t2 = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : {};
      if (this.shouldUseIntlApi())
        try {
          return new Intl.PluralRules(e3, { type: t2.ordinal ? "ordinal" : "cardinal" });
        } catch (e4) {
          return;
        }
      return this.rules[e3] || this.rules[this.languageUtils.getLanguagePartFromCode(e3)];
    } }, { key: "needsPlural", value: function(e3) {
      var t2 = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : {}, s2 = this.getRule(e3, t2);
      return this.shouldUseIntlApi() ? s2 && s2.resolvedOptions().pluralCategories.length > 1 : s2 && s2.numbers.length > 1;
    } }, { key: "getPluralFormsOfKey", value: function(e3, t2) {
      var s2 = arguments.length > 2 && void 0 !== arguments[2] ? arguments[2] : {};
      return this.getSuffixes(e3, s2).map(function(e4) {
        return "".concat(t2).concat(e4);
      });
    } }, { key: "getSuffixes", value: function(e3) {
      var t2 = this, s2 = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : {}, n2 = this.getRule(e3, s2);
      return n2 ? this.shouldUseIntlApi() ? n2.resolvedOptions().pluralCategories.sort(function(e4, t3) {
        return ot[e4] - ot[t3];
      }).map(function(e4) {
        return "".concat(t2.options.prepend).concat(e4);
      }) : n2.numbers.map(function(n3) {
        return t2.getSuffix(e3, n3, s2);
      }) : [];
    } }, { key: "getSuffix", value: function(e3, t2) {
      var s2 = arguments.length > 2 && void 0 !== arguments[2] ? arguments[2] : {}, n2 = this.getRule(e3, s2);
      return n2 ? this.shouldUseIntlApi() ? "".concat(this.options.prepend).concat(n2.select(t2)) : this.getSuffixRetroCompatible(n2, t2) : (this.logger.warn("no plural rule found for: ".concat(e3)), "");
    } }, { key: "getSuffixRetroCompatible", value: function(e3, t2) {
      var s2 = this, n2 = e3.noAbs ? e3.plurals(t2) : e3.plurals(Math.abs(t2)), i2 = e3.numbers[n2];
      this.options.simplifyPluralSuffix && 2 === e3.numbers.length && 1 === e3.numbers[0] && (2 === i2 ? i2 = "plural" : 1 === i2 && (i2 = ""));
      var r2 = function() {
        return s2.options.prepend && i2.toString() ? s2.options.prepend + i2.toString() : i2.toString();
      };
      return "v1" === this.options.compatibilityJSON ? 1 === i2 ? "" : "number" == typeof i2 ? "_plural_".concat(i2.toString()) : r2() : "v2" === this.options.compatibilityJSON || this.options.simplifyPluralSuffix && 2 === e3.numbers.length && 1 === e3.numbers[0] ? r2() : this.options.prepend && n2.toString() ? this.options.prepend + n2.toString() : n2.toString();
    } }, { key: "shouldUseIntlApi", value: function() {
      return !at.includes(this.options.compatibilityJSON);
    } }]), e2;
  }();
  function ct(e2, t2) {
    var s2 = Object.keys(e2);
    if (Object.getOwnPropertySymbols) {
      var n2 = Object.getOwnPropertySymbols(e2);
      t2 && (n2 = n2.filter(function(t3) {
        return Object.getOwnPropertyDescriptor(e2, t3).enumerable;
      })), s2.push.apply(s2, n2);
    }
    return s2;
  }
  function gt(e2) {
    for (var t2 = 1; t2 < arguments.length; t2++) {
      var s2 = null != arguments[t2] ? arguments[t2] : {};
      t2 % 2 ? ct(Object(s2), true).forEach(function(t3) {
        Me(e2, t3, s2[t3]);
      }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e2, Object.getOwnPropertyDescriptors(s2)) : ct(Object(s2)).forEach(function(t3) {
        Object.defineProperty(e2, t3, Object.getOwnPropertyDescriptor(s2, t3));
      });
    }
    return e2;
  }
  function lt(e2, t2, s2) {
    var n2 = arguments.length > 3 && void 0 !== arguments[3] ? arguments[3] : ".", i2 = !(arguments.length > 4 && void 0 !== arguments[4]) || arguments[4], r2 = function(e3, t3, s3) {
      var n3 = Ge(e3, s3);
      return void 0 !== n3 ? n3 : Ge(t3, s3);
    }(e2, t2, s2);
    return !r2 && i2 && "string" == typeof s2 && void 0 === (r2 = Be(e2, s2, n2)) && (r2 = Be(t2, s2, n2)), r2;
  }
  var ht = function() {
    function e2() {
      var t2 = arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : {};
      ve(this, e2), this.logger = Le.create("interpolator"), this.options = t2, this.format = t2.interpolation && t2.interpolation.format || function(e3) {
        return e3;
      }, this.init(t2);
    }
    return Ie(e2, [{ key: "init", value: function() {
      var e3 = arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : {};
      e3.interpolation || (e3.interpolation = { escapeValue: true });
      var t2 = e3.interpolation;
      this.escape = void 0 !== t2.escape ? t2.escape : $e, this.escapeValue = void 0 === t2.escapeValue || t2.escapeValue, this.useRawValueToEscape = void 0 !== t2.useRawValueToEscape && t2.useRawValueToEscape, this.prefix = t2.prefix ? Ve(t2.prefix) : t2.prefixEscaped || "{{", this.suffix = t2.suffix ? Ve(t2.suffix) : t2.suffixEscaped || "}}", this.formatSeparator = t2.formatSeparator ? t2.formatSeparator : t2.formatSeparator || ",", this.unescapePrefix = t2.unescapeSuffix ? "" : t2.unescapePrefix || "-", this.unescapeSuffix = this.unescapePrefix ? "" : t2.unescapeSuffix || "", this.nestingPrefix = t2.nestingPrefix ? Ve(t2.nestingPrefix) : t2.nestingPrefixEscaped || Ve("$t("), this.nestingSuffix = t2.nestingSuffix ? Ve(t2.nestingSuffix) : t2.nestingSuffixEscaped || Ve(")"), this.nestingOptionsSeparator = t2.nestingOptionsSeparator ? t2.nestingOptionsSeparator : t2.nestingOptionsSeparator || ",", this.maxReplaces = t2.maxReplaces ? t2.maxReplaces : 1e3, this.alwaysFormat = void 0 !== t2.alwaysFormat && t2.alwaysFormat, this.resetRegExp();
    } }, { key: "reset", value: function() {
      this.options && this.init(this.options);
    } }, { key: "resetRegExp", value: function() {
      var e3 = "".concat(this.prefix, "(.+?)").concat(this.suffix);
      this.regexp = new RegExp(e3, "g");
      var t2 = "".concat(this.prefix).concat(this.unescapePrefix, "(.+?)").concat(this.unescapeSuffix).concat(this.suffix);
      this.regexpUnescape = new RegExp(t2, "g");
      var s2 = "".concat(this.nestingPrefix, "(.+?)").concat(this.nestingSuffix);
      this.nestingRegexp = new RegExp(s2, "g");
    } }, { key: "interpolate", value: function(e3, t2, s2, n2) {
      var i2, r2, a2, o2 = this, u2 = this.options && this.options.interpolation && this.options.interpolation.defaultVariables || {};
      function c2(e4) {
        return e4.replace(/\$/g, "$$$$");
      }
      var g2 = function(e4) {
        if (e4.indexOf(o2.formatSeparator) < 0) {
          var i3 = lt(t2, u2, e4, o2.options.keySeparator, o2.options.ignoreJSONStructure);
          return o2.alwaysFormat ? o2.format(i3, void 0, s2, gt(gt(gt({}, n2), t2), {}, { interpolationkey: e4 })) : i3;
        }
        var r3 = e4.split(o2.formatSeparator), a3 = r3.shift().trim(), c3 = r3.join(o2.formatSeparator).trim();
        return o2.format(lt(t2, u2, a3, o2.options.keySeparator, o2.options.ignoreJSONStructure), c3, s2, gt(gt(gt({}, n2), t2), {}, { interpolationkey: a3 }));
      };
      this.resetRegExp();
      var l2 = n2 && n2.missingInterpolationHandler || this.options.missingInterpolationHandler, h2 = n2 && n2.interpolation && void 0 !== n2.interpolation.skipOnVariables ? n2.interpolation.skipOnVariables : this.options.interpolation.skipOnVariables;
      return [{ regex: this.regexpUnescape, safeValue: function(e4) {
        return c2(e4);
      } }, { regex: this.regexp, safeValue: function(e4) {
        return o2.escapeValue ? c2(o2.escape(e4)) : c2(e4);
      } }].forEach(function(t3) {
        for (a2 = 0; i2 = t3.regex.exec(e3); ) {
          var s3 = i2[1].trim();
          if (void 0 === (r2 = g2(s3)))
            if ("function" == typeof l2) {
              var u3 = l2(e3, i2, n2);
              r2 = "string" == typeof u3 ? u3 : "";
            } else if (n2 && Object.prototype.hasOwnProperty.call(n2, s3))
              r2 = "";
            else {
              if (h2) {
                r2 = i2[0];
                continue;
              }
              o2.logger.warn("missed to pass in variable ".concat(s3, " for interpolating ").concat(e3)), r2 = "";
            }
          else
            "string" == typeof r2 || o2.useRawValueToEscape || (r2 = ke(r2));
          var c3 = t3.safeValue(r2);
          if (e3 = e3.replace(i2[0], c3), h2 ? (t3.regex.lastIndex += r2.length, t3.regex.lastIndex -= i2[0].length) : t3.regex.lastIndex = 0, ++a2 >= o2.maxReplaces)
            break;
        }
      }), e3;
    } }, { key: "nest", value: function(e3, t2) {
      var s2, n2, i2, r2 = this, a2 = arguments.length > 2 && void 0 !== arguments[2] ? arguments[2] : {};
      function o2(e4, t3) {
        var s3 = this.nestingOptionsSeparator;
        if (e4.indexOf(s3) < 0)
          return e4;
        var n3 = e4.split(new RegExp("".concat(s3, "[ ]*{"))), r3 = "{".concat(n3[1]);
        e4 = n3[0];
        var a3 = (r3 = this.interpolate(r3, i2)).match(/'/g), o3 = r3.match(/"/g);
        (a3 && a3.length % 2 == 0 && !o3 || o3.length % 2 != 0) && (r3 = r3.replace(/'/g, '"'));
        try {
          i2 = JSON.parse(r3), t3 && (i2 = gt(gt({}, t3), i2));
        } catch (t4) {
          return this.logger.warn("failed parsing options string in nesting for key ".concat(e4), t4), "".concat(e4).concat(s3).concat(r3);
        }
        return delete i2.defaultValue, e4;
      }
      for (; s2 = this.nestingRegexp.exec(e3); ) {
        var u2 = [];
        (i2 = (i2 = gt({}, a2)).replace && "string" != typeof i2.replace ? i2.replace : i2).applyPostProcessor = false, delete i2.defaultValue;
        var c2 = false;
        if (-1 !== s2[0].indexOf(this.formatSeparator) && !/{.*}/.test(s2[1])) {
          var g2 = s2[1].split(this.formatSeparator).map(function(e4) {
            return e4.trim();
          });
          s2[1] = g2.shift(), u2 = g2, c2 = true;
        }
        if ((n2 = t2(o2.call(this, s2[1].trim(), i2), i2)) && s2[0] === e3 && "string" != typeof n2)
          return n2;
        "string" != typeof n2 && (n2 = ke(n2)), n2 || (this.logger.warn("missed to resolve ".concat(s2[1], " for nesting ").concat(e3)), n2 = ""), c2 && (n2 = u2.reduce(function(e4, t3) {
          return r2.format(e4, t3, a2.lng, gt(gt({}, a2), {}, { interpolationkey: s2[1].trim() }));
        }, n2.trim())), e3 = e3.replace(s2[0], n2), this.regexp.lastIndex = 0;
      }
      return e3;
    } }]), e2;
  }();
  function pt(e2, t2) {
    var s2 = Object.keys(e2);
    if (Object.getOwnPropertySymbols) {
      var n2 = Object.getOwnPropertySymbols(e2);
      t2 && (n2 = n2.filter(function(t3) {
        return Object.getOwnPropertyDescriptor(e2, t3).enumerable;
      })), s2.push.apply(s2, n2);
    }
    return s2;
  }
  function dt(e2) {
    for (var t2 = 1; t2 < arguments.length; t2++) {
      var s2 = null != arguments[t2] ? arguments[t2] : {};
      t2 % 2 ? pt(Object(s2), true).forEach(function(t3) {
        Me(e2, t3, s2[t3]);
      }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e2, Object.getOwnPropertyDescriptors(s2)) : pt(Object(s2)).forEach(function(t3) {
        Object.defineProperty(e2, t3, Object.getOwnPropertyDescriptor(s2, t3));
      });
    }
    return e2;
  }
  function ft(e2) {
    var t2 = {};
    return function(s2, n2, i2) {
      var r2 = n2 + JSON.stringify(i2), a2 = t2[r2];
      return a2 || (a2 = e2(n2, i2), t2[r2] = a2), a2(s2);
    };
  }
  var mt = function() {
    function e2() {
      var t2 = arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : {};
      ve(this, e2), this.logger = Le.create("formatter"), this.options = t2, this.formats = { number: ft(function(e3, t3) {
        var s2 = new Intl.NumberFormat(e3, dt({}, t3));
        return function(e4) {
          return s2.format(e4);
        };
      }), currency: ft(function(e3, t3) {
        var s2 = new Intl.NumberFormat(e3, dt(dt({}, t3), {}, { style: "currency" }));
        return function(e4) {
          return s2.format(e4);
        };
      }), datetime: ft(function(e3, t3) {
        var s2 = new Intl.DateTimeFormat(e3, dt({}, t3));
        return function(e4) {
          return s2.format(e4);
        };
      }), relativetime: ft(function(e3, t3) {
        var s2 = new Intl.RelativeTimeFormat(e3, dt({}, t3));
        return function(e4) {
          return s2.format(e4, t3.range || "day");
        };
      }), list: ft(function(e3, t3) {
        var s2 = new Intl.ListFormat(e3, dt({}, t3));
        return function(e4) {
          return s2.format(e4);
        };
      }) }, this.init(t2);
    }
    return Ie(e2, [{ key: "init", value: function(e3) {
      var t2 = (arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : { interpolation: {} }).interpolation;
      this.formatSeparator = t2.formatSeparator ? t2.formatSeparator : t2.formatSeparator || ",";
    } }, { key: "add", value: function(e3, t2) {
      this.formats[e3.toLowerCase().trim()] = t2;
    } }, { key: "addCached", value: function(e3, t2) {
      this.formats[e3.toLowerCase().trim()] = ft(t2);
    } }, { key: "format", value: function(e3, t2, s2) {
      var n2 = this, i2 = arguments.length > 3 && void 0 !== arguments[3] ? arguments[3] : {};
      return t2.split(this.formatSeparator).reduce(function(e4, t3) {
        var r2 = function(e5) {
          var t4 = e5.toLowerCase().trim(), s3 = {};
          if (e5.indexOf("(") > -1) {
            var n3 = e5.split("(");
            t4 = n3[0].toLowerCase().trim();
            var i3 = n3[1].substring(0, n3[1].length - 1);
            "currency" === t4 && i3.indexOf(":") < 0 ? s3.currency || (s3.currency = i3.trim()) : "relativetime" === t4 && i3.indexOf(":") < 0 ? s3.range || (s3.range = i3.trim()) : i3.split(";").forEach(function(e6) {
              if (e6) {
                var t5 = _e(e6.split(":")), n4 = t5[0], i4 = t5.slice(1).join(":").trim().replace(/^'+|'+$/g, "");
                s3[n4.trim()] || (s3[n4.trim()] = i4), "false" === i4 && (s3[n4.trim()] = false), "true" === i4 && (s3[n4.trim()] = true), isNaN(i4) || (s3[n4.trim()] = parseInt(i4, 10));
              }
            });
          }
          return { formatName: t4, formatOptions: s3 };
        }(t3), a2 = r2.formatName, o2 = r2.formatOptions;
        if (n2.formats[a2]) {
          var u2 = e4;
          try {
            var c2 = i2 && i2.formatParams && i2.formatParams[i2.interpolationkey] || {}, g2 = c2.locale || c2.lng || i2.locale || i2.lng || s2;
            u2 = n2.formats[a2](e4, g2, dt(dt(dt({}, o2), i2), c2));
          } catch (e5) {
            n2.logger.warn(e5);
          }
          return u2;
        }
        return n2.logger.warn("there was no format function for ".concat(a2)), e4;
      }, e3);
    } }]), e2;
  }();
  function vt(e2, t2) {
    var s2 = Object.keys(e2);
    if (Object.getOwnPropertySymbols) {
      var n2 = Object.getOwnPropertySymbols(e2);
      t2 && (n2 = n2.filter(function(t3) {
        return Object.getOwnPropertyDescriptor(e2, t3).enumerable;
      })), s2.push.apply(s2, n2);
    }
    return s2;
  }
  function Tt(e2) {
    for (var t2 = 1; t2 < arguments.length; t2++) {
      var s2 = null != arguments[t2] ? arguments[t2] : {};
      t2 % 2 ? vt(Object(s2), true).forEach(function(t3) {
        Me(e2, t3, s2[t3]);
      }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e2, Object.getOwnPropertyDescriptors(s2)) : vt(Object(s2)).forEach(function(t3) {
        Object.defineProperty(e2, t3, Object.getOwnPropertyDescriptor(s2, t3));
      });
    }
    return e2;
  }
  function Et(e2) {
    var t2 = function() {
      if ("undefined" == typeof Reflect || !Reflect.construct)
        return false;
      if (Reflect.construct.sham)
        return false;
      if ("function" == typeof Proxy)
        return true;
      try {
        return Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function() {
        })), true;
      } catch (e3) {
        return false;
      }
    }();
    return function() {
      var s2, n2 = Ce(e2);
      if (t2) {
        var i2 = Ce(this).constructor;
        s2 = Reflect.construct(n2, arguments, i2);
      } else
        s2 = n2.apply(this, arguments);
      return Ue(this, s2);
    };
  }
  var It = function() {
    be(t2, Ae);
    var e2 = Et(t2);
    function t2(s2, n2, i2) {
      var r2, a2 = arguments.length > 3 && void 0 !== arguments[3] ? arguments[3] : {};
      return ve(this, t2), r2 = e2.call(this), He && Ae.call(Se(r2)), r2.backend = s2, r2.store = n2, r2.services = i2, r2.languageUtils = i2.languageUtils, r2.options = a2, r2.logger = Le.create("backendConnector"), r2.waitingReads = [], r2.maxParallelReads = a2.maxParallelReads || 10, r2.readingCalls = 0, r2.maxRetries = a2.maxRetries >= 0 ? a2.maxRetries : 5, r2.retryTimeout = a2.retryTimeout >= 1 ? a2.retryTimeout : 350, r2.state = {}, r2.queue = [], r2.backend && r2.backend.init && r2.backend.init(i2, a2.backend, a2), r2;
    }
    return Ie(t2, [{ key: "queueLoad", value: function(e3, t3, s2, n2) {
      var i2 = this, r2 = {}, a2 = {}, o2 = {}, u2 = {};
      return e3.forEach(function(e4) {
        var n3 = true;
        t3.forEach(function(t4) {
          var o3 = "".concat(e4, "|").concat(t4);
          !s2.reload && i2.store.hasResourceBundle(e4, t4) ? i2.state[o3] = 2 : i2.state[o3] < 0 || (1 === i2.state[o3] ? void 0 === a2[o3] && (a2[o3] = true) : (i2.state[o3] = 1, n3 = false, void 0 === a2[o3] && (a2[o3] = true), void 0 === r2[o3] && (r2[o3] = true), void 0 === u2[t4] && (u2[t4] = true)));
        }), n3 || (o2[e4] = true);
      }), (Object.keys(r2).length || Object.keys(a2).length) && this.queue.push({ pending: a2, pendingCount: Object.keys(a2).length, loaded: {}, errors: [], callback: n2 }), { toLoad: Object.keys(r2), pending: Object.keys(a2), toLoadLanguages: Object.keys(o2), toLoadNamespaces: Object.keys(u2) };
    } }, { key: "loaded", value: function(e3, t3, s2) {
      var n2 = e3.split("|"), i2 = n2[0], r2 = n2[1];
      t3 && this.emit("failedLoading", i2, r2, t3), s2 && this.store.addResourceBundle(i2, r2, s2), this.state[e3] = t3 ? -1 : 2;
      var a2 = {};
      this.queue.forEach(function(s3) {
        var n3, o2, c2, g2, l2;
        n3 = s3.loaded, o2 = r2, c2 = Ne(n3, [i2], Object), g2 = c2.obj, l2 = c2.k, g2[l2] = g2[l2] || [], g2[l2].push(o2), function(e4, t4) {
          void 0 !== e4.pending[t4] && (delete e4.pending[t4], e4.pendingCount--);
        }(s3, e3), t3 && s3.errors.push(t3), 0 !== s3.pendingCount || s3.done || (Object.keys(s3.loaded).forEach(function(e4) {
          a2[e4] || (a2[e4] = {});
          var t4 = s3.loaded[e4];
          t4.length && t4.forEach(function(t5) {
            void 0 === a2[e4][t5] && (a2[e4][t5] = true);
          });
        }), s3.done = true, s3.errors.length ? s3.callback(s3.errors) : s3.callback());
      }), this.emit("loaded", a2), this.queue = this.queue.filter(function(e4) {
        return !e4.done;
      });
    } }, { key: "read", value: function(e3, t3, s2) {
      var n2 = this, i2 = arguments.length > 3 && void 0 !== arguments[3] ? arguments[3] : 0, r2 = arguments.length > 4 && void 0 !== arguments[4] ? arguments[4] : this.retryTimeout, a2 = arguments.length > 5 ? arguments[5] : void 0;
      if (!e3.length)
        return a2(null, {});
      if (this.readingCalls >= this.maxParallelReads)
        this.waitingReads.push({ lng: e3, ns: t3, fcName: s2, tried: i2, wait: r2, callback: a2 });
      else {
        this.readingCalls++;
        var o2 = function(o3, u3) {
          if (n2.readingCalls--, n2.waitingReads.length > 0) {
            var c3 = n2.waitingReads.shift();
            n2.read(c3.lng, c3.ns, c3.fcName, c3.tried, c3.wait, c3.callback);
          }
          o3 && u3 && i2 < n2.maxRetries ? setTimeout(function() {
            n2.read.call(n2, e3, t3, s2, i2 + 1, 2 * r2, a2);
          }, r2) : a2(o3, u3);
        }, u2 = this.backend[s2].bind(this.backend);
        if (2 !== u2.length)
          return u2(e3, t3, o2);
        try {
          var c2 = u2(e3, t3);
          c2 && "function" == typeof c2.then ? c2.then(function(e4) {
            return o2(null, e4);
          }).catch(o2) : o2(null, c2);
        } catch (e4) {
          o2(e4);
        }
      }
    } }, { key: "prepareLoading", value: function(e3, t3) {
      var s2 = this, n2 = arguments.length > 2 && void 0 !== arguments[2] ? arguments[2] : {}, i2 = arguments.length > 3 ? arguments[3] : void 0;
      if (!this.backend)
        return this.logger.warn("No backend was added via i18next.use. Will not load resources."), i2 && i2();
      "string" == typeof e3 && (e3 = this.languageUtils.toResolveHierarchy(e3)), "string" == typeof t3 && (t3 = [t3]);
      var r2 = this.queueLoad(e3, t3, n2, i2);
      if (!r2.toLoad.length)
        return r2.pending.length || i2(), null;
      r2.toLoad.forEach(function(e4) {
        s2.loadOne(e4);
      });
    } }, { key: "load", value: function(e3, t3, s2) {
      this.prepareLoading(e3, t3, {}, s2);
    } }, { key: "reload", value: function(e3, t3, s2) {
      this.prepareLoading(e3, t3, { reload: true }, s2);
    } }, { key: "loadOne", value: function(e3) {
      var t3 = this, s2 = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : "", n2 = e3.split("|"), i2 = n2[0], r2 = n2[1];
      this.read(i2, r2, "read", void 0, void 0, function(n3, a2) {
        n3 && t3.logger.warn("".concat(s2, "loading namespace ").concat(r2, " for language ").concat(i2, " failed"), n3), !n3 && a2 && t3.logger.log("".concat(s2, "loaded namespace ").concat(r2, " for language ").concat(i2), a2), t3.loaded(e3, n3, a2);
      });
    } }, { key: "saveMissing", value: function(e3, t3, s2, n2, i2) {
      var r2 = arguments.length > 5 && void 0 !== arguments[5] ? arguments[5] : {}, a2 = arguments.length > 6 && void 0 !== arguments[6] ? arguments[6] : function() {
      };
      if (this.services.utils && this.services.utils.hasLoadedNamespace && !this.services.utils.hasLoadedNamespace(t3))
        this.logger.warn('did not save key "'.concat(s2, '" as the namespace "').concat(t3, '" was not yet loaded'), "This means something IS WRONG in your setup. You access the t function before i18next.init / i18next.loadNamespace / i18next.changeLanguage was done. Wait for the callback or Promise to resolve before accessing it!!!");
      else if (null != s2 && "" !== s2) {
        if (this.backend && this.backend.create) {
          var o2 = Tt(Tt({}, r2), {}, { isUpdate: i2 }), u2 = this.backend.create.bind(this.backend);
          if (u2.length < 6)
            try {
              var c2;
              (c2 = 5 === u2.length ? u2(e3, t3, s2, n2, o2) : u2(e3, t3, s2, n2)) && "function" == typeof c2.then ? c2.then(function(e4) {
                return a2(null, e4);
              }).catch(a2) : a2(null, c2);
            } catch (e4) {
              a2(e4);
            }
          else
            u2(e3, t3, s2, n2, a2, o2);
        }
        e3 && e3[0] && this.store.addResource(e3[0], t3, s2, n2);
      }
    } }]), t2;
  }();
  function St() {
    return { debug: false, initImmediate: true, ns: ["translation"], defaultNS: ["translation"], fallbackLng: ["dev"], fallbackNS: false, supportedLngs: false, nonExplicitSupportedLngs: false, load: "all", preload: false, simplifyPluralSuffix: true, keySeparator: ".", nsSeparator: ":", pluralSeparator: "_", contextSeparator: "_", partialBundledLanguages: false, saveMissing: false, updateMissing: false, saveMissingTo: "fallback", saveMissingPlurals: true, missingKeyHandler: false, missingInterpolationHandler: false, postProcess: false, postProcessPassResolved: false, returnNull: true, returnEmptyString: true, returnObjects: false, joinArrays: false, returnedObjectHandler: false, parseMissingKeyHandler: false, appendNamespaceToMissingKey: false, appendNamespaceToCIMode: false, overloadTranslationOptionHandler: function(e2) {
      var t2 = {};
      if ("object" === me(e2[1]) && (t2 = e2[1]), "string" == typeof e2[1] && (t2.defaultValue = e2[1]), "string" == typeof e2[2] && (t2.tDescription = e2[2]), "object" === me(e2[2]) || "object" === me(e2[3])) {
        var s2 = e2[3] || e2[2];
        Object.keys(s2).forEach(function(e3) {
          t2[e3] = s2[e3];
        });
      }
      return t2;
    }, interpolation: { escapeValue: true, format: function(e2, t2, s2, n2) {
      return e2;
    }, prefix: "{{", suffix: "}}", formatSeparator: ",", unescapePrefix: "-", nestingPrefix: "$t(", nestingSuffix: ")", nestingOptionsSeparator: ",", maxReplaces: 1e3, skipOnVariables: true } };
  }
  function yt(e2) {
    return "string" == typeof e2.ns && (e2.ns = [e2.ns]), "string" == typeof e2.fallbackLng && (e2.fallbackLng = [e2.fallbackLng]), "string" == typeof e2.fallbackNS && (e2.fallbackNS = [e2.fallbackNS]), e2.supportedLngs && e2.supportedLngs.indexOf("cimode") < 0 && (e2.supportedLngs = e2.supportedLngs.concat(["cimode"])), e2;
  }
  function bt(e2, t2) {
    var s2 = Object.keys(e2);
    if (Object.getOwnPropertySymbols) {
      var n2 = Object.getOwnPropertySymbols(e2);
      t2 && (n2 = n2.filter(function(t3) {
        return Object.getOwnPropertyDescriptor(e2, t3).enumerable;
      })), s2.push.apply(s2, n2);
    }
    return s2;
  }
  function Ut(e2) {
    for (var t2 = 1; t2 < arguments.length; t2++) {
      var s2 = null != arguments[t2] ? arguments[t2] : {};
      t2 % 2 ? bt(Object(s2), true).forEach(function(t3) {
        Me(e2, t3, s2[t3]);
      }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e2, Object.getOwnPropertyDescriptors(s2)) : bt(Object(s2)).forEach(function(t3) {
        Object.defineProperty(e2, t3, Object.getOwnPropertyDescriptor(s2, t3));
      });
    }
    return e2;
  }
  function Ct(e2) {
    var t2 = function() {
      if ("undefined" == typeof Reflect || !Reflect.construct)
        return false;
      if (Reflect.construct.sham)
        return false;
      if ("function" == typeof Proxy)
        return true;
      try {
        return Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function() {
        })), true;
      } catch (e3) {
        return false;
      }
    }();
    return function() {
      var s2, n2 = Ce(e2);
      if (t2) {
        var i2 = Ce(this).constructor;
        s2 = Reflect.construct(n2, arguments, i2);
      } else
        s2 = n2.apply(this, arguments);
      return Ue(this, s2);
    };
  }
  function Mt() {
  }
  var Ot = function() {
    be(t2, Ae);
    var e2 = Ct(t2);
    function t2() {
      var s2, n2, i2 = arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : {}, r2 = arguments.length > 1 ? arguments[1] : void 0;
      if (ve(this, t2), s2 = e2.call(this), He && Ae.call(Se(s2)), s2.options = yt(i2), s2.services = {}, s2.logger = Le, s2.modules = { external: [] }, n2 = Se(s2), Object.getOwnPropertyNames(Object.getPrototypeOf(n2)).forEach(function(e3) {
        "function" == typeof n2[e3] && (n2[e3] = n2[e3].bind(n2));
      }), r2 && !s2.isInitialized && !i2.isClone) {
        if (!s2.options.initImmediate)
          return s2.init(i2, r2), Ue(s2, Se(s2));
        setTimeout(function() {
          s2.init(i2, r2);
        }, 0);
      }
      return s2;
    }
    return Ie(t2, [{ key: "init", value: function() {
      var e3 = this, t3 = arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : {}, s2 = arguments.length > 1 ? arguments[1] : void 0;
      "function" == typeof t3 && (s2 = t3, t3 = {}), !t3.defaultNS && false !== t3.defaultNS && t3.ns && ("string" == typeof t3.ns ? t3.defaultNS = t3.ns : t3.ns.indexOf("translation") < 0 && (t3.defaultNS = t3.ns[0]));
      var n2 = St();
      function i2(e4) {
        return e4 ? "function" == typeof e4 ? new e4() : e4 : null;
      }
      if (this.options = Ut(Ut(Ut({}, n2), this.options), yt(t3)), "v1" !== this.options.compatibilityAPI && (this.options.interpolation = Ut(Ut({}, n2.interpolation), this.options.interpolation)), void 0 !== t3.keySeparator && (this.options.userDefinedKeySeparator = t3.keySeparator), void 0 !== t3.nsSeparator && (this.options.userDefinedNsSeparator = t3.nsSeparator), !this.options.isClone) {
        var r2;
        this.modules.logger ? Le.init(i2(this.modules.logger), this.options) : Le.init(null, this.options), this.modules.formatter ? r2 = this.modules.formatter : "undefined" != typeof Intl && (r2 = mt);
        var a2 = new nt(this.options);
        this.store = new Je(this.options.resources, this.options);
        var o2 = this.services;
        o2.logger = Le, o2.resourceStore = this.store, o2.languageUtils = a2, o2.pluralResolver = new ut(a2, { prepend: this.options.pluralSeparator, compatibilityJSON: this.options.compatibilityJSON, simplifyPluralSuffix: this.options.simplifyPluralSuffix }), !r2 || this.options.interpolation.format && this.options.interpolation.format !== n2.interpolation.format || (o2.formatter = i2(r2), o2.formatter.init(o2, this.options), this.options.interpolation.format = o2.formatter.format.bind(o2.formatter)), o2.interpolator = new ht(this.options), o2.utils = { hasLoadedNamespace: this.hasLoadedNamespace.bind(this) }, o2.backendConnector = new It(i2(this.modules.backend), o2.resourceStore, o2, this.options), o2.backendConnector.on("*", function(t4) {
          for (var s3 = arguments.length, n3 = new Array(s3 > 1 ? s3 - 1 : 0), i3 = 1; i3 < s3; i3++)
            n3[i3 - 1] = arguments[i3];
          e3.emit.apply(e3, [t4].concat(n3));
        }), this.modules.languageDetector && (o2.languageDetector = i2(this.modules.languageDetector), o2.languageDetector.init && o2.languageDetector.init(o2, this.options.detection, this.options)), this.modules.i18nFormat && (o2.i18nFormat = i2(this.modules.i18nFormat), o2.i18nFormat.init && o2.i18nFormat.init(this)), this.translator = new tt$1(this.services, this.options), this.translator.on("*", function(t4) {
          for (var s3 = arguments.length, n3 = new Array(s3 > 1 ? s3 - 1 : 0), i3 = 1; i3 < s3; i3++)
            n3[i3 - 1] = arguments[i3];
          e3.emit.apply(e3, [t4].concat(n3));
        }), this.modules.external.forEach(function(t4) {
          t4.init && t4.init(e3);
        });
      }
      if (this.format = this.options.interpolation.format, s2 || (s2 = Mt), this.options.fallbackLng && !this.services.languageDetector && !this.options.lng) {
        var u2 = this.services.languageUtils.getFallbackCodes(this.options.fallbackLng);
        u2.length > 0 && "dev" !== u2[0] && (this.options.lng = u2[0]);
      }
      this.services.languageDetector || this.options.lng || this.logger.warn("init: no languageDetector is used and no lng is defined");
      ["getResource", "hasResourceBundle", "getResourceBundle", "getDataByLanguage"].forEach(function(t4) {
        e3[t4] = function() {
          var s3;
          return (s3 = e3.store)[t4].apply(s3, arguments);
        };
      });
      ["addResource", "addResources", "addResourceBundle", "removeResourceBundle"].forEach(function(t4) {
        e3[t4] = function() {
          var s3;
          return (s3 = e3.store)[t4].apply(s3, arguments), e3;
        };
      });
      var c2 = je(), g2 = function() {
        var t4 = function(t5, n3) {
          e3.isInitialized && !e3.initializedStoreOnce && e3.logger.warn("init: i18next is already initialized. You should call init just once!"), e3.isInitialized = true, e3.options.isClone || e3.logger.log("initialized", e3.options), e3.emit("initialized", e3.options), c2.resolve(n3), s2(t5, n3);
        };
        if (e3.languages && "v1" !== e3.options.compatibilityAPI && !e3.isInitialized)
          return t4(null, e3.t.bind(e3));
        e3.changeLanguage(e3.options.lng, t4);
      };
      return this.options.resources || !this.options.initImmediate ? g2() : setTimeout(g2, 0), c2;
    } }, { key: "loadResources", value: function(e3) {
      var t3 = this, s2 = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : Mt, n2 = "string" == typeof e3 ? e3 : this.language;
      if ("function" == typeof e3 && (s2 = e3), !this.options.resources || this.options.partialBundledLanguages) {
        if (n2 && "cimode" === n2.toLowerCase())
          return s2();
        var i2 = [], r2 = function(e4) {
          e4 && t3.services.languageUtils.toResolveHierarchy(e4).forEach(function(e5) {
            i2.indexOf(e5) < 0 && i2.push(e5);
          });
        };
        if (n2)
          r2(n2);
        else
          this.services.languageUtils.getFallbackCodes(this.options.fallbackLng).forEach(function(e4) {
            return r2(e4);
          });
        this.options.preload && this.options.preload.forEach(function(e4) {
          return r2(e4);
        }), this.services.backendConnector.load(i2, this.options.ns, function(e4) {
          e4 || t3.resolvedLanguage || !t3.language || t3.setResolvedLanguage(t3.language), s2(e4);
        });
      } else
        s2(null);
    } }, { key: "reloadResources", value: function(e3, t3, s2) {
      var n2 = je();
      return e3 || (e3 = this.languages), t3 || (t3 = this.options.ns), s2 || (s2 = Mt), this.services.backendConnector.reload(e3, t3, function(e4) {
        n2.resolve(), s2(e4);
      }), n2;
    } }, { key: "use", value: function(e3) {
      if (!e3)
        throw new Error("You are passing an undefined module! Please check the object you are passing to i18next.use()");
      if (!e3.type)
        throw new Error("You are passing a wrong module! Please check the object you are passing to i18next.use()");
      return "backend" === e3.type && (this.modules.backend = e3), ("logger" === e3.type || e3.log && e3.warn && e3.error) && (this.modules.logger = e3), "languageDetector" === e3.type && (this.modules.languageDetector = e3), "i18nFormat" === e3.type && (this.modules.i18nFormat = e3), "postProcessor" === e3.type && We.addPostProcessor(e3), "formatter" === e3.type && (this.modules.formatter = e3), "3rdParty" === e3.type && this.modules.external.push(e3), this;
    } }, { key: "setResolvedLanguage", value: function(e3) {
      if (e3 && this.languages && !(["cimode", "dev"].indexOf(e3) > -1))
        for (var t3 = 0; t3 < this.languages.length; t3++) {
          var s2 = this.languages[t3];
          if (!(["cimode", "dev"].indexOf(s2) > -1) && this.store.hasLanguageSomeTranslations(s2)) {
            this.resolvedLanguage = s2;
            break;
          }
        }
    } }, { key: "changeLanguage", value: function(e3, t3) {
      var s2 = this;
      this.isLanguageChangingTo = e3;
      var n2 = je();
      this.emit("languageChanging", e3);
      var i2 = function(e4) {
        s2.language = e4, s2.languages = s2.services.languageUtils.toResolveHierarchy(e4), s2.resolvedLanguage = void 0, s2.setResolvedLanguage(e4);
      }, r2 = function(r3) {
        e3 || r3 || !s2.services.languageDetector || (r3 = []);
        var a2 = "string" == typeof r3 ? r3 : s2.services.languageUtils.getBestMatchFromCodes(r3);
        a2 && (s2.language || i2(a2), s2.translator.language || s2.translator.changeLanguage(a2), s2.services.languageDetector && s2.services.languageDetector.cacheUserLanguage && s2.services.languageDetector.cacheUserLanguage(a2)), s2.loadResources(a2, function(e4) {
          !function(e5, r4) {
            r4 ? (i2(r4), s2.translator.changeLanguage(r4), s2.isLanguageChangingTo = void 0, s2.emit("languageChanged", r4), s2.logger.log("languageChanged", r4)) : s2.isLanguageChangingTo = void 0, n2.resolve(function() {
              return s2.t.apply(s2, arguments);
            }), t3 && t3(e5, function() {
              return s2.t.apply(s2, arguments);
            });
          }(e4, a2);
        });
      };
      return e3 || !this.services.languageDetector || this.services.languageDetector.async ? !e3 && this.services.languageDetector && this.services.languageDetector.async ? 0 === this.services.languageDetector.detect.length ? this.services.languageDetector.detect().then(r2) : this.services.languageDetector.detect(r2) : r2(e3) : r2(this.services.languageDetector.detect()), n2;
    } }, { key: "getFixedT", value: function(e3, t3, s2) {
      var n2 = this, i2 = function e4(t4, i3) {
        var r2;
        if ("object" !== me(i3)) {
          for (var a2 = arguments.length, o2 = new Array(a2 > 2 ? a2 - 2 : 0), u2 = 2; u2 < a2; u2++)
            o2[u2 - 2] = arguments[u2];
          r2 = n2.options.overloadTranslationOptionHandler([t4, i3].concat(o2));
        } else
          r2 = Ut({}, i3);
        r2.lng = r2.lng || e4.lng, r2.lngs = r2.lngs || e4.lngs, r2.ns = r2.ns || e4.ns, r2.keyPrefix = r2.keyPrefix || s2 || e4.keyPrefix;
        var c2, g2 = n2.options.keySeparator || ".";
        return c2 = r2.keyPrefix && Array.isArray(t4) ? t4.map(function(e5) {
          return "".concat(r2.keyPrefix).concat(g2).concat(e5);
        }) : r2.keyPrefix ? "".concat(r2.keyPrefix).concat(g2).concat(t4) : t4, n2.t(c2, r2);
      };
      return "string" == typeof e3 ? i2.lng = e3 : i2.lngs = e3, i2.ns = t3, i2.keyPrefix = s2, i2;
    } }, { key: "t", value: function() {
      var e3;
      return this.translator && (e3 = this.translator).translate.apply(e3, arguments);
    } }, { key: "exists", value: function() {
      var e3;
      return this.translator && (e3 = this.translator).exists.apply(e3, arguments);
    } }, { key: "setDefaultNamespace", value: function(e3) {
      this.options.defaultNS = e3;
    } }, { key: "hasLoadedNamespace", value: function(e3) {
      var t3 = this, s2 = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : {};
      if (!this.isInitialized)
        return this.logger.warn("hasLoadedNamespace: i18next was not initialized", this.languages), false;
      if (!this.languages || !this.languages.length)
        return this.logger.warn("hasLoadedNamespace: i18n.languages were undefined or empty", this.languages), false;
      var n2 = s2.lng || this.resolvedLanguage || this.languages[0], i2 = !!this.options && this.options.fallbackLng, r2 = this.languages[this.languages.length - 1];
      if ("cimode" === n2.toLowerCase())
        return true;
      var a2 = function(e4, s3) {
        var n3 = t3.services.backendConnector.state["".concat(e4, "|").concat(s3)];
        return -1 === n3 || 2 === n3;
      };
      if (s2.precheck) {
        var o2 = s2.precheck(this, a2);
        if (void 0 !== o2)
          return o2;
      }
      return !!this.hasResourceBundle(n2, e3) || (!(this.services.backendConnector.backend && (!this.options.resources || this.options.partialBundledLanguages)) || !(!a2(n2, e3) || i2 && !a2(r2, e3)));
    } }, { key: "loadNamespaces", value: function(e3, t3) {
      var s2 = this, n2 = je();
      return this.options.ns ? ("string" == typeof e3 && (e3 = [e3]), e3.forEach(function(e4) {
        s2.options.ns.indexOf(e4) < 0 && s2.options.ns.push(e4);
      }), this.loadResources(function(e4) {
        n2.resolve(), t3 && t3(e4);
      }), n2) : (t3 && t3(), Promise.resolve());
    } }, { key: "loadLanguages", value: function(e3, t3) {
      var s2 = je();
      "string" == typeof e3 && (e3 = [e3]);
      var n2 = this.options.preload || [], i2 = e3.filter(function(e4) {
        return n2.indexOf(e4) < 0;
      });
      return i2.length ? (this.options.preload = n2.concat(i2), this.loadResources(function(e4) {
        s2.resolve(), t3 && t3(e4);
      }), s2) : (t3 && t3(), Promise.resolve());
    } }, { key: "dir", value: function(e3) {
      if (e3 || (e3 = this.resolvedLanguage || (this.languages && this.languages.length > 0 ? this.languages[0] : this.language)), !e3)
        return "rtl";
      var t3 = this.services && this.services.languageUtils || new nt(St());
      return ["ar", "shu", "sqr", "ssh", "xaa", "yhd", "yud", "aao", "abh", "abv", "acm", "acq", "acw", "acx", "acy", "adf", "ads", "aeb", "aec", "afb", "ajp", "apc", "apd", "arb", "arq", "ars", "ary", "arz", "auz", "avl", "ayh", "ayl", "ayn", "ayp", "bbz", "pga", "he", "iw", "ps", "pbt", "pbu", "pst", "prp", "prd", "ug", "ur", "ydd", "yds", "yih", "ji", "yi", "hbo", "men", "xmn", "fa", "jpr", "peo", "pes", "prs", "dv", "sam", "ckb"].indexOf(t3.getLanguagePartFromCode(e3)) > -1 || e3.toLowerCase().indexOf("-arab") > 1 ? "rtl" : "ltr";
    } }, { key: "cloneInstance", value: function() {
      var e3 = this, s2 = arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : {}, n2 = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : Mt, i2 = Ut(Ut(Ut({}, this.options), s2), { isClone: true }), r2 = new t2(i2);
      void 0 === s2.debug && void 0 === s2.prefix || (r2.logger = r2.logger.clone(s2));
      return ["store", "services", "language"].forEach(function(t3) {
        r2[t3] = e3[t3];
      }), r2.services = Ut({}, this.services), r2.services.utils = { hasLoadedNamespace: r2.hasLoadedNamespace.bind(r2) }, r2.translator = new tt$1(r2.services, r2.options), r2.translator.on("*", function(e4) {
        for (var t3 = arguments.length, s3 = new Array(t3 > 1 ? t3 - 1 : 0), n3 = 1; n3 < t3; n3++)
          s3[n3 - 1] = arguments[n3];
        r2.emit.apply(r2, [e4].concat(s3));
      }), r2.init(i2, n2), r2.translator.options = r2.options, r2.translator.backendConnector.services.utils = { hasLoadedNamespace: r2.hasLoadedNamespace.bind(r2) }, r2;
    } }, { key: "toJSON", value: function() {
      return { options: this.options, store: this.store, language: this.language, languages: this.languages, resolvedLanguage: this.resolvedLanguage };
    } }]), t2;
  }();
  Me(Ot, "createInstance", function() {
    return new Ot(arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : {}, arguments.length > 1 ? arguments[1] : void 0);
  });
  var _t = Ot.createInstance();
  _t.createInstance = Ot.createInstance, _t.createInstance, _t.dir, _t.init, _t.loadResources, _t.reloadResources, _t.use, _t.changeLanguage, _t.getFixedT, _t.t, _t.exists, _t.setDefaultNamespace, _t.hasLoadedNamespace, _t.loadNamespaces, _t.loadLanguages;
  class Dt extends ne {
    constructor() {
      super(), this.languages = null, this.keyMap = {};
    }
    static getInstance() {
      return Dt.instance || (Dt.instance = new Dt()), Dt.instance;
    }
    provideLanguages(e2) {
      var t2;
      G || (this.languages = e2, (null === (t2 = e2["zh-CN"]) || void 0 === t2 ? void 0 : t2.Chat) && this.setKeyMap(e2["zh-CN"]), formatAppLog("log", "at node_modules/@tencentcloud/chat-uikit-engine/index.js:1", "TUITranslateService.provideLanguages ok."));
    }
    useI18n(e2) {
      if (G)
        return;
      if (!this.languages)
        return void formatAppLog("warn", "at node_modules/@tencentcloud/chat-uikit-engine/index.js:1", "TUITranslateService.useI18next not have messages.");
      const t2 = {};
      for (const [e3, s2] of Object.entries(this.languages)) {
        t2["zh_cn" === e3 ? "zh" : e3] = { translation: s2 };
      }
      _t.init({ compatibilityJSON: "v3", lng: e2 || "zh", fallbackLng: "zh", detection: { order: ["querystring", "navigator"], caches: ["localStorage", "cookie"] }, resources: t2 });
    }
    changeLanguage(e2) {
      return _t.changeLanguage(e2);
    }
    t(e2) {
      if (!this.languages) {
        let t3 = e2;
        return !S$1(e2) && e2.indexOf(".") > -1 && (t3 = e2.split(".").pop() || ""), t3;
      }
      const t2 = this.keyMap[e2];
      return t2 ? _t.t(t2) : _t.t(e2);
    }
    setKeyMap(e2, t2) {
      for (const s2 in e2)
        if (Object.prototype.hasOwnProperty.call(e2, s2)) {
          const n2 = t2 ? `${t2}.${s2}` : s2;
          if (e2[s2] && "object" == typeof e2[s2] && !Array.isArray(e2[s2]) && null !== e2[s2])
            this.setKeyMap(e2[s2], n2);
          else {
            let n3 = t2 ? `${t2}.${e2[s2]}` : e2[s2];
            n3 = this.replaceKey(n3), this.keyMap[n3] = `${t2}.${s2}`;
          }
        }
    }
    replaceKey(e2) {
      return e2.startsWith("Chat") ? e2.replace("Chat", "TUIChat") : e2.startsWith("Conversation") ? e2.replace("Conversation", "TUIConversation") : e2.startsWith("Message") ? e2.replace("Message", "message.tip") : e2;
    }
  }
  class Pt extends ne {
    constructor() {
      super(), this.serv = "TUIConversationService";
    }
    static getInstance() {
      return Pt.instance || (Pt.instance = new Pt()), Pt.instance;
    }
    init() {
      const e2 = this.getEngine();
      e2.eventCenter.addEvent(e2.EVENT.CONVERSATION_LIST_UPDATED, this.onConversationListUpdated.bind(this)), e2.eventCenter.addEvent(e2.EVENT.TOTAL_UNREAD_MESSAGE_COUNT_UPDATED, this.onTotalUnreadCountUpdated.bind(this)), e2.eventCenter.addEvent(e2.EVENT.MESSAGE_RECEIVED, this.onMessageReceived.bind(this)), this.getConversationInitData();
    }
    onConversationListUpdated(e2) {
      const t2 = this.filterSystemConversation(e2);
      this.getEngine().TUIStore.update(o$2.CONV, "conversationList", t2), this.updateCurrentConversation();
    }
    onTotalUnreadCountUpdated(e2) {
      this.getEngine().TUIStore.update(o$2.CONV, "totalUnreadCount", e2);
    }
    onMessageReceived(e2) {
      const t2 = this.getEngine(), s2 = this.getEngine().TUIStore.getData(o$2.CONV, "conversationList");
      let n2 = false;
      for (let i2 = 0; i2 < e2.length; i2++) {
        if (e2[i2].type !== t2.TYPES.MSG_GRP_SYS_NOTICE)
          continue;
        const { operationType: r2 } = e2[i2].payload, a2 = `GROUP${e2[i2].to}`, u2 = 4 === r2 || 5 === r2 || 8 === r2, c2 = 2 === r2 || 6 === r2 || 7 === r2;
        if (u2 || c2) {
          for (let e3 = 0; e3 < s2.length; e3++)
            if (s2[e3].type !== t2.TYPES.CONV_C2C && s2[e3].conversationID === a2) {
              if (u2) {
                this.getEngine().TUIStore.update(o$2.CONV, "operationTypeMap", { conversationID: a2, operationType: r2 }), n2 = true;
                break;
              }
              if (c2 && s2[e3].operationType > 0) {
                this.getEngine().TUIStore.update(o$2.CONV, "operationTypeMap", { conversationID: a2, operationType: 0 }), n2 = true;
                break;
              }
            }
        }
      }
      if (n2) {
        this.getEngine().TUIStore.update(o$2.CONV, "conversationList", s2);
        const e3 = this.getEngine().TUIStore.getData(o$2.CONV, "currentConversationID") || "", t3 = this.findConversation(e3);
        t3 && this.getEngine().TUIStore.update(o$2.CONV, "currentConversation", t3);
      }
    }
    getConversationInitData() {
      const e2 = this.getEngine();
      e2.chat.isReady() && e2.chat.getConversationList().then((t2) => {
        const { conversationList: s2, isSyncCompleted: n2 } = t2.data;
        if (formatAppLog("log", "at node_modules/@tencentcloud/chat-uikit-engine/index.js:1", `${this.serv}.init, getConversationList count:${s2.length} isSyncCompleted:${n2}`), s2.length > 0) {
          this.onConversationListUpdated(s2);
          const t3 = e2.chat.getTotalUnreadMessageCount();
          this.onTotalUnreadCountUpdated(t3);
        }
      });
    }
    switchConversation(e2) {
      return i$2(this, void 0, void 0, function* () {
        const t2 = `${this.serv}.switchConversation`, s2 = this.getEngine();
        if (!e2)
          return s2.TUIStore.reset(o$2.CHAT, ["messageList", "isCompleted", "nextReqMessageID"]), s2.TUIStore.update(o$2.CONV, "currentConversationID", ""), s2.TUIStore.update(o$2.CONV, "currentConversation", null), formatAppLog("log", "at node_modules/@tencentcloud/chat-uikit-engine/index.js:1", `${t2} conversationID is empty, conversationID:${e2}`), Promise.resolve({});
        if (!e2.startsWith(s2.TYPES.CONV_C2C) && !e2.startsWith(s2.TYPES.CONV_GROUP))
          return formatAppLog("warn", "at node_modules/@tencentcloud/chat-uikit-engine/index.js:1", `${t2} conversationID is invalid, conversationID:${e2}`), Promise.reject({ code: h$2.INVALID_CONV_ID, message: d$1.INVALID_CONV_ID });
        const n2 = s2.TUIStore.getData(o$2.CONV, "currentConversationID");
        if (n2 && n2 === e2)
          return this.setMessageRead(n2), formatAppLog("warn", "at node_modules/@tencentcloud/chat-uikit-engine/index.js:1", `${t2} please check conversationID, conversationID:${e2}`), Promise.resolve({ code: h$2.CONV_ID_SAME, message: d$1.CONV_ID_SAME });
        const i2 = yield this.getConversationModel(e2);
        return S$1(i2) ? (formatAppLog("warn", "at node_modules/@tencentcloud/chat-uikit-engine/index.js:1", `${t2} target conversation is not exist, conversationID:${e2}`), Promise.reject({ code: h$2.CONV_NOT_EXIST, message: d$1.CONV_NOT_EXIST })) : (n2 && this.setMessageRead(n2), e2 && this.setMessageRead(e2), s2.TUIStore.reset(o$2.CHAT, ["messageList", "isCompleted", "nextReqMessageID"]), s2.TUIStore.update(o$2.CONV, "currentConversationID", e2), s2.TUIStore.update(o$2.CONV, "currentConversation", i2), Promise.resolve(i2));
      });
    }
    getConversationModel(e2) {
      return i$2(this, void 0, void 0, function* () {
        let t2 = this.findConversation(e2);
        if (S$1(t2))
          try {
            const s2 = yield this.getConversationProfile(e2);
            s2.data && s2.data.conversation && (t2 = new ae(s2.data.conversation));
          } catch (e3) {
            t2 = void 0;
          }
        return t2;
      });
    }
    findConversation(e2) {
      let t2;
      const s2 = this.getEngine().TUIStore.getData(o$2.CONV, "conversationList");
      for (let n2 = 0; n2 < s2.length; n2++)
        if (s2[n2].conversationID === e2) {
          t2 = s2[n2];
          break;
        }
      return t2;
    }
    updateCurrentConversation() {
      const e2 = this.getEngine(), t2 = e2.TUIStore.getData(o$2.CONV, "currentConversationID"), s2 = this.findConversation(t2);
      s2 && e2.TUIStore.update(o$2.CONV, "currentConversation", s2);
    }
    getConversationList() {
      return this.getEngine().chat.getConversationList();
    }
    getConversationProfile(e2) {
      return this.getEngine().chat.getConversationProfile(e2);
    }
    deleteConversation(e2) {
      return this.getEngine().chat.deleteConversation(e2).then((t2) => {
        const s2 = this.getEngine().TUIStore.getData(o$2.CONV, "currentConversationID");
        return formatAppLog("log", "at node_modules/@tencentcloud/chat-uikit-engine/index.js:1", `${this.serv}.deleteConversation conversationID:${e2} currentConversationID:${s2}`), e2 === s2 && (this.getEngine().TUIStore.update(o$2.CONV, "currentConversationID", ""), this.getEngine().TUIStore.update(o$2.CONV, "currentConversation", null)), t2;
      });
    }
    pinConversation(e2) {
      return this.getEngine().chat.pinConversation(e2);
    }
    muteConversation(e2) {
      return this.getEngine().chat.setMessageRemindType(e2);
    }
    clearHistoryMessage(e2) {
      return this.getEngine().chat.clearHistoryMessage(e2).then((e3) => (this.getEngine().TUIStore.update(o$2.CHAT, "messageList", []), this.getEngine().TUIStore.update(o$2.CHAT, "nextReqMessageID", ""), this.getEngine().TUIStore.update(o$2.CHAT, "isCompleted", true), e3));
    }
    setMessageRead(e2) {
      return this.getEngine().chat.setMessageRead({ conversationID: e2 });
    }
    setConversationDraft(e2) {
      const { conversationID: t2, draftInfo: s2 } = e2;
      let n2 = "";
      return s2 && (n2 = JSON.stringify(s2)), this.getEngine().chat.setConversationDraft({ conversationID: t2, draftText: n2 }).then((e3) => {
        const { conversation: t3 } = e3.data;
        this.updateConversation(t3);
      });
    }
    updateConversation(e2) {
      let t2 = false;
      const s2 = this.getEngine().TUIStore.getData(o$2.CONV, "conversationList");
      for (let n2 = 0; n2 < s2.length; n2++)
        if (s2[n2].conversationID === e2.conversationID) {
          s2[n2] = e2, t2 = true;
          break;
        }
      t2 && this.getEngine().TUIStore.update(o$2.CONV, "conversationList", s2);
    }
    filterSystemConversation(e2) {
      return e2.filter((e3) => e3.type !== this.getEngine().TYPES.CONV_SYSTEM);
    }
  }
  class Rt {
    constructor(e2) {
      this.TUIUserService = e2;
    }
    getEngine() {
      return this.TUIUserService.getEngine();
    }
    init() {
      this.getEngine().eventCenter.addEvent(this.getEngine().EVENT.PROFILE_UPDATED, this.onProfileUpdated.bind(this)), this.getEngine().eventCenter.addEvent(this.getEngine().EVENT.BLACKLIST_UPDATED, this.onBlacklistUpdated.bind(this)), this.getUserProfileInitData();
    }
    onProfileUpdated(e2) {
      const t2 = this.getEngine(), s2 = t2.TUIStore.getData(o$2.USER, "userProfile");
      e2.forEach((e3) => {
        e3.userID === s2.userID && t2.TUIStore.update(o$2.USER, "userProfile", e3);
      });
    }
    onBlacklistUpdated(e2) {
      const t2 = this.getEngine();
      this.getBlacklistProfile(e2).then((e3) => {
        t2.TUIStore.update(o$2.USER, "userBlacklist", e3);
      });
    }
    getUserProfileInitData() {
      const e2 = this.getEngine();
      e2.chat.isReady() && e2.chat.getBlacklist().then((e3) => {
        const t2 = e3.data || [];
        formatAppLog("log", "at node_modules/@tencentcloud/chat-uikit-engine/index.js:1", `TUIUserProfileHandler.init, getBlacklist count:${t2.length}`), t2.length > 0 && this.onBlacklistUpdated(t2);
      });
    }
    getBlacklistProfile(e2) {
      const t2 = [];
      let s2 = 0;
      for (; s2 < e2.length; )
        t2.push(e2.slice(s2, s2 += 100));
      const n2 = [];
      t2.forEach((e3) => {
        n2.push(this.TUIUserService.getUserProfile({ userIDList: e3 }));
      });
      const i2 = [];
      return Promise.all(n2).then((e3) => (e3.forEach((e4) => {
        const t3 = e4.data.map((e5) => {
          const { userID: t4, nick: s3, avatar: n3 } = e5;
          return { userID: t4, nick: s3, avatar: n3 };
        });
        i2.push(...t3);
      }), i2));
    }
    getUserProfile(e2) {
      const t2 = this.getEngine();
      return S$1(e2) ? t2.chat.getMyProfile().then((e3) => (t2.TUIStore.update(o$2.USER, "userProfile", e3.data), e3)).catch((e3) => Promise.reject(e3)) : t2.chat.getUserProfile(e2);
    }
    updateMyProfile(e2) {
      return this.getEngine().chat.updateMyProfile(e2);
    }
    addToBlacklist(e2) {
      return this.getEngine().chat.addToBlacklist(e2);
    }
    removeFromBlacklist(e2) {
      return this.getEngine().chat.removeFromBlacklist(e2);
    }
  }
  function Lt(e2, t2, s2 = true) {
    !function(e3, t3) {
      V ? H.setStorageSync(e3, t3) : kt() && localStorage.setItem(e3, JSON.stringify(t3));
    }(s2 ? jt(e2) : e2, t2);
  }
  function At(e2, t2 = true) {
    try {
      return function(e3) {
        if (V)
          return H.getStorageSync(e3);
        if (kt()) {
          const t3 = localStorage.getItem(e3);
          if ("undefined" !== t3)
            return JSON.parse(t3);
        }
        return;
      }(t2 ? jt(e2) : e2);
    } catch (e3) {
      return void formatAppLog("warn", "at node_modules/@tencentcloud/chat-uikit-engine/index.js:1", "Storage.getStorageItem error:", e3);
    }
  }
  function jt(e2) {
    return `chat_engine_${e2}`;
  }
  function kt() {
    return navigator && navigator.cookieEnabled && localStorage;
  }
  class Nt {
    constructor(e2) {
      this.TUIUserService = e2;
    }
    getEngine() {
      return this.TUIUserService.getEngine();
    }
    init() {
      const e2 = this.getEngine(), t2 = At("displayOnlineStatus") || false;
      e2.TUIStore.update(o$2.USER, "displayOnlineStatus", t2), e2.eventCenter.addEvent(e2.EVENT.USER_STATUS_UPDATED, this.onUserStatusUpdated.bind(this)), this.onConversationListUpdated();
    }
    onConversationListUpdated() {
      const e2 = this.getEngine();
      e2.TUIStore.watch(o$2.CONV, { conversationList: () => {
        const t2 = e2.TUIStore.getData(o$2.APP, "enabledOnlineStatus"), s2 = e2.TUIStore.getData(o$2.USER, "displayOnlineStatus");
        t2 && s2 && this.startToSubscribe();
      } });
    }
    onUserStatusUpdated(e2) {
      this.getEngine().TUIStore.update(o$2.USER, "userStatusList", e2);
    }
    switchUserStatus(e2) {
      const t2 = this.getEngine(), { displayOnlineStatus: s2 = false } = e2;
      t2.TUIStore.update(o$2.USER, "displayOnlineStatus", s2), Lt("displayOnlineStatus", s2);
      const n2 = t2.TUIStore.getData(o$2.APP, "enabledOnlineStatus");
      n2 ? true === s2 ? this.startToSubscribe() : this.unsubscribeUserStatus() : formatAppLog("warn", "at node_modules/@tencentcloud/chat-uikit-engine/index.js:1", `UserStatusHandler.switchUserStatus enabledOnlineStatus:${n2} displayOnlineStatus:${s2}`);
    }
    getUserStatus(e2) {
      const t2 = this.getEngine();
      return t2.chat.getUserStatus(e2).then((e3) => {
        const { successUserList: s2 } = e3.data;
        return s2.length > 0 && t2.TUIStore.update(o$2.USER, "userStatusList", s2), e3;
      }).catch((e3) => Promise.reject(e3));
    }
    subscribeUserStatus(e2) {
      var t2;
      const s2 = (null === (t2 = null == e2 ? void 0 : e2.userIDList) || void 0 === t2 ? void 0 : t2.length) || 0;
      return 0 === s2 ? (formatAppLog("warn", "at node_modules/@tencentcloud/chat-uikit-engine/index.js:1", `UserStatusHandler.subscribeUserStatus userID count:${s2}`), Promise.resolve()) : this.getEngine().chat.subscribeUserStatus(e2);
    }
    unsubscribeUserStatus(e2) {
      const t2 = this.getEngine(), { userIDList: s2 = [] } = e2 || {};
      return t2.chat.unsubscribeUserStatus({ userIDList: s2 }).then((e3) => {
        const { failureUserList: n2 } = e3.data, i2 = [];
        return s2.forEach((e4) => {
          n2.includes(e4) || i2.push({ userID: e4, statusType: u$2.UNSUB_USER });
        }), t2.TUIStore.update(o$2.USER, "userStatusList", i2), e3;
      }).catch((e3) => Promise.reject(e3));
    }
    startToSubscribe() {
      const e2 = this.getEngine(), t2 = e2.TUIStore.getData(o$2.CONV, "conversationList"), s2 = e2.TUIStore.getData(o$2.USER, "userStatusList"), n2 = [];
      t2.forEach((t3) => {
        if (t3.type === e2.TYPES.CONV_C2C) {
          const i2 = t3.conversationID.replace(e2.TYPES.CONV_C2C, "");
          s2.has(i2) || n2.push(i2);
        }
      }), 0 !== n2.length && e2.chat.isReady() && (this.subscribeUserStatus({ userIDList: n2 }), this.getUserStatus({ userIDList: n2 }));
    }
  }
  class xt extends ne {
    constructor() {
      super(), this.userProfileHandler = new Rt(this), this.userStatusHandler = new Nt(this);
    }
    static getInstance() {
      return xt.instance || (xt.instance = new xt()), xt.instance;
    }
    init() {
      const e2 = this.getEngine();
      e2.eventCenter.addEvent(e2.EVENT.KICKED_OUT, this.onKickedOut.bind(this)), e2.eventCenter.addEvent(e2.EVENT.NET_STATE_CHANGE, this.onNetStateChange.bind(this)), this.userProfileHandler.init(), this.userStatusHandler.init(), this.initMessageReadReceipt();
    }
    onKickedOut(e2) {
      this.getEngine().TUIStore.update(o$2.USER, "kickedOut", e2.type);
    }
    onNetStateChange(e2) {
      this.getEngine().TUIStore.update(o$2.USER, "netStateChange", e2.state);
    }
    initMessageReadReceipt() {
      const e2 = At("displayMessageReadReceipt") || true;
      this.getEngine().TUIStore.update(o$2.USER, "displayMessageReadReceipt", e2);
    }
    switchUserStatus(e2) {
      return this.userStatusHandler.switchUserStatus(e2);
    }
    switchMessageReadStatus(e2) {
      this.getEngine().TUIStore.update(o$2.USER, "displayMessageReadReceipt", e2), Lt("displayMessageReadReceipt", e2);
    }
    getUserProfile(e2) {
      return this.userProfileHandler.getUserProfile(e2);
    }
    updateMyProfile(e2) {
      return this.userProfileHandler.updateMyProfile(e2);
    }
    addToBlacklist(e2) {
      return this.userProfileHandler.addToBlacklist(e2);
    }
    removeFromBlacklist(e2) {
      return this.userProfileHandler.removeFromBlacklist(e2);
    }
    getUserStatus(e2) {
      return this.userStatusHandler.getUserStatus(e2);
    }
    subscribeUserStatus(e2) {
      return this.userStatusHandler.subscribeUserStatus(e2);
    }
    unsubscribeUserStatus(e2) {
      return this.userStatusHandler.unsubscribeUserStatus(e2);
    }
  }
  class Gt {
    constructor(e2) {
      this.TUIChatService = e2, this.userShowNameMap = /* @__PURE__ */ new Map(), this.requestedUserMap = /* @__PURE__ */ new Map();
    }
    getEngine() {
      return this.TUIChatService.getEngine();
    }
    t(e2) {
      return this.getEngine().TUITranslate.t(e2);
    }
    handleTextMessage(e2) {
      return { text: this.decodeText(e2.payload) };
    }
    handleFaceMessage(e2) {
      const t2 = { name: "", url: "", type: "" };
      return e2.payload.data.indexOf("@custom") > -1 ? (t2.name = e2.payload.data, t2.type = "custom", t2) : (t2.name = e2.payload.data.indexOf("@2x") < 0 ? `${e2.payload.data}@2x` : e2.payload.data, t2.url = `${P}${t2.name}.png`, t2);
    }
    handleLocationMessage(e2) {
      const t2 = { lon: "", lat: "", href: "", url: "", description: "" };
      return t2.lon = e2.payload.longitude.toFixed(6), t2.lat = e2.payload.latitude.toFixed(6), t2.href = `${R$2}pointx=${t2.lon}&pointy=${t2.lat}&name=${e2.payload.description}`, t2.url = `${L}center=${t2.lat},${t2.lon}&zoom=10&size=300*150&maptype=roadmap&markers=size:large|color:0xFFCCFF|label:k|${t2.lat},${t2.lon}&key=UBNBZ-PTP3P-TE7DB-LHRTI-Y4YLE-VWBBD`, t2.description = e2.payload.description, t2;
    }
    handleImageMessage(e2) {
      return { url: e2.payload.imageInfoArray[0].url, width: e2.payload.imageInfoArray[0].width, height: e2.payload.imageInfoArray[0].height };
    }
    handleAudioMessage(e2) {
      return { url: e2.payload.url, second: e2.payload.second };
    }
    handleVideoMessage(e2) {
      return { url: e2.payload.videoUrl, snapshotUrl: e2.payload.snapshotUrl, snapshotWidth: e2.payload.snapshotWidth, snapshotHeight: e2.payload.snapshotHeight };
    }
    handleFileMessage(e2) {
      return { url: e2.payload.fileUrl, name: e2.payload.fileName, size: C$2(e2.payload.fileSize) };
    }
    handleCustomMessage(e2) {
      var t2;
      const s2 = this.handleCreateGroupCustomMessage(e2);
      return { custom: this.handleCallKitSignaling(e2) || s2 || (null === (t2 = null == e2 ? void 0 : e2.payload) || void 0 === t2 ? void 0 : t2.extension) || `${this.t("TUIChat.[自定义消息]")}`, businessID: s2 ? "group_create" : "" };
    }
    handleMergeMessage(e2) {
      return Object.assign({}, e2.payload);
    }
    handleGroupTipsMessage(e2) {
      var t2, s2, n2, i2, r2, a2;
      const o2 = this.getEngine(), u2 = { text: "" };
      let c2 = (null == e2 ? void 0 : e2.nick) || (null === (s2 = null === (t2 = null == e2 ? void 0 : e2.payload) || void 0 === t2 ? void 0 : t2.userIDList) || void 0 === s2 ? void 0 : s2.join(","));
      switch ((null === (i2 = null === (n2 = null == e2 ? void 0 : e2.payload) || void 0 === n2 ? void 0 : n2.memberList) || void 0 === i2 ? void 0 : i2.length) > 0 && (c2 = "", null === (a2 = null === (r2 = null == e2 ? void 0 : e2.payload) || void 0 === r2 ? void 0 : r2.memberList) || void 0 === a2 || a2.map((e3) => {
        const t3 = (null == e3 ? void 0 : e3.nick) || (null == e3 ? void 0 : e3.userID);
        c2 += `${this.substringByLength(t3)},`;
      }), c2 = null == c2 ? void 0 : c2.slice(0, -1)), e2.payload.operationType) {
        case o2.TYPES.GRP_TIP_MBR_JOIN:
          u2.text = `${c2} ${this.t("message.tip.加入群组")}`;
          break;
        case o2.TYPES.GRP_TIP_MBR_QUIT:
          u2.text = `${this.t("message.tip.群成员")}：${c2} ${this.t("message.tip.退出群组")}`;
          break;
        case o2.TYPES.GRP_TIP_MBR_KICKED_OUT:
          u2.text = `${this.t("message.tip.群成员")}：${c2} ${this.t("message.tip.被")}${this.t("message.tip.踢出群组")}`;
          break;
        case o2.TYPES.GRP_TIP_MBR_SET_ADMIN:
          u2.text = `${this.t("message.tip.群成员")}：${c2} ${this.t("message.tip.成为管理员")}`;
          break;
        case o2.TYPES.GRP_TIP_MBR_CANCELED_ADMIN:
          u2.text = `${this.t("message.tip.群成员")}：${c2} ${this.t("message.tip.被撤销管理员")}`;
          break;
        case o2.TYPES.GRP_TIP_GRP_PROFILE_UPDATED:
          u2.text = this.handleGroupProfileUpdated(e2);
          break;
        case o2.TYPES.GRP_TIP_MBR_PROFILE_UPDATED:
          for (const t3 of e2.payload.memberList)
            t3.muteTime > 0 ? u2.text = `${this.t("message.tip.群成员")}：${c2} ${this.t("message.tip.被禁言")}` : u2.text = `${this.t("message.tip.群成员")}：${c2} ${this.t("message.tip.被取消禁言")}`;
          break;
        default:
          u2.text = `[${this.t("message.tip.群提示消息")}]`;
      }
      return u2;
    }
    handleGroupSystemMessage(e2) {
      const t2 = e2.payload.groupProfile.name || e2.payload.groupProfile.groupID, s2 = { text: "" };
      switch (e2.payload.operationType) {
        case 1:
          s2.text = `${e2.payload.operatorID} ${this.t("message.tip.申请加入群组")}：${t2}`;
          break;
        case 2:
          s2.text = `${this.t("message.tip.成功加入群组")}：${t2}`;
          break;
        case 3:
          s2.text = `${this.t("message.tip.申请加入群组")}：${t2} ${this.t("message.tip.被拒绝")}`;
          break;
        case 4:
          s2.text = `${this.t("message.tip.你被管理员")}${e2.payload.operatorID} ${this.t("message.tip.踢出群组")}：${t2}`;
          break;
        case 5:
          s2.text = `${this.t("message.tip.群")}：${t2} ${this.t("message.tip.被")} ${e2.payload.operatorID} ${this.t("message.tip.解散")}`;
          break;
        case 6:
          s2.text = `${e2.payload.operatorID} ${this.t("message.tip.创建群")}：${t2}`;
          break;
        case 7:
        case 12:
          s2.text = `${e2.payload.operatorID} ${this.t("message.tip.邀请你加群")}：${t2}`;
          break;
        case 8:
          s2.text = `${this.t("message.tip.你退出群组")}：${t2}`;
          break;
        case 9:
          s2.text = `${this.t("message.tip.你被")}${e2.payload.operatorID} ${this.t("message.tip.设置为群")}：${t2} ${this.t("message.tip.的管理员")}`;
          break;
        case 10:
          s2.text = `${this.t("message.tip.你被")}${e2.payload.operatorID} ${this.t("message.tip.撤销群")}：${t2} ${this.t("message.tip.的管理员身份")}`;
          break;
        case 13:
          s2.text = `${e2.payload.operatorID} ${this.t("message.tip.同意加群")}：${t2}`;
          break;
        case 14:
          s2.text = `${e2.payload.operatorID} ${this.t("message.tip.拒接加群")}：${t2}`;
          break;
        case 255:
          s2.text = `${this.t("message.tip.自定义群系统通知")}: ${e2.payload.userDefinedField}`;
          break;
        default:
          s2.text = "未解析的群系统通知";
      }
      return s2;
    }
    handleCallKitSignaling(e2) {
      var t2, s2, n2, i2, r2, a2, o2, u2, c2, g2;
      const l2 = U$1(e2.payload.data);
      if (1 !== (null == l2 ? void 0 : l2.businessID))
        return "";
      const h2 = U$1(null == l2 ? void 0 : l2.data), p2 = e2.fromAccount || e2.from, d2 = this.getEngine().TUIFriend.getFriendRemark([p2]), f2 = this.getEngine().getMyUserID();
      let m2 = d2[p2] || e2.nameCard || e2.nick || p2;
      switch (m2 = this.substringByLength(m2), null == l2 ? void 0 : l2.actionType) {
        case 1:
          return "audioCall" !== (null === (t2 = null == h2 ? void 0 : h2.data) || void 0 === t2 ? void 0 : t2.cmd) && "videoCall" !== (null === (s2 = null == h2 ? void 0 : h2.data) || void 0 === s2 ? void 0 : s2.cmd) || !(null == l2 ? void 0 : l2.groupID) ? "hangup" === (null === (n2 = null == h2 ? void 0 : h2.data) || void 0 === n2 ? void 0 : n2.cmd) ? (null == l2 ? void 0 : l2.groupID) ? `${this.t("message.custom.通话结束")}` : `${this.t("message.custom.通话时长")}：${function(e3) {
            const t3 = e3;
            let s3, n3, i3, r3 = "";
            return t3 >= 3600 ? (s3 = parseInt("" + t3 / 3600, 10) < 10 ? `0${parseInt("" + t3 / 3600, 10)}` : parseInt("" + t3 / 3600, 10), n3 = parseInt("" + t3 % 60 / 60, 10) < 10 ? `0${parseInt("" + t3 % 60 / 60, 10)}` : parseInt("" + t3 % 60 / 60, 10), i3 = t3 % 3600 < 10 ? "0" + t3 % 3600 : t3 % 3600, i3 > 60 && (n3 = parseInt("" + i3 / 60, 10) < 10 ? `0${parseInt("" + i3 / 60, 10)}` : parseInt("" + i3 / 60, 10), i3 = i3 % 60 < 10 ? "0" + i3 % 60 : i3 % 60), r3 = `${s3}:${n3}:${i3}`) : t3 >= 60 && t3 < 3600 ? (n3 = parseInt("" + t3 / 60, 10) < 10 ? `0${parseInt("" + t3 / 60, 10)}` : parseInt("" + t3 / 60, 10), i3 = t3 % 60 < 10 ? "0" + t3 % 60 : t3 % 60, r3 = `00:${n3}:${i3}`) : t3 < 60 && (i3 = t3 < 10 ? `0${t3}` : t3, r3 = `00:00:${i3}`), r3;
          }(null == h2 ? void 0 : h2.call_end)}` : "switchToAudio" === (null === (i2 = null == h2 ? void 0 : h2.data) || void 0 === i2 ? void 0 : i2.cmd) ? `${this.t("message.custom.切换语音通话")}` : "switchToVideo" === (null === (r2 = null == h2 ? void 0 : h2.data) || void 0 === r2 ? void 0 : r2.cmd) ? `${this.t("message.custom.切换视频通话")}` : `${this.t("message.custom.发起通话")}` : `${m2} ${this.t("message.custom.发起通话")}`;
        case 2:
          return (null == l2 ? void 0 : l2.groupID) ? `${m2} ${this.t("message.custom.取消通话")}` : this.isOldUIKit("message.custom.已取消") ? this.t("message.custom.取消通话") : (null == l2 ? void 0 : l2.inviter) === f2 ? this.t("message.custom.已取消") : this.t("message.custom.对方已取消");
        case 3:
          return "switchToAudio" === (null === (a2 = null == h2 ? void 0 : h2.data) || void 0 === a2 ? void 0 : a2.cmd) ? `${this.t("message.custom.切换语音通话")}` : "switchToVideo" === (null === (o2 = null == h2 ? void 0 : h2.data) || void 0 === o2 ? void 0 : o2.cmd) ? `${this.t("message.custom.切换视频通话")}` : (null == l2 ? void 0 : l2.groupID) ? `${m2} ${this.t("message.custom.已接听")}` : this.t("message.custom.已接听");
        case 4:
          return (null == l2 ? void 0 : l2.groupID) ? `${m2} ${this.t("message.custom.拒绝通话")}` : this.isOldUIKit("message.custom.已拒绝") ? this.t("message.custom.拒绝通话") : "line_busy" === (null == h2 ? void 0 : h2.line_busy) || "lineBusy" === (null == h2 ? void 0 : h2.data.message) ? (null == l2 ? void 0 : l2.inviter) === f2 ? this.t("message.custom.对方忙线中") : this.t("message.custom.忙线未接听") : (null == l2 ? void 0 : l2.inviter) === f2 ? this.t("message.custom.对方已拒绝") : this.t("message.custom.已拒绝");
        case 5:
          if ("switchToAudio" === (null === (u2 = null == h2 ? void 0 : h2.data) || void 0 === u2 ? void 0 : u2.cmd))
            return `${this.t("message.custom.切换语音通话")}`;
          if ("switchToVideo" === (null === (c2 = null == h2 ? void 0 : h2.data) || void 0 === c2 ? void 0 : c2.cmd))
            return `${this.t("message.custom.切换视频通话")}`;
          if (null == l2 ? void 0 : l2.groupID) {
            if (p2 === (null == l2 ? void 0 : l2.inviter)) {
              this.handleCallkitTimeoutSignaling(l2.inviteeList);
              let e3 = "";
              return null === (g2 = l2.inviteeList) || void 0 === g2 || g2.forEach((t3) => {
                const s3 = this.userShowNameMap.get(t3) || t3;
                e3 += `${this.substringByLength(s3)}、`;
              }), e3 = e3.substring(0, e3.lastIndexOf("、")), `${e3} ${this.t("message.custom.无应答")}`;
            }
            return `${m2} ${this.t("message.custom.无应答")}`;
          }
          return this.isOldUIKit("message.custom.对方无应答") ? this.t("message.custom.无应答") : (null == l2 ? void 0 : l2.inviter) === f2 ? this.t("message.custom.对方无应答") : this.t("message.custom.超时无应答");
        default:
          return "";
      }
    }
    handleCreateGroupCustomMessage(e2) {
      let t2;
      const s2 = U$1(e2.payload.data);
      return "group_create" === (null == s2 ? void 0 : s2.businessID) && (t2 = `${s2.opUser} ${s2.content}`), t2;
    }
    decodeText(e2) {
      const t2 = [];
      let s2 = e2.text, n2 = -1, i2 = -1;
      for (; "" !== s2; )
        switch (n2 = s2.indexOf("["), i2 = s2.indexOf("]"), n2) {
          case 0:
            if (-1 === i2)
              t2.push({ name: "text", text: s2 }), s2 = "";
            else {
              const e3 = s2.slice(0, i2 + 1);
              e3.indexOf("@custom") > -1 ? (t2.push({ name: "img", src: "", type: "custom", emojiKey: e3 }), s2 = s2.substring(i2 + 1)) : A$1[e3] ? (t2.push({ name: "img", src: D + A$1[e3], emojiKey: e3 }), s2 = s2.substring(i2 + 1)) : (t2.push({ name: "text", text: "[" }), s2 = s2.slice(1));
            }
            break;
          case -1:
            t2.push({ name: "text", text: s2 }), s2 = "";
            break;
          default:
            t2.push({ name: "text", text: s2.slice(0, n2) }), s2 = s2.substring(n2);
        }
      return t2;
    }
    handleGroupProfileUpdated(e2) {
      const { nick: t2, payload: s2 } = e2, { newGroupProfile: n2, memberList: i2, operatorID: r2 } = s2;
      let a2 = "";
      const o2 = t2 || r2, u2 = Object.keys(n2)[0];
      switch (u2) {
        case "muteAllMembers":
          a2 = n2[u2] ? `${this.t("message.tip.管理员")} ${o2} ${this.t("message.tip.开启全员禁言")}` : `${this.t("message.tip.管理员")} ${o2} ${this.t("message.tip.取消全员禁言")}`;
          break;
        case "ownerID":
          a2 = `${i2[0].nick || i2[0].userID} ${this.t("message.tip.成为新的群主")}`;
          break;
        case "groupName":
          a2 = `${o2} ${this.t("message.tip.修改群名为")} ${n2[u2]}`;
          break;
        case "notification":
          a2 = this.isOldUIKit("message.tip.把群公告修改为") ? `${o2} ${this.t("message.tip.发布新公告")}` : `${o2} ${this.t("message.tip.把群公告修改为")} "${n2[u2]}"`;
      }
      return a2;
    }
    handleCallkitTimeoutSignaling(e2 = []) {
      if (0 === e2.length)
        return;
      const t2 = this.getEngine().TUIFriend.getFriendRemark(e2), s2 = [];
      e2.forEach((e3) => {
        const n2 = t2[e3];
        n2 ? this.userShowNameMap.set(e3, n2) : this.requestedUserMap.has(e3) || (s2.push(e3), this.requestedUserMap.set(e3, 1));
      }), s2.length > 0 && this.getEngine().TUIUser.getUserProfile({ userIDList: s2 }).then((e3) => {
        (e3.data || []).forEach((e4) => {
          const { userID: t3, nick: s3 } = e4, n2 = s3 || t3;
          this.userShowNameMap.set(t3, n2);
        });
      }).catch((e3) => {
      });
    }
    substringByLength(e2, t2 = 12) {
      return e2.length > t2 ? `${e2.slice(0, t2)}...` : e2;
    }
    isOldUIKit(e2) {
      var t2;
      const s2 = e2.lastIndexOf("."), n2 = e2.slice(0, s2 + 1);
      return null === (t2 = this.t(e2)) || void 0 === t2 ? void 0 : t2.startsWith(n2);
    }
  }
  class wt {
    constructor(e2) {
      this.TUIChatService = e2, this.typingTo = "", this.timer = null;
    }
    getEngine() {
      return this.TUIChatService.getEngine();
    }
    clearTypingStatus() {
      this.getEngine().TUIStore.getData(o$2.CHAT, "typingStatus") && this.getEngine().TUIStore.update(o$2.CHAT, "typingStatus", false), this.timer && clearTimeout(this.timer), this.timer = null;
    }
    handleLastMessage(e2) {
      const t2 = this.getEngine(), s2 = t2.TUIStore.getData(o$2.CHAT, "typingStatus");
      if (e2.type === this.getEngine().TYPES.MSG_CUSTOM && "in" === e2.flow) {
        const n2 = U$1(e2.payload.data);
        if (n2.businessID === c$2.BUSINESS_ID) {
          const { typingStatus: e3, userAction: i2 } = n2;
          if (e3 === c$2.STATUS_START || i2 === c$2.ACTION_START_ID)
            return s2 ? (this.timer && clearTimeout(this.timer), this.timer = null) : t2.TUIStore.update(o$2.CHAT, "typingStatus", true), this.timer = setTimeout(() => {
              this.clearTypingStatus();
            }, 3e4), t2.TUIStore.getData(o$2.CHAT, "typingStatus");
          e3 !== c$2.STATUS_END && i2 !== c$2.ACTION_END_ID || this.clearTypingStatus();
        }
      }
    }
    filterTypingMessage(e2 = []) {
      if (0 === e2.length)
        return [];
      return this.getEngine().TUIStore.getData(o$2.APP, "enableTyping") && this.handleLastMessage(e2[e2.length - 1]), e2.filter((e3) => {
        if (e3.type === this.getEngine().TYPES.MSG_CUSTOM) {
          return U$1(e3.payload.data).businessID !== c$2.BUSINESS_ID;
        }
        return true;
      });
    }
    createTypingMessage(e2 = c$2.STATUS_END, t2 = "") {
      const { BUSINESS_ID: s2, STATUS_START: n2, VERSION: i2, ACTION_START_ID: r2, ACTION_END_ID: a2, ACTION_START: o2, ACTION_END: u2, NEED_TYPING: g2 } = c$2;
      return { to: t2, conversationType: this.getEngine().TYPES.CONV_C2C, payload: { data: JSON.stringify({ businessID: s2, typingStatus: e2, version: i2, userAction: e2 === n2 ? r2 : a2, actionParam: e2 === n2 ? o2 : u2 }), description: "", extension: "" }, cloudCustomData: JSON.stringify({ messageFeature: { needTyping: g2, version: i2 } }) };
    }
    sendTyping(e2 = false, t2 = "") {
      if (e2) {
        this.typingTo = t2;
        const e3 = this.createTypingMessage(c$2.STATUS_START, t2);
        this.getEngine().TUIChat.sendCustomMessage(e3, { onlineUserOnly: true });
      } else
        this.sendTypingEnd();
    }
    sendTypingEnd() {
      if (this.typingTo) {
        const e2 = this.createTypingMessage(c$2.STATUS_END, this.typingTo);
        this.getEngine().TUIChat.sendCustomMessage(e2, { onlineUserOnly: true });
      }
      this.typingTo = "";
    }
  }
  class Vt {
    constructor(e2) {
      this.TUIChatService = e2;
    }
    getEngine() {
      return this.TUIChatService.getEngine();
    }
    init() {
      const e2 = this.getEngine();
      e2.eventCenter.addEvent(e2.EVENT.MESSAGE_READ_RECEIPT_RECEIVED, this.onMessageReadReceiptReceived.bind(this));
    }
    onMessageReadReceiptReceived(e2) {
      const t2 = this.getEngine(), s2 = t2.TUIStore.getData(o$2.CONV, "currentConversationID"), n2 = [];
      e2.forEach((e3) => {
        const { messageID: i2 } = e3, r2 = t2.chat.findMessage(i2);
        r2 && s2 === r2.conversationID && n2.push(r2);
      }), n2.length > 0 && t2.TUIChat.updateMessageList(n2, "edit");
    }
    sendMessageReadReceipt(e2) {
      const t2 = [];
      return e2.forEach((e3) => {
        const s2 = e3.getMessage();
        t2.push(s2);
      }), this.getEngine().chat.sendMessageReadReceipt(t2);
    }
    getGroupMessageReadMemberList(e2) {
      const t2 = e2.message.getMessage(), s2 = Object.assign(Object.assign({}, e2), { message: t2 });
      return this.getEngine().chat.getGroupMessageReadMemberList(s2);
    }
    getMessageReadReceiptList(e2) {
      const t2 = this.getEngine(), s2 = t2.TUIStore.getData(o$2.APP, "enabledMessageReadReceipt"), n2 = t2.TUIStore.getData(o$2.USER, "displayMessageReadReceipt");
      !s2 || !n2 || 0 === e2.length || e2[0].conversationType !== t2.TYPES.CONV_GROUP || t2.chat.getMessageReadReceiptList(e2).then((e3) => {
        const { messageList: t3 } = e3.data;
        this.TUIChatService.updateMessageList(t3, "edit");
      }).catch((e3) => {
        formatAppLog("warn", "at node_modules/@tencentcloud/chat-uikit-engine/index.js:1", `ReadReceiptHandler.getMessageReadReceiptList error:${e3.message}`);
      });
    }
  }
  class Ft extends ne {
    constructor() {
      super(), this.serv = "TUIChatService", this.messageHandler = new Gt(this), this.typingHandler = new wt(this), this.readReceiptHandler = new Vt(this), this.isSwitching = true, this.delayGetHoppingFunction = void 0, this.hoppingConfigMap = /* @__PURE__ */ new Map();
    }
    static getInstance() {
      return Ft.instance || (Ft.instance = new Ft()), Ft.instance;
    }
    init() {
      const e2 = this.getEngine();
      e2.eventCenter.addEvent(e2.EVENT.MESSAGE_RECEIVED, this.onMessageReceived.bind(this)), e2.eventCenter.addEvent(e2.EVENT.MESSAGE_MODIFIED, this.onMessageModified.bind(this)), e2.eventCenter.addEvent(e2.EVENT.MESSAGE_REVOKED, this.onMessageRevoked.bind(this)), e2.eventCenter.addEvent(e2.EVENT.MESSAGE_READ_BY_PEER, this.onMessageReadByPeer.bind(this)), e2.eventCenter.addEvent(e2.EVENT.MESSAGE_REACTIONS_UPDATED, this.onMessageReactionsUpdated.bind(this)), this.onCurrentConversationIDUpdated(), this.onMessageSource(), this.readReceiptHandler.init();
    }
    onMessageReceived(e2) {
      this.updateMessageList(e2, "push"), this.getEngine().TUIStore.update(o$2.CHAT, "newMessageList", e2);
    }
    onMessageModified(e2) {
      this.updateMessageList(e2, "edit");
    }
    onMessageRevoked(e2) {
      this.updateMessageList(e2, "edit");
    }
    onMessageReadByPeer(e2) {
      this.updateMessageList(e2, "edit");
    }
    onMessageReactionsUpdated(e2) {
      this.updateMessageReactionList([e2]);
    }
    onCurrentConversationIDUpdated() {
      const e2 = this.getEngine();
      e2.TUIStore.watch(o$2.CONV, { currentConversationID: (t2) => {
        this.isSwitching = true, this.delayGetHoppingFunction = void 0, this.hoppingConfigMap.clear(), e2.TUIStore.reset(o$2.CHAT), this.typingHandler.clearTypingStatus(), this.typingHandler.sendTypingEnd(), ie(t2) || this.getMessageList().finally(() => {
          this.isSwitching = false, this.delayGetHoppingFunction && this.delayGetHoppingFunction();
        });
      } });
    }
    onMessageSource() {
      const e2 = this.getEngine();
      e2.TUIStore.watch(o$2.CHAT, { messageSource: (t2) => {
        const s2 = this.getStoreData(o$2.CONV, "currentConversationID");
        if (!s2 || t2 && t2.conversationID !== s2)
          return;
        if (S$1(t2))
          return this.hoppingConfigMap.clear(), e2.TUIStore.update(o$2.CHAT, "messageList", []), e2.TUIStore.update(o$2.CHAT, "nextReqMessageID", ""), e2.TUIStore.update(o$2.CHAT, "isCompleted", false), void this.getMessageList();
        const n2 = this.getStoreData(o$2.CHAT, "messageList");
        n2 && n2.find((e3) => t2 && e3.ID === t2.ID) || (this.isSwitching ? this.delayGetHoppingFunction = this.getMessageListHoppingForDown : this.getMessageListHoppingForDown());
      } });
    }
    getMessageListHoppingForDown() {
      const e2 = this.getStoreData(o$2.CHAT, "messageList"), { conversationID: t2, sequence: s2, time: n2, ID: i2 } = this.getStoreData(o$2.CHAT, "messageSource");
      if (e2 && e2.find((e3) => i2 && e3.ID === i2))
        return;
      const r2 = this.getEngine();
      r2.TUIStore.update(o$2.CHAT, "messageList", []), r2.TUIStore.update(o$2.CHAT, "nextReqMessageID", ""), r2.TUIStore.update(o$2.CHAT, "isCompleted", false), this.getMessageListHopping({ conversationID: t2, sequence: s2, time: n2, direction: 1 });
    }
    getStoreData(e2, t2) {
      return this.getEngine().TUIStore.getData(e2, t2);
    }
    sendMessage(e2, t2) {
      this.updateMessageList([e2], "send");
      const s2 = this.getEngine().chat.sendMessage(e2, t2);
      return this.getResponse(s2);
    }
    getResponse(e2, t2 = true, s2 = true) {
      return e2.then((e3) => {
        const s3 = e3.data.messageList ? e3.data.messageList : [e3.data.message];
        return t2 && this.updateMessageList(s3, "edit"), e3;
      }).catch((e3) => {
        var t3;
        return s2 && (null === (t3 = null == e3 ? void 0 : e3.data) || void 0 === t3 ? void 0 : t3.message) && this.updateMessageList([e3.data.message], "edit"), Promise.reject(e3);
      });
    }
    updateMessageList(e2, t2 = "") {
      if (this.getStoreData(o$2.CHAT, "messageSource") && "unshift" !== t2 && "edit" !== t2)
        return;
      const s2 = this.getStoreData(o$2.CHAT, "messageList"), n2 = this.updateTargetMessageList(e2, s2, t2);
      this.getEngine().TUIStore.update(o$2.CHAT, "messageList", n2);
    }
    updateTargetMessageList(e2, t2, s2 = "") {
      const n2 = this.getStoreData(o$2.CONV, "currentConversationID");
      let i2 = e2.filter((e3) => e3.conversationID === n2);
      if (i2 = this.handleC2CCallSignaling(i2), !s2 || 0 === i2.length)
        return t2;
      const r2 = t2 || [];
      let a2 = [];
      if ("send" === s2 || "push" === s2) {
        const e3 = this.getStoreData(o$2.CHAT, "userInfo");
        Object.keys(e3).length > 0 && this.updateLocalMessage(i2, e3);
      }
      switch (s2) {
        case "edit":
          for (const e3 of t2) {
            const t3 = i2.find((t4) => t4.ID === e3.ID);
            a2.push(t3 || e3);
          }
          break;
        case "resend":
          a2 = r2.filter((e3) => e3.ID !== i2[0].ID).concat(i2);
          break;
        case "send":
          a2 = r2.concat(this.typingHandler.filterTypingMessage(i2));
          break;
        case "push":
          a2 = r2.concat(this.typingHandler.filterTypingMessage(i2)), this.getEngine().chat.setMessageRead({ conversationID: n2 });
          break;
        case "unshift":
          a2 = i2.filter((e3) => 0 === r2.length || !r2.find((t3) => t3.ID === e3.ID)), a2.push(...r2);
      }
      return a2;
    }
    enterTypingState() {
      this.getStoreData(o$2.APP, "enableTyping") && this.sendTyping(true);
    }
    leaveTypingState() {
      this.getStoreData(o$2.APP, "enableTyping") && this.sendTyping(false);
    }
    sendTyping(e2) {
      const t2 = this.getEngine(), s2 = this.getStoreData(o$2.CONV, "currentConversationID");
      if (!s2.startsWith(t2.TYPES.CONV_C2C))
        return;
      const n2 = s2.replace(t2.TYPES.CONV_C2C, "");
      if (e2) {
        const e3 = this.getStoreData(o$2.CHAT, "messageList").filter((e4) => "in" === e4.flow);
        if (0 === e3.length)
          return;
        const t3 = 1e3 * e3[e3.length - 1].time;
        if ((/* @__PURE__ */ new Date()).getTime() - t3 > 3e4)
          return;
      }
      this.typingHandler.sendTyping(e2, n2);
    }
    quoteMessage(e2) {
      return this.getEngine().TUIStore.update(o$2.CHAT, "quoteMessage", { message: e2, type: "quote" }), e2;
    }
    replyMessage(e2) {
      return this.getEngine().TUIStore.update(o$2.CHAT, "quoteMessage", { message: e2, type: "reply" }), e2;
    }
    getCurrentConvInfo() {
      const { conversationID: e2 = "", type: t2 } = this.getStoreData(o$2.CONV, "currentConversation") || {};
      return { to: e2.replace(t2, ""), conversationType: t2 };
    }
    t(e2) {
      return this.getEngine().TUITranslate.t(e2) || e2;
    }
    getMessageAbstractAndType(e2) {
      var t2, s2;
      const n2 = this.getEngine(), i2 = { abstract: "", type: 0 };
      switch (e2.type) {
        case n2.TYPES.MSG_TEXT:
          i2.abstract = null === (t2 = null == e2 ? void 0 : e2.payload) || void 0 === t2 ? void 0 : t2.text, i2.type = 1;
          break;
        case n2.TYPES.MSG_CUSTOM:
          i2.abstract = "[自定义消息]", i2.type = 2;
          break;
        case n2.TYPES.MSG_IMAGE:
          i2.abstract = "[图片]", i2.type = 3;
          break;
        case n2.TYPES.MSG_AUDIO:
          i2.abstract = "[语音]", i2.type = 4;
          break;
        case n2.TYPES.MSG_VIDEO:
          i2.abstract = "[视频]", i2.type = 5;
          break;
        case n2.TYPES.MSG_FILE:
          i2.abstract = "[文件]", i2.type = 6;
          break;
        case n2.TYPES.MSG_LOCATION:
          i2.type = 7;
          break;
        case n2.TYPES.MSG_FACE:
          i2.abstract = "[表情]", i2.type = 8;
          break;
        case n2.TYPES.MSG_GRP_TIP:
          i2.type = 9;
          break;
        case n2.TYPES.MSG_MERGER:
          i2.abstract = null === (s2 = null == e2 ? void 0 : e2.payload) || void 0 === s2 ? void 0 : s2.title, i2.type = 10;
      }
      return i2;
    }
    genMessageReply(e2, t2) {
      if ("reply" !== t2 && "quote" !== t2)
        return {};
      const { abstract: s2, type: n2 } = this.getMessageAbstractAndType(e2), i2 = { messageAbstract: s2, messageSender: e2.nick || e2.from, messageID: e2.ID }, r2 = Object.assign(Object.assign({}, i2), { messageType: n2, messageTime: null == e2 ? void 0 : e2.time, messageSequence: null == e2 ? void 0 : e2.sequence, version: 1 });
      if ("reply" === t2 && (r2.messageRootID = e2.ID, e2.cloudCustomData)) {
        const t3 = U$1(e2.cloudCustomData);
        t3.messageReply && t3.messageReply.messageRootID && (r2.messageRootID = t3.messageReply.messageRootID);
      }
      return { messageReply: r2, messageReplyRoot: i2 };
    }
    getMessageInfo(e2, t2, s2) {
      const { messageReply: n2, messageReplyRoot: i2 } = this.genMessageReply(t2, s2), r2 = e2.cloudCustomData ? U$1(e2.cloudCustomData) : {};
      let a2;
      if (r2.messageReply ? r2.messageReply = Object.assign(Object.assign({}, n2), r2.messageReply) : r2.messageReply = n2, "reply" === s2) {
        const { messageRootID: e3 } = n2;
        a2 = this.getEngine().chat.findMessage(e3);
        const t3 = (null == a2 ? void 0 : a2.cloudCustomData) ? U$1(a2.cloudCustomData) : {};
        t3.messageReplies || (t3.messageReplies = {}), o2 = t3.messageReplies.replies, ("function" == typeof Array.isArray ? Array.isArray(o2) : "array" === Object.prototype.toString.call(o2).match(/^\[object (.*)\]$/)[1].toLowerCase()) || (t3.messageReplies.replies = []), t3.messageReplies.replies.push(i2), a2.cloudCustomData = JSON.stringify(t3);
      }
      var o2;
      return { cloudCustomData: JSON.stringify(r2), rootMessage: a2 };
    }
    sendTextMessage(e2, t2) {
      const s2 = this.getEngine(), { message: n2, type: i2 } = this.getStoreData(o$2.CHAT, "quoteMessage");
      let r2 = { cloudCustomData: e2.cloudCustomData || "", rootMessage: void 0 };
      n2 && (r2 = this.getMessageInfo(e2, n2, i2));
      const a2 = s2.chat.createTextMessage(Object.assign(Object.assign(Object.assign({}, this.getCurrentConvInfo()), e2), { cloudCustomData: r2.cloudCustomData }));
      return this.sendMessage(a2, t2).then((e3) => (r2.rootMessage && this.modifyMessage(r2.rootMessage), s2.TUIStore.reset(o$2.CHAT, ["quoteMessage"], true), e3));
    }
    sendTextAtMessage(e2, t2) {
      const s2 = this.getEngine(), { message: n2, type: i2 } = this.getStoreData(o$2.CHAT, "quoteMessage");
      let r2 = { cloudCustomData: e2.cloudCustomData || "", rootMessage: void 0 };
      n2 && (r2 = this.getMessageInfo(e2, n2, i2));
      const a2 = s2.chat.createTextAtMessage(Object.assign(Object.assign(Object.assign({}, this.getCurrentConvInfo()), e2), { cloudCustomData: r2.cloudCustomData }));
      return this.sendMessage(a2, t2).then((e3) => (r2.rootMessage && this.modifyMessage(r2.rootMessage), s2.TUIStore.reset(o$2.CHAT, ["quoteMessage"], true), e3));
    }
    sendImageMessage(e2, t2) {
      const s2 = this.getEngine().chat.createImageMessage(Object.assign(Object.assign(Object.assign({}, this.getCurrentConvInfo()), e2), { onProgress: (e3) => {
        this.onProgress(s2.ID, e3);
      } }));
      return this.sendMessage(s2, t2);
    }
    sendAudioMessage(e2, t2) {
      const s2 = this.getEngine().chat.createAudioMessage(Object.assign(Object.assign(Object.assign({}, this.getCurrentConvInfo()), e2), { onProgress: (e3) => {
        this.onProgress(s2.ID, e3);
      } }));
      return this.sendMessage(s2, t2);
    }
    sendVideoMessage(e2, t2) {
      const s2 = this.getEngine().chat.createVideoMessage(Object.assign(Object.assign(Object.assign({}, this.getCurrentConvInfo()), e2), { onProgress: (e3) => {
        this.onProgress(s2.ID, e3);
      } }));
      return this.sendMessage(s2, t2);
    }
    sendCustomMessage(e2, t2) {
      const s2 = this.getEngine().chat.createCustomMessage(Object.assign(Object.assign({}, this.getCurrentConvInfo()), e2));
      return this.sendMessage(s2, t2);
    }
    sendFaceMessage(e2, t2) {
      const s2 = this.getEngine().chat.createFaceMessage(Object.assign(Object.assign({}, this.getCurrentConvInfo()), e2));
      return this.sendMessage(s2, t2);
    }
    sendFileMessage(e2, t2) {
      const s2 = this.getEngine().chat.createFileMessage(Object.assign(Object.assign(Object.assign({}, this.getCurrentConvInfo()), e2), { onProgress: (e3) => {
        this.onProgress(s2.ID, e3);
      } }));
      return this.sendMessage(s2, t2);
    }
    sendLocationMessage(e2, t2) {
      const s2 = this.getEngine().chat.createLocationMessage(Object.assign(Object.assign({}, this.getCurrentConvInfo()), e2));
      return this.sendMessage(s2, t2);
    }
    onProgress(e2, t2) {
      const s2 = this.getEngine().TUIStore.getMessageModel(e2);
      if (s2) {
        (t2 - s2.progress >= 0.1 || 1 === t2) && (s2.progress = t2, this.updateMessageList([s2], "edit"));
      }
    }
    setAbstractList(e2) {
      const t2 = this.getEngine(), s2 = e2.nick || e2.from;
      let n2 = "";
      switch (e2.type) {
        case t2.TYPES.MSG_TEXT:
          n2 = e2.payload.text || "", n2.length > 20 && (n2 = n2.slice(0, 20));
          break;
        case t2.TYPES.MSG_MERGER:
          n2 = `${this.t("TUIChat.[聊天记录]")}`;
          break;
        case t2.TYPES.MSG_IMAGE:
          n2 = `${this.t("TUIChat.[图片]")}`;
          break;
        case t2.TYPES.MSG_AUDIO:
          n2 = `${this.t("TUIChat.[音频]")}`;
          break;
        case t2.TYPES.MSG_VIDEO:
          n2 = `${this.t("TUIChat.[视频]")}`;
          break;
        case t2.TYPES.MSG_CUSTOM:
          n2 = `${this.t("TUIChat.[自定义消息]")}`;
          break;
        case t2.TYPES.MSG_FILE:
          n2 = `${this.t("TUIChat.[文件]")}`;
          break;
        case t2.TYPES.MSG_FACE:
          n2 = `${this.t("TUIChat.[动画表情]")}`;
      }
      return `${s2}: ${n2}`;
    }
    genMergerForwardPayload(e2, t2) {
      const { abstractList: s2 = [], compatibleText: n2 = "", title: i2 } = t2;
      return 0 === s2.length && e2.forEach((e3) => {
        s2.push(this.setAbstractList(e3));
      }), { messageList: e2, title: i2, abstractList: s2, compatibleText: n2 || this.t("TUIChat.请升级IMSDK到v2.10.1或更高版本查看此消息") };
    }
    genSendMergerForwardMessage(e2) {
      const { conversationList: t2, messageList: s2, params: n2, mergeInfo: i2, sendMessageOptions: r2 } = e2, a2 = [];
      for (let e3 = 0; e3 < t2.length; e3++) {
        const { conversationID: o2, type: u2 } = t2[e3], c2 = Object.assign({ to: o2.replace(`${u2}`, ""), conversationType: u2, payload: this.genMergerForwardPayload(s2, i2) }, n2), g2 = this.getEngine().chat.createMergerMessage(c2);
        a2.push(this.sendMessage(g2, r2));
      }
      return a2;
    }
    genTitle(e2, t2) {
      const { nick: s2, from: n2, to: i2 } = e2;
      return `${s2 || n2} ${this.t("TUIChat.和")} ${t2 || i2} ${this.t("TUIChat.的聊天记录")}`;
    }
    genMergeInfo(e2) {
      var t2;
      return i$2(this, void 0, void 0, function* () {
        const { messageList: s2, mergeInfo: n2 } = e2;
        if (n2.title)
          return n2;
        if (s2[0].conversationType === this.getEngine().TYPES.CONV_GROUP)
          return n2.title = this.t("TUIChat.群聊的聊天记录"), n2;
        try {
          const { data: e3 = [] } = yield this.getEngine().TUIUser.getUserProfile({ userIDList: [s2[0].to] });
          n2.title = this.genTitle(s2[0], null === (t2 = e3[0]) || void 0 === t2 ? void 0 : t2.nick);
        } catch (e3) {
          n2.title = this.genTitle(s2[0]);
        }
        return n2;
      });
    }
    sendMergerForwardMessage(e2) {
      return i$2(this, void 0, void 0, function* () {
        return e2.mergeInfo = yield this.genMergeInfo(e2), Promise.all(this.genSendMergerForwardMessage(e2));
      });
    }
    getOriginMessageList(e2) {
      return e2.map((e3) => e3 instanceof ue ? e3.getMessage() : e3);
    }
    sendForwardMessage(e2, t2, s2) {
      t2 = this.getOriginMessageList(t2);
      const i2 = s2 || {}, { needMerge: r2 = false, params: a2 = {}, mergeInfo: o2 = {} } = i2, u2 = n$1(i2, ["needMerge", "params", "mergeInfo"]);
      if (r2)
        return this.sendMergerForwardMessage({ conversationList: e2, messageList: t2, params: a2, mergeInfo: o2, sendMessageOptions: u2 });
      const c2 = [];
      for (let s3 = 0; s3 < e2.length; s3++) {
        const { conversationID: n2, type: i3 } = e2[s3], r3 = Object.assign({ to: n2.replace(`${i3}`, ""), conversationType: i3 }, a2), o3 = u2[n2] || u2;
        for (let e3 = 0; e3 < t2.length; e3++) {
          Reflect.set(r3, "payload", t2[e3]);
          const s4 = this.getEngine().chat.createForwardMessage(r3);
          c2.push(this.sendMessage(s4, o3));
        }
      }
      return Promise.all(c2);
    }
    revokeMessage(e2) {
      const t2 = this.getEngine().chat.revokeMessage(e2);
      return this.getResponse(t2, true, false);
    }
    resendMessage(e2) {
      e2.status = "unSend", this.updateMessageList([e2], "resend");
      const t2 = this.getEngine().chat.resendMessage(e2);
      return this.getResponse(t2, true, true);
    }
    deleteMessage(e2) {
      const t2 = this.getEngine().chat.deleteMessage(e2);
      return this.getResponse(t2, true, false);
    }
    setMessageExtensions(e2, t2) {
      return this.getEngine().chat.setMessageExtensions(e2, t2);
    }
    getMessageExtensions(e2) {
      return this.getEngine().chat.getMessageExtensions(e2);
    }
    deleteMessageExtensions(e2, t2) {
      return this.getEngine().chat.deleteMessageExtensions(e2, t2);
    }
    modifyMessage(e2) {
      const t2 = this.getEngine().chat.modifyMessage(e2);
      return this.getResponse(t2, true, false).catch((e3) => {
        const { code: t3 = 0, data: s2 = {} } = e3.code;
        throw t3 === l$2.MSG_MODIFY_CONFLICT ? formatAppLog("warn", "at node_modules/@tencentcloud/chat-uikit-engine/index.js:1", `${p$1.MSG_MODIFY_CONFLICT} data.message: ${null == s2 ? void 0 : s2.message}`) : t3 === l$2.MSG_MODIFY_DISABLED_IN_AVCHATROOM ? formatAppLog("warn", "at node_modules/@tencentcloud/chat-uikit-engine/index.js:1", p$1.MSG_MODIFY_DISABLED_IN_AVCHATROOM) : t3 === l$2.MODIFY_MESSAGE_NOT_EXIST && formatAppLog("warn", "at node_modules/@tencentcloud/chat-uikit-engine/index.js:1", p$1.MODIFY_MESSAGE_NOT_EXIST), e3;
      });
    }
    getMessageList(e2 = { conversationID: this.getStoreData(o$2.CONV, "currentConversationID"), nextReqMessageID: this.getStoreData(o$2.CHAT, "nextReqMessageID") }) {
      const t2 = this.getEngine();
      if (!t2.chat.isReady())
        return Promise.reject({ code: h$2.GET_MSG_LIST_ERROR, message: d$1.GET_MSG_LIST_ERROR });
      if (this.getStoreData(o$2.CHAT, "isCompleted"))
        return Promise.resolve({ data: { messageList: [], nextReqMessageID: "", isCompleted: true } });
      const s2 = this.getStoreData(o$2.CHAT, "messageSource"), n2 = this.hoppingConfigMap.get("nextMessageSeq"), i2 = this.hoppingConfigMap.get("nextMessageTime"), r2 = n2 || i2;
      return s2 && s2.conversationID === e2.conversationID && r2 ? this.getMessageListHopping() : t2.chat.getMessageList(e2).then((e3) => {
        var s3;
        const { messageList: n3, nextReqMessageID: i3, isCompleted: r3 } = e3.data, a2 = this.getStoreData(o$2.CHAT, "userInfo");
        Object.keys(a2).length > 0 && this.updateLocalMessage(n3, a2), this.updateMessageList(n3, "unshift"), t2.TUIStore.update(o$2.CHAT, "nextReqMessageID", i3), t2.TUIStore.update(o$2.CHAT, "isCompleted", r3);
        const u2 = null === (s3 = n3[0]) || void 0 === s3 ? void 0 : s3.conversationID, { operationType: c2 = 0 } = this.getEngine().TUIStore.getConversationModel(u2) || {};
        return 0 === c2 && (this.getMessageReactions({ messageList: n3 }), this.readReceiptHandler.getMessageReadReceiptList(n3)), e3;
      }).catch((e3) => Promise.reject(e3));
    }
    getMessageListHopping(e2) {
      var t2;
      void 0 === e2 && (e2 = { conversationID: null === (t2 = this.getStoreData(o$2.CHAT, "messageSource")) || void 0 === t2 ? void 0 : t2.conversationID, sequence: this.hoppingConfigMap.get("nextMessageSeq"), time: this.hoppingConfigMap.get("nextMessageTime") });
      const s2 = this.getEngine();
      return s2.chat.getMessageListHopping(e2).then((t3) => {
        const { messageList: n2, nextMessageSeq: i2, nextMessageTime: r2, isCompleted: a2 } = t3.data, u2 = 1 === e2.direction ? e2.sequence : i2, c2 = 1 === e2.direction ? e2.time : r2;
        return this.updateMessageList(n2, "unshift"), this.delayGetHoppingFunction = void 0, this.hoppingConfigMap.set("nextMessageSeq", u2), this.hoppingConfigMap.set("nextMessageTime", c2), s2.TUIStore.update(o$2.CHAT, "isCompleted", a2), t3;
      }).catch((e3) => Promise.reject(e3));
    }
    sendMessageReadReceipt(e2) {
      return this.readReceiptHandler.sendMessageReadReceipt(e2);
    }
    getGroupMessageReadMemberList(e2) {
      return this.readReceiptHandler.getGroupMessageReadMemberList(e2).then((e3) => {
        const { isCompleted: t2, cursor: s2, messageID: n2, unreadUserIDList: i2, readUserIDList: r2 } = e3.data, a2 = { code: 0, data: { cursor: s2, isCompleted: t2, messageID: n2, unreadUserInfoList: [], readUserInfoList: [] } }, o2 = [...i2, ...r2];
        return 0 === o2.length ? a2 : this.getEngine().TUIUser.getUserProfile({ userIDList: o2 }).then((e4) => (i2.length > 0 ? e4.data.forEach((e5) => {
          const { userID: t3, nick: s3 = "", avatar: n3 = "" } = e5;
          a2.data.unreadUserInfoList.push({ userID: t3, nick: s3, avatar: n3 });
        }) : e4.data.forEach((e5) => {
          const { userID: t3, nick: s3 = "", avatar: n3 = "" } = e5;
          a2.data.readUserInfoList.push({ userID: t3, nick: s3, avatar: n3 });
        }), a2));
      });
    }
    downloadMergedMessages(e2) {
      return this.getEngine().chat.downloadMergerMessage(e2);
    }
    setTranslationLanguage(e2) {
      this.getEngine().TUIStore.update(o$2.USER, "targetLanguage", e2);
    }
    translateText(e2) {
      const t2 = this.getStoreData(o$2.USER, "targetLanguage"), s2 = Object.assign({ targetLanguage: t2, sourceLanguage: "auto" }, e2);
      return this.getEngine().chat.translateText(s2);
    }
    searchCloudMessages(e2) {
      const t2 = this.getStoreData(o$2.CONV, "conversationList");
      return this.getEngine().chat.searchCloudMessages(e2).then((e3) => {
        const { searchResultList: s2 } = e3.data;
        return e3.data.searchResultList = s2.map((e4) => {
          const { messageList: s3, conversationID: i2 } = e4, r2 = n$1(e4, ["messageList", "conversationID"]), a2 = s3.map((e5) => new ue(e5)), o2 = t2.find((e5) => e5.conversationID === i2);
          return Object.assign(Object.assign({}, r2), { messageList: a2.sort((e5, t3) => t3.time - e5.time), conversation: o2 });
        }), e3;
      });
    }
    addMessageReaction(e2, t2) {
      return this.getEngine().chat.addMessageReaction(e2.getMessage(), t2);
    }
    removeMessageReaction(e2, t2) {
      return this.getEngine().chat.removeMessageReaction(e2.getMessage(), t2);
    }
    getMessageReactions(e2) {
      const { messageList: t2 = [] } = e2, s2 = this.getStoreData(o$2.APP, "enabledEmojiPlugin");
      formatAppLog("log", "at node_modules/@tencentcloud/chat-uikit-engine/index.js:1", `TUIChatService.getMessageReactions enabledEmojiPlugin:${s2} messageList length:${t2.length}`), s2 && t2.length > 0 && this.getEngine().chat.getMessageReactions(e2).then((e3) => {
        const t3 = e3.data.resultList || e3.data;
        this.updateMessageReactionList(t3);
      }).catch((e3) => {
      });
    }
    getAllUserListOfMessageReaction(e2) {
      var t2;
      return this.getEngine().chat.getAllUserListOfMessageReaction(Object.assign(Object.assign({}, e2), { message: null === (t2 = null == e2 ? void 0 : e2.message) || void 0 === t2 ? void 0 : t2.getMessage() }));
    }
    updateMessageReactionList(e2) {
      const t2 = [];
      e2.forEach((e3) => {
        const { messageID: s2, reactionList: n2 } = e3, i2 = this.getEngine().TUIStore.getMessageModel(s2);
        if (i2) {
          const e4 = [];
          for (let t3 = 0; t3 < n2.length; t3++) {
            let s3 = true;
            for (let e5 = 0; e5 < i2.reactionList.length; e5++)
              if (n2[t3].reactionID === i2.reactionList[e5].reactionID) {
                i2.reactionList[e5] = n2[t3], s3 = false;
                break;
              }
            s3 && e4.push(n2[t3]);
          }
          i2.reactionList.push(...e4), e4.length = 0, t2.push(i2);
        }
      }), t2.length > 0 && this.updateMessageList(t2, "edit");
    }
    convertVoiceToText(e2) {
      const { message: t2, language: s2 = "zh" } = e2, n2 = t2.getMessage();
      return this.getEngine().chat.convertVoiceToText({ message: n2, language: s2 });
    }
    updateMessageInfo(e2) {
      const t2 = this.getStoreData(o$2.CHAT, "userInfo");
      this.getEngine().TUIStore.update(o$2.CHAT, "userInfo", Object.assign(t2, e2));
      const s2 = this.getStoreData(o$2.CHAT, "messageList");
      if (s2.length > 0) {
        this.updateLocalMessage(s2, e2) && this.getEngine().TUIStore.update(o$2.CHAT, "messageList", s2);
      }
    }
    updateLocalMessage(e2, t2) {
      let s2 = false;
      return e2.forEach((e3) => {
        if (t2[e3.from]) {
          const { nick: n2, nameCard: i2, avatar: r2 } = t2[e3.from];
          n2 && (e3.nick = n2, s2 = true), i2 && (e3.nameCard = i2, s2 = true), r2 && (e3.avatar = r2, s2 = true);
        }
      }), s2;
    }
    handleC2CCallSignaling(e2) {
      const t2 = this.getEngine(), s2 = t2.getMyUserID();
      return e2.filter((e3) => {
        var n2, i2, r2, a2, u2;
        const { conversationType: c2, type: g2, payload: l2 } = e3;
        let h2 = true;
        if (c2 === t2.TYPES.CONV_C2C && g2 === t2.TYPES.MSG_CUSTOM) {
          if (t2.chat.getSignalingInfo(e3)) {
            const t3 = U$1(l2.data);
            if (1 === (null == t3 ? void 0 : t3.businessID)) {
              const c3 = U$1(t3.data);
              if (h2 = !(e3._isExcludedFromUnreadCount && e3._isExcludedFromLastMessage), h2 && true !== (null === (n2 = null == c3 ? void 0 : c3.data) || void 0 === n2 ? void 0 : n2.consumed)) {
                let n3 = null === (i2 = null == c3 ? void 0 : c3.data) || void 0 === i2 ? void 0 : i2.inviter;
                "line_busy" !== (null == c3 ? void 0 : c3.line_busy) && "lineBusy" !== (null === (r2 = null == c3 ? void 0 : c3.data) || void 0 === r2 ? void 0 : r2.message) || (n3 = t3.inviter);
                const { from: g3, to: l3 } = e3;
                if (n3 !== s2 && e3.from === s2) {
                  const t4 = this.getStoreData(o$2.CONV, "currentConversation");
                  e3.from = l3, e3.to = g3, e3.flow = "in", e3.avatar = (null === (a2 = null == t4 ? void 0 : t4.userProfile) || void 0 === a2 ? void 0 : a2.avatar) || "";
                }
                if (n3 === s2 && e3.from !== s2) {
                  const t4 = this.getStoreData(o$2.USER, "userProfile");
                  e3.from = l3, e3.to = g3, e3.flow = "out", e3.avatar = null == t4 ? void 0 : t4.avatar;
                }
                formatAppLog("log", "at node_modules/@tencentcloud/chat-uikit-engine/index.js:1", `${this.serv}.handleC2CCallSignaling myUserID:${s2} callSignaling.inviter:${t3.inviter} customData.data.inviter:${null === (u2 = null == c3 ? void 0 : c3.data) || void 0 === u2 ? void 0 : u2.inviter}`);
              }
            }
          }
        }
        return h2;
      });
    }
  }
  class $t extends ne {
    constructor() {
      super(), this.groupMap = /* @__PURE__ */ new Map();
    }
    static getInstance() {
      return $t.instance || ($t.instance = new $t()), $t.instance;
    }
    init() {
      const e2 = this.getEngine();
      e2.eventCenter.addEvent(e2.EVENT.GROUP_LIST_UPDATED, this.onGroupListUpdated.bind(this)), e2.eventCenter.addEvent(e2.EVENT.GROUP_ATTRIBUTES_UPDATED, this.onGroupAttributesUpdated.bind(this)), e2.eventCenter.addEvent(e2.EVENT.GROUP_COUNTER_UPDATED, this.onGroupCounterUpdated.bind(this)), e2.eventCenter.addEvent(e2.EVENT.MESSAGE_RECEIVED, this.onMessageReceived.bind(this)), this.getGroupInitData();
    }
    onGroupListUpdated(e2) {
      const t2 = this.getEngine();
      t2.TUIStore.update(o$2.GRP, "groupList", e2);
      const s2 = t2.TUIStore.getData(o$2.GRP, "currentGroupID");
      e2.forEach((e3) => {
        e3.groupID === s2 && t2.TUIStore.update(o$2.GRP, "currentGroup", e3);
      });
    }
    onGroupAttributesUpdated(e2) {
      const t2 = this.getEngine(), s2 = t2.TUIStore.getData(o$2.GRP, "currentGroupID");
      let n2 = t2.TUIStore.getData(o$2.GRP, "groupList");
      const { groupID: i2, groupAttributes: r2 } = e2;
      s2 === i2 && t2.TUIStore.update(o$2.GRP, "currentGroupAttributes", r2), n2 = n2.map((e3) => (e3.groupID === i2 && (e3.groupAttributes = r2), e3)), t2.TUIStore.update(o$2.GRP, "groupList", n2);
    }
    onGroupCounterUpdated(e2) {
      const t2 = this.getEngine(), s2 = t2.TUIStore.getData(o$2.GRP, "currentGroupID"), n2 = t2.TUIStore.getData(o$2.GRP, "currentGroupCounters") || {};
      let i2 = t2.TUIStore.getData(o$2.GRP, "groupList");
      const { groupID: r2, key: a2, value: u2 } = e2;
      s2 === r2 && (n2[a2] = u2, t2.TUIStore.update(o$2.GRP, "currentGroupCounters", n2)), i2 = i2.map((e3) => (e3.groupID === r2 && (e3.groupCounters = Object.assign(Object.assign({}, e3.groupCounters), { [a2]: u2 })), e3)), t2.TUIStore.update(o$2.GRP, "groupList", i2);
    }
    onMessageReceived(e2) {
      const t2 = this.getEngine(), s2 = [];
      e2.forEach((e3) => {
        if (e3.type === t2.TYPES.MSG_GRP_TIP) {
          const { payload: s3 } = e3, { operationType: n2, userIDList: i2 } = s3, r2 = t2.TUIStore.getData(o$2.GRP, "currentGroupID");
          switch (n2) {
            case t2.TYPES.GRP_TIP_MBR_JOIN:
              this.addMemberList(i2);
              break;
            case t2.TYPES.GRP_TIP_MBR_QUIT:
            case t2.TYPES.GRP_TIP_MBR_KICKED_OUT:
              this.removeMemberList(i2);
              break;
            case t2.TYPES.GRP_TIP_MBR_SET_ADMIN:
            case t2.TYPES.GRP_TIP_MBR_CANCELED_ADMIN:
              this.updateGroupMember(i2);
              break;
            case t2.TYPES.GRP_TIP_GRP_PROFILE_UPDATED:
              this.getGroupProfile({ groupID: r2 });
              break;
            case t2.TYPES.GRP_TIP_MBR_PROFILE_UPDATED:
            case t2.TYPES.GRP_TIP_BAN_AVCHATROOM_MEMBER:
            case t2.TYPES.GRP_TIP_UNBAN_AVCHATROOM_MEMBER:
              this.updateGroupMember(i2);
          }
        }
        e3.type === t2.TYPES.MSG_GRP_SYS_NOTICE && s2.push(e3);
      }), s2.length > 0 && t2.TUIStore.update(o$2.GRP, "groupSystemNoticeList", s2);
    }
    getGroupInitData() {
      const e2 = this.getEngine();
      e2.chat.isReady() && e2.chat.getGroupList().then((e3) => {
        const { groupList: t2 = [] } = e3.data;
        formatAppLog("log", "at node_modules/@tencentcloud/chat-uikit-engine/index.js:1", `TUIGroupService.init, getGroupList count:${t2.length}`), t2.length > 0 && this.onGroupListUpdated(t2);
      });
    }
    updateGroupMember(e2) {
      return i$2(this, void 0, void 0, function* () {
        const t2 = this.getEngine().TUIStore.getData(o$2.GRP, "currentGroupID");
        if (t2) {
          const s2 = yield this.getGroupMemberProfile({ groupID: t2, userIDList: e2 }), { memberList: n2 } = s2.data;
          this.updateMemberList(n2);
        }
      });
    }
    resetCurrentStore() {
      this.getEngine().TUIStore.reset(o$2.GRP, ["currentGroupID", "currentGroup", "currentGroupAttributes", "currentGroupCounters", "currentGroupMemberList"], true);
    }
    switchGroup(e2) {
      return i$2(this, void 0, void 0, function* () {
        const t2 = this.getEngine(), s2 = t2.TUIStore.getConversationModel(`GROUP${e2}`);
        if ((null == s2 ? void 0 : s2.operationType) > 0) {
          const e3 = t2.TUIStore.getData(o$2.GRP, "currentGroup");
          return Promise.resolve(e3);
        }
        const n2 = t2.TUIStore.getData(o$2.GRP, "currentGroupID");
        if (!e2)
          return this.resetCurrentStore(), Promise.resolve({});
        if (n2 === e2) {
          const e3 = t2.TUIStore.getData(o$2.GRP, "currentGroup");
          return Promise.resolve(e3);
        }
        this.resetCurrentStore(), t2.TUIStore.update(o$2.GRP, "currentGroupID", e2);
        try {
          yield this.getGroupInfo(e2);
        } catch (e3) {
          Promise.reject(e3);
        }
        const i2 = setTimeout(() => {
          this.groupMap.delete(e2), clearTimeout(i2);
        }, 5e3), r2 = t2.TUIStore.getData(o$2.GRP, "currentGroup");
        return Promise.resolve(r2);
      });
    }
    getGroupInfo(e2) {
      return i$2(this, void 0, void 0, function* () {
        const t2 = this.getEngine(), s2 = this.groupMap.get(e2);
        if (s2)
          return this.updateMemberList((null == s2 ? void 0 : s2.memberList) || []), t2.TUIStore.update(o$2.GRP, "currentGroup", s2.group), t2.TUIStore.update(o$2.GRP, "currentGroupAttributes", s2.groupAttributes || {}), void t2.TUIStore.update(o$2.GRP, "currentGroupCounters", s2.counters || {});
        const n2 = { group: {}, memberList: [], groupAttributes: void 0, counters: void 0 }, { data: { group: i2 } } = yield this.getGroupProfile({ groupID: e2 });
        n2.group = i2;
        const { data: { memberList: r2 } } = yield this.getGroupMemberList({ groupID: e2 });
        n2.memberList = r2;
        const a2 = yield this.getGroupAttributes({ groupID: e2, keyList: [] }), { groupAttributes: u2 } = a2.data;
        n2.groupAttributes = u2, t2.TUIStore.update(o$2.GRP, "currentGroupAttributes", u2);
        try {
          const s3 = yield this.getGroupCounters({ groupID: e2, keyList: [] }), { counters: i3 } = s3.data;
          n2.counters = i3, t2.TUIStore.update(o$2.GRP, "currentGroupCounters", i3);
        } catch (e3) {
          formatAppLog("warn", "at node_modules/@tencentcloud/chat-uikit-engine/index.js:1", null == e3 ? void 0 : e3.message);
        }
        this.groupMap.set(e2, n2);
      });
    }
    getGroupProfile(e2) {
      const t2 = this.getEngine();
      return t2.chat.getGroupProfile(e2).then((s2) => i$2(this, void 0, void 0, function* () {
        if (t2.TUIStore.getData(o$2.GRP, "currentGroupID") === e2.groupID) {
          const { group: e3 } = s2.data;
          t2.TUIStore.update(o$2.GRP, "currentGroup", e3);
        }
        return s2;
      }));
    }
    updateGroupProfile(e2) {
      return this.getEngine().chat.updateGroupProfile(e2);
    }
    createGroup(e2) {
      return this.getEngine().chat.createGroup(e2);
    }
    dismissGroup(e2) {
      return this.getEngine().chat.dismissGroup(e2);
    }
    searchGroupByID(e2) {
      const t2 = this.getEngine();
      return t2.chat.searchGroupByID(e2).then((e3) => {
        const { group: s2 } = e3.data, n2 = t2.TUIStore.getData(o$2.GRP, "groupList");
        return e3.data.group.isJoinedGroup = n2.some((e4) => e4.groupID === s2.groupID), e3;
      });
    }
    joinGroup(e2) {
      return this.getEngine().chat.joinGroup(e2);
    }
    quitGroup(e2) {
      return this.getEngine().chat.quitGroup(e2);
    }
    getGroupApplicationList() {
      return this.getEngine().chat.getGroupApplicationList();
    }
    handleGroupApplication(e2) {
      return this.getEngine().chat.handleGroupApplication(e2);
    }
    getGroupOnlineMemberCount(e2) {
      return this.getEngine().chat.getGroupOnlineMemberCount(e2);
    }
    changeGroupOwner(e2) {
      return this.getEngine().chat.changeGroupOwner(e2);
    }
    initGroupAttributes(e2) {
      return this.getEngine().chat.initGroupAttributes(e2);
    }
    setGroupAttributes(e2) {
      return this.getEngine().chat.setGroupAttributes(e2);
    }
    deleteGroupAttributes(e2) {
      return this.getEngine().chat.deleteGroupAttributes(e2);
    }
    getGroupAttributes(e2) {
      return this.getEngine().chat.getGroupAttributes(e2);
    }
    setGroupCounters(e2) {
      return this.getEngine().chat.setGroupCounters(e2);
    }
    increaseGroupCounter(e2) {
      return this.getEngine().chat.increaseGroupCounter(e2);
    }
    decreaseGroupCounter(e2) {
      return this.getEngine().chat.decreaseGroupCounter(e2);
    }
    getGroupCounters(e2) {
      return this.getEngine().chat.getGroupCounters(e2);
    }
    updateMemberList(e2) {
      const t2 = this.getEngine(), s2 = [...(t2.TUIStore.getData(o$2.GRP, "currentGroupMemberList") || []).filter((t3) => !e2.find((e3) => e3.userID === t3.userID)), ...e2];
      t2.TUIStore.update(o$2.GRP, "currentGroupMemberList", s2);
    }
    addMemberList(e2) {
      return i$2(this, void 0, void 0, function* () {
        const t2 = this.getEngine().TUIStore.getData(o$2.GRP, "currentGroupID");
        if (t2)
          try {
            const s2 = yield this.getGroupMemberProfile({ groupID: t2, userIDList: e2 }), { memberList: n2 } = s2.data;
            this.updateMemberList(n2);
          } catch (t3) {
            const s2 = e2.map((e3) => ({ userID: e3, avatar: "", nick: "", role: "", joinTime: 0, nameCard: "", muteUntil: 0, memberCustomField: [] }));
            this.updateMemberList(s2);
          }
      });
    }
    removeMemberList(e2) {
      const t2 = this.getEngine(), s2 = t2.TUIStore.getData(o$2.GRP, "currentGroupMemberList").filter((t3) => -1 === e2.indexOf(t3.userID));
      t2.TUIStore.update(o$2.GRP, "currentGroupMemberList", s2);
    }
    getGroupMemberList(e2) {
      const t2 = this.getEngine();
      return t2.chat.getGroupMemberList(e2).then((s2) => {
        if (t2.TUIStore.getData(o$2.GRP, "currentGroupID") === e2.groupID) {
          const { memberList: e3 } = s2.data;
          this.updateMemberList(e3);
        }
        return s2;
      });
    }
    getGroupMemberProfile(e2) {
      return this.getEngine().chat.getGroupMemberProfile(e2);
    }
    addGroupMember(e2) {
      const t2 = this.getEngine();
      return t2.chat.addGroupMember(e2).then((s2) => i$2(this, void 0, void 0, function* () {
        if (t2.TUIStore.getData(o$2.GRP, "currentGroupID") === e2.groupID) {
          const { successUserIDList: e3, group: n2 } = s2.data;
          t2.TUIStore.update(o$2.GRP, "currentGroup", n2), this.addMemberList(e3);
        }
        return s2;
      }));
    }
    deleteGroupMember(e2) {
      const t2 = this.getEngine();
      return t2.chat.deleteGroupMember(e2).then((s2) => {
        if (t2.TUIStore.getData(o$2.GRP, "currentGroupID") === e2.groupID) {
          const { userIDList: e3, group: n2 } = s2.data;
          this.removeMemberList(e3), t2.TUIStore.update(o$2.GRP, "currentGroup", n2);
        }
        return s2;
      });
    }
    setGroupMemberMuteTime(e2) {
      return this.getEngine().chat.setGroupMemberMuteTime(e2);
    }
    setGroupMemberRole(e2) {
      return this.getEngine().chat.setGroupMemberRole(e2);
    }
    setGroupMemberNameCard(e2) {
      return this.getEngine().chat.setGroupMemberNameCard(e2);
    }
    setGroupMemberCustomField(e2) {
      return this.getEngine().chat.setGroupMemberCustomField(e2);
    }
    markGroupMemberList(e2) {
      return this.getEngine().chat.markGroupMemberList(e2);
    }
  }
  class Ht extends ne {
    constructor() {
      super();
    }
    static getInstance() {
      return Ht.instance || (Ht.instance = new Ht()), Ht.instance;
    }
    init() {
      const e2 = this.getEngine();
      e2.eventCenter.addEvent(e2.EVENT.FRIEND_LIST_UPDATED, this.onFriendListUpdated.bind(this)), e2.eventCenter.addEvent(e2.EVENT.FRIEND_APPLICATION_LIST_UPDATED, this.onFriendApplicationListUpdated.bind(this)), this.getFriendInitData();
    }
    onFriendListUpdated(e2) {
      this.getEngine().TUIStore.update(o$2.FRIEND, "friendList", e2);
    }
    onFriendApplicationListUpdated(e2) {
      const { friendApplicationList: t2, unreadCount: s2 = 0 } = e2, n2 = this.getEngine();
      n2.TUIStore.update(o$2.FRIEND, "friendApplicationList", t2), n2.TUIStore.update(o$2.FRIEND, "friendApplicationUnreadCount", s2);
    }
    getFriendInitData() {
      const e2 = this.getEngine();
      e2.chat.isReady() && (e2.chat.getFriendList().then((e3) => {
        const t2 = e3.data || [];
        formatAppLog("log", "at node_modules/@tencentcloud/chat-uikit-engine/index.js:1", `TUIFriendService.init, getFriendList count:${t2.length}`), t2.length > 0 && this.onFriendListUpdated(t2);
      }), e2.chat.getFriendApplicationList().then((e3) => {
        this.onFriendApplicationListUpdated(e3.data);
      }));
    }
    getFriendList() {
      return this.getEngine().chat.getFriendList();
    }
    getFriendRemark(e2) {
      const t2 = this.getEngine().TUIStore.getData(o$2.FRIEND, "friendList"), s2 = {};
      return e2.forEach((e3) => {
        for (let n2 = 0; n2 < t2.length; n2++)
          t2[n2].userID !== e3 || (s2[e3] = t2[n2].remark);
      }), s2;
    }
    addFriend(e2) {
      return this.getEngine().chat.addFriend(e2);
    }
    deleteFriend(e2) {
      return this.getEngine().chat.deleteFriend(e2);
    }
    checkFriend(e2) {
      return this.getEngine().chat.checkFriend(e2);
    }
    getFriendProfile(e2) {
      return this.getEngine().chat.getFriendProfile(e2);
    }
    updateFriend(e2) {
      return this.getEngine().chat.updateFriend(e2);
    }
    acceptFriendApplication(e2) {
      return this.getEngine().chat.acceptFriendApplication(e2);
    }
    refuseFriendApplication(e2) {
      return this.getEngine().chat.refuseFriendApplication({ userID: e2 });
    }
    deleteFriendApplication(e2) {
      return this.getEngine().chat.deleteFriendApplication(e2);
    }
    setFriendApplicationRead() {
      return this.getEngine().chat.setFriendApplicationRead();
    }
  }
  class Yt {
    constructor() {
      this.cache = [], this.middlewares = [], this.options = null;
    }
    use(e2) {
      return "function" != typeof e2 && formatAppLog("error", "at node_modules/@tencentcloud/chat-uikit-engine/index.js:1", "middleware must be a function"), this.cache.push(e2), this;
    }
    next() {
      if (this.middlewares && this.middlewares.length > 0) {
        return this.middlewares.shift().call(this, this.options, this.next.bind(this));
      }
    }
    run(e2) {
      return this.middlewares = this.cache.map(function(e3) {
        return e3;
      }), this.options = e2, this.next();
    }
  }
  function Bt(e2, t2, s2) {
    const n2 = /* @__PURE__ */ Object.create(null);
    Object.keys(s2).forEach((s3) => {
      if (!t2[s3])
        return;
      n2[s3] = t2[s3];
      const i2 = new Yt();
      t2[s3] = function() {
        const r2 = Array.from(arguments);
        return i2.use(function(t3, n3) {
          return e2.isInited ? n3() : Promise.reject({ code: h$2.NOT_INIT, message: `${s3} | ${d$1.NOT_INIT}` });
        }).use(function(e3, i3) {
          return n2[s3].apply(t2, e3);
        }), i2.run(r2);
      };
    });
  }
  formatAppLog("log", "at node_modules/@tencentcloud/chat-uikit-engine/index.js:1", "TUIChatEngine.VERSION:2.3.2");
  const Kt = ee.getInstance();
  X.getInstance();
  const zt = fe.getInstance(), Jt = Dt.getInstance(), Wt = Pt.getInstance(), Xt = xt.getInstance(), Zt = Ft.getInstance(), Qt = $t.getInstance(), es = Ht.getInstance();
  Kt.mount(a$2.TUIStore, zt), Kt.mount(a$2.TUITranslate, Jt), Kt.mount(a$2.TUIConversation, Wt), Kt.mount(a$2.TUIUser, Xt), Kt.mount(a$2.TUIChat, Zt), Kt.mount(a$2.TUIGroup, Qt), Kt.mount(a$2.TUIFriend, es), Bt(Kt, Kt, f$1), Bt(Kt, Wt, m$1), Bt(Kt, Zt, v$2), Bt(Kt, Qt, T$2), Bt(Kt, Xt, E$2), Bt(Kt, es, I$2);
  let i$1 = class i {
    constructor() {
      this.serviceMap = /* @__PURE__ */ new Map();
    }
    registerService(e2, t2) {
      this.serviceMap.has(e2) || (formatAppLog("log", "at node_modules/@tencentcloud/tui-core/index.js:1", `TUIServiceManager.registerService serviceName:${e2}`), this.serviceMap.set(e2, t2));
    }
    unregisterService(e2) {
      this.serviceMap.has(e2) && (formatAppLog("log", "at node_modules/@tencentcloud/tui-core/index.js:1", `TUIServiceManager.unregisterService serviceName:${e2}`), this.serviceMap.delete(e2));
    }
    getService(e2) {
      return this.serviceMap.get(e2);
    }
    callService(e2) {
      const { serviceName: t2, method: n2, params: i2, callback: s2 } = e2, o2 = this.getService(t2);
      if (formatAppLog("log", "at node_modules/@tencentcloud/tui-core/index.js:1", `TUIServiceManager.callService serviceName:${t2}, service:`, o2), o2)
        return o2.onCall(n2, i2, s2);
    }
  };
  let s$1 = class s {
    constructor() {
      this.extensionMap = /* @__PURE__ */ new Map();
    }
    registerExtension(e2, t2) {
      if (formatAppLog("log", "at node_modules/@tencentcloud/tui-core/index.js:1", `TUIExtensionManager.registerExtension extensionID:${e2}`), !this.extensionMap.has(e2)) {
        const t3 = [];
        this.extensionMap.set(e2, t3);
      }
      const n2 = this.extensionMap.get(e2);
      -1 === n2.indexOf(t2) && n2.push(t2);
    }
    unregisterExtension(e2, t2) {
      if (formatAppLog("log", "at node_modules/@tencentcloud/tui-core/index.js:1", `TUIExtensionManager.unregisterExtension extensionID:${e2}`), this.extensionMap.has(e2)) {
        const n2 = this.extensionMap.get(e2), i2 = n2.indexOf(t2);
        i2 > -1 && n2.splice(i2, 1);
      }
    }
    getExtensionList(e2, t2) {
      const n2 = t2 ? `params:${JSON.stringify(t2)}` : "";
      formatAppLog("log", "at node_modules/@tencentcloud/tui-core/index.js:1", `TUIExtensionManager.getExtensionList extensionID:${e2} ${n2}`);
      let i2 = [], s2 = [];
      if (this.extensionMap.has(e2)) {
        i2 = this.extensionMap.get(e2);
        for (let n3 = 0; n3 < i2.length; n3++) {
          const o2 = i2[n3].onGetExtension(e2, t2);
          s2 = s2.concat(o2);
        }
      }
      return s2;
    }
  };
  const o$1 = ["vue2", "vue3", "rn"], E$1 = { TUILogin: { EVENT: { LOGIN_STATE_CHANGED: "loginStateChanged" }, EVENT_SUB_KEY: { USER_LOGIN_SUCCESS: "userLoginSuccess", USER_LOGOUT_SUCCESS: "userLogoutSuccess", USER_KICKED_OFFLINE: "userKickedOffline", USER_SIG_EXPIRED: "userSigExpired" } }, TUIConversation: { SERVICE: { NAME: "TUIConversationService", METHOD: { CREATE_CONVERSATION: "createConversation", HIDE_CONVERSATION_HEADER: "hideConversationHeader" } }, EXTENSION: { CONV_POP_MENU: { EXT_ID: "conversationPopMenu" }, CONV_GROUP: { EXT_ID: "conversationGroup" } } }, TUIChat: { SERVICE: { NAME: "TUIChatService", METHOD: { UPDATE_MESSAGE_LIST: "updateMessageList", CLOSE_MESSAGE_POP_MENU: "closeMessagePopMenu", SEND_CUSTOM_MESSAGE: "sendCustomMessage", SEND_TEXT_MESSAGE: "sendTextMessage", SET_CHAT_TYPE: "setChatType", UPDATE_MESSAGE_INFO: "updateMessageInfo" } }, EXTENSION: { INPUT_MORE: { EXT_ID: "inputToolBarMore" }, MSG_POP_MENU: { EXT_ID: "messagePopMenu" }, CHAT_HEADER: { EXT_ID: "chatHeader" } }, TYPE: { C2C: "C2C", GROUP: "GROUP", CUSTOMER_SERVICE: "customerService", ROOM: "room" }, EVENT: { CHAT_STATE_CHANGED: "chatStateChanged", CHAT_TYPE_CHANGED: "chatTypeChanged" }, EVENT_SUB_KEY: { CHAT_OPENED: "chatOpened", CHANGE_SUCCESS: "changeSuccess" }, FEATURE: { DownloadFile: "DownloadFile", CopyMessage: "CopyMessage", DeleteMessage: "DeleteMessage", RevokeMessage: "RevokeMessage", QuoteMessage: "QuoteMessage", ForwardMessage: "ForwardMessage", TranslateMessage: "TranslateMessage", VoiceToText: "VoiceToText", MultiSelection: "MultiSelection", EmojiReaction: "EmojiReaction", InputEmoji: "InputEmoji", InputStickers: "InputStickers", InputImage: "InputImage", InputVoice: "InputVoice", InputVideo: "InputVideo", InputFile: "InputFile", InputEvaluation: "InputEvaluation", InputQuickReplies: "InputQuickReplies", InputMention: "InputMention", MessageSearch: "MessageSearch", ReadStatus: "ReadStatus" } }, TUIGroup: { SERVICE: { NAME: "TUIGroupService", METHOD: { CREATE_GROUP: "createGroup", OPEN_GROUP_MANAGEMENT: "openGroupManagement", SELECT_GROUP_MEMBER: "selectGroupMember" } } }, TUIContact: { SERVICE: { NAME: "TUIContactService", METHOD: { SELECT_FRIEND: "selectFriend" } }, EXTENSION: { CONTACT_LIST: { EXT_ID: "contactList" } } }, TUISearch: { SERVICE: { NAME: "TUISearchService", METHOD: { SEARCH_GROUP: "searchGroup", SEARCH_USER: "searchUser", SEARCH_FRIEND: "searchFriend", SEARCH_GROUP_MEMBER: "searchGroupMember" } }, EXTENSION: { SEARCH_MORE: { EXT_ID: "searchMore" } } }, TUICalling: { SERVICE: { NAME: "TUICallingService", METHOD: { START_CALL: "startCall" } } }, TUIRoom: { SERVICE: { NAME: "TUIRoomService" } }, TUIEmojiPlugin: { SERVICE: { NAME: "TUIEmojiPluginService", METHOD: { CLOSE_EMOJI_DETAIL: "closeEmojiDetail" } } }, TUITranslate: { EVENT: { LANGUAGE_CHANGED: "languageChanged" }, EVENT_SUB_KEY: { CHANGE_SUCCESS: "changeSuccess" } }, TUITranslatePlugin: { SERVICE: { NAME: "TUITranslatePluginService" } }, TUIVoiceToTextPlugin: { SERVICE: { NAME: "TUIVoiceToTextPluginService" } }, TUICustomerServicePlugin: { SERVICE: { NAME: "TUICustomerServicePlugin", METHOD: { ACTIVE_CONVERSATION: "activeConversation", FILTER_MESSAGE: "filterMessage" } }, EXTENSION: {} }, TUIPushPlugin: { SERVICE: { NAME: "TUIPushPluginService" } }, TUIChatbotPlugin: { SERVICE: { NAME: "TUIChatbotPluginService" } }, TUITheme: { EVENT: { THEME_CHANGED: "themeChanged" }, EVENT_SUB_KEY: { CHANGE_SUCCESS: "changeSuccess" } } }, r$1 = "undefined" != typeof wx && "function" == typeof wx.getSystemInfoSync && Boolean(wx.getSystemInfoSync().fontSizeSetting), a$1 = "undefined" != typeof uni && "undefined" == typeof window, g$1 = r$1 || a$1, S = "undefined" != typeof uni, c$1 = ("undefined" != typeof uni || "undefined" != typeof window) && !g$1;
  r$1 ? wx : S ? uni : window;
  const h$1 = c$1 && window && window.navigator && window.navigator.userAgent || "", T$1 = /Android/i.test(h$1), u$1 = /(?:Windows Phone)/.test(h$1), I$1 = /(?:SymbianOS)/.test(h$1), l$1 = /iPad/i.test(h$1) || /iPhone/i.test(h$1) || /iPod/i.test(h$1), C$1 = T$1 || u$1 || I$1 || l$1, M = c$1 && !C$1, U = a$1 && !r$1, _ = { [E$1.TUITranslatePlugin.SERVICE.NAME]: Math.pow(2, 38), [E$1.TUIVoiceToTextPlugin.SERVICE.NAME]: Math.pow(2, 39), [E$1.TUICustomerServicePlugin.SERVICE.NAME]: Math.pow(2, 40), [E$1.TUIPushPlugin.SERVICE.NAME]: Math.pow(2, 41), [E$1.TUIChatbotPlugin.SERVICE.NAME]: Math.pow(2, 42), [E$1.TUIEmojiPlugin.SERVICE.NAME]: Math.pow(2, 48) };
  class N {
    constructor(e2) {
      this.loginStatusPromise = /* @__PURE__ */ new Map(), this.SDKAppID = 0, this.userID = "", this.userSig = "", this.TUICore = e2, this.isOnChatEvent = false;
    }
    static getInstance(e2) {
      return !N.instance && e2 && (N.instance = new N(e2)), N.instance;
    }
    login(t2) {
      const { SDKAppID: n2, userID: i2, userSig: s2, framework: o2 } = t2;
      return this.chat = e$1.create(Object.assign(Object.assign({}, t2), { scene: this.getStatScene(o2) })), this.EVENT = e$1.EVENT, this.TYPES = e$1.TYPES, this.SDKAppID = n2, this.userID = i2, this.userSig = s2, this.offChatEvent(), this.onChatEvent(), this.registerPlugin(t2), this.loginChat(t2);
    }
    logout() {
      return this.chat.logout().then((e2) => (this.userID = "", this.userSig = "", this.TUICore.notifyEvent(E$1.TUILogin.EVENT.LOGIN_STATE_CHANGED, E$1.TUILogin.EVENT_SUB_KEY.USER_LOGOUT_SUCCESS), Promise.resolve(e2)));
    }
    destroy() {
      return this.chat.destroy().then((e2) => (this.userID = "", this.userSig = "", this.TUICore.notifyEvent(E$1.TUILogin.EVENT.LOGIN_STATE_CHANGED, E$1.TUILogin.EVENT_SUB_KEY.USER_LOGOUT_SUCCESS), Promise.resolve(e2)));
    }
    setLogLevel(e2) {
      return this.chat.setLogLevel(e2);
    }
    getContext() {
      return { chat: this.chat, SDKAppID: this.SDKAppID, userID: this.userID, userSig: this.userSig };
    }
    reportPlugin() {
      var e2;
      for (const t2 in _)
        this.TUICore.getService(t2) && (null === (e2 = this.chat.callExperimentalAPI("isFeatureEnabledForStat", _[t2])) || void 0 === e2 || e2.catch((e3) => {
        }));
    }
    loginChat(e2) {
      const { userID: t2, userSig: n2 } = e2;
      return new Promise((e3, i2) => {
        this.chat.login({ userID: t2, userSig: n2 }).then((t3) => {
          t3.data.repeatLogin && this.chat.isReady() && e3(t3), this.reportPlugin(), this.loginStatusPromise.set("login", { resolve: e3, reject: i2, imResponse: t3 });
        }).catch((e4) => {
          i2(e4);
        });
      });
    }
    onChatEvent() {
      this.chat.on(this.EVENT.SDK_READY, this.onSDKReady, this), this.chat.on(this.EVENT.SDK_NOT_READY, this.onSDKNotReady, this), this.chat.on(this.EVENT.KICKED_OUT, this.onUserKicked, this), this.isOnChatEvent = true;
    }
    offChatEvent() {
      this.isOnChatEvent && (this.chat.off(this.EVENT.SDK_READY, this.onSDKReady, this), this.chat.off(this.EVENT.SDK_NOT_READY, this.onSDKNotReady, this), this.chat.off(this.EVENT.KICKED_OUT, this.onUserKicked, this), this.isOnChatEvent = false);
    }
    onSDKReady() {
      if (this.loginStatusPromise.has("login")) {
        this.TUICore.notifyEvent(E$1.TUILogin.EVENT.LOGIN_STATE_CHANGED, E$1.TUILogin.EVENT_SUB_KEY.USER_LOGIN_SUCCESS);
        const e2 = setTimeout(() => {
          const t2 = this.loginStatusPromise.get("login");
          t2.resolve(t2.imResponse), clearTimeout(e2), this.loginStatusPromise.delete("login");
        }, 500);
      }
    }
    onSDKNotReady() {
      if (this.loginStatusPromise.has("login")) {
        this.loginStatusPromise.get("login").reject(new Error("sdk not ready"));
      }
      this.loginStatusPromise.delete("login");
    }
    onUserKicked(e2) {
      e2.data.type !== this.TYPES.KICKED_OUT_USERSIG_EXPIRED ? this.TUICore.notifyEvent(E$1.TUILogin.EVENT.LOGIN_STATE_CHANGED, E$1.TUILogin.EVENT_SUB_KEY.USER_KICKED_OFFLINE) : this.TUICore.notifyEvent(E$1.TUILogin.EVENT.LOGIN_STATE_CHANGED, E$1.TUILogin.EVENT_SUB_KEY.USER_SIG_EXPIRED);
    }
    registerPlugin(e2) {
      const { useUploadPlugin: i2 = false, useProfanityFilterPlugin: s2 = false, TUIOfflinePush: o2, offlinePushConfig: E2, TIMPush: r2, pushConfig: a2 } = e2;
      true === i2 && this.chat.registerPlugin({ "tim-upload-plugin": t$3 }), true === s2 && this.chat.registerPlugin({ "tim-profanity-filter-plugin": n$2 }), U && r2 && a2 && this.chat.registerPlugin({ "tim-push": r2, pushConfig: a2 }), U && o2 && E2 && this.chat.registerPlugin({ "tim-offline-push-plugin": o2, offlinePushConfig: E2 });
    }
    getStatScene(e2) {
      let t2;
      return e2 && o$1.indexOf(e2) > -1 && (t2 = this.genStatScene(e2)), t2;
    }
    genStatScene(e2) {
      if ("rn" === e2)
        return "k-rn";
      let t2 = "";
      return S ? (M && (t2 = `k-${e2}-pc-uni`), C$1 && (t2 = `k-${e2}-h5-uni`), U && (t2 = `k-${e2}-app-uni`), r$1 && (t2 = `k-${e2}-mp-uni`), t2) : (M && (t2 = `k-${e2}-pc`), C$1 && (t2 = `k-${e2}-h5`), t2);
    }
  }
  class p {
    constructor() {
      this.eventMap = /* @__PURE__ */ new Map();
    }
    registerEvent(e2, t2, n2) {
      const i2 = this.getKey(e2, t2);
      if (formatAppLog("log", "at node_modules/@tencentcloud/tui-core/index.js:1", `TUIEventManager.registerEvent eventName:${e2} subKey:${t2}`), !this.eventMap.has(i2)) {
        const e3 = [];
        this.eventMap.set(i2, e3);
      }
      const s2 = this.eventMap.get(i2);
      -1 === s2.indexOf(n2) && (s2.push(n2), this.renotify(e2, t2, n2));
    }
    unregisterEvent(e2, t2, n2) {
      formatAppLog("log", "at node_modules/@tencentcloud/tui-core/index.js:1", `TUIEventManager.unregisterEvent eventName:${e2} subKey:${t2}`);
      const i2 = this.getKey(e2, t2);
      if (this.eventMap.has(i2)) {
        const e3 = this.eventMap.get(i2), t3 = e3.indexOf(n2);
        t3 > -1 && e3.splice(t3, 1);
      }
    }
    notifyEvent(e2, t2, n2) {
      const i2 = this.getKey(e2, t2), s2 = n2 ? `params:${JSON.stringify(n2)}` : "";
      if (formatAppLog("log", "at node_modules/@tencentcloud/tui-core/index.js:1", `TUIEventManager.notifyEvent eventName:${e2} subKey:${t2} ${s2}`), this.eventMap.has(i2)) {
        this.eventMap.get(i2).forEach((i3) => {
          i3.onNotifyEvent(e2, t2, n2);
        });
      }
    }
    getKey(e2, t2) {
      let n2 = e2;
      return t2 && (n2 = `${e2}-${n2}`), n2;
    }
    renotify(e2, t2, n2) {
      if (e2 === E$1.TUILogin.EVENT.LOGIN_STATE_CHANGED && t2 === E$1.TUILogin.EVENT_SUB_KEY.USER_LOGIN_SUCCESS) {
        const { chat: e3 } = N.getInstance().getContext();
        e3 && e3.isReady() && (n2.onNotifyEvent(E$1.TUILogin.EVENT.LOGIN_STATE_CHANGED, E$1.TUILogin.EVENT_SUB_KEY.USER_LOGIN_SUCCESS), formatAppLog("log", "at node_modules/@tencentcloud/tui-core/index.js:1", "TUIEventManager.renotify success."));
      }
    }
  }
  let v$1 = class v2 {
    constructor() {
      this.serviceManager = new i$1(), this.extensionManager = new s$1(), this.eventManager = new p();
    }
    static getInstance() {
      return v2.instance || (formatAppLog("log", "at node_modules/@tencentcloud/tui-core/index.js:1", "TUICore.getInstance ok."), v2.instance = new v2()), v2.instance;
    }
    registerService(e2, t2) {
      return this.serviceManager.registerService(e2, t2);
    }
    unregisterService(e2) {
      return this.serviceManager.unregisterService(e2);
    }
    getService(e2) {
      return this.serviceManager.getService(e2);
    }
    callService(e2) {
      return this.serviceManager.callService(e2);
    }
    registerExtension(e2, t2) {
      return this.extensionManager.registerExtension(e2, t2);
    }
    unregisterExtension(e2, t2) {
      return this.extensionManager.unregisterExtension(e2, t2);
    }
    getExtensionList(e2, t2) {
      return this.extensionManager.getExtensionList(e2, t2);
    }
    registerEvent(e2, t2, n2) {
      return this.eventManager.registerEvent(e2, t2, n2);
    }
    unregisterEvent(e2, t2, n2) {
      return this.eventManager.unregisterEvent(e2, t2, n2);
    }
    notifyEvent(e2, t2, n2) {
      return this.eventManager.notifyEvent(e2, t2, n2);
    }
  };
  formatAppLog("log", "at node_modules/@tencentcloud/tui-core/index.js:1", "TUICore.VERSION:2.3.2");
  const R$1 = v$1.getInstance(), A = N.getInstance(R$1);
  const loginChat = (loginInfo) => {
    return A.login(loginInfo).then((res) => {
      uni == null ? void 0 : uni.switchTab({
        url: "/TUIKit/components/TUIConversation/index",
        success: () => {
          uni == null ? void 0 : uni.$emit("uikitLogin", res);
        }
      });
      Xt.switchUserStatus({ displayOnlineStatus: true });
      uni == null ? void 0 : uni.setStorage({
        key: "userInfo",
        data: JSON.stringify({
          ...loginInfo,
          TIMPush: void 0,
          pushConfig: {}
        })
      });
      return res;
    });
  };
  const loginFromStorage = () => {
    uni == null ? void 0 : uni.getStorage({
      key: "userInfo",
      success: function(res) {
        if (res.data) {
          const loginInfo = {
            ...JSON.parse(res.data)
          };
          if (uni == null ? void 0 : uni.$TIMPush) {
            loginInfo.TIMPush = uni == null ? void 0 : uni.$TIMPush;
            loginInfo.pushConfig = {
              androidConfig: uni == null ? void 0 : uni.$TIMPushConfigs,
              // Android 推送配置，如不需要可传空。
              iOSConfig: {
                iOSBusinessID: "29064"
                // iOS 推送配置，如不需要可传空。
              }
            };
          }
          loginChat(loginInfo).catch(() => {
            uni == null ? void 0 : uni.removeStorage({
              key: "userInfo"
            });
          });
        }
      }
    });
  };
  const openChat = (enterChatConfig2) => {
    const { isLoginChat = false, conversationID = "" } = enterChatConfig2 || {};
    const chatPath = "/TUIKit/components/TUIChat/index";
    const currentConversationID = zt.getData(o$2.CONV, "currentConversationID");
    if (!isLoginChat || !conversationID) {
      return;
    }
    if (!currentConversationID) {
      Wt.switchConversation(conversationID);
      uni == null ? void 0 : uni.navigateTo({
        url: chatPath
      });
    } else if (currentConversationID !== conversationID) {
      uni.navigateBack({
        delta: 1,
        success: () => {
          Wt.switchConversation(conversationID);
          uni == null ? void 0 : uni.navigateTo({
            url: chatPath
          });
        }
      });
    }
  };
  const _sfc_main$2P = /* @__PURE__ */ vue.defineComponent({
    __name: "login",
    setup(__props, { expose: __expose }) {
      __expose();
      const privateAgree = vue.ref(false);
      const inputValue = vue.ref("");
      const statusBarHeight = vue.ref();
      onLoad(async () => {
        statusBarHeight.value = getApp().globalData.top;
        if (uni.getStorageSync("token") && uni.getStorageSync("isLoggedIn")) {
          const userId = uni.getStorageSync("user_id");
          if (userId) {
            const options = genTestUserSig({
              SDKAppID: uni.$chat_SDKAppID,
              secretKey: uni.$chat_secretKey,
              userID: String(userId)
            });
            const loginInfo = {
              SDKAppID: uni.$chat_SDKAppID,
              userID: String(userId),
              userSig: options.userSig,
              TIMPush: uni.$TIMPush,
              pushConfig: {
                androidConfig: uni.$TIMPushConfigs,
                iOSConfig: {
                  iOSBusinessID: ""
                }
              }
            };
            try {
              await login(loginInfo);
              uni.switchTab({
                url: "/pages/pagesall/home"
              });
            } catch (error2) {
              uni.showToast({
                title: "自动登录失败，请重试",
                icon: "error",
                duration: 2e3
              });
            }
          }
        } else {
          uni.navigateTo({
            url: "/pages/login/login"
          });
        }
      });
      const handleLoginInfo = async () => {
        if (!radio.value) {
          uni.showToast({
            title: "请勾选同意协议",
            icon: "error",
            duration: 2e3
          });
          return;
        }
        if (!account.value) {
          uni.showToast({
            title: "请输入账号",
            icon: "error",
            duration: 2e3
          });
          return;
        }
        if (!password.value) {
          uni.showToast({
            title: "请输入密码",
            icon: "error",
            duration: 2e3
          });
          return;
        }
        const store2 = useStore();
        const response = await loginUser({
          mobile: account.value,
          password: password.value
        });
        formatAppLog("log", "at pages/login/login.vue:126", response);
        if (response.code === 1) {
          uni.showToast({
            title: response.msg,
            icon: "success"
          });
          const { token } = response.data.userinfo;
          store2.setUserinfo(response.data.userinfo);
          store2.setToken(token);
          uni.setStorageSync("token", token);
          uni.switchTab({ url: "/pages/pagesall/home" });
        } else {
          uni.showToast({
            title: response.msg,
            icon: "error",
            duration: 2e3
          });
        }
        const { user_id } = response.data.userinfo;
        formatAppLog("log", "at pages/login/login.vue:152", user_id);
        uni.setStorageSync("user_id", user_id);
        tengXun();
      };
      const tengXun = () => {
        const options = genTestUserSig({
          SDKAppID: uni.$chat_SDKAppID,
          secretKey: uni.$chat_secretKey,
          userID: String(uni.getStorageSync("user_id"))
        });
        const loginInfo = {
          SDKAppID: uni.$chat_SDKAppID,
          userID: String(String(uni.getStorageSync("user_id"))),
          // 确保使用正确的user_id,
          userSig: options.userSig,
          // useUploadPlugin: true,
          // framework: `vue${vueVersion}`,
          TIMPush: uni.$TIMPush,
          // register TencentCloud-TIMPush
          pushConfig: {
            androidConfig: uni.$TIMPushConfigs,
            // Android timpush-configs.json
            iOSConfig: {
              iOSBusinessID: ""
              // iOS Certificate ID
            }
          }
        };
        login(loginInfo);
      };
      const login = (loginInfo) => {
        return loginChat(loginInfo).then(() => {
          uni.setStorageSync("isLoggedIn", true);
          uni.setStorageSync("loginInfo", JSON.stringify(loginInfo));
        }).catch((error2) => {
          uni.showToast({
            title: Jt.t("Login.登录失败"),
            icon: "none"
          });
          throw error2;
        });
      };
      const account = vue.ref("");
      const password = vue.ref("");
      const radio = vue.ref(false);
      const store = useStore();
      const capitalizeFirstLetter = (string2) => {
        if (!string2)
          return "";
        return string2.charAt(0).toUpperCase() + string2.slice(1);
      };
      const parsePolicyContent = (content, title) => {
        if (!content) {
          uni.showToast({
            title: `${title}内容为空，请稍后重试`,
            icon: "error",
            duration: 2e3
          });
          return;
        }
        const parser = new DOMParser();
        const doc = parser.parseFromString(content, "text/html");
        const paragraphs = Array.from(doc.getElementsByTagName("p")).map((p2) => p2.textContent).join("\n");
        uni.showModal({
          title,
          content: paragraphs,
          showCancel: false
        });
      };
      const retPass = async () => {
        await uni.navigateTo({ url: "/pages/login/ratpass" });
      };
      const regiSter = () => {
        uni.navigateTo({ url: "/pages/login/register" });
      };
      const radiogrp = (event) => {
        radio.value = event.detail.value.length > 0;
      };
      const getadmin = (event) => {
        account.value = event.detail.value;
      };
      const getpass = (event) => {
        password.value = event.detail.value;
      };
      const __returned__ = { privateAgree, inputValue, statusBarHeight, handleLoginInfo, tengXun, login, account, password, radio, store, capitalizeFirstLetter, parsePolicyContent, retPass, regiSter, radiogrp, getadmin, getpass };
      Object.defineProperty(__returned__, "__isScriptSetup", { enumerable: false, value: true });
      return __returned__;
    }
  });
  function _sfc_render$2O(_ctx, _cache, $props, $setup, $data, $options) {
    return vue.openBlock(), vue.createElementBlock("view", { class: "container" }, [
      vue.createElementVNode(
        "view",
        {
          style: vue.normalizeStyle("height:" + ($setup.statusBarHeight + 5) + "px;")
        },
        null,
        4
        /* STYLE */
      ),
      vue.createElementVNode("view", { class: "form" }, [
        vue.createElementVNode("view", { class: "textlogin" }, [
          vue.createElementVNode("text", null, "登录/注册")
        ]),
        vue.createElementVNode(
          "input",
          {
            type: "text",
            placeholder: "账号",
            class: "input",
            onInput: $setup.getadmin
          },
          null,
          32
          /* NEED_HYDRATION */
        ),
        vue.createElementVNode(
          "input",
          {
            type: "password",
            placeholder: "密码",
            class: "input",
            onInput: $setup.getpass
          },
          null,
          32
          /* NEED_HYDRATION */
        ),
        vue.createElementVNode("button", {
          class: "login-button",
          onClick: $setup.handleLoginInfo
        }, "登录"),
        vue.createElementVNode("view", { class: "links" }, [
          vue.createElementVNode("text", {
            class: "link",
            onClick: $setup.retPass
          }, "找回密码"),
          vue.createElementVNode("text", {
            class: "link",
            onClick: $setup.regiSter
          }, "注册")
        ])
      ]),
      vue.createElementVNode("view", { class: "footer" }, [
        vue.createElementVNode(
          "checkbox-group",
          {
            onChange: $setup.radiogrp,
            style: { "display": "flex", "align-items": "center" }
          },
          [
            vue.createElementVNode("label", { class: "radio" }, [
              vue.createElementVNode("checkbox", {
                value: "true",
                activeBorderColor: "#000",
                activeBackgroundColor: "#fff",
                iconColor: "#000",
                style: { "transform": "scale(0.5)" }
              })
            ]),
            vue.createElementVNode("text", null, [
              vue.createTextVNode(" 点击登录，即表示同意 "),
              vue.createElementVNode("text", {
                onClick: _cache[0] || (_cache[0] = ($event) => _ctx.handlePolicyClick("privacyPolicy")),
                style: { "color": "blue", "text-decoration": "underline" }
              }, "《隐私政策》"),
              vue.createTextVNode(" 和 "),
              vue.createElementVNode("text", {
                onClick: _cache[1] || (_cache[1] = ($event) => _ctx.handlePolicyClick("userAgreement")),
                style: { "color": "blue", "text-decoration": "underline" }
              }, "《用户协议》")
            ])
          ],
          32
          /* NEED_HYDRATION */
        )
      ])
    ]);
  }
  const PagesLoginLogin = /* @__PURE__ */ _export_sfc(_sfc_main$2P, [["render", _sfc_render$2O], ["__file", "C:/Users/Administrator/Desktop/Project Folder/ZXHand/ZXHandwritting_APP_uniapp/pages/login/login.vue"]]);
  const _sfc_main$2O = {
    __name: "ratpass",
    setup(__props, { expose: __expose }) {
      __expose();
      const statusBarHeight = vue.ref();
      onLoad(() => {
        statusBarHeight.value = getApp().globalData.top;
      });
      const account = vue.ref("");
      const password1 = vue.ref("");
      const password2 = vue.ref("");
      const code2 = vue.ref("");
      const isCodeSent = vue.ref(false);
      const countdown = vue.ref(60);
      let timer = null;
      const updateField = (field, event) => {
        if (field === "account")
          account.value = event.detail.value;
        if (field === "password1")
          password1.value = event.detail.value;
        if (field === "password2")
          password2.value = event.detail.value;
        if (field === "code")
          code2.value = event.detail.value;
      };
      const isValidPhoneNumber = (phoneNumber) => phoneNumber.length === 11;
      const requestVerificationCode = async () => {
        const phonePattern = /^[1][3-9][0-9]{9}$/;
        if (!phonePattern.test(account.value)) {
          return showToast("手机号格式不正确");
        }
        uni.showLoading({
          title: "发送中..."
        });
        try {
          const response = await fetchVerificationCode({
            mobile: account.value,
            event: "changemobile"
          });
          formatAppLog("log", "at pages/login/ratpass.vue:67", response);
          if (response.code === 1) {
            isCodeSent.value = true;
            startCountdown2();
            uni.showToast({
              title: response.msg || "验证码发送成功",
              icon: "success",
              // 提示图标类型
              duration: 2e3
              // 持续时间
            });
          } else {
            uni.showToast({
              title: response.msg || "发送验证码失败，请重试",
              icon: "none",
              // 提示图标类型
              duration: 2e3
              // 持续时间
            });
          }
        } catch (error2) {
          uni.showToast({
            title: "发送验证码失败，请重试",
            icon: "none",
            // 提示图标类型
            duration: 2e3
            // 持续时间
          });
          formatAppLog("error", "at pages/login/ratpass.vue:90", "发送验证码错误:", error2);
        } finally {
          uni.hideLoading();
        }
      };
      const startCountdown2 = () => {
        countdown.value = 60;
        clearInterval(timer);
        timer = setInterval(() => {
          countdown.value--;
          if (countdown.value <= 0) {
            clearInterval(timer);
            isCodeSent.value = false;
          }
        }, 1e3);
      };
      const submitResetPassword = async () => {
        if (!account.value || !password1.value || !password2.value || !code2.value) {
          return showError("请完整填写信息");
        }
        if (password1.value !== password2.value) {
          return showError("两次密码输入不一致");
        }
        try {
          const response = await fetchFindPassword({
            mobile: account.value,
            newpassword: password2.value,
            captcha: code2.value
          });
          if (response.statusCode === 200) {
            uni.showToast({
              title: "密码重置成功",
              icon: "success",
              duration: 2e3
            });
            uni.redirectTo({ url: "/pages/login/login" });
          }
        } catch (error2) {
          showError("网络异常，请稍后再试");
          formatAppLog("error", "at pages/login/ratpass.vue:146", "重置密码错误:", error2);
        }
      };
      const showError = (message2) => {
        uni.showToast({
          title: message2,
          icon: "error",
          duration: 2e3
        });
      };
      const __returned__ = { statusBarHeight, account, password1, password2, code: code2, isCodeSent, countdown, get timer() {
        return timer;
      }, set timer(v2) {
        timer = v2;
      }, updateField, isValidPhoneNumber, requestVerificationCode, startCountdown: startCountdown2, submitResetPassword, showError, ref: vue.ref, get fetchFindPassword() {
        return fetchFindPassword;
      }, get fetchVerificationCode() {
        return fetchVerificationCode;
      }, get onLoad() {
        return onLoad;
      } };
      Object.defineProperty(__returned__, "__isScriptSetup", { enumerable: false, value: true });
      return __returned__;
    }
  };
  function _sfc_render$2N(_ctx, _cache, $props, $setup, $data, $options) {
    return vue.openBlock(), vue.createElementBlock("view", { class: "container" }, [
      vue.createElementVNode(
        "view",
        {
          style: vue.normalizeStyle("height:" + ($setup.statusBarHeight + 5) + "px;")
        },
        null,
        4
        /* STYLE */
      ),
      vue.createElementVNode("view", { class: "form" }, [
        vue.createElementVNode("view", { class: "textlogin" }, [
          vue.createElementVNode("text", null, "找回密码")
        ]),
        vue.createElementVNode(
          "input",
          {
            type: "text",
            placeholder: "请输入手机号",
            class: "input",
            onInput: _cache[0] || (_cache[0] = ($event) => $setup.updateField("account", $event))
          },
          null,
          32
          /* NEED_HYDRATION */
        ),
        vue.createElementVNode(
          "input",
          {
            type: "password",
            placeholder: "请确认密码",
            class: "input",
            onInput: _cache[1] || (_cache[1] = ($event) => $setup.updateField("password1", $event))
          },
          null,
          32
          /* NEED_HYDRATION */
        ),
        vue.createElementVNode(
          "input",
          {
            type: "password",
            placeholder: "请在此确认密码",
            class: "input",
            onInput: _cache[2] || (_cache[2] = ($event) => $setup.updateField("password2", $event))
          },
          null,
          32
          /* NEED_HYDRATION */
        ),
        vue.createElementVNode("view", { class: "button1" }, [
          vue.createElementVNode(
            "input",
            {
              type: "text",
              placeholder: "请输入验证码",
              class: "input button2",
              onInput: _cache[3] || (_cache[3] = ($event) => $setup.updateField("code", $event))
            },
            null,
            32
            /* NEED_HYDRATION */
          ),
          vue.createCommentVNode(' <button class="button3" @click="requestVerificationCode">获取</button> '),
          vue.createElementVNode("view", {
            onClick: vue.withModifiers($setup.requestVerificationCode, ["stop"]),
            disabled: $setup.isCodeSent,
            class: vue.normalizeClass({ "code-button": true, "disabled-button": $setup.isCodeSent })
          }, vue.toDisplayString($setup.isCodeSent ? `${$setup.countdown}秒` : "获取验证码"), 11, ["disabled"])
        ]),
        vue.createElementVNode("button", {
          class: "login-button",
          onClick: $setup.submitResetPassword
        }, "完成")
      ]),
      vue.createElementVNode("view", { class: "footer" })
    ]);
  }
  const PagesLoginRatpass = /* @__PURE__ */ _export_sfc(_sfc_main$2O, [["render", _sfc_render$2N], ["__scopeId", "data-v-58fa56fc"], ["__file", "C:/Users/Administrator/Desktop/Project Folder/ZXHand/ZXHandwritting_APP_uniapp/pages/login/ratpass.vue"]]);
  const mpMixin = {};
  function email(value) {
    return /^\w+((-\w+)|(\.\w+))*\@[A-Za-z0-9]+((\.|-)[A-Za-z0-9]+)*\.[A-Za-z0-9]+$/.test(value);
  }
  function mobile(value) {
    return /^1([3589]\d|4[5-9]|6[1-2,4-7]|7[0-8])\d{8}$/.test(value);
  }
  function url(value) {
    return /^((https|http|ftp|rtsp|mms):\/\/)(([0-9a-zA-Z_!~*'().&=+$%-]+: )?[0-9a-zA-Z_!~*'().&=+$%-]+@)?(([0-9]{1,3}.){3}[0-9]{1,3}|([0-9a-zA-Z_!~*'()-]+.)*([0-9a-zA-Z][0-9a-zA-Z-]{0,61})?[0-9a-zA-Z].[a-zA-Z]{2,6})(:[0-9]{1,4})?((\/?)|(\/[0-9a-zA-Z_!~*'().;?:@&=+$,%#-]+)+\/?)$/.test(value);
  }
  function date(value) {
    if (!value)
      return false;
    if (number(value))
      value = +value;
    return !/Invalid|NaN/.test(new Date(value).toString());
  }
  function dateISO(value) {
    return /^\d{4}[\/\-](0?[1-9]|1[012])[\/\-](0?[1-9]|[12][0-9]|3[01])$/.test(value);
  }
  function number(value) {
    return /^[\+-]?(\d+\.?\d*|\.\d+|\d\.\d+e\+\d+)$/.test(value);
  }
  function string(value) {
    return typeof value === "string";
  }
  function digits(value) {
    return /^\d+$/.test(value);
  }
  function idCard(value) {
    return /^[1-9]\d{5}[1-9]\d{3}((0\d)|(1[0-2]))(([0|1|2]\d)|3[0-1])\d{3}([0-9]|X)$/.test(
      value
    );
  }
  function carNo(value) {
    const xreg = /^[京津沪渝冀豫云辽黑湘皖鲁新苏浙赣鄂桂甘晋蒙陕吉闽贵粤青藏川宁琼使领A-Z]{1}[A-Z]{1}(([0-9]{5}[DF]$)|([DF][A-HJ-NP-Z0-9][0-9]{4}$))/;
    const creg = /^[京津沪渝冀豫云辽黑湘皖鲁新苏浙赣鄂桂甘晋蒙陕吉闽贵粤青藏川宁琼使领A-Z]{1}[A-Z]{1}[A-HJ-NP-Z0-9]{4}[A-HJ-NP-Z0-9挂学警港澳]{1}$/;
    if (value.length === 7) {
      return creg.test(value);
    }
    if (value.length === 8) {
      return xreg.test(value);
    }
    return false;
  }
  function amount(value) {
    return /^[1-9]\d*(,\d{3})*(\.\d{1,2})?$|^0\.\d{1,2}$/.test(value);
  }
  function chinese(value) {
    const reg = /^[\u4e00-\u9fa5]+$/gi;
    return reg.test(value);
  }
  function letter(value) {
    return /^[a-zA-Z]*$/.test(value);
  }
  function enOrNum(value) {
    const reg = /^[0-9a-zA-Z]*$/g;
    return reg.test(value);
  }
  function contains(value, param) {
    return value.indexOf(param) >= 0;
  }
  function range$1(value, param) {
    return value >= param[0] && value <= param[1];
  }
  function rangeLength(value, param) {
    return value.length >= param[0] && value.length <= param[1];
  }
  function landline(value) {
    const reg = /^\d{3,4}-\d{7,8}(-\d{3,4})?$/;
    return reg.test(value);
  }
  function empty(value) {
    switch (typeof value) {
      case "undefined":
        return true;
      case "string":
        if (value.replace(/(^[ \t\n\r]*)|([ \t\n\r]*$)/g, "").length == 0)
          return true;
        break;
      case "boolean":
        if (!value)
          return true;
        break;
      case "number":
        if (value === 0 || isNaN(value))
          return true;
        break;
      case "object":
        if (value === null || value.length === 0)
          return true;
        for (const i2 in value) {
          return false;
        }
        return true;
    }
    return false;
  }
  function jsonString(value) {
    if (typeof value === "string") {
      try {
        const obj = JSON.parse(value);
        if (typeof obj === "object" && obj) {
          return true;
        }
        return false;
      } catch (e2) {
        return false;
      }
    }
    return false;
  }
  function array(value) {
    if (typeof Array.isArray === "function") {
      return Array.isArray(value);
    }
    return Object.prototype.toString.call(value) === "[object Array]";
  }
  function object(value) {
    return Object.prototype.toString.call(value) === "[object Object]";
  }
  function code(value, len = 6) {
    return new RegExp(`^\\d{${len}}$`).test(value);
  }
  function func(value) {
    return typeof value === "function";
  }
  function promise(value) {
    return object(value) && func(value.then) && func(value.catch);
  }
  function image(value) {
    const newValue = value.split("?")[0];
    const IMAGE_REGEXP = /\.(jpeg|jpg|gif|png|svg|webp|jfif|bmp|dpg)/i;
    return IMAGE_REGEXP.test(newValue);
  }
  function video(value) {
    const VIDEO_REGEXP = /\.(mp4|mpg|mpeg|dat|asf|avi|rm|rmvb|mov|wmv|flv|mkv|m3u8)/i;
    return VIDEO_REGEXP.test(value);
  }
  function regExp(o2) {
    return o2 && Object.prototype.toString.call(o2) === "[object RegExp]";
  }
  const test = /* @__PURE__ */ Object.freeze(/* @__PURE__ */ Object.defineProperty({
    __proto__: null,
    amount,
    array,
    carNo,
    chinese,
    code,
    contains,
    date,
    dateISO,
    digits,
    email,
    empty,
    enOrNum,
    func,
    idCard,
    image,
    jsonString,
    landline,
    letter,
    mobile,
    number,
    object,
    promise,
    range: range$1,
    rangeLength,
    regExp,
    string,
    url,
    video
  }, Symbol.toStringTag, { value: "Module" }));
  function strip(num, precision = 15) {
    return +parseFloat(Number(num).toPrecision(precision));
  }
  function digitLength(num) {
    const eSplit = num.toString().split(/[eE]/);
    const len = (eSplit[0].split(".")[1] || "").length - +(eSplit[1] || 0);
    return len > 0 ? len : 0;
  }
  function float2Fixed(num) {
    if (num.toString().indexOf("e") === -1) {
      return Number(num.toString().replace(".", ""));
    }
    const dLen = digitLength(num);
    return dLen > 0 ? strip(Number(num) * Math.pow(10, dLen)) : Number(num);
  }
  function checkBoundary(num) {
    {
      if (num > Number.MAX_SAFE_INTEGER || num < Number.MIN_SAFE_INTEGER) {
        formatAppLog("warn", "at uni_modules/uv-ui-tools/libs/function/digit.js:45", `${num} 超出了精度限制，结果可能不正确`);
      }
    }
  }
  function iteratorOperation(arr, operation) {
    const [num1, num2, ...others] = arr;
    let res = operation(num1, num2);
    others.forEach((num) => {
      res = operation(res, num);
    });
    return res;
  }
  function times$1(...nums) {
    if (nums.length > 2) {
      return iteratorOperation(nums, times$1);
    }
    const [num1, num2] = nums;
    const num1Changed = float2Fixed(num1);
    const num2Changed = float2Fixed(num2);
    const baseNum = digitLength(num1) + digitLength(num2);
    const leftValue = num1Changed * num2Changed;
    checkBoundary(leftValue);
    return leftValue / Math.pow(10, baseNum);
  }
  function divide(...nums) {
    if (nums.length > 2) {
      return iteratorOperation(nums, divide);
    }
    const [num1, num2] = nums;
    const num1Changed = float2Fixed(num1);
    const num2Changed = float2Fixed(num2);
    checkBoundary(num1Changed);
    checkBoundary(num2Changed);
    return times$1(num1Changed / num2Changed, strip(Math.pow(10, digitLength(num2) - digitLength(num1))));
  }
  function round(num, ratio) {
    const base = Math.pow(10, ratio);
    let result = divide(Math.round(Math.abs(times$1(num, base))), base);
    if (num < 0 && result !== 0) {
      result = times$1(result, -1);
    }
    return result;
  }
  function range(min = 0, max = 0, value = 0) {
    return Math.max(min, Math.min(max, Number(value)));
  }
  function getPx(value, unit = false) {
    if (number(value)) {
      return unit ? `${value}px` : Number(value);
    }
    if (/(rpx|upx)$/.test(value)) {
      return unit ? `${uni.upx2px(parseInt(value))}px` : Number(uni.upx2px(parseInt(value)));
    }
    return unit ? `${parseInt(value)}px` : parseInt(value);
  }
  function sleep(value = 30) {
    return new Promise((resolve) => {
      setTimeout(() => {
        resolve();
      }, value);
    });
  }
  function os() {
    return uni.getSystemInfoSync().platform.toLowerCase();
  }
  function sys() {
    return uni.getSystemInfoSync();
  }
  function random(min, max) {
    if (min >= 0 && max > 0 && max >= min) {
      const gab = max - min + 1;
      return Math.floor(Math.random() * gab + min);
    }
    return 0;
  }
  function guid(len = 32, firstU = true, radix = null) {
    const chars = "0123456789ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz".split("");
    const uuid = [];
    radix = radix || chars.length;
    if (len) {
      for (let i2 = 0; i2 < len; i2++)
        uuid[i2] = chars[0 | Math.random() * radix];
    } else {
      let r2;
      uuid[8] = uuid[13] = uuid[18] = uuid[23] = "-";
      uuid[14] = "4";
      for (let i2 = 0; i2 < 36; i2++) {
        if (!uuid[i2]) {
          r2 = 0 | Math.random() * 16;
          uuid[i2] = chars[i2 == 19 ? r2 & 3 | 8 : r2];
        }
      }
    }
    if (firstU) {
      uuid.shift();
      return `u${uuid.join("")}`;
    }
    return uuid.join("");
  }
  function $parent(name = void 0) {
    let parent = this.$parent;
    while (parent) {
      if (parent.$options && parent.$options.name !== name) {
        parent = parent.$parent;
      } else {
        return parent;
      }
    }
    return false;
  }
  function addStyle(customStyle, target = "object") {
    if (empty(customStyle) || typeof customStyle === "object" && target === "object" || target === "string" && typeof customStyle === "string") {
      return customStyle;
    }
    if (target === "object") {
      customStyle = trim(customStyle);
      const styleArray = customStyle.split(";");
      const style = {};
      for (let i2 = 0; i2 < styleArray.length; i2++) {
        if (styleArray[i2]) {
          const item = styleArray[i2].split(":");
          style[trim(item[0])] = trim(item[1]);
        }
      }
      return style;
    }
    let string2 = "";
    for (const i2 in customStyle) {
      const key = i2.replace(/([A-Z])/g, "-$1").toLowerCase();
      string2 += `${key}:${customStyle[i2]};`;
    }
    return trim(string2);
  }
  function addUnit(value = "auto", unit = ((_b) => (_b = ((_a) => (_a = uni == null ? void 0 : uni.$uv) == null ? void 0 : _a.config)()) == null ? void 0 : _b.unit)() ? ((_d) => (_d = ((_c) => (_c = uni == null ? void 0 : uni.$uv) == null ? void 0 : _c.config)()) == null ? void 0 : _d.unit)() : "px") {
    value = String(value);
    return number(value) ? `${value}${unit}` : value;
  }
  function deepClone(obj, cache = /* @__PURE__ */ new WeakMap()) {
    if (obj === null || typeof obj !== "object")
      return obj;
    if (cache.has(obj))
      return cache.get(obj);
    let clone;
    if (obj instanceof Date) {
      clone = new Date(obj.getTime());
    } else if (obj instanceof RegExp) {
      clone = new RegExp(obj);
    } else if (obj instanceof Map) {
      clone = new Map(Array.from(obj, ([key, value]) => [key, deepClone(value, cache)]));
    } else if (obj instanceof Set) {
      clone = new Set(Array.from(obj, (value) => deepClone(value, cache)));
    } else if (Array.isArray(obj)) {
      clone = obj.map((value) => deepClone(value, cache));
    } else if (Object.prototype.toString.call(obj) === "[object Object]") {
      clone = Object.create(Object.getPrototypeOf(obj));
      cache.set(obj, clone);
      for (const [key, value] of Object.entries(obj)) {
        clone[key] = deepClone(value, cache);
      }
    } else {
      clone = Object.assign({}, obj);
    }
    cache.set(obj, clone);
    return clone;
  }
  function deepMerge(target = {}, source = {}) {
    target = deepClone(target);
    if (typeof target !== "object" || target === null || typeof source !== "object" || source === null)
      return target;
    const merged = Array.isArray(target) ? target.slice() : Object.assign({}, target);
    for (const prop in source) {
      if (!source.hasOwnProperty(prop))
        continue;
      const sourceValue = source[prop];
      const targetValue = merged[prop];
      if (sourceValue instanceof Date) {
        merged[prop] = new Date(sourceValue);
      } else if (sourceValue instanceof RegExp) {
        merged[prop] = new RegExp(sourceValue);
      } else if (sourceValue instanceof Map) {
        merged[prop] = new Map(sourceValue);
      } else if (sourceValue instanceof Set) {
        merged[prop] = new Set(sourceValue);
      } else if (typeof sourceValue === "object" && sourceValue !== null) {
        merged[prop] = deepMerge(targetValue, sourceValue);
      } else {
        merged[prop] = sourceValue;
      }
    }
    return merged;
  }
  function error(err) {
    {
      formatAppLog("error", "at uni_modules/uv-ui-tools/libs/function/index.js:250", `uvui提示：${err}`);
    }
  }
  function randomArray(array2 = []) {
    return array2.sort(() => Math.random() - 0.5);
  }
  if (!String.prototype.padStart) {
    String.prototype.padStart = function(maxLength, fillString = " ") {
      if (Object.prototype.toString.call(fillString) !== "[object String]") {
        throw new TypeError(
          "fillString must be String"
        );
      }
      const str = this;
      if (str.length >= maxLength)
        return String(str);
      const fillLength = maxLength - str.length;
      let times2 = Math.ceil(fillLength / fillString.length);
      while (times2 >>= 1) {
        fillString += fillString;
        if (times2 === 1) {
          fillString += fillString;
        }
      }
      return fillString.slice(0, fillLength) + str;
    };
  }
  function timeFormat(dateTime = null, formatStr = "yyyy-mm-dd") {
    let date2;
    if (!dateTime) {
      date2 = /* @__PURE__ */ new Date();
    } else if (/^\d{10}$/.test(dateTime == null ? void 0 : dateTime.toString().trim())) {
      date2 = new Date(dateTime * 1e3);
    } else if (typeof dateTime === "string" && /^\d+$/.test(dateTime.trim())) {
      date2 = new Date(Number(dateTime));
    } else if (typeof dateTime === "string" && dateTime.includes("-") && !dateTime.includes("T")) {
      date2 = new Date(dateTime.replace(/-/g, "/"));
    } else {
      date2 = new Date(dateTime);
    }
    const timeSource = {
      "y": date2.getFullYear().toString(),
      // 年
      "m": (date2.getMonth() + 1).toString().padStart(2, "0"),
      // 月
      "d": date2.getDate().toString().padStart(2, "0"),
      // 日
      "h": date2.getHours().toString().padStart(2, "0"),
      // 时
      "M": date2.getMinutes().toString().padStart(2, "0"),
      // 分
      "s": date2.getSeconds().toString().padStart(2, "0")
      // 秒
      // 有其他格式化字符需求可以继续添加，必须转化成字符串
    };
    for (const key in timeSource) {
      const [ret] = new RegExp(`${key}+`).exec(formatStr) || [];
      if (ret) {
        const beginIndex = key === "y" && ret.length === 2 ? 2 : 0;
        formatStr = formatStr.replace(ret, timeSource[key].slice(beginIndex));
      }
    }
    return formatStr;
  }
  function timeFrom(timestamp = null, format = "yyyy-mm-dd") {
    if (timestamp == null)
      timestamp = Number(/* @__PURE__ */ new Date());
    timestamp = parseInt(timestamp);
    if (timestamp.toString().length == 10)
      timestamp *= 1e3;
    let timer = (/* @__PURE__ */ new Date()).getTime() - timestamp;
    timer = parseInt(timer / 1e3);
    let tips = "";
    switch (true) {
      case timer < 300:
        tips = "刚刚";
        break;
      case (timer >= 300 && timer < 3600):
        tips = `${parseInt(timer / 60)}分钟前`;
        break;
      case (timer >= 3600 && timer < 86400):
        tips = `${parseInt(timer / 3600)}小时前`;
        break;
      case (timer >= 86400 && timer < 2592e3):
        tips = `${parseInt(timer / 86400)}天前`;
        break;
      default:
        if (format === false) {
          if (timer >= 2592e3 && timer < 365 * 86400) {
            tips = `${parseInt(timer / (86400 * 30))}个月前`;
          } else {
            tips = `${parseInt(timer / (86400 * 365))}年前`;
          }
        } else {
          tips = timeFormat(timestamp, format);
        }
    }
    return tips;
  }
  function trim(str, pos = "both") {
    str = String(str);
    if (pos == "both") {
      return str.replace(/^\s+|\s+$/g, "");
    }
    if (pos == "left") {
      return str.replace(/^\s*/, "");
    }
    if (pos == "right") {
      return str.replace(/(\s*$)/g, "");
    }
    if (pos == "all") {
      return str.replace(/\s+/g, "");
    }
    return str;
  }
  function queryParams(data = {}, isPrefix = true, arrayFormat = "brackets") {
    const prefix = isPrefix ? "?" : "";
    const _result = [];
    if (["indices", "brackets", "repeat", "comma"].indexOf(arrayFormat) == -1)
      arrayFormat = "brackets";
    for (const key in data) {
      const value = data[key];
      if (["", void 0, null].indexOf(value) >= 0) {
        continue;
      }
      if (value.constructor === Array) {
        switch (arrayFormat) {
          case "indices":
            for (let i2 = 0; i2 < value.length; i2++) {
              _result.push(`${key}[${i2}]=${value[i2]}`);
            }
            break;
          case "brackets":
            value.forEach((_value) => {
              _result.push(`${key}[]=${_value}`);
            });
            break;
          case "repeat":
            value.forEach((_value) => {
              _result.push(`${key}=${_value}`);
            });
            break;
          case "comma":
            let commaStr = "";
            value.forEach((_value) => {
              commaStr += (commaStr ? "," : "") + _value;
            });
            _result.push(`${key}=${commaStr}`);
            break;
          default:
            value.forEach((_value) => {
              _result.push(`${key}[]=${_value}`);
            });
        }
      } else {
        _result.push(`${key}=${value}`);
      }
    }
    return _result.length ? prefix + _result.join("&") : "";
  }
  function toast(title, duration = 2e3) {
    uni.showToast({
      title: String(title),
      icon: "none",
      duration
    });
  }
  function type2icon(type = "success", fill = false) {
    if (["primary", "info", "error", "warning", "success"].indexOf(type) == -1)
      type = "success";
    let iconName = "";
    switch (type) {
      case "primary":
        iconName = "info-circle";
        break;
      case "info":
        iconName = "info-circle";
        break;
      case "error":
        iconName = "close-circle";
        break;
      case "warning":
        iconName = "error-circle";
        break;
      case "success":
        iconName = "checkmark-circle";
        break;
      default:
        iconName = "checkmark-circle";
    }
    if (fill)
      iconName += "-fill";
    return iconName;
  }
  function priceFormat(number2, decimals = 0, decimalPoint = ".", thousandsSeparator = ",") {
    number2 = `${number2}`.replace(/[^0-9+-Ee.]/g, "");
    const n2 = !isFinite(+number2) ? 0 : +number2;
    const prec = !isFinite(+decimals) ? 0 : Math.abs(decimals);
    const sep = typeof thousandsSeparator === "undefined" ? "," : thousandsSeparator;
    const dec = typeof decimalPoint === "undefined" ? "." : decimalPoint;
    let s2 = "";
    s2 = (prec ? round(n2, prec) + "" : `${Math.round(n2)}`).split(".");
    const re2 = /(-?\d+)(\d{3})/;
    while (re2.test(s2[0])) {
      s2[0] = s2[0].replace(re2, `$1${sep}$2`);
    }
    if ((s2[1] || "").length < prec) {
      s2[1] = s2[1] || "";
      s2[1] += new Array(prec - s2[1].length + 1).join("0");
    }
    return s2.join(dec);
  }
  function getDuration(value, unit = true) {
    const valueNum = parseInt(value);
    if (unit) {
      if (/s$/.test(value))
        return value;
      return value > 30 ? `${value}ms` : `${value}s`;
    }
    if (/ms$/.test(value))
      return valueNum;
    if (/s$/.test(value))
      return valueNum > 30 ? valueNum : valueNum * 1e3;
    return valueNum;
  }
  function padZero(value) {
    return `00${value}`.slice(-2);
  }
  function formValidate(instance, event) {
    const formItem = $parent.call(instance, "uv-form-item");
    const form = $parent.call(instance, "uv-form");
    if (formItem && form) {
      form.validateField(formItem.prop, () => {
      }, event);
    }
  }
  function getProperty(obj, key) {
    if (!obj) {
      return;
    }
    if (typeof key !== "string" || key === "") {
      return "";
    }
    if (key.indexOf(".") !== -1) {
      const keys = key.split(".");
      let firstObj = obj[keys[0]] || {};
      for (let i2 = 1; i2 < keys.length; i2++) {
        if (firstObj) {
          firstObj = firstObj[keys[i2]];
        }
      }
      return firstObj;
    }
    return obj[key];
  }
  function setProperty(obj, key, value) {
    if (!obj) {
      return;
    }
    const inFn = function(_obj, keys, v2) {
      if (keys.length === 1) {
        _obj[keys[0]] = v2;
        return;
      }
      while (keys.length > 1) {
        const k2 = keys[0];
        if (!_obj[k2] || typeof _obj[k2] !== "object") {
          _obj[k2] = {};
        }
        keys.shift();
        inFn(_obj[k2], keys, v2);
      }
    };
    if (typeof key !== "string" || key === "")
      ;
    else if (key.indexOf(".") !== -1) {
      const keys = key.split(".");
      inFn(obj, keys, value);
    } else {
      obj[key] = value;
    }
  }
  function page() {
    var _a;
    const pages2 = getCurrentPages();
    const route2 = (_a = pages2[pages2.length - 1]) == null ? void 0 : _a.route;
    return `/${route2 ? route2 : ""}`;
  }
  function pages() {
    const pages2 = getCurrentPages();
    return pages2;
  }
  function getHistoryPage(back = 0) {
    const pages2 = getCurrentPages();
    const len = pages2.length;
    return pages2[len - 1 + back];
  }
  function setConfig({
    props: props2 = {},
    config = {},
    color = {},
    zIndex = {}
  }) {
    const {
      deepMerge: deepMerge2
    } = uni.$uv;
    uni.$uv.config = deepMerge2(uni.$uv.config, config);
    uni.$uv.props = deepMerge2(uni.$uv.props, props2);
    uni.$uv.color = deepMerge2(uni.$uv.color, color);
    uni.$uv.zIndex = deepMerge2(uni.$uv.zIndex, zIndex);
  }
  const index = /* @__PURE__ */ Object.freeze(/* @__PURE__ */ Object.defineProperty({
    __proto__: null,
    $parent,
    addStyle,
    addUnit,
    deepClone,
    deepMerge,
    error,
    formValidate,
    getDuration,
    getHistoryPage,
    getProperty,
    getPx,
    guid,
    os,
    padZero,
    page,
    pages,
    priceFormat,
    queryParams,
    random,
    randomArray,
    range,
    setConfig,
    setProperty,
    sleep,
    sys,
    timeFormat,
    timeFrom,
    toast,
    trim,
    type2icon
  }, Symbol.toStringTag, { value: "Module" }));
  class Router {
    constructor() {
      this.config = {
        type: "navigateTo",
        url: "",
        delta: 1,
        // navigateBack页面后退时,回退的层数
        params: {},
        // 传递的参数
        animationType: "pop-in",
        // 窗口动画,只在APP有效
        animationDuration: 300,
        // 窗口动画持续时间,单位毫秒,只在APP有效
        intercept: false,
        // 是否需要拦截
        events: {}
        // 页面间通信接口，用于监听被打开页面发送到当前页面的数据。hbuilderx 2.8.9+ 开始支持。
      };
      this.route = this.route.bind(this);
    }
    // 判断url前面是否有"/"，如果没有则加上，否则无法跳转
    addRootPath(url2) {
      return url2[0] === "/" ? url2 : `/${url2}`;
    }
    // 整合路由参数
    mixinParam(url2, params) {
      url2 = url2 && this.addRootPath(url2);
      let query = "";
      if (/.*\/.*\?.*=.*/.test(url2)) {
        query = queryParams(params, false);
        return url2 += `&${query}`;
      }
      query = queryParams(params);
      return url2 += query;
    }
    // 对外的方法名称
    async route(options = {}, params = {}) {
      let mergeConfig = {};
      if (typeof options === "string") {
        mergeConfig.url = this.mixinParam(options, params);
        mergeConfig.type = "navigateTo";
      } else {
        mergeConfig = deepMerge(this.config, options);
        mergeConfig.url = this.mixinParam(options.url, options.params);
      }
      if (mergeConfig.url === page())
        return;
      if (params.intercept) {
        mergeConfig.intercept = params.intercept;
      }
      mergeConfig.params = params;
      mergeConfig = deepMerge(this.config, mergeConfig);
      if (typeof mergeConfig.intercept === "function") {
        const isNext = await new Promise((resolve, reject) => {
          mergeConfig.intercept(mergeConfig, resolve);
        });
        isNext && this.openPage(mergeConfig);
      } else {
        this.openPage(mergeConfig);
      }
    }
    // 执行路由跳转
    openPage(config) {
      const {
        url: url2,
        type,
        delta,
        animationType,
        animationDuration,
        events
      } = config;
      if (config.type == "navigateTo" || config.type == "to") {
        uni.navigateTo({
          url: url2,
          animationType,
          animationDuration,
          events
        });
      }
      if (config.type == "redirectTo" || config.type == "redirect") {
        uni.redirectTo({
          url: url2
        });
      }
      if (config.type == "switchTab" || config.type == "tab") {
        uni.switchTab({
          url: url2
        });
      }
      if (config.type == "reLaunch" || config.type == "launch") {
        uni.reLaunch({
          url: url2
        });
      }
      if (config.type == "navigateBack" || config.type == "back") {
        uni.navigateBack({
          delta
        });
      }
    }
  }
  const route = new Router().route;
  let timeout = null;
  function debounce$2(func2, wait = 500, immediate = false) {
    if (timeout !== null)
      clearTimeout(timeout);
    if (immediate) {
      const callNow = !timeout;
      timeout = setTimeout(() => {
        timeout = null;
      }, wait);
      if (callNow)
        typeof func2 === "function" && func2();
    } else {
      timeout = setTimeout(() => {
        typeof func2 === "function" && func2();
      }, wait);
    }
  }
  let flag;
  function throttle$1(func2, wait = 500, immediate = true) {
    if (immediate) {
      if (!flag) {
        flag = true;
        typeof func2 === "function" && func2();
        setTimeout(() => {
          flag = false;
        }, wait);
      }
    } else if (!flag) {
      flag = true;
      setTimeout(() => {
        flag = false;
        typeof func2 === "function" && func2();
      }, wait);
    }
  }
  const mixin = {
    // 定义每个组件都可能需要用到的外部样式以及类名
    props: {
      // 每个组件都有的父组件传递的样式，可以为字符串或者对象形式
      customStyle: {
        type: [Object, String],
        default: () => ({})
      },
      customClass: {
        type: String,
        default: ""
      },
      // 跳转的页面路径
      url: {
        type: String,
        default: ""
      },
      // 页面跳转的类型
      linkType: {
        type: String,
        default: "navigateTo"
      }
    },
    data() {
      return {};
    },
    onLoad() {
      this.$uv.getRect = this.$uvGetRect;
    },
    created() {
      this.$uv.getRect = this.$uvGetRect;
    },
    computed: {
      $uv() {
        var _a, _b;
        return {
          ...index,
          test,
          route,
          debounce: debounce$2,
          throttle: throttle$1,
          unit: (_b = (_a = uni == null ? void 0 : uni.$uv) == null ? void 0 : _a.config) == null ? void 0 : _b.unit
        };
      },
      /**
       * 生成bem规则类名
       * 由于微信小程序，H5，nvue之间绑定class的差异，无法通过:class="[bem()]"的形式进行同用
       * 故采用如下折中做法，最后返回的是数组（一般平台）或字符串（支付宝和字节跳动平台），类似['a', 'b', 'c']或'a b c'的形式
       * @param {String} name 组件名称
       * @param {Array} fixed 一直会存在的类名
       * @param {Array} change 会根据变量值为true或者false而出现或者隐藏的类名
       * @returns {Array|string}
       */
      bem() {
        return function(name, fixed, change) {
          const prefix = `uv-${name}--`;
          const classes = {};
          if (fixed) {
            fixed.map((item) => {
              classes[prefix + this[item]] = true;
            });
          }
          if (change) {
            change.map((item) => {
              this[item] ? classes[prefix + item] = this[item] : delete classes[prefix + item];
            });
          }
          return Object.keys(classes);
        };
      }
    },
    methods: {
      // 跳转某一个页面
      openPage(urlKey = "url") {
        const url2 = this[urlKey];
        if (url2) {
          uni[this.linkType]({
            url: url2
          });
        }
      },
      // 查询节点信息
      // 目前此方法在支付宝小程序中无法获取组件跟接点的尺寸，为支付宝的bug(2020-07-21)
      // 解决办法为在组件根部再套一个没有任何作用的view元素
      $uvGetRect(selector, all) {
        return new Promise((resolve) => {
          uni.createSelectorQuery().in(this)[all ? "selectAll" : "select"](selector).boundingClientRect((rect) => {
            if (all && Array.isArray(rect) && rect.length) {
              resolve(rect);
            }
            if (!all && rect) {
              resolve(rect);
            }
          }).exec();
        });
      },
      getParentData(parentName = "") {
        if (!this.parent)
          this.parent = {};
        this.parent = this.$uv.$parent.call(this, parentName);
        if (this.parent.children) {
          this.parent.children.indexOf(this) === -1 && this.parent.children.push(this);
        }
        if (this.parent && this.parentData) {
          Object.keys(this.parentData).map((key) => {
            this.parentData[key] = this.parent[key];
          });
        }
      },
      // 阻止事件冒泡
      preventEvent(e2) {
        e2 && typeof e2.stopPropagation === "function" && e2.stopPropagation();
      },
      // 空操作
      noop(e2) {
        this.preventEvent(e2);
      }
    },
    onReachBottom() {
      uni.$emit("uvOnReachBottom");
    },
    beforeDestroy() {
      if (this.parent && array(this.parent.children)) {
        const childrenList = this.parent.children;
        childrenList.map((child, index2) => {
          if (child === this) {
            childrenList.splice(index2, 1);
          }
        });
      }
    },
    // 兼容vue3
    unmounted() {
      if (this.parent && array(this.parent.children)) {
        const childrenList = this.parent.children;
        childrenList.map((child, index2) => {
          if (child === this) {
            childrenList.splice(index2, 1);
          }
        });
      }
    }
  };
  const props$6 = {
    props: {
      // 是否展示工具条
      show: {
        type: Boolean,
        default: true
      },
      // 是否显示下边框
      showBorder: {
        type: Boolean,
        default: false
      },
      // 取消按钮的文字
      cancelText: {
        type: String,
        default: "取消"
      },
      // 确认按钮的文字
      confirmText: {
        type: String,
        default: "确认"
      },
      // 取消按钮的颜色
      cancelColor: {
        type: String,
        default: "#909193"
      },
      // 确认按钮的颜色
      confirmColor: {
        type: String,
        default: "#3c9cff"
      },
      // 标题文字
      title: {
        type: String,
        default: ""
      },
      ...(_f = (_e2 = uni.$uv) == null ? void 0 : _e2.props) == null ? void 0 : _f.toolbar
    }
  };
  const _sfc_main$2N = {
    name: "uv-toolbar",
    emits: ["confirm", "cancel"],
    mixins: [mpMixin, mixin, props$6],
    methods: {
      // 点击取消按钮
      cancel() {
        this.$emit("cancel");
      },
      // 点击确定按钮
      confirm() {
        this.$emit("confirm");
      }
    }
  };
  function _sfc_render$2M(_ctx, _cache, $props, $setup, $data, $options) {
    return _ctx.show ? (vue.openBlock(), vue.createElementBlock(
      "view",
      {
        key: 0,
        class: vue.normalizeClass(["uv-toolbar", { "uv-border-bottom": _ctx.showBorder }]),
        onTouchmove: _cache[2] || (_cache[2] = vue.withModifiers((...args) => _ctx.noop && _ctx.noop(...args), ["stop", "prevent"]))
      },
      [
        vue.createElementVNode("view", {
          class: "uv-toolbar__cancel__wrapper",
          "hover-class": "uv-hover-class"
        }, [
          vue.createElementVNode(
            "text",
            {
              class: "uv-toolbar__wrapper__cancel",
              onClick: _cache[0] || (_cache[0] = (...args) => $options.cancel && $options.cancel(...args)),
              style: vue.normalizeStyle({
                color: _ctx.cancelColor
              })
            },
            vue.toDisplayString(_ctx.cancelText),
            5
            /* TEXT, STYLE */
          )
        ]),
        _ctx.title ? (vue.openBlock(), vue.createElementBlock(
          "text",
          {
            key: 0,
            class: "uv-toolbar__title uv-line-1"
          },
          vue.toDisplayString(_ctx.title),
          1
          /* TEXT */
        )) : vue.createCommentVNode("v-if", true),
        vue.createElementVNode("view", {
          class: "uv-toolbar__confirm__wrapper",
          "hover-class": "uv-hover-class"
        }, [
          vue.createElementVNode(
            "text",
            {
              class: "uv-toolbar__wrapper__confirm",
              onClick: _cache[1] || (_cache[1] = (...args) => $options.confirm && $options.confirm(...args)),
              style: vue.normalizeStyle({
                color: _ctx.confirmColor
              })
            },
            vue.toDisplayString(_ctx.confirmText),
            5
            /* TEXT, STYLE */
          )
        ])
      ],
      34
      /* CLASS, NEED_HYDRATION */
    )) : vue.createCommentVNode("v-if", true);
  }
  const __easycom_0$7 = /* @__PURE__ */ _export_sfc(_sfc_main$2N, [["render", _sfc_render$2M], ["__scopeId", "data-v-298cf9e4"], ["__file", "C:/Users/Administrator/Desktop/Project Folder/ZXHand/ZXHandwritting_APP_uniapp/uni_modules/uv-toolbar/components/uv-toolbar/uv-toolbar.vue"]]);
  function colorGradient(startColor = "rgb(0, 0, 0)", endColor = "rgb(255, 255, 255)", step = 10) {
    const startRGB = hexToRgb(startColor, false);
    const startR = startRGB[0];
    const startG = startRGB[1];
    const startB = startRGB[2];
    const endRGB = hexToRgb(endColor, false);
    const endR = endRGB[0];
    const endG = endRGB[1];
    const endB = endRGB[2];
    const sR = (endR - startR) / step;
    const sG = (endG - startG) / step;
    const sB = (endB - startB) / step;
    const colorArr = [];
    for (let i2 = 0; i2 < step; i2++) {
      let hex = rgbToHex(`rgb(${Math.round(sR * i2 + startR)},${Math.round(sG * i2 + startG)},${Math.round(sB * i2 + startB)})`);
      if (i2 === 0)
        hex = rgbToHex(startColor);
      if (i2 === step - 1)
        hex = rgbToHex(endColor);
      colorArr.push(hex);
    }
    return colorArr;
  }
  function hexToRgb(sColor, str = true) {
    const reg = /^#([0-9a-fA-f]{3}|[0-9a-fA-f]{6})$/;
    sColor = String(sColor).toLowerCase();
    if (sColor && reg.test(sColor)) {
      if (sColor.length === 4) {
        let sColorNew = "#";
        for (let i2 = 1; i2 < 4; i2 += 1) {
          sColorNew += sColor.slice(i2, i2 + 1).concat(sColor.slice(i2, i2 + 1));
        }
        sColor = sColorNew;
      }
      const sColorChange = [];
      for (let i2 = 1; i2 < 7; i2 += 2) {
        sColorChange.push(parseInt(`0x${sColor.slice(i2, i2 + 2)}`));
      }
      if (!str) {
        return sColorChange;
      }
      return `rgb(${sColorChange[0]},${sColorChange[1]},${sColorChange[2]})`;
    }
    if (/^(rgb|RGB)/.test(sColor)) {
      const arr = sColor.replace(/(?:\(|\)|rgb|RGB)*/g, "").split(",");
      return arr.map((val) => Number(val));
    }
    return sColor;
  }
  function rgbToHex(rgb) {
    const _this = rgb;
    const reg = /^#([0-9a-fA-f]{3}|[0-9a-fA-f]{6})$/;
    if (/^(rgb|RGB)/.test(_this)) {
      const aColor = _this.replace(/(?:\(|\)|rgb|RGB)*/g, "").split(",");
      let strHex = "#";
      for (let i2 = 0; i2 < aColor.length; i2++) {
        let hex = Number(aColor[i2]).toString(16);
        hex = String(hex).length == 1 ? `${0}${hex}` : hex;
        if (hex === "0") {
          hex += hex;
        }
        strHex += hex;
      }
      if (strHex.length !== 7) {
        strHex = _this;
      }
      return strHex;
    }
    if (reg.test(_this)) {
      const aNum = _this.replace(/#/, "").split("");
      if (aNum.length === 6) {
        return _this;
      }
      if (aNum.length === 3) {
        let numHex = "#";
        for (let i2 = 0; i2 < aNum.length; i2 += 1) {
          numHex += aNum[i2] + aNum[i2];
        }
        return numHex;
      }
    } else {
      return _this;
    }
  }
  const props$5 = {
    props: {
      // 是否显示组件
      show: {
        type: Boolean,
        default: true
      },
      // 颜色
      color: {
        type: String,
        default: "#909193"
      },
      // 提示文字颜色
      textColor: {
        type: String,
        default: "#909193"
      },
      // 文字和图标是否垂直排列
      vertical: {
        type: Boolean,
        default: false
      },
      // 模式选择，circle-圆形，spinner-花朵形，semicircle-半圆形
      mode: {
        type: String,
        default: "spinner"
      },
      // 图标大小，单位默认px
      size: {
        type: [String, Number],
        default: 24
      },
      // 文字大小
      textSize: {
        type: [String, Number],
        default: 15
      },
      // 文字样式
      textStyle: {
        type: Object,
        default() {
          return {};
        }
      },
      // 文字内容
      text: {
        type: [String, Number],
        default: ""
      },
      // 动画模式 https://www.runoob.com/cssref/css3-pr-animation-timing-function.html
      timingFunction: {
        type: String,
        default: "linear"
      },
      // 动画执行周期时间
      duration: {
        type: [String, Number],
        default: 1200
      },
      // mode=circle时的暗边颜色
      inactiveColor: {
        type: String,
        default: ""
      },
      ...(_h = (_g = uni.$uv) == null ? void 0 : _g.props) == null ? void 0 : _h.loadingIcon
    }
  };
  const _sfc_main$2M = {
    name: "uv-loading-icon",
    mixins: [mpMixin, mixin, props$5],
    data() {
      return {
        // Array.form可以通过一个伪数组对象创建指定长度的数组
        // https://developer.mozilla.org/zh-CN/docs/Web/JavaScript/Reference/Global_Objects/Array/from
        array12: Array.from({
          length: 12
        }),
        // 这里需要设置默认值为360，否则在安卓nvue上，会延迟一个duration周期后才执行
        // 在iOS nvue上，则会一开始默认执行两个周期的动画
        aniAngel: 360,
        // 动画旋转角度
        webviewHide: false,
        // 监听webview的状态，如果隐藏了页面，则停止动画，以免性能消耗
        loading: false
        // 是否运行中，针对nvue使用
      };
    },
    computed: {
      // 当为circle类型时，给其另外三边设置一个更轻一些的颜色
      // 之所以需要这么做的原因是，比如父组件传了color为红色，那么需要另外的三个边为浅红色
      // 而不能是固定的某一个其他颜色(因为这个固定的颜色可能浅蓝，导致效果没有那么细腻良好)
      otherBorderColor() {
        const lightColor = colorGradient(this.color, "#ffffff", 100)[80];
        if (this.mode === "circle") {
          return this.inactiveColor ? this.inactiveColor : lightColor;
        } else {
          return "transparent";
        }
      }
    },
    watch: {
      show(n2) {
      }
    },
    mounted() {
      this.init();
    },
    methods: {
      init() {
        setTimeout(() => {
          this.show && this.addEventListenerToWebview();
        }, 20);
      },
      // 监听webview的显示与隐藏
      addEventListenerToWebview() {
        const pages2 = getCurrentPages();
        const page2 = pages2[pages2.length - 1];
        const currentWebview = page2.$getAppWebview();
        currentWebview.addEventListener("hide", () => {
          this.webviewHide = true;
        });
        currentWebview.addEventListener("show", () => {
          this.webviewHide = false;
        });
      }
    }
  };
  function _sfc_render$2L(_ctx, _cache, $props, $setup, $data, $options) {
    return _ctx.show ? (vue.openBlock(), vue.createElementBlock(
      "view",
      {
        key: 0,
        class: vue.normalizeClass(["uv-loading-icon", [_ctx.vertical && "uv-loading-icon--vertical"]]),
        style: vue.normalizeStyle([_ctx.$uv.addStyle(_ctx.customStyle)])
      },
      [
        !$data.webviewHide ? (vue.openBlock(), vue.createElementBlock(
          "view",
          {
            key: 0,
            class: vue.normalizeClass(["uv-loading-icon__spinner", [`uv-loading-icon__spinner--${_ctx.mode}`]]),
            ref: "ani",
            style: vue.normalizeStyle({
              color: _ctx.color,
              width: _ctx.$uv.addUnit(_ctx.size),
              height: _ctx.$uv.addUnit(_ctx.size),
              borderTopColor: _ctx.color,
              borderBottomColor: $options.otherBorderColor,
              borderLeftColor: $options.otherBorderColor,
              borderRightColor: $options.otherBorderColor,
              "animation-duration": `${_ctx.duration}ms`,
              "animation-timing-function": _ctx.mode === "semicircle" || _ctx.mode === "circle" ? _ctx.timingFunction : ""
            })
          },
          [
            _ctx.mode === "spinner" ? (vue.openBlock(true), vue.createElementBlock(
              vue.Fragment,
              { key: 0 },
              vue.renderList($data.array12, (item, index2) => {
                return vue.openBlock(), vue.createElementBlock("view", {
                  key: index2,
                  class: "uv-loading-icon__dot"
                });
              }),
              128
              /* KEYED_FRAGMENT */
            )) : vue.createCommentVNode("v-if", true)
          ],
          6
          /* CLASS, STYLE */
        )) : vue.createCommentVNode("v-if", true),
        _ctx.text ? (vue.openBlock(), vue.createElementBlock(
          "text",
          {
            key: 1,
            class: "uv-loading-icon__text",
            style: vue.normalizeStyle([{
              fontSize: _ctx.$uv.addUnit(_ctx.textSize),
              color: _ctx.textColor
            }, _ctx.$uv.addStyle(_ctx.textStyle)])
          },
          vue.toDisplayString(_ctx.text),
          5
          /* TEXT, STYLE */
        )) : vue.createCommentVNode("v-if", true)
      ],
      6
      /* CLASS, STYLE */
    )) : vue.createCommentVNode("v-if", true);
  }
  const __easycom_1$1 = /* @__PURE__ */ _export_sfc(_sfc_main$2M, [["render", _sfc_render$2L], ["__scopeId", "data-v-29b619ea"], ["__file", "C:/Users/Administrator/Desktop/Project Folder/ZXHand/ZXHandwritting_APP_uniapp/uni_modules/uv-loading-icon/components/uv-loading-icon/uv-loading-icon.vue"]]);
  class MPAnimation {
    constructor(options, _this) {
      this.options = options;
      this.animation = uni.createAnimation({
        ...options
      });
      this.currentStepAnimates = {};
      this.next = 0;
      this.$ = _this;
    }
    _nvuePushAnimates(type, args) {
      let aniObj = this.currentStepAnimates[this.next];
      let styles = {};
      if (!aniObj) {
        styles = {
          styles: {},
          config: {}
        };
      } else {
        styles = aniObj;
      }
      if (animateTypes1.includes(type)) {
        if (!styles.styles.transform) {
          styles.styles.transform = "";
        }
        let unit = "";
        if (type === "rotate") {
          unit = "deg";
        }
        styles.styles.transform += `${type}(${args + unit}) `;
      } else {
        styles.styles[type] = `${args}`;
      }
      this.currentStepAnimates[this.next] = styles;
    }
    _animateRun(styles = {}, config = {}) {
      let ref = this.$.$refs["ani"].ref;
      if (!ref)
        return;
      return new Promise((resolve, reject) => {
        nvueAnimation.transition(ref, {
          styles,
          ...config
        }, (res) => {
          resolve();
        });
      });
    }
    _nvueNextAnimate(animates, step = 0, fn2) {
      let obj = animates[step];
      if (obj) {
        let {
          styles,
          config
        } = obj;
        this._animateRun(styles, config).then(() => {
          step += 1;
          this._nvueNextAnimate(animates, step, fn2);
        });
      } else {
        this.currentStepAnimates = {};
        typeof fn2 === "function" && fn2();
        this.isEnd = true;
      }
    }
    step(config = {}) {
      this.animation.step(config);
      return this;
    }
    run(fn2) {
      this.$.animationData = this.animation.export();
      this.$.timer = setTimeout(() => {
        typeof fn2 === "function" && fn2();
      }, this.$.durationTime);
    }
  }
  const animateTypes1 = [
    "matrix",
    "matrix3d",
    "rotate",
    "rotate3d",
    "rotateX",
    "rotateY",
    "rotateZ",
    "scale",
    "scale3d",
    "scaleX",
    "scaleY",
    "scaleZ",
    "skew",
    "skewX",
    "skewY",
    "translate",
    "translate3d",
    "translateX",
    "translateY",
    "translateZ"
  ];
  const animateTypes2 = ["opacity", "backgroundColor"];
  const animateTypes3 = ["width", "height", "left", "right", "top", "bottom"];
  animateTypes1.concat(animateTypes2, animateTypes3).forEach((type) => {
    MPAnimation.prototype[type] = function(...args) {
      this.animation[type](...args);
      return this;
    };
  });
  function createAnimation(option, _this) {
    if (!_this)
      return;
    clearTimeout(_this.timer);
    return new MPAnimation(option, _this);
  }
  const _sfc_main$2L = {
    name: "uv-transition",
    mixins: [mpMixin, mixin],
    emits: ["click", "change"],
    props: {
      // 是否展示组件
      show: {
        type: Boolean,
        default: false
      },
      // 使用的动画模式
      mode: {
        type: [Array, String, null],
        default() {
          return "fade";
        }
      },
      // 动画的执行时间，单位ms
      duration: {
        type: [String, Number],
        default: 300
      },
      // 使用的动画过渡函数
      timingFunction: {
        type: String,
        default: "ease-out"
      },
      customClass: {
        type: String,
        default: ""
      },
      // nvue模式下 是否直接显示，在uv-list等cell下面使用就需要设置
      cellChild: {
        type: Boolean,
        default: false
      }
    },
    data() {
      return {
        isShow: false,
        transform: "",
        opacity: 1,
        animationData: {},
        durationTime: 300,
        config: {}
      };
    },
    watch: {
      show: {
        handler(newVal) {
          if (newVal) {
            this.open();
          } else {
            if (this.isShow) {
              this.close();
            }
          }
        },
        immediate: true
      }
    },
    computed: {
      // 初始化动画条件
      transformStyles() {
        const style = {
          transform: this.transform,
          opacity: this.opacity,
          ...this.$uv.addStyle(this.customStyle),
          "transition-duration": `${this.duration / 1e3}s`
        };
        return this.$uv.addStyle(style, "string");
      }
    },
    created() {
      this.config = {
        duration: this.duration,
        timingFunction: this.timingFunction,
        transformOrigin: "50% 50%",
        delay: 0
      };
      this.durationTime = this.duration;
    },
    methods: {
      /**
       *  ref 触发 初始化动画
       */
      init(obj = {}) {
        if (obj.duration) {
          this.durationTime = obj.duration;
        }
        this.animation = createAnimation(Object.assign(this.config, obj), this);
      },
      /**
       * 点击组件触发回调
       */
      onClick() {
        this.$emit("click", {
          detail: this.isShow
        });
      },
      /**
       * ref 触发 动画分组
       * @param {Object} obj
       */
      step(obj, config = {}) {
        if (!this.animation)
          return;
        for (let i2 in obj) {
          try {
            if (typeof obj[i2] === "object") {
              this.animation[i2](...obj[i2]);
            } else {
              this.animation[i2](obj[i2]);
            }
          } catch (e2) {
            formatAppLog("error", "at uni_modules/uv-transition/components/uv-transition/uv-transition.vue:166", `方法 ${i2} 不存在`);
          }
        }
        this.animation.step(config);
        return this;
      },
      /**
       *  ref 触发 执行动画
       */
      run(fn2) {
        if (!this.animation)
          return;
        this.animation.run(fn2);
      },
      // 开始过度动画
      open() {
        clearTimeout(this.timer);
        this.transform = "";
        this.isShow = true;
        let { opacity, transform } = this.styleInit(false);
        if (typeof opacity !== "undefined") {
          this.opacity = opacity;
        }
        this.transform = transform;
        this.$nextTick(() => {
          this.timer = setTimeout(() => {
            this.animation = createAnimation(this.config, this);
            this.tranfromInit(false).step();
            this.animation.run();
            this.$emit("change", {
              detail: this.isShow
            });
          }, 20);
        });
      },
      // 关闭过渡动画
      close(type) {
        if (!this.animation)
          return;
        this.tranfromInit(true).step().run(() => {
          this.isShow = false;
          this.animationData = null;
          this.animation = null;
          let { opacity, transform } = this.styleInit(false);
          this.opacity = opacity || 1;
          this.transform = transform;
          this.$emit("change", {
            detail: this.isShow
          });
        });
      },
      // 处理动画开始前的默认样式
      styleInit(type) {
        let styles = {
          transform: ""
        };
        let buildStyle = (type2, mode) => {
          if (mode === "fade") {
            styles.opacity = this.animationType(type2)[mode];
          } else {
            styles.transform += this.animationType(type2)[mode] + " ";
          }
        };
        if (typeof this.mode === "string") {
          buildStyle(type, this.mode);
        } else {
          this.mode.forEach((mode) => {
            buildStyle(type, mode);
          });
        }
        return styles;
      },
      // 处理内置组合动画
      tranfromInit(type) {
        let buildTranfrom = (type2, mode) => {
          let aniNum = null;
          if (mode === "fade") {
            aniNum = type2 ? 0 : 1;
          } else {
            aniNum = type2 ? "-100%" : "0";
            if (mode === "zoom-in") {
              aniNum = type2 ? 0.8 : 1;
            }
            if (mode === "zoom-out") {
              aniNum = type2 ? 1.2 : 1;
            }
            if (mode === "slide-right") {
              aniNum = type2 ? "100%" : "0";
            }
            if (mode === "slide-bottom") {
              aniNum = type2 ? "100%" : "0";
            }
          }
          this.animation[this.animationMode()[mode]](aniNum);
        };
        if (typeof this.mode === "string") {
          buildTranfrom(type, this.mode);
        } else {
          this.mode.forEach((mode) => {
            buildTranfrom(type, mode);
          });
        }
        return this.animation;
      },
      animationType(type) {
        return {
          fade: type ? 1 : 0,
          "slide-top": `translateY(${type ? "0" : "-100%"})`,
          "slide-right": `translateX(${type ? "0" : "100%"})`,
          "slide-bottom": `translateY(${type ? "0" : "100%"})`,
          "slide-left": `translateX(${type ? "0" : "-100%"})`,
          "zoom-in": `scaleX(${type ? 1 : 0.8}) scaleY(${type ? 1 : 0.8})`,
          "zoom-out": `scaleX(${type ? 1 : 1.2}) scaleY(${type ? 1 : 1.2})`
        };
      },
      // 内置动画类型与实际动画对应字典
      animationMode() {
        return {
          fade: "opacity",
          "slide-top": "translateY",
          "slide-right": "translateX",
          "slide-bottom": "translateY",
          "slide-left": "translateX",
          "zoom-in": "scale",
          "zoom-out": "scale"
        };
      },
      // 驼峰转中横线
      toLine(name) {
        return name.replace(/([A-Z])/g, "-$1").toLowerCase();
      }
    }
  };
  function _sfc_render$2K(_ctx, _cache, $props, $setup, $data, $options) {
    return $data.isShow ? (vue.openBlock(), vue.createElementBlock("view", {
      key: 0,
      ref: "ani",
      animation: $data.animationData,
      class: vue.normalizeClass($props.customClass),
      style: vue.normalizeStyle($options.transformStyles),
      onClick: _cache[0] || (_cache[0] = (...args) => $options.onClick && $options.onClick(...args))
    }, [
      vue.renderSlot(_ctx.$slots, "default")
    ], 14, ["animation"])) : vue.createCommentVNode("v-if", true);
  }
  const __easycom_4 = /* @__PURE__ */ _export_sfc(_sfc_main$2L, [["render", _sfc_render$2K], ["__file", "C:/Users/Administrator/Desktop/Project Folder/ZXHand/ZXHandwritting_APP_uniapp/uni_modules/uv-transition/components/uv-transition/uv-transition.vue"]]);
  const props$4 = {
    props: {
      // 是否显示遮罩
      show: {
        type: Boolean,
        default: false
      },
      // 层级z-index
      zIndex: {
        type: [String, Number],
        default: 10070
      },
      // 遮罩的过渡时间，单位为ms
      duration: {
        type: [String, Number],
        default: 300
      },
      // 不透明度值，当做rgba的第四个参数
      opacity: {
        type: [String, Number],
        default: 0.5
      },
      ...(_j = (_i2 = uni.$uv) == null ? void 0 : _i2.props) == null ? void 0 : _j.overlay
    }
  };
  const _sfc_main$2K = {
    name: "uv-overlay",
    emits: ["click"],
    mixins: [mpMixin, mixin, props$4],
    watch: {
      show(newVal) {
      }
    },
    computed: {
      overlayStyle() {
        const style = {
          position: "fixed",
          top: 0,
          left: 0,
          right: 0,
          zIndex: this.zIndex,
          bottom: 0,
          "background-color": `rgba(0, 0, 0, ${this.opacity})`
        };
        return this.$uv.deepMerge(style, this.$uv.addStyle(this.customStyle));
      }
    },
    methods: {
      clickHandler() {
        this.$emit("click");
      },
      clear() {
      }
    }
  };
  function _sfc_render$2J(_ctx, _cache, $props, $setup, $data, $options) {
    const _component_uv_transition = resolveEasycom(vue.resolveDynamicComponent("uv-transition"), __easycom_4);
    return vue.openBlock(), vue.createBlock(_component_uv_transition, {
      show: _ctx.show,
      mode: "fade",
      "custom-class": "uv-overlay",
      duration: _ctx.duration,
      "custom-style": $options.overlayStyle,
      onClick: $options.clickHandler,
      onTouchmove: vue.withModifiers($options.clear, ["stop", "prevent"])
    }, {
      default: vue.withCtx(() => [
        vue.renderSlot(_ctx.$slots, "default", {}, void 0, true)
      ]),
      _: 3
      /* FORWARDED */
    }, 8, ["show", "duration", "custom-style", "onClick", "onTouchmove"]);
  }
  const __easycom_0$6 = /* @__PURE__ */ _export_sfc(_sfc_main$2K, [["render", _sfc_render$2J], ["__scopeId", "data-v-7303e1aa"], ["__file", "C:/Users/Administrator/Desktop/Project Folder/ZXHand/ZXHandwritting_APP_uniapp/uni_modules/uv-overlay/components/uv-overlay/uv-overlay.vue"]]);
  const props$3 = {
    props: {
      bgColor: {
        type: String,
        default: "transparent"
      }
    }
  };
  const _sfc_main$2J = {
    name: "uv-status-bar",
    mixins: [mpMixin, mixin, props$3],
    data() {
      return {};
    },
    computed: {
      style() {
        const style = {};
        style.height = this.$uv.addUnit(this.$uv.sys().statusBarHeight, "px");
        if (this.bgColor) {
          if (this.bgColor.indexOf("gradient") > -1) {
            style.backgroundImage = this.bgColor;
          } else {
            style.background = this.bgColor;
          }
        }
        return this.$uv.deepMerge(style, this.$uv.addStyle(this.customStyle));
      }
    }
  };
  function _sfc_render$2I(_ctx, _cache, $props, $setup, $data, $options) {
    return vue.openBlock(), vue.createElementBlock(
      "view",
      {
        style: vue.normalizeStyle([$options.style]),
        class: "uv-status-bar"
      },
      [
        vue.renderSlot(_ctx.$slots, "default", {}, void 0, true)
      ],
      4
      /* STYLE */
    );
  }
  const __easycom_1 = /* @__PURE__ */ _export_sfc(_sfc_main$2J, [["render", _sfc_render$2I], ["__scopeId", "data-v-f5bd6f5a"], ["__file", "C:/Users/Administrator/Desktop/Project Folder/ZXHand/ZXHandwritting_APP_uniapp/uni_modules/uv-status-bar/components/uv-status-bar/uv-status-bar.vue"]]);
  const _sfc_main$2I = {
    name: "uv-safe-bottom",
    mixins: [mpMixin, mixin],
    data() {
      return {
        safeAreaBottomHeight: 0,
        isNvue: false
      };
    },
    computed: {
      style() {
        const style = {};
        return this.$uv.deepMerge(style, this.$uv.addStyle(this.customStyle));
      }
    },
    mounted() {
    }
  };
  function _sfc_render$2H(_ctx, _cache, $props, $setup, $data, $options) {
    return vue.openBlock(), vue.createElementBlock(
      "view",
      {
        class: vue.normalizeClass(["uv-safe-bottom", [!$data.isNvue && "uv-safe-area-inset-bottom"]]),
        style: vue.normalizeStyle([$options.style])
      },
      null,
      6
      /* CLASS, STYLE */
    );
  }
  const __easycom_2$1 = /* @__PURE__ */ _export_sfc(_sfc_main$2I, [["render", _sfc_render$2H], ["__scopeId", "data-v-560f16b2"], ["__file", "C:/Users/Administrator/Desktop/Project Folder/ZXHand/ZXHandwritting_APP_uniapp/uni_modules/uv-safe-bottom/components/uv-safe-bottom/uv-safe-bottom.vue"]]);
  const icons = {
    "uvicon-level": "e68f",
    "uvicon-checkbox-mark": "e659",
    "uvicon-folder": "e694",
    "uvicon-movie": "e67c",
    "uvicon-star-fill": "e61e",
    "uvicon-star": "e618",
    "uvicon-phone-fill": "e6ac",
    "uvicon-phone": "e6ba",
    "uvicon-apple-fill": "e635",
    "uvicon-backspace": "e64d",
    "uvicon-attach": "e640",
    "uvicon-empty-data": "e671",
    "uvicon-empty-address": "e68a",
    "uvicon-empty-favor": "e662",
    "uvicon-empty-car": "e657",
    "uvicon-empty-order": "e66b",
    "uvicon-empty-list": "e672",
    "uvicon-empty-search": "e677",
    "uvicon-empty-permission": "e67d",
    "uvicon-empty-news": "e67e",
    "uvicon-empty-history": "e685",
    "uvicon-empty-coupon": "e69b",
    "uvicon-empty-page": "e60e",
    "uvicon-empty-wifi-off": "e6cc",
    "uvicon-reload": "e627",
    "uvicon-order": "e695",
    "uvicon-server-man": "e601",
    "uvicon-search": "e632",
    "uvicon-more-dot-fill": "e66f",
    "uvicon-scan": "e631",
    "uvicon-map": "e665",
    "uvicon-map-fill": "e6a8",
    "uvicon-tags": "e621",
    "uvicon-tags-fill": "e613",
    "uvicon-eye": "e664",
    "uvicon-eye-fill": "e697",
    "uvicon-eye-off": "e69c",
    "uvicon-eye-off-outline": "e688",
    "uvicon-mic": "e66d",
    "uvicon-mic-off": "e691",
    "uvicon-calendar": "e65c",
    "uvicon-trash": "e623",
    "uvicon-trash-fill": "e6ce",
    "uvicon-play-left": "e6bf",
    "uvicon-play-right": "e6b3",
    "uvicon-minus": "e614",
    "uvicon-plus": "e625",
    "uvicon-info-circle": "e69f",
    "uvicon-info-circle-fill": "e6a7",
    "uvicon-question-circle": "e622",
    "uvicon-question-circle-fill": "e6bc",
    "uvicon-close": "e65a",
    "uvicon-checkmark": "e64a",
    "uvicon-checkmark-circle": "e643",
    "uvicon-checkmark-circle-fill": "e668",
    "uvicon-setting": "e602",
    "uvicon-setting-fill": "e6d0",
    "uvicon-heart": "e6a2",
    "uvicon-heart-fill": "e68b",
    "uvicon-camera": "e642",
    "uvicon-camera-fill": "e650",
    "uvicon-more-circle": "e69e",
    "uvicon-more-circle-fill": "e684",
    "uvicon-chat": "e656",
    "uvicon-chat-fill": "e63f",
    "uvicon-bag": "e647",
    "uvicon-error-circle": "e66e",
    "uvicon-error-circle-fill": "e655",
    "uvicon-close-circle": "e64e",
    "uvicon-close-circle-fill": "e666",
    "uvicon-share": "e629",
    "uvicon-share-fill": "e6bb",
    "uvicon-share-square": "e6c4",
    "uvicon-shopping-cart": "e6cb",
    "uvicon-shopping-cart-fill": "e630",
    "uvicon-bell": "e651",
    "uvicon-bell-fill": "e604",
    "uvicon-list": "e690",
    "uvicon-list-dot": "e6a9",
    "uvicon-zhifubao-circle-fill": "e617",
    "uvicon-weixin-circle-fill": "e6cd",
    "uvicon-weixin-fill": "e620",
    "uvicon-qq-fill": "e608",
    "uvicon-qq-circle-fill": "e6b9",
    "uvicon-moments-circel-fill": "e6c2",
    "uvicon-moments": "e6a0",
    "uvicon-car": "e64f",
    "uvicon-car-fill": "e648",
    "uvicon-warning-fill": "e6c7",
    "uvicon-warning": "e6c1",
    "uvicon-clock-fill": "e64b",
    "uvicon-clock": "e66c",
    "uvicon-edit-pen": "e65d",
    "uvicon-edit-pen-fill": "e679",
    "uvicon-email": "e673",
    "uvicon-email-fill": "e683",
    "uvicon-minus-circle": "e6a5",
    "uvicon-plus-circle": "e603",
    "uvicon-plus-circle-fill": "e611",
    "uvicon-file-text": "e687",
    "uvicon-file-text-fill": "e67f",
    "uvicon-pushpin": "e6d1",
    "uvicon-pushpin-fill": "e6b6",
    "uvicon-grid": "e68c",
    "uvicon-grid-fill": "e698",
    "uvicon-play-circle": "e6af",
    "uvicon-play-circle-fill": "e62a",
    "uvicon-pause-circle-fill": "e60c",
    "uvicon-pause": "e61c",
    "uvicon-pause-circle": "e696",
    "uvicon-gift-fill": "e6b0",
    "uvicon-gift": "e680",
    "uvicon-kefu-ermai": "e660",
    "uvicon-server-fill": "e610",
    "uvicon-coupon-fill": "e64c",
    "uvicon-coupon": "e65f",
    "uvicon-integral": "e693",
    "uvicon-integral-fill": "e6b1",
    "uvicon-home-fill": "e68e",
    "uvicon-home": "e67b",
    "uvicon-account": "e63a",
    "uvicon-account-fill": "e653",
    "uvicon-thumb-down-fill": "e628",
    "uvicon-thumb-down": "e60a",
    "uvicon-thumb-up": "e612",
    "uvicon-thumb-up-fill": "e62c",
    "uvicon-lock-fill": "e6a6",
    "uvicon-lock-open": "e68d",
    "uvicon-lock-opened-fill": "e6a1",
    "uvicon-lock": "e69d",
    "uvicon-red-packet": "e6c3",
    "uvicon-photo-fill": "e6b4",
    "uvicon-photo": "e60d",
    "uvicon-volume-off-fill": "e6c8",
    "uvicon-volume-off": "e6bd",
    "uvicon-volume-fill": "e624",
    "uvicon-volume": "e605",
    "uvicon-download": "e670",
    "uvicon-arrow-up-fill": "e636",
    "uvicon-arrow-down-fill": "e638",
    "uvicon-play-left-fill": "e6ae",
    "uvicon-play-right-fill": "e6ad",
    "uvicon-arrow-downward": "e634",
    "uvicon-arrow-leftward": "e63b",
    "uvicon-arrow-rightward": "e644",
    "uvicon-arrow-upward": "e641",
    "uvicon-arrow-down": "e63e",
    "uvicon-arrow-right": "e63c",
    "uvicon-arrow-left": "e646",
    "uvicon-arrow-up": "e633",
    "uvicon-skip-back-left": "e6c5",
    "uvicon-skip-forward-right": "e61f",
    "uvicon-arrow-left-double": "e637",
    "uvicon-man": "e675",
    "uvicon-woman": "e626",
    "uvicon-en": "e6b8",
    "uvicon-twitte": "e607",
    "uvicon-twitter-circle-fill": "e6cf"
  };
  const props$2 = {
    props: {
      // 图标类名
      name: {
        type: String,
        default: ""
      },
      // 图标颜色，可接受主题色
      color: {
        type: String,
        default: "#606266"
      },
      // 字体大小，单位px
      size: {
        type: [String, Number],
        default: "16px"
      },
      // 是否显示粗体
      bold: {
        type: Boolean,
        default: false
      },
      // 点击图标的时候传递事件出去的index（用于区分点击了哪一个）
      index: {
        type: [String, Number],
        default: null
      },
      // 触摸图标时的类名
      hoverClass: {
        type: String,
        default: ""
      },
      // 自定义扩展前缀，方便用户扩展自己的图标库
      customPrefix: {
        type: String,
        default: "uvicon"
      },
      // 图标右边或者下面的文字
      label: {
        type: [String, Number],
        default: ""
      },
      // label的位置，只能右边或者下边
      labelPos: {
        type: String,
        default: "right"
      },
      // label的大小
      labelSize: {
        type: [String, Number],
        default: "15px"
      },
      // label的颜色
      labelColor: {
        type: String,
        default: "#606266"
      },
      // label与图标的距离
      space: {
        type: [String, Number],
        default: "3px"
      },
      // 图片的mode
      imgMode: {
        type: String,
        default: "aspectFit"
      },
      // 用于显示图片小图标时，图片的宽度
      width: {
        type: [String, Number],
        default: ""
      },
      // 用于显示图片小图标时，图片的高度
      height: {
        type: [String, Number],
        default: ""
      },
      // 用于解决某些情况下，让图标垂直居中的用途
      top: {
        type: [String, Number],
        default: 0
      },
      // 是否阻止事件传播
      stop: {
        type: Boolean,
        default: false
      },
      ...(_l = (_k = uni.$uv) == null ? void 0 : _k.props) == null ? void 0 : _l.icon
    }
  };
  const _sfc_main$2H = {
    name: "uv-icon",
    emits: ["click"],
    mixins: [mpMixin, mixin, props$2],
    data() {
      return {
        colorType: [
          "primary",
          "success",
          "info",
          "error",
          "warning"
        ]
      };
    },
    computed: {
      uClasses() {
        let classes = [];
        classes.push(this.customPrefix);
        classes.push(this.customPrefix + "-" + this.name);
        if (this.color && this.colorType.includes(this.color))
          classes.push("uv-icon__icon--" + this.color);
        return classes;
      },
      iconStyle() {
        let style = {};
        style = {
          fontSize: this.$uv.addUnit(this.size),
          lineHeight: this.$uv.addUnit(this.size),
          fontWeight: this.bold ? "bold" : "normal",
          // 某些特殊情况需要设置一个到顶部的距离，才能更好的垂直居中
          top: this.$uv.addUnit(this.top)
        };
        if (this.color && !this.colorType.includes(this.color))
          style.color = this.color;
        return style;
      },
      // 判断传入的name属性，是否图片路径，只要带有"/"均认为是图片形式
      isImg() {
        const isBase64 = this.name.indexOf("data:") > -1 && this.name.indexOf("base64") > -1;
        return this.name.indexOf("/") !== -1 || isBase64;
      },
      imgStyle() {
        let style = {};
        style.width = this.width ? this.$uv.addUnit(this.width) : this.$uv.addUnit(this.size);
        style.height = this.height ? this.$uv.addUnit(this.height) : this.$uv.addUnit(this.size);
        return style;
      },
      // 通过图标名，查找对应的图标
      icon() {
        const code2 = icons["uvicon-" + this.name];
        return code2 ? unescape(`%u${code2}`) : ["uvicon"].indexOf(this.customPrefix) > -1 ? this.name : "";
      }
    },
    methods: {
      clickHandler(e2) {
        this.$emit("click", this.index);
        this.stop && this.preventEvent(e2);
      }
    }
  };
  function _sfc_render$2G(_ctx, _cache, $props, $setup, $data, $options) {
    return vue.openBlock(), vue.createElementBlock(
      "view",
      {
        class: vue.normalizeClass(["uv-icon", ["uv-icon--" + _ctx.labelPos]]),
        onClick: _cache[0] || (_cache[0] = (...args) => $options.clickHandler && $options.clickHandler(...args))
      },
      [
        $options.isImg ? (vue.openBlock(), vue.createElementBlock("image", {
          key: 0,
          class: "uv-icon__img",
          src: _ctx.name,
          mode: _ctx.imgMode,
          style: vue.normalizeStyle([$options.imgStyle, _ctx.$uv.addStyle(_ctx.customStyle)])
        }, null, 12, ["src", "mode"])) : (vue.openBlock(), vue.createElementBlock("text", {
          key: 1,
          class: vue.normalizeClass(["uv-icon__icon", $options.uClasses]),
          style: vue.normalizeStyle([$options.iconStyle, _ctx.$uv.addStyle(_ctx.customStyle)]),
          "hover-class": _ctx.hoverClass
        }, vue.toDisplayString($options.icon), 15, ["hover-class"])),
        vue.createCommentVNode(' 这里进行空字符串判断，如果仅仅是v-if="label"，可能会出现传递0的时候，结果也无法显示 '),
        _ctx.label !== "" ? (vue.openBlock(), vue.createElementBlock(
          "text",
          {
            key: 2,
            class: "uv-icon__label",
            style: vue.normalizeStyle({
              color: _ctx.labelColor,
              fontSize: _ctx.$uv.addUnit(_ctx.labelSize),
              marginLeft: _ctx.labelPos == "right" ? _ctx.$uv.addUnit(_ctx.space) : 0,
              marginTop: _ctx.labelPos == "bottom" ? _ctx.$uv.addUnit(_ctx.space) : 0,
              marginRight: _ctx.labelPos == "left" ? _ctx.$uv.addUnit(_ctx.space) : 0,
              marginBottom: _ctx.labelPos == "top" ? _ctx.$uv.addUnit(_ctx.space) : 0
            })
          },
          vue.toDisplayString(_ctx.label),
          5
          /* TEXT, STYLE */
        )) : vue.createCommentVNode("v-if", true)
      ],
      2
      /* CLASS */
    );
  }
  const __easycom_3 = /* @__PURE__ */ _export_sfc(_sfc_main$2H, [["render", _sfc_render$2G], ["__scopeId", "data-v-b7a6dd5d"], ["__file", "C:/Users/Administrator/Desktop/Project Folder/ZXHand/ZXHandwritting_APP_uniapp/uni_modules/uv-icon/components/uv-icon/uv-icon.vue"]]);
  const _sfc_main$2G = {
    name: "uv-popup",
    components: {},
    mixins: [mpMixin, mixin],
    emits: ["change", "maskClick"],
    props: {
      // 弹出层类型，可选值，top: 顶部弹出层；bottom：底部弹出层；center：全屏弹出层
      // message: 消息提示 ; dialog : 对话框
      mode: {
        type: String,
        default: "center"
      },
      // 动画时长，单位ms
      duration: {
        type: [String, Number],
        default: 300
      },
      // 层级
      zIndex: {
        type: [String, Number],
        default: 10075
      },
      bgColor: {
        type: String,
        default: "#ffffff"
      },
      safeArea: {
        type: Boolean,
        default: true
      },
      // 是否显示遮罩
      overlay: {
        type: Boolean,
        default: true
      },
      // 点击遮罩是否关闭弹窗
      closeOnClickOverlay: {
        type: Boolean,
        default: true
      },
      // 遮罩的透明度，0-1之间
      overlayOpacity: {
        type: [Number, String],
        default: 0.4
      },
      // 自定义遮罩的样式
      overlayStyle: {
        type: [Object, String],
        default: ""
      },
      // 是否为iPhoneX留出底部安全距离
      safeAreaInsetBottom: {
        type: Boolean,
        default: true
      },
      // 是否留出顶部安全距离（状态栏高度）
      safeAreaInsetTop: {
        type: Boolean,
        default: false
      },
      // 是否显示关闭图标
      closeable: {
        type: Boolean,
        default: false
      },
      // 自定义关闭图标位置，top-left为左上角，top-right为右上角，bottom-left为左下角，bottom-right为右下角
      closeIconPos: {
        type: String,
        default: "top-right"
      },
      // mode=center，也即中部弹出时，是否使用缩放模式
      zoom: {
        type: Boolean,
        default: true
      },
      round: {
        type: [Number, String],
        default: 0
      },
      ...(_n2 = (_m = uni.$uv) == null ? void 0 : _m.props) == null ? void 0 : _n2.popup
    },
    watch: {
      /**
       * 监听type类型
       */
      type: {
        handler: function(type) {
          if (!this.config[type])
            return;
          this[this.config[type]](true);
        },
        immediate: true
      },
      isDesktop: {
        handler: function(newVal) {
          if (!this.config[newVal])
            return;
          this[this.config[this.mode]](true);
        },
        immediate: true
      },
      // H5 下禁止底部滚动
      showPopup(show) {
      }
    },
    data() {
      return {
        ani: [],
        showPopup: false,
        showTrans: false,
        popupWidth: 0,
        popupHeight: 0,
        config: {
          top: "top",
          bottom: "bottom",
          center: "center",
          left: "left",
          right: "right",
          message: "top",
          dialog: "center",
          share: "bottom"
        },
        transitionStyle: {
          position: "fixed",
          left: 0,
          right: 0
        },
        maskShow: true,
        mkclick: true,
        popupClass: this.isDesktop ? "fixforpc-top" : "top",
        direction: ""
      };
    },
    computed: {
      isDesktop() {
        return this.popupWidth >= 500 && this.popupHeight >= 500;
      },
      bg() {
        if (this.bgColor === "" || this.bgColor === "none" || this.$uv.getPx(this.round) > 0) {
          return "transparent";
        }
        return this.bgColor;
      },
      contentStyle() {
        const style = {};
        if (this.bgColor) {
          style.backgroundColor = this.bg;
        }
        if (this.round) {
          const value = this.$uv.addUnit(this.round);
          const mode = this.direction ? this.direction : this.mode;
          style.backgroundColor = this.bgColor;
          if (mode === "top") {
            style.borderBottomLeftRadius = value;
            style.borderBottomRightRadius = value;
          } else if (mode === "bottom") {
            style.borderTopLeftRadius = value;
            style.borderTopRightRadius = value;
          } else if (mode === "center") {
            style.borderRadius = value;
          }
        }
        return this.$uv.deepMerge(style, this.$uv.addStyle(this.customStyle));
      }
    },
    // TODO vue3
    unmounted() {
      this.setH5Visible();
    },
    created() {
      this.messageChild = null;
      this.clearPropagation = false;
    },
    methods: {
      setH5Visible() {
      },
      /**
       * 公用方法，不显示遮罩层
       */
      closeMask() {
        this.maskShow = false;
      },
      // TODO nvue 取消冒泡
      clear(e2) {
        e2.stopPropagation();
        this.clearPropagation = true;
      },
      open(direction) {
        if (this.showPopup) {
          return;
        }
        let innerType = ["top", "center", "bottom", "left", "right", "message", "dialog", "share"];
        if (!(direction && innerType.indexOf(direction) !== -1)) {
          direction = this.mode;
        } else {
          this.direction = direction;
        }
        if (!this.config[direction]) {
          return this.$uv.error(`缺少类型：${direction}`);
        }
        this[this.config[direction]]();
        this.$emit("change", {
          show: true,
          type: direction
        });
      },
      close(type) {
        this.showTrans = false;
        this.$emit("change", {
          show: false,
          type: this.mode
        });
        clearTimeout(this.timer);
        this.timer = setTimeout(() => {
          this.showPopup = false;
        }, 300);
      },
      // TODO 处理冒泡事件，头条的冒泡事件有问题 ，先这样兼容
      touchstart() {
        this.clearPropagation = false;
      },
      onTap() {
        if (this.clearPropagation) {
          this.clearPropagation = false;
          return;
        }
        this.$emit("maskClick");
        if (!this.closeOnClickOverlay)
          return;
        this.close();
      },
      /**
       * 顶部弹出样式处理
       */
      top(type) {
        this.popupClass = this.isDesktop ? "fixforpc-top" : "top";
        this.ani = ["slide-top"];
        this.transitionStyle = {
          position: "fixed",
          zIndex: this.zIndex,
          left: 0,
          right: 0,
          backgroundColor: this.bg
        };
        if (type)
          return;
        this.showPopup = true;
        this.showTrans = true;
        this.$nextTick(() => {
          if (this.messageChild && this.mode === "message") {
            this.messageChild.timerClose();
          }
        });
      },
      /**
       * 底部弹出样式处理
       */
      bottom(type) {
        this.popupClass = "bottom";
        this.ani = ["slide-bottom"];
        this.transitionStyle = {
          position: "fixed",
          zIndex: this.zIndex,
          left: 0,
          right: 0,
          bottom: 0,
          backgroundColor: this.bg
        };
        if (type)
          return;
        this.showPopup = true;
        this.showTrans = true;
      },
      /**
       * 中间弹出样式处理
       */
      center(type) {
        this.popupClass = "center";
        this.ani = this.zoom ? ["zoom-in", "fade"] : ["fade"];
        this.transitionStyle = {
          position: "fixed",
          zIndex: this.zIndex,
          display: "flex",
          flexDirection: "column",
          bottom: 0,
          left: 0,
          right: 0,
          top: 0,
          justifyContent: "center",
          alignItems: "center"
        };
        if (type)
          return;
        this.showPopup = true;
        this.showTrans = true;
      },
      left(type) {
        this.popupClass = "left";
        this.ani = ["slide-left"];
        this.transitionStyle = {
          position: "fixed",
          zIndex: this.zIndex,
          left: 0,
          bottom: 0,
          top: 0,
          backgroundColor: this.bg,
          display: "flex",
          flexDirection: "column"
        };
        if (type)
          return;
        this.showPopup = true;
        this.showTrans = true;
      },
      right(type) {
        this.popupClass = "right";
        this.ani = ["slide-right"];
        this.transitionStyle = {
          position: "fixed",
          zIndex: this.zIndex,
          bottom: 0,
          right: 0,
          top: 0,
          backgroundColor: this.bg,
          display: "flex",
          flexDirection: "column"
        };
        if (type)
          return;
        this.showPopup = true;
        this.showTrans = true;
      }
    }
  };
  function _sfc_render$2F(_ctx, _cache, $props, $setup, $data, $options) {
    const _component_uv_overlay = resolveEasycom(vue.resolveDynamicComponent("uv-overlay"), __easycom_0$6);
    const _component_uv_status_bar = resolveEasycom(vue.resolveDynamicComponent("uv-status-bar"), __easycom_1);
    const _component_uv_safe_bottom = resolveEasycom(vue.resolveDynamicComponent("uv-safe-bottom"), __easycom_2$1);
    const _component_uv_icon = resolveEasycom(vue.resolveDynamicComponent("uv-icon"), __easycom_3);
    const _component_uv_transition = resolveEasycom(vue.resolveDynamicComponent("uv-transition"), __easycom_4);
    return $data.showPopup ? (vue.openBlock(), vue.createElementBlock(
      "view",
      {
        key: 0,
        class: vue.normalizeClass(["uv-popup", [$data.popupClass, $options.isDesktop ? "fixforpc-z-index" : ""]]),
        style: vue.normalizeStyle([{ zIndex: $props.zIndex }])
      },
      [
        vue.createElementVNode(
          "view",
          {
            onTouchstart: _cache[2] || (_cache[2] = (...args) => $options.touchstart && $options.touchstart(...args))
          },
          [
            vue.createCommentVNode(" 遮罩层 "),
            $data.maskShow && $props.overlay ? (vue.openBlock(), vue.createBlock(_component_uv_overlay, {
              key: "1",
              show: $data.showTrans,
              duration: $props.duration,
              "custom-style": $props.overlayStyle,
              opacity: $props.overlayOpacity,
              zIndex: $props.zIndex,
              onClick: $options.onTap
            }, null, 8, ["show", "duration", "custom-style", "opacity", "zIndex", "onClick"])) : vue.createCommentVNode("v-if", true),
            vue.createVNode(_component_uv_transition, {
              key: "2",
              mode: $data.ani,
              name: "content",
              "custom-style": $data.transitionStyle,
              duration: $props.duration,
              show: $data.showTrans,
              onClick: $options.onTap
            }, {
              default: vue.withCtx(() => [
                vue.createElementVNode(
                  "view",
                  {
                    class: vue.normalizeClass(["uv-popup__content", [$data.popupClass]]),
                    style: vue.normalizeStyle([$options.contentStyle]),
                    onClick: _cache[1] || (_cache[1] = (...args) => $options.clear && $options.clear(...args))
                  },
                  [
                    $props.safeAreaInsetTop ? (vue.openBlock(), vue.createBlock(_component_uv_status_bar, { key: 0 })) : vue.createCommentVNode("v-if", true),
                    vue.renderSlot(_ctx.$slots, "default", {}, void 0, true),
                    $props.safeAreaInsetBottom ? (vue.openBlock(), vue.createBlock(_component_uv_safe_bottom, { key: 1 })) : vue.createCommentVNode("v-if", true),
                    $props.closeable ? (vue.openBlock(), vue.createElementBlock(
                      "view",
                      {
                        key: 2,
                        onClick: _cache[0] || (_cache[0] = vue.withModifiers((...args) => $options.close && $options.close(...args), ["stop"])),
                        class: vue.normalizeClass(["uv-popup__content__close", ["uv-popup__content__close--" + $props.closeIconPos]]),
                        "hover-class": "uv-popup__content__close--hover",
                        "hover-stay-time": "150"
                      },
                      [
                        vue.createVNode(_component_uv_icon, {
                          name: "close",
                          color: "#909399",
                          size: "18",
                          bold: ""
                        })
                      ],
                      2
                      /* CLASS */
                    )) : vue.createCommentVNode("v-if", true)
                  ],
                  6
                  /* CLASS, STYLE */
                )
              ]),
              _: 3
              /* FORWARDED */
            }, 8, ["mode", "custom-style", "duration", "show", "onClick"])
          ],
          32
          /* NEED_HYDRATION */
        )
      ],
      6
      /* CLASS, STYLE */
    )) : vue.createCommentVNode("v-if", true);
  }
  const __easycom_2 = /* @__PURE__ */ _export_sfc(_sfc_main$2G, [["render", _sfc_render$2F], ["__scopeId", "data-v-01a3ad6e"], ["__file", "C:/Users/Administrator/Desktop/Project Folder/ZXHand/ZXHandwritting_APP_uniapp/uni_modules/uv-popup/components/uv-popup/uv-popup.vue"]]);
  const props$1 = {
    props: {
      // 是否展示顶部的操作栏
      showToolbar: {
        type: Boolean,
        default: true
      },
      // 顶部标题
      title: {
        type: String,
        default: ""
      },
      // 弹窗圆角
      round: {
        type: [String, Number],
        default: 0
      },
      // 对象数组，设置每一列的数据
      columns: {
        type: Array,
        default: () => []
      },
      // 是否显示加载中状态
      loading: {
        type: Boolean,
        default: false
      },
      // 各列中，单个选项的高度
      itemHeight: {
        type: [String, Number],
        default: 44
      },
      // 取消按钮的文字
      cancelText: {
        type: String,
        default: "取消"
      },
      // 确认按钮的文字
      confirmText: {
        type: String,
        default: "确定"
      },
      // 取消按钮的颜色
      cancelColor: {
        type: String,
        default: "#909193"
      },
      // 确认按钮的颜色
      confirmColor: {
        type: String,
        default: "#3c9cff"
      },
      // 文字颜色
      color: {
        type: String,
        default: ""
      },
      // 选中文字的颜色
      activeColor: {
        type: String,
        default: ""
      },
      // 每列中可见选项的数量
      visibleItemCount: {
        type: [String, Number],
        default: 5
      },
      // 选项对象中，需要展示的属性键名
      keyName: {
        type: String,
        default: "text"
      },
      // 是否允许点击遮罩关闭选择器
      closeOnClickOverlay: {
        type: Boolean,
        default: true
      },
      // 是否允许点击确认关闭选择器
      closeOnClickConfirm: {
        type: Boolean,
        default: true
      },
      // 各列的默认索引
      defaultIndex: {
        type: Array,
        default: () => []
      },
      // 是否在手指松开时立即触发 change 事件。若不开启则会在滚动动画结束后触发 change 事件，只在微信2.21.1及以上有效
      immediateChange: {
        type: Boolean,
        default: true
      },
      ...(_p = (_o2 = uni.$uv) == null ? void 0 : _o2.props) == null ? void 0 : _p.picker
    }
  };
  const _sfc_main$2F = {
    name: "uv-picker",
    emits: ["confirm", "cancel", "close", "change"],
    mixins: [mpMixin, mixin, props$1],
    computed: {
      // 为了解决支付宝不生效
      textStyle() {
        return (index2, index1) => {
          const style = {};
          style.display = "block";
          if (this.color) {
            style.color = this.color;
          }
          if (this.activeColor && index1 === this.innerIndex[index2]) {
            style.color = this.activeColor;
          }
          return style;
        };
      }
    },
    data() {
      return {
        // 上一次选择的列索引
        lastIndex: [],
        // 索引值 ，对应picker-view的value
        innerIndex: [],
        // 各列的值
        innerColumns: [],
        // 上一次的变化列索引
        columnIndex: 0
      };
    },
    watch: {
      // 监听默认索引的变化，重新设置对应的值
      defaultIndex: {
        immediate: true,
        handler(n2) {
          this.setIndexs(n2, true);
        }
      },
      // 监听columns参数的变化
      columns: {
        deep: true,
        immediate: true,
        handler(n2) {
          this.setColumns(n2);
        }
      }
    },
    methods: {
      open() {
        this.$refs.pickerPopup.open();
      },
      close() {
        this.$refs.pickerPopup.close();
      },
      popupChange(e2) {
        if (!e2.show)
          this.$emit("close");
      },
      // 获取item需要显示的文字，判别为对象还是文本
      getItemText(item) {
        if (this.$uv.test.object(item)) {
          return item[this.keyName];
        } else {
          return item;
        }
      },
      // 点击工具栏的取消按钮
      cancel() {
        this.$emit("cancel");
        this.close();
      },
      // 点击工具栏的确定按钮
      confirm() {
        this.$emit("confirm", this.$uv.deepClone({
          indexs: this.innerIndex,
          value: this.innerColumns.map((item, index2) => item[this.innerIndex[index2]]),
          values: this.innerColumns
        }));
        if (this.closeOnClickConfirm) {
          this.close();
        }
      },
      // 选择器某一列的数据发生变化时触发
      changeHandler(e2) {
        const {
          value
        } = e2.detail;
        let index2 = 0, columnIndex = 0;
        for (let i2 = 0; i2 < value.length; i2++) {
          let item = value[i2];
          if (item !== (this.lastIndex[i2] || 0)) {
            columnIndex = i2;
            index2 = item;
            break;
          }
        }
        this.columnIndex = columnIndex;
        const values = this.innerColumns;
        this.setLastIndex(value);
        this.setIndexs(value);
        this.$emit("change", {
          value: this.innerColumns.map((item, index3) => item[value[index3]]),
          index: index2,
          indexs: value,
          // values为当前变化列的数组内容
          values,
          columnIndex
        });
      },
      // 设置index索引，此方法可被外部调用设置
      setIndexs(index2, setLastIndex) {
        this.innerIndex = this.$uv.deepClone(index2);
        if (setLastIndex) {
          this.setLastIndex(index2);
        }
      },
      // 记录上一次的各列索引位置
      setLastIndex(index2) {
        this.lastIndex = this.$uv.deepClone(index2);
      },
      // 设置对应列选项的所有值
      setColumnValues(columnIndex, values) {
        this.innerColumns.splice(columnIndex, 1, values);
        let tmpIndex = this.$uv.deepClone(this.innerIndex);
        for (let i2 = 0; i2 < this.innerColumns.length; i2++) {
          if (i2 > this.columnIndex) {
            tmpIndex[i2] = 0;
          }
        }
        this.setIndexs(tmpIndex);
      },
      // 获取对应列的所有选项
      getColumnValues(columnIndex) {
        (async () => {
          await this.$uv.sleep();
        })();
        return this.innerColumns[columnIndex];
      },
      // 设置整体各列的columns的值
      setColumns(columns) {
        this.innerColumns = this.$uv.deepClone(columns);
        if (this.innerIndex.length === 0) {
          this.innerIndex = new Array(columns.length).fill(0);
        }
      },
      // 获取各列选中值对应的索引
      getIndexs() {
        return this.innerIndex;
      },
      // 获取各列选中的值
      getValues() {
        (async () => {
          await this.$uv.sleep();
        })();
        return this.innerColumns.map((item, index2) => item[this.innerIndex[index2]]);
      }
    }
  };
  function _sfc_render$2E(_ctx, _cache, $props, $setup, $data, $options) {
    const _component_uv_toolbar = resolveEasycom(vue.resolveDynamicComponent("uv-toolbar"), __easycom_0$7);
    const _component_uv_loading_icon = resolveEasycom(vue.resolveDynamicComponent("uv-loading-icon"), __easycom_1$1);
    const _component_uv_popup = resolveEasycom(vue.resolveDynamicComponent("uv-popup"), __easycom_2);
    return vue.openBlock(), vue.createBlock(_component_uv_popup, {
      ref: "pickerPopup",
      mode: "bottom",
      round: _ctx.round,
      "close-on-click-overlay": _ctx.closeOnClickOverlay,
      onChange: $options.popupChange
    }, {
      default: vue.withCtx(() => [
        vue.createElementVNode("view", { class: "uv-picker" }, [
          _ctx.showToolbar ? (vue.openBlock(), vue.createBlock(_component_uv_toolbar, {
            key: 0,
            cancelColor: _ctx.cancelColor,
            confirmColor: _ctx.confirmColor,
            cancelText: _ctx.cancelText,
            confirmText: _ctx.confirmText,
            title: _ctx.title,
            onCancel: $options.cancel,
            onConfirm: $options.confirm
          }, null, 8, ["cancelColor", "confirmColor", "cancelText", "confirmText", "title", "onCancel", "onConfirm"])) : vue.createCommentVNode("v-if", true),
          vue.createElementVNode("picker-view", {
            class: "uv-picker__view",
            indicatorStyle: `height: ${_ctx.$uv.addUnit(_ctx.itemHeight)}`,
            value: $data.innerIndex,
            immediateChange: _ctx.immediateChange,
            style: vue.normalizeStyle({
              height: `${_ctx.$uv.addUnit(_ctx.visibleItemCount * _ctx.itemHeight)}`
            }),
            onChange: _cache[0] || (_cache[0] = (...args) => $options.changeHandler && $options.changeHandler(...args))
          }, [
            vue.createCommentVNode(" @pickend在这里为了解决抖音等滚到底不触发change兼容性问题 "),
            (vue.openBlock(true), vue.createElementBlock(
              vue.Fragment,
              null,
              vue.renderList($data.innerColumns, (item, index2) => {
                return vue.openBlock(), vue.createElementBlock("picker-view-column", {
                  key: index2,
                  class: "uv-picker__view__column"
                }, [
                  _ctx.$uv.test.array(item) ? (vue.openBlock(true), vue.createElementBlock(
                    vue.Fragment,
                    { key: 0 },
                    vue.renderList(item, (item1, index1) => {
                      return vue.openBlock(), vue.createElementBlock(
                        "text",
                        {
                          class: "uv-picker__view__column__item uv-line-1",
                          key: index1,
                          style: vue.normalizeStyle([{
                            height: _ctx.$uv.addUnit(_ctx.itemHeight),
                            lineHeight: _ctx.$uv.addUnit(_ctx.itemHeight),
                            fontWeight: index1 === $data.innerIndex[index2] ? "bold" : "normal"
                          }, $options.textStyle(index2, index1)])
                        },
                        vue.toDisplayString($options.getItemText(item1)),
                        5
                        /* TEXT, STYLE */
                      );
                    }),
                    128
                    /* KEYED_FRAGMENT */
                  )) : vue.createCommentVNode("v-if", true)
                ]);
              }),
              128
              /* KEYED_FRAGMENT */
            ))
          ], 44, ["indicatorStyle", "value", "immediateChange"]),
          _ctx.loading ? (vue.openBlock(), vue.createElementBlock("view", {
            key: 1,
            class: "uv-picker--loading"
          }, [
            vue.createVNode(_component_uv_loading_icon, { mode: "circle" })
          ])) : vue.createCommentVNode("v-if", true)
        ])
      ]),
      _: 1
      /* STABLE */
    }, 8, ["round", "close-on-click-overlay", "onChange"]);
  }
  const __easycom_0$5 = /* @__PURE__ */ _export_sfc(_sfc_main$2F, [["render", _sfc_render$2E], ["__scopeId", "data-v-f74a1703"], ["__file", "C:/Users/Administrator/Desktop/Project Folder/ZXHand/ZXHandwritting_APP_uniapp/uni_modules/uv-picker/components/uv-picker/uv-picker.vue"]]);
  const props = {
    props: {
      value: {
        type: [String, Number],
        default: ""
      },
      modelValue: {
        type: [String, Number],
        default: ""
      },
      // 是否打开组件
      show: {
        type: Boolean,
        default: false
      },
      // 是否展示顶部的操作栏
      showToolbar: {
        type: Boolean,
        default: true
      },
      // 顶部标题
      title: {
        type: String,
        default: ""
      },
      // 展示格式，mode=date为日期选择，mode=time为时间选择，mode=year-month为年月选择，mode=datetime为日期时间选择
      mode: {
        type: String,
        default: "datetime"
      },
      // 可选的最大时间
      maxDate: {
        type: Number,
        // 最大默认值为后10年
        default: new Date((/* @__PURE__ */ new Date()).getFullYear() + 10, 0, 1).getTime()
      },
      // 可选的最小时间
      minDate: {
        type: Number,
        // 最小默认值为前10年
        default: new Date((/* @__PURE__ */ new Date()).getFullYear() - 10, 0, 1).getTime()
      },
      // 可选的最小小时，仅mode=time有效
      minHour: {
        type: Number,
        default: 0
      },
      // 可选的最大小时，仅mode=time有效
      maxHour: {
        type: Number,
        default: 23
      },
      // 可选的最小分钟，仅mode=time有效
      minMinute: {
        type: Number,
        default: 0
      },
      // 可选的最大分钟，仅mode=time有效
      maxMinute: {
        type: Number,
        default: 59
      },
      // 选项过滤函数
      filter: {
        type: [Function, null],
        default: null
      },
      // 选项格式化函数
      formatter: {
        type: [Function, null],
        default: null
      },
      // 是否显示加载中状态
      loading: {
        type: Boolean,
        default: false
      },
      // 各列中，单个选项的高度
      itemHeight: {
        type: [String, Number],
        default: 44
      },
      // 取消按钮的文字
      cancelText: {
        type: String,
        default: "取消"
      },
      // 确认按钮的文字
      confirmText: {
        type: String,
        default: "确认"
      },
      // 取消按钮的颜色
      cancelColor: {
        type: String,
        default: "#909193"
      },
      // 确认按钮的颜色
      confirmColor: {
        type: String,
        default: "#3c9cff"
      },
      // 每列中可见选项的数量
      visibleItemCount: {
        type: [String, Number],
        default: 5
      },
      // 是否允许点击遮罩关闭选择器
      closeOnClickOverlay: {
        type: Boolean,
        default: true
      },
      // 是否允许点击确认关闭选择器
      closeOnClickConfirm: {
        type: Boolean,
        default: true
      },
      // 是否清空上次选择内容
      clearDate: {
        type: Boolean,
        default: false
      },
      // 圆角
      round: {
        type: [String, Number],
        default: 0
      },
      ...(_r2 = (_q = uni.$uv) == null ? void 0 : _q.props) == null ? void 0 : _r2.datetimePicker
    }
  };
  var __getOwnPropNames = Object.getOwnPropertyNames;
  var __commonJS = (cb, mod) => function __require() {
    return mod || (0, cb[__getOwnPropNames(cb)[0]])((mod = { exports: {} }).exports, mod), mod.exports;
  };
  var require_dayjs_min = __commonJS({
    "uvuidayjs"(exports, module) {
      !function(t2, e2) {
        "object" == typeof exports && "undefined" != typeof module ? module.exports = e2() : "function" == typeof define && define.amd ? define(e2) : (t2 = "undefined" != typeof globalThis ? globalThis : t2 || self).dayjs = e2();
      }(exports, function() {
        var t2 = 1e3, e2 = 6e4, n2 = 36e5, r2 = "millisecond", i2 = "second", s2 = "minute", u2 = "hour", a2 = "day", o2 = "week", f2 = "month", h2 = "quarter", c2 = "year", d2 = "date", l2 = "Invalid Date", $2 = /^(\d{4})[-/]?(\d{1,2})?[-/]?(\d{0,2})[Tt\s]*(\d{1,2})?:?(\d{1,2})?:?(\d{1,2})?[.:]?(\d+)?$/, y2 = /\[([^\]]+)]|Y{1,4}|M{1,4}|D{1,2}|d{1,4}|H{1,2}|h{1,2}|a|A|m{1,2}|s{1,2}|Z{1,2}|SSS/g, M2 = { name: "en", weekdays: "Sunday_Monday_Tuesday_Wednesday_Thursday_Friday_Saturday".split("_"), months: "January_February_March_April_May_June_July_August_September_October_November_December".split("_"), ordinal: function(t22) {
          var e22 = ["th", "st", "nd", "rd"], n22 = t22 % 100;
          return "[" + t22 + (e22[(n22 - 20) % 10] || e22[n22] || e22[0]) + "]";
        } }, m2 = function(t22, e22, n22) {
          var r22 = String(t22);
          return !r22 || r22.length >= e22 ? t22 : "" + Array(e22 + 1 - r22.length).join(n22) + t22;
        }, v2 = { s: m2, z: function(t22) {
          var e22 = -t22.utcOffset(), n22 = Math.abs(e22), r22 = Math.floor(n22 / 60), i22 = n22 % 60;
          return (e22 <= 0 ? "+" : "-") + m2(r22, 2, "0") + ":" + m2(i22, 2, "0");
        }, m: function t22(e22, n22) {
          if (e22.date() < n22.date())
            return -t22(n22, e22);
          var r22 = 12 * (n22.year() - e22.year()) + (n22.month() - e22.month()), i22 = e22.clone().add(r22, f2), s22 = n22 - i22 < 0, u22 = e22.clone().add(r22 + (s22 ? -1 : 1), f2);
          return +(-(r22 + (n22 - i22) / (s22 ? i22 - u22 : u22 - i22)) || 0);
        }, a: function(t22) {
          return t22 < 0 ? Math.ceil(t22) || 0 : Math.floor(t22);
        }, p: function(t22) {
          return { M: f2, y: c2, w: o2, d: a2, D: d2, h: u2, m: s2, s: i2, ms: r2, Q: h2 }[t22] || String(t22 || "").toLowerCase().replace(/s$/, "");
        }, u: function(t22) {
          return void 0 === t22;
        } }, g2 = "en", D2 = {};
        D2[g2] = M2;
        var p2 = function(t22) {
          return t22 instanceof _2;
        }, S2 = function t22(e22, n22, r22) {
          var i22;
          if (!e22)
            return g2;
          if ("string" == typeof e22) {
            var s22 = e22.toLowerCase();
            D2[s22] && (i22 = s22), n22 && (D2[s22] = n22, i22 = s22);
            var u22 = e22.split("-");
            if (!i22 && u22.length > 1)
              return t22(u22[0]);
          } else {
            var a22 = e22.name;
            D2[a22] = e22, i22 = a22;
          }
          return !r22 && i22 && (g2 = i22), i22 || !r22 && g2;
        }, w2 = function(t22, e22) {
          if (p2(t22))
            return t22.clone();
          var n22 = "object" == typeof e22 ? e22 : {};
          return n22.date = t22, n22.args = arguments, new _2(n22);
        }, O2 = v2;
        O2.l = S2, O2.i = p2, O2.w = function(t22, e22) {
          return w2(t22, { locale: e22.$L, utc: e22.$u, x: e22.$x, $offset: e22.$offset });
        };
        var _2 = function() {
          function M22(t22) {
            this.$L = S2(t22.locale, null, true), this.parse(t22);
          }
          var m22 = M22.prototype;
          return m22.parse = function(t22) {
            this.$d = function(t3) {
              var e22 = t3.date, n22 = t3.utc;
              if (null === e22)
                return /* @__PURE__ */ new Date(NaN);
              if (O2.u(e22))
                return /* @__PURE__ */ new Date();
              if (e22 instanceof Date)
                return new Date(e22);
              if ("string" == typeof e22 && !/Z$/i.test(e22)) {
                var r22 = e22.match($2);
                if (r22) {
                  var i22 = r22[2] - 1 || 0, s22 = (r22[7] || "0").substring(0, 3);
                  return n22 ? new Date(Date.UTC(r22[1], i22, r22[3] || 1, r22[4] || 0, r22[5] || 0, r22[6] || 0, s22)) : new Date(r22[1], i22, r22[3] || 1, r22[4] || 0, r22[5] || 0, r22[6] || 0, s22);
                }
              }
              return new Date(e22);
            }(t22), this.$x = t22.x || {}, this.init();
          }, m22.init = function() {
            var t22 = this.$d;
            this.$y = t22.getFullYear(), this.$M = t22.getMonth(), this.$D = t22.getDate(), this.$W = t22.getDay(), this.$H = t22.getHours(), this.$m = t22.getMinutes(), this.$s = t22.getSeconds(), this.$ms = t22.getMilliseconds();
          }, m22.$utils = function() {
            return O2;
          }, m22.isValid = function() {
            return !(this.$d.toString() === l2);
          }, m22.isSame = function(t22, e22) {
            var n22 = w2(t22);
            return this.startOf(e22) <= n22 && n22 <= this.endOf(e22);
          }, m22.isAfter = function(t22, e22) {
            return w2(t22) < this.startOf(e22);
          }, m22.isBefore = function(t22, e22) {
            return this.endOf(e22) < w2(t22);
          }, m22.$g = function(t22, e22, n22) {
            return O2.u(t22) ? this[e22] : this.set(n22, t22);
          }, m22.unix = function() {
            return Math.floor(this.valueOf() / 1e3);
          }, m22.valueOf = function() {
            return this.$d.getTime();
          }, m22.startOf = function(t22, e22) {
            var n22 = this, r22 = !!O2.u(e22) || e22, h22 = O2.p(t22), l22 = function(t3, e3) {
              var i22 = O2.w(n22.$u ? Date.UTC(n22.$y, e3, t3) : new Date(n22.$y, e3, t3), n22);
              return r22 ? i22 : i22.endOf(a2);
            }, $22 = function(t3, e3) {
              return O2.w(n22.toDate()[t3].apply(n22.toDate("s"), (r22 ? [0, 0, 0, 0] : [23, 59, 59, 999]).slice(e3)), n22);
            }, y22 = this.$W, M3 = this.$M, m3 = this.$D, v22 = "set" + (this.$u ? "UTC" : "");
            switch (h22) {
              case c2:
                return r22 ? l22(1, 0) : l22(31, 11);
              case f2:
                return r22 ? l22(1, M3) : l22(0, M3 + 1);
              case o2:
                var g22 = this.$locale().weekStart || 0, D22 = (y22 < g22 ? y22 + 7 : y22) - g22;
                return l22(r22 ? m3 - D22 : m3 + (6 - D22), M3);
              case a2:
              case d2:
                return $22(v22 + "Hours", 0);
              case u2:
                return $22(v22 + "Minutes", 1);
              case s2:
                return $22(v22 + "Seconds", 2);
              case i2:
                return $22(v22 + "Milliseconds", 3);
              default:
                return this.clone();
            }
          }, m22.endOf = function(t22) {
            return this.startOf(t22, false);
          }, m22.$set = function(t22, e22) {
            var n22, o22 = O2.p(t22), h22 = "set" + (this.$u ? "UTC" : ""), l22 = (n22 = {}, n22[a2] = h22 + "Date", n22[d2] = h22 + "Date", n22[f2] = h22 + "Month", n22[c2] = h22 + "FullYear", n22[u2] = h22 + "Hours", n22[s2] = h22 + "Minutes", n22[i2] = h22 + "Seconds", n22[r2] = h22 + "Milliseconds", n22)[o22], $22 = o22 === a2 ? this.$D + (e22 - this.$W) : e22;
            if (o22 === f2 || o22 === c2) {
              var y22 = this.clone().set(d2, 1);
              y22.$d[l22]($22), y22.init(), this.$d = y22.set(d2, Math.min(this.$D, y22.daysInMonth())).$d;
            } else
              l22 && this.$d[l22]($22);
            return this.init(), this;
          }, m22.set = function(t22, e22) {
            return this.clone().$set(t22, e22);
          }, m22.get = function(t22) {
            return this[O2.p(t22)]();
          }, m22.add = function(r22, h22) {
            var d22, l22 = this;
            r22 = Number(r22);
            var $22 = O2.p(h22), y22 = function(t22) {
              var e22 = w2(l22);
              return O2.w(e22.date(e22.date() + Math.round(t22 * r22)), l22);
            };
            if ($22 === f2)
              return this.set(f2, this.$M + r22);
            if ($22 === c2)
              return this.set(c2, this.$y + r22);
            if ($22 === a2)
              return y22(1);
            if ($22 === o2)
              return y22(7);
            var M3 = (d22 = {}, d22[s2] = e2, d22[u2] = n2, d22[i2] = t2, d22)[$22] || 1, m3 = this.$d.getTime() + r22 * M3;
            return O2.w(m3, this);
          }, m22.subtract = function(t22, e22) {
            return this.add(-1 * t22, e22);
          }, m22.format = function(t22) {
            var e22 = this, n22 = this.$locale();
            if (!this.isValid())
              return n22.invalidDate || l2;
            var r22 = t22 || "YYYY-MM-DDTHH:mm:ssZ", i22 = O2.z(this), s22 = this.$H, u22 = this.$m, a22 = this.$M, o22 = n22.weekdays, f22 = n22.months, h22 = function(t3, n3, i3, s3) {
              return t3 && (t3[n3] || t3(e22, r22)) || i3[n3].slice(0, s3);
            }, c22 = function(t3) {
              return O2.s(s22 % 12 || 12, t3, "0");
            }, d22 = n22.meridiem || function(t3, e3, n3) {
              var r3 = t3 < 12 ? "AM" : "PM";
              return n3 ? r3.toLowerCase() : r3;
            }, $22 = { YY: String(this.$y).slice(-2), YYYY: this.$y, M: a22 + 1, MM: O2.s(a22 + 1, 2, "0"), MMM: h22(n22.monthsShort, a22, f22, 3), MMMM: h22(f22, a22), D: this.$D, DD: O2.s(this.$D, 2, "0"), d: String(this.$W), dd: h22(n22.weekdaysMin, this.$W, o22, 2), ddd: h22(n22.weekdaysShort, this.$W, o22, 3), dddd: o22[this.$W], H: String(s22), HH: O2.s(s22, 2, "0"), h: c22(1), hh: c22(2), a: d22(s22, u22, true), A: d22(s22, u22, false), m: String(u22), mm: O2.s(u22, 2, "0"), s: String(this.$s), ss: O2.s(this.$s, 2, "0"), SSS: O2.s(this.$ms, 3, "0"), Z: i22 };
            return r22.replace(y2, function(t3, e3) {
              return e3 || $22[t3] || i22.replace(":", "");
            });
          }, m22.utcOffset = function() {
            return 15 * -Math.round(this.$d.getTimezoneOffset() / 15);
          }, m22.diff = function(r22, d22, l22) {
            var $22, y22 = O2.p(d22), M3 = w2(r22), m3 = (M3.utcOffset() - this.utcOffset()) * e2, v22 = this - M3, g22 = O2.m(this, M3);
            return g22 = ($22 = {}, $22[c2] = g22 / 12, $22[f2] = g22, $22[h2] = g22 / 3, $22[o2] = (v22 - m3) / 6048e5, $22[a2] = (v22 - m3) / 864e5, $22[u2] = v22 / n2, $22[s2] = v22 / e2, $22[i2] = v22 / t2, $22)[y22] || v22, l22 ? g22 : O2.a(g22);
          }, m22.daysInMonth = function() {
            return this.endOf(f2).$D;
          }, m22.$locale = function() {
            return D2[this.$L];
          }, m22.locale = function(t22, e22) {
            if (!t22)
              return this.$L;
            var n22 = this.clone(), r22 = S2(t22, e22, true);
            return r22 && (n22.$L = r22), n22;
          }, m22.clone = function() {
            return O2.w(this.$d, this);
          }, m22.toDate = function() {
            return new Date(this.valueOf());
          }, m22.toJSON = function() {
            return this.isValid() ? this.toISOString() : null;
          }, m22.toISOString = function() {
            return this.$d.toISOString();
          }, m22.toString = function() {
            return this.$d.toUTCString();
          }, M22;
        }(), T2 = _2.prototype;
        return w2.prototype = T2, [["$ms", r2], ["$s", i2], ["$m", s2], ["$H", u2], ["$W", a2], ["$M", f2], ["$y", c2], ["$D", d2]].forEach(function(t22) {
          T2[t22[1]] = function(e22) {
            return this.$g(e22, t22[0], t22[1]);
          };
        }), w2.extend = function(t22, e22) {
          return t22.$i || (t22(e22, _2, w2), t22.$i = true), w2;
        }, w2.locale = S2, w2.isDayjs = p2, w2.unix = function(t22) {
          return w2(1e3 * t22);
        }, w2.en = D2[g2], w2.Ls = D2, w2.p = {}, w2;
      });
    }
  });
  const dayjs$1 = require_dayjs_min();
  function times(n2, iteratee) {
    let index2 = -1;
    const result = Array(n2 < 0 ? 0 : n2);
    while (++index2 < n2) {
      result[index2] = iteratee(index2);
    }
    return result;
  }
  const _sfc_main$2E = {
    name: "uv-datetime-picker",
    emits: ["close", "cancel", "confirm", "input", "change", "update:modelValue"],
    mixins: [mpMixin, mixin, props],
    data() {
      return {
        columns: [],
        innerDefaultIndex: [],
        innerFormatter: (type, value) => value
      };
    },
    watch: {
      propsChange() {
        this.$uv.sleep(100).then((res) => {
          this.init();
        });
      }
    },
    computed: {
      // 如果以下这些变量发生了变化，意味着需要重新初始化各列的值
      propsChange() {
        const propsValue = this.value || this.modelValue;
        return [this.mode, this.maxDate, this.minDate, this.minHour, this.maxHour, this.minMinute, this.maxMinute, this.filter, propsValue];
      }
    },
    mounted() {
      this.init();
    },
    methods: {
      init() {
        this.getValue();
        this.updateColumnValue(this.innerValue);
      },
      getValue() {
        const propsValue = this.value || this.modelValue;
        this.innerValue = this.correctValue(propsValue);
      },
      // 在微信小程序中，不支持将函数当做props参数，故只能通过ref形式调用
      setFormatter(e2) {
        this.innerFormatter = e2;
      },
      open() {
        this.$refs.picker.open();
        setTimeout(() => {
          this.getValue();
          this.updateColumnValue(this.innerValue);
        }, 10);
      },
      close() {
        this.$emit("close");
      },
      // 点击工具栏的取消按钮
      cancel() {
        this.$emit("cancel");
      },
      // 点击工具栏的确定按钮
      confirm() {
        this.$emit("confirm", {
          value: this.innerValue,
          mode: this.mode
        });
        if (!this.clearDate) {
          this.$emit("input", this.innerValue);
          this.$emit("update:modelValue", this.innerValue);
        }
      },
      //用正则截取输出值,当出现多组数字时,抛出错误
      intercept(e2, type) {
        let judge = e2.match(/\d+/g);
        if (judge.length > 1) {
          this.$uv.error("请勿在过滤或格式化函数时添加数字");
          return 0;
        } else if (type && judge[0].length == 4) {
          return judge[0];
        } else if (judge[0].length > 2) {
          this.$uv.error("请勿在过滤或格式化函数时添加数字");
          return 0;
        } else {
          return judge[0];
        }
      },
      // 列发生变化时触发
      change(e2) {
        const { indexs, values } = e2;
        let selectValue = "";
        if (this.mode === "time") {
          selectValue = `${this.intercept(values[0][indexs[0]])}:${this.intercept(values[1][indexs[1]])}`;
        } else if (this.mode === "year") {
          const year = parseInt(this.intercept(values[0][indexs[0]], "year"));
          selectValue = Number(new Date(year, 0));
        } else {
          const year = parseInt(this.intercept(values[0][indexs[0]], "year"));
          const month = parseInt(this.intercept(values[1][indexs[1]]));
          let date2 = parseInt(values[2] ? this.intercept(values[2][indexs[2]]) : 1);
          let hour = 0, minute = 0;
          const maxDate = dayjs$1(`${year}-${month}`).daysInMonth();
          if (this.mode === "year-month") {
            date2 = 1;
          }
          date2 = Math.min(maxDate, date2);
          if (this.mode === "datetime") {
            hour = parseInt(this.intercept(values[3][indexs[3]]));
            minute = parseInt(this.intercept(values[4][indexs[4]]));
          }
          selectValue = Number(new Date(year, month - 1, date2, hour, minute));
        }
        selectValue = this.correctValue(selectValue);
        this.innerValue = selectValue;
        this.updateColumnValue(selectValue);
        this.$emit("change", {
          value: selectValue,
          mode: this.mode
        });
      },
      // 更新各列的值，进行补0、格式化等操作
      updateColumnValue(value) {
        this.innerValue = value;
        this.updateColumns();
        this.updateIndexs(value);
      },
      // 更新索引
      updateIndexs(value) {
        let values = [];
        const formatter = this.formatter || this.innerFormatter;
        if (this.mode === "time") {
          const timeArr = value.split(":");
          values = [formatter("hour", timeArr[0]), formatter("minute", timeArr[1])];
        } else {
          values = [
            formatter("year", `${dayjs$1(value).year()}`),
            // 月份补0
            formatter("month", this.$uv.padZero(dayjs$1(value).month() + 1))
          ];
          if (this.mode === "date") {
            values.push(formatter("day", this.$uv.padZero(dayjs$1(value).date())));
          }
          if (this.mode === "datetime") {
            values.push(formatter("day", this.$uv.padZero(dayjs$1(value).date())), formatter("hour", this.$uv.padZero(dayjs$1(value).hour())), formatter("minute", this.$uv.padZero(dayjs$1(value).minute())));
          }
        }
        const indexs = this.columns.map((column, index2) => {
          return Math.max(0, column.findIndex((item) => item === values[index2]));
        });
        this.$nextTick(() => {
          this.$uv.sleep(100).then((res) => {
            this.$refs.picker.setIndexs(indexs, true);
          });
        });
      },
      // 更新各列的值
      updateColumns() {
        const formatter = this.formatter || this.innerFormatter;
        const results = this.getOriginColumns().map((column) => column.values.map((value) => formatter(column.type, value)));
        this.columns = results;
      },
      getOriginColumns() {
        const results = this.getRanges().map(({ type, range: range2 }) => {
          let values = times(range2[1] - range2[0] + 1, (index2) => {
            let value = range2[0] + index2;
            value = type === "year" ? `${value}` : this.$uv.padZero(value);
            return value;
          });
          if (this.filter) {
            values = this.filter(type, values);
          }
          return { type, values };
        });
        return results;
      },
      // 通过最大值和最小值生成数组
      generateArray(start, end) {
        return Array.from(new Array(end + 1).keys()).slice(start);
      },
      // 得出合法的时间
      correctValue(value) {
        const isDateMode = this.mode !== "time";
        if (isDateMode && !this.$uv.test.date(value)) {
          value = this.minDate;
        } else if (!isDateMode && !value) {
          value = `${this.$uv.padZero(this.minHour)}:${this.$uv.padZero(this.minMinute)}`;
        }
        if (!isDateMode) {
          if (String(value).indexOf(":") === -1)
            return this.$uv.error("时间错误，请传递如12:24的格式");
          let [hour, minute] = value.split(":");
          hour = this.$uv.padZero(this.$uv.range(this.minHour, this.maxHour, Number(hour)));
          minute = this.$uv.padZero(this.$uv.range(this.minMinute, this.maxMinute, Number(minute)));
          return `${hour}:${minute}`;
        } else {
          value = dayjs$1(value).isBefore(dayjs$1(this.minDate)) ? this.minDate : value;
          value = dayjs$1(value).isAfter(dayjs$1(this.maxDate)) ? this.maxDate : value;
          return value;
        }
      },
      // 获取每列的最大和最小值
      getRanges() {
        if (this.mode === "time") {
          return [{
            type: "hour",
            range: [this.minHour, this.maxHour]
          }, {
            type: "minute",
            range: [this.minMinute, this.maxMinute]
          }];
        }
        const { maxYear, maxDate, maxMonth, maxHour, maxMinute } = this.getBoundary("max", this.innerValue);
        const { minYear, minDate, minMonth, minHour, minMinute } = this.getBoundary("min", this.innerValue);
        const result = [{
          type: "year",
          range: [minYear, maxYear]
        }, {
          type: "month",
          range: [minMonth, maxMonth]
        }, {
          type: "day",
          range: [minDate, maxDate]
        }, {
          type: "hour",
          range: [minHour, maxHour]
        }, {
          type: "minute",
          range: [minMinute, maxMinute]
        }];
        if (this.mode === "date")
          result.splice(3, 2);
        if (this.mode === "year-month")
          result.splice(2, 3);
        if (this.mode === "year")
          result.splice(1, 4);
        return result;
      },
      // 根据minDate、maxDate、minHour、maxHour等边界值，判断各列的开始和结束边界值
      getBoundary(type, innerValue) {
        const value = new Date(innerValue);
        const boundary = new Date(this[`${type}Date`]);
        const year = dayjs$1(boundary).year();
        let month = 1;
        let date2 = 1;
        let hour = 0;
        let minute = 0;
        if (type === "max") {
          month = 12;
          date2 = dayjs$1(value).daysInMonth();
          hour = 23;
          minute = 59;
        }
        if (dayjs$1(value).year() === year) {
          month = dayjs$1(boundary).month() + 1;
          if (dayjs$1(value).month() + 1 === month) {
            date2 = dayjs$1(boundary).date();
            if (dayjs$1(value).date() === date2) {
              hour = dayjs$1(boundary).hour();
              if (dayjs$1(value).hour() === hour) {
                minute = dayjs$1(boundary).minute();
              }
            }
          }
        }
        return {
          [`${type}Year`]: year,
          [`${type}Month`]: month,
          [`${type}Date`]: date2,
          [`${type}Hour`]: hour,
          [`${type}Minute`]: minute
        };
      }
    }
  };
  function _sfc_render$2D(_ctx, _cache, $props, $setup, $data, $options) {
    const _component_uv_picker = resolveEasycom(vue.resolveDynamicComponent("uv-picker"), __easycom_0$5);
    return vue.openBlock(), vue.createBlock(_component_uv_picker, {
      ref: "picker",
      closeOnClickOverlay: _ctx.closeOnClickOverlay,
      closeOnClickConfirm: _ctx.closeOnClickConfirm,
      columns: $data.columns,
      title: _ctx.title,
      itemHeight: _ctx.itemHeight,
      showToolbar: _ctx.showToolbar,
      visibleItemCount: _ctx.visibleItemCount,
      defaultIndex: $data.innerDefaultIndex,
      cancelText: _ctx.cancelText,
      confirmText: _ctx.confirmText,
      cancelColor: _ctx.cancelColor,
      confirmColor: _ctx.confirmColor,
      round: _ctx.round,
      onClose: $options.close,
      onCancel: $options.cancel,
      onConfirm: $options.confirm,
      onChange: $options.change
    }, null, 8, ["closeOnClickOverlay", "closeOnClickConfirm", "columns", "title", "itemHeight", "showToolbar", "visibleItemCount", "defaultIndex", "cancelText", "confirmText", "cancelColor", "confirmColor", "round", "onClose", "onCancel", "onConfirm", "onChange"]);
  }
  const __easycom_0$4 = /* @__PURE__ */ _export_sfc(_sfc_main$2E, [["render", _sfc_render$2D], ["__file", "C:/Users/Administrator/Desktop/Project Folder/ZXHand/ZXHandwritting_APP_uniapp/uni_modules/uv-datetime-picker/components/uv-datetime-picker/uv-datetime-picker.vue"]]);
  const _imports_0$8 = "/static/img/boy1.png";
  const _imports_1$3 = "/static/img/boy.png";
  const _imports_2$2 = "/static/img/girl1.png";
  const _imports_3$1 = "/static/img/girl.png";
  const _sfc_main$2D = {
    __name: "register",
    setup(__props, { expose: __expose }) {
      __expose();
      const statusBarHeight = vue.ref();
      onLoad(() => {
        statusBarHeight.value = getApp().globalData.top;
      });
      const name = vue.ref("");
      const old = vue.ref("");
      const refe = vue.ref("");
      const iphone = vue.ref("");
      const captcha = vue.ref("");
      const password = vue.ref("");
      const dateYear = vue.ref("年/月/日");
      const giftmoren = vue.ref("选择校区");
      const giftIndex = vue.ref(0);
      const giftArray = vue.ref([]);
      const multiArray = vue.ref([]);
      const multiIndex = vue.ref([0, 0, 0]);
      const selectedValue = vue.ref("请选择班级");
      const value = vue.ref(null);
      const isMale = vue.ref(false);
      const isFemale = vue.ref(false);
      const datetimePicker = vue.ref(null);
      const campusId = vue.ref("");
      const classlyId2 = vue.ref("");
      const isClassPickerDisabled = vue.ref(true);
      const isCodeSent = vue.ref(false);
      const countdown = vue.ref(60);
      let timer = null;
      const store = useStore();
      const updateField = (field, event) => {
        switch (field) {
          case "name":
            name.value = event.detail.value;
            break;
          case "old":
            old.value = event.detail.value;
            break;
          case "refe":
            refe.value = event.detail.value;
            break;
          case "iphone":
            iphone.value = event.detail.value;
            break;
          case "captcha":
            captcha.value = event.detail.value;
          case "password":
            password.value = event.detail.value;
            break;
        }
      };
      const loadClasses = async () => {
        try {
          const response = await fetchClassData({
            school_id: campusId.value
          });
          formatAppLog("log", "at pages/login/register.vue:146", response);
          if (response && response.items) {
            multiArray.value = response.items;
            store.setClassData(response.items);
          }
        } catch (error2) {
          formatAppLog("error", "at pages/login/register.vue:152", "获取班级数据失败", error2);
        }
      };
      const loadCampus = async () => {
        try {
          const response = await fetchCampusData();
          if (response) {
            giftArray.value = response.items;
            store.setCampusData(response.items);
          }
        } catch (error2) {
          formatAppLog("error", "at pages/login/register.vue:164", "获取校区数据失败", error2);
        }
      };
      const open2 = () => {
        datetimePicker.value.open();
      };
      const getlogin = async () => {
        const formData = {
          gender: isMale.value ? 1 : 0,
          username: name.value,
          age: old.value,
          birthday: dateYear.value,
          school_id: campusId.value,
          classly_id: classlyId2.value,
          referee: refe.value,
          mobile: iphone.value,
          password: password.value,
          captcha: captcha.value
          // avatar: avatar.value
        };
        try {
          let response = await submitRegisterInfo(formData);
          formatAppLog("log", "at pages/login/register.vue:189", response);
          if (response.code === 1) {
            uni.showToast({
              title: response.msg,
              icon: "success",
              duration: 2e3
            });
            uni.navigateTo({
              url: "/pages/login/login"
            });
          } else {
            uni.showToast({
              title: response.msg,
              icon: "error",
              duration: 2e3
            });
          }
        } catch (error2) {
        }
      };
      const giftPickerChange = (event) => {
        giftIndex.value = event.detail.value;
        if (giftIndex.value >= 0 && giftIndex.value < giftArray.value.length) {
          giftmoren.value = giftArray.value[giftIndex.value].title;
          campusId.value = giftArray.value[giftIndex.value].id;
          formatAppLog("log", "at pages/login/register.vue:219", "选择的校区 ID:", campusId.value);
          isClassPickerDisabled.value = false;
          loadClasses();
        } else {
          formatAppLog("warn", "at pages/login/register.vue:225", "选择的索引超出范围:", giftIndex.value);
        }
      };
      const selectGender = (gender) => {
        if (gender === "男") {
          isMale.value = true;
          isFemale.value = false;
        } else {
          isMale.value = false;
          isFemale.value = true;
        }
      };
      const onClassChange = (event) => {
        multiIndex.value = event.detail.value;
        if (isNaN(multiIndex.value) || multiIndex.value.length === 0) {
          selectedValue.value = multiArray.value[0].title;
          classlyId2.value = multiArray.value[0].id;
        } else {
          selectedValue.value = multiArray.value[multiIndex.value].title;
          classlyId2.value = multiArray.value[multiIndex.value].id;
        }
      };
      const confirm = (e2) => {
        const date2 = new Date(e2.value);
        const formattedDate = `${date2.getFullYear()}-${String(date2.getMonth() + 1).padStart(2, "0")}-${String(date2.getDate()).padStart(2, "0")}`;
        dateYear.value = formattedDate;
        value.value = date2.toISOString();
      };
      const requestVerificationCode = async () => {
        const phonePattern = /^[1][3-9][0-9]{9}$/;
        if (!phonePattern.test(iphone.value)) {
          return showToast("手机号格式不正确");
        }
        try {
          const response = await fetchVerificationCode({
            mobile: iphone.value,
            event: "register"
          });
          formatAppLog("log", "at pages/login/register.vue:276", response);
          if (response.code === 1) {
            isCodeSent.value = true;
            startCountdown2();
            uni.showToast({
              title: response.msg || "验证码发送成功",
              icon: "success",
              // 提示图标类型
              duration: 2e3
              // 持续时间
            });
          } else {
            uni.showToast({
              title: response.msg || "发送验证码失败，请重试",
              icon: "none",
              // 提示图标类型
              duration: 2e3
              // 持续时间
            });
          }
        } catch (error2) {
          uni.showToast({
            title: "发送验证码失败，请重试",
            icon: "none",
            // 提示图标类型
            duration: 2e3
            // 持续时间
          });
          formatAppLog("error", "at pages/login/register.vue:299", "发送验证码错误:", error2);
        } finally {
          uni.hideLoading();
        }
      };
      const startCountdown2 = () => {
        countdown.value = 60;
        clearInterval(timer);
        timer = setInterval(() => {
          countdown.value--;
          if (countdown.value <= 0) {
            clearInterval(timer);
            isCodeSent.value = false;
          }
        }, 1e3);
      };
      vue.onMounted(async () => {
        await loadCampus();
      });
      const __returned__ = { statusBarHeight, name, old, refe, iphone, captcha, password, dateYear, giftmoren, giftIndex, giftArray, multiArray, multiIndex, selectedValue, value, isMale, isFemale, datetimePicker, campusId, classlyId: classlyId2, isClassPickerDisabled, isCodeSent, countdown, get timer() {
        return timer;
      }, set timer(v2) {
        timer = v2;
      }, store, updateField, loadClasses, loadCampus, open: open2, getlogin, giftPickerChange, selectGender, onClassChange, confirm, requestVerificationCode, startCountdown: startCountdown2, ref: vue.ref, onMounted: vue.onMounted, get fetchCampusData() {
        return fetchCampusData;
      }, get fetchVerificationCode() {
        return fetchVerificationCode;
      }, get fetchClassData() {
        return fetchClassData;
      }, get submitRegisterInfo() {
        return submitRegisterInfo;
      }, get useStore() {
        return useStore;
      }, get onLoad() {
        return onLoad;
      } };
      Object.defineProperty(__returned__, "__isScriptSetup", { enumerable: false, value: true });
      return __returned__;
    }
  };
  function _sfc_render$2C(_ctx, _cache, $props, $setup, $data, $options) {
    const _component_uv_datetime_picker = resolveEasycom(vue.resolveDynamicComponent("uv-datetime-picker"), __easycom_0$4);
    return vue.openBlock(), vue.createElementBlock("view", null, [
      vue.createVNode(_component_uv_datetime_picker, {
        ref: "datetimePicker",
        modelValue: $setup.value,
        "onUpdate:modelValue": _cache[0] || (_cache[0] = ($event) => $setup.value = $event),
        mode: "date",
        minDate: 946695809e3,
        onConfirm: $setup.confirm
      }, null, 8, ["modelValue"]),
      vue.createElementVNode("view", { style: { "height": "500rpx" } }),
      vue.createElementVNode(
        "view",
        {
          style: vue.normalizeStyle("height:" + ($setup.statusBarHeight + 5) + "px;")
        },
        null,
        4
        /* STYLE */
      ),
      vue.createElementVNode("view", { class: "container" }, [
        vue.createElementVNode("view", { class: "form" }, [
          vue.createElementVNode("view", { class: "textTitle" }, [
            vue.createElementVNode("view", { class: "title1" }, " 欢迎来到泽曦书画 "),
            vue.createElementVNode("view", { class: "title2" }, " 请选择性别年龄，校区班级推荐人 ")
          ]),
          vue.createElementVNode("view", {
            style: { "margin-top": "24rpx" },
            class: "textlogin"
          }, [
            vue.createElementVNode("view", {
              class: "img1",
              onClick: _cache[1] || (_cache[1] = ($event) => $setup.selectGender("男"))
            }, [
              $setup.isMale ? (vue.openBlock(), vue.createElementBlock("image", {
                key: 0,
                src: _imports_0$8,
                alt: ""
              })) : (vue.openBlock(), vue.createElementBlock("image", {
                key: 1,
                src: _imports_1$3,
                alt: ""
              })),
              vue.createElementVNode("view", { class: "imgtext1" }, " 男 ")
            ]),
            vue.createElementVNode("view", {
              class: "img2",
              onClick: _cache[2] || (_cache[2] = ($event) => $setup.selectGender("女"))
            }, [
              $setup.isFemale ? (vue.openBlock(), vue.createElementBlock("image", {
                key: 0,
                src: _imports_2$2,
                alt: ""
              })) : (vue.openBlock(), vue.createElementBlock("image", {
                key: 1,
                src: _imports_3$1,
                alt: ""
              })),
              vue.createElementVNode("view", { class: "imgtext1" }, " 女 ")
            ])
          ]),
          vue.createElementVNode("view", { class: "title" }, "姓名"),
          vue.createElementVNode(
            "input",
            {
              type: "text",
              placeholder: "输入姓名",
              class: "input",
              onInput: _cache[3] || (_cache[3] = ($event) => $setup.updateField("name", $event))
            },
            null,
            32
            /* NEED_HYDRATION */
          ),
          vue.createElementVNode("view", { class: "title" }, "年龄"),
          vue.createElementVNode(
            "input",
            {
              type: "number",
              placeholder: "例如:12",
              class: "input",
              onInput: _cache[4] || (_cache[4] = ($event) => $setup.updateField("old", $event))
            },
            null,
            32
            /* NEED_HYDRATION */
          ),
          vue.createElementVNode("view", { class: "title" }, "出生年月日"),
          vue.createElementVNode("view", {
            class: "image-text_1 flex-row justify-between input",
            onClick: $setup.open
          }, [
            vue.createElementVNode(
              "text",
              null,
              vue.toDisplayString($setup.dateYear),
              1
              /* TEXT */
            )
          ]),
          vue.createElementVNode("view", { class: "title" }, "校区"),
          vue.createElementVNode("view", { class: "input" }, [
            vue.createElementVNode("picker", {
              onChange: $setup.giftPickerChange,
              value: $setup.giftIndex,
              range: $setup.giftArray.map((item) => item.title),
              "range-key": "gift"
            }, [
              vue.createElementVNode(
                "view",
                { class: "uni-input" },
                vue.toDisplayString($setup.giftmoren),
                1
                /* TEXT */
              )
            ], 40, ["value", "range"])
          ]),
          vue.createElementVNode("view", { class: "title" }, "班级"),
          vue.createElementVNode("view", { class: "input" }, [
            vue.createElementVNode("picker", {
              mode: "selector",
              onChange: $setup.onClassChange,
              value: $setup.multiIndex,
              range: $setup.multiArray.map((item) => item.title),
              disabled: $setup.isClassPickerDisabled
            }, [
              vue.createElementVNode(
                "view",
                { class: "uni-input" },
                vue.toDisplayString($setup.selectedValue),
                1
                /* TEXT */
              )
            ], 40, ["value", "range", "disabled"])
          ]),
          vue.createElementVNode("view", { class: "title" }, "推荐人"),
          vue.createElementVNode(
            "input",
            {
              type: "text",
              placeholder: "输入推荐人",
              class: "input",
              onInput: _cache[5] || (_cache[5] = ($event) => $setup.updateField("refe", $event))
            },
            null,
            32
            /* NEED_HYDRATION */
          ),
          vue.createElementVNode("view", { class: "title" }, "手机号"),
          vue.createCommentVNode(' autocomplete="off" off/nope 防止自动填充 '),
          vue.createElementVNode(
            "input",
            {
              type: "text",
              placeholder: "输入手机号",
              class: "input",
              autocomplete: "off",
              onInput: _cache[6] || (_cache[6] = ($event) => $setup.updateField("iphone", $event))
            },
            null,
            32
            /* NEED_HYDRATION */
          ),
          vue.createElementVNode("view", { style: { "position": "relative" } }, [
            vue.createElementVNode("view", { class: "title" }, "验证码"),
            vue.createCommentVNode(' autocomplete="off" off/nope 防止自动填充 '),
            vue.createElementVNode(
              "input",
              {
                type: "text",
                placeholder: "验证码",
                class: "input",
                autocomplete: "off",
                onInput: _cache[7] || (_cache[7] = ($event) => $setup.updateField("captcha", $event))
              },
              null,
              32
              /* NEED_HYDRATION */
            ),
            vue.createElementVNode("view", {
              style: { "position": "absolute", "right": "0", "bottom": "4px" },
              onClick: vue.withModifiers($setup.requestVerificationCode, ["stop"]),
              disabled: $setup.isCodeSent,
              class: vue.normalizeClass({ "code-button": true, "disabled-button": $setup.isCodeSent })
            }, vue.toDisplayString($setup.isCodeSent ? `${$setup.countdown}秒` : "获取验证码"), 11, ["disabled"])
          ]),
          vue.createElementVNode("view", { class: "title" }, "密码"),
          vue.createCommentVNode('autocomplete="new-password" new-password/off 防止使用已保存的密码填充 '),
          vue.createElementVNode(
            "input",
            {
              type: "password",
              placeholder: "输入密码",
              class: "input",
              autocomplete: "off",
              onInput: _cache[8] || (_cache[8] = ($event) => $setup.updateField("password", $event))
            },
            null,
            32
            /* NEED_HYDRATION */
          ),
          vue.createElementVNode("button", {
            class: "login-button",
            onClick: $setup.getlogin
          }, "完成")
        ]),
        vue.createElementVNode("view", { class: "footer" })
      ])
    ]);
  }
  const PagesLoginRegister = /* @__PURE__ */ _export_sfc(_sfc_main$2D, [["render", _sfc_render$2C], ["__file", "C:/Users/Administrator/Desktop/Project Folder/ZXHand/ZXHandwritting_APP_uniapp/pages/login/register.vue"]]);
  const isObject$3 = (val) => val !== null && typeof val === "object";
  const defaultDelimiters = ["{", "}"];
  class BaseFormatter {
    constructor() {
      this._caches = /* @__PURE__ */ Object.create(null);
    }
    interpolate(message2, values, delimiters = defaultDelimiters) {
      if (!values) {
        return [message2];
      }
      let tokens = this._caches[message2];
      if (!tokens) {
        tokens = parse(message2, delimiters);
        this._caches[message2] = tokens;
      }
      return compile(tokens, values);
    }
  }
  const RE_TOKEN_LIST_VALUE = /^(?:\d)+/;
  const RE_TOKEN_NAMED_VALUE = /^(?:\w)+/;
  function parse(format, [startDelimiter, endDelimiter]) {
    const tokens = [];
    let position = 0;
    let text = "";
    while (position < format.length) {
      let char = format[position++];
      if (char === startDelimiter) {
        if (text) {
          tokens.push({ type: "text", value: text });
        }
        text = "";
        let sub = "";
        char = format[position++];
        while (char !== void 0 && char !== endDelimiter) {
          sub += char;
          char = format[position++];
        }
        const isClosed = char === endDelimiter;
        const type = RE_TOKEN_LIST_VALUE.test(sub) ? "list" : isClosed && RE_TOKEN_NAMED_VALUE.test(sub) ? "named" : "unknown";
        tokens.push({ value: sub, type });
      } else {
        text += char;
      }
    }
    text && tokens.push({ type: "text", value: text });
    return tokens;
  }
  function compile(tokens, values) {
    const compiled = [];
    let index2 = 0;
    const mode = Array.isArray(values) ? "list" : isObject$3(values) ? "named" : "unknown";
    if (mode === "unknown") {
      return compiled;
    }
    while (index2 < tokens.length) {
      const token = tokens[index2];
      switch (token.type) {
        case "text":
          compiled.push(token.value);
          break;
        case "list":
          compiled.push(values[parseInt(token.value, 10)]);
          break;
        case "named":
          if (mode === "named") {
            compiled.push(values[token.value]);
          } else {
            {
              console.warn(`Type of token '${token.type}' and format of value '${mode}' don't match!`);
            }
          }
          break;
        case "unknown":
          {
            console.warn(`Detect 'unknown' type of token!`);
          }
          break;
      }
      index2++;
    }
    return compiled;
  }
  const LOCALE_ZH_HANS = "zh-Hans";
  const LOCALE_ZH_HANT = "zh-Hant";
  const LOCALE_EN = "en";
  const LOCALE_FR = "fr";
  const LOCALE_ES = "es";
  const hasOwnProperty = Object.prototype.hasOwnProperty;
  const hasOwn = (val, key) => hasOwnProperty.call(val, key);
  const defaultFormatter = new BaseFormatter();
  function include(str, parts) {
    return !!parts.find((part) => str.indexOf(part) !== -1);
  }
  function startsWith(str, parts) {
    return parts.find((part) => str.indexOf(part) === 0);
  }
  function normalizeLocale(locale, messages2) {
    if (!locale) {
      return;
    }
    locale = locale.trim().replace(/_/g, "-");
    if (messages2 && messages2[locale]) {
      return locale;
    }
    locale = locale.toLowerCase();
    if (locale === "chinese") {
      return LOCALE_ZH_HANS;
    }
    if (locale.indexOf("zh") === 0) {
      if (locale.indexOf("-hans") > -1) {
        return LOCALE_ZH_HANS;
      }
      if (locale.indexOf("-hant") > -1) {
        return LOCALE_ZH_HANT;
      }
      if (include(locale, ["-tw", "-hk", "-mo", "-cht"])) {
        return LOCALE_ZH_HANT;
      }
      return LOCALE_ZH_HANS;
    }
    let locales2 = [LOCALE_EN, LOCALE_FR, LOCALE_ES];
    if (messages2 && Object.keys(messages2).length > 0) {
      locales2 = Object.keys(messages2);
    }
    const lang = startsWith(locale, locales2);
    if (lang) {
      return lang;
    }
  }
  class I18n {
    constructor({ locale, fallbackLocale, messages: messages2, watcher, formater: formater2 }) {
      this.locale = LOCALE_EN;
      this.fallbackLocale = LOCALE_EN;
      this.message = {};
      this.messages = {};
      this.watchers = [];
      if (fallbackLocale) {
        this.fallbackLocale = fallbackLocale;
      }
      this.formater = formater2 || defaultFormatter;
      this.messages = messages2 || {};
      this.setLocale(locale || LOCALE_EN);
      if (watcher) {
        this.watchLocale(watcher);
      }
    }
    setLocale(locale) {
      const oldLocale = this.locale;
      this.locale = normalizeLocale(locale, this.messages) || this.fallbackLocale;
      if (!this.messages[this.locale]) {
        this.messages[this.locale] = {};
      }
      this.message = this.messages[this.locale];
      if (oldLocale !== this.locale) {
        this.watchers.forEach((watcher) => {
          watcher(this.locale, oldLocale);
        });
      }
    }
    getLocale() {
      return this.locale;
    }
    watchLocale(fn2) {
      const index2 = this.watchers.push(fn2) - 1;
      return () => {
        this.watchers.splice(index2, 1);
      };
    }
    add(locale, message2, override = true) {
      const curMessages = this.messages[locale];
      if (curMessages) {
        if (override) {
          Object.assign(curMessages, message2);
        } else {
          Object.keys(message2).forEach((key) => {
            if (!hasOwn(curMessages, key)) {
              curMessages[key] = message2[key];
            }
          });
        }
      } else {
        this.messages[locale] = message2;
      }
    }
    f(message2, values, delimiters) {
      return this.formater.interpolate(message2, values, delimiters).join("");
    }
    t(key, locale, values) {
      let message2 = this.message;
      if (typeof locale === "string") {
        locale = normalizeLocale(locale, this.messages);
        locale && (message2 = this.messages[locale]);
      } else {
        values = locale;
      }
      if (!hasOwn(message2, key)) {
        console.warn(`Cannot translate the value of keypath ${key}. Use the value of keypath as default.`);
        return key;
      }
      return this.formater.interpolate(message2[key], values).join("");
    }
  }
  function watchAppLocale(appVm, i18n) {
    if (appVm.$watchLocale) {
      appVm.$watchLocale((newLocale) => {
        i18n.setLocale(newLocale);
      });
    } else {
      appVm.$watch(() => appVm.$locale, (newLocale) => {
        i18n.setLocale(newLocale);
      });
    }
  }
  function getDefaultLocale() {
    if (typeof uni !== "undefined" && uni.getLocale) {
      return uni.getLocale();
    }
    if (typeof global !== "undefined" && global.getLocale) {
      return global.getLocale();
    }
    return LOCALE_EN;
  }
  function initVueI18n(locale, messages2 = {}, fallbackLocale, watcher) {
    if (typeof locale !== "string") {
      const options = [
        messages2,
        locale
      ];
      locale = options[0];
      messages2 = options[1];
    }
    if (typeof locale !== "string") {
      locale = getDefaultLocale();
    }
    if (typeof fallbackLocale !== "string") {
      fallbackLocale = typeof __uniConfig !== "undefined" && __uniConfig.fallbackLocale || LOCALE_EN;
    }
    const i18n = new I18n({
      locale,
      fallbackLocale,
      messages: messages2,
      watcher
    });
    let t2 = (key, values) => {
      if (typeof getApp !== "function") {
        t2 = function(key2, values2) {
          return i18n.t(key2, values2);
        };
      } else {
        let isWatchedAppLocale = false;
        t2 = function(key2, values2) {
          const appVm = getApp().$vm;
          if (appVm) {
            appVm.$locale;
            if (!isWatchedAppLocale) {
              isWatchedAppLocale = true;
              watchAppLocale(appVm, i18n);
            }
          }
          return i18n.t(key2, values2);
        };
      }
      return t2(key, values);
    };
    return {
      i18n,
      f(message2, values, delimiters) {
        return i18n.f(message2, values, delimiters);
      },
      t(key, values) {
        return t2(key, values);
      },
      add(locale2, message2, override = true) {
        return i18n.add(locale2, message2, override);
      },
      watch(fn2) {
        return i18n.watchLocale(fn2);
      },
      getLocale() {
        return i18n.getLocale();
      },
      setLocale(newLocale) {
        return i18n.setLocale(newLocale);
      }
    };
  }
  const en$1 = {
    "uni-countdown.day": "day",
    "uni-countdown.h": "h",
    "uni-countdown.m": "m",
    "uni-countdown.s": "s"
  };
  const zhHans$1 = {
    "uni-countdown.day": "天",
    "uni-countdown.h": "时",
    "uni-countdown.m": "分",
    "uni-countdown.s": "秒"
  };
  const zhHant$1 = {
    "uni-countdown.day": "天",
    "uni-countdown.h": "時",
    "uni-countdown.m": "分",
    "uni-countdown.s": "秒"
  };
  const messages$8 = {
    en: en$1,
    "zh-Hans": zhHans$1,
    "zh-Hant": zhHant$1
  };
  const {
    t: t$2
  } = initVueI18n(messages$8);
  const _sfc_main$2C = {
    name: "UniCountdown",
    emits: ["timeup"],
    props: {
      showDay: {
        type: Boolean,
        default: true
      },
      showHour: {
        type: Boolean,
        default: true
      },
      showMinute: {
        type: Boolean,
        default: true
      },
      showColon: {
        type: Boolean,
        default: true
      },
      start: {
        type: Boolean,
        default: true
      },
      backgroundColor: {
        type: String,
        default: ""
      },
      color: {
        type: String,
        default: "#333"
      },
      fontSize: {
        type: Number,
        default: 14
      },
      splitorColor: {
        type: String,
        default: "#333"
      },
      day: {
        type: Number,
        default: 0
      },
      hour: {
        type: Number,
        default: 0
      },
      minute: {
        type: Number,
        default: 0
      },
      second: {
        type: Number,
        default: 0
      },
      timestamp: {
        type: Number,
        default: 0
      },
      filterShow: {
        type: Object,
        default: {}
      }
    },
    data() {
      return {
        timer: null,
        syncFlag: false,
        d: "00",
        h: "00",
        i: "00",
        s: "00",
        leftTime: 0,
        seconds: 0
      };
    },
    computed: {
      dayText() {
        return t$2("uni-countdown.day");
      },
      hourText(val) {
        return t$2("uni-countdown.h");
      },
      minuteText(val) {
        return t$2("uni-countdown.m");
      },
      secondText(val) {
        return t$2("uni-countdown.s");
      },
      timeStyle() {
        const {
          color,
          backgroundColor,
          fontSize
        } = this;
        return {
          color,
          backgroundColor,
          fontSize: `${fontSize}px`,
          width: `${fontSize * 22 / 14}px`,
          // 按字体大小为 14px 时的比例缩放
          lineHeight: `${fontSize * 20 / 14}px`,
          borderRadius: `${fontSize * 3 / 14}px`
        };
      },
      splitorStyle() {
        const { splitorColor, fontSize, backgroundColor } = this;
        return {
          color: splitorColor,
          fontSize: `${fontSize * 12 / 14}px`,
          margin: backgroundColor ? `${fontSize * 4 / 14}px` : ""
        };
      }
    },
    watch: {
      day(val) {
        this.changeFlag();
      },
      hour(val) {
        this.changeFlag();
      },
      minute(val) {
        this.changeFlag();
      },
      second(val) {
        this.changeFlag();
      },
      start: {
        immediate: true,
        handler(newVal, oldVal) {
          if (newVal) {
            this.startData();
          } else {
            if (!oldVal)
              return;
            clearInterval(this.timer);
          }
        }
      }
    },
    created: function(e2) {
      this.seconds = this.toSeconds(this.timestamp, this.day, this.hour, this.minute, this.second);
      this.countDown();
    },
    unmounted() {
      clearInterval(this.timer);
    },
    methods: {
      toSeconds(timestamp, day, hours, minutes, seconds) {
        if (timestamp) {
          return timestamp - parseInt((/* @__PURE__ */ new Date()).getTime() / 1e3, 10);
        }
        return day * 60 * 60 * 24 + hours * 60 * 60 + minutes * 60 + seconds;
      },
      timeUp() {
        clearInterval(this.timer);
        this.$emit("timeup");
      },
      countDown() {
        let seconds = this.seconds;
        let [day, hour, minute, second] = [0, 0, 0, 0];
        if (seconds > 0) {
          day = Math.floor(seconds / (60 * 60 * 24));
          hour = Math.floor(seconds / (60 * 60)) - day * 24;
          minute = Math.floor(seconds / 60) - day * 24 * 60 - hour * 60;
          second = Math.floor(seconds) - day * 24 * 60 * 60 - hour * 60 * 60 - minute * 60;
        } else {
          this.timeUp();
        }
        this.d = String(day).padStart(this.validFilterShow(this.filterShow.d), "0");
        this.h = String(hour).padStart(this.validFilterShow(this.filterShow.h), "0");
        this.i = String(minute).padStart(this.validFilterShow(this.filterShow.m), "0");
        this.s = String(second).padStart(this.validFilterShow(this.filterShow.s), "0");
      },
      validFilterShow(filter) {
        return filter && filter > 0 ? filter : 2;
      },
      startData() {
        this.seconds = this.toSeconds(this.timestamp, this.day, this.hour, this.minute, this.second);
        if (this.seconds <= 0) {
          this.seconds = this.toSeconds(0, 0, 0, 0, 0);
          this.countDown();
          return;
        }
        clearInterval(this.timer);
        this.countDown();
        this.timer = setInterval(() => {
          this.seconds--;
          if (this.seconds < 0) {
            this.timeUp();
            return;
          }
          this.countDown();
        }, 1e3);
      },
      update() {
        this.startData();
      },
      changeFlag() {
        if (!this.syncFlag) {
          this.seconds = this.toSeconds(this.timestamp, this.day, this.hour, this.minute, this.second);
          this.startData();
          this.syncFlag = true;
        }
      }
    }
  };
  function _sfc_render$2B(_ctx, _cache, $props, $setup, $data, $options) {
    return vue.openBlock(), vue.createElementBlock("view", { class: "uni-countdown" }, [
      $props.showDay ? (vue.openBlock(), vue.createElementBlock(
        "text",
        {
          key: 0,
          style: vue.normalizeStyle([$options.timeStyle]),
          class: "uni-countdown__number"
        },
        vue.toDisplayString($data.d),
        5
        /* TEXT, STYLE */
      )) : vue.createCommentVNode("v-if", true),
      $props.showDay ? (vue.openBlock(), vue.createElementBlock(
        "text",
        {
          key: 1,
          style: vue.normalizeStyle([$options.splitorStyle]),
          class: "uni-countdown__splitor"
        },
        vue.toDisplayString($options.dayText),
        5
        /* TEXT, STYLE */
      )) : vue.createCommentVNode("v-if", true),
      $props.showHour ? (vue.openBlock(), vue.createElementBlock(
        "text",
        {
          key: 2,
          style: vue.normalizeStyle([$options.timeStyle]),
          class: "uni-countdown__number"
        },
        vue.toDisplayString($data.h),
        5
        /* TEXT, STYLE */
      )) : vue.createCommentVNode("v-if", true),
      $props.showHour ? (vue.openBlock(), vue.createElementBlock(
        "text",
        {
          key: 3,
          style: vue.normalizeStyle([$options.splitorStyle]),
          class: "uni-countdown__splitor"
        },
        vue.toDisplayString($props.showColon ? ":" : $options.hourText),
        5
        /* TEXT, STYLE */
      )) : vue.createCommentVNode("v-if", true),
      $props.showMinute ? (vue.openBlock(), vue.createElementBlock(
        "text",
        {
          key: 4,
          style: vue.normalizeStyle([$options.timeStyle]),
          class: "uni-countdown__number"
        },
        vue.toDisplayString($data.i),
        5
        /* TEXT, STYLE */
      )) : vue.createCommentVNode("v-if", true),
      $props.showMinute ? (vue.openBlock(), vue.createElementBlock(
        "text",
        {
          key: 5,
          style: vue.normalizeStyle([$options.splitorStyle]),
          class: "uni-countdown__splitor"
        },
        vue.toDisplayString($props.showColon ? ":" : $options.minuteText),
        5
        /* TEXT, STYLE */
      )) : vue.createCommentVNode("v-if", true),
      vue.createElementVNode(
        "text",
        {
          style: vue.normalizeStyle([$options.timeStyle]),
          class: "uni-countdown__number"
        },
        vue.toDisplayString($data.s),
        5
        /* TEXT, STYLE */
      ),
      !$props.showColon ? (vue.openBlock(), vue.createElementBlock(
        "text",
        {
          key: 6,
          style: vue.normalizeStyle([$options.splitorStyle]),
          class: "uni-countdown__splitor"
        },
        vue.toDisplayString($options.secondText),
        5
        /* TEXT, STYLE */
      )) : vue.createCommentVNode("v-if", true)
    ]);
  }
  const __easycom_0$3 = /* @__PURE__ */ _export_sfc(_sfc_main$2C, [["render", _sfc_render$2B], ["__scopeId", "data-v-c592f7f2"], ["__file", "C:/Users/Administrator/Desktop/Project Folder/ZXHand/ZXHandwritting_APP_uniapp/uni_modules/uni-countdown/components/uni-countdown/uni-countdown.vue"]]);
  const en = {
    "uni-countdown.day": "day",
    "uni-countdown.h": "h",
    "uni-countdown.m": "m",
    "uni-countdown.s": "s"
  };
  const zhHans = {
    "uni-countdown.day": "天",
    "uni-countdown.h": "时",
    "uni-countdown.m": "分",
    "uni-countdown.s": "秒"
  };
  const zhHant = {
    "uni-countdown.day": "天",
    "uni-countdown.h": "時",
    "uni-countdown.m": "分",
    "uni-countdown.s": "秒"
  };
  const messages$7 = {
    en,
    "zh-Hans": zhHans,
    "zh-Hant": zhHant
  };
  const {
    t: t$1
  } = initVueI18n(messages$7);
  const _sfc_main$2B = {
    name: "UniCountdown",
    emits: ["timeup"],
    props: {
      showDay: {
        type: Boolean,
        default: true
      },
      showHour: {
        type: Boolean,
        default: true
      },
      showMinute: {
        type: Boolean,
        default: true
      },
      showColon: {
        type: Boolean,
        default: true
      },
      start: {
        type: Boolean,
        default: true
      },
      backgroundColor: {
        type: String,
        default: ""
      },
      color: {
        type: String,
        default: "#333"
      },
      fontSize: {
        type: Number,
        default: 14
      },
      splitorColor: {
        type: String,
        default: "#333"
      },
      day: {
        type: Number,
        default: 0
      },
      hour: {
        type: Number,
        default: 0
      },
      minute: {
        type: Number,
        default: 0
      },
      second: {
        type: Number,
        default: 0
      },
      timestamp: {
        type: Number,
        default: 0
      }
    },
    data() {
      return {
        timer: null,
        syncFlag: false,
        d: "00",
        h: "00",
        i: "00",
        s: "00",
        leftTime: 0,
        seconds: 0
      };
    },
    computed: {
      dayText() {
        return t$1("uni-countdown.day");
      },
      hourText(val) {
        return t$1("uni-countdown.h");
      },
      minuteText(val) {
        return t$1("uni-countdown.m");
      },
      secondText(val) {
        return t$1("uni-countdown.s");
      },
      timeStyle() {
        const {
          color,
          backgroundColor,
          fontSize
        } = this;
        return {
          color,
          backgroundColor,
          fontSize: `${fontSize}px`,
          width: `${fontSize * 22 / 14}px`,
          // 按字体大小为 14px 时的比例缩放
          lineHeight: `${fontSize * 20 / 14}px`,
          borderRadius: `${fontSize * 3 / 14}px`
        };
      },
      splitorStyle() {
        const { splitorColor, fontSize, backgroundColor } = this;
        return {
          color: splitorColor,
          fontSize: `${fontSize * 12 / 14}px`,
          margin: backgroundColor ? `${fontSize * 4 / 14}px` : ""
        };
      }
    },
    watch: {
      day(val) {
        this.changeFlag();
      },
      hour(val) {
        this.changeFlag();
      },
      minute(val) {
        this.changeFlag();
      },
      second(val) {
        this.changeFlag();
      },
      start: {
        immediate: true,
        handler(newVal, oldVal) {
          if (newVal) {
            this.startData();
          } else {
            if (!oldVal)
              return;
            clearInterval(this.timer);
          }
        }
      }
    },
    created: function(e2) {
      this.seconds = this.toSeconds(this.timestamp, this.day, this.hour, this.minute, this.second);
      this.countDown();
    },
    unmounted() {
      clearInterval(this.timer);
    },
    methods: {
      toSeconds(timestamp, day, hours, minutes, seconds) {
        if (timestamp) {
          return timestamp - parseInt((/* @__PURE__ */ new Date()).getTime() / 1e3, 10);
        }
        return day * 60 * 60 * 24 + hours * 60 * 60 + minutes * 60 + seconds;
      },
      timeUp() {
        clearInterval(this.timer);
        this.$emit("timeup");
      },
      countDown() {
        let seconds = this.seconds;
        let [day, hour, minute, second] = [0, 0, 0, 0];
        if (seconds > 0) {
          day = Math.floor(seconds / (60 * 60 * 24));
          hour = Math.floor(seconds / (60 * 60)) - day * 24;
          minute = Math.floor(seconds / 60) - day * 24 * 60 - hour * 60;
          second = Math.floor(seconds) - day * 24 * 60 * 60 - hour * 60 * 60 - minute * 60;
        } else {
          this.timeUp();
        }
        if (day < 10) {
          day = "0" + day;
        }
        if (hour < 10) {
          hour = "0" + hour;
        }
        if (minute < 10) {
          minute = "0" + minute;
        }
        if (second < 10) {
          second = "0" + second;
        }
        this.d = day;
        this.h = hour;
        this.i = minute;
        this.s = second;
      },
      startData() {
        this.seconds = this.toSeconds(this.timestamp, this.day, this.hour, this.minute, this.second);
        if (this.seconds <= 0) {
          this.seconds = this.toSeconds(0, 0, 0, 0, 0);
          this.countDown();
          return;
        }
        clearInterval(this.timer);
        this.countDown();
        this.timer = setInterval(() => {
          this.seconds--;
          if (this.seconds < 0) {
            this.timeUp();
            return;
          }
          this.countDown();
        }, 1e3);
      },
      update() {
        this.startData();
      },
      changeFlag() {
        if (!this.syncFlag) {
          this.seconds = this.toSeconds(this.timestamp, this.day, this.hour, this.minute, this.second);
          this.startData();
          this.syncFlag = true;
        }
      }
    }
  };
  function _sfc_render$2A(_ctx, _cache, $props, $setup, $data, $options) {
    return vue.openBlock(), vue.createElementBlock("view", { class: "uni-countdown" }, [
      $props.showDay ? (vue.openBlock(), vue.createElementBlock(
        "text",
        {
          key: 0,
          style: vue.normalizeStyle([$options.timeStyle]),
          class: "uni-countdown__number"
        },
        vue.toDisplayString($data.d),
        5
        /* TEXT, STYLE */
      )) : vue.createCommentVNode("v-if", true),
      $props.showDay ? (vue.openBlock(), vue.createElementBlock(
        "text",
        {
          key: 1,
          style: vue.normalizeStyle([$options.splitorStyle]),
          class: "uni-countdown__splitor"
        },
        vue.toDisplayString($options.dayText),
        5
        /* TEXT, STYLE */
      )) : vue.createCommentVNode("v-if", true),
      $props.showHour ? (vue.openBlock(), vue.createElementBlock(
        "text",
        {
          key: 2,
          style: vue.normalizeStyle([$options.timeStyle]),
          class: "uni-countdown__number"
        },
        vue.toDisplayString($data.h),
        5
        /* TEXT, STYLE */
      )) : vue.createCommentVNode("v-if", true),
      $props.showHour ? (vue.openBlock(), vue.createElementBlock(
        "text",
        {
          key: 3,
          style: vue.normalizeStyle([$options.splitorStyle]),
          class: "uni-countdown__splitor"
        },
        vue.toDisplayString($props.showColon ? ":" : $options.hourText),
        5
        /* TEXT, STYLE */
      )) : vue.createCommentVNode("v-if", true),
      $props.showMinute ? (vue.openBlock(), vue.createElementBlock(
        "text",
        {
          key: 4,
          style: vue.normalizeStyle([$options.timeStyle]),
          class: "uni-countdown__number"
        },
        vue.toDisplayString($data.i),
        5
        /* TEXT, STYLE */
      )) : vue.createCommentVNode("v-if", true),
      $props.showMinute ? (vue.openBlock(), vue.createElementBlock(
        "text",
        {
          key: 5,
          style: vue.normalizeStyle([$options.splitorStyle]),
          class: "uni-countdown__splitor"
        },
        vue.toDisplayString($props.showColon ? ":" : $options.minuteText),
        5
        /* TEXT, STYLE */
      )) : vue.createCommentVNode("v-if", true),
      vue.createElementVNode(
        "text",
        {
          style: vue.normalizeStyle([$options.timeStyle]),
          class: "uni-countdown__number"
        },
        vue.toDisplayString($data.s),
        5
        /* TEXT, STYLE */
      ),
      !$props.showColon ? (vue.openBlock(), vue.createElementBlock(
        "text",
        {
          key: 6,
          style: vue.normalizeStyle([$options.splitorStyle]),
          class: "uni-countdown__splitor"
        },
        vue.toDisplayString($options.secondText),
        5
        /* TEXT, STYLE */
      )) : vue.createCommentVNode("v-if", true)
    ]);
  }
  const UniCountdown = /* @__PURE__ */ _export_sfc(_sfc_main$2B, [["render", _sfc_render$2A], ["__scopeId", "data-v-0bd4ae46"], ["__file", "C:/Users/Administrator/node_modules/@dcloudio/uni-ui/lib/uni-countdown/uni-countdown.vue"]]);
  const _imports_0$7 = "/static/img/fir.png";
  const _sfc_main$2A = {
    components: {
      UniCountdown
    },
    data() {
      return {
        testHour: 0,
        testMinute: 0,
        testSecond: 0,
        start: false
      };
    },
    props: {
      online: Number,
      techerimg: String,
      biaoti: String,
      laoshi: String,
      star: String,
      end: String,
      hearimg: String,
      teachername: String,
      hours: Number,
      minutes: Number,
      seconds: Number,
      pers: Number,
      money: String,
      imgs: Array,
      signedUp: Number
      // 是否已报名
    },
    computed: {
      signupText() {
        return this.signedUp ? "已报名" : "立即报名";
      }
    },
    mounted() {
      this.updateCountdown();
    },
    watch: {
      hours: "updateCountdown",
      minutes: "updateCountdown",
      seconds: "updateCountdown"
    },
    methods: {
      printTime() {
        formatAppLog("log", "at components/ActivityItem/ActivityItem.vue:122", "Hours:", typeof this.hours);
        formatAppLog("log", "at components/ActivityItem/ActivityItem.vue:123", "Minutes:", typeof this.minutes);
        formatAppLog("log", "at components/ActivityItem/ActivityItem.vue:124", "Seconds:", typeof this.seconds);
      },
      updateCountdown() {
        this.testHour = this.hours;
        this.testMinute = this.minutes;
        this.testSecond = this.seconds;
        this.start = true;
      },
      handleSignup() {
        this.$emit("signup", this);
      }
    }
  };
  function _sfc_render$2z(_ctx, _cache, $props, $setup, $data, $options) {
    const _component_uni_countdown = resolveEasycom(vue.resolveDynamicComponent("uni-countdown"), __easycom_0$3);
    return vue.openBlock(), vue.createElementBlock(
      vue.Fragment,
      null,
      [
        vue.createCommentVNode(" Course registration card "),
        vue.createElementVNode("view", { class: "courseRegistrationCard" }, [
          vue.createElementVNode(
            "view",
            {
              class: "courseRegistrationCard_bg",
              style: vue.normalizeStyle({ backgroundColor: $props.hours === 0 && $props.minutes === 0 && $props.seconds === 0 ? "gray" : "" })
            },
            null,
            4
            /* STYLE */
          ),
          vue.createElementVNode(
            "view",
            {
              class: "courseRegistrationCard_status",
              style: vue.normalizeStyle({ top: $props.hours === 0 && $props.minutes === 0 && $props.seconds === 0 ? "-6rpx" : 0, right: $props.hours === 0 && $props.minutes === 0 && $props.seconds === 0 ? "-12rpx" : 0 })
            },
            vue.toDisplayString($props.hours === 0 && $props.minutes === 0 && $props.seconds === 0 ? "已结束" : $props.online === 1 ? "线上" : "线下"),
            5
            /* TEXT, STYLE */
          ),
          vue.createElementVNode("view", { class: "techerImg" }, [
            vue.createElementVNode("img", {
              src: "https://lanhu.oss-cn-beijing.aliyuncs.com/SketchPng13a2fb02e015caf1325ed0ae70a60ac4263056e78d6de603517f5fae96ceca41",
              alt: ""
            })
          ]),
          vue.createElementVNode("view", { class: "courseInformation" }, [
            vue.createElementVNode(
              "view",
              { class: "courseTitle" },
              vue.toDisplayString($props.biaoti),
              1
              /* TEXT */
            ),
            vue.createElementVNode(
              "view",
              { class: "courseTeacher" },
              vue.toDisplayString($props.laoshi),
              1
              /* TEXT */
            ),
            vue.createElementVNode(
              "view",
              { class: "courseTime" },
              "开课时间: " + vue.toDisplayString($props.star) + " - " + vue.toDisplayString($props.end),
              1
              /* TEXT */
            ),
            vue.createElementVNode("view", { class: "lecturerInfo" }, [
              vue.createElementVNode("img", {
                src: $props.hearimg,
                alt: ""
              }, null, 8, ["src"]),
              vue.createElementVNode("view", { class: "lecturer_name" }, [
                vue.createElementVNode(
                  "text",
                  null,
                  vue.toDisplayString($props.teachername),
                  1
                  /* TEXT */
                ),
                vue.createElementVNode("text", { style: { "font-size": "20rpx", "margin-top": "10rpx" } }, "授课")
              ]),
              vue.createElementVNode("view", { class: "remainingTime" }, [
                vue.createElementVNode("text", { style: { "font-size": "24rpx" } }, "距结束还剩:"),
                vue.createCommentVNode(' <view class="timetextbox">\r\n            <text class="time-num">{{ hours }}</text>\r\n            <text style="font-size: 20rpx; background-color:#fff; color: #F53C38;">:</text>\r\n            <text class="time-num">{{ minutes }}</text>\r\n            <text style="font-size: 20rpx; background-color:#fff; color: #F53C38;">:</text>\r\n            <text class="time-num">{{ seconds }}</text>\r\n          </view> '),
                vue.createVNode(_component_uni_countdown, {
                  "show-day": false,
                  hour: $data.testHour,
                  minute: $data.testMinute,
                  second: $data.testSecond,
                  color: "#FFFFFF",
                  "background-color": "#007AFF"
                }, null, 8, ["hour", "minute", "second"])
              ])
            ]),
            vue.createElementVNode("view", { class: "endbaoming" }, [
              vue.createElementVNode("view", { class: "peopers" }, [
                vue.createElementVNode("image", {
                  style: { "width": "24rpx", "height": "32rpx" },
                  src: _imports_0$7,
                  mode: "aspectFit"
                }),
                vue.createCommentVNode(' <img src="https://lanhu.oss-cn-beijing.aliyuncs.com/SketchPnge82cb54448fe7b82f1100cbe1494f08248762c97952c5f2a8f4b9a26a743a00a" alt="" /> '),
                vue.createElementVNode(
                  "view",
                  {
                    class: "peotext",
                    style: { "font-size": "20rpx" }
                  },
                  vue.toDisplayString($props.pers) + "人报名",
                  1
                  /* TEXT */
                ),
                vue.createElementVNode("view", { class: "imgbox" }, [
                  vue.createCommentVNode(` <img v-for="(img, idx) in imgs" :key="idx" :src="img.avatar" alt="" :style="{ right: (idx * 20) + 'rpx', zIndex: 10 - idx }" /> `),
                  (vue.openBlock(true), vue.createElementBlock(
                    vue.Fragment,
                    null,
                    vue.renderList($props.imgs, (img, idx) => {
                      return vue.openBlock(), vue.createElementBlock("image", {
                        src: img.avatar ? img.avatar : "",
                        key: idx,
                        style: vue.normalizeStyle({
                          position: "absolute",
                          right: `calc(20rpx * ${idx})`,
                          zIndex: 10 - idx,
                          width: "30rpx",
                          height: "30rpx",
                          borderRadius: "50%"
                        })
                      }, null, 12, ["src"]);
                    }),
                    128
                    /* KEYED_FRAGMENT */
                  ))
                ])
              ]),
              vue.createElementVNode("view", { class: "perbtn" }, [
                vue.createElementVNode(
                  "view",
                  { class: "permoney" },
                  vue.toDisplayString($props.money ?? 0 <= 0 ? "免费" : "￥" + ($props.money ?? 0)),
                  1
                  /* TEXT */
                ),
                vue.createElementVNode(
                  "view",
                  {
                    style: vue.normalizeStyle($props.signedUp ? { backgroundColor: "#999999" } : { background: "#ff9e02" }),
                    class: "gobtn",
                    onClick: _cache[0] || (_cache[0] = (...args) => $options.handleSignup && $options.handleSignup(...args))
                  },
                  vue.toDisplayString($options.signupText),
                  5
                  /* TEXT, STYLE */
                )
              ])
            ])
          ])
        ])
      ],
      2112
      /* STABLE_FRAGMENT, DEV_ROOT_FRAGMENT */
    );
  }
  const ActivityItem = /* @__PURE__ */ _export_sfc(_sfc_main$2A, [["render", _sfc_render$2z], ["__scopeId", "data-v-bd6e87e7"], ["__file", "C:/Users/Administrator/Desktop/Project Folder/ZXHand/ZXHandwritting_APP_uniapp/components/ActivityItem/ActivityItem.vue"]]);
  const _imports_1$2 = "/static/img/saoma.png";
  const _imports_2$1 = "/static/img/sousuo.png";
  const _imports_2 = "/static/img/xiaoxi.png";
  const _imports_3 = "/static/img/add.png";
  const _imports_0$6 = "/static/img/noAct.png";
  const _imports_0$5 = "/static/img/noMes.png";
  const _sfc_main$2z = {
    __name: "home",
    setup(__props, { expose: __expose }) {
      __expose();
      const store = useStore();
      const token = store.token;
      const images = vue.computed(() => store.images);
      const listdataIndex = vue.computed(() => store.listdataIndex);
      const userInfo = vue.computed(() => store.userinfo);
      const infoList = vue.computed(() => store.infoList);
      const studentAndstyle = vue.ref({});
      const intervalId = vue.ref(null);
      const hours = vue.ref(0);
      const minutes = vue.ref(0);
      const seconds = vue.ref(0);
      const params = {
        page: 1,
        // 当前页面
        limit: 7,
        // 每页数据条数
        isindex: 1
        // 是否是首页数据
      };
      const fetchData = async () => {
        try {
          const responses = await Promise.all([
            fetchActivityCourseList(params),
            // 传入 page, limit, isindex
            fetchBannerList(),
            fetchNewsList(),
            fetchMyStyle()
          ]);
          const listdataIndex2 = responses[0].items.map((item) => ({
            ...item,
            // 保留原有的属性
            timerId: null,
            //用于存储定时器ID
            hours: 0,
            // 增加时字段，初始化为0
            minutes: 0,
            // 增加分字段，初始化为0
            seconds: 0
            // 增加秒字段，初始化为0
          }));
          store.setListdataIndex(listdataIndex2);
          store.setImages(responses[1].items);
          const infoList2 = responses[2].items.map((item) => ({
            ...item,
            // 保留原有的属性
            titleimg: item.titleimg || "../../static/img/jinghao.png",
            image_input: item.image_input || "https://lanhu.oss-cn-beijing.aliyuncs.com/SketchPng9124bf95026b34308d6bd993d7c3774578aa0f9fdf293cc08d4cb043bc1ba5a8",
            ressImg: item.ressImg || "@/static/img/add.png",
            jiantouimg: item.jiantouimg || "https://lanhu.oss-cn-beijing.aliyuncs.com/SketchPng6deab9d71966dbbdc8297bb42543232fd5ab80e8f1b6e7650f9a66310b4f656e"
          }));
          store.setInfoList(infoList2);
          studentAndstyle.value = responses[3].data;
        } catch (error2) {
          formatAppLog("error", "at pages/pagesall/home.vue:230", "获取数据时发生错误:", error2);
        }
      };
      onPullDownRefresh(() => {
        fetchData();
        startCountdown2();
        uni.stopPullDownRefresh();
      });
      onShow(() => {
        fetchData();
        startCountdown2();
      });
      const statusBarHeight = vue.ref();
      onLoad(() => {
        statusBarHeight.value = getApp().globalData.top;
      });
      vue.onUnmounted(() => {
      });
      const goToDetail = (item) => {
        uni.navigateTo({
          url: `/pages/pagesall/home/informationDetailsmess?id=${item.id}`
          // 确保将 item.id 修改为您的详情页所需的参数
        });
      };
      const activityLists = () => {
        uni.switchTab({
          url: "/pages/pagesall/oper"
        });
      };
      const formatDate = (dateString) => {
        const date2 = new Date(dateString);
        const year = date2.getFullYear();
        const month = String(date2.getMonth() + 1).padStart(2, "0");
        const day = String(date2.getDate()).padStart(2, "0");
        return `${year}.${month}.${day}`;
      };
      const formatTime = (value) => {
        return value.toString().padStart(2, "0");
      };
      const updateCountdown = () => {
        const currentDateTimestampInMilliseconds = (/* @__PURE__ */ new Date()).getTime();
        const now2 = Math.floor(currentDateTimestampInMilliseconds / 1e3);
        listdataIndex.value.forEach((item) => {
          if (!isNaN(item.end_time)) {
            const timeDiff = item.end_time - now2;
            if (timeDiff > 0) {
              item.hours = Math.floor(timeDiff / 3600);
              item.minutes = Math.floor(timeDiff % 3600 / 60);
              item.seconds = timeDiff % 60;
              if (!item.timerId) {
                item.timerId = setInterval(() => {
                  updateCountdown();
                }, 1e3);
              }
            } else {
              item.hours = item.minutes = item.seconds = 0;
              clearTimer(item);
            }
          } else {
            item.hours = item.minutes = item.seconds = 0;
          }
        });
        store.setListdataIndex(listdataIndex.value);
      };
      const clearTimer = (item) => {
        if (item.timerId) {
          clearInterval(item.timerId);
          item.timerId = null;
          formatAppLog("log", "at pages/pagesall/home.vue:328", `活动 ${item.id} 的定时器已清除，时间到达。`);
        }
      };
      const startCountdown2 = () => {
        updateCountdown();
        intervalId.value = setInterval(updateCountdown, 1e3);
      };
      const btnscan = () => {
        uni.scanCode({
          success: (res) => {
            formatAppLog("log", "at pages/pagesall/home.vue:340", "条码类型：" + res.scanType);
            formatAppLog("log", "at pages/pagesall/home.vue:341", "条码内容：" + res.result);
          },
          fail: (error2) => {
            formatAppLog("error", "at pages/pagesall/home.vue:344", "扫码失败", error2);
            uni.showToast({
              title: "扫码失败",
              icon: "error",
              duration: 2e3
            });
          }
        });
      };
      const btnsearch = () => {
        uni.navigateTo({
          url: "/pages/pagesall/home/search"
        });
      };
      const btnmess = () => {
        uni.navigateTo({
          url: "/pages/pagesall/home/message"
        });
      };
      const informationLists = () => {
        uni.navigateTo({
          url: "/pages/pagesall/home/informationDetails"
        });
      };
      const handleSignup = (id) => {
        const paramsString = encodeURIComponent(JSON.stringify(params));
        uni.navigateTo({
          url: `/pages/pagesall/home/signUp?id=${id}&params=${paramsString}`
          // 确保替换为相应的页面路径
        });
      };
      const swiper_click = (index2) => {
        formatAppLog("log", "at pages/pagesall/home.vue:379", "当前点击的轮播图下标:", index2);
        store.setSelectedSwiperIndex(index2);
        uni.navigateTo({
          url: "/pages/pagesall/home/game"
        });
      };
      const __returned__ = { store, token, images, listdataIndex, userInfo, infoList, studentAndstyle, intervalId, hours, minutes, seconds, params, fetchData, statusBarHeight, goToDetail, activityLists, formatDate, formatTime, updateCountdown, clearTimer, startCountdown: startCountdown2, btnscan, btnsearch, btnmess, informationLists, handleSignup, swiper_click, ref: vue.ref, onMounted: vue.onMounted, onUnmounted: vue.onUnmounted, computed: vue.computed, watch: vue.watch, watchEffect: vue.watchEffect, get ActivityItem() {
        return ActivityItem;
      }, get useStore() {
        return useStore;
      }, get onLoad() {
        return onLoad;
      }, get onShow() {
        return onShow;
      }, get onPullDownRefresh() {
        return onPullDownRefresh;
      }, get fetchActivityCourseList() {
        return fetchActivityCourseList;
      }, get fetchBannerList() {
        return fetchBannerList;
      }, get fetchNewsList() {
        return fetchNewsList;
      }, get fetchMyStyle() {
        return fetchMyStyle;
      } };
      Object.defineProperty(__returned__, "__isScriptSetup", { enumerable: false, value: true });
      return __returned__;
    }
  };
  function _sfc_render$2y(_ctx, _cache, $props, $setup, $data, $options) {
    return vue.openBlock(), vue.createElementBlock("view", { class: "homePage" }, [
      vue.createElementVNode(
        "view",
        {
          style: vue.normalizeStyle("height:" + ($setup.statusBarHeight + 5) + "px;")
        },
        null,
        4
        /* STYLE */
      ),
      vue.createElementVNode("view", { class: "titleHome" }, [
        vue.createElementVNode("view", { class: "nameId" }, [
          vue.createElementVNode("view", { class: "head" }, [
            vue.createElementVNode("img", {
              style: { "width": "32px", "height": "32px", "border-radius": "50%" },
              src: $setup.userInfo.avatar
            }, null, 8, ["src"])
          ]),
          vue.createElementVNode("view", { class: "name" }, [
            vue.createElementVNode(
              "text",
              { class: "textname" },
              vue.toDisplayString($setup.userInfo.nickname),
              1
              /* TEXT */
            ),
            vue.createElementVNode(
              "text",
              { class: "textid" },
              "ID:" + vue.toDisplayString($setup.userInfo.id),
              1
              /* TEXT */
            )
          ]),
          vue.createElementVNode(
            "view",
            { class: "classID" },
            vue.toDisplayString($setup.userInfo.classly_name),
            1
            /* TEXT */
          )
        ]),
        vue.createElementVNode("view", { class: "buttonImg" }, [
          vue.createElementVNode("view", {
            class: "btnimg1",
            onClick: $setup.btnscan
          }, [
            vue.createElementVNode("image", {
              style: { "width": "36rpx", "height": "36rpx" },
              src: _imports_1$2,
              alt: ""
            })
          ]),
          vue.createElementVNode("view", {
            class: "btnimg2",
            onClick: $setup.btnsearch
          }, [
            vue.createElementVNode("image", {
              style: { "width": "36rpx", "height": "36rpx" },
              src: _imports_2$1,
              alt: ""
            })
          ]),
          vue.createElementVNode("view", {
            class: "btnimg3",
            onClick: $setup.btnmess
          }, [
            vue.createElementVNode("image", {
              style: { "width": "36rpx", "height": "36rpx" },
              src: _imports_2,
              alt: ""
            })
          ])
        ])
      ]),
      vue.createElementVNode("view", { class: "posit" }, [
        vue.createElementVNode("img", {
          src: _imports_3,
          alt: ""
        }),
        vue.createElementVNode(
          "text",
          { class: "postext" },
          vue.toDisplayString($setup.userInfo.school_name),
          1
          /* TEXT */
        )
      ]),
      vue.createElementVNode("swiper", {
        class: "swiper-container",
        "indicator-dots": "",
        autoplay: "",
        interval: "3000",
        circular: "",
        "indicator-color": "#ddd",
        "indicator-active-color": "#333"
      }, [
        (vue.openBlock(true), vue.createElementBlock(
          vue.Fragment,
          null,
          vue.renderList($setup.images, (item, index2) => {
            return vue.openBlock(), vue.createElementBlock("swiper-item", {
              key: index2,
              onClick: () => $setup.swiper_click(index2 + 1)
            }, [
              vue.createElementVNode("image", {
                src: item.thumb,
                class: "swiper-image"
              }, null, 8, ["src"])
            ], 8, ["onClick"]);
          }),
          128
          /* KEYED_FRAGMENT */
        ))
      ]),
      vue.createElementVNode("view", { class: "showbox" }, [
        vue.createElementVNode("view", { class: "showimg" }, [
          vue.createElementVNode("img", {
            src: $setup.studentAndstyle.logo,
            alt: "",
            class: "showimg1"
          }, null, 8, ["src"])
        ]),
        vue.createElementVNode("view", { class: "showtext" }, [
          vue.createElementVNode(
            "text",
            { class: "text-content" },
            vue.toDisplayString($setup.studentAndstyle.remark),
            1
            /* TEXT */
          )
        ])
      ]),
      vue.createElementVNode("view", { class: "works" }, [
        vue.createElementVNode("text", { class: "worktext" }, "优秀作品"),
        vue.createElementVNode("view", { class: "worksImgs" }, [
          (vue.openBlock(true), vue.createElementBlock(
            vue.Fragment,
            null,
            vue.renderList($setup.studentAndstyle.nice, (item, index2) => {
              return vue.openBlock(), vue.createElementBlock("view", {
                class: "worksimgbox",
                key: index2
              }, [
                vue.createElementVNode("image", {
                  style: { "width": "198rpx", "height": "122rpx", "margin-top": "12rpx" },
                  src: item.sub_image,
                  mode: "aspectFill"
                }, null, 8, ["src"])
              ]);
            }),
            128
            /* KEYED_FRAGMENT */
          ))
        ])
      ]),
      vue.createElementVNode("view", { class: "students" }, [
        vue.createElementVNode("text", { class: "stutext" }, "学员风采"),
        vue.createElementVNode("view", { class: "stusImgs" }, [
          (vue.openBlock(true), vue.createElementBlock(
            vue.Fragment,
            null,
            vue.renderList($setup.studentAndstyle.stud, (item, index2) => {
              return vue.openBlock(), vue.createElementBlock("view", {
                class: "stuimgbox",
                key: index2
              }, [
                vue.createElementVNode("image", {
                  style: { "width": "108rpx", "height": "108rpx", "border-radius": "32px", "margin-top": "-4px", "margin-left": "-2px" },
                  src: item.avatar,
                  mode: "aspectFill"
                }, null, 8, ["src"])
              ]);
            }),
            128
            /* KEYED_FRAGMENT */
          ))
        ])
      ]),
      vue.createElementVNode("view", { class: "actiClass" }, [
        vue.createElementVNode("view", { class: "actText" }, [
          vue.createElementVNode("text", null, "活动课"),
          vue.createElementVNode("text", {
            style: { "font-size": "24rpx", "color": "#666666" },
            onClick: $setup.activityLists
          }, "更多")
        ]),
        $setup.listdataIndex.length > 0 ? (vue.openBlock(), vue.createElementBlock("view", {
          key: 0,
          style: { "height": "500rpx", "overflow": "hidden" }
        }, [
          (vue.openBlock(true), vue.createElementBlock(
            vue.Fragment,
            null,
            vue.renderList($setup.listdataIndex, (item, index2) => {
              var _a, _b;
              return vue.openBlock(), vue.createBlock($setup["ActivityItem"], {
                key: index2,
                online: item.is_online,
                techerimg: item.avatar,
                biaoti: item.title,
                laoshi: item.description,
                star: item.s_time,
                end: item.e_time,
                hearimg: item.teacher_avatar,
                teachername: item.teacher_name,
                hours: item.hours,
                minutes: item.minutes,
                seconds: item.seconds,
                pers: ((_a = item.signup_member) == null ? void 0 : _a.total) || 0,
                money: item.price,
                imgs: ((_b = item.signup_member) == null ? void 0 : _b.items) || [],
                signedUp: item.hadSignup,
                onSignup: () => $setup.handleSignup(item.id)
              }, null, 8, ["online", "techerimg", "biaoti", "laoshi", "star", "end", "hearimg", "teachername", "hours", "minutes", "seconds", "pers", "money", "imgs", "signedUp", "onSignup"]);
            }),
            128
            /* KEYED_FRAGMENT */
          ))
        ])) : (vue.openBlock(), vue.createElementBlock("view", {
          key: 1,
          class: "kong",
          style: { "display": "flex", "justify-content": "center", "align-items": "center", "height": "500rpx" }
        }, [
          vue.createElementVNode("image", {
            style: { "width": "400rpx", "height": "400rpx" },
            src: _imports_0$6,
            mode: "aspectFit"
          })
        ]))
      ]),
      vue.createElementVNode("view", { class: "infobox" }, [
        vue.createElementVNode("view", { class: "infoText" }, [
          vue.createElementVNode("text", null, "资讯"),
          vue.createElementVNode("text", {
            style: { "font-size": "24rpx", "color": "#666666" },
            onClick: $setup.informationLists
          }, "更多")
        ]),
        $setup.infoList.length > 0 ? (vue.openBlock(), vue.createElementBlock("view", {
          key: 0,
          style: { "overflow": "hidden", "height": "300rpx" }
        }, [
          (vue.openBlock(true), vue.createElementBlock(
            vue.Fragment,
            null,
            vue.renderList($setup.infoList, (item, index2) => {
              return vue.openBlock(), vue.createElementBlock("view", {
                class: "infolistbox",
                key: index2,
                onClick: ($event) => $setup.goToDetail(item)
              }, [
                vue.createElementVNode("view", { class: "infostr" }, [
                  vue.createElementVNode("view", { class: "huatibox" }, [
                    vue.createElementVNode("img", {
                      src: item.titleimg,
                      alt: ""
                    }, null, 8, ["src"]),
                    vue.createElementVNode(
                      "text",
                      { style: { "font-size": "32rpx", "font-weight": "500", "overflow": "hidden", "white-space": "nowrap", "text-overflow": "ellipsis" } },
                      vue.toDisplayString(item.title),
                      1
                      /* TEXT */
                    )
                  ]),
                  vue.createElementVNode("view", { class: "paddbox" }, [
                    vue.createElementVNode(
                      "view",
                      { class: "titleText" },
                      vue.toDisplayString(item.description),
                      1
                      /* TEXT */
                    ),
                    vue.createElementVNode("view", { class: "huatibox" }, [
                      vue.createElementVNode("img", {
                        src: item.image_input,
                        alt: ""
                      }, null, 8, ["src"]),
                      vue.createElementVNode(
                        "text",
                        { style: { "font-weight": "400", "font-size": "24rpx", "color": "#666666", "margin-left": "6px" } },
                        vue.toDisplayString(item.addtime || "2022-01-01"),
                        1
                        /* TEXT */
                      )
                    ]),
                    vue.createElementVNode("view", { class: "huatibox" }, [
                      vue.createElementVNode("img", {
                        src: item.ressImg,
                        alt: ""
                      }, null, 8, ["src"]),
                      vue.createElementVNode(
                        "text",
                        { style: { "font-weight": "400", "font-size": "24rpx", "margin-left": "6px" } },
                        vue.toDisplayString(item.school_name || "http://www.baidu.com"),
                        1
                        /* TEXT */
                      )
                    ])
                  ])
                ]),
                vue.createElementVNode("view", { class: "infoImg" }, [
                  vue.createElementVNode(
                    "view",
                    {
                      class: "proNum",
                      style: vue.normalizeStyle({ opacity: item.views === 0 ? 0 : 1 })
                    },
                    [
                      vue.createElementVNode(
                        "text",
                        { style: { "font-weight": "400", "font-size": "24rpx", "color": "#666666" } },
                        vue.toDisplayString(item.views) + "人已观看 ",
                        1
                        /* TEXT */
                      ),
                      vue.createElementVNode("img", {
                        src: item.jiantouimg,
                        alt: "",
                        style: { "width": "8rpx", "height": "16rpx" }
                      }, null, 8, ["src"])
                    ],
                    4
                    /* STYLE */
                  ),
                  vue.createElementVNode("view", { class: "proImg" }, [
                    vue.createElementVNode("img", {
                      src: item.thumb,
                      alt: ""
                    }, null, 8, ["src"])
                  ])
                ])
              ], 8, ["onClick"]);
            }),
            128
            /* KEYED_FRAGMENT */
          ))
        ])) : (vue.openBlock(), vue.createElementBlock("view", {
          key: 1,
          class: "kong",
          style: { "display": "flex", "justify-content": "center", "align-items": "center", "height": "500rpx" }
        }, [
          vue.createElementVNode("image", {
            style: { "width": "400rpx", "height": "400rpx" },
            src: _imports_0$5,
            mode: "aspectFit"
          })
        ]))
      ])
    ]);
  }
  const PagesPagesallHome = /* @__PURE__ */ _export_sfc(_sfc_main$2z, [["render", _sfc_render$2y], ["__scopeId", "data-v-a21552ae"], ["__file", "C:/Users/Administrator/Desktop/Project Folder/ZXHand/ZXHandwritting_APP_uniapp/pages/pagesall/home.vue"]]);
  const _sfc_main$2y = {
    components: {}
  };
  function _sfc_render$2x(_ctx, _cache, $props, $setup, $data, $options) {
    return vue.openBlock(), vue.createElementBlock("view", { class: "timeline" }, [
      vue.renderSlot(_ctx.$slots, "default", {}, void 0, true)
    ]);
  }
  const timeline = /* @__PURE__ */ _export_sfc(_sfc_main$2y, [["render", _sfc_render$2x], ["__scopeId", "data-v-a4098a69"], ["__file", "C:/Users/Administrator/Desktop/Project Folder/ZXHand/ZXHandwritting_APP_uniapp/components/chenbin-timeline/timeLine.vue"]]);
  const _sfc_main$2x = {
    props: {
      leftTime: {
        default: ""
      },
      color: {
        default: ""
      },
      leftlist1: {
        default: ""
      },
      leftlist2: {
        default: ""
      },
      leftlist3: {
        default: ""
      }
    },
    data() {
      return {};
    }
  };
  function _sfc_render$2w(_ctx, _cache, $props, $setup, $data, $options) {
    return vue.openBlock(), vue.createElementBlock("view", { class: "timelineItem" }, [
      vue.createElementVNode("view", { class: "timeItem" }, [
        vue.createElementVNode("view", { class: "line" }, [
          vue.createElementVNode(
            "view",
            {
              class: "out",
              style: vue.normalizeStyle({ background: $props.color == "" ? "" : $props.color })
            },
            [
              vue.createElementVNode(
                "view",
                {
                  class: "inner",
                  style: vue.normalizeStyle({ background: $props.color == "" ? "" : $props.color })
                },
                null,
                4
                /* STYLE */
              )
            ],
            4
            /* STYLE */
          )
        ]),
        vue.createElementVNode("view", {
          class: "leftTime",
          style: { "font-weight": "500", "font-size": "28rpx", "color": "#000000" }
        }, [
          vue.createTextVNode(
            vue.toDisplayString($props.leftTime) + " ",
            1
            /* TEXT */
          ),
          $props.leftlist1 !== "" ? (vue.openBlock(), vue.createElementBlock(
            "view",
            {
              key: 0,
              class: "leftlist1"
            },
            vue.toDisplayString($props.leftlist1),
            1
            /* TEXT */
          )) : vue.createCommentVNode("v-if", true),
          $props.leftlist2 !== "" ? (vue.openBlock(), vue.createElementBlock(
            "view",
            {
              key: 1,
              class: "leftlist2"
            },
            vue.toDisplayString($props.leftlist2),
            1
            /* TEXT */
          )) : vue.createCommentVNode("v-if", true),
          $props.leftlist3 !== "" ? (vue.openBlock(), vue.createElementBlock(
            "view",
            {
              key: 2,
              class: "leftlist3"
            },
            vue.toDisplayString($props.leftlist3),
            1
            /* TEXT */
          )) : vue.createCommentVNode("v-if", true)
        ]),
        vue.createElementVNode("view", {
          class: "rightContent",
          style: { "text-align": "right", "font-weight": "400", "font-size": "24rpx", "color": "#333333" }
        }, [
          vue.renderSlot(_ctx.$slots, "default", {}, void 0, true)
        ])
      ])
    ]);
  }
  const timelineItem = /* @__PURE__ */ _export_sfc(_sfc_main$2x, [["render", _sfc_render$2w], ["__scopeId", "data-v-48a104e6"], ["__file", "C:/Users/Administrator/Desktop/Project Folder/ZXHand/ZXHandwritting_APP_uniapp/components/chenbin-timeline/timelineItem.vue"]]);
  const _sfc_main$2w = {
    __name: "course",
    setup(__props, { expose: __expose }) {
      __expose();
      const statusBarHeight = vue.ref();
      onLoad(() => {
        statusBarHeight.value = getApp().globalData.top;
      });
      onReachBottom(() => {
        fetchCourse();
      });
      onPullDownRefresh(() => {
        fetchCourse();
        uni.stopPullDownRefresh();
      });
      const infolist = vue.ref([]);
      const ti_tea_room_list = vue.ref([]);
      const old = vue.ref({
        scrollTop: 0
      });
      vue.onMounted(() => {
        fetchCourse();
      });
      const fetchCourse = async () => {
        try {
          const [courseListResponse, recentCourseResponse] = await Promise.all([
            fetchMyCourseList(),
            fetchMyRecentCourse()
          ]);
          infolist.value = courseListResponse.items;
          ti_tea_room_list.value = recentCourseResponse.items.map((item) => ({
            ...item,
            // 保留原有属性
            color: item.status === 0 ? "#5791F2" : "#666666"
            // 根据状态设置颜色
          }));
        } catch (error2) {
          formatAppLog("error", "at pages/pagesall/course.vue:120", "获取课程失败:", error2);
        }
      };
      function goback() {
        uni.navigateBack();
      }
      function scroll(e2) {
        old.value.scrollTop = e2.detail.scrollTop;
      }
      function btn_study() {
        uni.navigateTo({
          url: "/pages/pagesall/course/go_learn"
        });
      }
      const __returned__ = { statusBarHeight, infolist, ti_tea_room_list, old, fetchCourse, goback, scroll, btn_study, ref: vue.ref, onMounted: vue.onMounted, timeline, timelineItem, get fetchMyCourseList() {
        return fetchMyCourseList;
      }, get fetchMyRecentCourse() {
        return fetchMyRecentCourse;
      }, get onLoad() {
        return onLoad;
      }, get onPullDownRefresh() {
        return onPullDownRefresh;
      }, get onReachBottom() {
        return onReachBottom;
      } };
      Object.defineProperty(__returned__, "__isScriptSetup", { enumerable: false, value: true });
      return __returned__;
    }
  };
  function _sfc_render$2v(_ctx, _cache, $props, $setup, $data, $options) {
    return vue.openBlock(), vue.createElementBlock(
      vue.Fragment,
      null,
      [
        vue.createElementVNode("view", { class: "code_titlebox" }, [
          vue.createElementVNode(
            "view",
            {
              style: vue.normalizeStyle("height:" + ($setup.statusBarHeight + 5) + "px;")
            },
            null,
            4
            /* STYLE */
          ),
          vue.createElementVNode("view", { class: "code_title" }, " 课程 ")
        ]),
        vue.createElementVNode("view", { class: "game_time" }, [
          vue.createElementVNode("text", { style: { "font-weight": "500", "font-size": "36rpx", "color": "#000000" } }, "活动时间安排")
        ]),
        $setup.infolist.length > 0 ? (vue.openBlock(), vue.createBlock($setup["timeline"], { key: 0 }, {
          default: vue.withCtx(() => [
            (vue.openBlock(true), vue.createElementBlock(
              vue.Fragment,
              null,
              vue.renderList($setup.infolist, (item, index2) => {
                return vue.openBlock(), vue.createElementBlock("view", {
                  class: "line_list",
                  key: index2
                }, [
                  vue.createVNode($setup["timelineItem"], {
                    class: "list_box_cour",
                    leftTime: item.title,
                    color: "#5791F2"
                  }, {
                    default: vue.withCtx(() => [
                      vue.createElementVNode(
                        "view",
                        {
                          class: "tips",
                          style: { "height": "134rpx", "font-weight": "500", "font-size": "28rpx", "color": "#000000", "margin-left": "20rpx" }
                        },
                        " 主讲：" + vue.toDisplayString(item.teacher_name),
                        1
                        /* TEXT */
                      ),
                      vue.createElementVNode("view", { class: "class_room" }, [
                        vue.createElementVNode(
                          "view",
                          { style: { "font-weight": "400", "font-size": "24rpx", "color": "#000000" } },
                          "教室:" + vue.toDisplayString(item.classroom),
                          1
                          /* TEXT */
                        ),
                        vue.createElementVNode(
                          "view",
                          { style: { "font-weight": "400", "font-size": "24rpx", "color": "#333333" } },
                          "时间:" + vue.toDisplayString(item.s_time) + "-" + vue.toDisplayString(item.e_time),
                          1
                          /* TEXT */
                        )
                      ])
                    ]),
                    _: 2
                    /* DYNAMIC */
                  }, 1032, ["leftTime"])
                ]);
              }),
              128
              /* KEYED_FRAGMENT */
            ))
          ]),
          _: 1
          /* STABLE */
        })) : (vue.openBlock(), vue.createElementBlock("view", {
          key: 1,
          class: "kong",
          style: { "display": "flex", "justify-content": "center", "align-items": "center", "height": "500rpx" }
        }, [
          vue.createElementVNode("image", {
            style: { "width": "400rpx", "height": "400rpx" },
            src: _imports_0$6,
            mode: "aspectFit"
          })
        ])),
        vue.createElementVNode("view", { class: "game_time" }, [
          vue.createElementVNode("text", { style: { "font-weight": "500", "font-size": "36rpx", "color": "#000000" } }, "近期课程")
        ]),
        $setup.ti_tea_room_list.length > 0 ? (vue.openBlock(), vue.createBlock($setup["timeline"], { key: 2 }, {
          default: vue.withCtx(() => [
            (vue.openBlock(true), vue.createElementBlock(
              vue.Fragment,
              null,
              vue.renderList($setup.ti_tea_room_list, (item, index2) => {
                return vue.openBlock(), vue.createElementBlock("view", {
                  class: "line_list",
                  key: index2
                }, [
                  vue.createVNode($setup["timelineItem"], {
                    class: "list_box_cour",
                    leftTime: item.title,
                    color: item.color,
                    style: { "font-weight": "600", "font-size": "28rpx", "color": "#000000" }
                  }, {
                    default: vue.withCtx(() => [
                      vue.createElementVNode(
                        "view",
                        {
                          class: "tips",
                          style: { "height": "154rpx", "font-weight": "500", "font-size": "28rpx", "color": "#000000" }
                        },
                        " 主讲：" + vue.toDisplayString(item.teacher_name),
                        1
                        /* TEXT */
                      ),
                      vue.createElementVNode("view", { class: "class_room" }, [
                        vue.createElementVNode(
                          "view",
                          { style: { "font-weight": "400", "color": "#000000" } },
                          "教室:" + vue.toDisplayString(item.classroom),
                          1
                          /* TEXT */
                        ),
                        vue.createElementVNode(
                          "view",
                          { style: { "font-weight": "400", "font-size": "24rpx", "color": "#333333" } },
                          "时间:" + vue.toDisplayString(item.s_time) + "-" + vue.toDisplayString(item.e_time),
                          1
                          /* TEXT */
                        )
                      ]),
                      vue.createElementVNode(
                        "view",
                        {
                          class: "list_btn",
                          style: vue.normalizeStyle([{ "color": "white" }, { backgroundColor: item.status === 0 ? "#5791F2" : "#666666" }]),
                          onClick: $setup.btn_study
                        },
                        vue.toDisplayString(item.status === 0 ? "写作业" : "作业已完成"),
                        5
                        /* TEXT, STYLE */
                      )
                    ]),
                    _: 2
                    /* DYNAMIC */
                  }, 1032, ["leftTime", "color"])
                ]);
              }),
              128
              /* KEYED_FRAGMENT */
            ))
          ]),
          _: 1
          /* STABLE */
        })) : (vue.openBlock(), vue.createElementBlock("view", {
          key: 3,
          class: "kong",
          style: { "display": "flex", "justify-content": "center", "align-items": "center", "height": "500rpx" }
        }, [
          vue.createElementVNode("image", {
            style: { "width": "400rpx", "height": "400rpx" },
            src: _imports_0$6,
            mode: "aspectFit"
          })
        ])),
        vue.createElementVNode("view", { class: "infobox" })
      ],
      64
      /* STABLE_FRAGMENT */
    );
  }
  const PagesPagesallCourse = /* @__PURE__ */ _export_sfc(_sfc_main$2w, [["render", _sfc_render$2v], ["__file", "C:/Users/Administrator/Desktop/Project Folder/ZXHand/ZXHandwritting_APP_uniapp/pages/pagesall/course.vue"]]);
  const _imports_0$4 = "/static/img/satr.png";
  const _imports_1$1 = "/static/img/jinggao.png";
  const _sfc_main$2v = {
    data() {
      return {
        canvasNode: null,
        evaluationDesc: "",
        statusBarHeight: ""
      };
    },
    onLoad() {
      this.statusBarHeight = getApp().globalData.top;
    },
    methods: {
      chooseImage() {
        uni.navigateTo({
          url: "/pages/pagesall/aiDete/aiResult",
          // 目标页面路径
          success: () => {
            formatAppLog("log", "at pages/pagesall/aiDete.vue:552", "成功跳转到目标页面");
          },
          fail: (err) => {
            formatAppLog("error", "at pages/pagesall/aiDete.vue:555", "跳转失败", err);
          }
        });
      }
    }
  };
  function _sfc_render$2u(_ctx, _cache, $props, $setup, $data, $options) {
    return vue.openBlock(), vue.createElementBlock("view", { style: { "position": "relative" } }, [
      vue.createElementVNode(
        "view",
        {
          style: vue.normalizeStyle("height:" + ($data.statusBarHeight + 5) + "px;")
        },
        null,
        4
        /* STYLE */
      ),
      vue.createElementVNode("view", {
        class: "ai—_box",
        style: { "position": "absolute", "z-index": "1000" }
      }, [
        vue.createElementVNode("view", { class: "ai_img" }),
        vue.createElementVNode("view", { class: "ai_title" }),
        vue.createElementVNode("view", { class: "photo_box" }, [
          vue.createElementVNode("view", { class: "left_top" }, [
            vue.createElementVNode("img", {
              src: "https://lanhu.oss-cn-beijing.aliyuncs.com/SketchPng8841afb2ed9b814c547bbb1d87bb42508771ef6fea67f1f4b54dae3061027a9c",
              alt: ""
            })
          ]),
          vue.createElementVNode("view", { class: "right_top" }, [
            vue.createElementVNode("img", {
              src: "https://lanhu.oss-cn-beijing.aliyuncs.com/SketchPnge94653dbe7f9bbbbe93f73e44c1dc68ccd17c869bf40e27cee8834315c37bd77",
              alt: ""
            })
          ]),
          vue.createElementVNode("view", { class: "right_bottom" }, [
            vue.createElementVNode("img", {
              src: "https://lanhu.oss-cn-beijing.aliyuncs.com/SketchPngb3b3f03ebc6279ecc80d4ea63aa70fe3cf9aea5a8a49c7a1abe68f3e7fda82ac",
              alt: ""
            })
          ]),
          vue.createElementVNode("view", { class: "left_bottom" }, [
            vue.createElementVNode("img", {
              src: "https://lanhu.oss-cn-beijing.aliyuncs.com/SketchPngff2bda36ded4b2b18a74c5ae9c8f5cc1c354864c822489c9660cfd7d2d26bc3e",
              alt: ""
            })
          ]),
          vue.createElementVNode("view", {
            class: "photo_box2",
            onClick: _cache[0] || (_cache[0] = (...args) => $options.chooseImage && $options.chooseImage(...args))
          }, [
            vue.createElementVNode("view", { class: "photo_box3" }, [
              vue.createElementVNode("img", {
                src: "https://lanhu.oss-cn-beijing.aliyuncs.com/SketchPng3ed3fe30d1cf29e35208039bd47fd79c2b4a0a89c3f20565393574a04704475a",
                alt: ""
              }),
              vue.createElementVNode("view", { class: "photo_text" }, " 拍照测评 ")
            ])
          ])
        ]),
        vue.createElementVNode("view", { class: "note1" }, [
          vue.createElementVNode("image", {
            style: { "width": "28rpx", "height": "28rpx" },
            src: _imports_0$4,
            mode: "widthFix"
          }),
          vue.createElementVNode("view", { class: "note1_text notes" }, " 仅支持正版彩色专用纸 ")
        ]),
        vue.createElementVNode("view", { class: "note2" }, [
          vue.createElementVNode("image", {
            style: { "width": "28rpx", "height": "28rpx" },
            src: _imports_0$4,
            mode: "widthFix"
          }),
          vue.createElementVNode("view", { class: "note2_text notes" }, " 测评标准为楷体GB2312 ")
        ]),
        vue.createElementVNode("view", { class: "note3" }, [
          vue.createElementVNode("image", {
            style: { "width": "28rpx", "height": "28rpx" },
            src: _imports_1$1,
            mode: "widthFix"
          }),
          vue.createElementVNode("view", { class: "note3_text notes" }, " 使用说明 ")
        ]),
        vue.createCommentVNode(' <scroll-view ref="aiBox" id="myScrollView" scroll-y="true" style="height: 100vh;"> '),
        vue.createElementVNode(
          "div",
          {
            class: "content",
            ref: "aiBox"
          },
          [
            vue.createElementVNode("div", null, [
              vue.createElementVNode(
                "canvas",
                {
                  ref: "myCanvas",
                  "canvas-id": "myCanvas",
                  id: "myCanvas",
                  style: vue.normalizeStyle({ width: "100vw", height: _ctx.canvasHeight + "px" }),
                  onClick: _cache[1] || (_cache[1] = (...args) => _ctx.handleCanvasClick && _ctx.handleCanvasClick(...args))
                },
                null,
                4
                /* STYLE */
              )
            ])
          ],
          512
          /* NEED_PATCH */
        ),
        vue.createCommentVNode(" </scroll-view> ")
      ])
    ]);
  }
  const PagesPagesallAiDete = /* @__PURE__ */ _export_sfc(_sfc_main$2v, [["render", _sfc_render$2u], ["__scopeId", "data-v-5d2404b7"], ["__file", "C:/Users/Administrator/Desktop/Project Folder/ZXHand/ZXHandwritting_APP_uniapp/pages/pagesall/aiDete.vue"]]);
  const _sfc_main$2u = {
    name: "UniSegmentedControl",
    emits: ["clickItem"],
    props: {
      current: {
        type: Number,
        default: 0
      },
      values: {
        type: Array,
        default() {
          return [];
        }
      },
      activeColor: {
        type: String,
        default: "#FFf"
      },
      inActiveColor: {
        type: String,
        default: "transparent"
      },
      styleType: {
        type: String,
        default: "button"
      }
    },
    data() {
      return {
        currentIndex: 0
      };
    },
    watch: {
      current(val) {
        if (val !== this.currentIndex) {
          this.currentIndex = val;
        }
      }
    },
    computed: {},
    created() {
      this.currentIndex = this.current;
    },
    methods: {
      _onClick(index2) {
        if (this.currentIndex !== index2) {
          this.currentIndex = index2;
          this.$emit("clickItem", {
            currentIndex: index2
          });
        }
      }
    }
  };
  function _sfc_render$2t(_ctx, _cache, $props, $setup, $data, $options) {
    return vue.openBlock(), vue.createElementBlock(
      "view",
      {
        class: vue.normalizeClass([[$props.styleType === "text" ? "segmented-control--text" : "segmented-control--button"], "segmented-control"]),
        style: vue.normalizeStyle({ borderColor: $props.styleType === "text" ? "" : $props.activeColor })
      },
      [
        (vue.openBlock(true), vue.createElementBlock(
          vue.Fragment,
          null,
          vue.renderList($props.values, (item, index2) => {
            return vue.openBlock(), vue.createElementBlock("view", {
              class: vue.normalizeClass([[
                $props.styleType === "text" ? "" : "segmented-control__item--button",
                index2 === 0 && $props.styleType === "button" ? "segmented-control__item--button--first" : "",
                index2 === $props.values.length - 1 && $props.styleType === "button" ? "segmented-control__item--button--last" : ""
              ], "segmented-control__item"]),
              key: index2,
              style: vue.normalizeStyle({ backgroundColor: index2 === $data.currentIndex && $props.styleType === "button" ? $props.activeColor : $props.styleType === "button" ? $props.inActiveColor : "transparent", borderColor: index2 === $data.currentIndex && $props.styleType === "text" || $props.styleType === "button" ? $props.activeColor : $props.inActiveColor }),
              onClick: ($event) => $options._onClick(index2)
            }, [
              vue.createElementVNode("view", null, [
                vue.createElementVNode(
                  "text",
                  {
                    style: vue.normalizeStyle({ color: index2 === $data.currentIndex ? $props.styleType === "text" ? $props.activeColor : "#FF9E02" : $props.styleType === "text" ? "#000" : "#000" }),
                    class: vue.normalizeClass(["segmented-control__text", $props.styleType === "text" && index2 === $data.currentIndex ? "segmented-control__item--text" : ""])
                  },
                  vue.toDisplayString(item),
                  7
                  /* TEXT, CLASS, STYLE */
                )
              ])
            ], 14, ["onClick"]);
          }),
          128
          /* KEYED_FRAGMENT */
        ))
      ],
      6
      /* CLASS, STYLE */
    );
  }
  const __easycom_0$2 = /* @__PURE__ */ _export_sfc(_sfc_main$2u, [["render", _sfc_render$2t], ["__scopeId", "data-v-86aa1171"], ["__file", "C:/Users/Administrator/Desktop/Project Folder/ZXHand/ZXHandwritting_APP_uniapp/uni_modules/uni-segmented-control/components/uni-segmented-control/uni-segmented-control.vue"]]);
  const _sfc_main$2t = {
    components: {
      ActivityItem
    },
    data() {
      return {
        statusBarHeight: "",
        items: ["线上活动", "线下活动"],
        current: 0,
        colorIndex: 0,
        listdata: [],
        listdata1: [],
        listdata2: [],
        listdata3: [],
        intervalId: null,
        // 保存计时器ID
        oper_area: "湛江市",
        timer: null,
        currentPage: 1,
        isLoading: false
      };
    },
    //   computed: {
    //     listdata() {
    //       const store = useStore()
    //       return store.listdata // 从 Pinia 存储中获取 listdata
    //     },
    //   },
    onPullDownRefresh() {
      this.fetchActivityData();
      uni.stopPullDownRefresh();
    },
    // onReachBottom() {
    //   if (this.isLoading) return;
    //   this.currentPage++;
    //   let noData = this.fetchActivityData()
    //   __f__('log','at pages/pagesall/oper.vue:127',noData, '++++')
    //   // 判断 noData 的状态
    //   if (noData) {
    //     // 提示没有更多数据
    //     uni.showToast({
    //       title: '没有更多数据',
    //       icon: 'none',
    //       duration: 2000 // 持续时间，单位为毫秒
    //     });
    //     this.isLoading = true; // 防止多次请求
    //   }
    //   // uni.stopPullDownRefresh();
    // },
    onReachBottom() {
      if (this.isLoading)
        return;
      this.currentPage++;
      const currentLength1 = this.listdata1.length;
      const currentLength2 = this.listdata2.length;
      const currentLength3 = this.listdata3.length;
      const currentLength = this.listdata.length;
      this.fetchActivityData().then(() => {
        const newLength1 = this.listdata1.length;
        const newLength2 = this.listdata2.length;
        const newLength3 = this.listdata3.length;
        const newLength = this.listdata.length;
        if (newLength1 === currentLength1 && newLength2 === currentLength2 && newLength3 === currentLength3 && newLength === currentLength) {
          this.isLoading = true;
          uni.showToast({
            title: "没有更多数据",
            icon: "none",
            duration: 2e3
            // 持续时间，单位为毫秒
          });
        } else {
          this.isLoading = false;
        }
      }).catch(() => {
        this.isLoading = false;
      });
    },
    onLoad() {
      this.statusBarHeight = getApp().globalData.top;
      this.isLoading = false;
    },
    onShow() {
      this.fetchActivityData();
      this.isLoading = false;
    },
    onUnload() {
    },
    mounted() {
      this.updateCountdown();
    },
    methods: {
      async fetchActivityData() {
        try {
          const params = {
            limit: 7,
            page: this.currentPage,
            end_activity: 1,
            is_online: this.current === 0 ? 1 : 0
            // 根据当前状态设置在线状态
          };
          const params1 = {
            limit: 7,
            page: this.currentPage,
            is_online: this.current === 0 ? 1 : 0
            // 根据当前状态设置在线状态
          };
          const response = await fetchActivityCourseList(params);
          const afoot = await fetchActivityCourseList(params1);
          if (response.items && response.items.length === 0 && afoot.items && afoot.items.length === 0) {
            return true;
          }
          formatAppLog("log", "at pages/pagesall/oper.vue:218", response);
          if (this.current.value === 0) {
            const existingIds1 = new Set(this.listdata1.map((item) => item.id));
            let newItems1 = response.items.filter((item) => !existingIds1.has(item.id)).map((item) => ({
              ...item,
              // 保留原有的属性
              hours: 0,
              // 增加时字段，初始化为0
              minutes: 0,
              // 增加分字段，初始化为0
              seconds: 0
              // 增加秒字段，初始化为0
            }));
            this.listdata1 = [...this.listdata1, ...newItems1];
            const existingIds2 = new Set(this.listdata2.map((item) => item.id));
            let newItems2 = afoot.items.filter((item) => !existingIds2.has(item.id)).map((item) => ({
              ...item,
              // 保留原有的属性
              hours: 0,
              // 增加时字段，初始化为0
              minutes: 0,
              // 增加分字段，初始化为0
              seconds: 0
              // 增加秒字段，初始化为0
            }));
            this.listdata2 = [...this.listdata2, ...newItems2];
          } else {
            const existingIds = new Set(this.listdata.map((item) => item.id));
            let newItems = response.items.filter((item) => !existingIds.has(item.id)).map((item) => ({
              ...item,
              // 保留原有的属性
              hours: 0,
              // 增加时字段，初始化为0
              minutes: 0,
              // 增加分字段，初始化为0
              seconds: 0
              // 增加秒字段，初始化为0
            }));
            this.listdata = [...this.listdata, ...newItems];
            const existingIds3 = new Set(this.listdata3.map((item) => item.id));
            let newItems3 = afoot.items.filter((item) => !existingIds3.has(item.id)).map((item) => ({
              ...item,
              // 保留原有的属性
              hours: 0,
              // 增加时字段，初始化为0
              minutes: 0,
              // 增加分字段，初始化为0
              seconds: 0
              // 增加秒字段，初始化为0
            }));
            this.listdata3 = [...this.listdata3, ...newItems3];
          }
          formatAppLog("log", "at pages/pagesall/oper.vue:273", this.listdata);
          formatAppLog("log", "at pages/pagesall/oper.vue:274", this.listdata1);
        } catch (error2) {
          formatAppLog("error", "at pages/pagesall/oper.vue:276", "获取活动数据失败:", error2);
        }
      },
      onClickItem(e2) {
        if (this.current !== e2.currentIndex) {
          this.current = e2.currentIndex;
          this.currentPage = 1;
          this.isLoading = false;
          this.fetchActivityData();
        }
      },
      styleChange(e2) {
        if (this.styleType !== e2.detail.value) {
          this.styleType = e2.detail.value;
        }
      },
      colorChange(e2) {
        if (this.styleType !== e2.detail.value) {
          formatAppLog("log", "at pages/pagesall/oper.vue:295", e2.detail.value);
          this.activeColor = e2.detail.value;
        }
      },
      handleSignup(id) {
        const params = {
          limit: 7,
          page: 1,
          end_activity: 1
        };
        uni.navigateTo({
          url: `/pages/pagesall/home/signUp?id=${id}&limit=${params.limit}&page=${params.page}&end_activity=${params.end_activity}`
          // 确保替换为相应的页面路径
        });
      },
      handleSignup1(id) {
        const params = {
          limit: 7,
          page: 1,
          end_activity: 1
        };
        uni.navigateTo({
          url: `/pages/pagesall/home/signUp?id=${id}&limit=${params.limit}&page=${params.page}&end_activity=${params.end_activity}`
          // 确保替换为相应的页面路径
        });
      },
      handleSignupXSline(id) {
        const params = {
          limit: 7,
          page: 1,
          end_activity: 1,
          is_online: 1
          // 根据当前状态设置在线状态
        };
        uni.navigateTo({
          url: `/pages/pagesall/home/signUp?id=${id}&limit=${params.limit}&page=${params.page}&end_activity=${params.end_activity}&is_online=${params.is_online}`
          // 确保替换为相应的页面路径
        });
      },
      handleSignupOnline(id) {
        const params = {
          limit: 7,
          page: 1,
          end_activity: 1,
          is_online: 0
          // 根据当前状态设置在线状态
        };
        uni.navigateTo({
          url: `/pages/pagesall/home/signUp?id=${id}&limit=${params.limit}&page=${params.page}&end_activity=${params.end_activity}&is_online=${params.is_online}`
          // 确保替换为相应的页面路径
        });
      },
      formatTime(value) {
        return value.toString().padStart(2, "0");
      },
      // 监听 listdata 的变化
      //     watch(listdata, (newListdata) => {
      //   updateCountdown()
      //   __f__('log','at pages/pagesall/oper.vue:356',newListdata)
      // }),
      updateCountdown() {
        const currentDateTimestampInMilliseconds = (/* @__PURE__ */ new Date()).getTime();
        const now2 = Math.floor(currentDateTimestampInMilliseconds / 1e3);
        this.listdata.forEach((item) => {
          if (!isNaN(item.end_time)) {
            const timeDiff = item.end_time - now2;
            formatAppLog("log", "at pages/pagesall/oper.vue:366", timeDiff);
            if (timeDiff > 0) {
              item.hours = Math.floor(timeDiff / 3600);
              item.minutes = Math.floor(timeDiff % 3600 / 60);
              item.seconds = timeDiff % 60;
              this.intervalId = setInterval(this.updateCountdown, 1e3);
            } else {
              item.hours = item.minutes = item.seconds = 0;
              clearInterval(this.intervalId);
              this.intervalId = null;
            }
          } else {
            item.hours = item.minutes = item.seconds = 0;
          }
        });
      },
      btnsignup(id) {
      },
      selectCity() {
        uni.showToast({
          title: "暂不开放其他城市",
          icon: "none",
          duration: 2e3
        });
      },
      updateSelectedCity(city) {
        this.oper_area = city;
      }
    }
  };
  function _sfc_render$2s(_ctx, _cache, $props, $setup, $data, $options) {
    const _component_uni_segmented_control = resolveEasycom(vue.resolveDynamicComponent("uni-segmented-control"), __easycom_0$2);
    const _component_activity_item = vue.resolveComponent("activity-item");
    const _component_uni_section = vue.resolveComponent("uni-section");
    return vue.openBlock(), vue.createElementBlock("view", null, [
      vue.createElementVNode(
        "view",
        {
          style: vue.normalizeStyle("height:" + ($data.statusBarHeight + 5) + "px;")
        },
        null,
        4
        /* STYLE */
      ),
      vue.createElementVNode("view", { class: "oper_Title" }, " 活动 "),
      vue.createElementVNode("view", {
        class: "oper_area",
        onClick: _cache[0] || (_cache[0] = (...args) => $options.selectCity && $options.selectCity(...args))
      }, [
        vue.createElementVNode("view", { class: "area_img" }, [
          vue.createElementVNode("img", {
            src: "https://lanhu.oss-cn-beijing.aliyuncs.com/SketchPng8115b2c160eee2c4a0b2d28b5170401ecd79f5c361abd0bc4f8a82f0af559654",
            alt: ""
          }),
          vue.createElementVNode(
            "view",
            { class: "area_text" },
            vue.toDisplayString($data.oper_area),
            1
            /* TEXT */
          ),
          vue.createElementVNode("img", {
            src: "https://lanhu.oss-cn-beijing.aliyuncs.com/SketchPngf4e9bc406788b9232143810336e08dc7652f21137fb2a98411b6742d7f4dffb2",
            alt: ""
          })
        ]),
        vue.createElementVNode("input", {
          type: "text",
          class: "area_input",
          placeholder: "请输入要查找的城市"
        })
      ]),
      vue.createElementVNode("view", null, [
        vue.createVNode(_component_uni_section, {
          title: "实心标签",
          type: "line"
        }, {
          default: vue.withCtx(() => [
            vue.createElementVNode("view", { class: "uni-padding-wrap uni-common-mt" }, [
              vue.createVNode(_component_uni_segmented_control, {
                current: $data.current,
                values: $data.items,
                "active-color": _ctx.activeColor,
                onClickItem: $options.onClickItem
              }, null, 8, ["current", "values", "active-color", "onClickItem"]),
              $data.current === 0 ? (vue.openBlock(), vue.createElementBlock("view", {
                key: 0,
                class: "line_oper"
              })) : vue.createCommentVNode("v-if", true),
              $data.current === 1 ? (vue.openBlock(), vue.createElementBlock("view", {
                key: 1,
                class: "line_oper1"
              })) : vue.createCommentVNode("v-if", true)
            ]),
            vue.createElementVNode("view", { class: "oper_title_text" }, " 正在进行 "),
            vue.createElementVNode("view", { class: "content" }, [
              $data.current === 0 ? (vue.openBlock(), vue.createElementBlock("view", { key: 0 }, [
                $data.listdata2.length > 0 ? (vue.openBlock(), vue.createElementBlock("view", {
                  key: 0,
                  style: { "display": "grid", "justify-items": "center" }
                }, [
                  (vue.openBlock(true), vue.createElementBlock(
                    vue.Fragment,
                    null,
                    vue.renderList($data.listdata2, (item, index2) => {
                      var _a, _b;
                      return vue.openBlock(), vue.createBlock(_component_activity_item, {
                        key: index2,
                        online: item.is_online,
                        techerimg: item.avatar,
                        biaoti: item.title,
                        laoshi: item.description,
                        star: item.s_time,
                        end: item.e_time,
                        hearimg: item.teacher_avatar,
                        teachername: item.teacher_name,
                        hours: Number(item.hours),
                        minutes: Number(item.minutes),
                        seconds: Number(item.seconds),
                        pers: ((_a = item.signup_member) == null ? void 0 : _a.total) || 0,
                        money: item.price,
                        imgs: ((_b = item.signup_member) == null ? void 0 : _b.items) || [],
                        signedUp: item.hadSignup,
                        onSignup: () => $options.handleSignupXSline(item.id)
                      }, null, 8, ["online", "techerimg", "biaoti", "laoshi", "star", "end", "hearimg", "teachername", "hours", "minutes", "seconds", "pers", "money", "imgs", "signedUp", "onSignup"]);
                    }),
                    128
                    /* KEYED_FRAGMENT */
                  ))
                ])) : (vue.openBlock(), vue.createElementBlock("view", {
                  key: 1,
                  class: "kong",
                  style: { "display": "flex", "justify-content": "center", "align-items": "center", "height": "500rpx" }
                }, [
                  vue.createElementVNode("image", {
                    style: { "width": "400rpx", "height": "400rpx" },
                    src: _imports_0$6,
                    mode: "aspectFit"
                  })
                ])),
                vue.createElementVNode("view", { class: "oper_title_text1" }, " 往期回顾 "),
                $data.listdata.length > 0 ? (vue.openBlock(), vue.createElementBlock("view", {
                  key: 2,
                  style: { "display": "grid", "justify-items": "center" }
                }, [
                  (vue.openBlock(true), vue.createElementBlock(
                    vue.Fragment,
                    null,
                    vue.renderList($data.listdata, (item, index2) => {
                      var _a, _b;
                      return vue.openBlock(), vue.createBlock(_component_activity_item, {
                        key: index2,
                        online: item.is_online,
                        techerimg: item.avatar,
                        biaoti: item.title,
                        laoshi: item.description,
                        star: item.s_time,
                        end: item.e_time,
                        hearimg: item.teacher_avatar,
                        teachername: item.teacher_name,
                        hours: Number(item.hours),
                        minutes: Number(item.minutes),
                        seconds: Number(item.seconds),
                        pers: ((_a = item.signup_member) == null ? void 0 : _a.total) || 0,
                        money: item.price,
                        imgs: ((_b = item.signup_member) == null ? void 0 : _b.items) || [],
                        signedUp: item.hadSignup,
                        onSignup: () => $options.handleSignup1(item.id)
                      }, null, 8, ["online", "techerimg", "biaoti", "laoshi", "star", "end", "hearimg", "teachername", "hours", "minutes", "seconds", "pers", "money", "imgs", "signedUp", "onSignup"]);
                    }),
                    128
                    /* KEYED_FRAGMENT */
                  ))
                ])) : (vue.openBlock(), vue.createElementBlock("view", {
                  key: 3,
                  class: "kong",
                  style: { "display": "flex", "justify-content": "center", "align-items": "center", "height": "500rpx", "width": "730rpx" }
                }, [
                  vue.createElementVNode("image", {
                    style: { "width": "400rpx", "height": "400rpx" },
                    src: _imports_0$6,
                    mode: "aspectFit"
                  })
                ]))
              ])) : vue.createCommentVNode("v-if", true),
              $data.current === 1 ? (vue.openBlock(), vue.createElementBlock("view", { key: 1 }, [
                $data.listdata3.length > 0 ? (vue.openBlock(), vue.createElementBlock("view", {
                  key: 0,
                  style: { "display": "grid", "justify-items": "center" }
                }, [
                  (vue.openBlock(true), vue.createElementBlock(
                    vue.Fragment,
                    null,
                    vue.renderList($data.listdata3, (item, index2) => {
                      var _a, _b;
                      return vue.openBlock(), vue.createBlock(_component_activity_item, {
                        key: index2,
                        online: item.is_online,
                        techerimg: item.avatar,
                        biaoti: item.title,
                        laoshi: item.description,
                        star: item.s_time,
                        end: item.e_time,
                        hearimg: item.teacher_avatar,
                        teachername: item.teacher_name,
                        hours: Number(item.hours),
                        minutes: Number(item.minutes),
                        seconds: Number(item.seconds),
                        pers: ((_a = item.signup_member) == null ? void 0 : _a.total) || 0,
                        money: item.price,
                        imgs: ((_b = item.signup_member) == null ? void 0 : _b.items) || [],
                        signedUp: item.hadSignup,
                        onSignup: () => $options.handleSignupOnline(item.id)
                      }, null, 8, ["online", "techerimg", "biaoti", "laoshi", "star", "end", "hearimg", "teachername", "hours", "minutes", "seconds", "pers", "money", "imgs", "signedUp", "onSignup"]);
                    }),
                    128
                    /* KEYED_FRAGMENT */
                  ))
                ])) : (vue.openBlock(), vue.createElementBlock("view", {
                  key: 1,
                  class: "kong",
                  style: { "display": "flex", "justify-content": "center", "align-items": "center", "height": "500rpx" }
                }, [
                  vue.createElementVNode("image", {
                    style: { "width": "400rpx", "height": "400rpx" },
                    src: _imports_0$6,
                    mode: "aspectFit"
                  })
                ])),
                vue.createElementVNode("view", { class: "oper_title_text1" }, " 往期回顾 "),
                vue.createElementVNode("view", null, [
                  $data.listdata1.length > 0 ? (vue.openBlock(), vue.createElementBlock("view", {
                    key: 0,
                    style: { "display": "grid", "justify-items": "center" }
                  }, [
                    (vue.openBlock(true), vue.createElementBlock(
                      vue.Fragment,
                      null,
                      vue.renderList($data.listdata1, (item, index2) => {
                        var _a, _b;
                        return vue.openBlock(), vue.createBlock(_component_activity_item, {
                          key: index2,
                          online: item.is_online,
                          techerimg: item.avatar,
                          biaoti: item.title,
                          laoshi: item.description,
                          star: item.s_time,
                          end: item.e_time,
                          hearimg: item.teacher_avatar,
                          teachername: item.teacher_name,
                          hours: Number(item.hours),
                          minutes: Number(item.minutes),
                          seconds: Number(item.seconds),
                          pers: ((_a = item.signup_member) == null ? void 0 : _a.total) || 0,
                          money: item.price,
                          imgs: ((_b = item.signup_member) == null ? void 0 : _b.items) || [],
                          signedUp: item.hadSignup,
                          onSignup: () => $options.handleSignup(item.id)
                        }, null, 8, ["online", "techerimg", "biaoti", "laoshi", "star", "end", "hearimg", "teachername", "hours", "minutes", "seconds", "pers", "money", "imgs", "signedUp", "onSignup"]);
                      }),
                      128
                      /* KEYED_FRAGMENT */
                    ))
                  ])) : (vue.openBlock(), vue.createElementBlock("view", {
                    key: 1,
                    class: "kong",
                    style: { "display": "flex", "justify-content": "center", "align-items": "center", "height": "500rpx", "width": "730rpx" }
                  }, [
                    vue.createElementVNode("image", {
                      style: { "width": "400rpx", "height": "400rpx" },
                      src: _imports_0$6,
                      mode: "aspectFit"
                    })
                  ]))
                ])
              ])) : vue.createCommentVNode("v-if", true)
            ])
          ]),
          _: 1
          /* STABLE */
        })
      ])
    ]);
  }
  const PagesPagesallOper = /* @__PURE__ */ _export_sfc(_sfc_main$2t, [["render", _sfc_render$2s], ["__file", "C:/Users/Administrator/Desktop/Project Folder/ZXHand/ZXHandwritting_APP_uniapp/pages/pagesall/oper.vue"]]);
  const _sfc_main$2s = {
    components: {
      ActivityItem
    },
    data() {
      return {
        statusBarHeight: "",
        features: [
          {
            title: "我的作业",
            icon: "../../static/img/hw.png"
          },
          {
            title: "班级群",
            icon: "../../static/img/gro.png"
          },
          {
            title: "我的老师",
            icon: "../../static/img/tea.png"
          },
          {
            title: "历史测评",
            icon: "../../static/img/lAi.png"
          }
          // 更多功能...
        ],
        homework: [
          {
            title: "书法练习第一课",
            image: "https://lanhu-dds-backend.oss-cn-beijing.aliyuncs.com/merge_image/imgs/4f12d9b5c7ee4468ae4a232563300604_mergeImage.png",
            from: "来自刘老师",
            status: "未完成"
          },
          {
            title: "书法练习第二课",
            image: "https://lanhu-dds-backend.oss-cn-beijing.aliyuncs.com/merge_image/imgs/4f12d9b5c7ee4468ae4a232563300604_mergeImage.png",
            status: "未完成",
            from: "来自刘老师"
          }
        ],
        participatingActivitiess: []
      };
    },
    computed: {
      listdata() {
        const store = useStore();
        return store.listdata;
      },
      userInfo() {
        const store = useStore();
        return store.userinfo;
      }
    },
    onShow() {
      this.pa();
    },
    onLoad() {
      this.statusBarHeight = getApp().globalData.top;
    },
    methods: {
      goTask(id) {
        uni.navigateTo({
          url: `/pages/pagesall/course/go_learn?id=${id}`
        });
      },
      async pa() {
        let params = {
          page: 1,
          limit: 7
        };
        let params1 = {
          page: 1,
          limit: 5
        };
        try {
          let participatingActivities = await fetchActivityCourseList(params);
          this.homework = await fetchMyTemporaryHomework(params1);
          const matchedDetails = participatingActivities.items.filter(
            (detail) => detail.hadSignup === 1
          );
          let matchedD = matchedDetails.map((item) => ({
            ...item,
            // 保留原有的属性
            timerId: null,
            //用于存储定时器ID
            hours: 0,
            // 增加时字段，初始化为0
            minutes: 0,
            // 增加分字段，初始化为0
            seconds: 0
            // 增加秒字段，初始化为0
          }));
          if (matchedD.length > 0) {
            this.participatingActivitiess = matchedD;
            this.updateCountdown();
          } else {
            formatAppLog("log", "at pages/pagesall/mypage.vue:188", "未找到已经报名的活动");
          }
        } catch (error2) {
          formatAppLog("error", "at pages/pagesall/mypage.vue:191", "获取活动详情失败:", error2);
        }
      },
      setInfo() {
        uni.navigateTo({
          url: "/pages/pagesall/mypage/PersonalData"
        });
      },
      handleSignup(id) {
        uni.navigateTo({
          url: `/pages/pagesall/home/signUp?id=${id}`
          // 确保替换为相应的页面路径
        });
      },
      updateCountdown() {
        const currentDateTimestampInMilliseconds = (/* @__PURE__ */ new Date()).getTime();
        const now2 = Math.floor(currentDateTimestampInMilliseconds / 1e3);
        this.participatingActivitiess.forEach((item) => {
          if (!isNaN(item.end_time)) {
            const timeDiff = item.end_time - now2;
            if (timeDiff > 0) {
              item.hours = Math.floor(timeDiff / 3600);
              item.minutes = Math.floor(timeDiff % 3600 / 60);
              item.seconds = timeDiff % 60;
            } else {
              item.hours = item.minutes = item.seconds = 0;
            }
          } else {
            item.hours = item.minutes = item.seconds = 0;
          }
        });
      },
      goSet() {
        uni.navigateTo({
          url: "/pages/pagesall/mypage/Set"
        });
      },
      toggle(title) {
        formatAppLog("log", "at pages/pagesall/mypage.vue:235", title);
        if (title === "我的作业") {
          uni.navigateTo({
            url: "/pages/pagesall/mypage/myHomework"
          });
        } else if (title === "班级课程") {
          uni.navigateTo({
            url: "/pages/pagesall/mypage/myCourses"
          });
        } else if (title === "班级群") {
          uni.navigateTo({
            url: "/pages/pagesall/mypage/classGroup"
          });
        } else if (title === "我的老师") {
          uni.navigateTo({
            url: "/pages/pagesall/mypage/teachermsg"
          });
        } else if (title === "历史测评") {
          uni.navigateTo({
            url: "/pages/pagesall/mypage/historyAssessment"
          });
        }
      },
      myInfo() {
        uni.navigateTo({
          url: "/pages/pagesall/mypage/individualmsg"
        });
      }
    }
  };
  function _sfc_render$2r(_ctx, _cache, $props, $setup, $data, $options) {
    const _component_activity_item = vue.resolveComponent("activity-item");
    return vue.openBlock(), vue.createElementBlock("view", { class: "container" }, [
      vue.createCommentVNode(" 用户信息 "),
      vue.createElementVNode(
        "view",
        {
          style: vue.normalizeStyle("height:" + ($data.statusBarHeight + 5) + "px;")
        },
        null,
        4
        /* STYLE */
      ),
      vue.createElementVNode("view", { class: "user-info" }, [
        vue.createElementVNode("view", { class: "titleHome" }, [
          vue.createElementVNode("view", { class: "nameId" }, [
            vue.createElementVNode("view", {
              class: "head",
              onClick: _cache[0] || (_cache[0] = (...args) => $options.setInfo && $options.setInfo(...args))
            }, [
              vue.createElementVNode("img", {
                style: { "width": "88rpx", "height": "88rpx", "border-radius": "50%" },
                src: $options.userInfo.avatar
              }, null, 8, ["src"])
            ]),
            vue.createElementVNode("view", {
              class: "name",
              onClick: _cache[1] || (_cache[1] = (...args) => $options.myInfo && $options.myInfo(...args))
            }, [
              vue.createElementVNode(
                "text",
                { class: "textname" },
                vue.toDisplayString($options.userInfo.nickname),
                1
                /* TEXT */
              ),
              vue.createElementVNode(
                "text",
                { class: "textid" },
                "ID:" + vue.toDisplayString($options.userInfo.id),
                1
                /* TEXT */
              ),
              vue.createElementVNode("view", { class: "posit" }, [
                vue.createElementVNode("img", {
                  src: "https://lanhu.oss-cn-beijing.aliyuncs.com/SketchPng5b0a65fd47f768b4c8f59ba6e2c415f9fe8dd593587d9ad6bbcd9f647066dc01",
                  alt: ""
                }),
                vue.createElementVNode(
                  "text",
                  { class: "postext" },
                  vue.toDisplayString($options.userInfo.school_name),
                  1
                  /* TEXT */
                )
              ])
            ]),
            vue.createElementVNode(
              "view",
              { class: "classID" },
              vue.toDisplayString($options.userInfo.classly_name),
              1
              /* TEXT */
            )
          ])
        ]),
        vue.createElementVNode("view", {
          class: "icon",
          onClick: _cache[2] || (_cache[2] = (...args) => $options.goSet && $options.goSet(...args))
        }, [
          vue.createElementVNode("image", {
            class: "icon_2",
            referrerpolicy: "no-referrer",
            src: "https://lanhu.oss-cn-beijing.aliyuncs.com/SketchPng934ba38bd39e53f863bede7e013d900beae25399907156b67da9b28d156a6777"
          })
        ])
      ]),
      vue.createCommentVNode(" 功能选项 "),
      vue.createElementVNode("view", { class: "features" }, [
        (vue.openBlock(true), vue.createElementBlock(
          vue.Fragment,
          null,
          vue.renderList($data.features, (feature) => {
            return vue.openBlock(), vue.createElementBlock("view", {
              class: "feature",
              key: feature.title,
              onClick: ($event) => $options.toggle(feature.title)
            }, [
              vue.createElementVNode("image", {
                src: feature.icon,
                class: "feature-icon"
              }, null, 8, ["src"]),
              vue.createElementVNode(
                "text",
                null,
                vue.toDisplayString(feature.title),
                1
                /* TEXT */
              )
            ], 8, ["onClick"]);
          }),
          128
          /* KEYED_FRAGMENT */
        ))
      ]),
      vue.createCommentVNode(" 今日作业 "),
      vue.createElementVNode("view", { class: "section" }, [
        vue.createElementVNode("text", { class: "section-title" }, "今日作业"),
        vue.createElementVNode("view", {
          style: { "margin-top": "20rpx", "justify-content": "flex-start" },
          class: "homework-list homeworkScroll"
        }, [
          (vue.openBlock(true), vue.createElementBlock(
            vue.Fragment,
            null,
            vue.renderList($data.homework, (task) => {
              return vue.openBlock(), vue.createElementBlock("view", {
                class: "homework",
                key: task.title,
                onClick: ($event) => $options.goTask(task.id)
              }, [
                vue.createElementVNode("image", {
                  class: "task-image",
                  src: task.image
                }, null, 8, ["src"]),
                vue.createElementVNode("view", { class: "task-details" }, [
                  vue.createElementVNode(
                    "text",
                    { class: "task-title" },
                    vue.toDisplayString(task.title),
                    1
                    /* TEXT */
                  ),
                  vue.createElementVNode("view", { class: "task-status" }, [
                    vue.createElementVNode(
                      "text",
                      null,
                      vue.toDisplayString(task.from),
                      1
                      /* TEXT */
                    ),
                    vue.createElementVNode("view", { class: "status_img" }, [
                      vue.createElementVNode("image", {
                        src: "https://lanhu.oss-cn-beijing.aliyuncs.com/SketchPng2da006757aba600979e398ec0c09e7190d6db896432216ec206836dc25bb68e4",
                        mode: "aspectFill"
                      }),
                      vue.createElementVNode(
                        "text",
                        null,
                        vue.toDisplayString(task.status),
                        1
                        /* TEXT */
                      )
                    ])
                  ])
                ])
              ], 8, ["onClick"]);
            }),
            128
            /* KEYED_FRAGMENT */
          ))
        ])
      ]),
      vue.createCommentVNode(" 我的活动 "),
      vue.createElementVNode("view", { style: { "margin-top": "48rpx" } }, [
        vue.createElementVNode("text", {
          style: { "font-weight": "bold", "font-size": "36rpx", "color": "#000000", "line-height": "42rpx" },
          class: "section-title"
        }, "我参加的活动")
      ]),
      vue.createElementVNode("view", { class: "section" }, [
        $data.participatingActivitiess.length > 0 ? (vue.openBlock(), vue.createElementBlock("view", { key: 0 }, [
          (vue.openBlock(true), vue.createElementBlock(
            vue.Fragment,
            null,
            vue.renderList($data.participatingActivitiess, (item, index2) => {
              var _a, _b;
              return vue.openBlock(), vue.createBlock(_component_activity_item, {
                key: index2,
                online: item.is_online,
                techerimg: item.avatar,
                biaoti: item.title,
                laoshi: item.description,
                star: item.s_time,
                end: item.e_time,
                hearimg: item.teacher_avatar,
                teachername: item.teacher_name,
                hours: item.hours,
                minutes: item.minutes,
                seconds: item.seconds,
                pers: ((_a = item.signup_member) == null ? void 0 : _a.total) || 0,
                money: item.price,
                imgs: ((_b = item.signup_member) == null ? void 0 : _b.items) || [],
                signedUp: item.hadSignup,
                onSignup: () => $options.handleSignup(item.id)
              }, null, 8, ["online", "techerimg", "biaoti", "laoshi", "star", "end", "hearimg", "teachername", "hours", "minutes", "seconds", "pers", "money", "imgs", "signedUp", "onSignup"]);
            }),
            128
            /* KEYED_FRAGMENT */
          ))
        ])) : (vue.openBlock(), vue.createElementBlock("view", {
          key: 1,
          class: "kong",
          style: { "display": "flex", "justify-content": "center", "align-items": "center", "height": "500rpx" }
        }, [
          vue.createElementVNode("image", {
            style: { "width": "400rpx", "height": "400rpx" },
            src: _imports_0$6,
            mode: "aspectFit"
          })
        ]))
      ])
    ]);
  }
  const PagesPagesallMypage = /* @__PURE__ */ _export_sfc(_sfc_main$2s, [["render", _sfc_render$2r], ["__scopeId", "data-v-980ef0f9"], ["__file", "C:/Users/Administrator/Desktop/Project Folder/ZXHand/ZXHandwritting_APP_uniapp/pages/pagesall/mypage.vue"]]);
  const _sfc_main$2r = {
    data() {
      return {
        intervalId: null,
        // 保存计时器ID
        activityId: null,
        //
        options: null,
        testHour: 1,
        testMinute: 0,
        testSecond: 0,
        start: false,
        timeupSecond: 10,
        statusBarHeight: "",
        matchedDetails: null
      };
    },
    computed: {
      images() {
        const store = useStore();
        return store.images;
      },
      listdata() {
        const store = useStore();
        return store.listdata;
      }
    },
    mounted() {
      this.details();
    },
    onLoad(options) {
      this.statusBarHeight = getApp().globalData.top;
      this.activityId = options.id;
      this.options = options;
    },
    onUnload() {
    },
    methods: {
      async details() {
        try {
          let details = await fetchActivityCourseList(this.options);
          const matchedDetail = details.items.find((detail) => detail.id === Number(this.activityId));
          if (matchedDetail) {
            this.matchedDetails = matchedDetail;
            this.updateCountdown();
          } else {
            formatAppLog("log", "at pages/pagesall/home/signUp.vue:165", "未找到对应的活动详情");
          }
        } catch (error2) {
          formatAppLog("error", "at pages/pagesall/home/signUp.vue:168", "获取活动详情失败:", error2);
        }
      },
      timeup() {
        uni.showToast({
          title: "时间到"
        });
        this.timeupSecond = 29;
      },
      formatTime(value) {
        return value.toString().padStart(2, "0");
      },
      updateCountdown() {
        const currentDateTimestampInMilliseconds = (/* @__PURE__ */ new Date()).getTime();
        const now2 = Math.floor(currentDateTimestampInMilliseconds / 1e3);
        if (this.matchedDetails && !isNaN(this.matchedDetails.end_time)) {
          const timeDiff = this.matchedDetails.end_time - now2;
          if (timeDiff > 0) {
            this.testHour = Math.floor(timeDiff / 3600);
            this.testMinute = Math.floor(timeDiff % 3600 / 60);
            this.testSecond = timeDiff % 60;
          } else {
            this.testHour = this.testMinute = this.testSecond = 0;
          }
        } else {
          this.testHour = this.testMinute = this.testSecond = 0;
        }
      },
      async btnsignup() {
        const store = useStore();
        const { user_id } = store.userinfo;
        if (!user_id) {
          uni.showToast({
            title: "用户未登录，请先登录",
            icon: "none"
          });
          return;
        }
        if (!this.activityId) {
          uni.showToast({
            title: "活动 ID 不存在",
            icon: "none"
          });
          return;
        }
        if (this.testHour === 0 && this.testMinute === 0 && this.testSecond === 0) {
          uni.showToast({
            title: "活动已结束",
            icon: "none"
          });
          return;
        }
        try {
          const response = await signUpActivity({ user_id, activity_id: Number(this.activityId) });
          if (response.code === 1) {
            uni.showToast({
              title: response.msg || "报名成功",
              icon: "success",
              duration: 2e3
            });
            if (this.matchedDetails) {
              this.matchedDetails.hadSignup = true;
            } else {
              formatAppLog("log", "at pages/pagesall/home/signUp.vue:250", "matchedDetails 尚未加载");
            }
            const courseListResponse = await fetchActivityCourseList(this.options);
          } else {
            uni.showToast({
              title: response.msg || "报名失败，请重试",
              icon: "error",
              duration: 2e3
            });
          }
        } catch (error2) {
          formatAppLog("error", "at pages/pagesall/home/signUp.vue:264", "报名失败:", error2);
        }
      }
    }
  };
  function _sfc_render$2q(_ctx, _cache, $props, $setup, $data, $options) {
    const _component_uni_countdown = resolveEasycom(vue.resolveDynamicComponent("uni-countdown"), __easycom_0$3);
    return vue.openBlock(), vue.createElementBlock("view", { style: { "overflow-x": "hidden" } }, [
      vue.createElementVNode(
        "view",
        {
          style: vue.normalizeStyle("height:" + ($data.statusBarHeight + 5) + "px;")
        },
        null,
        4
        /* STYLE */
      ),
      vue.createElementVNode("view", { class: "homePage" }, [
        $options.images.length ? (vue.openBlock(), vue.createElementBlock("swiper", {
          key: 0,
          class: "swiper-container",
          "indicator-dots": "true",
          autoplay: "true",
          interval: "3000",
          circular: "true",
          "indicator-color": "#ddd",
          "indicator-active-color": "#333"
        }, [
          (vue.openBlock(true), vue.createElementBlock(
            vue.Fragment,
            null,
            vue.renderList($options.images, (item, index2) => {
              return vue.openBlock(), vue.createElementBlock("swiper-item", { key: index2 }, [
                vue.createElementVNode("image", {
                  src: item.thumb,
                  class: "swiper-image"
                }, null, 8, ["src"])
              ]);
            }),
            128
            /* KEYED_FRAGMENT */
          ))
        ])) : vue.createCommentVNode("v-if", true),
        vue.createCommentVNode(" 活动 "),
        $data.matchedDetails ? (vue.openBlock(), vue.createElementBlock("view", {
          key: 1,
          class: "actiClass"
        }, [
          vue.createElementVNode("view", { class: "actitme" }, [
            vue.createCommentVNode(' <view class="linetext"></view> '),
            vue.createCommentVNode(` <view class="linetext1">{{\r
          item.is_online === 1 ? '线上' : '线下'\r
        }}</view> `),
            vue.createElementVNode("view", {
              class: "techerImg",
              style: { "width": "192rpx", "height": "176rpx", "border-radius": "8rpx" }
            }, [
              vue.createCommentVNode(' <img :src="item.avatar" alt="" /> '),
              vue.createElementVNode("img", {
                style: { "width": "100%", "height": "100%" },
                src: "https://lanhu.oss-cn-beijing.aliyuncs.com/SketchPng13a2fb02e015caf1325ed0ae70a60ac4263056e78d6de603517f5fae96ceca41",
                alt: ""
              })
            ]),
            vue.createElementVNode("view", { class: "listindex" }, [
              vue.createElementVNode(
                "view",
                { class: "actitmeText1" },
                vue.toDisplayString($data.matchedDetails.title),
                1
                /* TEXT */
              ),
              vue.createElementVNode(
                "view",
                { class: "actitmeText2" },
                "计划人数：" + vue.toDisplayString($data.matchedDetails.planum || 20) + "人",
                1
                /* TEXT */
              ),
              vue.createCommentVNode(' <view class="actitmeText3">开课时间:{{ formatDate(item.s_time) }} -\r\n            {{ formatDate(item.e_time) }}</view> '),
              vue.createElementVNode("view", { class: "actImg" }, [
                vue.createElementVNode("img", {
                  src: $data.matchedDetails.teacher_avatar,
                  alt: ""
                }, null, 8, ["src"]),
                vue.createElementVNode("view", { class: "actTeacher" }, [
                  vue.createElementVNode(
                    "text",
                    null,
                    vue.toDisplayString($data.matchedDetails.teacher_name),
                    1
                    /* TEXT */
                  ),
                  vue.createElementVNode("text", { style: { "font-size": "20rpx", "margin-top": "10rpx" } }, "授课")
                ]),
                vue.createElementVNode("view", { class: "acttime" }, [
                  vue.createElementVNode("text", { style: { "font-size": "24rpx" } }, "距结束还剩:"),
                  vue.createVNode(_component_uni_countdown, {
                    "show-day": false,
                    hour: $data.testHour,
                    minute: $data.testMinute,
                    second: $data.testSecond,
                    color: "#FFFFFF",
                    "background-color": "#007AFF"
                  }, null, 8, ["hour", "minute", "second"])
                ])
              ]),
              vue.createElementVNode("view", { class: "endbaoming" }, [
                vue.createElementVNode("view", { class: "peopers" }, [
                  vue.createElementVNode("image", {
                    style: { "width": "24rpx", "height": "32rpx" },
                    src: _imports_0$7,
                    mode: "aspectFit"
                  }),
                  vue.createElementVNode(
                    "view",
                    {
                      class: "peotext",
                      style: { "font-size": "20rpx" }
                    },
                    vue.toDisplayString($data.matchedDetails.signup_member.total) + "人报名",
                    1
                    /* TEXT */
                  ),
                  vue.createElementVNode("view", { class: "imgbox" }, [
                    (vue.openBlock(true), vue.createElementBlock(
                      vue.Fragment,
                      null,
                      vue.renderList($data.matchedDetails.signup_member.items, (img, idx) => {
                        return vue.openBlock(), vue.createElementBlock("image", {
                          src: img.avatar ? img.avatar : "",
                          key: idx,
                          style: vue.normalizeStyle({
                            position: "absolute",
                            right: `calc(20rpx * ${idx})`,
                            zIndex: 10 - idx,
                            width: "30rpx",
                            height: "30rpx",
                            borderRadius: "50%"
                          })
                        }, null, 12, ["src"]);
                      }),
                      128
                      /* KEYED_FRAGMENT */
                    ))
                  ])
                ]),
                vue.createElementVNode("view", { class: "perbtn" }, [
                  vue.createElementVNode(
                    "view",
                    { class: "permoney" },
                    vue.toDisplayString($data.matchedDetails.price <= 0 ? "免费" : "￥" + _ctx.item.price),
                    1
                    /* TEXT */
                  ),
                  vue.createElementVNode(
                    "view",
                    {
                      class: "gobtn",
                      onClick: _cache[0] || (_cache[0] = (...args) => $options.btnsignup && $options.btnsignup(...args)),
                      style: vue.normalizeStyle($data.matchedDetails.hadSignup ? { backgroundColor: "#999999" } : { background: "#ff9e02" })
                    },
                    vue.toDisplayString($data.matchedDetails.hadSignup ? "已报名" : "立即报名"),
                    5
                    /* TEXT, STYLE */
                  )
                ])
              ])
            ])
          ])
        ])) : vue.createCommentVNode("v-if", true),
        vue.createElementVNode("view", { class: "eventDetails" }, [
          vue.createElementVNode("view", { class: "detaTitle" }, [
            vue.createElementVNode("img", {
              src: "https://lanhu.oss-cn-beijing.aliyuncs.com/SketchPng771a065a39e551cb80b0755732dcaf20cc3ae52e9d4ee72c3e9f6c9d414f07cb",
              alt: ""
            }),
            vue.createElementVNode("text", { class: "detaText" }, "活动详情")
          ]),
          $data.matchedDetails ? (vue.openBlock(), vue.createElementBlock("div", {
            key: 0,
            class: "detaxiangqing",
            innerHTML: $data.matchedDetails.content
          }, null, 8, ["innerHTML"])) : (vue.openBlock(), vue.createElementBlock("view", {
            key: 1,
            class: "kong",
            style: { "display": "flex", "justify-content": "center", "align-items": "center", "height": "500rpx" }
          }, [
            vue.createElementVNode("image", {
              style: { "width": "400rpx", "height": "400rpx" },
              src: _imports_0$6,
              mode: "aspectFit"
            })
          ]))
        ])
      ])
    ]);
  }
  const PagesPagesallHomeSignUp = /* @__PURE__ */ _export_sfc(_sfc_main$2r, [["render", _sfc_render$2q], ["__file", "C:/Users/Administrator/Desktop/Project Folder/ZXHand/ZXHandwritting_APP_uniapp/pages/pagesall/home/signUp.vue"]]);
  const _sfc_main$2q = {
    __name: "MessageList",
    props: {
      messages: {
        type: Array,
        required: true
      }
    },
    setup(__props, { expose: __expose }) {
      __expose();
      const __returned__ = {};
      Object.defineProperty(__returned__, "__isScriptSetup", { enumerable: false, value: true });
      return __returned__;
    }
  };
  function _sfc_render$2p(_ctx, _cache, $props, $setup, $data, $options) {
    return vue.openBlock(), vue.createElementBlock("view", { class: "message-list" }, [
      (vue.openBlock(true), vue.createElementBlock(
        vue.Fragment,
        null,
        vue.renderList($props.messages, (message2, index2) => {
          return vue.openBlock(), vue.createElementBlock("view", {
            key: index2,
            class: "message-item"
          }, [
            vue.createElementVNode(
              "view",
              {
                class: "avatar_box",
                style: vue.normalizeStyle({ backgroundColor: message2.color })
              },
              [
                vue.createElementVNode("image", {
                  src: message2.avatar,
                  class: "avatar",
                  style: vue.normalizeStyle({ width: message2.size, height: message2.size })
                }, null, 12, ["src"])
              ],
              4
              /* STYLE */
            ),
            vue.createElementVNode("view", { class: "message-content" }, [
              vue.createElementVNode(
                "view",
                { class: "message-title" },
                vue.toDisplayString(message2.title),
                1
                /* TEXT */
              ),
              vue.createElementVNode(
                "view",
                { class: "message-subtitle" },
                vue.toDisplayString(message2.subtitle),
                1
                /* TEXT */
              )
            ]),
            vue.createElementVNode(
              "view",
              { class: "message-time" },
              vue.toDisplayString(message2.time),
              1
              /* TEXT */
            )
          ]);
        }),
        128
        /* KEYED_FRAGMENT */
      ))
    ]);
  }
  const MessageList$1 = /* @__PURE__ */ _export_sfc(_sfc_main$2q, [["render", _sfc_render$2p], ["__scopeId", "data-v-0375a599"], ["__file", "C:/Users/Administrator/Desktop/Project Folder/ZXHand/ZXHandwritting_APP_uniapp/components/MessageList/MessageList.vue"]]);
  const e = "undefined" != typeof wx && "function" == typeof wx.getSystemInfoSync && Boolean(wx.getSystemInfoSync().fontSizeSetting), t = "undefined" != typeof uni && "undefined" == typeof window, n = e || t, o = "undefined" != typeof uni, r = ("undefined" != typeof uni || "undefined" != typeof window) && !n, i = e ? wx : o ? uni : "undefined" != typeof window ? window : {}, c = r && window && window.navigator && window.navigator.userAgent || "", s = /Android/i.test(c), l = /(?:Windows Phone)/.test(c), u = /(?:SymbianOS)/.test(c), d = r && ("ontouchstart" in window || navigator.maxTouchPoints > 0) && function() {
    if (r)
      return !!/Tablet|Pad/i.test(c) || (window.matchMedia("(orientation: portrait)").matches ? window.innerWidth >= 768 && window.innerHeight >= 1024 : window.innerWidth >= 1024 && window.innerHeight >= 768);
    return false;
  }(), f = /iPhone/i.test(c) || /iPod/i.test(c), a = e, w = s || l || u || f || d, g = r && !w, m = t && !e;
  function h() {
    let e2 = "";
    return g ? e2 = "pc" : w ? e2 = "h5" : a ? e2 = "wechat" : m && (e2 = "app"), e2;
  }
  const v = /* @__PURE__ */ new Map();
  function E(e2, t2) {
    v.set(e2, t2);
  }
  function b(e2, t2) {
    if (!e2)
      return Promise.reject(new Error(`getBoundingClientRect get error selector ${typeof e2}.`));
    if (window || document) {
      const t3 = "object" == typeof e2 ? e2 : document.querySelector(e2);
      if (!t3)
        return Promise.reject(new Error(`getBoundingClientRect can't find ${e2} dom.`));
      const n2 = t3.getBoundingClientRect();
      return Promise.resolve({ id: t3.id, top: n2.top, left: n2.left, right: n2.right, bottom: n2.bottom, width: n2.width, height: n2.height, x: n2.x, y: n2.y });
    }
    if (o) {
      if (!t2)
        return Promise.reject(new Error("getBoundingClientRect need instanceName in params."));
      const n2 = uni.createSelectorQuery().in(v.get(t2));
      return new Promise((t3, o2) => {
        n2.select(e2).boundingClientRect((e3) => {
          e3 && t3(e3);
        }).exec(), setTimeout(() => o2(new Error(`getBoundingClientRect ${e2} timeout.`)), 500);
      });
    }
    return Promise.reject(new Error("getBoundingClientRect occur error"));
  }
  function T(e2, t2) {
    if (!e2)
      return Promise.reject(new Error(`getScrollInfo get error selector ${typeof e2}.`));
    if (!o && window) {
      const t3 = "object" == typeof e2 ? e2 : document.querySelector(e2);
      return t3 ? Promise.resolve({ id: t3.id, scrollTop: t3.scrollTop, scrollLeft: t3.scrollLeft, scrollWidth: t3.scrollWidth, scrollHeight: t3.scrollHeight }) : Promise.reject(new Error(`getScrollInfo can't find ${e2} dom.`));
    }
    if (o) {
      if (!t2)
        return Promise.reject(new Error("getScrollInfo need instanceName in params."));
      const n2 = uni.createSelectorQuery().in(v.get(t2));
      return new Promise((t3, o2) => {
        n2.select(e2).scrollOffset((e3) => {
          e3 && t3(e3);
        }).exec(), setTimeout(() => o2(new Error(`getScrollInfo ${e2} timeout.`)), 500);
      });
    }
    return Promise.reject(new Error("getScrollInfo occur error"));
  }
  class C {
    constructor() {
      if (C.instance)
        return C.instance;
      C.instance = this, this.eventCallback = null, this.listener = null, this.button = 0, this.init();
    }
    init() {
      r && (this.eventCallback = (e2) => {
        this.listener && this.listener(e2);
      }, document.addEventListener("mousedown", this.eventCallback));
    }
    listen(e2) {
      if (r) {
        const { domRefs: t2, ignoreDomRefs: n2, handler: o2, button: r2 = 0 } = e2;
        this.button = r2, this.listener = (e3) => {
          const r3 = Array.isArray(n2) ? n2 : [n2];
          for (const t3 of r3)
            if (t3 && t3.contains(e3.target))
              return;
          const i2 = Array.isArray(t2) ? t2 : [t2];
          for (const t3 of i2)
            if (t3 && t3.contains(e3.target) && this.button === e3.button)
              return;
          o2(e3), this.remove();
        };
      }
    }
    remove() {
      this.listener = null, this.button = -1;
    }
  }
  function I(e2) {
    const { element: t2, onLongPress: n2, options: o2 = {} } = e2;
    if (!t2 || !n2)
      throw new Error("addLongPressEventListener missing arguments");
    const { duration: r2 = 800, eventDelegation: i2 } = o2;
    let c2;
    function s2() {
      clearTimeout(c2), u2();
    }
    function l2() {
      clearTimeout(c2), u2();
    }
    function u2() {
      t2.removeEventListener("pointerup", s2), t2.removeEventListener("pointermove", l2);
    }
    t2.addEventListener("pointerdown", (e3) => {
      const o3 = e3.target, u3 = (null == i2 ? void 0 : i2.subSelector) ? o3.closest(i2.subSelector) || void 0 : o3, d2 = e3.currentTarget;
      c2 = setTimeout(() => n2(e3, u3, d2), r2), t2.addEventListener("pointerup", s2), t2.addEventListener("pointermove", l2);
    });
  }
  formatAppLog("log", "at node_modules/@tencentcloud/universal-api/index.js:1", "UniversalAPI.VERSION:2.3.2");
  const R = new C();
  const isPC = h() === "pc";
  const isH5 = h() === "h5";
  const isWeChat = h() === "wechat";
  const isApp$1 = h() === "app";
  const isUniFrameWork = typeof uni !== "undefined";
  const isMobile = isH5 || isWeChat || isApp$1;
  const _sfc_main$2p = /* @__PURE__ */ vue.defineComponent({
    __name: "Icon",
    props: {
      file: { type: String, required: true, default: "" },
      size: { type: String, required: false },
      width: { type: String, required: false, default: "20px" },
      height: { type: String, required: false, default: "20px" },
      hotAreaSize: { type: [Number, String], required: false }
    },
    emits: ["onClick"],
    setup(__props, { expose: __expose, emit: __emit }) {
      __expose();
      const emits2 = __emit;
      const props2 = __props;
      const iconHotAreaSize = vue.computed(() => {
        if (!props2.hotAreaSize) {
          return void 0;
        }
        if (isNaN(Number(props2.hotAreaSize))) {
          return String(props2.hotAreaSize);
        }
        return `${props2.hotAreaSize}px`;
      });
      const iconWidth = vue.computed(() => {
        return props2.size ? props2.size : props2.width;
      });
      const iconHeight = vue.computed(() => {
        return props2.size ? props2.size : props2.height;
      });
      const handleImgClick = (e2) => {
        emits2("onClick", e2);
      };
      const __returned__ = { emits: emits2, props: props2, iconHotAreaSize, iconWidth, iconHeight, handleImgClick, get isApp() {
        return isApp$1;
      }, get isPC() {
        return isPC;
      } };
      Object.defineProperty(__returned__, "__isScriptSetup", { enumerable: false, value: true });
      return __returned__;
    }
  });
  function _sfc_render$2o(_ctx, _cache, $props, $setup, $data, $options) {
    return vue.openBlock(), vue.createElementBlock(
      "div",
      {
        class: vue.normalizeClass(["common-icon-container", !$setup.isPC && "common-icon-container-mobile"]),
        style: vue.normalizeStyle({
          padding: $setup.iconHotAreaSize
        }),
        onClick: $setup.handleImgClick
      },
      [
        $setup.isApp ? (vue.openBlock(), vue.createElementBlock("image", {
          key: 0,
          class: "common-icon",
          src: $setup.props.file,
          style: vue.normalizeStyle({ width: $setup.iconWidth, height: $setup.iconHeight })
        }, null, 12, ["src"])) : (vue.openBlock(), vue.createElementBlock("img", {
          key: 1,
          class: "common-icon",
          src: $setup.props.file,
          style: vue.normalizeStyle({ width: $setup.iconWidth, height: $setup.iconHeight })
        }, null, 12, ["src"]))
      ],
      6
      /* CLASS, STYLE */
    );
  }
  const Icon$1 = /* @__PURE__ */ _export_sfc(_sfc_main$2p, [["render", _sfc_render$2o], ["__scopeId", "data-v-6d890098"], ["__file", "C:/Users/Administrator/Desktop/Project Folder/ZXHand/ZXHandwritting_APP_uniapp/TUIKit/components/common/Icon.vue"]]);
  const searchIcon = "/assets/search.dabca596.svg";
  const closeIcon$2 = "/assets/input-close.3bf506b7.svg";
  const _sfc_main$2o = /* @__PURE__ */ vue.defineComponent({
    __name: "index",
    props: {
      placeholder: {
        type: String,
        default: () => Jt.t("TUISearch.搜索")
      },
      searchType: {
        type: String,
        default: "global",
        // "global" / "conversation"
        validator(value) {
          return ["global", "conversation"].includes(value);
        }
      }
    },
    setup(__props, { expose: __expose }) {
      __expose();
      const props2 = __props;
      const searchValueModel = vue.ref("");
      const currentSearchInputValue = vue.ref("");
      const searchingStatus = vue.ref(false);
      function onCurrentSearchInputValueChange(obj) {
        if ((obj == null ? void 0 : obj.searchType) === (props2 == null ? void 0 : props2.searchType)) {
          currentSearchInputValue.value = obj == null ? void 0 : obj.value;
          searchValueModel.value = obj == null ? void 0 : obj.value;
        }
      }
      function onCurrentSearchingStatusChange(obj) {
        if ((obj == null ? void 0 : obj.searchType) === (props2 == null ? void 0 : props2.searchType)) {
          searchingStatus.value = obj == null ? void 0 : obj.isSearching;
        }
      }
      vue.onMounted(() => {
        zt.watch(o$2.SEARCH, {
          currentSearchInputValue: onCurrentSearchInputValueChange,
          currentSearchingStatus: onCurrentSearchingStatusChange
        });
      });
      vue.onUnmounted(() => {
        zt.unwatch(o$2.SEARCH, {
          currentSearchInputValue: onCurrentSearchInputValueChange,
          currentSearchingStatus: onCurrentSearchingStatusChange
        });
      });
      const search = () => {
        if (searchValueModel.value === currentSearchInputValue.value) {
          return;
        }
        zt.update(o$2.SEARCH, "currentSearchInputValue", {
          value: searchValueModel.value,
          searchType: props2.searchType
        });
      };
      const endSearching = () => {
        searchingStatus.value = false;
        zt.update(o$2.SEARCH, "currentSearchingStatus", {
          isSearching: false,
          searchType: props2.searchType
        });
        zt.update(o$2.SEARCH, "currentSearchInputValue", {
          value: "",
          searchType: props2.searchType
        });
      };
      const onSearchInputClick = () => {
        zt.update(o$2.SEARCH, "currentSearchingStatus", {
          isSearching: true,
          searchType: props2.searchType
        });
      };
      const onBlur = () => {
        var _a;
        (_a = i == null ? void 0 : i.hideKeyboard) == null ? void 0 : _a.call(i);
      };
      const __returned__ = { props: props2, searchValueModel, currentSearchInputValue, searchingStatus, onCurrentSearchInputValueChange, onCurrentSearchingStatusChange, search, endSearching, onSearchInputClick, onBlur, get TUITranslateService() {
        return Jt;
      }, Icon: Icon$1, get searchIcon() {
        return searchIcon;
      }, get closeIcon() {
        return closeIcon$2;
      }, get isPC() {
        return isPC;
      } };
      Object.defineProperty(__returned__, "__isScriptSetup", { enumerable: false, value: true });
      return __returned__;
    }
  });
  function _sfc_render$2n(_ctx, _cache, $props, $setup, $data, $options) {
    return vue.openBlock(), vue.createElementBlock(
      "div",
      {
        class: vue.normalizeClass([
          "tui-search-input-container",
          !$setup.isPC && "tui-search-input-container-h5",
          $setup.props.searchType === "global" ? "tui-search-input-container-global" : "tui-search-input-container-conversation"
        ])
      },
      [
        vue.createElementVNode(
          "div",
          {
            class: vue.normalizeClass(["tui-search-input", !$setup.isPC && "tui-search-input-h5"])
          },
          [
            vue.createElementVNode("div", { class: "tui-search-input-left" }, [
              vue.createVNode($setup["Icon"], {
                class: "icon",
                file: $setup.searchIcon,
                width: "14px",
                height: "14px"
              }, null, 8, ["file"])
            ]),
            vue.withDirectives(vue.createElementVNode("input", {
              "onUpdate:modelValue": _cache[0] || (_cache[0] = ($event) => $setup.searchValueModel = $event),
              class: "tui-search-input-main",
              type: "text",
              placeholder: $setup.props.placeholder,
              focus: false,
              enterkeyhint: "search",
              onBlur: $setup.onBlur,
              onKeyup: vue.withKeys($setup.search, ["enter"]),
              onConfirm: $setup.search,
              onClick: vue.withModifiers($setup.onSearchInputClick, ["stop", "prevent"])
            }, null, 40, ["placeholder"]), [
              [vue.vModelText, $setup.searchValueModel]
            ]),
            $setup.searchingStatus ? (vue.openBlock(), vue.createElementBlock("div", {
              key: 0,
              class: "tui-search-input-right",
              onClick: $setup.endSearching
            }, [
              vue.createVNode($setup["Icon"], {
                class: "icon",
                file: $setup.closeIcon,
                width: "14px",
                height: "14px"
              }, null, 8, ["file"])
            ])) : vue.createCommentVNode("v-if", true)
          ],
          2
          /* CLASS */
        ),
        !$setup.isPC && $setup.searchingStatus && $setup.props.searchType === "global" ? (vue.openBlock(), vue.createElementBlock(
          "div",
          {
            key: 0,
            class: vue.normalizeClass([
              "tui-search-input-cancel",
              !$setup.isPC && "tui-search-input-h5-cancel"
            ]),
            onClick: $setup.endSearching
          },
          vue.toDisplayString($setup.TUITranslateService.t("TUISearch.取消")),
          3
          /* TEXT, CLASS */
        )) : vue.createCommentVNode("v-if", true)
      ],
      2
      /* CLASS */
    );
  }
  const SearchInput = /* @__PURE__ */ _export_sfc(_sfc_main$2o, [["render", _sfc_render$2n], ["__scopeId", "data-v-9c7789a6"], ["__file", "C:/Users/Administrator/Desktop/Project Folder/ZXHand/ZXHandwritting_APP_uniapp/TUIKit/components/TUISearch/search-input/index.vue"]]);
  const allMessageTypeList = [
    Kt.TYPES.MSG_TEXT,
    Kt.TYPES.MSG_FILE,
    Kt.TYPES.MSG_IMAGE,
    Kt.TYPES.MSG_VIDEO,
    Kt.TYPES.MSG_AUDIO,
    Kt.TYPES.MSG_LOCATION,
    Kt.TYPES.MSG_CUSTOM,
    Kt.TYPES.MSG_MERGER
  ];
  const searchMessageTypeList = {
    allMessage: {
      key: "allMessage",
      label: "全部",
      value: allMessageTypeList
    },
    textMessage: {
      key: "textMessage",
      label: "文本",
      value: [Kt.TYPES.MSG_TEXT]
    },
    fileMessage: {
      key: "fileMessage",
      label: "文件",
      value: [Kt.TYPES.MSG_FILE]
    },
    imageMessage: {
      key: "imageMessage",
      label: "图片/视频",
      value: [Kt.TYPES.MSG_IMAGE, Kt.TYPES.MSG_VIDEO]
    },
    otherMessage: {
      key: "otherMessage",
      label: "其他",
      value: [
        Kt.TYPES.MSG_AUDIO,
        Kt.TYPES.MSG_LOCATION,
        Kt.TYPES.MSG_CUSTOM,
        Kt.TYPES.MSG_MERGER
      ]
    }
  };
  Object.keys(searchMessageTypeList).filter(
    (key) => key !== "all"
  );
  const searchInGlobalDefaultType = searchMessageTypeList["allMessage"];
  const searchInConversationDefaultType = searchMessageTypeList["textMessage"];
  const searchMessageTypeDefault = {
    global: searchInGlobalDefaultType,
    conversation: searchInConversationDefaultType
  };
  const globalSearchTypeKeys = ["allMessage", "textMessage", "fileMessage", "otherMessage"];
  const globalSearchTypeList = Object.keys(searchMessageTypeList).filter((key) => globalSearchTypeKeys == null ? void 0 : globalSearchTypeKeys.includes(key)).reduce((obj, key) => {
    obj[key] = searchMessageTypeList[key];
    return obj;
  }, {});
  const conversationSearchTypeKeys = [
    "textMessage",
    "fileMessage",
    "imageMessage",
    "otherMessage"
  ];
  const conversationSearchTypeList = Object.keys(searchMessageTypeList).filter((key) => conversationSearchTypeKeys == null ? void 0 : conversationSearchTypeKeys.includes(key)).reduce((obj, key) => {
    obj[key] = searchMessageTypeList[key];
    return obj;
  }, {});
  const oneDay = 24 * 60 * 60;
  const searchMessageTimeList = {
    all: {
      key: "all",
      label: "全部",
      value: {
        timePosition: 0,
        timePeriod: 0
      }
    },
    oneDay: {
      key: "today",
      label: "今天",
      value: {
        timePosition: 0,
        timePeriod: oneDay
      }
    },
    threeDay: {
      key: "threeDays",
      label: "近三天",
      value: {
        timePosition: 0,
        timePeriod: 3 * oneDay
      }
    },
    sevenDay: {
      key: "sevenDays",
      label: "近七天",
      value: {
        timePosition: 0,
        timePeriod: 7 * oneDay
      }
    }
  };
  const searchMessageTimeDefault = searchMessageTimeList["all"];
  var dayjs_min = { exports: {} };
  var hasRequiredDayjs_min;
  function requireDayjs_min() {
    if (hasRequiredDayjs_min)
      return dayjs_min.exports;
    hasRequiredDayjs_min = 1;
    (function(module, exports) {
      !function(t2, e2) {
        module.exports = e2();
      }(commonjsGlobal, function() {
        var t2 = 1e3, e2 = 6e4, n2 = 36e5, r2 = "millisecond", i2 = "second", s2 = "minute", u2 = "hour", a2 = "day", o2 = "week", c2 = "month", f2 = "quarter", h2 = "year", d2 = "date", l2 = "Invalid Date", $2 = /^(\d{4})[-/]?(\d{1,2})?[-/]?(\d{0,2})[Tt\s]*(\d{1,2})?:?(\d{1,2})?:?(\d{1,2})?[.:]?(\d+)?$/, y2 = /\[([^\]]+)]|Y{1,4}|M{1,4}|D{1,2}|d{1,4}|H{1,2}|h{1,2}|a|A|m{1,2}|s{1,2}|Z{1,2}|SSS/g, M2 = { name: "en", weekdays: "Sunday_Monday_Tuesday_Wednesday_Thursday_Friday_Saturday".split("_"), months: "January_February_March_April_May_June_July_August_September_October_November_December".split("_"), ordinal: function(t3) {
          var e3 = ["th", "st", "nd", "rd"], n3 = t3 % 100;
          return "[" + t3 + (e3[(n3 - 20) % 10] || e3[n3] || e3[0]) + "]";
        } }, m2 = function(t3, e3, n3) {
          var r3 = String(t3);
          return !r3 || r3.length >= e3 ? t3 : "" + Array(e3 + 1 - r3.length).join(n3) + t3;
        }, v2 = { s: m2, z: function(t3) {
          var e3 = -t3.utcOffset(), n3 = Math.abs(e3), r3 = Math.floor(n3 / 60), i3 = n3 % 60;
          return (e3 <= 0 ? "+" : "-") + m2(r3, 2, "0") + ":" + m2(i3, 2, "0");
        }, m: function t3(e3, n3) {
          if (e3.date() < n3.date())
            return -t3(n3, e3);
          var r3 = 12 * (n3.year() - e3.year()) + (n3.month() - e3.month()), i3 = e3.clone().add(r3, c2), s3 = n3 - i3 < 0, u3 = e3.clone().add(r3 + (s3 ? -1 : 1), c2);
          return +(-(r3 + (n3 - i3) / (s3 ? i3 - u3 : u3 - i3)) || 0);
        }, a: function(t3) {
          return t3 < 0 ? Math.ceil(t3) || 0 : Math.floor(t3);
        }, p: function(t3) {
          return { M: c2, y: h2, w: o2, d: a2, D: d2, h: u2, m: s2, s: i2, ms: r2, Q: f2 }[t3] || String(t3 || "").toLowerCase().replace(/s$/, "");
        }, u: function(t3) {
          return void 0 === t3;
        } }, g2 = "en", D2 = {};
        D2[g2] = M2;
        var p2 = "$isDayjsObject", S2 = function(t3) {
          return t3 instanceof _2 || !(!t3 || !t3[p2]);
        }, w2 = function t3(e3, n3, r3) {
          var i3;
          if (!e3)
            return g2;
          if ("string" == typeof e3) {
            var s3 = e3.toLowerCase();
            D2[s3] && (i3 = s3), n3 && (D2[s3] = n3, i3 = s3);
            var u3 = e3.split("-");
            if (!i3 && u3.length > 1)
              return t3(u3[0]);
          } else {
            var a3 = e3.name;
            D2[a3] = e3, i3 = a3;
          }
          return !r3 && i3 && (g2 = i3), i3 || !r3 && g2;
        }, O2 = function(t3, e3) {
          if (S2(t3))
            return t3.clone();
          var n3 = "object" == typeof e3 ? e3 : {};
          return n3.date = t3, n3.args = arguments, new _2(n3);
        }, b2 = v2;
        b2.l = w2, b2.i = S2, b2.w = function(t3, e3) {
          return O2(t3, { locale: e3.$L, utc: e3.$u, x: e3.$x, $offset: e3.$offset });
        };
        var _2 = function() {
          function M3(t3) {
            this.$L = w2(t3.locale, null, true), this.parse(t3), this.$x = this.$x || t3.x || {}, this[p2] = true;
          }
          var m3 = M3.prototype;
          return m3.parse = function(t3) {
            this.$d = function(t4) {
              var e3 = t4.date, n3 = t4.utc;
              if (null === e3)
                return /* @__PURE__ */ new Date(NaN);
              if (b2.u(e3))
                return /* @__PURE__ */ new Date();
              if (e3 instanceof Date)
                return new Date(e3);
              if ("string" == typeof e3 && !/Z$/i.test(e3)) {
                var r3 = e3.match($2);
                if (r3) {
                  var i3 = r3[2] - 1 || 0, s3 = (r3[7] || "0").substring(0, 3);
                  return n3 ? new Date(Date.UTC(r3[1], i3, r3[3] || 1, r3[4] || 0, r3[5] || 0, r3[6] || 0, s3)) : new Date(r3[1], i3, r3[3] || 1, r3[4] || 0, r3[5] || 0, r3[6] || 0, s3);
                }
              }
              return new Date(e3);
            }(t3), this.init();
          }, m3.init = function() {
            var t3 = this.$d;
            this.$y = t3.getFullYear(), this.$M = t3.getMonth(), this.$D = t3.getDate(), this.$W = t3.getDay(), this.$H = t3.getHours(), this.$m = t3.getMinutes(), this.$s = t3.getSeconds(), this.$ms = t3.getMilliseconds();
          }, m3.$utils = function() {
            return b2;
          }, m3.isValid = function() {
            return !(this.$d.toString() === l2);
          }, m3.isSame = function(t3, e3) {
            var n3 = O2(t3);
            return this.startOf(e3) <= n3 && n3 <= this.endOf(e3);
          }, m3.isAfter = function(t3, e3) {
            return O2(t3) < this.startOf(e3);
          }, m3.isBefore = function(t3, e3) {
            return this.endOf(e3) < O2(t3);
          }, m3.$g = function(t3, e3, n3) {
            return b2.u(t3) ? this[e3] : this.set(n3, t3);
          }, m3.unix = function() {
            return Math.floor(this.valueOf() / 1e3);
          }, m3.valueOf = function() {
            return this.$d.getTime();
          }, m3.startOf = function(t3, e3) {
            var n3 = this, r3 = !!b2.u(e3) || e3, f3 = b2.p(t3), l3 = function(t4, e4) {
              var i3 = b2.w(n3.$u ? Date.UTC(n3.$y, e4, t4) : new Date(n3.$y, e4, t4), n3);
              return r3 ? i3 : i3.endOf(a2);
            }, $3 = function(t4, e4) {
              return b2.w(n3.toDate()[t4].apply(n3.toDate("s"), (r3 ? [0, 0, 0, 0] : [23, 59, 59, 999]).slice(e4)), n3);
            }, y3 = this.$W, M4 = this.$M, m4 = this.$D, v3 = "set" + (this.$u ? "UTC" : "");
            switch (f3) {
              case h2:
                return r3 ? l3(1, 0) : l3(31, 11);
              case c2:
                return r3 ? l3(1, M4) : l3(0, M4 + 1);
              case o2:
                var g3 = this.$locale().weekStart || 0, D3 = (y3 < g3 ? y3 + 7 : y3) - g3;
                return l3(r3 ? m4 - D3 : m4 + (6 - D3), M4);
              case a2:
              case d2:
                return $3(v3 + "Hours", 0);
              case u2:
                return $3(v3 + "Minutes", 1);
              case s2:
                return $3(v3 + "Seconds", 2);
              case i2:
                return $3(v3 + "Milliseconds", 3);
              default:
                return this.clone();
            }
          }, m3.endOf = function(t3) {
            return this.startOf(t3, false);
          }, m3.$set = function(t3, e3) {
            var n3, o3 = b2.p(t3), f3 = "set" + (this.$u ? "UTC" : ""), l3 = (n3 = {}, n3[a2] = f3 + "Date", n3[d2] = f3 + "Date", n3[c2] = f3 + "Month", n3[h2] = f3 + "FullYear", n3[u2] = f3 + "Hours", n3[s2] = f3 + "Minutes", n3[i2] = f3 + "Seconds", n3[r2] = f3 + "Milliseconds", n3)[o3], $3 = o3 === a2 ? this.$D + (e3 - this.$W) : e3;
            if (o3 === c2 || o3 === h2) {
              var y3 = this.clone().set(d2, 1);
              y3.$d[l3]($3), y3.init(), this.$d = y3.set(d2, Math.min(this.$D, y3.daysInMonth())).$d;
            } else
              l3 && this.$d[l3]($3);
            return this.init(), this;
          }, m3.set = function(t3, e3) {
            return this.clone().$set(t3, e3);
          }, m3.get = function(t3) {
            return this[b2.p(t3)]();
          }, m3.add = function(r3, f3) {
            var d3, l3 = this;
            r3 = Number(r3);
            var $3 = b2.p(f3), y3 = function(t3) {
              var e3 = O2(l3);
              return b2.w(e3.date(e3.date() + Math.round(t3 * r3)), l3);
            };
            if ($3 === c2)
              return this.set(c2, this.$M + r3);
            if ($3 === h2)
              return this.set(h2, this.$y + r3);
            if ($3 === a2)
              return y3(1);
            if ($3 === o2)
              return y3(7);
            var M4 = (d3 = {}, d3[s2] = e2, d3[u2] = n2, d3[i2] = t2, d3)[$3] || 1, m4 = this.$d.getTime() + r3 * M4;
            return b2.w(m4, this);
          }, m3.subtract = function(t3, e3) {
            return this.add(-1 * t3, e3);
          }, m3.format = function(t3) {
            var e3 = this, n3 = this.$locale();
            if (!this.isValid())
              return n3.invalidDate || l2;
            var r3 = t3 || "YYYY-MM-DDTHH:mm:ssZ", i3 = b2.z(this), s3 = this.$H, u3 = this.$m, a3 = this.$M, o3 = n3.weekdays, c3 = n3.months, f3 = n3.meridiem, h3 = function(t4, n4, i4, s4) {
              return t4 && (t4[n4] || t4(e3, r3)) || i4[n4].slice(0, s4);
            }, d3 = function(t4) {
              return b2.s(s3 % 12 || 12, t4, "0");
            }, $3 = f3 || function(t4, e4, n4) {
              var r4 = t4 < 12 ? "AM" : "PM";
              return n4 ? r4.toLowerCase() : r4;
            };
            return r3.replace(y2, function(t4, r4) {
              return r4 || function(t5) {
                switch (t5) {
                  case "YY":
                    return String(e3.$y).slice(-2);
                  case "YYYY":
                    return b2.s(e3.$y, 4, "0");
                  case "M":
                    return a3 + 1;
                  case "MM":
                    return b2.s(a3 + 1, 2, "0");
                  case "MMM":
                    return h3(n3.monthsShort, a3, c3, 3);
                  case "MMMM":
                    return h3(c3, a3);
                  case "D":
                    return e3.$D;
                  case "DD":
                    return b2.s(e3.$D, 2, "0");
                  case "d":
                    return String(e3.$W);
                  case "dd":
                    return h3(n3.weekdaysMin, e3.$W, o3, 2);
                  case "ddd":
                    return h3(n3.weekdaysShort, e3.$W, o3, 3);
                  case "dddd":
                    return o3[e3.$W];
                  case "H":
                    return String(s3);
                  case "HH":
                    return b2.s(s3, 2, "0");
                  case "h":
                    return d3(1);
                  case "hh":
                    return d3(2);
                  case "a":
                    return $3(s3, u3, true);
                  case "A":
                    return $3(s3, u3, false);
                  case "m":
                    return String(u3);
                  case "mm":
                    return b2.s(u3, 2, "0");
                  case "s":
                    return String(e3.$s);
                  case "ss":
                    return b2.s(e3.$s, 2, "0");
                  case "SSS":
                    return b2.s(e3.$ms, 3, "0");
                  case "Z":
                    return i3;
                }
                return null;
              }(t4) || i3.replace(":", "");
            });
          }, m3.utcOffset = function() {
            return 15 * -Math.round(this.$d.getTimezoneOffset() / 15);
          }, m3.diff = function(r3, d3, l3) {
            var $3, y3 = this, M4 = b2.p(d3), m4 = O2(r3), v3 = (m4.utcOffset() - this.utcOffset()) * e2, g3 = this - m4, D3 = function() {
              return b2.m(y3, m4);
            };
            switch (M4) {
              case h2:
                $3 = D3() / 12;
                break;
              case c2:
                $3 = D3();
                break;
              case f2:
                $3 = D3() / 3;
                break;
              case o2:
                $3 = (g3 - v3) / 6048e5;
                break;
              case a2:
                $3 = (g3 - v3) / 864e5;
                break;
              case u2:
                $3 = g3 / n2;
                break;
              case s2:
                $3 = g3 / e2;
                break;
              case i2:
                $3 = g3 / t2;
                break;
              default:
                $3 = g3;
            }
            return l3 ? $3 : b2.a($3);
          }, m3.daysInMonth = function() {
            return this.endOf(c2).$D;
          }, m3.$locale = function() {
            return D2[this.$L];
          }, m3.locale = function(t3, e3) {
            if (!t3)
              return this.$L;
            var n3 = this.clone(), r3 = w2(t3, e3, true);
            return r3 && (n3.$L = r3), n3;
          }, m3.clone = function() {
            return b2.w(this.$d, this);
          }, m3.toDate = function() {
            return new Date(this.valueOf());
          }, m3.toJSON = function() {
            return this.isValid() ? this.toISOString() : null;
          }, m3.toISOString = function() {
            return this.$d.toISOString();
          }, m3.toString = function() {
            return this.$d.toUTCString();
          }, M3;
        }(), k2 = _2.prototype;
        return O2.prototype = k2, [["$ms", r2], ["$s", i2], ["$m", s2], ["$H", u2], ["$W", a2], ["$M", c2], ["$y", h2], ["$D", d2]].forEach(function(t3) {
          k2[t3[1]] = function(e3) {
            return this.$g(e3, t3[0], t3[1]);
          };
        }), O2.extend = function(t3, e3) {
          return t3.$i || (t3(e3, _2, O2), t3.$i = true), O2;
        }, O2.locale = w2, O2.isDayjs = S2, O2.unix = function(t3) {
          return O2(1e3 * t3);
        }, O2.en = D2[g2], O2.Ls = D2, O2.p = {}, O2;
      });
    })(dayjs_min);
    return dayjs_min.exports;
  }
  var dayjs_minExports = requireDayjs_min();
  const dayjs = /* @__PURE__ */ getDefaultExportFromCjs(dayjs_minExports);
  var localeData$1 = { exports: {} };
  (function(module, exports) {
    !function(n2, e2) {
      module.exports = e2();
    }(commonjsGlobal, function() {
      return function(n2, e2, t2) {
        var r2 = e2.prototype, o2 = function(n3) {
          return n3 && (n3.indexOf ? n3 : n3.s);
        }, u2 = function(n3, e3, t3, r3, u3) {
          var i3 = n3.name ? n3 : n3.$locale(), a3 = o2(i3[e3]), s3 = o2(i3[t3]), f2 = a3 || s3.map(function(n4) {
            return n4.slice(0, r3);
          });
          if (!u3)
            return f2;
          var d2 = i3.weekStart;
          return f2.map(function(n4, e4) {
            return f2[(e4 + (d2 || 0)) % 7];
          });
        }, i2 = function() {
          return t2.Ls[t2.locale()];
        }, a2 = function(n3, e3) {
          return n3.formats[e3] || function(n4) {
            return n4.replace(/(\[[^\]]+])|(MMMM|MM|DD|dddd)/g, function(n5, e4, t3) {
              return e4 || t3.slice(1);
            });
          }(n3.formats[e3.toUpperCase()]);
        }, s2 = function() {
          var n3 = this;
          return { months: function(e3) {
            return e3 ? e3.format("MMMM") : u2(n3, "months");
          }, monthsShort: function(e3) {
            return e3 ? e3.format("MMM") : u2(n3, "monthsShort", "months", 3);
          }, firstDayOfWeek: function() {
            return n3.$locale().weekStart || 0;
          }, weekdays: function(e3) {
            return e3 ? e3.format("dddd") : u2(n3, "weekdays");
          }, weekdaysMin: function(e3) {
            return e3 ? e3.format("dd") : u2(n3, "weekdaysMin", "weekdays", 2);
          }, weekdaysShort: function(e3) {
            return e3 ? e3.format("ddd") : u2(n3, "weekdaysShort", "weekdays", 3);
          }, longDateFormat: function(e3) {
            return a2(n3.$locale(), e3);
          }, meridiem: this.$locale().meridiem, ordinal: this.$locale().ordinal };
        };
        r2.localeData = function() {
          return s2.bind(this)();
        }, t2.localeData = function() {
          var n3 = i2();
          return { firstDayOfWeek: function() {
            return n3.weekStart || 0;
          }, weekdays: function() {
            return t2.weekdays();
          }, weekdaysShort: function() {
            return t2.weekdaysShort();
          }, weekdaysMin: function() {
            return t2.weekdaysMin();
          }, months: function() {
            return t2.months();
          }, monthsShort: function() {
            return t2.monthsShort();
          }, longDateFormat: function(e3) {
            return a2(n3, e3);
          }, meridiem: n3.meridiem, ordinal: n3.ordinal };
        }, t2.months = function() {
          return u2(i2(), "months");
        }, t2.monthsShort = function() {
          return u2(i2(), "monthsShort", "months", 3);
        }, t2.weekdays = function(n3) {
          return u2(i2(), "weekdays", null, null, n3);
        }, t2.weekdaysShort = function(n3) {
          return u2(i2(), "weekdaysShort", "weekdays", 3, n3);
        }, t2.weekdaysMin = function(n3) {
          return u2(i2(), "weekdaysMin", "weekdays", 2, n3);
        };
      };
    });
  })(localeData$1);
  var localeDataExports = localeData$1.exports;
  const localeData = /* @__PURE__ */ getDefaultExportFromCjs(localeDataExports);
  var isSameOrAfter$1 = { exports: {} };
  (function(module, exports) {
    !function(e2, t2) {
      module.exports = t2();
    }(commonjsGlobal, function() {
      return function(e2, t2) {
        t2.prototype.isSameOrAfter = function(e3, t3) {
          return this.isSame(e3, t3) || this.isAfter(e3, t3);
        };
      };
    });
  })(isSameOrAfter$1);
  var isSameOrAfterExports = isSameOrAfter$1.exports;
  const isSameOrAfter = /* @__PURE__ */ getDefaultExportFromCjs(isSameOrAfterExports);
  var isSameOrBefore$1 = { exports: {} };
  (function(module, exports) {
    !function(e2, i2) {
      module.exports = i2();
    }(commonjsGlobal, function() {
      return function(e2, i2) {
        i2.prototype.isSameOrBefore = function(e3, i3) {
          return this.isSame(e3, i3) || this.isBefore(e3, i3);
        };
      };
    });
  })(isSameOrBefore$1);
  var isSameOrBeforeExports = isSameOrBefore$1.exports;
  const isSameOrBefore = /* @__PURE__ */ getDefaultExportFromCjs(isSameOrBeforeExports);
  var zhCn = { exports: {} };
  (function(module, exports) {
    !function(e2, _2) {
      module.exports = _2(requireDayjs_min());
    }(commonjsGlobal, function(e2) {
      function _2(e3) {
        return e3 && "object" == typeof e3 && "default" in e3 ? e3 : { default: e3 };
      }
      var t2 = _2(e2), d2 = { name: "zh-cn", weekdays: "星期日_星期一_星期二_星期三_星期四_星期五_星期六".split("_"), weekdaysShort: "周日_周一_周二_周三_周四_周五_周六".split("_"), weekdaysMin: "日_一_二_三_四_五_六".split("_"), months: "一月_二月_三月_四月_五月_六月_七月_八月_九月_十月_十一月_十二月".split("_"), monthsShort: "1月_2月_3月_4月_5月_6月_7月_8月_9月_10月_11月_12月".split("_"), ordinal: function(e3, _3) {
        return "W" === _3 ? e3 + "周" : e3 + "日";
      }, weekStart: 1, yearStart: 4, formats: { LT: "HH:mm", LTS: "HH:mm:ss", L: "YYYY/MM/DD", LL: "YYYY年M月D日", LLL: "YYYY年M月D日Ah点mm分", LLLL: "YYYY年M月D日ddddAh点mm分", l: "YYYY/M/D", ll: "YYYY年M月D日", lll: "YYYY年M月D日 HH:mm", llll: "YYYY年M月D日dddd HH:mm" }, relativeTime: { future: "%s内", past: "%s前", s: "几秒", m: "1 分钟", mm: "%d 分钟", h: "1 小时", hh: "%d 小时", d: "1 天", dd: "%d 天", M: "1 个月", MM: "%d 个月", y: "1 年", yy: "%d 年" }, meridiem: function(e3, _3) {
        var t3 = 100 * e3 + _3;
        return t3 < 600 ? "凌晨" : t3 < 900 ? "早上" : t3 < 1100 ? "上午" : t3 < 1300 ? "中午" : t3 < 1800 ? "下午" : "晚上";
      } };
      return t2.default.locale(d2, null, true), d2;
    });
  })(zhCn);
  const _sfc_main$2n = /* @__PURE__ */ vue.defineComponent({
    __name: "date-table",
    props: {
      type: {
        type: String,
        default: "range"
        // "single"/"range"
      },
      currentPanelDate: {
        type: dayjs_minExports.Dayjs,
        default: () => dayjs()
      },
      // Unique attribute when type is single
      date: {
        type: dayjs_minExports.Dayjs,
        default: null
      },
      // Unique attribute when type is range
      startDate: {
        type: dayjs_minExports.Dayjs,
        default: null
      },
      endDate: {
        type: dayjs_minExports.Dayjs,
        default: null
      }
    },
    emits: ["pick"],
    setup(__props, { expose: __expose, emit: __emit }) {
      __expose();
      const props2 = __props;
      const emit = __emit;
      const instance = vue.getCurrentInstance();
      const tableRows = vue.ref([[], [], [], [], [], []]);
      const currentPanelDateObject = vue.ref(
        dayjs(props2.currentPanelDate || null)
      );
      const dateObject = vue.ref(dayjs(props2.date || null));
      const startDateObject = vue.ref(dayjs(props2.startDate || null));
      const endDateObject = vue.ref(dayjs(props2.endDate || null));
      const WEEKS_CONSTANT = vue.computed(() => {
        return dayjs.weekdaysShort();
      });
      const WEEKS = vue.computed(
        () => WEEKS_CONSTANT.value.map((w2) => w2.substring(1))
      );
      const startDateOnTable = vue.computed(() => {
        var _a;
        const startDayOfMonth = (_a = currentPanelDateObject.value) == null ? void 0 : _a.startOf("month");
        return startDayOfMonth == null ? void 0 : startDayOfMonth.subtract((startDayOfMonth == null ? void 0 : startDayOfMonth.day()) || 7, "day");
      });
      const rows = vue.computed(() => {
        var _a, _b, _c, _d, _e3;
        const rows_ = tableRows.value;
        const cols = WEEKS.value.length;
        const startOfMonth = (_a = currentPanelDateObject.value) == null ? void 0 : _a.startOf("month");
        const startOfMonthDay = (startOfMonth == null ? void 0 : startOfMonth.day()) || 7;
        const dateCountOfMonth = startOfMonth == null ? void 0 : startOfMonth.daysInMonth();
        let count = 1;
        for (let row = 0; row < tableRows.value.length; row++) {
          for (let col = 0; col < cols; col++) {
            const cellDate = (_b = startDateOnTable.value) == null ? void 0 : _b.add(count, "day");
            const text = cellDate == null ? void 0 : cellDate.date();
            const isSelected = props2.type === "single" && (cellDate == null ? void 0 : cellDate.format("YYYY-MM-DD")) === ((_c = dateObject.value) == null ? void 0 : _c.format("YYYY-MM-DD"));
            const isSelectedStart = props2.type === "range" && (cellDate == null ? void 0 : cellDate.format("YYYY-MM-DD")) === ((_d = startDateObject.value) == null ? void 0 : _d.format("YYYY-MM-DD"));
            const isSelectedEnd = props2.type === "range" && (cellDate == null ? void 0 : cellDate.format("YYYY-MM-DD")) === ((_e3 = endDateObject.value) == null ? void 0 : _e3.format("YYYY-MM-DD"));
            const isInRange = (cellDate == null ? void 0 : cellDate.isSameOrBefore(endDateObject.value, "day")) && (cellDate == null ? void 0 : cellDate.isSameOrAfter(startDateObject.value, "day"));
            let type = "normal";
            if (count < startOfMonthDay) {
              type = "prev-month";
            } else if (count - startOfMonthDay >= dateCountOfMonth) {
              type = "next-month";
            }
            rows_[row][col] = {
              type,
              date: cellDate,
              text,
              isSelected: isSelected || isSelectedStart || isSelectedEnd,
              isSelectedStart,
              isSelectedEnd,
              isInRange
            };
            count++;
          }
        }
        return rows_;
      });
      const handlePick = (cell) => {
        if ((cell == null ? void 0 : cell.type) !== "normal") {
          return;
        }
        emit("pick", cell);
      };
      vue.watch(
        () => [props2.currentPanelDate, props2.date, props2.startDate, props2.endDate],
        () => {
          currentPanelDateObject.value = dayjs(props2.currentPanelDate || null);
          dateObject.value = dayjs(props2.date || null);
          startDateObject.value = dayjs(props2.startDate || null);
          endDateObject.value = dayjs(props2.endDate || null);
          vue.nextTick(() => {
            var _a;
            (_a = instance == null ? void 0 : instance.proxy) == null ? void 0 : _a.$forceUpdate();
          });
        },
        {
          deep: true,
          immediate: true
        }
      );
      const __returned__ = { props: props2, emit, instance, tableRows, currentPanelDateObject, dateObject, startDateObject, endDateObject, WEEKS_CONSTANT, WEEKS, startDateOnTable, rows, handlePick, get TUITranslateService() {
        return Jt;
      }, get isPC() {
        return isPC;
      } };
      Object.defineProperty(__returned__, "__isScriptSetup", { enumerable: false, value: true });
      return __returned__;
    }
  });
  function _sfc_render$2m(_ctx, _cache, $props, $setup, $data, $options) {
    return vue.openBlock(), vue.createElementBlock(
      "table",
      {
        class: vue.normalizeClass(["tui-date-table", !$setup.isPC && "tui-date-table-h5"]),
        cellspacing: "0",
        cellpadding: "0",
        role: "grid"
      },
      [
        vue.createElementVNode("tbody", { class: "tui-date-table-body" }, [
          vue.createElementVNode("tr", { class: "tui-date-table-body-weeks" }, [
            (vue.openBlock(true), vue.createElementBlock(
              vue.Fragment,
              null,
              vue.renderList($setup.WEEKS, (item) => {
                return vue.openBlock(), vue.createElementBlock("th", {
                  key: item,
                  class: "tui-date-table-body-weeks-item",
                  "aria-label": item + "",
                  scope: "col"
                }, vue.toDisplayString($setup.TUITranslateService.t(`time.${item}`)), 9, ["aria-label"]);
              }),
              128
              /* KEYED_FRAGMENT */
            ))
          ]),
          (vue.openBlock(true), vue.createElementBlock(
            vue.Fragment,
            null,
            vue.renderList($setup.rows, (row, rowKey) => {
              return vue.openBlock(), vue.createElementBlock("tr", {
                key: rowKey,
                class: "tui-date-table-body-days"
              }, [
                (vue.openBlock(true), vue.createElementBlock(
                  vue.Fragment,
                  null,
                  vue.renderList(row, (col, colKey) => {
                    return vue.openBlock(), vue.createElementBlock(
                      "td",
                      {
                        key: colKey,
                        class: vue.normalizeClass(["tui-date-table-body-days-item", col.type])
                      },
                      [
                        vue.createElementVNode("div", {
                          class: vue.normalizeClass([
                            "tui-date-table-body-days-item-cell",
                            col.isSelected && "selected",
                            col.isSelectedStart && "selected-start",
                            col.isSelectedEnd && "selected-end",
                            col.isInRange && "range"
                          ]),
                          onClick: ($event) => $setup.handlePick(col)
                        }, [
                          vue.createElementVNode(
                            "span",
                            { class: "tui-date-table-body-days-item-cell-text" },
                            vue.toDisplayString(col.text),
                            1
                            /* TEXT */
                          )
                        ], 10, ["onClick"])
                      ],
                      2
                      /* CLASS */
                    );
                  }),
                  128
                  /* KEYED_FRAGMENT */
                ))
              ]);
            }),
            128
            /* KEYED_FRAGMENT */
          ))
        ])
      ],
      2
      /* CLASS */
    );
  }
  const DateTable = /* @__PURE__ */ _export_sfc(_sfc_main$2n, [["render", _sfc_render$2m], ["__scopeId", "data-v-0072a759"], ["__file", "C:/Users/Administrator/Desktop/Project Folder/ZXHand/ZXHandwritting_APP_uniapp/TUIKit/components/common/DatePicker/date-table.vue"]]);
  const leftArrowIcon = "/assets/left-arrow.dce2f352.svg";
  const rightArrowIcon = "/assets/right-arrow.0091db6c.svg";
  const dLeftArrowIcon = "/assets/d-left-arrow.d3dcfc22.svg";
  const dRightArrowIcon = "/assets/d-right-arrow.2202133f.svg";
  const _sfc_main$2m = /* @__PURE__ */ vue.defineComponent({
    __name: "date-picker-panel",
    props: {
      type: {
        type: String,
        default: "range"
        // "single"/"range"
      },
      // Unique attribute when type is single
      date: {
        type: dayjs_minExports.Dayjs,
        default: () => dayjs()
      },
      // Unique attribute when type is range
      startDate: {
        type: dayjs_minExports.Dayjs,
        default: null
      },
      endDate: {
        type: dayjs_minExports.Dayjs,
        default: null
      },
      rangeType: {
        type: String,
        default: ""
        // "left"/"right"
      },
      currentOtherPanelValue: {
        type: dayjs_minExports.Dayjs,
        default: null
      }
    },
    emits: ["pick", "change"],
    setup(__props, { expose: __expose, emit: __emit }) {
      __expose();
      const props2 = __props;
      const emit = __emit;
      const n2 = (className) => {
        return className ? [
          "tui-date-picker-panel-" + className,
          !isPC && "tui-date-picker-panel-h5-" + className
        ] : ["tui-date-picker-panel", !isPC && "tui-date-picker-panel-h5"];
      };
      const currentPanelDate = vue.ref();
      const year = vue.computed(() => {
        var _a;
        return (_a = currentPanelDate.value) == null ? void 0 : _a.get("year");
      });
      const month = vue.computed(() => {
        var _a;
        return (_a = currentPanelDate.value) == null ? void 0 : _a.format("MMMM");
      });
      const canYearMore = vue.computed(() => {
        var _a, _b, _c;
        const prevYearNumber = ((_a = props2.currentOtherPanelValue) == null ? void 0 : _a.year()) - 1;
        const prevYear = (_b = props2.currentOtherPanelValue) == null ? void 0 : _b.year(prevYearNumber);
        return props2.rangeType === "right" || ((_c = currentPanelDate.value) == null ? void 0 : _c.isBefore(prevYear, "year"));
      });
      const canMonthMore = vue.computed(() => {
        var _a, _b, _c;
        const prevMonthNumber = ((_a = props2.currentOtherPanelValue) == null ? void 0 : _a.month()) - 1;
        const prevMonth = (_b = props2.currentOtherPanelValue) == null ? void 0 : _b.month(prevMonthNumber);
        return props2.rangeType === "right" || ((_c = currentPanelDate.value) == null ? void 0 : _c.isBefore(prevMonth, "month"));
      });
      const canYearLess = vue.computed(() => {
        var _a, _b, _c;
        const nextYearNumber = ((_a = props2.currentOtherPanelValue) == null ? void 0 : _a.year()) + 1;
        const nextYear = (_b = props2.currentOtherPanelValue) == null ? void 0 : _b.year(nextYearNumber);
        return props2.rangeType === "left" || ((_c = currentPanelDate.value) == null ? void 0 : _c.isAfter(nextYear, "year"));
      });
      const canMonthLess = vue.computed(() => {
        var _a, _b, _c;
        const nextMonthNumber = ((_a = props2.currentOtherPanelValue) == null ? void 0 : _a.month()) + 1;
        const nextMonth = (_b = props2.currentOtherPanelValue) == null ? void 0 : _b.month(nextMonthNumber);
        return props2.rangeType === "left" || ((_c = currentPanelDate.value) == null ? void 0 : _c.isAfter(nextMonth, "month"));
      });
      const handleSingleDate = () => {
        var _a;
        if (props2.date && ((_a = dayjs(props2.date)) == null ? void 0 : _a.isValid())) {
          return {
            date: props2 == null ? void 0 : props2.date
          };
        }
        return {
          date: dayjs()
        };
      };
      const handleRangeDate = () => {
        var _a;
        switch (props2.rangeType) {
          case "left":
            if (props2.startDate && dayjs.isDayjs(props2.startDate)) {
              return {
                date: props2 == null ? void 0 : props2.startDate
              };
            } else {
              return {
                date: dayjs()
              };
            }
          case "right":
            if (props2.endDate && dayjs.isDayjs(props2.endDate) && ((_a = props2 == null ? void 0 : props2.endDate) == null ? void 0 : _a.isAfter(props2.startDate, "month"))) {
              return {
                date: props2 == null ? void 0 : props2.endDate
              };
            } else {
              const _month = (props2.startDate || dayjs()).month();
              return {
                date: (props2.startDate || dayjs()).month(_month + 1)
              };
            }
          default:
            return {
              date: dayjs()
            };
        }
      };
      function handlePick(cell) {
        emit("pick", cell);
      }
      function change(type, num) {
        currentPanelDate.value = dayjs(currentPanelDate.value.toDate()).add(
          num,
          type
        );
        emit("change", currentPanelDate.value);
      }
      vue.onBeforeMount(() => {
        switch (props2.type) {
          case "single":
            currentPanelDate.value = handleSingleDate().date;
            emit("change", currentPanelDate.value);
            break;
          case "range":
            currentPanelDate.value = handleRangeDate().date;
            emit("change", currentPanelDate.value);
            break;
        }
      });
      const __returned__ = { props: props2, emit, n: n2, currentPanelDate, year, month, canYearMore, canMonthMore, canYearLess, canMonthLess, handleSingleDate, handleRangeDate, handlePick, change, get TUITranslateService() {
        return Jt;
      }, DateTable, Icon: Icon$1, get leftArrowIcon() {
        return leftArrowIcon;
      }, get rightArrowIcon() {
        return rightArrowIcon;
      }, get dLeftArrowIcon() {
        return dLeftArrowIcon;
      }, get dRightArrowIcon() {
        return dRightArrowIcon;
      } };
      Object.defineProperty(__returned__, "__isScriptSetup", { enumerable: false, value: true });
      return __returned__;
    }
  });
  function _sfc_render$2l(_ctx, _cache, $props, $setup, $data, $options) {
    return vue.openBlock(), vue.createElementBlock(
      "div",
      {
        class: vue.normalizeClass([$setup.n("")]),
        onMouseup: _cache[4] || (_cache[4] = vue.withModifiers(() => {
        }, ["stop"]))
      },
      [
        vue.createElementVNode(
          "div",
          {
            class: vue.normalizeClass([$setup.n("body")])
          },
          [
            vue.createElementVNode(
              "div",
              {
                class: vue.normalizeClass([$setup.n("body-header")])
              },
              [
                vue.createElementVNode(
                  "div",
                  {
                    class: vue.normalizeClass([$setup.n("body-header-prev")])
                  },
                  [
                    $setup.canYearLess ? (vue.openBlock(), vue.createElementBlock(
                      "div",
                      {
                        key: 0,
                        class: vue.normalizeClass([$setup.n("icon")]),
                        onClick: _cache[0] || (_cache[0] = ($event) => $setup.change("year", -1))
                      },
                      [
                        vue.createVNode($setup["Icon"], {
                          file: $setup.dLeftArrowIcon,
                          width: "12px",
                          height: "12px"
                        }, null, 8, ["file"])
                      ],
                      2
                      /* CLASS */
                    )) : vue.createCommentVNode("v-if", true),
                    $setup.canMonthLess ? (vue.openBlock(), vue.createElementBlock(
                      "div",
                      {
                        key: 1,
                        class: vue.normalizeClass([$setup.n("icon")]),
                        onClick: _cache[1] || (_cache[1] = ($event) => $setup.change("month", -1))
                      },
                      [
                        vue.createVNode($setup["Icon"], {
                          file: $setup.leftArrowIcon,
                          width: "10px",
                          height: "10px"
                        }, null, 8, ["file"])
                      ],
                      2
                      /* CLASS */
                    )) : vue.createCommentVNode("v-if", true)
                  ],
                  2
                  /* CLASS */
                ),
                vue.createElementVNode(
                  "div",
                  {
                    class: vue.normalizeClass([$setup.n("body-header-label")])
                  },
                  [
                    vue.createElementVNode(
                      "div",
                      {
                        class: vue.normalizeClass([$setup.n("body-header-label-item")])
                      },
                      vue.toDisplayString($setup.year),
                      3
                      /* TEXT, CLASS */
                    ),
                    vue.createElementVNode(
                      "div",
                      {
                        class: vue.normalizeClass([$setup.n("body-header-label-item")])
                      },
                      vue.toDisplayString($setup.TUITranslateService.t(`time.${$setup.month}`)),
                      3
                      /* TEXT, CLASS */
                    )
                  ],
                  2
                  /* CLASS */
                ),
                vue.createElementVNode(
                  "div",
                  {
                    class: vue.normalizeClass([$setup.n("body-header-next")])
                  },
                  [
                    $setup.canMonthMore ? (vue.openBlock(), vue.createElementBlock(
                      "div",
                      {
                        key: 0,
                        class: vue.normalizeClass([$setup.n("icon")]),
                        onClick: _cache[2] || (_cache[2] = ($event) => $setup.change("month", 1))
                      },
                      [
                        vue.createVNode($setup["Icon"], {
                          file: $setup.rightArrowIcon,
                          width: "10px",
                          height: "10px"
                        }, null, 8, ["file"])
                      ],
                      2
                      /* CLASS */
                    )) : vue.createCommentVNode("v-if", true),
                    $setup.canYearMore ? (vue.openBlock(), vue.createElementBlock(
                      "div",
                      {
                        key: 1,
                        class: vue.normalizeClass([$setup.n("icon")]),
                        onClick: _cache[3] || (_cache[3] = ($event) => $setup.change("year", 1))
                      },
                      [
                        vue.createVNode($setup["Icon"], {
                          file: $setup.dRightArrowIcon,
                          width: "12px",
                          height: "12px"
                        }, null, 8, ["file"])
                      ],
                      2
                      /* CLASS */
                    )) : vue.createCommentVNode("v-if", true)
                  ],
                  2
                  /* CLASS */
                )
              ],
              2
              /* CLASS */
            ),
            vue.createElementVNode(
              "div",
              {
                class: vue.normalizeClass([$setup.n("body-content")])
              },
              [
                vue.createVNode($setup["DateTable"], {
                  type: $setup.props.type,
                  date: $setup.props.date,
                  startDate: $setup.props.startDate,
                  endDate: $setup.props.endDate,
                  currentPanelDate: $setup.currentPanelDate,
                  onPick: $setup.handlePick
                }, null, 8, ["type", "date", "startDate", "endDate", "currentPanelDate"])
              ],
              2
              /* CLASS */
            )
          ],
          2
          /* CLASS */
        )
      ],
      34
      /* CLASS, NEED_HYDRATION */
    );
  }
  const DatePickerPanel = /* @__PURE__ */ _export_sfc(_sfc_main$2m, [["render", _sfc_render$2l], ["__scopeId", "data-v-389108a1"], ["__file", "C:/Users/Administrator/Desktop/Project Folder/ZXHand/ZXHandwritting_APP_uniapp/TUIKit/components/common/DatePicker/date-picker-panel.vue"]]);
  const _sfc_main$2l = /* @__PURE__ */ vue.defineComponent({
    __name: "index",
    props: {
      type: {
        type: String,
        default: "range"
        // "single" / "range"
      },
      rangeTableType: {
        type: String,
        default: "one"
        // "one"/ "two"
      },
      startPlaceholder: {
        type: String,
        default: () => Jt.t("开始时间")
      },
      endPlaceholder: {
        type: String,
        default: () => Jt.t("开始时间")
      },
      popupPosition: {
        type: String,
        default: "bottom"
        // "top" / "bottom"
      },
      // Default single-select date
      defaultSingleDate: {
        type: dayjs_minExports.Dayjs,
        default: null,
        required: false
      }
    },
    emits: ["pick", "change"],
    setup(__props, { expose: __expose, emit: __emit }) {
      __expose();
      dayjs.extend(localeData);
      dayjs.extend(isSameOrAfter);
      dayjs.extend(isSameOrBefore);
      dayjs.locale("zh-cn");
      const emit = __emit;
      const props2 = __props;
      const isDatePanelShow = vue.ref(false);
      const dateValue = vue.ref(props2.type === "single" ? props2 == null ? void 0 : props2.defaultSingleDate : null);
      const startValue = vue.ref(props2.type === "single" ? props2 == null ? void 0 : props2.defaultSingleDate : null);
      const endValue = vue.ref(props2.type === "single" ? props2 == null ? void 0 : props2.defaultSingleDate : null);
      const startFormatDate = vue.computed(() => {
        var _a;
        return (_a = startValue == null ? void 0 : startValue.value) == null ? void 0 : _a.format("YYYY/MM/DD");
      });
      const endFormatDate = vue.computed(() => {
        var _a;
        return (_a = endValue == null ? void 0 : endValue.value) == null ? void 0 : _a.format("YYYY/MM/DD");
      });
      const startPlaceholderVal = props2.startPlaceholder;
      const endPlaceholderVal = props2.endPlaceholder;
      const leftCurrentPanelValue = vue.ref();
      const rightCurrentPanelValue = vue.ref();
      const setDatePanelDisplay = (show) => {
        isDatePanelShow.value = show;
      };
      const n2 = (classNameList) => {
        const resultClassList = [];
        classNameList.forEach((className) => {
          if (className) {
            resultClassList.push("tui-date-picker-" + className);
            !isPC && resultClassList.push("tui-date-picker-h5-" + className);
          } else {
            resultClassList.push("tui-date-picker");
            !isPC && resultClassList.push("tui-date-picker-h5");
          }
        });
        return resultClassList;
      };
      const handlePick = (cell) => {
        var _a, _b, _c;
        switch (props2.type) {
          case "single":
            startValue.value = cell.date;
            endValue.value = cell.date;
            dateValue.value = cell.date;
            emit("change", cell);
            emit("pick", dateValue.value);
            setTimeout(() => {
              setDatePanelDisplay(false);
            }, 300);
            break;
          case "range":
            if (!(startValue == null ? void 0 : startValue.value)) {
              startValue.value = cell.date;
            } else if (!(endValue == null ? void 0 : endValue.value)) {
              if ((_a = startValue == null ? void 0 : startValue.value) == null ? void 0 : _a.isSameOrBefore(cell.date, "day")) {
                endValue.value = cell.date;
              } else {
                endValue.value = startValue.value;
                startValue.value = cell.date;
              }
              emit("pick", {
                startDate: (_b = startValue == null ? void 0 : startValue.value) == null ? void 0 : _b.startOf("date"),
                endDate: (_c = endValue == null ? void 0 : endValue.value) == null ? void 0 : _c.endOf("date")
              });
              setTimeout(() => {
                setDatePanelDisplay(false);
              }, 200);
            } else {
              startValue.value = cell.date;
              endValue.value = null;
            }
            emit("change", {
              startDate: startValue.value,
              endDate: endValue.value,
              leftCurrentPanel: leftCurrentPanelValue.value,
              rightCurrentPanel: leftCurrentPanelValue.value
            });
            break;
        }
      };
      const handleLeftPanelChange = (value) => {
        leftCurrentPanelValue.value = value;
        emit("change", {
          startDate: startValue.value,
          endDate: endValue.value,
          leftCurrentPanel: leftCurrentPanelValue.value,
          rightCurrentPanel: leftCurrentPanelValue.value
        });
      };
      const handleRightPanelChange = (value) => {
        rightCurrentPanelValue.value = value;
        emit("change", {
          startDate: startValue.value,
          endDate: endValue.value,
          leftCurrentPanel: leftCurrentPanelValue.value,
          rightCurrentPanel: leftCurrentPanelValue.value
        });
      };
      const __returned__ = { emit, props: props2, isDatePanelShow, dateValue, startValue, endValue, startFormatDate, endFormatDate, startPlaceholderVal, endPlaceholderVal, leftCurrentPanelValue, rightCurrentPanelValue, setDatePanelDisplay, n: n2, handlePick, handleLeftPanelChange, handleRightPanelChange, DatePickerPanel, get isPC() {
        return isPC;
      }, get isUniFrameWork() {
        return isUniFrameWork;
      } };
      Object.defineProperty(__returned__, "__isScriptSetup", { enumerable: false, value: true });
      return __returned__;
    }
  });
  function _sfc_render$2k(_ctx, _cache, $props, $setup, $data, $options) {
    return vue.openBlock(), vue.createElementBlock(
      "div",
      {
        class: vue.normalizeClass([$setup.n([""])])
      },
      [
        vue.createElementVNode(
          "div",
          {
            class: vue.normalizeClass([$setup.n(["input"]), $setup.isDatePanelShow && $setup.n(["input-active"])]),
            onClick: _cache[2] || (_cache[2] = ($event) => $setup.setDatePanelDisplay(!$setup.isDatePanelShow))
          },
          [
            vue.renderSlot(_ctx.$slots, "start-icon", {}, void 0, true),
            vue.withDirectives(vue.createElementVNode("input", {
              "onUpdate:modelValue": _cache[0] || (_cache[0] = ($event) => $setup.startFormatDate = $event),
              placeholder: $setup.startPlaceholderVal,
              class: vue.normalizeClass([$setup.n(["input-start"])]),
              style: { "pointer-events": "none" },
              type: "text",
              readonly: true,
              disabled: $setup.isUniFrameWork,
              autocomplete: "false"
            }, null, 10, ["placeholder", "disabled"]), [
              [vue.vModelText, $setup.startFormatDate]
            ]),
            $props.type !== "single" ? (vue.openBlock(), vue.createElementBlock("span", { key: 0 }, "-")) : vue.createCommentVNode("v-if", true),
            $props.type !== "single" ? vue.withDirectives((vue.openBlock(), vue.createElementBlock("input", {
              key: 1,
              "onUpdate:modelValue": _cache[1] || (_cache[1] = ($event) => $setup.endFormatDate = $event),
              placeholder: $setup.endPlaceholderVal,
              class: vue.normalizeClass([$setup.n(["input-end"])]),
              style: { "pointer-events": "none" },
              type: "text",
              readonly: true,
              disabled: $setup.isUniFrameWork,
              autocomplete: "false"
            }, null, 10, ["placeholder", "disabled"])), [
              [vue.vModelText, $setup.endFormatDate]
            ]) : vue.createCommentVNode("v-if", true),
            vue.renderSlot(_ctx.$slots, "end-icon", {}, void 0, true)
          ],
          2
          /* CLASS */
        ),
        $setup.isDatePanelShow ? (vue.openBlock(), vue.createElementBlock(
          "div",
          {
            key: 0,
            class: vue.normalizeClass([$setup.n(["dialog"])])
          },
          [
            vue.createElementVNode(
              "div",
              {
                class: vue.normalizeClass([
                  $setup.n([
                    "dialog-container",
                    "dialog-container-" + $props.rangeTableType,
                    "dialog-container-" + $props.popupPosition
                  ])
                ])
              },
              [
                vue.createVNode($setup["DatePickerPanel"], {
                  type: $setup.props.type,
                  rangeType: "left",
                  date: $setup.dateValue,
                  startDate: $setup.startValue,
                  endDate: $setup.endValue,
                  currentOtherPanelValue: $setup.rightCurrentPanelValue,
                  onPick: $setup.handlePick,
                  onChange: $setup.handleLeftPanelChange
                }, null, 8, ["type", "date", "startDate", "endDate", "currentOtherPanelValue"]),
                $setup.props.type === "range" && $setup.isPC && $props.rangeTableType === "two" ? (vue.openBlock(), vue.createBlock($setup["DatePickerPanel"], {
                  key: 0,
                  type: $setup.props.type,
                  rangeType: "right",
                  date: $setup.dateValue,
                  startDate: $setup.startValue,
                  endDate: $setup.endValue,
                  currentOtherPanelValue: $setup.leftCurrentPanelValue,
                  onPick: $setup.handlePick,
                  onChange: $setup.handleRightPanelChange
                }, null, 8, ["type", "date", "startDate", "endDate", "currentOtherPanelValue"])) : vue.createCommentVNode("v-if", true)
              ],
              2
              /* CLASS */
            )
          ],
          2
          /* CLASS */
        )) : vue.createCommentVNode("v-if", true)
      ],
      2
      /* CLASS */
    );
  }
  const DatePicker = /* @__PURE__ */ _export_sfc(_sfc_main$2l, [["render", _sfc_render$2k], ["__scopeId", "data-v-eb57fa2c"], ["__file", "C:/Users/Administrator/Desktop/Project Folder/ZXHand/ZXHandwritting_APP_uniapp/TUIKit/components/common/DatePicker/index.vue"]]);
  const downSVG = "/assets/down-icon.fbb4047c.svg";
  const closeIcon$1 = "/assets/close-dark.f3809f45.svg";
  const _sfc_main$2k = /* @__PURE__ */ vue.defineComponent({
    __name: "index",
    props: {
      popupPosition: {
        type: String,
        // "bottom" / "aside"
        default: "bottom"
      },
      searchType: {
        type: String,
        default: "global",
        // "global" / "conversation"
        validator(value) {
          return ["global", "conversation"].includes(value);
        }
      }
    },
    emits: ["searchConfigChange", "closeInConversationSearch"],
    setup(__props, { expose: __expose, emit: __emit }) {
      __expose();
      const props2 = __props;
      const emits2 = __emit;
      const searchTypeList = vue.computed(
        () => (props2 == null ? void 0 : props2.searchType) === "conversation" ? conversationSearchTypeList : globalSearchTypeList
      );
      const currentSearchMessageType = vue.ref(searchMessageTypeDefault[props2 == null ? void 0 : props2.searchType]);
      const currentSearchMessageTime = vue.ref(searchMessageTimeDefault);
      const isTimeTabsShow = vue.computed(() => {
        return currentSearchMessageType.value.key !== "contact" && currentSearchMessageType.value.key !== "group";
      });
      const datePickerRangeDisplayType = vue.computed(
        () => isPC && props2.searchType === "global" && !isUniFrameWork ? "two" : "one"
      );
      const isDatePickerShow = vue.ref(false);
      function onCurrentSearchMessageTypeChange(typeObject) {
        if ((typeObject == null ? void 0 : typeObject.searchType) === (props2 == null ? void 0 : props2.searchType)) {
          currentSearchMessageType.value = (typeObject == null ? void 0 : typeObject.value) || searchMessageTypeDefault[props2 == null ? void 0 : props2.searchType];
        }
      }
      function onCurrentSearchMessageTimeChange(timeObject) {
        if ((timeObject == null ? void 0 : timeObject.searchType) === (props2 == null ? void 0 : props2.searchType)) {
          currentSearchMessageTime.value = (timeObject == null ? void 0 : timeObject.value) || searchMessageTimeDefault;
        }
      }
      vue.onMounted(() => {
        zt.watch(o$2.SEARCH, {
          currentSearchMessageType: onCurrentSearchMessageTypeChange,
          currentSearchMessageTime: onCurrentSearchMessageTimeChange
        });
      });
      vue.onUnmounted(() => {
        zt.unwatch(o$2.SEARCH, {
          currentSearchMessageType: onCurrentSearchMessageTypeChange,
          currentSearchMessageTime: onCurrentSearchMessageTimeChange
        });
      });
      const selectSearchType = (item) => {
        zt.update(o$2.SEARCH, "currentSearchMessageType", {
          value: item,
          searchType: props2.searchType
        });
      };
      const selectSearchTime = (item) => {
        if (isDatePickerShow.value && item.key === "all") {
          isDatePickerShow.value = false;
        } else {
          isDatePickerShow.value = false;
          zt.update(o$2.SEARCH, "currentSearchMessageTime", {
            value: item,
            searchType: props2.searchType
          });
        }
      };
      const handleSelectAllTimeClicked = () => {
        var _a;
        if (((_a = currentSearchMessageTime.value) == null ? void 0 : _a.key) !== "all") {
          zt.update(o$2.SEARCH, "currentSearchMessageTime", {
            value: searchMessageTimeDefault,
            searchType: props2.searchType
          });
        } else {
          isDatePickerShow.value = true;
        }
      };
      const pickTimePeriod = (time2) => {
        var _a, _b, _c;
        if (((_a = currentSearchMessageTime.value) == null ? void 0 : _a.key) === "all") {
          const { startDate, endDate } = time2;
          const timePosition = Number((((_b = endDate == null ? void 0 : endDate.toDate()) == null ? void 0 : _b.getTime()) / 1e3).toFixed(0));
          const timePeriod = timePosition - Number((((_c = startDate == null ? void 0 : startDate.toDate()) == null ? void 0 : _c.getTime()) / 1e3).toFixed(0));
          const newSearchMessageTime = {
            key: currentSearchMessageTime.value.key,
            label: currentSearchMessageTime.value.label,
            value: {
              timePosition,
              timePeriod
            }
          };
          zt.update(o$2.SEARCH, "currentSearchMessageTime", {
            value: newSearchMessageTime,
            searchType: props2.searchType
          });
        }
      };
      const clearTimePicker = () => {
        var _a;
        isDatePickerShow.value = false;
        if (((_a = currentSearchMessageTime.value) == null ? void 0 : _a.key) === "all") {
          zt.update(o$2.SEARCH, "currentSearchMessageTime", {
            value: searchMessageTimeDefault,
            searchType: props2.searchType
          });
        }
      };
      const closeSearchContainer = () => {
        emits2("closeInConversationSearch");
      };
      const __returned__ = { props: props2, emits: emits2, searchTypeList, currentSearchMessageType, currentSearchMessageTime, isTimeTabsShow, datePickerRangeDisplayType, isDatePickerShow, onCurrentSearchMessageTypeChange, onCurrentSearchMessageTimeChange, selectSearchType, selectSearchTime, handleSelectAllTimeClicked, pickTimePeriod, clearTimePicker, closeSearchContainer, get TUITranslateService() {
        return Jt;
      }, get searchMessageTimeList() {
        return searchMessageTimeList;
      }, Icon: Icon$1, DatePicker, get downArrowIcon() {
        return downSVG;
      }, get closeIcon() {
        return closeIcon$2;
      }, get closeDarkIcon() {
        return closeIcon$1;
      }, get isPC() {
        return isPC;
      }, get isUniFrameWork() {
        return isUniFrameWork;
      } };
      Object.defineProperty(__returned__, "__isScriptSetup", { enumerable: false, value: true });
      return __returned__;
    }
  });
  function _sfc_render$2j(_ctx, _cache, $props, $setup, $data, $options) {
    return vue.openBlock(), vue.createElementBlock(
      "div",
      {
        class: vue.normalizeClass([
          "tui-search-container",
          !$setup.isPC && "tui-search-container-h5",
          $setup.isPC && `container-${$setup.props.popupPosition}`,
          `container-${$setup.props.searchType}`
        ])
      },
      [
        vue.createElementVNode(
          "div",
          {
            class: vue.normalizeClass([
              $setup.isPC && `tui-search-container-${$setup.props.popupPosition}`,
              !$setup.isPC && "tui-search-container-h5-main"
            ])
          },
          [
            $setup.props.searchType === "conversation" && !$setup.isUniFrameWork ? (vue.openBlock(), vue.createElementBlock("div", {
              key: 0,
              class: "tui-search-header"
            }, [
              vue.createElementVNode(
                "div",
                { class: "tui-search-header-title" },
                vue.toDisplayString($setup.TUITranslateService.t("TUISearch.搜索会话内容")),
                1
                /* TEXT */
              ),
              vue.createElementVNode("div", {
                class: "tui-search-header-close",
                onClick: $setup.closeSearchContainer
              }, [
                vue.createVNode($setup["Icon"], {
                  file: $setup.closeDarkIcon,
                  width: "14px",
                  height: "14px"
                }, null, 8, ["file"])
              ])
            ])) : vue.createCommentVNode("v-if", true),
            vue.createElementVNode("div", { class: "tui-search-tabs" }, [
              (vue.openBlock(true), vue.createElementBlock(
                vue.Fragment,
                null,
                vue.renderList($setup.searchTypeList, (tabItem, tabKey) => {
                  return vue.openBlock(), vue.createElementBlock("div", {
                    key: tabKey,
                    class: vue.normalizeClass([
                      "tui-search-tabs-item",
                      $setup.currentSearchMessageType.key === tabItem.key && "tui-search-tabs-item-selected"
                    ]),
                    onClick: ($event) => $setup.selectSearchType(tabItem)
                  }, vue.toDisplayString($setup.TUITranslateService.t(`TUISearch.${tabItem.label}`)), 11, ["onClick"]);
                }),
                128
                /* KEYED_FRAGMENT */
              ))
            ]),
            vue.createCommentVNode(" TUISearch search input slot "),
            vue.renderSlot(_ctx.$slots, "input", {}, void 0, true),
            $setup.isTimeTabsShow ? (vue.openBlock(), vue.createElementBlock("div", {
              key: 1,
              class: "tui-search-time"
            }, [
              (vue.openBlock(true), vue.createElementBlock(
                vue.Fragment,
                null,
                vue.renderList($setup.searchMessageTimeList, (tabItem, tabKey) => {
                  return vue.openBlock(), vue.createElementBlock("div", {
                    key: tabKey,
                    class: vue.normalizeClass([
                      "tui-search-time-item",
                      $setup.currentSearchMessageTime.key === tabItem.key && "tui-search-time-item-selected"
                    ]),
                    onClick: ($event) => $setup.selectSearchTime(tabItem)
                  }, [
                    tabItem.key === "all" ? (vue.openBlock(), vue.createElementBlock("div", {
                      key: 0,
                      class: "tui-search-time-item-picker"
                    }, [
                      !$setup.isDatePickerShow ? (vue.openBlock(), vue.createElementBlock("div", {
                        key: 0,
                        class: "tui-search-time-item-all",
                        onClick: vue.withModifiers($setup.handleSelectAllTimeClicked, ["stop"])
                      }, [
                        vue.createTextVNode(
                          vue.toDisplayString($setup.TUITranslateService.t(`TUISearch.选择时间`) + ":  " + $setup.TUITranslateService.t(`TUISearch.全部`)) + " ",
                          1
                          /* TEXT */
                        ),
                        vue.createVNode($setup["Icon"], {
                          file: $setup.downArrowIcon,
                          width: "14px",
                          height: "14px"
                        }, null, 8, ["file"])
                      ])) : vue.createCommentVNode("v-if", true),
                      vue.createElementVNode("div", {
                        onClick: _cache[0] || (_cache[0] = vue.withModifiers(() => {
                        }, ["stop"]))
                      }, [
                        $setup.isDatePickerShow ? (vue.openBlock(), vue.createBlock($setup["DatePicker"], {
                          key: 0,
                          type: "range",
                          rangeTableType: $setup.datePickerRangeDisplayType,
                          onPick: $setup.pickTimePeriod
                        }, null, 8, ["rangeTableType"])) : vue.createCommentVNode("v-if", true)
                      ]),
                      $setup.isDatePickerShow ? (vue.openBlock(), vue.createElementBlock("div", {
                        key: 1,
                        class: "tui-search-time-item-close",
                        onClick: $setup.clearTimePicker
                      }, [
                        vue.createVNode($setup["Icon"], {
                          class: "icon",
                          file: $setup.closeIcon,
                          width: "14px",
                          height: "14px"
                        }, null, 8, ["file"])
                      ])) : vue.createCommentVNode("v-if", true)
                    ])) : (vue.openBlock(), vue.createElementBlock(
                      "div",
                      { key: 1 },
                      vue.toDisplayString($setup.TUITranslateService.t(`TUISearch.${tabItem.label}`)),
                      1
                      /* TEXT */
                    ))
                  ], 10, ["onClick"]);
                }),
                128
                /* KEYED_FRAGMENT */
              ))
            ])) : vue.createCommentVNode("v-if", true),
            vue.createCommentVNode(" TUISearch search result slot "),
            vue.renderSlot(_ctx.$slots, "result", {}, void 0, true)
          ],
          2
          /* CLASS */
        )
      ],
      2
      /* CLASS */
    );
  }
  const SearchContainer = /* @__PURE__ */ _export_sfc(_sfc_main$2k, [["render", _sfc_render$2j], ["__scopeId", "data-v-0764f731"], ["__file", "C:/Users/Administrator/Desktop/Project Folder/ZXHand/ZXHandwritting_APP_uniapp/TUIKit/components/TUISearch/search-container/index.vue"]]);
  const CUSTOM_BIG_EMOJI_URL = "";
  const CUSTOM_BIG_EMOJI_GROUP_LIST = [];
  const Emoji$2 = {
    "[TUIEmoji_Smile]": "[微笑]",
    "[TUIEmoji_Expect]": "[期待]",
    "[TUIEmoji_Blink]": "[眨眼]",
    "[TUIEmoji_Guffaw]": "[大笑]",
    "[TUIEmoji_KindSmile]": "[姨母笑]",
    "[TUIEmoji_Haha]": "[哈哈哈]",
    "[TUIEmoji_Cheerful]": "[愉快]",
    "[TUIEmoji_Speechless]": "[无语]",
    "[TUIEmoji_Amazed]": "[惊讶]",
    "[TUIEmoji_Sorrow]": "[悲伤]",
    "[TUIEmoji_Complacent]": "[得意]",
    "[TUIEmoji_Silly]": "[傻了]",
    "[TUIEmoji_Lustful]": "[色]",
    "[TUIEmoji_Giggle]": "[憨笑]",
    "[TUIEmoji_Kiss]": "[亲亲]",
    "[TUIEmoji_Wail]": "[大哭]",
    "[TUIEmoji_TearsLaugh]": "[哭笑]",
    "[TUIEmoji_Trapped]": "[困]",
    "[TUIEmoji_Mask]": "[口罩]",
    "[TUIEmoji_Fear]": "[恐惧]",
    "[TUIEmoji_BareTeeth]": "[龇牙]",
    "[TUIEmoji_FlareUp]": "[发怒]",
    "[TUIEmoji_Yawn]": "[打哈欠]",
    "[TUIEmoji_Tact]": "[机智]",
    "[TUIEmoji_Stareyes]": "[星星眼]",
    "[TUIEmoji_ShutUp]": "[闭嘴]",
    "[TUIEmoji_Sigh]": "[叹气]",
    "[TUIEmoji_Hehe]": "[呵呵]",
    "[TUIEmoji_Silent]": "[收声]",
    "[TUIEmoji_Surprised]": "[惊喜]",
    "[TUIEmoji_Askance]": "[白眼]",
    "[TUIEmoji_Ok]": "[OK]",
    "[TUIEmoji_Shit]": "[便便]",
    "[TUIEmoji_Monster]": "[怪兽]",
    "[TUIEmoji_Daemon]": "[恶魔]",
    "[TUIEmoji_Rage]": "[恶魔怒]",
    "[TUIEmoji_Fool]": "[衰]",
    "[TUIEmoji_Pig]": "[猪]",
    "[TUIEmoji_Cow]": "[牛]",
    "[TUIEmoji_Ai]": "[AI]",
    "[TUIEmoji_Skull]": "[骷髅]",
    "[TUIEmoji_Bombs]": "[炸弹]",
    "[TUIEmoji_Coffee]": "[咖啡]",
    "[TUIEmoji_Cake]": "[蛋糕]",
    "[TUIEmoji_Beer]": "[啤酒]",
    "[TUIEmoji_Flower]": "[花]",
    "[TUIEmoji_Watermelon]": "[瓜]",
    "[TUIEmoji_Rich]": "[壕]",
    "[TUIEmoji_Heart]": "[爱心]",
    "[TUIEmoji_Moon]": "[月亮]",
    "[TUIEmoji_Sun]": "[太阳]",
    "[TUIEmoji_Star]": "[星星]",
    "[TUIEmoji_RedPacket]": "[红包]",
    "[TUIEmoji_Celebrate]": "[庆祝]",
    "[TUIEmoji_Bless]": "[福]",
    "[TUIEmoji_Fortune]": "[发]",
    "[TUIEmoji_Convinced]": "[服]",
    "[TUIEmoji_Prohibit]": "[禁]",
    "[TUIEmoji_666]": "[666]",
    "[TUIEmoji_857]": "[857]",
    "[TUIEmoji_Knife]": "[刀]",
    "[TUIEmoji_Like]": "[赞]"
  };
  const Emoji$1 = {
    "[TUIEmoji_Smile]": "[Smile]",
    "[TUIEmoji_Expect]": "[Expect]",
    "[TUIEmoji_Blink]": "[Blink]",
    "[TUIEmoji_Guffaw]": "[Guffaw]",
    "[TUIEmoji_KindSmile]": "[KindSmile]",
    "[TUIEmoji_Haha]": "[Haha]",
    "[TUIEmoji_Cheerful]": "[Cheerful]",
    "[TUIEmoji_Speechless]": "[Speechless]",
    "[TUIEmoji_Amazed]": "[Amazed]",
    "[TUIEmoji_Sorrow]": "[Sorrow]",
    "[TUIEmoji_Complacent]": "[Complacent]",
    "[TUIEmoji_Silly]": "[Silly]",
    "[TUIEmoji_Lustful]": "[Lustful]",
    "[TUIEmoji_Giggle]": "[Giggle]",
    "[TUIEmoji_Kiss]": "[Kiss]",
    "[TUIEmoji_Wail]": "[Wail]",
    "[TUIEmoji_TearsLaugh]": "[TearsLaugh]",
    "[TUIEmoji_Trapped]": "[Trapped]",
    "[TUIEmoji_Mask]": "[Mask]",
    "[TUIEmoji_Fear]": "[Fear]",
    "[TUIEmoji_BareTeeth]": "[BareTeeth]",
    "[TUIEmoji_FlareUp]": "[FlareUp]",
    "[TUIEmoji_Yawn]": "[Yawn]",
    "[TUIEmoji_Tact]": "[Tact]",
    "[TUIEmoji_Stareyes]": "[StarEyes]",
    "[TUIEmoji_ShutUp]": "[ShutUp]",
    "[TUIEmoji_Sigh]": "[Sigh]",
    "[TUIEmoji_Hehe]": "[Hehe]",
    "[TUIEmoji_Silent]": "[Silent]",
    "[TUIEmoji_Surprised]": "[Surprised]",
    "[TUIEmoji_Askance]": "[Askance]]",
    "[TUIEmoji_Ok]": "[OK]",
    "[TUIEmoji_Shit]": "[Shit]",
    "[TUIEmoji_Monster]": "[Monster]",
    "[TUIEmoji_Daemon]": "[Daemon]",
    "[TUIEmoji_Rage]": "[Rage]",
    "[TUIEmoji_Fool]": "[Fool]",
    "[TUIEmoji_Pig]": "[Pig]",
    "[TUIEmoji_Cow]": "[Cow]",
    "[TUIEmoji_Ai]": "[AI]",
    "[TUIEmoji_Skull]": "[Skull]",
    "[TUIEmoji_Bombs]": "[Bombs]",
    "[TUIEmoji_Coffee]": "[Coffee]",
    "[TUIEmoji_Cake]": "[Cake]",
    "[TUIEmoji_Beer]": "[Beer]",
    "[TUIEmoji_Flower]": "[Flower]",
    "[TUIEmoji_Watermelon]": "[Watermelon]",
    "[TUIEmoji_Rich]": "[Rich]",
    "[TUIEmoji_Heart]": "[Heart]",
    "[TUIEmoji_Moon]": "[Moon]",
    "[TUIEmoji_Sun]": "[Sun]",
    "[TUIEmoji_Star]": "[Star]",
    "[TUIEmoji_RedPacket]": "[RedPacket]",
    "[TUIEmoji_Celebrate]": "[Celebrate]",
    "[TUIEmoji_Bless]": "[Bless]",
    "[TUIEmoji_Fortune]": "[Fortune]",
    "[TUIEmoji_Convinced]": "[Convinced]",
    "[TUIEmoji_Prohibit]": "[Prohibit]",
    "[TUIEmoji_666]": "[666]",
    "[TUIEmoji_857]": "[857]",
    "[TUIEmoji_Knife]": "[Knife]",
    "[TUIEmoji_Like]": "[Like]"
  };
  const CONV_OPERATION = {
    DELETE: "delete",
    ISPINNED: "ispinned",
    DISPINNED: "dispinned",
    MUTE: "mute",
    NOTMUTE: "notmute"
  };
  const CONV_CREATE_TYPE = {
    TYPEC2C: "isC2C",
    TYPEGROUP: "isGroup",
    JOINGROUP: "joinGroup"
  };
  const CHAT_MSG_CUSTOM_TYPE = {
    SERVICE: "consultion",
    EVALUATE: "evaluation",
    LINK: "text_link",
    CALL: 1,
    ORDER: "order"
  };
  const EMOJI_TYPE = {
    BASIC: "basic",
    BIG: "big",
    CUSTOM: "CUSTOM"
  };
  const CONTACT_INFO_LABEL_POSITION = {
    LEFT: "left",
    TOP: "top"
  };
  const CONTACT_INFO_MORE_EDIT_TYPE = {
    INPUT: "input",
    TEXTAREA: "textarea",
    SWITCH: "switch"
  };
  const CONTACT_INFO_BUTTON_TYPE = {
    SUBMIT: "submit",
    CANCEL: "cancel"
  };
  const DEFAULT_BASIC_EMOJI_URL = "https://web.sdk.qcloud.com/im/assets/emoji-plugin/";
  const DEFAULT_BIG_EMOJI_URL = "https://web.sdk.qcloud.com/im/assets/face-elem/";
  const DEFAULT_BASIC_EMOJI_URL_MAPPING = {
    "[TUIEmoji_Expect]": "emoji_0@2x.png",
    "[TUIEmoji_Blink]": "emoji_1@2x.png",
    "[TUIEmoji_Guffaw]": "emoji_2@2x.png",
    "[TUIEmoji_KindSmile]": "emoji_3@2x.png",
    "[TUIEmoji_Haha]": "emoji_4@2x.png",
    "[TUIEmoji_Cheerful]": "emoji_5@2x.png",
    "[TUIEmoji_Smile]": "emoji_6@2x.png",
    "[TUIEmoji_Sorrow]": "emoji_7@2x.png",
    "[TUIEmoji_Speechless]": "emoji_8@2x.png",
    "[TUIEmoji_Amazed]": "emoji_9@2x.png",
    "[TUIEmoji_Complacent]": "emoji_10@2x.png",
    "[TUIEmoji_Lustful]": "emoji_11@2x.png",
    "[TUIEmoji_Stareyes]": "emoji_12@2x.png",
    "[TUIEmoji_Giggle]": "emoji_13@2x.png",
    "[TUIEmoji_Daemon]": "emoji_14@2x.png",
    "[TUIEmoji_Rage]": "emoji_15@2x.png",
    "[TUIEmoji_Yawn]": "emoji_16@2x.png",
    "[TUIEmoji_TearsLaugh]": "emoji_17@2x.png",
    "[TUIEmoji_Silly]": "emoji_18@2x.png",
    "[TUIEmoji_Wail]": "emoji_19@2x.png",
    "[TUIEmoji_Kiss]": "emoji_20@2x.png",
    "[TUIEmoji_Trapped]": "emoji_21@2x.png",
    "[TUIEmoji_Fear]": "emoji_22@2x.png",
    "[TUIEmoji_BareTeeth]": "emoji_23@2x.png",
    "[TUIEmoji_FlareUp]": "emoji_24@2x.png",
    "[TUIEmoji_Tact]": "emoji_25@2x.png",
    "[TUIEmoji_Shit]": "emoji_26@2x.png",
    "[TUIEmoji_ShutUp]": "emoji_27@2x.png",
    "[TUIEmoji_Sigh]": "emoji_28@2x.png",
    "[TUIEmoji_Hehe]": "emoji_29@2x.png",
    "[TUIEmoji_Silent]": "emoji_30@2x.png",
    "[TUIEmoji_Skull]": "emoji_31@2x.png",
    "[TUIEmoji_Mask]": "emoji_32@2x.png",
    "[TUIEmoji_Beer]": "emoji_33@2x.png",
    "[TUIEmoji_Cake]": "emoji_34@2x.png",
    "[TUIEmoji_RedPacket]": "emoji_35@2x.png",
    "[TUIEmoji_Bombs]": "emoji_36@2x.png",
    "[TUIEmoji_Ai]": "emoji_37@2x.png",
    "[TUIEmoji_Celebrate]": "emoji_38@2x.png",
    "[TUIEmoji_Bless]": "emoji_39@2x.png",
    "[TUIEmoji_Flower]": "emoji_40@2x.png",
    "[TUIEmoji_Watermelon]": "emoji_41@2x.png",
    "[TUIEmoji_Cow]": "emoji_42@2x.png",
    "[TUIEmoji_Fool]": "emoji_43@2x.png",
    "[TUIEmoji_Surprised]": "emoji_44@2x.png",
    "[TUIEmoji_Askance]": "emoji_45@2x.png",
    "[TUIEmoji_Monster]": "emoji_46@2x.png",
    "[TUIEmoji_Pig]": "emoji_47@2x.png",
    "[TUIEmoji_Coffee]": "emoji_48@2x.png",
    "[TUIEmoji_Ok]": "emoji_49@2x.png",
    "[TUIEmoji_Heart]": "emoji_50@2x.png",
    "[TUIEmoji_Sun]": "emoji_51@2x.png",
    "[TUIEmoji_Moon]": "emoji_52@2x.png",
    "[TUIEmoji_Star]": "emoji_53@2x.png",
    "[TUIEmoji_Rich]": "emoji_54@2x.png",
    "[TUIEmoji_Fortune]": "emoji_55@2x.png",
    "[TUIEmoji_857]": "emoji_56@2x.png",
    "[TUIEmoji_666]": "emoji_57@2x.png",
    "[TUIEmoji_Prohibit]": "emoji_58@2x.png",
    "[TUIEmoji_Convinced]": "emoji_59@2x.png",
    "[TUIEmoji_Knife]": "emoji_60@2x.png",
    "[TUIEmoji_Like]": "emoji_61@2x.png"
  };
  const BIG_EMOJI_GROUP_LIST = [
    {
      emojiGroupID: 1,
      type: EMOJI_TYPE.BIG,
      url: DEFAULT_BIG_EMOJI_URL,
      list: [
        "yz00",
        "yz01",
        "yz02",
        "yz03",
        "yz04",
        "yz05",
        "yz06",
        "yz07",
        "yz08",
        "yz09",
        "yz10",
        "yz11",
        "yz12",
        "yz13",
        "yz14",
        "yz15",
        "yz16",
        "yz17"
      ]
    },
    {
      emojiGroupID: 2,
      type: EMOJI_TYPE.BIG,
      url: DEFAULT_BIG_EMOJI_URL,
      list: [
        "ys00",
        "ys01",
        "ys02",
        "ys03",
        "ys04",
        "ys05",
        "ys06",
        "ys07",
        "ys08",
        "ys09",
        "ys10",
        "ys11",
        "ys12",
        "ys13",
        "ys14",
        "ys15"
      ]
    },
    {
      emojiGroupID: 3,
      type: EMOJI_TYPE.BIG,
      url: DEFAULT_BIG_EMOJI_URL,
      list: [
        "gcs00",
        "gcs01",
        "gcs02",
        "gcs03",
        "gcs04",
        "gcs05",
        "gcs06",
        "gcs07",
        "gcs08",
        "gcs09",
        "gcs10",
        "gcs11",
        "gcs12",
        "gcs13",
        "gcs14",
        "gcs15",
        "gcs16"
      ]
    }
  ];
  const BASIC_EMOJI_NAME_TO_KEY_MAPPING = {
    ...Object.fromEntries(
      (_s = Object.entries(Emoji$2)) == null ? void 0 : _s.map(([key, val]) => [val, key])
    ),
    ...Object.fromEntries(
      (_t2 = Object.entries(Emoji$1)) == null ? void 0 : _t2.map(([key, val]) => [val, key])
    )
  };
  const BASIC_EMOJI_URL = DEFAULT_BASIC_EMOJI_URL;
  const BASIC_EMOJI_URL_MAPPING = DEFAULT_BASIC_EMOJI_URL_MAPPING;
  const EMOJI_GROUP_LIST = [
    {
      emojiGroupID: 0,
      type: EMOJI_TYPE.BASIC,
      url: BASIC_EMOJI_URL,
      list: Object.keys(BASIC_EMOJI_URL_MAPPING)
    },
    ...BIG_EMOJI_GROUP_LIST,
    ...CUSTOM_BIG_EMOJI_GROUP_LIST
  ];
  const convertKeyToEmojiName = (key) => {
    return isWeChat ? Emoji$2[key] : Jt.t(`Emoji.${key}`);
  };
  const transformTextWithKeysToEmojiNames = (text) => {
    if (!text) {
      return "";
    }
    const reg = /(\[.+?\])/g;
    let txt = text;
    if (reg.test(text)) {
      txt = text.replace(reg, (match) => BASIC_EMOJI_URL_MAPPING[match] ? convertKeyToEmojiName(match) : match);
    }
    return txt;
  };
  const transformTextWithEmojiNamesToKeys = (text) => {
    if (!text) {
      return "";
    }
    const reg = /(\[.+?\])/g;
    let txt = text;
    if (reg.test(text)) {
      txt = text.replace(reg, (match) => BASIC_EMOJI_NAME_TO_KEY_MAPPING[match] || match);
    }
    return txt;
  };
  ({
    emojiBaseUrl: BASIC_EMOJI_URL,
    emojiUrlMapping: BASIC_EMOJI_URL_MAPPING,
    emojiNameMapping: {
      ...Emoji$2
    }
  });
  const parseTextToRenderArray = (text) => {
    const emojiRegex = /\[([^\]]+)\]/g;
    const result = [];
    let match;
    let lastIndex = 0;
    while ((match = emojiRegex.exec(text)) !== null) {
      const startIndex = match.index;
      const endIndex = emojiRegex.lastIndex;
      const emojiKey = match[0];
      if (startIndex > lastIndex) {
        result.push({ type: "text", content: text.substring(lastIndex, startIndex) });
      }
      const emojiUrl = BASIC_EMOJI_URL + BASIC_EMOJI_URL_MAPPING[emojiKey];
      if (emojiUrl) {
        result.push({ type: "image", content: emojiUrl, emojiKey });
      } else {
        result.push({ type: "text", content: emojiKey });
      }
      lastIndex = endIndex;
      emojiRegex.lastIndex = lastIndex;
    }
    if (lastIndex < text.length) {
      result.push({ type: "text", content: text.substring(lastIndex) });
    }
    return result;
  };
  const _sfc_main$2j = /* @__PURE__ */ vue.defineComponent({
    __name: "message-abstract-text",
    props: {
      content: { type: Array, required: true, default: () => [] },
      highlightType: { type: String, required: true, default: "font" },
      displayType: { type: String, required: true, default: "info" }
    },
    setup(__props, { expose: __expose }) {
      __expose();
      const props2 = __props;
      const contentText = vue.ref(props2.content);
      const __returned__ = { props: props2, contentText, get transformTextWithKeysToEmojiNames() {
        return transformTextWithKeysToEmojiNames;
      } };
      Object.defineProperty(__returned__, "__isScriptSetup", { enumerable: false, value: true });
      return __returned__;
    }
  });
  function _sfc_render$2i(_ctx, _cache, $props, $setup, $data, $options) {
    return vue.openBlock(), vue.createElementBlock(
      "div",
      {
        class: vue.normalizeClass([
          "message-abstract-text",
          `message-abstract-text-${$props.highlightType}`,
          `message-abstract-text-${$props.displayType}`
        ])
      },
      [
        (vue.openBlock(true), vue.createElementBlock(
          vue.Fragment,
          null,
          vue.renderList($setup.contentText, (contentItem, index2) => {
            return vue.openBlock(), vue.createElementBlock(
              "span",
              {
                key: index2,
                class: vue.normalizeClass([contentItem && contentItem.isHighlight ? "highlight" : "normal"])
              },
              vue.toDisplayString($setup.transformTextWithKeysToEmojiNames(contentItem.text)),
              3
              /* TEXT, CLASS */
            );
          }),
          128
          /* KEYED_FRAGMENT */
        ))
      ],
      2
      /* CLASS */
    );
  }
  const MessageAbstractText = /* @__PURE__ */ _export_sfc(_sfc_main$2j, [["render", _sfc_render$2i], ["__scopeId", "data-v-94825845"], ["__file", "C:/Users/Administrator/Desktop/Project Folder/ZXHand/ZXHandwritting_APP_uniapp/TUIKit/components/TUISearch/search-result/search-result-item/message-abstract/message-abstract-text.vue"]]);
  const _sfc_main$2i = /* @__PURE__ */ vue.defineComponent({
    __name: "message-abstract-file",
    props: {
      contentText: { type: Array, required: true, default: () => [] },
      messageContent: { type: null, required: true, default: () => ({}) },
      displayType: { type: String, required: true, default: "bubble" }
    },
    setup(__props, { expose: __expose }) {
      __expose();
      const props2 = __props;
      const contentText = vue.ref(props2.contentText);
      const typeIcon = vue.computed(() => {
        var _a;
        const fileUrl = (_a = props2 == null ? void 0 : props2.messageContent) == null ? void 0 : _a.url;
        const index2 = fileUrl == null ? void 0 : fileUrl.lastIndexOf(".");
        const type = fileUrl == null ? void 0 : fileUrl.substring(index2 + 1);
        return handleFileIconForShow(type);
      });
      const fileSize = vue.computed(() => {
        var _a;
        return (_a = props2 == null ? void 0 : props2.messageContent) == null ? void 0 : _a.size;
      });
      const handleFileIconForShow = (type) => {
        const urlBase = "https://web.sdk.qcloud.com/component/TUIKit/assets/file-";
        const fileTypes = [
          "image",
          "pdf",
          "text",
          "ppt",
          "presentation",
          "sheet",
          "zip",
          "word",
          "video",
          "unknown"
        ];
        let url2 = "";
        let iconType = "";
        fileTypes == null ? void 0 : fileTypes.forEach((typeName) => {
          if (type == null ? void 0 : type.includes(typeName)) {
            url2 = urlBase + typeName + ".svg";
            iconType = typeName;
          }
        });
        return {
          iconSrc: url2 ? url2 : urlBase + "unknown.svg",
          iconType: iconType ? iconType : "unknown"
        };
      };
      const __returned__ = { props: props2, contentText, typeIcon, fileSize, handleFileIconForShow };
      Object.defineProperty(__returned__, "__isScriptSetup", { enumerable: false, value: true });
      return __returned__;
    }
  });
  function _sfc_render$2h(_ctx, _cache, $props, $setup, $data, $options) {
    return vue.openBlock(), vue.createElementBlock(
      "div",
      {
        class: vue.normalizeClass(["message-abstract-file", `message-abstract-file-${$props.displayType}`])
      },
      [
        vue.createElementVNode("div", {
          class: vue.normalizeClass(["message-abstract-file-left"])
        }, [
          vue.createElementVNode("img", {
            class: vue.normalizeClass(["message-abstract-file-left-icon"]),
            src: $setup.typeIcon.iconSrc
          }, null, 8, ["src"])
        ]),
        vue.createElementVNode("div", {
          class: vue.normalizeClass(["message-abstract-file-main"])
        }, [
          vue.createElementVNode("div", {
            class: vue.normalizeClass(["message-abstract-file-main-name"])
          }, [
            (vue.openBlock(true), vue.createElementBlock(
              vue.Fragment,
              null,
              vue.renderList($setup.contentText, (contentItem, index2) => {
                return vue.openBlock(), vue.createElementBlock(
                  "span",
                  {
                    key: index2,
                    class: vue.normalizeClass([contentItem && contentItem.isHighlight ? "highlight" : "normal"])
                  },
                  vue.toDisplayString(contentItem.text),
                  3
                  /* TEXT, CLASS */
                );
              }),
              128
              /* KEYED_FRAGMENT */
            ))
          ]),
          vue.createElementVNode(
            "div",
            {
              class: vue.normalizeClass(["message-abstract-file-main-size"])
            },
            vue.toDisplayString($setup.fileSize),
            1
            /* TEXT */
          )
        ])
      ],
      2
      /* CLASS */
    );
  }
  const MessageAbstractFile = /* @__PURE__ */ _export_sfc(_sfc_main$2i, [["render", _sfc_render$2h], ["__scopeId", "data-v-e3774db0"], ["__file", "C:/Users/Administrator/Desktop/Project Folder/ZXHand/ZXHandwritting_APP_uniapp/TUIKit/components/TUISearch/search-result/search-result-item/message-abstract/message-abstract-file.vue"]]);
  const isFunction = (val) => typeof val === "function";
  const isObject$2 = (val) => val !== null && typeof val === "object";
  const isUrl = (url2) => {
    return /^(https?:\/\/(([a-zA-Z0-9]+-?)+[a-zA-Z0-9]+\.)+[a-zA-Z]+)(:\d+)?(\/.*)?(\?.*)?(#.*)?$/.test(
      url2
    );
  };
  const isJSON$1 = (str) => {
    if (typeof str === "string") {
      try {
        const data = JSON.parse(str);
        if (data) {
          return true;
        }
        return false;
      } catch (error2) {
        return false;
      }
    }
    return false;
  };
  const JSONToObject$1 = (str) => {
    if (!str || !isJSON$1(str)) {
      return str;
    }
    return JSON.parse(str);
  };
  const starLightIcon = "/assets/star-light.d9a7aedf.png";
  const _sfc_main$2h = /* @__PURE__ */ vue.defineComponent({
    __name: "message-abstract-custom",
    props: {
      contentText: { type: Array, required: true, default: () => [] },
      message: { type: Object, required: true, default: () => ({}) },
      messageContent: { type: null, required: true, default: () => ({}) }
    },
    setup(__props, { expose: __expose }) {
      var _a, _b;
      __expose();
      const props2 = __props;
      const custom = vue.ref(
        (_a = props2 == null ? void 0 : props2.message) == null ? void 0 : _a.payload
      );
      const extensionJSON = vue.computed(() => {
        var _a2, _b2;
        return ((_a2 = custom == null ? void 0 : custom.value) == null ? void 0 : _a2.data) ? JSONToObject$1(custom.value.data) : (_b2 = custom == null ? void 0 : custom.value) == null ? void 0 : _b2.data;
      });
      const businessID = vue.computed(() => {
        var _a2;
        return (_a2 = extensionJSON == null ? void 0 : extensionJSON.value) == null ? void 0 : _a2.businessID;
      });
      const descriptionForShow = vue.ref(props2 == null ? void 0 : props2.contentText);
      const defaultMessageContent = vue.ref(((_b = props2 == null ? void 0 : props2.messageContent) == null ? void 0 : _b.custom) || "[自定义消息]");
      const __returned__ = { props: props2, custom, extensionJSON, businessID, descriptionForShow, defaultMessageContent, get TUITranslateService() {
        return Jt;
      }, get CHAT_MSG_CUSTOM_TYPE() {
        return CHAT_MSG_CUSTOM_TYPE;
      }, get isUrl() {
        return isUrl;
      }, Icon: Icon$1, get star() {
        return starLightIcon;
      } };
      Object.defineProperty(__returned__, "__isScriptSetup", { enumerable: false, value: true });
      return __returned__;
    }
  });
  function _sfc_render$2g(_ctx, _cache, $props, $setup, $data, $options) {
    return vue.openBlock(), vue.createElementBlock(
      vue.Fragment,
      null,
      [
        vue.createCommentVNode(" Custom message keyword keyword search description, so here only a few custom messages that need to display highlighted description type are parsed "),
        vue.createElementVNode(
          "div",
          {
            class: vue.normalizeClass(["message-abstract-custom"]),
            onClickCapture: _cache[0] || (_cache[0] = vue.withModifiers(() => {
            }, ["stop"]))
          },
          [
            $setup.businessID === $setup.CHAT_MSG_CUSTOM_TYPE.SERVICE ? (vue.openBlock(), vue.createElementBlock("div", {
              key: 0,
              class: vue.normalizeClass(["service"])
            }, [
              vue.createElementVNode("h1", {
                class: vue.normalizeClass(["service-header"])
              }, [
                vue.createElementVNode(
                  "label",
                  {
                    class: vue.normalizeClass(["service-header-title"])
                  },
                  vue.toDisplayString($setup.extensionJSON.title),
                  1
                  /* TEXT */
                ),
                $setup.extensionJSON.hyperlinks_text ? (vue.openBlock(), vue.createElementBlock("a", {
                  key: 0,
                  class: vue.normalizeClass(["service-header-link", "link"]),
                  href: $setup.extensionJSON.hyperlinks_text.value,
                  target: "view_window"
                }, vue.toDisplayString($setup.extensionJSON.hyperlinks_text.key), 9, ["href"])) : vue.createCommentVNode("v-if", true)
              ]),
              $setup.extensionJSON.item && $setup.extensionJSON.item.length > 0 ? (vue.openBlock(), vue.createElementBlock("ul", {
                key: 0,
                class: vue.normalizeClass(["service-list"])
              }, [
                (vue.openBlock(true), vue.createElementBlock(
                  vue.Fragment,
                  null,
                  vue.renderList($setup.extensionJSON.item, (item, index2) => {
                    return vue.openBlock(), vue.createElementBlock("li", {
                      key: index2,
                      class: vue.normalizeClass(["service-list-item"])
                    }, [
                      $setup.isUrl(item.value) ? (vue.openBlock(), vue.createElementBlock("a", {
                        key: 0,
                        class: vue.normalizeClass(["service-list-item-link", "link"]),
                        href: item.value,
                        target: "view_window"
                      }, vue.toDisplayString(item.key), 9, ["href"])) : (vue.openBlock(), vue.createElementBlock(
                        "p",
                        {
                          key: 1,
                          class: vue.normalizeClass(["service-list-item-key"])
                        },
                        vue.toDisplayString(item.key),
                        1
                        /* TEXT */
                      ))
                    ]);
                  }),
                  128
                  /* KEYED_FRAGMENT */
                ))
              ])) : vue.createCommentVNode("v-if", true),
              vue.createElementVNode("div", {
                class: vue.normalizeClass(["service-description", "description"])
              }, [
                (vue.openBlock(true), vue.createElementBlock(
                  vue.Fragment,
                  null,
                  vue.renderList($setup.descriptionForShow, (contentItem, index2) => {
                    return vue.openBlock(), vue.createElementBlock(
                      "span",
                      {
                        key: index2,
                        class: vue.normalizeClass([contentItem && contentItem.isHighlight ? "highlight" : "normal"])
                      },
                      vue.toDisplayString(contentItem.text),
                      3
                      /* TEXT, CLASS */
                    );
                  }),
                  128
                  /* KEYED_FRAGMENT */
                ))
              ])
            ])) : $setup.businessID === $setup.CHAT_MSG_CUSTOM_TYPE.EVALUATE ? (vue.openBlock(), vue.createElementBlock("div", {
              key: 1,
              class: "evaluate"
            }, [
              vue.createElementVNode("div", {
                class: vue.normalizeClass(["evaluate-description", "description"])
              }, [
                (vue.openBlock(true), vue.createElementBlock(
                  vue.Fragment,
                  null,
                  vue.renderList($setup.descriptionForShow, (contentItem, index2) => {
                    return vue.openBlock(), vue.createElementBlock(
                      "span",
                      {
                        key: index2,
                        class: vue.normalizeClass([contentItem && contentItem.isHighlight ? "highlight" : "normal"])
                      },
                      vue.toDisplayString(contentItem.text),
                      3
                      /* TEXT, CLASS */
                    );
                  }),
                  128
                  /* KEYED_FRAGMENT */
                ))
              ]),
              $setup.extensionJSON.score ? (vue.openBlock(), vue.createElementBlock("ul", {
                key: 0,
                class: "evaluate-list"
              }, [
                (vue.openBlock(true), vue.createElementBlock(
                  vue.Fragment,
                  null,
                  vue.renderList(Math.max($setup.extensionJSON.score, 0), (item, index2) => {
                    return vue.openBlock(), vue.createElementBlock("li", {
                      key: index2,
                      class: "evaluate-list-item"
                    }, [
                      vue.createVNode($setup["Icon"], {
                        file: $setup.star,
                        class: "file-icon"
                      }, null, 8, ["file"])
                    ]);
                  }),
                  128
                  /* KEYED_FRAGMENT */
                ))
              ])) : vue.createCommentVNode("v-if", true),
              vue.createElementVNode(
                "article",
                null,
                vue.toDisplayString($setup.extensionJSON.comment),
                1
                /* TEXT */
              )
            ])) : $setup.businessID === $setup.CHAT_MSG_CUSTOM_TYPE.ORDER ? (vue.openBlock(), vue.createElementBlock("div", {
              key: 2,
              class: "order"
            }, [
              vue.createElementVNode("img", {
                class: "order-image",
                src: $setup.extensionJSON.imageUrl,
                alt: ""
              }, null, 8, ["src"]),
              vue.createElementVNode("main", { class: "order-main" }, [
                vue.createElementVNode(
                  "h1",
                  { class: "order-main-title" },
                  vue.toDisplayString($setup.extensionJSON.title),
                  1
                  /* TEXT */
                ),
                vue.createElementVNode("div", {
                  class: vue.normalizeClass(["order-main-description", "description"])
                }, [
                  (vue.openBlock(true), vue.createElementBlock(
                    vue.Fragment,
                    null,
                    vue.renderList($setup.descriptionForShow, (contentItem, index2) => {
                      return vue.openBlock(), vue.createElementBlock(
                        "span",
                        {
                          key: index2,
                          class: vue.normalizeClass([contentItem && contentItem.isHighlight ? "highlight" : "normal"])
                        },
                        vue.toDisplayString(contentItem.text),
                        3
                        /* TEXT, CLASS */
                      );
                    }),
                    128
                    /* KEYED_FRAGMENT */
                  ))
                ]),
                vue.createElementVNode(
                  "span",
                  { class: "order-main-price" },
                  vue.toDisplayString($setup.extensionJSON.price),
                  1
                  /* TEXT */
                )
              ])
            ])) : $setup.businessID === $setup.CHAT_MSG_CUSTOM_TYPE.LINK ? (vue.openBlock(), vue.createElementBlock("div", {
              key: 3,
              class: "text-link"
            }, [
              vue.createElementVNode("div", {
                class: vue.normalizeClass(["text-link-description", "description"])
              }, [
                vue.createElementVNode(
                  "p",
                  null,
                  vue.toDisplayString($setup.extensionJSON.text),
                  1
                  /* TEXT */
                )
              ]),
              vue.createElementVNode("a", {
                class: vue.normalizeClass(["link"]),
                href: $setup.extensionJSON.link,
                target: "view_window"
              }, vue.toDisplayString($setup.TUITranslateService.t("message.custom.查看详情>>")), 9, ["href"])
            ])) : (vue.openBlock(), vue.createElementBlock(
              "span",
              { key: 4 },
              vue.toDisplayString($setup.defaultMessageContent),
              1
              /* TEXT */
            ))
          ],
          32
          /* NEED_HYDRATION */
        )
      ],
      2112
      /* STABLE_FRAGMENT, DEV_ROOT_FRAGMENT */
    );
  }
  const MessageAbstractCustom = /* @__PURE__ */ _export_sfc(_sfc_main$2h, [["render", _sfc_render$2g], ["__scopeId", "data-v-88d2ba7b"], ["__file", "C:/Users/Administrator/Desktop/Project Folder/ZXHand/ZXHandwritting_APP_uniapp/TUIKit/components/TUISearch/search-result/search-result-item/message-abstract/message-abstract-custom.vue"]]);
  const _sfc_main$2g = /* @__PURE__ */ vue.defineComponent({
    __name: "message-abstract-image",
    props: {
      messageContent: { type: null, required: true, default: () => ({}) }
    },
    setup(__props, { expose: __expose }) {
      __expose();
      const props2 = __props;
      const imageUrl = vue.computed(() => props2.messageContent.url || "");
      const __returned__ = { props: props2, imageUrl };
      Object.defineProperty(__returned__, "__isScriptSetup", { enumerable: false, value: true });
      return __returned__;
    }
  });
  function _sfc_render$2f(_ctx, _cache, $props, $setup, $data, $options) {
    return vue.openBlock(), vue.createElementBlock("div", {
      class: vue.normalizeClass(["message-abstract-image-container"])
    }, [
      vue.createElementVNode("img", {
        class: vue.normalizeClass(["message-abstract-image"]),
        src: $setup.imageUrl
      }, null, 8, ["src"])
    ]);
  }
  const MessageAbstractImage = /* @__PURE__ */ _export_sfc(_sfc_main$2g, [["render", _sfc_render$2f], ["__scopeId", "data-v-9a7df6f1"], ["__file", "C:/Users/Administrator/Desktop/Project Folder/ZXHand/ZXHandwritting_APP_uniapp/TUIKit/components/TUISearch/search-result/search-result-item/message-abstract/message-abstract-image.vue"]]);
  const playIcon = "/assets/video-play.58b451c9.png";
  const _sfc_main$2f = /* @__PURE__ */ vue.defineComponent({
    __name: "message-abstract-video",
    props: {
      messageContent: { type: null, required: true, default: () => ({}) }
    },
    setup(__props, { expose: __expose }) {
      __expose();
      const props2 = __props;
      const videoUrl = vue.computed(() => {
        return props2.messageContent.snapshotUrl || props2.messageContent.url;
      });
      const __returned__ = { props: props2, videoUrl, Icon: Icon$1, get playIcon() {
        return playIcon;
      } };
      Object.defineProperty(__returned__, "__isScriptSetup", { enumerable: false, value: true });
      return __returned__;
    }
  });
  function _sfc_render$2e(_ctx, _cache, $props, $setup, $data, $options) {
    return vue.openBlock(), vue.createElementBlock("div", {
      class: vue.normalizeClass(["message-abstract-video"])
    }, [
      vue.createElementVNode("div", { class: "message-abstract-video-box" }, [
        vue.createElementVNode("img", {
          src: $setup.videoUrl,
          class: vue.normalizeClass(["video-snapshot"])
        }, null, 8, ["src"]),
        vue.createVNode($setup["Icon"], {
          file: $setup.playIcon,
          class: "video-play"
        }, null, 8, ["file"])
      ])
    ]);
  }
  const MessageAbstractVideo = /* @__PURE__ */ _export_sfc(_sfc_main$2f, [["render", _sfc_render$2e], ["__scopeId", "data-v-15182b71"], ["__file", "C:/Users/Administrator/Desktop/Project Folder/ZXHand/ZXHandwritting_APP_uniapp/TUIKit/components/TUISearch/search-result/search-result-item/message-abstract/message-abstract-video.vue"]]);
  const TOAST_TYPE = {
    SUCCESS: "success",
    WARNING: "warning",
    ERROR: "error",
    NORMAL: "normal"
  };
  const Toast = (options) => {
    i.showToast({
      title: options.message || "Toast",
      duration: options.duration || 1500,
      icon: handleIconType(options.type)
    });
  };
  const handleIconType = (type) => {
    if (!type) {
      return "none";
    }
    switch (type) {
      case TOAST_TYPE.ERROR:
        return "none";
      case TOAST_TYPE.WARNING:
        return "none";
      case TOAST_TYPE.SUCCESS:
        return "success";
      case TOAST_TYPE.NORMAL:
        return "none";
      default:
        return "none";
    }
  };
  const messageTypeAbstractMap = {
    [Kt.TYPES.MSG_TEXT]: "[文本]",
    [Kt.TYPES.MSG_IMAGE]: "[图片]",
    [Kt.TYPES.MSG_AUDIO]: "[语音]",
    [Kt.TYPES.MSG_VIDEO]: "[视频]",
    [Kt.TYPES.MSG_FILE]: "[文件]",
    [Kt.TYPES.MSG_CUSTOM]: "[自定义消息]",
    [Kt.TYPES.MSG_SYSTEM]: "[系统消息]",
    [Kt.TYPES.MSG_MERGER]: "[合并消息]",
    [Kt.TYPES.MSG_LOCATION]: "[位置消息]"
  };
  const searchCloudMessages = (params) => {
    return Zt.searchCloudMessages(params).then((imResponse) => {
      return imResponse;
    }).catch((error2) => {
      Toast({
        message: Jt.t("TUISearch.消息云端搜索失败：") + (error2 == null ? void 0 : error2.message),
        type: TOAST_TYPE.ERROR,
        duration: 3e3
      });
      return null;
    });
  };
  const enterConversation$1 = (item) => {
    const conversationID = (item == null ? void 0 : item.conversationID) || ((item == null ? void 0 : item.groupID) ? `GROUP${item == null ? void 0 : item.groupID}` : `C2C${item == null ? void 0 : item.userID}`);
    Wt.switchConversation(conversationID).then(() => {
      zt.update(o$2.SEARCH, "currentSearchingStatus", {
        isSearching: false,
        searchType: "global"
      });
      zt.update(o$2.SEARCH, "currentSearchInputValue", {
        value: "",
        searchType: "global"
      });
      isUniFrameWork && (i == null ? void 0 : i.navigateTo({
        url: "/TUIKit/components/TUIChat/index"
      }));
    }).catch((error2) => {
      formatAppLog("warn", "at TUIKit/components/TUISearch/utils.ts:112", "switch conversation failed:", error2 == null ? void 0 : error2.message);
      Toast({
        message: Jt.t("TUISearch.进入会话失败"),
        type: TOAST_TYPE.ERROR,
        duration: 1e3
      });
    });
  };
  const generateSearchResultShowName = (result, resultContent) => {
    var _a, _b, _c;
    if (!result) {
      return "";
    }
    if (result.ID) {
      return resultContent == null ? void 0 : resultContent.showName;
    }
    if (result.groupID) {
      return result.name || result.groupID;
    }
    if (result.userID) {
      return result.remark || result.nick || result.userID || "";
    }
    if ((_a = result.conversation) == null ? void 0 : _a.conversationID) {
      if (typeof result.conversation.getShowName === "function") {
        return result.conversation.getShowName();
      } else {
        return ((_c = (_b = zt.getConversationModel(result.conversation.conversationID)) == null ? void 0 : _b.getShowName) == null ? void 0 : _c.call(_b)) || result.conversation.conversationID;
      }
    }
    return "";
  };
  const generateSearchResultAvatar = (result) => {
    var _a, _b, _c, _d;
    if (!result) {
      return "";
    }
    if (result.ID) {
      return result.avatar || "https://web.sdk.qcloud.com/component/TUIKit/assets/avatar_21.png";
    }
    if (result.groupID) {
      return result.avatar || `https://web.sdk.qcloud.com/im/assets/images/${result == null ? void 0 : result.type}.svg`;
    }
    if (result.userID) {
      return result.avatar || "https://web.sdk.qcloud.com/component/TUIKit/assets/avatar_21.png";
    }
    if ((_a = result == null ? void 0 : result.conversation) == null ? void 0 : _a.conversationID) {
      if (typeof result.conversation.getAvatar === "function") {
        return (_b = result.conversation) == null ? void 0 : _b.getAvatar();
      } else {
        return (_d = (_c = zt.getConversationModel(result.conversation.conversationID)) == null ? void 0 : _c.getAvatar) == null ? void 0 : _d.call(_c);
      }
    }
    return "";
  };
  const generateSearchResultShowContent = (result, resultType, keywordList, isTypeShow = true) => {
    var _a, _b, _c, _d;
    if (result == null ? void 0 : result.groupID) {
      return [
        { text: "groupID: ", isHighlight: false },
        { text: result.groupID, isHighlight: true }
      ];
    }
    if (result == null ? void 0 : result.userID) {
      return [
        { text: "userID: ", isHighlight: false },
        { text: result.userID, isHighlight: true }
      ];
    }
    if ((result == null ? void 0 : result.conversation) || (result == null ? void 0 : result.flow)) {
      if ((result == null ? void 0 : result.messageCount) === 1 || (result == null ? void 0 : result.flow)) {
        const message2 = (result == null ? void 0 : result.flow) ? result : result == null ? void 0 : result.messageList[0];
        const text = ((_a = message2 == null ? void 0 : message2.payload) == null ? void 0 : _a.text) || ((_b = message2 == null ? void 0 : message2.payload) == null ? void 0 : _b.fileName) || ((_c = message2 == null ? void 0 : message2.payload) == null ? void 0 : _c.description);
        const abstract = [];
        if ((message2 == null ? void 0 : message2.type) && isTypeShow && message2.type !== Kt.TYPES.MSG_TEXT) {
          abstract.push({
            text: Jt.t(`TUISearch.${messageTypeAbstractMap[message2.type]}`),
            isHighlight: false
          });
        }
        abstract.push(...generateMessageContentHighlight(text, keywordList));
        return abstract;
      } else {
        return [
          {
            text: `${result == null ? void 0 : result.messageCount}${Jt.t(
              "TUISearch.条相关"
            )}${Jt.t(
              `TUISearch.${resultType === "allMessage" ? "结果" : (_d = searchMessageTypeList[resultType]) == null ? void 0 : _d.label}`
            )}`,
            isHighlight: false
          }
        ];
      }
    }
    return [];
  };
  const generateMessageContentHighlight = (content, keywordList) => {
    var _a;
    if (!content || !keywordList || !keywordList.length) {
      return [{ text: content || "", isHighlight: false }];
    }
    const matches = [];
    for (let i2 = 0; i2 < keywordList.length; i2++) {
      const substring = (_a = keywordList[i2]) == null ? void 0 : _a.replace(/[.*+?^${}()|[\]\\]/g, "\\$&");
      const regex = new RegExp(substring, "gi");
      let match;
      while ((match = regex.exec(content)) !== null) {
        const start2 = match.index;
        const end = match.index + match[0].length - 1;
        matches.push([start2, end]);
      }
    }
    const mergedRanges = [matches[0]];
    if (matches.length > 1) {
      matches.sort((a2, b2) => a2[0] - b2[0]);
      for (let i2 = 1; i2 < matches.length; i2++) {
        const currentRange = matches[i2];
        const lastMergedRange = mergedRanges[mergedRanges.length - 1];
        if (currentRange[0] - 1 <= lastMergedRange[1]) {
          lastMergedRange[1] = Math.max(lastMergedRange[1], currentRange[1]);
        } else {
          mergedRanges.push(currentRange);
        }
      }
    }
    if (!mergedRanges[0]) {
      return [{ text: content, isHighlight: false }];
    }
    const contentArray = [];
    let start = 0;
    for (let i2 = 0; i2 < mergedRanges.length; i2++) {
      const str1 = content.substring(start, mergedRanges[i2][0]);
      str1 && contentArray.push({ text: str1, isHighlight: false });
      const str2 = content.substring(mergedRanges[i2][0], mergedRanges[i2][1] + 1);
      str2 && contentArray.push({ text: str2, isHighlight: true });
      start = mergedRanges[i2][1] + 1;
    }
    const lastStr = content.substring(start);
    lastStr && contentArray.push({ text: lastStr, isHighlight: false });
    return contentArray;
  };
  const generateSearchResultTime = (timestamp) => {
    const todayZero = (/* @__PURE__ */ new Date()).setHours(0, 0, 0, 0);
    const thisYear = new Date((/* @__PURE__ */ new Date()).getFullYear(), 0, 1, 0, 0, 0, 0).getTime();
    const target = new Date(timestamp);
    const oneDay2 = 24 * 60 * 60 * 1e3;
    const oneWeek = 7 * oneDay2;
    const diff = todayZero - target.getTime();
    function formatNum(num) {
      return num < 10 ? "0" + num : num.toString();
    }
    if (diff <= 0) {
      return `${formatNum(target.getHours())}:${formatNum(target.getMinutes())}`;
    } else if (diff <= oneDay2) {
      return `${Jt.t("time.昨天")} ${formatNum(target.getHours())}:${formatNum(
        target.getMinutes()
      )}`;
    } else if (diff <= oneWeek - oneDay2) {
      const weekdays = ["星期日", "星期一", "星期二", "星期三", "星期四", "星期五", "星期六"];
      const weekday = weekdays[target.getDay()];
      return `${Jt.t("time." + weekday)} ${formatNum(target.getHours())}:${formatNum(
        target.getMinutes()
      )}`;
    } else if (target.getTime() >= thisYear) {
      return `${target.getMonth() + 1}/${target.getDate()} ${formatNum(
        target.getHours()
      )}:${formatNum(target.getMinutes())}`;
    } else {
      return `${target.getFullYear()}/${target.getMonth() + 1}/${target.getDate()} ${formatNum(
        target.getHours()
      )}:${formatNum(target.getMinutes())}`;
    }
  };
  const generateSearchResultYMD = (timestamp) => {
    const date2 = new Date(timestamp * 1e3);
    const year = date2.getFullYear();
    const month = ("0" + (date2.getMonth() + 1)).slice(-2);
    const day = ("0" + date2.getDate()).slice(-2);
    return `${year}-${month}-${day}`;
  };
  const debounce$1 = (func2, waitFor) => {
    let timeout2 = null;
    const debounced = (...args) => {
      if (timeout2 !== null) {
        clearTimeout(timeout2);
        timeout2 = null;
      }
      timeout2 = setTimeout(() => func2(...args), waitFor);
    };
    return debounced;
  };
  const _sfc_main$2e = /* @__PURE__ */ vue.defineComponent({
    __name: "index",
    props: {
      listItem: { type: Object, required: true, default: () => ({}) },
      listItemContent: { type: Object, required: false, default: () => ({}) },
      type: { type: null, required: true, default: "allMessage" },
      displayType: { type: null, required: true, default: "info" },
      keywordList: { type: Array, required: true, default: () => [] }
    },
    emits: ["showResultDetail", "navigateToChatPosition"],
    setup(__props, { expose: __expose, emit: __emit }) {
      __expose();
      const props2 = __props;
      const emits2 = __emit;
      const TYPES2 = vue.ref(Kt.TYPES);
      const avatarForShow = vue.ref("");
      const nameForShow = vue.ref("");
      const contentForShow = vue.ref([]);
      const timeForShow = vue.ref("");
      const isHovering = vue.ref(false);
      vue.watchEffect(() => {
        var _a, _b;
        avatarForShow.value = generateSearchResultAvatar(props2.listItem);
        nameForShow.value = generateSearchResultShowName(props2.listItem, props2 == null ? void 0 : props2.listItemContent);
        contentForShow.value = generateSearchResultShowContent(
          props2.listItem,
          props2.type,
          props2.keywordList,
          (props2 == null ? void 0 : props2.displayType) === "info"
        );
        timeForShow.value = ((_a = props2.listItem) == null ? void 0 : _a.time) ? generateSearchResultTime(((_b = props2.listItem) == null ? void 0 : _b.time) * 1e3) : "";
      });
      const onResultItemClicked = () => {
        var _a;
        if (props2.type === "contact" || props2.type === "group") {
          enterConversation$1(props2.listItem);
        } else {
          if (props2.displayType === "info" && !((_a = props2.listItem) == null ? void 0 : _a.ID)) {
            emits2("showResultDetail", true, props2.type, props2.listItem);
          } else {
            navigateToChatPosition();
          }
        }
      };
      const setHoverStatus = (status) => {
        isHovering.value = status;
      };
      const navigateToChatPosition = () => {
        emits2("navigateToChatPosition", props2.listItem);
      };
      const getMessageAbstractType = (message2) => {
        return (message2 == null ? void 0 : message2.type) ? Jt.t(`TUISearch.${messageTypeAbstractMap[message2.type]}`) : Jt.t(`TUISearch.[合并消息]`);
      };
      const __returned__ = { props: props2, emits: emits2, TYPES: TYPES2, avatarForShow, nameForShow, contentForShow, timeForShow, isHovering, onResultItemClicked, setHoverStatus, navigateToChatPosition, getMessageAbstractType, get TUITranslateService() {
        return Jt;
      }, MessageAbstractText, MessageAbstractFile, MessageAbstractCustom, MessageAbstractImage, MessageAbstractVideo, get isPC() {
        return isPC;
      } };
      Object.defineProperty(__returned__, "__isScriptSetup", { enumerable: false, value: true });
      return __returned__;
    }
  });
  function _sfc_render$2d(_ctx, _cache, $props, $setup, $data, $options) {
    return vue.openBlock(), vue.createElementBlock(
      "div",
      {
        class: vue.normalizeClass([
          "search-result-list-item",
          !$setup.isPC && "search-result-list-item-h5",
          "search-result-list-item-" + $props.displayType,
          $setup.isHovering && "hover-" + $props.displayType
        ]),
        onClick: $setup.onResultItemClicked,
        onMouseenter: _cache[0] || (_cache[0] = ($event) => $setup.setHoverStatus(true)),
        onMouseleave: _cache[1] || (_cache[1] = ($event) => $setup.setHoverStatus(false))
      },
      [
        $props.displayType === "info" || $props.displayType === "bubble" ? (vue.openBlock(), vue.createElementBlock(
          "div",
          {
            key: 0,
            class: vue.normalizeClass([$props.displayType])
          },
          [
            vue.createElementVNode(
              "div",
              {
                class: vue.normalizeClass($props.displayType + "-left")
              },
              [
                vue.createElementVNode("img", {
                  class: vue.normalizeClass($props.displayType + "-left-avatar"),
                  src: $setup.avatarForShow || "",
                  onerror: "this.onerror=null;this.src='https://web.sdk.qcloud.com/component/TUIKit/assets/avatar_21.png'"
                }, null, 10, ["src"])
              ],
              2
              /* CLASS */
            ),
            vue.createElementVNode(
              "div",
              {
                class: vue.normalizeClass([$props.displayType + "-main"])
              },
              [
                vue.createElementVNode(
                  "div",
                  {
                    class: vue.normalizeClass([$props.displayType + "-main-name"])
                  },
                  vue.toDisplayString($setup.nameForShow),
                  3
                  /* TEXT, CLASS */
                ),
                vue.createElementVNode(
                  "div",
                  {
                    class: vue.normalizeClass([$props.displayType + "-main-content"])
                  },
                  [
                    $props.displayType === "info" || $props.listItem.type === $setup.TYPES.MSG_TEXT ? (vue.openBlock(), vue.createBlock($setup["MessageAbstractText"], {
                      key: 0,
                      content: $setup.contentForShow,
                      highlightType: $props.displayType === "info" ? "font" : "background",
                      displayType: $props.displayType
                    }, null, 8, ["content", "highlightType", "displayType"])) : $props.listItem.type === $setup.TYPES.MSG_FILE ? (vue.openBlock(), vue.createBlock($setup["MessageAbstractFile"], {
                      key: 1,
                      contentText: $setup.contentForShow,
                      messageContent: $props.listItemContent,
                      displayType: $props.displayType
                    }, null, 8, ["contentText", "messageContent", "displayType"])) : $props.listItem.type === $setup.TYPES.MSG_IMAGE ? (vue.openBlock(), vue.createElementBlock("div", { key: 2 })) : $props.listItem.type === $setup.TYPES.MSG_VIDEO ? (vue.openBlock(), vue.createElementBlock("div", { key: 3 })) : $props.listItem.type === $setup.TYPES.MSG_CUSTOM ? (vue.openBlock(), vue.createBlock($setup["MessageAbstractCustom"], {
                      key: 4,
                      contentText: $setup.contentForShow,
                      message: $props.listItem,
                      messageContent: $props.listItemContent
                    }, null, 8, ["contentText", "message", "messageContent"])) : (vue.openBlock(), vue.createElementBlock(
                      "div",
                      { key: 5 },
                      vue.toDisplayString($setup.getMessageAbstractType($props.listItem)),
                      1
                      /* TEXT */
                    ))
                  ],
                  2
                  /* CLASS */
                )
              ],
              2
              /* CLASS */
            ),
            vue.createElementVNode(
              "div",
              {
                class: vue.normalizeClass($props.displayType + "-right")
              },
              [
                vue.createElementVNode(
                  "div",
                  {
                    class: vue.normalizeClass($props.displayType + "-right-time")
                  },
                  vue.toDisplayString($setup.timeForShow),
                  3
                  /* TEXT, CLASS */
                ),
                $props.displayType === "bubble" && $setup.isHovering ? (vue.openBlock(), vue.createElementBlock(
                  "div",
                  {
                    key: 0,
                    class: vue.normalizeClass($props.displayType + "-right-to"),
                    onClick: vue.withModifiers($setup.navigateToChatPosition, ["stop"])
                  },
                  vue.toDisplayString($setup.TUITranslateService.t("TUISearch.定位到聊天位置")),
                  3
                  /* TEXT, CLASS */
                )) : vue.createCommentVNode("v-if", true)
              ],
              2
              /* CLASS */
            )
          ],
          2
          /* CLASS */
        )) : $props.displayType === "file" ? (vue.openBlock(), vue.createElementBlock(
          "div",
          {
            key: 1,
            class: vue.normalizeClass([$props.displayType])
          },
          [
            vue.createElementVNode(
              "div",
              {
                class: vue.normalizeClass([$props.displayType + "-header"])
              },
              [
                vue.createElementVNode("img", {
                  class: vue.normalizeClass($props.displayType + "-header-avatar"),
                  src: $setup.avatarForShow,
                  onerror: "this.onerror=null;this.src='https://web.sdk.qcloud.com/component/TUIKit/assets/avatar_21.png'"
                }, null, 10, ["src"]),
                vue.createElementVNode(
                  "div",
                  {
                    class: vue.normalizeClass([$props.displayType + "-header-name"])
                  },
                  vue.toDisplayString($setup.nameForShow),
                  3
                  /* TEXT, CLASS */
                ),
                $setup.isHovering ? (vue.openBlock(), vue.createElementBlock(
                  "div",
                  {
                    key: 0,
                    class: vue.normalizeClass($props.displayType + "-header-to"),
                    onClick: vue.withModifiers($setup.navigateToChatPosition, ["stop"])
                  },
                  vue.toDisplayString($setup.TUITranslateService.t("TUISearch.定位到聊天位置")),
                  3
                  /* TEXT, CLASS */
                )) : vue.createCommentVNode("v-if", true),
                vue.createElementVNode(
                  "div",
                  {
                    class: vue.normalizeClass($props.displayType + "-header-time")
                  },
                  vue.toDisplayString($setup.timeForShow),
                  3
                  /* TEXT, CLASS */
                )
              ],
              2
              /* CLASS */
            ),
            vue.createElementVNode(
              "div",
              {
                class: vue.normalizeClass([$props.displayType + "-main-content"])
              },
              [
                vue.createVNode($setup["MessageAbstractFile"], {
                  contentText: $setup.contentForShow,
                  messageContent: $props.listItemContent,
                  displayType: "bubble"
                }, null, 8, ["contentText", "messageContent"])
              ],
              2
              /* CLASS */
            )
          ],
          2
          /* CLASS */
        )) : $props.displayType === "image" ? (vue.openBlock(), vue.createElementBlock(
          "div",
          {
            key: 2,
            class: vue.normalizeClass([$props.displayType])
          },
          [
            vue.createElementVNode("div", {
              class: "image-container",
              onClick: vue.withModifiers($setup.navigateToChatPosition, ["stop"])
            }, [
              $props.listItem.type === $setup.TYPES.MSG_IMAGE ? (vue.openBlock(), vue.createBlock($setup["MessageAbstractImage"], {
                key: 0,
                messageContent: $props.listItemContent
              }, null, 8, ["messageContent"])) : $props.listItem.type === $setup.TYPES.MSG_VIDEO ? (vue.openBlock(), vue.createBlock($setup["MessageAbstractVideo"], {
                key: 1,
                messageContent: $props.listItemContent
              }, null, 8, ["messageContent"])) : vue.createCommentVNode("v-if", true),
              $setup.isHovering ? (vue.openBlock(), vue.createElementBlock("div", {
                key: 2,
                class: "image-container-hover"
              }, [
                vue.createElementVNode(
                  "div",
                  { class: "image-container-hover-text" },
                  vue.toDisplayString($setup.TUITranslateService.t("TUISearch.定位到聊天位置")),
                  1
                  /* TEXT */
                )
              ])) : vue.createCommentVNode("v-if", true)
            ])
          ],
          2
          /* CLASS */
        )) : vue.createCommentVNode("v-if", true)
      ],
      34
      /* CLASS, NEED_HYDRATION */
    );
  }
  const SearchResultItem = /* @__PURE__ */ _export_sfc(_sfc_main$2e, [["render", _sfc_render$2d], ["__scopeId", "data-v-64f261e1"], ["__file", "C:/Users/Administrator/Desktop/Project Folder/ZXHand/ZXHandwritting_APP_uniapp/TUIKit/components/TUISearch/search-result/search-result-item/index.vue"]]);
  const SearchDefaultIcon = "/assets/search-default.0969a8df.svg";
  const _sfc_main$2d = /* @__PURE__ */ vue.defineComponent({
    __name: "index",
    setup(__props, { expose: __expose }) {
      __expose();
      const __returned__ = { get TUITranslateService() {
        return Jt;
      }, get isPC() {
        return isPC;
      }, Icon: Icon$1, get SearchDefaultIcon() {
        return SearchDefaultIcon;
      } };
      Object.defineProperty(__returned__, "__isScriptSetup", { enumerable: false, value: true });
      return __returned__;
    }
  });
  function _sfc_render$2c(_ctx, _cache, $props, $setup, $data, $options) {
    return vue.openBlock(), vue.createElementBlock(
      "div",
      {
        class: vue.normalizeClass(["search-result-default", !$setup.isPC && "search-result-default-h5"])
      },
      [
        vue.createElementVNode("div", { class: "search-result-default-main" }, [
          vue.createVNode($setup["Icon"], {
            file: $setup.SearchDefaultIcon,
            width: "88px",
            height: "75px"
          }, null, 8, ["file"]),
          vue.createElementVNode(
            "div",
            { class: "default-text" },
            vue.toDisplayString($setup.TUITranslateService.t("TUISearch.暂无搜索结果")),
            1
            /* TEXT */
          )
        ])
      ],
      2
      /* CLASS */
    );
  }
  const SearchResultDefault = /* @__PURE__ */ _export_sfc(_sfc_main$2d, [["render", _sfc_render$2c], ["__scopeId", "data-v-ad49c7f2"], ["__file", "C:/Users/Administrator/Desktop/Project Folder/ZXHand/ZXHandwritting_APP_uniapp/TUIKit/components/TUISearch/search-result/search-result-default/index.vue"]]);
  const _sfc_main$2c = /* @__PURE__ */ vue.defineComponent({
    __name: "index",
    props: {
      width: {
        type: String,
        default: "30px"
      },
      height: {
        type: String,
        default: "30px"
      },
      color: {
        type: String,
        default: "#D9D9D9"
      }
    },
    setup(__props, { expose: __expose }) {
      __expose();
      const props2 = __props;
      const __returned__ = { props: props2 };
      Object.defineProperty(__returned__, "__isScriptSetup", { enumerable: false, value: true });
      return __returned__;
    }
  });
  function _sfc_render$2b(_ctx, _cache, $props, $setup, $data, $options) {
    return vue.openBlock(), vue.createElementBlock(
      "div",
      {
        class: "tui-loading",
        style: vue.normalizeStyle({
          width: $setup.props.width,
          height: $setup.props.height,
          border: `2px solid ${$setup.props.color}`,
          borderTopColor: "transparent"
        })
      },
      null,
      4
      /* STYLE */
    );
  }
  const Loading = /* @__PURE__ */ _export_sfc(_sfc_main$2c, [["render", _sfc_render$2b], ["__scopeId", "data-v-b303d4e1"], ["__file", "C:/Users/Administrator/Desktop/Project Folder/ZXHand/ZXHandwritting_APP_uniapp/TUIKit/components/common/Loading/index.vue"]]);
  const _sfc_main$2b = /* @__PURE__ */ vue.defineComponent({
    __name: "index",
    setup(__props, { expose: __expose }) {
      __expose();
      const __returned__ = { Loading, get isPC() {
        return isPC;
      } };
      Object.defineProperty(__returned__, "__isScriptSetup", { enumerable: false, value: true });
      return __returned__;
    }
  });
  function _sfc_render$2a(_ctx, _cache, $props, $setup, $data, $options) {
    return vue.openBlock(), vue.createElementBlock(
      "div",
      {
        class: vue.normalizeClass(["search-result-loading", !$setup.isPC && "search-result-loading-h5"])
      },
      [
        vue.createVNode($setup["Loading"], {
          width: "40px",
          height: "40px"
        })
      ],
      2
      /* CLASS */
    );
  }
  const SearchResultLoading = /* @__PURE__ */ _export_sfc(_sfc_main$2b, [["render", _sfc_render$2a], ["__scopeId", "data-v-a295db57"], ["__file", "C:/Users/Administrator/Desktop/Project Folder/ZXHand/ZXHandwritting_APP_uniapp/TUIKit/components/TUISearch/search-result/search-result-loading/index.vue"]]);
  const rightIcon = "/assets/right-icon.a24fdba0.svg";
  function enableSampleTaskStatus(taskKey) {
    const tasks = zt.getData(o$2.APP, "tasks");
    if (taskKey in tasks && !tasks[taskKey]) {
      tasks[taskKey] = true;
      zt.update(o$2.APP, "tasks", tasks);
    }
  }
  const _sfc_main$2a = /* @__PURE__ */ vue.defineComponent({
    __name: "index",
    props: {
      searchType: {
        type: String,
        default: "global",
        // "global" / "conversation"
        validator(value) {
          return ["global", "conversation"].includes(value);
        }
      }
    },
    setup(__props, { expose: __expose }) {
      var _a, _b;
      __expose();
      const props2 = __props;
      const keywordList = vue.ref([]);
      const messageTypeList = vue.ref(
        (_a = searchMessageTypeDefault[props2.searchType]) == null ? void 0 : _a.value
      );
      const timePosition = vue.ref(0);
      const timePeriod = vue.ref(0);
      const keywordListMatchType = vue.ref("and");
      const currentSearchTabKey = vue.ref(
        (_b = searchMessageTypeDefault[props2.searchType]) == null ? void 0 : _b.key
      );
      const searchResult = vue.ref({});
      const searchAllMessageList = vue.ref([]);
      const searchAllMessageTotalCount = vue.ref(0);
      const currentSearchConversationID = vue.ref("");
      const searchConversationResult = vue.ref();
      const searchConversationMessageList = vue.ref([]);
      const searchConversationMessageTotalCount = vue.ref();
      const searchConversationResultGroupByDate = vue.ref([]);
      const isResultDetailShow = vue.ref(false);
      const isLoading = vue.ref(false);
      const isSearchDetailLoading = vue.ref(false);
      const isSearchDefaultShow = vue.computed(() => {
        var _a2, _b2, _c;
        if (isLoading.value) {
          return false;
        }
        if (props2.searchType === "global") {
          if (!((_a2 = keywordList == null ? void 0 : keywordList.value) == null ? void 0 : _a2.length) || ((_b2 = Object == null ? void 0 : Object.keys(searchResult.value)) == null ? void 0 : _b2.length)) {
            return false;
          } else {
            return true;
          }
        } else {
          if ((_c = searchConversationMessageList == null ? void 0 : searchConversationMessageList.value) == null ? void 0 : _c.length) {
            return false;
          } else {
            return true;
          }
        }
      });
      function onCurrentConversationIDUpdate(id) {
        props2.searchType === "conversation" && (currentSearchConversationID.value = id);
      }
      function onCurrentSearchInputValueUpdate(obj) {
        if ((obj == null ? void 0 : obj.searchType) === (props2 == null ? void 0 : props2.searchType)) {
          keywordList.value = (obj == null ? void 0 : obj.value) ? obj.value.trim().split(/\s+/) : [];
        }
      }
      function onCurrentSearchMessageTypeUpdate(typeObject) {
        var _a2, _b2, _c, _d;
        if ((typeObject == null ? void 0 : typeObject.searchType) === (props2 == null ? void 0 : props2.searchType)) {
          currentSearchTabKey.value = ((_a2 = typeObject == null ? void 0 : typeObject.value) == null ? void 0 : _a2.key) || ((_b2 = searchMessageTypeDefault[props2.searchType]) == null ? void 0 : _b2.key);
          messageTypeList.value = ((_c = typeObject == null ? void 0 : typeObject.value) == null ? void 0 : _c.value) || ((_d = searchMessageTypeDefault[props2.searchType]) == null ? void 0 : _d.value);
        }
      }
      function onCurrentSearchMessageTimeUpdate(timeObject) {
        var _a2, _b2, _c, _d;
        if ((timeObject == null ? void 0 : timeObject.searchType) === (props2 == null ? void 0 : props2.searchType)) {
          timePosition.value = (_b2 = (_a2 = timeObject == null ? void 0 : timeObject.value) == null ? void 0 : _a2.value) == null ? void 0 : _b2.timePosition;
          timePeriod.value = (_d = (_c = timeObject == null ? void 0 : timeObject.value) == null ? void 0 : _c.value) == null ? void 0 : _d.timePeriod;
        }
      }
      vue.onMounted(() => {
        zt.watch(o$2.CONV, {
          currentConversationID: onCurrentConversationIDUpdate
        });
        zt.watch(o$2.SEARCH, {
          currentSearchInputValue: onCurrentSearchInputValueUpdate,
          currentSearchMessageType: onCurrentSearchMessageTypeUpdate,
          currentSearchMessageTime: onCurrentSearchMessageTimeUpdate
        });
      });
      vue.onUnmounted(() => {
        zt.unwatch(o$2.CONV, {
          currentConversationID: onCurrentConversationIDUpdate
        });
        zt.unwatch(o$2.SEARCH, {
          currentSearchInputValue: onCurrentSearchInputValueUpdate,
          currentSearchMessageType: onCurrentSearchMessageTypeUpdate,
          currentSearchMessageTime: onCurrentSearchMessageTimeUpdate
        });
      });
      const setMessageSearchResultList = (option) => {
        var _a2;
        searchCloudMessages(
          {
            keywordList: ((_a2 = keywordList == null ? void 0 : keywordList.value) == null ? void 0 : _a2.length) ? keywordList.value : void 0,
            messageTypeList: typeof messageTypeList.value === "string" ? [messageTypeList.value] : messageTypeList.value,
            timePosition: timePosition.value,
            timePeriod: timePeriod.value,
            conversationID: (option == null ? void 0 : option.conversationID) || void 0,
            cursor: (option == null ? void 0 : option.cursor) || void 0,
            keywordListMatchType: keywordListMatchType.value
          }
        ).then((res) => {
          var _a3, _b2, _c, _d, _e3, _f2, _g2, _h2, _i3, _j2;
          enableSampleTaskStatus("searchCloudMessage");
          if (!(option == null ? void 0 : option.conversationID)) {
            (option == null ? void 0 : option.cursor) ? searchAllMessageList.value = [
              ...searchAllMessageList.value,
              ...res.data.searchResultList
            ] : searchAllMessageList.value = (_a3 = res == null ? void 0 : res.data) == null ? void 0 : _a3.searchResultList;
            searchAllMessageTotalCount.value = (_b2 = res == null ? void 0 : res.data) == null ? void 0 : _b2.totalCount;
            const key = currentSearchTabKey.value === "all" ? "allMessage" : currentSearchTabKey.value;
            if (((_c = searchAllMessageList == null ? void 0 : searchAllMessageList.value) == null ? void 0 : _c.length) && currentSearchTabKey.value !== "contact" && currentSearchTabKey.value !== "group") {
              searchResult.value = Object.assign({}, searchResult.value, {
                [key]: {
                  key,
                  label: searchMessageTypeList[key].label,
                  list: currentSearchTabKey.value === "all" ? (_d = searchAllMessageList == null ? void 0 : searchAllMessageList.value) == null ? void 0 : _d.slice(0, 3) : searchAllMessageList == null ? void 0 : searchAllMessageList.value,
                  cursor: ((_e3 = res == null ? void 0 : res.data) == null ? void 0 : _e3.cursor) || null
                }
              });
            } else {
              searchResult == null ? true : delete searchResult.value[key];
            }
          } else {
            searchConversationResult.value = res == null ? void 0 : res.data;
            (option == null ? void 0 : option.cursor) ? searchConversationMessageList.value = [
              ...searchConversationMessageList.value,
              ...(_g2 = (_f2 = res == null ? void 0 : res.data) == null ? void 0 : _f2.searchResultList[0]) == null ? void 0 : _g2.messageList
            ] : searchConversationMessageList.value = (_i3 = (_h2 = res == null ? void 0 : res.data) == null ? void 0 : _h2.searchResultList[0]) == null ? void 0 : _i3.messageList;
            searchConversationMessageTotalCount.value = (_j2 = res == null ? void 0 : res.data) == null ? void 0 : _j2.totalCount;
            if ((props2 == null ? void 0 : props2.searchType) === "conversation" && (currentSearchTabKey.value === "fileMessage" || currentSearchTabKey.value === "imageMessage")) {
              searchConversationResultGroupByDate.value = groupResultListByDate(
                searchConversationMessageList.value
              );
            } else {
              searchConversationResultGroupByDate.value = [];
            }
          }
          isLoading.value = false;
          isSearchDetailLoading.value = false;
        });
      };
      const setMessageSearchResultListDebounce = debounce$1(setMessageSearchResultList, 500);
      const resetSearchResult = () => {
        searchResult.value = {};
        searchConversationResult.value = {};
        searchConversationMessageList.value = [];
        searchConversationResultGroupByDate.value = [];
      };
      vue.watch(
        () => [keywordList.value, currentSearchTabKey.value, timePosition.value, timePeriod.value],
        (newValue, oldValue) => {
          var _a2, _b2, _c;
          if (newValue === oldValue) {
            return;
          }
          if (!((_a2 = keywordList == null ? void 0 : keywordList.value) == null ? void 0 : _a2.length) && (props2 == null ? void 0 : props2.searchType) === "global") {
            resetSearchResult();
            return;
          }
          isLoading.value = true;
          if (props2.searchType === "conversation") {
            resetSearchResult();
            setMessageSearchResultList({
              conversationID: currentSearchConversationID.value
            });
          } else {
            if (oldValue && oldValue[1] === "all" && newValue && newValue[1] === "allMessage") {
              ((_b2 = searchResult == null ? void 0 : searchResult.value["allMessage"]) == null ? void 0 : _b2.list) && (searchResult.value["allMessage"].list = searchAllMessageList == null ? void 0 : searchAllMessageList.value);
              (_c = Object == null ? void 0 : Object.keys(searchResult == null ? void 0 : searchResult.value)) == null ? void 0 : _c.forEach((key) => {
                if (key !== "allMessage") {
                  searchResult == null ? true : delete searchResult.value[key];
                }
              });
              isLoading.value = false;
              return;
            } else {
              isResultDetailShow.value = false;
              resetSearchResult();
            }
            setMessageSearchResultListDebounce();
          }
        },
        { immediate: true }
      );
      const getMoreResult = (result) => {
        if (currentSearchTabKey.value === "all") {
          zt.update(o$2.SEARCH, "currentSearchMessageType", {
            value: searchMessageTypeList[result.key],
            searchType: props2.searchType
          });
        } else {
          setMessageSearchResultList({ cursor: (result == null ? void 0 : result.cursor) || void 0 });
        }
      };
      const getMoreResultInConversation = () => {
        var _a2;
        setMessageSearchResultList({
          cursor: (_a2 = searchConversationResult == null ? void 0 : searchConversationResult.value) == null ? void 0 : _a2.cursor,
          conversationID: currentSearchConversationID == null ? void 0 : currentSearchConversationID.value
        });
      };
      const showResultDetail = (isShow, targetType, targetResult) => {
        var _a2;
        isResultDetailShow.value = isShow;
        if (targetType) {
          zt.update(o$2.SEARCH, "currentSearchMessageType", {
            value: searchMessageTypeList[targetType],
            searchType: props2.searchType
          });
        }
        currentSearchConversationID.value = ((_a2 = targetResult == null ? void 0 : targetResult.conversation) == null ? void 0 : _a2.conversationID) || "";
        searchConversationMessageTotalCount.value = targetResult == null ? void 0 : targetResult.messageCount;
        if (targetResult) {
          isSearchDetailLoading.value = true;
          setMessageSearchResultListDebounce({
            conversationID: currentSearchConversationID.value
          });
        }
      };
      const generateListItemClass = (item) => {
        var _a2;
        return currentSearchConversationID.value === ((_a2 = item == null ? void 0 : item.conversation) == null ? void 0 : _a2.conversationID) ? ["list-item", "list-item-selected"] : ["list-item"];
      };
      const generateResultItemDisplayType = () => {
        if (props2.searchType === "conversation" && currentSearchTabKey.value === "fileMessage") {
          return "file";
        } else if (props2.searchType === "conversation" && currentSearchTabKey.value === "imageMessage") {
          return "image";
        } else if (isPC) {
          return "bubble";
        } else {
          return "info";
        }
      };
      const groupResultListByDate = (messageList) => {
        var _a2, _b2, _c, _d;
        const result = [];
        if (!(messageList == null ? void 0 : messageList.length)) {
          return result;
        } else if ((messageList == null ? void 0 : messageList.length) === 1) {
          result.push({ date: generateSearchResultYMD((_a2 = messageList[0]) == null ? void 0 : _a2.time), list: messageList });
          return result;
        }
        let prevYMD = "";
        let currYMD = "";
        for (let i2 = 0; i2 < (messageList == null ? void 0 : messageList.length); i2++) {
          currYMD = generateSearchResultYMD((_b2 = messageList[i2]) == null ? void 0 : _b2.time);
          if (prevYMD !== currYMD) {
            result.push({ date: currYMD, list: [messageList[i2]] });
          } else {
            (_d = (_c = result[(result == null ? void 0 : result.length) - 1]) == null ? void 0 : _c.list) == null ? void 0 : _d.push(messageList[i2]);
          }
          prevYMD = currYMD;
        }
        return result;
      };
      const navigateToChatPosition = (message2) => {
        if (props2.searchType === "global") {
          zt.update(o$2.SEARCH, "currentSearchingStatus", {
            isSearching: false,
            searchType: props2.searchType
          });
          Wt.switchConversation(message2 == null ? void 0 : message2.conversationID).then(() => {
            zt.update(o$2.CHAT, "messageSource", message2);
            isUniFrameWork && (i == null ? void 0 : i.navigateTo({
              url: "/TUIKit/components/TUIChat/index"
            }));
          });
        } else if (props2.searchType === "conversation") {
          zt.update(o$2.SEARCH, "isShowInConversationSearch", false);
          zt.update(o$2.CHAT, "messageSource", message2);
          isUniFrameWork && (i == null ? void 0 : i.navigateBack());
        }
      };
      const generateVueRenderKey = (value) => {
        return `${currentSearchTabKey}-${value}`;
      };
      const __returned__ = { props: props2, keywordList, messageTypeList, timePosition, timePeriod, keywordListMatchType, currentSearchTabKey, searchResult, searchAllMessageList, searchAllMessageTotalCount, currentSearchConversationID, searchConversationResult, searchConversationMessageList, searchConversationMessageTotalCount, searchConversationResultGroupByDate, isResultDetailShow, isLoading, isSearchDetailLoading, isSearchDefaultShow, onCurrentConversationIDUpdate, onCurrentSearchInputValueUpdate, onCurrentSearchMessageTypeUpdate, onCurrentSearchMessageTimeUpdate, setMessageSearchResultList, setMessageSearchResultListDebounce, resetSearchResult, getMoreResult, getMoreResultInConversation, showResultDetail, generateListItemClass, generateResultItemDisplayType, groupResultListByDate, navigateToChatPosition, generateVueRenderKey, get TUITranslateService() {
        return Jt;
      }, SearchResultItem, SearchResultDefault, SearchResultLoading, get searchMessageTypeList() {
        return searchMessageTypeList;
      }, Icon: Icon$1, get searchIcon() {
        return searchIcon;
      }, get enterIcon() {
        return rightIcon;
      }, get enterConversation() {
        return enterConversation$1;
      }, get isPC() {
        return isPC;
      } };
      Object.defineProperty(__returned__, "__isScriptSetup", { enumerable: false, value: true });
      return __returned__;
    }
  });
  function _sfc_render$29(_ctx, _cache, $props, $setup, $data, $options) {
    return $setup.isLoading ? (vue.openBlock(), vue.createBlock($setup["SearchResultLoading"], {
      key: 0,
      class: vue.normalizeClass(["search-result-loading", !$setup.isPC && "search-result-loading-h5"])
    }, null, 8, ["class"])) : $setup.isSearchDefaultShow ? (vue.openBlock(), vue.createBlock($setup["SearchResultDefault"], {
      key: 1,
      class: vue.normalizeClass(["search-result-default", !$setup.isPC && "search-result-default-h5"])
    }, null, 8, ["class"])) : (vue.openBlock(), vue.createElementBlock(
      "div",
      {
        key: 2,
        class: vue.normalizeClass([
          "tui-search-result",
          !$setup.isPC && "tui-search-result-h5",
          $setup.isPC && $setup.isResultDetailShow && "tui-search-result-with-border"
        ])
      },
      [
        $setup.props.searchType !== "conversation" && ($setup.isPC || !$setup.isResultDetailShow) ? (vue.openBlock(), vue.createElementBlock("div", {
          key: 0,
          class: "tui-search-result-main"
        }, [
          vue.createElementVNode("div", { class: "tui-search-result-list" }, [
            (vue.openBlock(true), vue.createElementBlock(
              vue.Fragment,
              null,
              vue.renderList($setup.searchResult, (result) => {
                return vue.openBlock(), vue.createElementBlock("div", {
                  key: result.key,
                  class: "tui-search-result-list-item"
                }, [
                  $setup.props.searchType === "global" ? (vue.openBlock(), vue.createElementBlock(
                    "div",
                    {
                      key: 0,
                      class: "header"
                    },
                    vue.toDisplayString($setup.TUITranslateService.t(`TUISearch.${result.label}`)),
                    1
                    /* TEXT */
                  )) : vue.createCommentVNode("v-if", true),
                  vue.createElementVNode("div", { class: "list" }, [
                    (vue.openBlock(true), vue.createElementBlock(
                      vue.Fragment,
                      null,
                      vue.renderList(result.list, (item) => {
                        return vue.openBlock(), vue.createElementBlock(
                          "div",
                          {
                            key: item.conversation.conversationID,
                            class: vue.normalizeClass([$setup.generateListItemClass(item)])
                          },
                          [
                            result.key === "contact" || result.key === "group" || item.conversation ? (vue.openBlock(), vue.createBlock($setup["SearchResultItem"], {
                              key: 0,
                              listItem: item,
                              type: result.key,
                              displayType: "info",
                              keywordList: $setup.keywordList,
                              onShowResultDetail: $setup.showResultDetail,
                              onNavigateToChatPosition: $setup.navigateToChatPosition
                            }, null, 8, ["listItem", "type", "keywordList"])) : vue.createCommentVNode("v-if", true)
                          ],
                          2
                          /* CLASS */
                        );
                      }),
                      128
                      /* KEYED_FRAGMENT */
                    ))
                  ]),
                  $setup.currentSearchTabKey === "all" || result.cursor ? (vue.openBlock(), vue.createElementBlock("div", {
                    key: 1,
                    class: "more",
                    onClick: ($event) => $setup.getMoreResult(result)
                  }, [
                    vue.createVNode($setup["Icon"], {
                      class: "more-icon",
                      file: $setup.searchIcon,
                      width: "12px",
                      height: "12px"
                    }, null, 8, ["file"]),
                    vue.createElementVNode("div", { class: "more-text" }, [
                      vue.createElementVNode(
                        "span",
                        null,
                        vue.toDisplayString($setup.TUITranslateService.t("TUISearch.查看更多")),
                        1
                        /* TEXT */
                      ),
                      vue.createElementVNode(
                        "span",
                        null,
                        vue.toDisplayString($setup.TUITranslateService.t(`TUISearch.${result.label}`)),
                        1
                        /* TEXT */
                      )
                    ])
                  ], 8, ["onClick"])) : vue.createCommentVNode("v-if", true)
                ]);
              }),
              128
              /* KEYED_FRAGMENT */
            ))
          ])
        ])) : vue.createCommentVNode("v-if", true),
        $setup.isResultDetailShow || $setup.props.searchType === "conversation" ? (vue.openBlock(), vue.createElementBlock(
          "div",
          {
            key: 1,
            class: vue.normalizeClass([
              "tui-search-result-detail",
              $setup.props.searchType === "conversation" && "tui-search-result-in-conversation"
            ])
          },
          [
            $setup.isSearchDetailLoading ? (vue.openBlock(), vue.createBlock($setup["SearchResultLoading"], {
              key: 0,
              class: vue.normalizeClass(["search-result-loading", !$setup.isPC && "search-result-loading-h5"])
            }, null, 8, ["class"])) : vue.createCommentVNode("v-if", true),
            !$setup.isSearchDetailLoading && $setup.isResultDetailShow && $setup.props.searchType !== "conversation" ? (vue.openBlock(), vue.createElementBlock("div", {
              key: 1,
              class: "tui-search-message-header"
            }, [
              vue.createElementVNode("div", { class: "header-content" }, [
                vue.createElementVNode("div", { class: "header-content-count normal" }, [
                  vue.createElementVNode(
                    "span",
                    null,
                    vue.toDisplayString($setup.searchConversationMessageTotalCount),
                    1
                    /* TEXT */
                  ),
                  vue.createElementVNode(
                    "span",
                    null,
                    vue.toDisplayString($setup.TUITranslateService.t("TUISearch.条与")),
                    1
                    /* TEXT */
                  )
                ]),
                vue.createElementVNode("div", { class: "header-content-keyword" }, [
                  (vue.openBlock(true), vue.createElementBlock(
                    vue.Fragment,
                    null,
                    vue.renderList($setup.keywordList, (keyword, index2) => {
                      return vue.openBlock(), vue.createElementBlock("span", { key: index2 }, [
                        vue.createElementVNode("span", { class: "normal" }, '"'),
                        vue.createElementVNode(
                          "span",
                          { class: "highlight" },
                          vue.toDisplayString(keyword),
                          1
                          /* TEXT */
                        ),
                        vue.createElementVNode("span", { class: "normal" }, '"')
                      ]);
                    }),
                    128
                    /* KEYED_FRAGMENT */
                  ))
                ]),
                vue.createElementVNode("div", { class: "header-content-type normal" }, [
                  vue.createElementVNode(
                    "span",
                    null,
                    vue.toDisplayString($setup.TUITranslateService.t("TUISearch.相关的")),
                    1
                    /* TEXT */
                  ),
                  vue.createElementVNode(
                    "span",
                    null,
                    vue.toDisplayString($setup.TUITranslateService.t(
                      `TUISearch.${$setup.currentSearchTabKey === "allMessage" ? "结果" : $setup.searchMessageTypeList[$setup.currentSearchTabKey].label}`
                    )),
                    1
                    /* TEXT */
                  )
                ])
              ]),
              vue.createElementVNode("div", {
                class: "header-enter",
                onClick: _cache[0] || (_cache[0] = ($event) => $setup.enterConversation({ conversationID: $setup.currentSearchConversationID }))
              }, [
                vue.createElementVNode(
                  "span",
                  null,
                  vue.toDisplayString($setup.TUITranslateService.t("TUISearch.进入聊天")),
                  1
                  /* TEXT */
                ),
                vue.createVNode($setup["Icon"], {
                  class: "enter-icon",
                  file: $setup.enterIcon,
                  width: "14px",
                  height: "14px"
                }, null, 8, ["file"])
              ])
            ])) : vue.createCommentVNode("v-if", true),
            !$setup.isSearchDetailLoading && $setup.searchConversationMessageList && $setup.searchConversationMessageList[0] ? (vue.openBlock(), vue.createElementBlock("div", {
              key: 2,
              class: "tui-search-message-list"
            }, [
              $setup.props.searchType === "global" || $setup.currentSearchTabKey !== "imageMessage" && $setup.currentSearchTabKey !== "fileMessage" ? (vue.openBlock(true), vue.createElementBlock(
                vue.Fragment,
                { key: 0 },
                vue.renderList($setup.searchConversationMessageList, (item) => {
                  return vue.openBlock(), vue.createElementBlock("div", {
                    key: $setup.generateVueRenderKey(item.ID),
                    class: vue.normalizeClass(["list-item"])
                  }, [
                    vue.createVNode($setup["SearchResultItem"], {
                      listItem: item,
                      listItemContent: item.getMessageContent(),
                      type: $setup.currentSearchTabKey,
                      displayType: $setup.generateResultItemDisplayType(),
                      keywordList: $setup.keywordList,
                      onShowResultDetail: $setup.showResultDetail,
                      onNavigateToChatPosition: $setup.navigateToChatPosition
                    }, null, 8, ["listItem", "listItemContent", "type", "displayType", "keywordList"])
                  ]);
                }),
                128
                /* KEYED_FRAGMENT */
              )) : (vue.openBlock(), vue.createElementBlock(
                vue.Fragment,
                { key: 1 },
                [
                  vue.createCommentVNode(" Search within a conversation - messages such as files, pictures, and videos need to be displayed in groups according to time "),
                  (vue.openBlock(true), vue.createElementBlock(
                    vue.Fragment,
                    null,
                    vue.renderList($setup.searchConversationResultGroupByDate, (group) => {
                      return vue.openBlock(), vue.createElementBlock(
                        "div",
                        {
                          key: $setup.generateVueRenderKey(group.date),
                          class: vue.normalizeClass(["list-group", $setup.currentSearchTabKey === "fileMessage" ? "list-group-file" : "list-group-image"])
                        },
                        [
                          vue.createElementVNode(
                            "div",
                            {
                              class: vue.normalizeClass(["list-group-date"])
                            },
                            vue.toDisplayString(group.date),
                            1
                            /* TEXT */
                          ),
                          (vue.openBlock(true), vue.createElementBlock(
                            vue.Fragment,
                            null,
                            vue.renderList(group.list, (item) => {
                              return vue.openBlock(), vue.createElementBlock("div", {
                                key: $setup.generateVueRenderKey(item.ID),
                                class: vue.normalizeClass(["list-group-item"])
                              }, [
                                vue.createVNode($setup["SearchResultItem"], {
                                  listItem: item,
                                  listItemContent: item.getMessageContent(),
                                  type: $setup.currentSearchTabKey,
                                  displayType: $setup.generateResultItemDisplayType(),
                                  keywordList: $setup.keywordList,
                                  onShowResultDetail: $setup.showResultDetail,
                                  onNavigateToChatPosition: $setup.navigateToChatPosition
                                }, null, 8, ["listItem", "listItemContent", "type", "displayType", "keywordList"])
                              ]);
                            }),
                            128
                            /* KEYED_FRAGMENT */
                          ))
                        ],
                        2
                        /* CLASS */
                      );
                    }),
                    128
                    /* KEYED_FRAGMENT */
                  ))
                ],
                64
                /* STABLE_FRAGMENT */
              )),
              $setup.searchConversationResult && $setup.searchConversationResult.cursor ? (vue.openBlock(), vue.createElementBlock("div", {
                key: 2,
                class: "more",
                onClick: $setup.getMoreResultInConversation
              }, [
                vue.createVNode($setup["Icon"], {
                  class: "more-icon",
                  file: $setup.searchIcon,
                  width: "12px",
                  height: "12px"
                }, null, 8, ["file"]),
                vue.createElementVNode(
                  "div",
                  { class: "more-text" },
                  vue.toDisplayString($setup.TUITranslateService.t("TUISearch.查看更多历史记录")),
                  1
                  /* TEXT */
                )
              ])) : vue.createCommentVNode("v-if", true)
            ])) : vue.createCommentVNode("v-if", true)
          ],
          2
          /* CLASS */
        )) : vue.createCommentVNode("v-if", true)
      ],
      2
      /* CLASS */
    ));
  }
  const SearchResult = /* @__PURE__ */ _export_sfc(_sfc_main$2a, [["render", _sfc_render$29], ["__scopeId", "data-v-90555b56"], ["__file", "C:/Users/Administrator/Desktop/Project Folder/ZXHand/ZXHandwritting_APP_uniapp/TUIKit/components/TUISearch/search-result/index.vue"]]);
  const searchMoreSVG = "/assets/search-more.7ecab7ad.svg";
  const _sfc_main$29 = /* @__PURE__ */ vue.defineComponent({
    __name: "index",
    props: {
      searchType: {
        type: String,
        default: "global",
        // "global" / "conversation"
        validator(value) {
          return ["global", "conversation"].includes(value);
        }
      }
    },
    setup(__props, { expose: __expose }) {
      __expose();
      const props2 = __props;
      const searchMoreRef = vue.ref();
      const isListShow = vue.ref(false);
      const toggleMore = () => {
        isListShow.value = !isListShow.value;
        if (!isUniFrameWork && isListShow.value) {
          R.listen({
            domRefs: searchMoreRef.value,
            handler: closeSearchMore
          });
        }
      };
      const extensionList = vue.ref([]);
      const handleMenu = (item) => {
        var _a;
        const { listener = { onClicked: () => {
        } } } = item;
        (_a = listener == null ? void 0 : listener.onClicked) == null ? void 0 : _a.call(listener, item);
        toggleMore();
      };
      const closeSearchMore = () => {
        isListShow.value = false;
      };
      vue.onMounted(() => {
        extensionList.value = [
          ...R$1.getExtensionList(E$1.TUISearch.EXTENSION.SEARCH_MORE.EXT_ID)
        ];
        R$1.callService({
          serviceName: E$1.TUIConversation.SERVICE.NAME,
          method: E$1.TUIConversation.SERVICE.METHOD.HIDE_CONVERSATION_HEADER,
          params: {}
        });
      });
      vue.watch(
        () => isListShow.value,
        () => {
          if (isListShow.value) {
            zt.update(o$2.SEARCH, "currentSearchingStatus", {
              isSearching: false,
              searchType: props2.searchType
            });
          }
        }
      );
      const __returned__ = { props: props2, searchMoreRef, isListShow, toggleMore, extensionList, handleMenu, closeSearchMore, Icon: Icon$1, get searchMoreSVG() {
        return searchMoreSVG;
      }, get isPC() {
        return isPC;
      } };
      Object.defineProperty(__returned__, "__isScriptSetup", { enumerable: false, value: true });
      return __returned__;
    }
  });
  function _sfc_render$28(_ctx, _cache, $props, $setup, $data, $options) {
    return vue.openBlock(), vue.createElementBlock(
      "div",
      {
        ref: "searchMoreRef",
        class: vue.normalizeClass(["tui-search-more", !$setup.isPC && "tui-search-more-h5"])
      },
      [
        vue.createElementVNode("div", {
          class: "more",
          onClick: _cache[0] || (_cache[0] = ($event) => $setup.toggleMore())
        }, [
          vue.createVNode($setup["Icon"], {
            class: "more-icon",
            file: $setup.searchMoreSVG,
            width: $setup.isPC ? "28px" : "34px",
            height: $setup.isPC ? "28px" : "34px"
          }, null, 8, ["file", "width", "height"])
        ]),
        $setup.isListShow ? (vue.openBlock(), vue.createElementBlock("ul", {
          key: 0,
          class: "tui-search-more-list"
        }, [
          (vue.openBlock(true), vue.createElementBlock(
            vue.Fragment,
            null,
            vue.renderList($setup.extensionList, (extension, index2) => {
              return vue.openBlock(), vue.createElementBlock("li", {
                key: index2,
                class: "list-item",
                onClick: ($event) => $setup.handleMenu(extension)
              }, [
                extension.icon ? (vue.openBlock(), vue.createBlock($setup["Icon"], {
                  key: 0,
                  class: "list-item-icon",
                  file: extension.icon
                }, null, 8, ["file"])) : vue.createCommentVNode("v-if", true),
                vue.createElementVNode(
                  "div",
                  { class: "list-item-title" },
                  vue.toDisplayString(extension.text),
                  1
                  /* TEXT */
                )
              ], 8, ["onClick"]);
            }),
            128
            /* KEYED_FRAGMENT */
          ))
        ])) : vue.createCommentVNode("v-if", true)
      ],
      2
      /* CLASS */
    );
  }
  const SearchMore = /* @__PURE__ */ _export_sfc(_sfc_main$29, [["render", _sfc_render$28], ["__scopeId", "data-v-ea46662f"], ["__file", "C:/Users/Administrator/Desktop/Project Folder/ZXHand/ZXHandwritting_APP_uniapp/TUIKit/components/TUISearch/search-more/index.vue"]]);
  const _sfc_main$28 = /* @__PURE__ */ vue.defineComponent({
    __name: "index",
    props: {
      searchType: { type: String, required: false, default: () => {
        return isUniFrameWork ? "conversation" : "global";
      } }
    },
    setup(__props, { expose: __expose }) {
      __expose();
      const props2 = __props;
      const globalSearchRef = vue.ref();
      const currentConversationID = vue.ref("");
      const searchingStatus = vue.ref(false);
      const isShowInConversationSearch = vue.ref(isUniFrameWork);
      const isFullScreen = vue.computed(
        () => !isPC && (props2.searchType === "global" && searchingStatus.value || props2.searchType === "conversation" && isShowInConversationSearch.value)
      );
      const initSearchValue = (searchType) => {
        zt.update(o$2.SEARCH, "currentSearchInputValue", {
          value: "",
          searchType
        });
        zt.update(o$2.SEARCH, "currentSearchMessageType", {
          value: searchMessageTypeDefault[searchType],
          searchType
        });
        zt.update(o$2.SEARCH, "currentSearchMessageTime", {
          value: searchMessageTimeDefault,
          searchType
        });
      };
      function onCurrentConversationIDUpdate(conversationID) {
        if (!isUniFrameWork && currentConversationID.value !== conversationID) {
          closeInConversationSearch();
        }
        currentConversationID.value = conversationID;
      }
      function onCurrentSearchingStatusChange(value) {
        var _a, _b;
        if ((value == null ? void 0 : value.searchType) === props2.searchType) {
          searchingStatus.value = value == null ? void 0 : value.isSearching;
          if ((value == null ? void 0 : value.searchType) === "global" && globalSearchRef.value) {
            if (isPC && value.isSearching) {
              R.listen({
                domRefs: globalSearchRef.value,
                handler: closeGlobalSearch
              });
            }
          }
          if ((value == null ? void 0 : value.searchType) === "global" && isUniFrameWork) {
            value.isSearching ? (_a = i == null ? void 0 : i.hideTabBar()) == null ? void 0 : _a.catch(() => {
            }) : (_b = i == null ? void 0 : i.showTabBar()) == null ? void 0 : _b.catch(() => {
            });
          }
        }
      }
      function onIsShowInConversationSearchChange(value) {
        isShowInConversationSearch.value = value ? true : false;
        isShowInConversationSearch.value && initSearchValue(props2.searchType);
      }
      vue.onMounted(() => {
        ["global", "conversation"].forEach((type) => {
          initSearchValue(type);
        });
        zt.watch(o$2.CONV, {
          currentConversationID: onCurrentConversationIDUpdate
        });
        zt.watch(o$2.SEARCH, {
          currentSearchingStatus: onCurrentSearchingStatusChange,
          isShowInConversationSearch: onIsShowInConversationSearchChange
        });
      });
      vue.onUnmounted(() => {
        zt.unwatch(o$2.CONV, {
          currentConversationID: onCurrentConversationIDUpdate
        });
        zt.unwatch(o$2.SEARCH, {
          currentSearchingStatus: onCurrentSearchingStatusChange,
          isShowInConversationSearch: onIsShowInConversationSearchChange
        });
      });
      function closeGlobalSearch() {
        zt.update(o$2.SEARCH, "currentSearchingStatus", {
          isSearching: false,
          searchType: props2.searchType
        });
      }
      function closeInConversationSearch() {
        zt.update(o$2.SEARCH, "isShowInConversationSearch", false);
      }
      const __returned__ = { props: props2, globalSearchRef, currentConversationID, searchingStatus, isShowInConversationSearch, isFullScreen, initSearchValue, onCurrentConversationIDUpdate, onCurrentSearchingStatusChange, onIsShowInConversationSearchChange, closeGlobalSearch, closeInConversationSearch, SearchInput, SearchContainer, SearchResult, SearchMore, get isPC() {
        return isPC;
      }, get isUniFrameWork() {
        return isUniFrameWork;
      } };
      Object.defineProperty(__returned__, "__isScriptSetup", { enumerable: false, value: true });
      return __returned__;
    }
  });
  function _sfc_render$27(_ctx, _cache, $props, $setup, $data, $options) {
    return $props.searchType === "global" || ($props.searchType === "conversation" || !$props.searchType && $setup.isUniFrameWork) && $setup.isShowInConversationSearch ? (vue.openBlock(), vue.createElementBlock(
      "div",
      {
        key: 0,
        class: vue.normalizeClass([
          "tui-search",
          !$setup.isPC && "tui-search-h5",
          `tui-search-main-${$props.searchType ? $props.searchType : "conversation"}`,
          $setup.isFullScreen && "tui-search-h5-full-screen"
        ])
      },
      [
        $props.searchType === "global" ? (vue.openBlock(), vue.createElementBlock(
          "div",
          {
            key: 0,
            ref: "globalSearchRef",
            class: vue.normalizeClass(["tui-search-global", !$setup.isPC && "tui-search-h5-global"])
          },
          [
            vue.createElementVNode(
              "div",
              {
                class: vue.normalizeClass([
                  "tui-search-global-header",
                  !$setup.isPC && "tui-search-h5-global-header"
                ])
              },
              [
                vue.createVNode($setup["SearchInput"], {
                  class: "search-input",
                  searchType: $props.searchType
                }, null, 8, ["searchType"]),
                $setup.isPC || !$setup.searchingStatus ? (vue.openBlock(), vue.createBlock($setup["SearchMore"], {
                  key: 0,
                  class: "search-more",
                  searchType: $props.searchType
                }, null, 8, ["searchType"])) : vue.createCommentVNode("v-if", true)
              ],
              2
              /* CLASS */
            ),
            $setup.searchingStatus ? (vue.openBlock(), vue.createBlock($setup["SearchContainer"], {
              key: 0,
              class: "search-container",
              popupPosition: "bottom",
              searchType: $props.searchType
            }, {
              result: vue.withCtx(() => [
                vue.createVNode($setup["SearchResult"], {
                  class: "search-result",
                  searchType: $props.searchType
                }, null, 8, ["searchType"])
              ]),
              _: 1
              /* STABLE */
            }, 8, ["searchType"])) : vue.createCommentVNode("v-if", true)
          ],
          2
          /* CLASS */
        )) : $props.searchType === "conversation" && $setup.isShowInConversationSearch || $setup.isUniFrameWork ? (vue.openBlock(), vue.createElementBlock(
          "div",
          {
            key: 1,
            class: vue.normalizeClass([
              "tui-search-conversation",
              !$setup.isPC && "tui-search-h5-conversation"
            ])
          },
          [
            vue.createVNode($setup["SearchContainer"], {
              class: "search-container",
              popupPosition: "aside",
              searchType: $props.searchType ? $props.searchType : "conversation",
              onCloseInConversationSearch: $setup.closeInConversationSearch
            }, {
              input: vue.withCtx(() => [
                vue.createVNode($setup["SearchInput"], {
                  searchType: $props.searchType ? $props.searchType : "conversation"
                }, null, 8, ["searchType"])
              ]),
              result: vue.withCtx(() => [
                vue.createVNode($setup["SearchResult"], {
                  class: "search-result",
                  searchType: $props.searchType ? $props.searchType : "conversation"
                }, null, 8, ["searchType"])
              ]),
              _: 1
              /* STABLE */
            }, 8, ["searchType"])
          ],
          2
          /* CLASS */
        )) : vue.createCommentVNode("v-if", true)
      ],
      2
      /* CLASS */
    )) : vue.createCommentVNode("v-if", true);
  }
  const TUISearch$3 = /* @__PURE__ */ _export_sfc(_sfc_main$28, [["render", _sfc_render$27], ["__scopeId", "data-v-fdde69b1"], ["__file", "C:/Users/Administrator/Desktop/Project Folder/ZXHand/ZXHandwritting_APP_uniapp/TUIKit/components/TUISearch/index.vue"]]);
  const _sfc_main$27 = /* @__PURE__ */ vue.defineComponent({
    __name: "index",
    props: {
      url: { type: String, required: true, default: "https://web.sdk.qcloud.com/component/TUIKit/assets/avatar_21.png" },
      size: { type: String, required: false, default: "36px" },
      borderRadius: { type: String, required: false, default: "5px" },
      useSkeletonAnimation: { type: Boolean, required: false, default: false }
    },
    emits: ["onLoad", "onError"],
    setup(__props, { expose: __expose, emit: __emit }) {
      __expose();
      const defaultAvatarUrl = vue.ref(
        "https://web.sdk.qcloud.com/component/TUIKit/assets/avatar_21.png"
      );
      const emits2 = __emit;
      const props2 = __props;
      const {
        size: avatarSize,
        url: avatarImageUrl,
        borderRadius: avatarBorderRadius,
        useSkeletonAnimation: useAvatarSkeletonAnimation
      } = vue.toRefs(props2);
      let reloadAvatarTime = 0;
      const isImgLoaded = vue.ref(false);
      const loadErrorInUniapp = vue.ref(false);
      function avatarLoadSuccess(e2) {
        isImgLoaded.value = true;
        emits2("onLoad", e2);
      }
      function avatarLoadFailed(e2) {
        reloadAvatarTime += 1;
        if (reloadAvatarTime > 3) {
          return;
        }
        if (isUniFrameWork) {
          loadErrorInUniapp.value = true;
        } else {
          e2.currentTarget.src = defaultAvatarUrl.value;
        }
        emits2("onError", e2);
      }
      const __returned__ = { defaultAvatarUrl, emits: emits2, props: props2, avatarSize, avatarImageUrl, avatarBorderRadius, useAvatarSkeletonAnimation, get reloadAvatarTime() {
        return reloadAvatarTime;
      }, set reloadAvatarTime(v2) {
        reloadAvatarTime = v2;
      }, isImgLoaded, loadErrorInUniapp, avatarLoadSuccess, avatarLoadFailed, get isUniFrameWork() {
        return isUniFrameWork;
      } };
      Object.defineProperty(__returned__, "__isScriptSetup", { enumerable: false, value: true });
      return __returned__;
    }
  });
  function _sfc_render$26(_ctx, _cache, $props, $setup, $data, $options) {
    return vue.openBlock(), vue.createElementBlock(
      "div",
      {
        class: "avatar-container",
        style: vue.normalizeStyle({
          width: "44px",
          height: "44px",
          borderRadius: $setup.avatarBorderRadius
        })
      },
      [
        $setup.isUniFrameWork ? (vue.openBlock(), vue.createElementBlock(
          vue.Fragment,
          { key: 0 },
          [
            !$setup.loadErrorInUniapp ? (vue.openBlock(), vue.createElementBlock("image", {
              key: 0,
              class: "avatar-image",
              src: $setup.avatarImageUrl || $setup.defaultAvatarUrl,
              onLoad: $setup.avatarLoadSuccess,
              onError: $setup.avatarLoadFailed
            }, null, 40, ["src"])) : (vue.openBlock(), vue.createElementBlock("image", {
              key: 1,
              class: "avatar-image",
              src: $setup.defaultAvatarUrl,
              onLoad: $setup.avatarLoadSuccess,
              onError: $setup.avatarLoadFailed
            }, null, 40, ["src"]))
          ],
          64
          /* STABLE_FRAGMENT */
        )) : (vue.openBlock(), vue.createElementBlock("img", {
          key: 1,
          class: "avatar-image",
          src: $setup.avatarImageUrl || $setup.defaultAvatarUrl,
          onLoad: $setup.avatarLoadSuccess,
          onError: $setup.avatarLoadFailed
        }, null, 40, ["src"])),
        $setup.useAvatarSkeletonAnimation && !$setup.isImgLoaded ? (vue.openBlock(), vue.createElementBlock(
          "div",
          {
            key: 2,
            class: vue.normalizeClass({
              placeholder: true,
              hidden: $setup.isImgLoaded,
              "skeleton-animation": $setup.useAvatarSkeletonAnimation
            })
          },
          null,
          2
          /* CLASS */
        )) : vue.createCommentVNode("v-if", true)
      ],
      4
      /* STYLE */
    );
  }
  const Avatar = /* @__PURE__ */ _export_sfc(_sfc_main$27, [["render", _sfc_render$26], ["__scopeId", "data-v-c7c42418"], ["__file", "C:/Users/Administrator/Desktop/Project Folder/ZXHand/ZXHandwritting_APP_uniapp/TUIKit/components/common/Avatar/index.vue"]]);
  const _sfc_main$26 = /* @__PURE__ */ vue.defineComponent({
    __name: "index",
    props: {
      visible: { type: Boolean, required: false, default: true },
      zIndex: { type: null, required: false, default: 9999 },
      useMask: { type: Boolean, required: false, skipCheck: true, default: true },
      maskColor: { type: null, required: false, default: "rgba(0, 0, 0, 0.6)" },
      isFullScreen: { type: Boolean, required: false, skipCheck: true, default: true },
      width: { type: String, required: false, default: "auto" },
      height: { type: String, required: false, default: "auto" }
    },
    emits: ["onOverlayClick"],
    setup(__props, { expose: __expose, emit: __emit }) {
      const emits2 = __emit;
      const props2 = __props;
      const overlayDomRef = vue.ref();
      const isOverlayShow = vue.ref(props2.visible);
      vue.watch(() => props2.visible, (visible) => {
        if (visible) {
          isOverlayShow.value = true;
        } else {
          setTimeout(() => {
            isOverlayShow.value = false;
          }, 150);
        }
      }, {
        immediate: true
      });
      function onOverlayClick() {
        emits2("onOverlayClick");
      }
      __expose({
        overlayDomRef
      });
      const __returned__ = { emits: emits2, props: props2, overlayDomRef, isOverlayShow, onOverlayClick };
      Object.defineProperty(__returned__, "__isScriptSetup", { enumerable: false, value: true });
      return __returned__;
    }
  });
  function _sfc_render$25(_ctx, _cache, $props, $setup, $data, $options) {
    return $setup.isOverlayShow ? (vue.openBlock(), vue.createElementBlock(
      "div",
      {
        key: 0,
        ref: "overlayDomRef",
        class: "overlay-container",
        style: vue.normalizeStyle({
          position: $setup.props.isFullScreen ? "fixed" : "absolute",
          zIndex: $setup.props.zIndex
        })
      },
      [
        $setup.props.useMask ? (vue.openBlock(), vue.createElementBlock(
          "div",
          {
            key: 0,
            class: vue.normalizeClass({
              "overlay-mask": true,
              "fade-in": $setup.props.visible
            }),
            style: vue.normalizeStyle({
              backgroundColor: $setup.props.maskColor
            }),
            onClick: $setup.onOverlayClick,
            onTouchstart: vue.withModifiers($setup.onOverlayClick, ["prevent", "stop"])
          },
          null,
          38
          /* CLASS, STYLE, NEED_HYDRATION */
        )) : vue.createCommentVNode("v-if", true),
        vue.createElementVNode(
          "div",
          {
            class: vue.normalizeClass({
              "overlay-content": true,
              "full-screen": $setup.props.isFullScreen
            })
          },
          [
            vue.renderSlot(_ctx.$slots, "default", {}, void 0, true)
          ],
          2
          /* CLASS */
        )
      ],
      4
      /* STYLE */
    )) : vue.createCommentVNode("v-if", true);
  }
  const Overlay = /* @__PURE__ */ _export_sfc(_sfc_main$26, [["render", _sfc_render$25], ["__scopeId", "data-v-fdff2bf0"], ["__file", "C:/Users/Administrator/Desktop/Project Folder/ZXHand/ZXHandwritting_APP_uniapp/TUIKit/components/common/Overlay/index.vue"]]);
  const _sfc_main$25 = /* @__PURE__ */ vue.defineComponent({
    __name: "index",
    props: {
      show: {
        type: Boolean,
        default: false
      },
      isHeaderShow: {
        type: Boolean,
        default: true
      },
      isFooterShow: {
        type: Boolean,
        default: true
      },
      background: {
        type: Boolean,
        default: true
      },
      title: {
        type: String,
        default: ""
      },
      center: {
        type: Boolean,
        default: false
      }
    },
    emits: ["update:show", "submit"],
    setup(__props, { expose: __expose, emit: __emit }) {
      __expose();
      const clickType = {
        OUTSIDE: "outside",
        INSIDE: "inside"
      };
      const props2 = __props;
      const showDialog = vue.ref(false);
      const isHeaderShowDialog = vue.ref(true);
      const isFooterShowDialog = vue.ref(true);
      const backgroundDialog = vue.ref(true);
      const showTitle = vue.ref("");
      vue.watchEffect(() => {
        showDialog.value = props2.show;
        showTitle.value = props2.title;
        isHeaderShowDialog.value = props2.isHeaderShow;
        isFooterShowDialog.value = props2.isFooterShow;
        backgroundDialog.value = props2.background;
      });
      const emit = __emit;
      const toggleView = (type) => {
        if (type === clickType.OUTSIDE) {
          close();
        }
      };
      const close = () => {
        showDialog.value = !showDialog.value;
        emit("update:show", showDialog.value);
      };
      const submit = () => {
        emit("submit");
        close();
      };
      const __returned__ = { clickType, props: props2, showDialog, isHeaderShowDialog, isFooterShowDialog, backgroundDialog, showTitle, emit, toggleView, close, submit, get TUITranslateService() {
        return Jt;
      }, get isPC() {
        return isPC;
      }, get isH5() {
        return isH5;
      }, get isUniFrameWork() {
        return isUniFrameWork;
      } };
      Object.defineProperty(__returned__, "__isScriptSetup", { enumerable: false, value: true });
      return __returned__;
    }
  });
  function _sfc_render$24(_ctx, _cache, $props, $setup, $data, $options) {
    return $setup.showDialog ? (vue.openBlock(), vue.createElementBlock(
      "div",
      {
        key: 0,
        class: vue.normalizeClass(["dialog", [!$setup.isPC ? "dialog-h5" : "", $props.center ? "center" : ""]]),
        onClick: _cache[1] || (_cache[1] = vue.withModifiers(($event) => $setup.toggleView($setup.clickType.OUTSIDE), ["stop", "prevent"]))
      },
      [
        vue.createElementVNode(
          "main",
          {
            class: vue.normalizeClass(["dialog-main", [!$setup.backgroundDialog ? "dialog-main-back" : ""]]),
            onClick: _cache[0] || (_cache[0] = vue.withModifiers(($event) => $setup.toggleView($setup.clickType.INSIDE), ["stop", "prevent"]))
          },
          [
            $setup.isHeaderShowDialog ? (vue.openBlock(), vue.createElementBlock("header", {
              key: 0,
              class: "dialog-main-header"
            }, [
              vue.createElementVNode(
                "h1",
                { class: "dialog-main-title" },
                vue.toDisplayString($setup.showTitle),
                1
                /* TEXT */
              ),
              vue.createElementVNode("i", {
                class: "icon icon-close",
                onClick: $setup.close
              })
            ])) : vue.createCommentVNode("v-if", true),
            vue.createElementVNode(
              "div",
              {
                class: vue.normalizeClass(["dialog-main-content", [$setup.isUniFrameWork && $setup.isH5 ? "dialog-main-content-uniapp" : ""]])
              },
              [
                vue.renderSlot(_ctx.$slots, "default", {}, void 0, true)
              ],
              2
              /* CLASS */
            ),
            $setup.isFooterShowDialog ? (vue.openBlock(), vue.createElementBlock("footer", {
              key: 1,
              class: "dialog-main-footer"
            }, [
              vue.createElementVNode(
                "button",
                {
                  class: "btn btn-cancel",
                  onClick: $setup.close
                },
                vue.toDisplayString($setup.TUITranslateService.t("component.取消")),
                1
                /* TEXT */
              ),
              vue.createElementVNode(
                "button",
                {
                  class: "btn btn-default",
                  onClick: $setup.submit
                },
                vue.toDisplayString($setup.TUITranslateService.t("component.确定")),
                1
                /* TEXT */
              )
            ])) : vue.createCommentVNode("v-if", true)
          ],
          2
          /* CLASS */
        )
      ],
      2
      /* CLASS */
    )) : vue.createCommentVNode("v-if", true);
  }
  const Dialog = /* @__PURE__ */ _export_sfc(_sfc_main$25, [["render", _sfc_render$24], ["__scopeId", "data-v-2c2f9c5b"], ["__file", "C:/Users/Administrator/Desktop/Project Folder/ZXHand/ZXHandwritting_APP_uniapp/TUIKit/components/common/Dialog/index.vue"]]);
  const _sfc_main$24 = /* @__PURE__ */ vue.defineComponent({
    __name: "index",
    props: {
      actionsMenuPosition: { type: Object, required: true },
      selectedConversation: { type: null, required: true },
      selectedConversationDomRect: { type: null, required: true }
    },
    emits: ["closeConversationActionMenu"],
    setup(__props, { expose: __expose, emit: __emit }) {
      var _a, _b;
      __expose();
      const emits2 = __emit;
      const props2 = __props;
      const thisInstance = ((_a = vue.getCurrentInstance()) == null ? void 0 : _a.proxy) || vue.getCurrentInstance();
      const actionsMenuDomRef = vue.ref();
      const isHiddenActionsMenu = vue.ref(true);
      const isShowDeleteConversationDialog = vue.ref(false);
      const currentConversation = zt.getConversationModel(
        ((_b = props2.selectedConversation) == null ? void 0 : _b.conversationID) || ""
      );
      const _actionsMenuPosition = vue.ref(props2.actionsMenuPosition);
      vue.onMounted(() => {
        checkExceedBounds();
      });
      const deleteConversationDialogTitle = vue.computed(() => {
        var _a2, _b2;
        return ((_a2 = props2.selectedConversation) == null ? void 0 : _a2.type) === Kt.TYPES.CONV_C2C ? "TUIConversation.删除后，将清空该聊天的消息记录" : ((_b2 = props2.selectedConversation) == null ? void 0 : _b2.type) === Kt.TYPES.CONV_GROUP ? "TUIConversation.删除后，将清空该群聊的消息记录" : "";
      });
      function checkExceedBounds() {
        vue.nextTick(() => {
          var _a2;
          if (isUniFrameWork) {
            const query = i == null ? void 0 : i.createSelectorQuery().in(thisInstance);
            query.select(`#conversation-actions-menu`).boundingClientRect((data) => {
              var _a3;
              if (data) {
                if (data.bottom > ((_a3 = i == null ? void 0 : i.getWindowInfo) == null ? void 0 : _a3.call(i).windowHeight)) {
                  _actionsMenuPosition.value = {
                    ...props2.actionsMenuPosition,
                    top: props2.actionsMenuPosition.top - (props2.actionsMenuPosition.conversationHeight || 0) - data.height
                  };
                }
                if (_actionsMenuPosition.value.left + data.width + 5 > i.getWindowInfo().windowWidth) {
                  _actionsMenuPosition.value.left = i.getWindowInfo().windowWidth - data.width - 5;
                }
              }
              isHiddenActionsMenu.value = false;
            }).exec();
          } else {
            const rect = (_a2 = actionsMenuDomRef.value) == null ? void 0 : _a2.getBoundingClientRect();
            if (isPC && typeof props2.actionsMenuPosition.left !== "undefined") {
              _actionsMenuPosition.value.left = props2.actionsMenuPosition.left;
            }
            if (rect && rect.bottom > window.innerHeight) {
              _actionsMenuPosition.value.top = props2.actionsMenuPosition.top - (props2.actionsMenuPosition.conversationHeight || 0) - rect.height;
            }
            isHiddenActionsMenu.value = false;
          }
        });
      }
      const handleItem = (params) => {
        const { name } = params;
        const conversationModel = currentConversation;
        if (!name || !conversationModel || !conversationModel.conversationID) {
          return;
        }
        switch (name) {
          case CONV_OPERATION.DELETE:
            conversationModel == null ? void 0 : conversationModel.deleteConversation();
            break;
          case CONV_OPERATION.ISPINNED:
            conversationModel == null ? void 0 : conversationModel.pinConversation();
            break;
          case CONV_OPERATION.DISPINNED:
            conversationModel == null ? void 0 : conversationModel.pinConversation();
            break;
          case CONV_OPERATION.MUTE:
            conversationModel == null ? void 0 : conversationModel.muteConversation();
            break;
          case CONV_OPERATION.NOTMUTE:
            conversationModel == null ? void 0 : conversationModel.muteConversation();
            break;
        }
        emits2("closeConversationActionMenu");
      };
      const deleteConversation = () => {
        isShowDeleteConversationDialog.value = true;
      };
      const updateShowDeleteConversationDialog = (isShow) => {
        if (!isShow) {
          emits2("closeConversationActionMenu");
        }
        isShowDeleteConversationDialog.value = isShow;
      };
      const __returned__ = { emits: emits2, props: props2, thisInstance, actionsMenuDomRef, isHiddenActionsMenu, isShowDeleteConversationDialog, currentConversation, _actionsMenuPosition, deleteConversationDialogTitle, checkExceedBounds, handleItem, deleteConversation, updateShowDeleteConversationDialog, get TUITranslateService() {
        return Jt;
      }, get CONV_OPERATION() {
        return CONV_OPERATION;
      }, get isPC() {
        return isPC;
      }, Overlay, Dialog };
      Object.defineProperty(__returned__, "__isScriptSetup", { enumerable: false, value: true });
      return __returned__;
    }
  });
  function _sfc_render$23(_ctx, _cache, $props, $setup, $data, $options) {
    return vue.openBlock(), vue.createBlock($setup["Overlay"], {
      maskColor: "transparent",
      onOnOverlayClick: _cache[6] || (_cache[6] = () => $setup.emits("closeConversationActionMenu"))
    }, {
      default: vue.withCtx(() => [
        vue.createElementVNode(
          "div",
          {
            id: "conversation-actions-menu",
            ref: "actionsMenuDomRef",
            class: vue.normalizeClass([
              $setup.isPC && "actions-menu-pc",
              "actions-menu",
              !$setup.isHiddenActionsMenu && "cancel-hidden"
            ]),
            style: vue.normalizeStyle({
              top: `${$setup._actionsMenuPosition.top}px`,
              left: `${$setup._actionsMenuPosition.left}px`
            })
          },
          [
            vue.createElementVNode(
              "div",
              {
                class: vue.normalizeClass(["actions-menu-item"]),
                onClick: _cache[0] || (_cache[0] = vue.withModifiers(($event) => $setup.deleteConversation(), ["stop"]))
              },
              vue.toDisplayString($setup.TUITranslateService.t("TUIConversation.删除会话")),
              1
              /* TEXT */
            ),
            !($setup.props.selectedConversation && $setup.props.selectedConversation.isPinned) ? (vue.openBlock(), vue.createElementBlock(
              "div",
              {
                key: 0,
                class: vue.normalizeClass(["actions-menu-item"]),
                onClick: _cache[1] || (_cache[1] = vue.withModifiers(($event) => $setup.handleItem({ name: $setup.CONV_OPERATION.ISPINNED }), ["stop"]))
              },
              vue.toDisplayString($setup.TUITranslateService.t("TUIConversation.置顶会话")),
              1
              /* TEXT */
            )) : vue.createCommentVNode("v-if", true),
            $setup.props.selectedConversation && $setup.props.selectedConversation.isPinned ? (vue.openBlock(), vue.createElementBlock(
              "div",
              {
                key: 1,
                class: vue.normalizeClass(["actions-menu-item"]),
                onClick: _cache[2] || (_cache[2] = vue.withModifiers(($event) => $setup.handleItem({ name: $setup.CONV_OPERATION.DISPINNED }), ["stop"]))
              },
              vue.toDisplayString($setup.TUITranslateService.t("TUIConversation.取消置顶")),
              1
              /* TEXT */
            )) : vue.createCommentVNode("v-if", true),
            !($setup.props.selectedConversation && $setup.props.selectedConversation.isMuted) ? (vue.openBlock(), vue.createElementBlock(
              "div",
              {
                key: 2,
                class: vue.normalizeClass(["actions-menu-item"]),
                onClick: _cache[3] || (_cache[3] = vue.withModifiers(($event) => $setup.handleItem({ name: $setup.CONV_OPERATION.MUTE }), ["stop"]))
              },
              vue.toDisplayString($setup.TUITranslateService.t("TUIConversation.消息免打扰")),
              1
              /* TEXT */
            )) : vue.createCommentVNode("v-if", true),
            $setup.props.selectedConversation && $setup.props.selectedConversation.isMuted ? (vue.openBlock(), vue.createElementBlock(
              "div",
              {
                key: 3,
                class: vue.normalizeClass(["actions-menu-item"]),
                onClick: _cache[4] || (_cache[4] = vue.withModifiers(($event) => $setup.handleItem({ name: $setup.CONV_OPERATION.NOTMUTE }), ["stop"]))
              },
              vue.toDisplayString($setup.TUITranslateService.t("TUIConversation.取消免打扰")),
              1
              /* TEXT */
            )) : vue.createCommentVNode("v-if", true)
          ],
          6
          /* CLASS, STYLE */
        ),
        vue.createVNode($setup["Dialog"], {
          show: $setup.isShowDeleteConversationDialog,
          center: true,
          isHeaderShow: $setup.isPC,
          onSubmit: _cache[5] || (_cache[5] = ($event) => $setup.handleItem({ name: $setup.CONV_OPERATION.DELETE })),
          "onUpdate:show": $setup.updateShowDeleteConversationDialog
        }, {
          default: vue.withCtx(() => [
            vue.createElementVNode(
              "p",
              { class: "delDialog-title" },
              vue.toDisplayString($setup.TUITranslateService.t($setup.deleteConversationDialogTitle)),
              1
              /* TEXT */
            )
          ]),
          _: 1
          /* STABLE */
        }, 8, ["show", "isHeaderShow"])
      ]),
      _: 1
      /* STABLE */
    });
  }
  const ActionsMenu = /* @__PURE__ */ _export_sfc(_sfc_main$24, [["render", _sfc_render$23], ["__scopeId", "data-v-63e37304"], ["__file", "C:/Users/Administrator/Desktop/Project Folder/ZXHand/ZXHandwritting_APP_uniapp/TUIKit/components/TUIConversation/actions-menu/index.vue"]]);
  const muteIcon = "/assets/mute.94c8513a.svg";
  const _sfc_main$23 = /* @__PURE__ */ vue.defineComponent({
    __name: "index",
    props: {
      marker: { type: String, required: false }
    },
    emits: ["handleSwitchConversation", "getPassingRef"],
    setup(__props, { expose: __expose, emit: __emit }) {
      const props2 = __props;
      vue.watch(
        () => props2.marker,
        (newMarker) => {
          formatAppLog("log", "at TUIKit/components/TUIConversation/conversation-list/index.vue:104", "Received marker:", newMarker);
        },
        { immediate: true }
      );
      const emits2 = __emit;
      const currentConversation = vue.ref();
      const currentConversationID = vue.ref();
      const currentConversationDomRect = vue.ref();
      const isShowOverlay = vue.ref(false);
      const conversationList = vue.ref([]);
      const conversationListDomRef = vue.ref();
      const conversationListInnerDomRef = vue.ref();
      const actionsMenuPosition = vue.ref({
        top: 0,
        left: void 0,
        conversationHeight: void 0
      });
      const displayOnlineStatus = vue.ref(false);
      const userOnlineStatusMap = vue.ref();
      let lastestOpenActionsMenuTime = null;
      vue.onMounted(() => {
        zt.watch(o$2.CONV, {
          currentConversationID: onCurrentConversationIDUpdated,
          conversationList: onConversationListUpdated,
          currentConversation: onCurrentConversationUpdated
        });
        zt.watch(o$2.USER, {
          displayOnlineStatus: onDisplayOnlineStatusUpdated,
          userStatusList: onUserStatusListUpdated
        });
        if (!isUniFrameWork && f && !isPC) {
          addLongPressHandler();
        }
      });
      vue.onUnmounted(() => {
        zt.unwatch(o$2.CONV, {
          currentConversationID: onCurrentConversationIDUpdated,
          conversationList: onConversationListUpdated,
          currentConversation: onCurrentConversationUpdated
        });
        zt.unwatch(o$2.USER, {
          displayOnlineStatus: onDisplayOnlineStatusUpdated,
          userStatusList: onUserStatusListUpdated
        });
      });
      const isShowUserOnlineStatus = (conversation) => {
        return displayOnlineStatus.value && conversation.type === Kt.TYPES.CONV_C2C;
      };
      const showConversationActionMenu = (event, conversation, index2, isContextMenuEvent) => {
        if (isContextMenuEvent) {
          event.preventDefault();
          if (isUniFrameWork) {
            return;
          }
        }
        currentConversation.value = conversation;
        lastestOpenActionsMenuTime = Date.now();
        getActionsMenuPosition(event, index2);
      };
      const closeConversationActionMenu = () => {
        if (lastestOpenActionsMenuTime && Date.now() - lastestOpenActionsMenuTime > 300) {
          currentConversation.value = void 0;
          isShowOverlay.value = false;
        }
      };
      const getActionsMenuPosition = (event, index2) => {
        var _a;
        if (isUniFrameWork) {
          if (typeof conversationListDomRef.value === "undefined") {
            emits2("getPassingRef", conversationListDomRef);
          }
          const query = i == null ? void 0 : i.createSelectorQuery().in(
            conversationListDomRef.value
          );
          query.select(`#convlistitem-${index2}`).boundingClientRect((data) => {
            if (data) {
              actionsMenuPosition.value = {
                // The uni-page-head of uni-h5 is not considered a member of the viewport, so the height of the head is manually increased.
                top: data.bottom + (isH5 ? 44 : 0),
                // @ts-expect-error in uniapp event has touches property
                left: event.touches[0].pageX,
                conversationHeight: data.height
              };
              isShowOverlay.value = true;
            }
          }).exec();
        } else {
          const rect = ((_a = event.currentTarget || event.target) == null ? void 0 : _a.getBoundingClientRect()) || {};
          if (rect) {
            actionsMenuPosition.value = {
              top: rect.bottom,
              left: isPC ? event.clientX : void 0,
              conversationHeight: rect.height
            };
          }
          isShowOverlay.value = true;
        }
      };
      const enterConversationChat = (conversationID) => {
        emits2("handleSwitchConversation", conversationID);
        Wt.switchConversation(conversationID);
      };
      function addLongPressHandler() {
        if (!conversationListInnerDomRef.value) {
          return;
        }
        I({
          element: conversationListInnerDomRef.value,
          onLongPress: (event, target) => {
            const index2 = Array.from(conversationListInnerDomRef.value.children).indexOf(target);
            showConversationActionMenu(event, conversationList.value[index2], index2);
          },
          options: {
            eventDelegation: {
              subSelector: ".tui-conversation-content"
            }
          }
        });
      }
      function onCurrentConversationUpdated(conversation) {
        currentConversation.value = conversation;
      }
      function onConversationListUpdated(list) {
        formatAppLog("log", "at TUIKit/components/TUIConversation/conversation-list/index.vue:264", "++++++++++++++++++++++++", list);
        conversationList.value = [];
        list.forEach((conversation) => {
          if (conversation.type !== "GROUP") {
            conversationList.value.push(conversation);
          }
        });
      }
      function onCurrentConversationIDUpdated(id) {
        currentConversationID.value = id;
      }
      function onDisplayOnlineStatusUpdated(status) {
        displayOnlineStatus.value = status;
      }
      function onUserStatusListUpdated(list) {
        if (list.size !== 0) {
          userOnlineStatusMap.value = [...list.entries()].reduce(
            (obj, [key, value]) => {
              obj[key] = value;
              return obj;
            },
            {}
          );
        }
      }
      __expose({ closeChildren: closeConversationActionMenu });
      const __returned__ = { props: props2, emits: emits2, currentConversation, currentConversationID, currentConversationDomRect, isShowOverlay, conversationList, conversationListDomRef, conversationListInnerDomRef, actionsMenuPosition, displayOnlineStatus, userOnlineStatusMap, get lastestOpenActionsMenuTime() {
        return lastestOpenActionsMenuTime;
      }, set lastestOpenActionsMenuTime(v2) {
        lastestOpenActionsMenuTime = v2;
      }, isShowUserOnlineStatus, showConversationActionMenu, closeConversationActionMenu, getActionsMenuPosition, enterConversationChat, addLongPressHandler, onCurrentConversationUpdated, onConversationListUpdated, onCurrentConversationIDUpdated, onDisplayOnlineStatusUpdated, onUserStatusListUpdated, get TUITranslateService() {
        return Jt;
      }, Icon: Icon$1, Avatar, ActionsMenu, get muteIcon() {
        return muteIcon;
      }, get isPC() {
        return isPC;
      }, get isMobile() {
        return isMobile;
      } };
      Object.defineProperty(__returned__, "__isScriptSetup", { enumerable: false, value: true });
      return __returned__;
    }
  });
  const _imports_0$3 = "/static/img/noTea.png";
  function _sfc_render$22(_ctx, _cache, $props, $setup, $data, $options) {
    return vue.openBlock(), vue.createElementBlock("div", null, [
      $setup.conversationList.length > 0 ? (vue.openBlock(), vue.createElementBlock(
        "div",
        {
          key: 0,
          ref: "conversationListInnerDomRef",
          class: "tui-conversation-list"
        },
        [
          $setup.isShowOverlay ? (vue.openBlock(), vue.createBlock($setup["ActionsMenu"], {
            key: 0,
            selectedConversation: $setup.currentConversation,
            actionsMenuPosition: $setup.actionsMenuPosition,
            selectedConversationDomRect: $setup.currentConversationDomRect,
            onCloseConversationActionMenu: $setup.closeConversationActionMenu
          }, null, 8, ["selectedConversation", "actionsMenuPosition", "selectedConversationDomRect"])) : vue.createCommentVNode("v-if", true),
          (vue.openBlock(true), vue.createElementBlock(
            vue.Fragment,
            null,
            vue.renderList($setup.conversationList, (conversation, index2) => {
              return vue.openBlock(), vue.createElementBlock("div", {
                id: `convlistitem-${index2}`,
                key: index2,
                class: vue.normalizeClass([
                  "tui-conversation-content",
                  $setup.isMobile && "tui-conversation-content-h5 disable-select"
                ])
              }, [
                vue.createElementVNode("div", {
                  style: { "padding": "12px 0!important" },
                  class: vue.normalizeClass([
                    $setup.isPC && "isPC",
                    "tui-conversation-item",
                    $setup.currentConversationID === conversation.conversationID && "tui-conversation-item-selected",
                    conversation.isPinned && "tui-conversation-item-pinned"
                  ]),
                  onClick: ($event) => $setup.enterConversationChat(conversation.conversationID),
                  onLongpress: ($event) => $setup.showConversationActionMenu($event, conversation, index2),
                  onContextmenu: ($event) => $setup.showConversationActionMenu($event, conversation, index2, true)
                }, [
                  vue.createElementVNode("aside", { class: "left" }, [
                    vue.createVNode($setup["Avatar"], {
                      useSkeletonAnimation: "",
                      url: conversation.getAvatar(),
                      size: "30px"
                    }, null, 8, ["url"]),
                    $setup.userOnlineStatusMap && $setup.isShowUserOnlineStatus(conversation) ? (vue.openBlock(), vue.createElementBlock(
                      "div",
                      {
                        key: 0,
                        class: vue.normalizeClass([
                          "online-status",
                          Object.keys($setup.userOnlineStatusMap).length > 0 && Object.keys($setup.userOnlineStatusMap).includes(
                            conversation.userProfile.userID
                          ) && $setup.userOnlineStatusMap[conversation.userProfile.userID].statusType === 1 ? "online-status-online" : "online-status-offline"
                        ])
                      },
                      null,
                      2
                      /* CLASS */
                    )) : vue.createCommentVNode("v-if", true),
                    conversation.unreadCount > 0 && !conversation.isMuted ? (vue.openBlock(), vue.createElementBlock(
                      "span",
                      {
                        key: 1,
                        class: "num"
                      },
                      vue.toDisplayString(conversation.unreadCount > 99 ? "99+" : conversation.unreadCount),
                      1
                      /* TEXT */
                    )) : vue.createCommentVNode("v-if", true),
                    conversation.unreadCount > 0 && conversation.isMuted ? (vue.openBlock(), vue.createElementBlock("span", {
                      key: 2,
                      class: "num-notify"
                    })) : vue.createCommentVNode("v-if", true)
                  ]),
                  vue.createElementVNode("div", { class: "content" }, [
                    vue.createElementVNode("div", {
                      style: { "margin-left": "10px" },
                      class: "content-header"
                    }, [
                      vue.createElementVNode("label", { class: "content-header-label" }, [
                        vue.createElementVNode(
                          "p",
                          { class: "name" },
                          vue.toDisplayString(conversation.getShowName()),
                          1
                          /* TEXT */
                        )
                      ]),
                      vue.createElementVNode("div", { class: "middle-box" }, [
                        conversation.draftText && conversation.conversationID !== $setup.currentConversationID ? (vue.openBlock(), vue.createElementBlock(
                          "span",
                          {
                            key: 0,
                            class: "middle-box-draft"
                          },
                          vue.toDisplayString($setup.TUITranslateService.t("TUIChat.[草稿]")),
                          1
                          /* TEXT */
                        )) : conversation.type === "GROUP" && conversation.groupAtInfoList && conversation.groupAtInfoList.length > 0 ? (vue.openBlock(), vue.createElementBlock(
                          "span",
                          {
                            key: 1,
                            class: "middle-box-at"
                          },
                          vue.toDisplayString(conversation.getGroupAtInfo()),
                          1
                          /* TEXT */
                        )) : vue.createCommentVNode("v-if", true),
                        vue.createElementVNode(
                          "div",
                          { class: "middle-box-content" },
                          vue.toDisplayString(conversation.getLastMessage("text")),
                          1
                          /* TEXT */
                        )
                      ])
                    ]),
                    vue.createElementVNode("div", { class: "content-footer" }, [
                      vue.createElementVNode(
                        "span",
                        { class: "time" },
                        vue.toDisplayString(conversation.getLastMessage("time")),
                        1
                        /* TEXT */
                      ),
                      conversation.isMuted ? (vue.openBlock(), vue.createBlock($setup["Icon"], {
                        key: 0,
                        file: $setup.muteIcon
                      }, null, 8, ["file"])) : vue.createCommentVNode("v-if", true)
                    ])
                  ])
                ], 42, ["onClick", "onLongpress", "onContextmenu"])
              ], 10, ["id"]);
            }),
            128
            /* KEYED_FRAGMENT */
          ))
        ],
        512
        /* NEED_PATCH */
      )) : (vue.openBlock(), vue.createElementBlock("div", {
        key: 1,
        class: "kong",
        style: { "display": "flex", "justify-content": "center", "align-items": "center", "height": "100vh" }
      }, [
        vue.createElementVNode("image", {
          style: { "margin-top": "-600rpx" },
          src: _imports_0$3,
          mode: "aspectFit"
        })
      ]))
    ]);
  }
  const ConversationList$1 = /* @__PURE__ */ _export_sfc(_sfc_main$23, [["render", _sfc_render$22], ["__scopeId", "data-v-4ef42c1d"], ["__file", "C:/Users/Administrator/Desktop/Project Folder/ZXHand/ZXHandwritting_APP_uniapp/TUIKit/components/TUIConversation/conversation-list/index.vue"]]);
  const createGroupIcon = "/assets/start-group.6d6b5fbb.svg";
  const createC2CIcon = "/assets/icon-c2c.d80299ab.svg";
  class ConversationHeaderServer {
    static getInstance() {
      if (!ConversationHeaderServer.instance) {
        ConversationHeaderServer.instance = new ConversationHeaderServer();
      }
      return ConversationHeaderServer.instance;
    }
    getMenu() {
      const list = this.generateMenuList();
      if (!isPC && list.length > 0) {
        return [{
          text: Jt.t("TUIConversation.发起会话"),
          data: {
            name: "all",
            children: list
          }
        }];
      }
      return list;
    }
    generateMenuList() {
      const list = [
        {
          icon: createC2CIcon,
          text: Jt.t("TUIConversation.发起单聊"),
          data: {
            name: CONV_CREATE_TYPE.TYPEC2C
          },
          listener: {
            onClicked: this.createConversation.bind(this)
          }
        },
        {
          icon: createGroupIcon,
          text: Jt.t("TUIConversation.发起群聊"),
          data: {
            name: CONV_CREATE_TYPE.TYPEGROUP
          },
          listener: {
            onClicked: this.createConversation.bind(this)
          }
        }
      ];
      return list;
    }
    createConversation(item) {
      R$1.callService({
        serviceName: E$1.TUIConversation.SERVICE.NAME,
        method: E$1.TUIConversation.SERVICE.METHOD.CREATE_CONVERSATION,
        params: item
      });
    }
  }
  const _sfc_main$22 = /* @__PURE__ */ vue.defineComponent({
    __name: "index",
    setup(__props, { expose: __expose }) {
      const showChildren = vue.ref([]);
      const convHeaderRef = vue.ref();
      const menuList = vue.computed(() => {
        return ConversationHeaderServer.getInstance().getMenu();
      });
      vue.onMounted(() => {
        showChildren.value = [];
      });
      const handleMenu = (item) => {
        const { data: { children }, listener = { onClicked: () => {
        } } } = item;
        if (children) {
          showChildren.value = showChildren.value.length > 0 ? [] : children;
        } else {
          listener.onClicked(item);
          closeChildren();
        }
      };
      const closeChildren = () => {
        showChildren.value = [];
      };
      __expose({
        closeChildren
      });
      const __returned__ = { showChildren, convHeaderRef, menuList, handleMenu, closeChildren, Icon: Icon$1 };
      Object.defineProperty(__returned__, "__isScriptSetup", { enumerable: false, value: true });
      return __returned__;
    }
  });
  function _sfc_render$21(_ctx, _cache, $props, $setup, $data, $options) {
    return vue.openBlock(), vue.createElementBlock(
      "div",
      {
        ref: $setup.convHeaderRef,
        class: "tui-conversation-header"
      },
      [
        $setup.menuList.length > 0 ? (vue.openBlock(), vue.createElementBlock("ul", {
          key: 0,
          class: "list"
        }, [
          (vue.openBlock(true), vue.createElementBlock(
            vue.Fragment,
            null,
            vue.renderList($setup.menuList, (item, index2) => {
              return vue.openBlock(), vue.createElementBlock("li", {
                key: index2,
                class: "list-item"
              }, [
                vue.createElementVNode("main", {
                  class: "tui-conversation-header-item",
                  onClick: vue.withModifiers(($event) => $setup.handleMenu(item), ["stop"])
                }, [
                  item.icon && !item.data.children ? (vue.openBlock(), vue.createBlock($setup["Icon"], {
                    key: 0,
                    class: "tui-conversation-header-item-icon",
                    file: item.icon
                  }, null, 8, ["file"])) : (vue.openBlock(), vue.createElementBlock("i", {
                    key: 1,
                    class: "plus"
                  })),
                  vue.createElementVNode(
                    "h1",
                    { class: "tui-conversation-header-item-title" },
                    vue.toDisplayString(item.text),
                    1
                    /* TEXT */
                  )
                ], 8, ["onClick"])
              ]);
            }),
            128
            /* KEYED_FRAGMENT */
          ))
        ])) : vue.createCommentVNode("v-if", true),
        $setup.showChildren.length > 0 ? (vue.openBlock(), vue.createElementBlock("ul", {
          key: 1,
          class: "tui-conversation-header-children list"
        }, [
          (vue.openBlock(true), vue.createElementBlock(
            vue.Fragment,
            null,
            vue.renderList($setup.showChildren, (childrenItem, childrenIndex) => {
              return vue.openBlock(), vue.createElementBlock("li", {
                key: childrenIndex,
                class: "list-item"
              }, [
                vue.createElementVNode("main", {
                  class: "tui-conversation-header-item",
                  onClick: ($event) => $setup.handleMenu(childrenItem)
                }, [
                  childrenItem.icon ? (vue.openBlock(), vue.createBlock($setup["Icon"], {
                    key: 0,
                    class: "tui-conversation-header-item-icon",
                    file: childrenItem.icon
                  }, null, 8, ["file"])) : vue.createCommentVNode("v-if", true),
                  vue.createElementVNode(
                    "h1",
                    { class: "tui-conversation-header-item-title" },
                    vue.toDisplayString(childrenItem.text),
                    1
                    /* TEXT */
                  )
                ], 8, ["onClick"])
              ]);
            }),
            128
            /* KEYED_FRAGMENT */
          ))
        ])) : vue.createCommentVNode("v-if", true)
      ],
      512
      /* NEED_PATCH */
    );
  }
  const ConversationHeader = /* @__PURE__ */ _export_sfc(_sfc_main$22, [["render", _sfc_render$21], ["__scopeId", "data-v-c7a8f8e3"], ["__file", "C:/Users/Administrator/Desktop/Project Folder/ZXHand/ZXHandwritting_APP_uniapp/TUIKit/components/TUIConversation/conversation-header/index.vue"]]);
  const _sfc_main$21 = /* @__PURE__ */ vue.defineComponent({
    __name: "index",
    setup(__props, { expose: __expose }) {
      __expose();
      const isNotNetwork = vue.ref(false);
      zt.watch(o$2.USER, {
        netStateChange: (value) => {
          isNotNetwork.value = value === Kt.TYPES.NET_STATE_DISCONNECTED;
        }
      });
      const __returned__ = { isNotNetwork, get TUITranslateService() {
        return Jt;
      } };
      Object.defineProperty(__returned__, "__isScriptSetup", { enumerable: false, value: true });
      return __returned__;
    }
  });
  function _sfc_render$20(_ctx, _cache, $props, $setup, $data, $options) {
    return $setup.isNotNetwork ? (vue.openBlock(), vue.createElementBlock("div", {
      key: 0,
      class: "network"
    }, [
      vue.createElementVNode("i", { class: "icon icon-error" }, "!"),
      vue.createElementVNode(
        "p",
        { class: "network-content" },
        vue.toDisplayString($setup.TUITranslateService.t("TUIConversation.网络异常，请您检查网络设置")),
        1
        /* TEXT */
      )
    ])) : vue.createCommentVNode("v-if", true);
  }
  const ConversationNetwork = /* @__PURE__ */ _export_sfc(_sfc_main$21, [["render", _sfc_render$20], ["__scopeId", "data-v-36a06860"], ["__file", "C:/Users/Administrator/Desktop/Project Folder/ZXHand/ZXHandwritting_APP_uniapp/TUIKit/components/TUIConversation/conversation-network/index.vue"]]);
  const _sfc_main$20 = /* @__PURE__ */ vue.defineComponent({
    __name: "index",
    props: {
      marker: { type: String, required: false }
    },
    emits: [
      "handleSwitchConversation",
      "updateConversationListLengthTeachers"
    ],
    setup(__props, { expose: __expose, emit: __emit }) {
      __expose();
      const props2 = __props;
      const emits2 = __emit;
      const totalUnreadCount = vue.ref(0);
      const headerRef = vue.ref();
      const conversationListDomRef = vue.ref();
      const touchX = vue.ref(0);
      const touchY = vue.ref(0);
      const isShowConversationHeader = vue.ref(true);
      const currentTabIndex = vue.ref(0);
      zt.watch(o$2.CONV, {
        totalUnreadCount: (count) => {
          totalUnreadCount.value = count;
        }
      });
      zt.watch(o$2.CUSTOM, {
        isShowConversationHeader: (showStatus) => {
          isShowConversationHeader.value = showStatus !== false;
        }
      });
      const updateParentWithLengthTeachers = () => {
        var _a, _b;
        const length = ((_b = (_a = conversationListDomRef.value) == null ? void 0 : _a.items) == null ? void 0 : _b.length) || 0;
        formatAppLog("log", "at TUIKit/components/TUIConversation/index.vue:56", "++++", length);
        emits2("updateConversationListLengthTeachers", length);
      };
      vue.onMounted(() => {
        updateParentWithLengthTeachers();
      });
      vue.watch(conversationListDomRef, () => {
        updateParentWithLengthTeachers();
      });
      const handleSwitchConversation = (conversationID) => {
        i == null ? void 0 : i.navigateTo({
          url: "/TUIKit/components/TUIChat/index"
        });
        emits2("handleSwitchConversation", conversationID);
      };
      const closeChildren = () => {
        var _a, _b;
        (_a = headerRef == null ? void 0 : headerRef.value) == null ? void 0 : _a.closeChildren();
        (_b = conversationListDomRef == null ? void 0 : conversationListDomRef.value) == null ? void 0 : _b.closeChildren();
      };
      const handleClickConv = () => {
        closeChildren();
      };
      onHide(closeChildren);
      const handleTouchStart = (e2) => {
        touchX.value = e2.changedTouches[0].clientX;
        touchY.value = e2.changedTouches[0].clientY;
      };
      const handleTouchEnd = (e2) => {
        const x2 = e2.changedTouches[0].clientX;
        const y2 = e2.changedTouches[0].clientY;
        let turn = "";
        if (x2 - touchX.value > 50 && Math.abs(y2 - touchY.value) < 50) {
          turn = "right";
        } else if (x2 - touchX.value < -50 && Math.abs(y2 - touchY.value) < 50) {
          turn = "left";
        }
        if (y2 - touchY.value > 50 && Math.abs(x2 - touchX.value) < 50) {
          turn = "down";
        } else if (y2 - touchY.value < -50 && Math.abs(x2 - touchX.value) < 50) {
          turn = "up";
        }
        if (turn === "down" || turn === "up") {
          closeChildren();
        }
      };
      const onTabSelected = (index2) => {
        currentTabIndex.value = index2;
        if (index2 === 1) {
          i == null ? void 0 : i.navigateTo({
            url: "/TUIKit/components/TUIContact/index"
          });
        }
      };
      const getPassingRef = (ref2) => {
        ref2.value = conversationListDomRef.value;
      };
      const __returned__ = { props: props2, emits: emits2, totalUnreadCount, headerRef, conversationListDomRef, touchX, touchY, isShowConversationHeader, currentTabIndex, updateParentWithLengthTeachers, handleSwitchConversation, closeChildren, handleClickConv, handleTouchStart, handleTouchEnd, onTabSelected, getPassingRef, TUISearch: TUISearch$3, ConversationList: ConversationList$1, ConversationHeader, ConversationNetwork };
      Object.defineProperty(__returned__, "__isScriptSetup", { enumerable: false, value: true });
      return __returned__;
    }
  });
  function _sfc_render$1$(_ctx, _cache, $props, $setup, $data, $options) {
    return vue.openBlock(), vue.createElementBlock(
      "div",
      {
        class: "tui-conversation",
        onClick: $setup.handleClickConv,
        onTouchstart: $setup.handleTouchStart,
        onTouchend: $setup.handleTouchEnd
      },
      [
        vue.createVNode($setup["TUISearch"], {
          style: { "display": "none" },
          searchType: "global"
        }),
        $setup.isShowConversationHeader ? (vue.openBlock(), vue.createBlock(
          $setup["ConversationHeader"],
          {
            key: 0,
            ref: "headerRef"
          },
          null,
          512
          /* NEED_PATCH */
        )) : vue.createCommentVNode("v-if", true),
        vue.createVNode($setup["ConversationNetwork"]),
        vue.createVNode(
          $setup["ConversationList"],
          {
            ref: "conversationListDomRef",
            class: "tui-conversation-list",
            onHandleSwitchConversation: $setup.handleSwitchConversation,
            onGetPassingRef: $setup.getPassingRef
          },
          null,
          512
          /* NEED_PATCH */
        ),
        vue.createCommentVNode(' <TabBar :tabs="tabs" :currentIndex="currentTabIndex" @tab-selected="onTabSelected" /> ')
      ],
      32
      /* NEED_HYDRATION */
    );
  }
  const TUIConversation$3 = /* @__PURE__ */ _export_sfc(_sfc_main$20, [["render", _sfc_render$1$], ["__scopeId", "data-v-40b33296"], ["__file", "C:/Users/Administrator/Desktop/Project Folder/ZXHand/ZXHandwritting_APP_uniapp/TUIKit/components/TUIConversation/index.vue"]]);
  const _sfc_main$1$ = /* @__PURE__ */ vue.defineComponent({
    __name: "index1",
    props: {
      marker: { type: String, required: false }
    },
    emits: ["handleSwitchConversation", "getPassingRef"],
    setup(__props, { expose: __expose, emit: __emit }) {
      const props2 = __props;
      vue.watch(
        () => props2.marker,
        (newMarker) => {
          formatAppLog("log", "at TUIKit/components/TUIConversation/conversation-list/index1.vue:104", "Received marker:", newMarker);
        },
        { immediate: true }
      );
      const emits2 = __emit;
      const currentConversation = vue.ref();
      const currentConversationID = vue.ref();
      const currentConversationDomRect = vue.ref();
      const isShowOverlay = vue.ref(false);
      const conversationList = vue.ref([]);
      const conversationListDomRef = vue.ref();
      const conversationListInnerDomRef = vue.ref();
      const actionsMenuPosition = vue.ref({
        top: 0,
        left: void 0,
        conversationHeight: void 0
      });
      const displayOnlineStatus = vue.ref(false);
      const userOnlineStatusMap = vue.ref();
      let lastestOpenActionsMenuTime = null;
      vue.onMounted(() => {
        zt.watch(o$2.CONV, {
          currentConversationID: onCurrentConversationIDUpdated,
          conversationList: onConversationListUpdated,
          currentConversation: onCurrentConversationUpdated
        });
        zt.watch(o$2.USER, {
          displayOnlineStatus: onDisplayOnlineStatusUpdated,
          userStatusList: onUserStatusListUpdated
        });
        if (!isUniFrameWork && f && !isPC) {
          addLongPressHandler();
        }
      });
      vue.onUnmounted(() => {
        zt.unwatch(o$2.CONV, {
          currentConversationID: onCurrentConversationIDUpdated,
          conversationList: onConversationListUpdated,
          currentConversation: onCurrentConversationUpdated
        });
        zt.unwatch(o$2.USER, {
          displayOnlineStatus: onDisplayOnlineStatusUpdated,
          userStatusList: onUserStatusListUpdated
        });
      });
      const isShowUserOnlineStatus = (conversation) => {
        return displayOnlineStatus.value && conversation.type === Kt.TYPES.CONV_C2C;
      };
      const showConversationActionMenu = (event, conversation, index2, isContextMenuEvent) => {
        if (isContextMenuEvent) {
          event.preventDefault();
          if (isUniFrameWork) {
            return;
          }
        }
        currentConversation.value = conversation;
        lastestOpenActionsMenuTime = Date.now();
        getActionsMenuPosition(event, index2);
      };
      const closeConversationActionMenu = () => {
        if (lastestOpenActionsMenuTime && Date.now() - lastestOpenActionsMenuTime > 300) {
          currentConversation.value = void 0;
          isShowOverlay.value = false;
        }
      };
      const getActionsMenuPosition = (event, index2) => {
        var _a;
        if (isUniFrameWork) {
          if (typeof conversationListDomRef.value === "undefined") {
            emits2("getPassingRef", conversationListDomRef);
          }
          const query = i == null ? void 0 : i.createSelectorQuery().in(
            conversationListDomRef.value
          );
          query.select(`#convlistitem-${index2}`).boundingClientRect((data) => {
            if (data) {
              actionsMenuPosition.value = {
                // The uni-page-head of uni-h5 is not considered a member of the viewport, so the height of the head is manually increased.
                top: data.bottom + (isH5 ? 44 : 0),
                // @ts-expect-error in uniapp event has touches property
                left: event.touches[0].pageX,
                conversationHeight: data.height
              };
              isShowOverlay.value = true;
            }
          }).exec();
        } else {
          const rect = ((_a = event.currentTarget || event.target) == null ? void 0 : _a.getBoundingClientRect()) || {};
          if (rect) {
            actionsMenuPosition.value = {
              top: rect.bottom,
              left: isPC ? event.clientX : void 0,
              conversationHeight: rect.height
            };
          }
          isShowOverlay.value = true;
        }
      };
      const enterConversationChat = (conversationID) => {
        emits2("handleSwitchConversation", conversationID);
        Wt.switchConversation(conversationID);
      };
      function addLongPressHandler() {
        if (!conversationListInnerDomRef.value) {
          return;
        }
        I({
          element: conversationListInnerDomRef.value,
          onLongPress: (event, target) => {
            const index2 = Array.from(conversationListInnerDomRef.value.children).indexOf(target);
            showConversationActionMenu(event, conversationList.value[index2], index2);
          },
          options: {
            eventDelegation: {
              subSelector: ".tui-conversation-content"
            }
          }
        });
      }
      function onCurrentConversationUpdated(conversation) {
        currentConversation.value = conversation;
      }
      function onConversationListUpdated(list) {
        formatAppLog("log", "at TUIKit/components/TUIConversation/conversation-list/index1.vue:264", "++++++++++++++++++++++++", list);
        conversationList.value = [];
        list.forEach((conversation) => {
          if (conversation.type === "GROUP") {
            conversationList.value.push(conversation);
          }
        });
      }
      function onCurrentConversationIDUpdated(id) {
        currentConversationID.value = id;
      }
      function onDisplayOnlineStatusUpdated(status) {
        displayOnlineStatus.value = status;
      }
      function onUserStatusListUpdated(list) {
        if (list.size !== 0) {
          userOnlineStatusMap.value = [...list.entries()].reduce(
            (obj, [key, value]) => {
              obj[key] = value;
              return obj;
            },
            {}
          );
        }
      }
      __expose({ closeChildren: closeConversationActionMenu });
      const __returned__ = { props: props2, emits: emits2, currentConversation, currentConversationID, currentConversationDomRect, isShowOverlay, conversationList, conversationListDomRef, conversationListInnerDomRef, actionsMenuPosition, displayOnlineStatus, userOnlineStatusMap, get lastestOpenActionsMenuTime() {
        return lastestOpenActionsMenuTime;
      }, set lastestOpenActionsMenuTime(v2) {
        lastestOpenActionsMenuTime = v2;
      }, isShowUserOnlineStatus, showConversationActionMenu, closeConversationActionMenu, getActionsMenuPosition, enterConversationChat, addLongPressHandler, onCurrentConversationUpdated, onConversationListUpdated, onCurrentConversationIDUpdated, onDisplayOnlineStatusUpdated, onUserStatusListUpdated, get TUITranslateService() {
        return Jt;
      }, Icon: Icon$1, Avatar, ActionsMenu, get muteIcon() {
        return muteIcon;
      }, get isPC() {
        return isPC;
      }, get isMobile() {
        return isMobile;
      } };
      Object.defineProperty(__returned__, "__isScriptSetup", { enumerable: false, value: true });
      return __returned__;
    }
  });
  function _sfc_render$1_(_ctx, _cache, $props, $setup, $data, $options) {
    return vue.openBlock(), vue.createElementBlock("div", null, [
      $setup.conversationList.length > 0 ? (vue.openBlock(), vue.createElementBlock(
        "div",
        {
          key: 0,
          ref: "conversationListInnerDomRef",
          class: "tui-conversation-list"
        },
        [
          $setup.isShowOverlay ? (vue.openBlock(), vue.createBlock($setup["ActionsMenu"], {
            key: 0,
            selectedConversation: $setup.currentConversation,
            actionsMenuPosition: $setup.actionsMenuPosition,
            selectedConversationDomRect: $setup.currentConversationDomRect,
            onCloseConversationActionMenu: $setup.closeConversationActionMenu
          }, null, 8, ["selectedConversation", "actionsMenuPosition", "selectedConversationDomRect"])) : vue.createCommentVNode("v-if", true),
          (vue.openBlock(true), vue.createElementBlock(
            vue.Fragment,
            null,
            vue.renderList($setup.conversationList, (conversation, index2) => {
              return vue.openBlock(), vue.createElementBlock("div", {
                id: `convlistitem-${index2}`,
                key: index2,
                class: vue.normalizeClass([
                  "tui-conversation-content",
                  $setup.isMobile && "tui-conversation-content-h5 disable-select"
                ])
              }, [
                vue.createElementVNode("div", {
                  style: { "padding": "12px 0!important" },
                  class: vue.normalizeClass([
                    $setup.isPC && "isPC",
                    "tui-conversation-item",
                    $setup.currentConversationID === conversation.conversationID && "tui-conversation-item-selected",
                    conversation.isPinned && "tui-conversation-item-pinned"
                  ]),
                  onClick: ($event) => $setup.enterConversationChat(conversation.conversationID),
                  onLongpress: ($event) => $setup.showConversationActionMenu($event, conversation, index2),
                  onContextmenu: ($event) => $setup.showConversationActionMenu($event, conversation, index2, true)
                }, [
                  vue.createElementVNode("aside", { class: "left" }, [
                    vue.createVNode($setup["Avatar"], {
                      useSkeletonAnimation: "",
                      url: conversation.getAvatar(),
                      size: "30px"
                    }, null, 8, ["url"]),
                    $setup.userOnlineStatusMap && $setup.isShowUserOnlineStatus(conversation) ? (vue.openBlock(), vue.createElementBlock(
                      "div",
                      {
                        key: 0,
                        class: vue.normalizeClass([
                          "online-status",
                          Object.keys($setup.userOnlineStatusMap).length > 0 && Object.keys($setup.userOnlineStatusMap).includes(
                            conversation.userProfile.userID
                          ) && $setup.userOnlineStatusMap[conversation.userProfile.userID].statusType === 1 ? "online-status-online" : "online-status-offline"
                        ])
                      },
                      null,
                      2
                      /* CLASS */
                    )) : vue.createCommentVNode("v-if", true),
                    conversation.unreadCount > 0 && !conversation.isMuted ? (vue.openBlock(), vue.createElementBlock(
                      "span",
                      {
                        key: 1,
                        class: "num"
                      },
                      vue.toDisplayString(conversation.unreadCount > 99 ? "99+" : conversation.unreadCount),
                      1
                      /* TEXT */
                    )) : vue.createCommentVNode("v-if", true),
                    conversation.unreadCount > 0 && conversation.isMuted ? (vue.openBlock(), vue.createElementBlock("span", {
                      key: 2,
                      class: "num-notify"
                    })) : vue.createCommentVNode("v-if", true)
                  ]),
                  vue.createElementVNode("div", { class: "content" }, [
                    vue.createElementVNode("div", {
                      style: { "margin-left": "10px" },
                      class: "content-header"
                    }, [
                      vue.createElementVNode("label", { class: "content-header-label" }, [
                        vue.createElementVNode(
                          "p",
                          { class: "name" },
                          vue.toDisplayString(conversation.getShowName()),
                          1
                          /* TEXT */
                        )
                      ]),
                      vue.createElementVNode("div", { class: "middle-box" }, [
                        conversation.draftText && conversation.conversationID !== $setup.currentConversationID ? (vue.openBlock(), vue.createElementBlock(
                          "span",
                          {
                            key: 0,
                            class: "middle-box-draft"
                          },
                          vue.toDisplayString($setup.TUITranslateService.t("TUIChat.[草稿]")),
                          1
                          /* TEXT */
                        )) : conversation.type === "GROUP" && conversation.groupAtInfoList && conversation.groupAtInfoList.length > 0 ? (vue.openBlock(), vue.createElementBlock(
                          "span",
                          {
                            key: 1,
                            class: "middle-box-at"
                          },
                          vue.toDisplayString(conversation.getGroupAtInfo()),
                          1
                          /* TEXT */
                        )) : vue.createCommentVNode("v-if", true),
                        vue.createElementVNode(
                          "div",
                          { class: "middle-box-content" },
                          vue.toDisplayString(conversation.getLastMessage("text")),
                          1
                          /* TEXT */
                        )
                      ])
                    ]),
                    vue.createElementVNode("div", { class: "content-footer" }, [
                      vue.createElementVNode(
                        "span",
                        { class: "time" },
                        vue.toDisplayString(conversation.getLastMessage("time")),
                        1
                        /* TEXT */
                      ),
                      conversation.isMuted ? (vue.openBlock(), vue.createBlock($setup["Icon"], {
                        key: 0,
                        file: $setup.muteIcon
                      }, null, 8, ["file"])) : vue.createCommentVNode("v-if", true)
                    ])
                  ])
                ], 42, ["onClick", "onLongpress", "onContextmenu"])
              ], 10, ["id"]);
            }),
            128
            /* KEYED_FRAGMENT */
          ))
        ],
        512
        /* NEED_PATCH */
      )) : (vue.openBlock(), vue.createElementBlock("div", {
        key: 1,
        class: "kong",
        style: { "display": "flex", "justify-content": "center", "align-items": "center", "height": "100vh" }
      }, [
        vue.createElementVNode("image", {
          style: { "margin-top": "-600rpx" },
          src: _imports_0$3,
          mode: "aspectFit"
        })
      ]))
    ]);
  }
  const ConversationList = /* @__PURE__ */ _export_sfc(_sfc_main$1$, [["render", _sfc_render$1_], ["__scopeId", "data-v-7408ec9a"], ["__file", "C:/Users/Administrator/Desktop/Project Folder/ZXHand/ZXHandwritting_APP_uniapp/TUIKit/components/TUIConversation/conversation-list/index1.vue"]]);
  const _sfc_main$1_ = /* @__PURE__ */ vue.defineComponent({
    __name: "index1",
    emits: [
      "handleSwitchConversation",
      "updateConversationListLength"
    ],
    setup(__props, { expose: __expose, emit: __emit }) {
      __expose();
      const emits2 = __emit;
      const totalUnreadCount = vue.ref(0);
      const headerRef = vue.ref();
      const conversationListDomRef = vue.ref();
      const touchX = vue.ref(0);
      const touchY = vue.ref(0);
      const isShowConversationHeader = vue.ref(true);
      const currentTabIndex = vue.ref(0);
      zt.watch(o$2.CONV, {
        totalUnreadCount: (count) => {
          totalUnreadCount.value = count;
        }
      });
      zt.watch(o$2.CUSTOM, {
        isShowConversationHeader: (showStatus) => {
          isShowConversationHeader.value = showStatus !== false;
        }
      });
      const updateParentWithLength = () => {
        var _a, _b;
        const length = ((_b = (_a = conversationListDomRef.value) == null ? void 0 : _a.items) == null ? void 0 : _b.length) || 0;
        formatAppLog("log", "at TUIKit/components/TUIConversation/index1.vue:53", "++++", length);
        emits2("updateConversationListLength", length);
      };
      vue.onMounted(() => {
        updateParentWithLength();
      });
      vue.watch(conversationListDomRef, () => {
        updateParentWithLength();
      });
      const handleSwitchConversation = (conversationID) => {
        i == null ? void 0 : i.navigateTo({
          url: "/TUIKit/components/TUIChat/index"
        });
        emits2("handleSwitchConversation", conversationID);
      };
      const closeChildren = () => {
        var _a, _b;
        formatAppLog("log", "at TUIKit/components/TUIConversation/index1.vue:70", "closeChildren");
        (_a = headerRef == null ? void 0 : headerRef.value) == null ? void 0 : _a.closeChildren();
        (_b = conversationListDomRef == null ? void 0 : conversationListDomRef.value) == null ? void 0 : _b.closeChildren();
      };
      const handleClickConv = () => {
        closeChildren();
      };
      onHide(closeChildren);
      const handleTouchStart = (e2) => {
        touchX.value = e2.changedTouches[0].clientX;
        touchY.value = e2.changedTouches[0].clientY;
      };
      const handleTouchEnd = (e2) => {
        const x2 = e2.changedTouches[0].clientX;
        const y2 = e2.changedTouches[0].clientY;
        let turn = "";
        if (x2 - touchX.value > 50 && Math.abs(y2 - touchY.value) < 50) {
          turn = "right";
        } else if (x2 - touchX.value < -50 && Math.abs(y2 - touchY.value) < 50) {
          turn = "left";
        }
        if (y2 - touchY.value > 50 && Math.abs(x2 - touchX.value) < 50) {
          turn = "down";
        } else if (y2 - touchY.value < -50 && Math.abs(x2 - touchX.value) < 50) {
          turn = "up";
        }
        if (turn === "down" || turn === "up") {
          closeChildren();
        }
      };
      const onTabSelected = (index2) => {
        currentTabIndex.value = index2;
        if (index2 === 1) {
          i == null ? void 0 : i.navigateTo({
            url: "/TUIKit/components/TUIContact/index"
          });
        }
      };
      const getPassingRef = (ref2) => {
        ref2.value = conversationListDomRef.value;
        formatAppLog("log", "at TUIKit/components/TUIConversation/index1.vue:121", "-+-+-+-+-+-", ref2.value);
        formatAppLog("log", "at TUIKit/components/TUIConversation/index1.vue:122", "-+-+-+-+-+-", conversationListDomRef.value);
      };
      const __returned__ = { emits: emits2, totalUnreadCount, headerRef, conversationListDomRef, touchX, touchY, isShowConversationHeader, currentTabIndex, updateParentWithLength, handleSwitchConversation, closeChildren, handleClickConv, handleTouchStart, handleTouchEnd, onTabSelected, getPassingRef, TUISearch: TUISearch$3, ConversationList, ConversationHeader, ConversationNetwork };
      Object.defineProperty(__returned__, "__isScriptSetup", { enumerable: false, value: true });
      return __returned__;
    }
  });
  function _sfc_render$1Z(_ctx, _cache, $props, $setup, $data, $options) {
    return vue.openBlock(), vue.createElementBlock(
      "div",
      {
        class: "tui-conversation",
        onClick: $setup.handleClickConv,
        onTouchstart: $setup.handleTouchStart,
        onTouchend: $setup.handleTouchEnd
      },
      [
        vue.createVNode($setup["TUISearch"], {
          style: { "display": "none" },
          searchType: "global"
        }),
        $setup.isShowConversationHeader ? (vue.openBlock(), vue.createBlock(
          $setup["ConversationHeader"],
          {
            key: 0,
            ref: "headerRef"
          },
          null,
          512
          /* NEED_PATCH */
        )) : vue.createCommentVNode("v-if", true),
        vue.createVNode($setup["ConversationNetwork"]),
        vue.createVNode(
          $setup["ConversationList"],
          {
            ref: "conversationListDomRef",
            class: "tui-conversation-list",
            onHandleSwitchConversation: $setup.handleSwitchConversation,
            onGetPassingRef: $setup.getPassingRef
          },
          null,
          512
          /* NEED_PATCH */
        ),
        vue.createCommentVNode(' <TabBar :tabs="tabs" :currentIndex="currentTabIndex" @tab-selected="onTabSelected" /> ')
      ],
      32
      /* NEED_HYDRATION */
    );
  }
  const TUIChat1 = /* @__PURE__ */ _export_sfc(_sfc_main$1_, [["render", _sfc_render$1Z], ["__scopeId", "data-v-dc18037a"], ["__file", "C:/Users/Administrator/Desktop/Project Folder/ZXHand/ZXHandwritting_APP_uniapp/TUIKit/components/TUIConversation/index1.vue"]]);
  const _sfc_main$1Z = {
    __name: "message",
    setup(__props, { expose: __expose }) {
      __expose();
      const statusBarHeight = vue.ref();
      onLoad(() => {
        statusBarHeight.value = getApp().globalData.top;
      });
      const conversationList1 = vue.ref([
        {
          avatar: "https://lanhu.oss-cn-beijing.aliyuncs.com/SketchPngc16f5b5f9c443120840c9f3ff8028109651b9e21de9ee0d18951c54acb7132e8",
          title: "书法一班群聊",
          subtitle: "刘易阳王老师你号啊",
          time: "6-15",
          color: "#5791F2"
        },
        {
          avatar: "https://lanhu.oss-cn-beijing.aliyuncs.com/SketchPngc16f5b5f9c443120840c9f3ff8028109651b9e21de9ee0d18951c54acb7132e8",
          title: "书法二班群聊",
          subtitle: "刘易阳王老师你号啊",
          time: "6-15",
          color: "#5791F2"
        }
        // 更多假数据
      ]);
      const messagesList = vue.ref([
        {
          avatar: "https://lanhu.oss-cn-beijing.aliyuncs.com/SketchPng3c05227c15cc3e583fbe8af777d512ad3c5dd22f9540376effbda59a5f162710",
          title: "公告消息",
          subtitle: "书法比赛将在2024年7月15号开始...",
          time: "6-15",
          size: "88rpx"
        }
        // 更多假数据
      ]);
      const navigateTo = (url2) => {
        try {
          uni.navigateTo({ url: url2 });
        } catch (error2) {
          formatAppLog("error", "at pages/pagesall/home/message.vue:109", "导航失败:", error2);
          uni.showToast({ title: "导航失败，请重试", icon: "none" });
        }
      };
      const goback = () => {
        uni.switchTab({ url: "/pages/pagesall/home" });
      };
      const btnscan = () => {
        uni.scanCode({
          success: (res) => {
            formatAppLog("log", "at pages/pagesall/home/message.vue:121", "条码类型：", res.scanType);
            formatAppLog("log", "at pages/pagesall/home/message.vue:122", "条码内容：", res.result);
          },
          fail: (err) => {
            formatAppLog("error", "at pages/pagesall/home/message.vue:125", "扫码失败:", err);
            uni.showToast({
              title: "扫码失败，请重试",
              icon: "none"
            });
          }
        });
      };
      const mycode = () => navigateTo("/pages/message/mycode");
      const search = () => navigateTo("/pages/message/search");
      const messgoback = () => navigateTo("/pages/pagesall/home/adverMess");
      const goToChat = () => navigateTo("/pages/message/chat");
      const __returned__ = { statusBarHeight, conversationList1, messagesList, navigateTo, goback, btnscan, mycode, search, messgoback, goToChat, ref: vue.ref, onMounted: vue.onMounted, get MessageList() {
        return MessageList$1;
      }, TUIChat: TUIConversation$3, TUIChat1, Avatar, get onLoad() {
        return onLoad;
      } };
      Object.defineProperty(__returned__, "__isScriptSetup", { enumerable: false, value: true });
      return __returned__;
    }
  };
  function _sfc_render$1Y(_ctx, _cache, $props, $setup, $data, $options) {
    return vue.openBlock(), vue.createElementBlock("view", null, [
      vue.createElementVNode("view", { class: "container" }, [
        vue.createElementVNode(
          "view",
          {
            style: vue.normalizeStyle("height:" + ($setup.statusBarHeight + 5) + "px;")
          },
          null,
          4
          /* STYLE */
        ),
        vue.createElementVNode("view", { class: "mess_Title" }, [
          vue.createElementVNode("view", {
            class: "messImg",
            onClick: $setup.goback
          }, [
            vue.createElementVNode("img", {
              src: "https://lanhu.oss-cn-beijing.aliyuncs.com/SketchPng427bd6433cc6e0a8e82f63b3174b2c817dc9c299bd0c4414c8d258f46cf46f94",
              alt: ""
            })
          ]),
          vue.createElementVNode("view", { class: "title_text" }, " 消息 "),
          vue.createElementVNode("view", { class: "title_img" }, [
            vue.createElementVNode("img", {
              src: "https://lanhu.oss-cn-beijing.aliyuncs.com/SketchPng321758fb81a047a63eed79ffbd8a9de39b6d95d0adc9749329922655c760bb3a",
              alt: "",
              onClick: $setup.mycode
            }),
            vue.createElementVNode("img", {
              src: "https://lanhu.oss-cn-beijing.aliyuncs.com/SketchPng5e1b57899cb5b9cd47a8d4e301f4f736efd47c45ca7713a43d00721e94370714",
              alt: "",
              onClick: $setup.btnscan
            }),
            vue.createElementVNode("img", {
              src: "https://lanhu.oss-cn-beijing.aliyuncs.com/SketchPng60de4c6690251e592eeb3edf5e89b8b74e18a9d17717d9949db1edcb3fcd23bd",
              alt: "",
              onClick: $setup.search
            })
          ])
        ]),
        vue.createElementVNode("view", {
          class: "messbox",
          onClick: $setup.messgoback
        }, [
          vue.createElementVNode("view", { class: "messbox2" }, [
            vue.createElementVNode("view", { class: "messbox_img" }, [
              vue.createElementVNode("img", {
                src: "https://lanhu.oss-cn-beijing.aliyuncs.com/SketchPngd6279aab531ef9632e4b587c47bd1b290e34249129eb3b24c940e727cb528bd0",
                alt: ""
              })
            ]),
            vue.createElementVNode("view", { class: "messinter" }, [
              vue.createElementVNode("view", { class: "inter_text1" }, " 公告消息 "),
              vue.createElementVNode("view", { class: "inter_text2" }, " 书法比赛将在2024年7月15号开始… ")
            ])
          ]),
          vue.createElementVNode("text", { class: "inter_text3" }, "6-15")
        ]),
        vue.createCommentVNode(' <MessageList :messages="messages" @click="goToChat" /> '),
        vue.createElementVNode("view", {
          class: "group_group",
          style: { "height": "130rpx" }
        }, [
          vue.createVNode($setup["TUIChat1"])
        ])
      ]),
      vue.createElementVNode("view", { style: { "width": "100%", "height": "16rpx", "background": "#eeeeee" } }),
      vue.createElementVNode("view", { class: "container" }, [
        vue.createCommentVNode(' <MessageList :messages="messagesList" /> '),
        vue.createVNode($setup["TUIChat"])
      ])
    ]);
  }
  const PagesPagesallHomeMessage = /* @__PURE__ */ _export_sfc(_sfc_main$1Z, [["render", _sfc_render$1Y], ["__scopeId", "data-v-48451ebb"], ["__file", "C:/Users/Administrator/Desktop/Project Folder/ZXHand/ZXHandwritting_APP_uniapp/pages/pagesall/home/message.vue"]]);
  const selectedIcon = "/assets/selected.0a1e59e6.svg";
  const backSVG = "/assets/back.e9626a2e.svg";
  const cancelIcon = "/assets/cancel.aba36dc1.svg";
  const _sfc_main$1Y = /* @__PURE__ */ vue.defineComponent({
    __name: "index",
    props: {
      list: {
        type: Array,
        default: () => []
      },
      selectedList: {
        type: Array,
        default: () => []
      },
      isSearch: {
        type: Boolean,
        default: true
      },
      isRadio: {
        type: Boolean,
        default: false
      },
      isCustomItem: {
        type: Boolean,
        default: false
      },
      title: {
        type: String,
        default: ""
      },
      type: {
        type: String,
        default: ""
      },
      resultShow: {
        type: Boolean,
        default: true
      },
      total: {
        type: Number,
        default: 0
      },
      isHiddenBackIcon: {
        type: Boolean,
        default: false
      }
    },
    emits: ["search", "submit", "cancel", "getMore"],
    setup(__props, { expose: __expose, emit: __emit }) {
      __expose();
      const props2 = __props;
      const transferList = vue.ref([]);
      const transferTotal = vue.ref(0);
      const transferSelectedList = vue.ref([]);
      const isTransferSearch = vue.ref(true);
      const isTransferCustomItem = vue.ref(false);
      const transferTitle = vue.ref("");
      const searchValue = vue.ref("");
      vue.watchEffect(() => {
        if (props2.isCustomItem) {
          for (let index2 = 0; index2 < props2.list.length; index2++) {
            if (props2.list[index2].conversationID.indexOf("@TIM#SYSTEM") > -1) {
              props2.list.splice(index2, 1);
            }
            transferList.value = props2.list;
          }
        } else {
          transferList.value = props2.list;
        }
        transferTotal.value = props2.total ? props2.total : props2.list.length;
        transferSelectedList.value = props2.selectedList && props2.selectedList.length > 0 ? props2.selectedList : transferSelectedList.value;
        isTransferSearch.value = props2.isSearch;
        isTransferCustomItem.value = props2.isCustomItem;
        transferTitle.value = props2.title;
      });
      const emit = __emit;
      const optional = vue.computed(
        () => transferList.value.filter((item) => !item.isDisabled)
      );
      const handleInput = (e2) => {
        searchValue.value = e2.target.value || e2.detail.value;
        emit("search", searchValue.value);
      };
      const selected = (item) => {
        if (item.isDisabled) {
          return;
        }
        let list = transferSelectedList.value;
        const index2 = list.indexOf(item);
        if (index2 > -1) {
          return transferSelectedList.value.splice(index2, 1);
        }
        if (props2.isRadio) {
          list = [];
        }
        list.push(item);
        transferSelectedList.value = list;
      };
      const selectedAll = () => {
        if (transferSelectedList.value.length === optional.value.length) {
          transferSelectedList.value = [];
        } else {
          transferSelectedList.value = [...optional.value];
        }
      };
      const submit = () => {
        emit("submit", transferSelectedList.value);
        searchValue.value = "";
      };
      const cancel = () => {
        emit("cancel");
        searchValue.value = "";
      };
      const getMore = () => {
        emit("getMore");
      };
      const __returned__ = { props: props2, transferList, transferTotal, transferSelectedList, isTransferSearch, isTransferCustomItem, transferTitle, searchValue, emit, optional, handleInput, selected, selectedAll, submit, cancel, getMore, get TUITranslateService() {
        return Jt;
      }, Icon: Icon$1, get selectedIcon() {
        return selectedIcon;
      }, get backIcon() {
        return backSVG;
      }, get cancelIcon() {
        return cancelIcon;
      }, get isPC() {
        return isPC;
      }, get isUniFrameWork() {
        return isUniFrameWork;
      }, get isWeChat() {
        return isWeChat;
      } };
      Object.defineProperty(__returned__, "__isScriptSetup", { enumerable: false, value: true });
      return __returned__;
    }
  });
  function _sfc_render$1X(_ctx, _cache, $props, $setup, $data, $options) {
    return vue.openBlock(), vue.createElementBlock(
      "div",
      {
        class: vue.normalizeClass(["transfer", [!$setup.isPC ? "transfer-h5" : "", $setup.isWeChat ? "transfer-h5-wechat" : ""]])
      },
      [
        !$setup.isPC ? (vue.openBlock(), vue.createElementBlock("header", {
          key: 0,
          class: "transfer-header transfer-h5-header"
        }, [
          !$setup.props.isHiddenBackIcon ? (vue.openBlock(), vue.createElementBlock("div", {
            key: 0,
            onClick: $setup.cancel
          }, [
            vue.createVNode($setup["Icon"], {
              class: "icon",
              file: $setup.backIcon,
              width: "18px",
              height: "18px"
            }, null, 8, ["file"])
          ])) : vue.createCommentVNode("v-if", true),
          vue.createElementVNode(
            "span",
            { class: "title" },
            vue.toDisplayString($setup.transferTitle),
            1
            /* TEXT */
          ),
          vue.createElementVNode("span", { class: "space" })
        ])) : vue.createCommentVNode("v-if", true),
        vue.createElementVNode("main", { class: "main" }, [
          vue.createElementVNode("div", { class: "left" }, [
            vue.createElementVNode("header", { class: "transfer-header" }, [
              vue.createCommentVNode(" PC triggers @keyup.enter "),
              $setup.isPC && $setup.isTransferSearch ? (vue.openBlock(), vue.createElementBlock("input", {
                key: 0,
                type: "text",
                value: $setup.searchValue,
                placeholder: $setup.TUITranslateService.t("component.请输入userID"),
                enterkeyhint: "search",
                class: vue.normalizeClass([$setup.isUniFrameWork ? "left-uniapp-input" : ""]),
                onKeyup: vue.withKeys($setup.handleInput, ["enter"])
              }, null, 42, ["value", "placeholder"])) : vue.createCommentVNode("v-if", true),
              vue.createCommentVNode(" not PC triggers blur "),
              !$setup.isPC && $setup.isTransferSearch ? (vue.openBlock(), vue.createElementBlock("input", {
                key: 1,
                type: "text",
                placeholder: $setup.TUITranslateService.t("component.请输入userID"),
                enterkeyhint: "search",
                value: $setup.searchValue,
                class: vue.normalizeClass([$setup.isUniFrameWork ? "left-uniapp-input" : ""]),
                onBlur: $setup.handleInput,
                onConfirm: $setup.handleInput
              }, null, 42, ["placeholder", "value"])) : vue.createCommentVNode("v-if", true)
            ]),
            vue.createElementVNode("main", { class: "transfer-left-main" }, [
              vue.createElementVNode("ul", { class: "transfer-list" }, [
                $setup.optional.length > 1 && !$props.isRadio ? (vue.openBlock(), vue.createElementBlock("li", {
                  key: 0,
                  class: "transfer-list-item",
                  onClick: $setup.selectedAll
                }, [
                  $setup.transferSelectedList.length === $setup.optional.length ? (vue.openBlock(), vue.createBlock($setup["Icon"], {
                    key: 0,
                    file: $setup.selectedIcon,
                    width: "18px",
                    height: "18px"
                  }, null, 8, ["file"])) : (vue.openBlock(), vue.createElementBlock("i", {
                    key: 1,
                    class: "icon-unselected"
                  })),
                  vue.createElementVNode(
                    "span",
                    { class: "select-all" },
                    vue.toDisplayString($setup.TUITranslateService.t("component.全选")),
                    1
                    /* TEXT */
                  )
                ])) : vue.createCommentVNode("v-if", true),
                (vue.openBlock(true), vue.createElementBlock(
                  vue.Fragment,
                  null,
                  vue.renderList($setup.transferList, (item) => {
                    return vue.openBlock(), vue.createElementBlock("li", {
                      key: item.userID,
                      class: "transfer-list-item",
                      onClick: ($event) => $setup.selected(item)
                    }, [
                      $setup.transferSelectedList.indexOf(item) > -1 ? (vue.openBlock(), vue.createBlock($setup["Icon"], {
                        key: 0,
                        file: $setup.selectedIcon,
                        class: vue.normalizeClass([item.isDisabled && "disabled"]),
                        width: "18px",
                        height: "18px"
                      }, null, 8, ["file", "class"])) : (vue.openBlock(), vue.createElementBlock(
                        "i",
                        {
                          key: 1,
                          class: vue.normalizeClass([item.isDisabled && "disabled", "icon-unselected"])
                        },
                        null,
                        2
                        /* CLASS */
                      )),
                      !$setup.isTransferCustomItem ? (vue.openBlock(), vue.createElementBlock(
                        vue.Fragment,
                        { key: 2 },
                        [
                          vue.createElementVNode("img", {
                            class: "avatar",
                            src: item.avatar || "https://web.sdk.qcloud.com/component/TUIKit/assets/avatar_21.png",
                            onerror: "this.onerror=null;this.src='https://web.sdk.qcloud.com/component/TUIKit/assets/avatar_21.png'"
                          }, null, 8, ["src"]),
                          vue.createElementVNode(
                            "span",
                            { class: "name" },
                            vue.toDisplayString(item.nick || item.userID),
                            1
                            /* TEXT */
                          ),
                          item.isDisabled ? (vue.openBlock(), vue.createElementBlock(
                            "span",
                            { key: 0 },
                            "（" + vue.toDisplayString($setup.TUITranslateService.t("component.已在群中")) + "）",
                            1
                            /* TEXT */
                          )) : vue.createCommentVNode("v-if", true)
                        ],
                        64
                        /* STABLE_FRAGMENT */
                      )) : vue.renderSlot(_ctx.$slots, "left", {
                        key: 3,
                        data: item
                      }, void 0, true)
                    ], 8, ["onClick"]);
                  }),
                  128
                  /* KEYED_FRAGMENT */
                )),
                $setup.transferTotal > $setup.transferList.length ? (vue.openBlock(), vue.createElementBlock(
                  "li",
                  {
                    key: 1,
                    class: "transfer-list-item more",
                    onClick: $setup.getMore
                  },
                  vue.toDisplayString($setup.TUITranslateService.t("component.查看更多")),
                  1
                  /* TEXT */
                )) : vue.createCommentVNode("v-if", true)
              ])
            ])
          ]),
          vue.createElementVNode("div", { class: "right" }, [
            $setup.isPC ? (vue.openBlock(), vue.createElementBlock(
              "header",
              {
                key: 0,
                class: "transfer-header"
              },
              vue.toDisplayString($setup.transferTitle),
              1
              /* TEXT */
            )) : vue.createCommentVNode("v-if", true),
            $props.resultShow ? (vue.openBlock(), vue.createElementBlock("ul", {
              key: 1,
              class: "transfer-list"
            }, [
              $setup.transferSelectedList.length > 0 && $setup.isPC ? (vue.openBlock(), vue.createElementBlock(
                "p",
                {
                  key: 0,
                  class: "transfer-text"
                },
                vue.toDisplayString($setup.TUITranslateService.t("component.已选中")) + vue.toDisplayString($setup.transferSelectedList.length) + vue.toDisplayString($setup.TUITranslateService.t("component.人")),
                1
                /* TEXT */
              )) : vue.createCommentVNode("v-if", true),
              (vue.openBlock(true), vue.createElementBlock(
                vue.Fragment,
                null,
                vue.renderList($setup.transferSelectedList, (item, index2) => {
                  return vue.openBlock(), vue.createElementBlock("li", {
                    key: index2,
                    class: "transfer-list-item space-between"
                  }, [
                    vue.createElementVNode("aside", { class: "transfer-list-item-content" }, [
                      !$setup.isTransferCustomItem ? (vue.openBlock(), vue.createElementBlock(
                        vue.Fragment,
                        { key: 0 },
                        [
                          vue.createElementVNode("img", {
                            class: "avatar",
                            src: item.avatar || "https://web.sdk.qcloud.com/component/TUIKit/assets/avatar_21.png",
                            onerror: "this.onerror=null;this.src='https://web.sdk.qcloud.com/component/TUIKit/assets/avatar_21.png'"
                          }, null, 8, ["src"]),
                          $setup.isPC ? (vue.openBlock(), vue.createElementBlock(
                            "span",
                            {
                              key: 0,
                              class: "name"
                            },
                            vue.toDisplayString(item.nick || item.userID),
                            1
                            /* TEXT */
                          )) : vue.createCommentVNode("v-if", true)
                        ],
                        64
                        /* STABLE_FRAGMENT */
                      )) : vue.renderSlot(_ctx.$slots, "right", {
                        key: 1,
                        data: item
                      }, void 0, true)
                    ]),
                    $setup.isPC ? (vue.openBlock(), vue.createElementBlock("span", {
                      key: 0,
                      onClick: ($event) => $setup.selected(item)
                    }, [
                      vue.createVNode($setup["Icon"], {
                        file: $setup.cancelIcon,
                        width: "18px",
                        height: "18px"
                      }, null, 8, ["file"])
                    ], 8, ["onClick"])) : vue.createCommentVNode("v-if", true)
                  ]);
                }),
                128
                /* KEYED_FRAGMENT */
              ))
            ])) : vue.createCommentVNode("v-if", true),
            vue.createElementVNode("footer", { class: "transfer-right-footer" }, [
              vue.createElementVNode(
                "button",
                {
                  class: "btn btn-cancel",
                  onClick: $setup.cancel
                },
                vue.toDisplayString($setup.TUITranslateService.t("component.取消")),
                1
                /* TEXT */
              ),
              $setup.transferSelectedList.length > 0 ? (vue.openBlock(), vue.createElementBlock(
                "button",
                {
                  key: 0,
                  class: "btn",
                  onClick: $setup.submit
                },
                vue.toDisplayString($setup.TUITranslateService.t("component.完成")),
                1
                /* TEXT */
              )) : (vue.openBlock(), vue.createElementBlock(
                "button",
                {
                  key: 1,
                  class: "btn btn-no",
                  onClick: $setup.submit
                },
                vue.toDisplayString($setup.TUITranslateService.t("component.完成")),
                1
                /* TEXT */
              ))
            ])
          ])
        ])
      ],
      2
      /* CLASS */
    );
  }
  const Transfer = /* @__PURE__ */ _export_sfc(_sfc_main$1Y, [["render", _sfc_render$1X], ["__scopeId", "data-v-01b74c91"], ["__file", "C:/Users/Administrator/Desktop/Project Folder/ZXHand/ZXHandwritting_APP_uniapp/TUIKit/components/common/Transfer/index.vue"]]);
  const _sfc_main$1X = /* @__PURE__ */ vue.defineComponent({
    __name: "index",
    props: {
      isRadio: {
        type: Boolean,
        default: false
      },
      isNeedSearch: {
        type: Boolean,
        default: false
      },
      title: {
        type: String,
        default: ""
      },
      userList: {
        type: Array,
        default: () => []
      },
      total: {
        type: Number,
        default: 0
      }
    },
    emits: ["complete", "search", "getMore"],
    setup(__props, { expose: __expose, emit: __emit }) {
      __expose();
      const emits2 = __emit;
      const props2 = __props;
      const reset = () => {
        emits2("complete", []);
      };
      const submit = (dataList) => {
        emits2("complete", dataList);
      };
      const handleSearchUser = (userID) => {
        emits2("search", userID);
      };
      const handleGetMore = () => {
        emits2("getMore");
      };
      const __returned__ = { emits: emits2, props: props2, reset, submit, handleSearchUser, handleGetMore, get isPC() {
        return isPC;
      }, Dialog, Transfer };
      Object.defineProperty(__returned__, "__isScriptSetup", { enumerable: false, value: true });
      return __returned__;
    }
  });
  function _sfc_render$1W(_ctx, _cache, $props, $setup, $data, $options) {
    return vue.openBlock(), vue.createBlock($setup["Dialog"], {
      show: true,
      isH5: !$setup.isPC,
      isHeaderShow: false,
      isFooterShow: false,
      background: false,
      "onUpdate:show": $setup.reset
    }, {
      default: vue.withCtx(() => [
        vue.createVNode($setup["Transfer"], {
          isSearch: $setup.props.isNeedSearch,
          title: $setup.props.title,
          list: $setup.props.userList,
          isH5: !$setup.isPC,
          isRadio: $setup.props.isRadio,
          total: $setup.props.total,
          onGetMore: $setup.handleGetMore,
          onSearch: $setup.handleSearchUser,
          onSubmit: $setup.submit,
          onCancel: $setup.reset
        }, null, 8, ["isSearch", "title", "list", "isH5", "isRadio", "total"])
      ]),
      _: 1
      /* STABLE */
    }, 8, ["isH5"]);
  }
  const SelectUser = /* @__PURE__ */ _export_sfc(_sfc_main$1X, [["render", _sfc_render$1W], ["__file", "C:/Users/Administrator/Desktop/Project Folder/ZXHand/ZXHandwritting_APP_uniapp/TUIKit/components/common/SelectUser/index.vue"]]);
  class TUIContactServer {
    constructor() {
      R$1.registerService(E$1.TUIContact.SERVICE.NAME, this);
      this.onCallParamsMap = /* @__PURE__ */ new Map();
      this.onCallCallbackMap = /* @__PURE__ */ new Map();
      this.constants = E$1;
    }
    static getInstance() {
      if (!TUIContactServer.instance) {
        TUIContactServer.instance = new TUIContactServer();
      }
      return TUIContactServer.instance;
    }
    getOnCallParams(method) {
      return this.onCallParamsMap.get(method);
    }
    getOnCallCallback(method) {
      return this.onCallCallbackMap.get(method);
    }
    async onCall(method, params, callback) {
      this.onCallParamsMap.set(method, params);
      this.onCallCallbackMap.set(method, callback);
      if (method === E$1.TUIContact.SERVICE.METHOD.SELECT_FRIEND) {
        zt.update(o$2.CUSTOM, "isShowSelectFriendComponent", true);
        isUniFrameWork && (i == null ? void 0 : i.reLaunch({
          url: "/TUIKit/components/TUIContact/index"
        }));
      }
    }
  }
  const _sfc_main$1W = /* @__PURE__ */ vue.defineComponent({
    __name: "index",
    setup(__props, { expose: __expose }) {
      __expose();
      const TUIContactServer$1 = TUIContactServer.getInstance();
      const TUIConstants = TUIContactServer$1.constants;
      const needSearch = vue.ref(false);
      const friendList = vue.ref([]);
      const userList = vue.ref([]);
      const TUISearchServer2 = vue.ref(null);
      const selectOptions = vue.ref({
        isRadio: false,
        isNeedSearch: false,
        title: ""
      });
      const generateSearchServer = (isNeedSearch) => {
        TUISearchServer2.value = R$1.getService(TUIConstants.TUISearch.SERVICE.NAME);
        if (TUISearchServer2.value) {
          needSearch.value = isNeedSearch;
        } else {
          formatAppLog("warn", "at TUIKit/components/TUIContact/select-friend/index.vue:35", "请添加 TUISearch 组件");
        }
      };
      vue.watchEffect(() => {
        const params = TUIContactServer$1.getOnCallParams(TUIConstants.TUIContact.SERVICE.METHOD.SELECT_FRIEND);
        selectOptions.value.title = params.title;
        selectOptions.value.isRadio = params.isRadio;
        selectOptions.value.isNeedSearch = params.isNeedSearch;
        if (params.isNeedSearch) {
          generateSearchServer(params.isNeedSearch);
        }
        es.getFriendList().then((res) => {
          friendList.value = res.data.map((item) => item.profile);
          userList.value = friendList.value;
        }).catch((err) => {
          formatAppLog("warn", "at TUIKit/components/TUIContact/select-friend/index.vue:51", "getFriendList error:", err);
        });
      });
      const handleSelectedResult = (memberList) => {
        zt.update(o$2.CUSTOM, "isShowSelectFriendComponent", false);
        const callback = TUIContactServer$1.getOnCallCallback(TUIConstants.TUIContact.SERVICE.METHOD.SELECT_FRIEND);
        callback && callback(memberList);
      };
      const searchFail = () => {
        Toast({
          message: Jt.t("TUIGroup.该用户不存在"),
          type: TOAST_TYPE.ERROR
        });
        userList.value = [...friendList.value];
      };
      const handleSearch = async (val) => {
        if (!val) {
          return userList.value = friendList.value;
        }
        try {
          const imResponse = await TUISearchServer2.value.searchUser(val);
          if (!imResponse.data[0]) {
            return searchFail();
          }
          userList.value = imResponse.data;
          const searchAllResult = friendList.value.filter((item) => item.userID === imResponse.data[0].userID);
          friendList.value = searchAllResult.length ? friendList.value : [...friendList.value, ...userList.value];
        } catch (error2) {
          return searchFail();
        }
      };
      const __returned__ = { TUIContactServer: TUIContactServer$1, TUIConstants, needSearch, friendList, userList, TUISearchServer: TUISearchServer2, selectOptions, generateSearchServer, handleSelectedResult, searchFail, handleSearch, SelectUser };
      Object.defineProperty(__returned__, "__isScriptSetup", { enumerable: false, value: true });
      return __returned__;
    }
  });
  function _sfc_render$1V(_ctx, _cache, $props, $setup, $data, $options) {
    return vue.openBlock(), vue.createBlock($setup["SelectUser"], {
      isRadio: $setup.selectOptions.isRadio,
      isNeedSearch: $setup.selectOptions.isNeedSearch,
      title: $setup.selectOptions.title,
      userList: $setup.userList,
      onSearch: $setup.handleSearch,
      onComplete: $setup.handleSelectedResult
    }, null, 8, ["isRadio", "isNeedSearch", "title", "userList"]);
  }
  const SelectFriend = /* @__PURE__ */ _export_sfc(_sfc_main$1W, [["render", _sfc_render$1V], ["__file", "C:/Users/Administrator/Desktop/Project Folder/ZXHand/ZXHandwritting_APP_uniapp/TUIKit/components/TUIContact/select-friend/index.vue"]]);
  const FUNC_ERROR_TEXT = "Expected a function";
  function throttle(func2, wait, options) {
    let leading = true, trailing = true;
    if (typeof func2 != "function") {
      throw new TypeError(FUNC_ERROR_TEXT);
    }
    if (options && isObject$1(options)) {
      leading = "leading" in options ? !!options.leading : leading;
      trailing = "trailing" in options ? !!options.trailing : trailing;
    }
    return debounce(func2, wait, {
      leading,
      maxWait: wait,
      trailing
    });
  }
  function debounce(func2, wait, options) {
    let lastArgs, lastThis, maxWait, result, timerId, lastCallTime, lastInvokeTime = 0, leading = false, maxing = false, trailing = true;
    if (typeof func2 != "function") {
      throw new TypeError(FUNC_ERROR_TEXT);
    }
    wait = wait || 0;
    if (options && isObject$1(options)) {
      leading = !!options.leading;
      maxing = "maxWait" in options;
      maxWait = maxing ? Math.max(options.maxWait || 0, wait) : maxWait;
      trailing = "trailing" in options ? !!options.trailing : trailing;
    }
    function invokeFunc(time2) {
      const args = lastArgs, thisArg = lastThis;
      lastArgs = lastThis = void 0;
      lastInvokeTime = time2;
      result = func2.apply(thisArg, args);
      return result;
    }
    function leadingEdge(time2) {
      lastInvokeTime = time2;
      timerId = setTimeout(timerExpired, wait);
      return leading ? invokeFunc(time2) : result;
    }
    function remainingWait(time2) {
      const timeSinceLastCall = time2 - lastCallTime, timeSinceLastInvoke = time2 - lastInvokeTime, timeWaiting = wait - timeSinceLastCall;
      return maxing ? Math.min(timeWaiting, maxWait - timeSinceLastInvoke) : timeWaiting;
    }
    function shouldInvoke(time2) {
      const timeSinceLastCall = time2 - lastCallTime, timeSinceLastInvoke = time2 - lastInvokeTime;
      return lastCallTime === void 0 || timeSinceLastCall >= wait || timeSinceLastCall < 0 || maxing && timeSinceLastInvoke >= maxWait;
    }
    function timerExpired() {
      const time2 = Date.now();
      if (shouldInvoke(time2)) {
        return trailingEdge(time2);
      }
      timerId = setTimeout(timerExpired, remainingWait(time2));
    }
    function trailingEdge(time2) {
      timerId = void 0;
      if (trailing && lastArgs) {
        return invokeFunc(time2);
      }
      lastArgs = lastThis = void 0;
      return result;
    }
    function cancel() {
      if (timerId !== void 0) {
        clearTimeout(timerId);
      }
      lastInvokeTime = 0;
      lastArgs = lastCallTime = lastThis = timerId = void 0;
    }
    function flush() {
      return timerId === void 0 ? result : trailingEdge(Date.now());
    }
    function debounced() {
      const time2 = Date.now(), isInvoking = shouldInvoke(time2);
      lastArgs = arguments;
      lastThis = this;
      lastCallTime = time2;
      if (isInvoking) {
        if (timerId === void 0) {
          return leadingEdge(lastCallTime);
        }
        if (maxing) {
          clearTimeout(timerId);
          timerId = setTimeout(timerExpired, wait);
          return invokeFunc(lastCallTime);
        }
      }
      if (timerId === void 0) {
        timerId = setTimeout(timerExpired, wait);
      }
      return result;
    }
    debounced.cancel = cancel;
    debounced.flush = flush;
    return debounced;
  }
  function isObject$1(value) {
    const type = typeof value;
    return value != null && (type == "object" || type == "function");
  }
  const _sfc_main$1V = /* @__PURE__ */ vue.defineComponent({
    __name: "index",
    setup(__props, { expose: __expose }) {
      __expose();
      const searchingPlaceholder = Jt.t("TUIContact.输入ID");
      const isSearching = vue.ref(true);
      const searchValue = vue.ref("");
      const searchResult = vue.ref({
        user: {
          label: "联系人",
          list: []
        },
        group: {
          label: "群聊",
          list: []
        }
      });
      const changeContactSearchingStatus = debounce(function(status) {
        isSearching.value = status;
      }, 200);
      const search = async () => {
        if (!searchValue.value) {
          return;
        }
        R$1.callService({
          serviceName: E$1.TUISearch.SERVICE.NAME,
          method: E$1.TUISearch.SERVICE.METHOD.SEARCH_USER,
          params: {
            userID: searchValue.value
          }
        }).then((res) => {
          searchResult.value.user.list = res.data;
        }).catch((error2) => {
          searchResult.value.user.list = [];
          formatAppLog("warn", "at TUIKit/components/TUIContact/contact-search/index.vue:83", "search user error", error2);
        });
        R$1.callService({
          serviceName: E$1.TUISearch.SERVICE.NAME,
          method: E$1.TUISearch.SERVICE.METHOD.SEARCH_GROUP,
          params: {
            groupID: searchValue.value
          }
        }).then((res) => {
          searchResult.value.group.list = [res.data.group];
        }).catch((error2) => {
          searchResult.value.group.list = [];
          formatAppLog("warn", "at TUIKit/components/TUIContact/contact-search/index.vue:97", "search group error", error2);
        });
      };
      vue.watch(
        () => searchResult.value,
        () => {
          zt.update(
            o$2.CUSTOM,
            "currentContactSearchResult",
            searchResult.value
          );
        },
        {
          deep: true,
          immediate: true
        }
      );
      vue.watch(
        () => isSearching.value,
        () => {
          zt.update(
            o$2.CUSTOM,
            "currentContactSearchingStatus",
            isSearching.value
          );
          if (isSearching.value) {
            searchValue.value = "";
            searchResult.value.user.list = [];
            searchResult.value.group.list = [];
          }
        },
        {
          deep: true,
          immediate: true
        }
      );
      i.updateContactSearch = search;
      i.closeSearching = () => {
        isSearching.value = false;
      };
      const __returned__ = { searchingPlaceholder, isSearching, searchValue, searchResult, changeContactSearchingStatus, search, get TUITranslateService() {
        return Jt;
      }, get isPC() {
        return isPC;
      } };
      Object.defineProperty(__returned__, "__isScriptSetup", { enumerable: false, value: true });
      return __returned__;
    }
  });
  function _sfc_render$1U(_ctx, _cache, $props, $setup, $data, $options) {
    return vue.openBlock(), vue.createElementBlock(
      "div",
      {
        class: vue.normalizeClass(["tui-contact-search", !$setup.isPC && "tui-contact-search-h5"])
      },
      [
        !$setup.isSearching || !$setup.isPC ? (vue.openBlock(), vue.createElementBlock(
          "div",
          {
            key: 0,
            class: vue.normalizeClass([
              "tui-contact-search-header",
              !$setup.isPC && "tui-contact-search-h5-header",
              $setup.isSearching && "tui-contact-searching-h5-header"
            ]),
            onClick: _cache[0] || (_cache[0] = ($event) => $setup.changeContactSearchingStatus(true))
          },
          [
            vue.createCommentVNode(` <div :class="[\r
          'tui-contact-search-header-icon',\r
          !isPC && 'tui-contact-search-h5-header-icon',\r
        ]" @click.stop="changeContactSearchingStatus(!isSearching)">\r
        <Icon :file="isSearching ? backSVG : addSVG" :width="isSearching ? '20px' : '14px'" :height="isSearching ? '20px' : '14px'" />\r
      </div> `),
            vue.createElementVNode(
              "div",
              {
                class: vue.normalizeClass([
                  "tui-contact-search-header-title",
                  !$setup.isPC && "tui-contact-search-h5-header-title"
                ])
              },
              vue.toDisplayString($setup.TUITranslateService.t("TUIContact.添加好友/群聊")),
              3
              /* TEXT, CLASS */
            )
          ],
          2
          /* CLASS */
        )) : vue.createCommentVNode("v-if", true),
        $setup.isSearching ? (vue.openBlock(), vue.createElementBlock(
          "div",
          {
            key: 1,
            class: vue.normalizeClass([
              "tui-contact-search-main",
              !$setup.isPC && "tui-contact-search-h5-main"
            ])
          },
          [
            vue.withDirectives(vue.createElementVNode("input", {
              "onUpdate:modelValue": _cache[1] || (_cache[1] = ($event) => $setup.searchValue = $event),
              class: "tui-contact-search-main-input",
              type: "text",
              placeholder: $setup.searchingPlaceholder,
              enterkeyhint: "search",
              onKeyup: vue.withKeys($setup.search, ["enter"]),
              onBlur: $setup.search,
              onConfirm: $setup.search
            }, null, 40, ["placeholder"]), [
              [vue.vModelText, $setup.searchValue]
            ]),
            vue.createCommentVNode(' <div class="tui-contact-search-main-cancel" @click="isSearching = false">\r\n        {{ TUITranslateService.t("搜索") }}\r\n      </div> ')
          ],
          2
          /* CLASS */
        )) : vue.createCommentVNode("v-if", true)
      ],
      2
      /* CLASS */
    );
  }
  const ContactSearch = /* @__PURE__ */ _export_sfc(_sfc_main$1V, [["render", _sfc_render$1U], ["__scopeId", "data-v-efa1a0fe"], ["__file", "C:/Users/Administrator/Desktop/Project Folder/ZXHand/ZXHandwritting_APP_uniapp/TUIKit/components/TUIContact/contact-search/index.vue"]]);
  const generateAvatar = (item) => {
    var _a;
    return (item == null ? void 0 : item.avatar) || ((_a = item == null ? void 0 : item.profile) == null ? void 0 : _a.avatar) || (item == null ? void 0 : item.groupID) && "https://web.sdk.qcloud.com/im/assets/images/Public.svg" || "https://web.sdk.qcloud.com/component/TUIKit/assets/avatar_21.png";
  };
  const generateName = (item) => {
    var _a;
    return (item == null ? void 0 : item.remark) || (item == null ? void 0 : item.name) || ((_a = item == null ? void 0 : item.profile) == null ? void 0 : _a.nick) || (item == null ? void 0 : item.nick) || (item == null ? void 0 : item.groupID) || (item == null ? void 0 : item.userID) || "";
  };
  const generateContactInfoName = (item) => {
    var _a;
    return (item == null ? void 0 : item.name) || ((_a = item == null ? void 0 : item.profile) == null ? void 0 : _a.nick) || (item == null ? void 0 : item.nick) || (item == null ? void 0 : item.groupID) || (item == null ? void 0 : item.userID) || "";
  };
  const generateContactInfoBasic = (contactInfo) => {
    var _a;
    const res = [
      {
        label: (contactInfo == null ? void 0 : contactInfo.groupID) ? "群ID" : "ID",
        data: (contactInfo == null ? void 0 : contactInfo.groupID) || (contactInfo == null ? void 0 : contactInfo.userID) || ""
      }
    ];
    if (!isApplicationType(contactInfo)) {
      res.push({
        label: (contactInfo == null ? void 0 : contactInfo.groupID) ? "群类型" : "个性签名",
        data: (contactInfo == null ? void 0 : contactInfo.type) || ((_a = contactInfo == null ? void 0 : contactInfo.profile) == null ? void 0 : _a.selfSignature) || ""
      });
    }
    return res;
  };
  const isApplicationType = (info) => {
    var _a, _b;
    return (info == null ? void 0 : info.type) === ((_a = Kt == null ? void 0 : Kt.TYPES) == null ? void 0 : _a.SNS_APPLICATION_SENT_TO_ME) || (info == null ? void 0 : info.type) === ((_b = Kt == null ? void 0 : Kt.TYPES) == null ? void 0 : _b.SNS_APPLICATION_SENT_BY_ME);
  };
  const isFriend = (info) => {
    return new Promise((resolve, reject) => {
      if ((info == null ? void 0 : info.groupID) || !(info == null ? void 0 : info.userID)) {
        resolve(false);
        return;
      }
      if (info == null ? void 0 : info.addTime) {
        resolve(true);
        return;
      }
      es.checkFriend({
        userIDList: [info == null ? void 0 : info.userID],
        type: Kt.TYPES.SNS_CHECK_TYPE_BOTH
      }).then((res) => {
        var _a, _b;
        switch ((_b = (_a = res == null ? void 0 : res.data) == null ? void 0 : _a.successUserIDList[0]) == null ? void 0 : _b.relation) {
          case Kt.TYPES.SNS_TYPE_NO_RELATION:
            resolve(false);
            break;
          case Kt.TYPES.SNS_TYPE_A_WITH_B:
            resolve(false);
            break;
          case Kt.TYPES.SNS_TYPE_B_WITH_A:
            resolve(false);
            break;
          case Kt.TYPES.SNS_TYPE_BOTH_WAY:
            resolve(true);
            break;
          default:
            resolve(false);
            break;
        }
      }).catch((error2) => {
        formatAppLog("warn", "at TUIKit/components/TUIContact/utils/index.ts:111", "checkFriend error", error2);
        reject(error2);
      });
    });
  };
  const updateFriendRemark = (userID, remark) => {
    var _a;
    if (((_a = remark == null ? void 0 : remark.replace(/[^\u0000-\u00ff]/g, "aa")) == null ? void 0 : _a.length) > 96) {
      Toast({
        message: Jt.t("TUIContact.修改备注失败: 备注长度不得超过 96 字节"),
        type: TOAST_TYPE.ERROR
      });
      return;
    }
    es.updateFriend({
      userID,
      remark
    }).then(() => {
      Toast({
        message: Jt.t("TUIContact.修改备注成功"),
        type: TOAST_TYPE.SUCCESS
      });
    }).catch((error2) => {
      formatAppLog("warn", "at TUIKit/components/TUIContact/utils/index.ts:138", "update friend remark failed:", error2);
      Toast({
        message: Jt.t("TUIContact.修改备注失败"),
        type: TOAST_TYPE.ERROR
      });
    });
  };
  const deleteFriend = (userID) => {
    es.deleteFriend({
      userIDList: [userID],
      type: Kt.TYPES.SNS_DELETE_TYPE_BOTH
    }).then((res) => {
      const { successUserIDList } = res.data;
      if (successUserIDList[0].userID === userID) {
        Toast({
          message: Jt.t("TUIContact.删除好友成功"),
          type: TOAST_TYPE.SUCCESS
        });
      } else {
        Toast({
          message: Jt.t("TUIContact.删除好友失败"),
          type: TOAST_TYPE.ERROR
        });
      }
    }).catch((error2) => {
      formatAppLog("warn", "at TUIKit/components/TUIContact/utils/index.ts:167", "delete friend failed:", error2);
      Toast({
        message: Jt.t("TUIContact.删除好友失败"),
        type: TOAST_TYPE.ERROR
      });
    });
  };
  const addFriend = (params) => {
    es.addFriend(params).then(() => {
      Toast({
        message: Jt.t("TUIContact.申请已发送"),
        type: TOAST_TYPE.SUCCESS
      });
    }).catch((error2) => {
      formatAppLog("warn", "at TUIKit/components/TUIContact/utils/index.ts:185", "delete friend failed:", error2);
      Toast({
        message: Jt.t("TUIContact.申请发送失败"),
        type: TOAST_TYPE.ERROR
      });
    });
  };
  const enterConversation = (item) => {
    const conversationID = (item == null ? void 0 : item.groupID) ? `GROUP${item == null ? void 0 : item.groupID}` : `C2C${item == null ? void 0 : item.userID}`;
    Wt.switchConversation(conversationID).catch(
      (error2) => {
        formatAppLog("warn", "at TUIKit/components/TUIContact/utils/index.ts:200", "switch conversation failed:", error2);
        Toast({
          message: Jt.t("TUIContact.进入会话失败"),
          type: TOAST_TYPE.ERROR
        });
      }
    );
  };
  const acceptFriendApplication = (userID) => {
    es.acceptFriendApplication({
      userID,
      type: Kt.TYPES.SNS_APPLICATION_AGREE_AND_ADD
    }).then(() => {
      Toast({
        message: Jt.t("TUIContact.添加好友成功"),
        type: TOAST_TYPE.SUCCESS
      });
    }).catch((error2) => {
      formatAppLog("warn", "at TUIKit/components/TUIContact/utils/index.ts:222", "accept friend application failed:", error2);
      Toast({
        message: Jt.t("TUIContact.同意好友申请失败"),
        type: TOAST_TYPE.ERROR
      });
    });
  };
  const refuseFriendApplication = (userID) => {
    es.refuseFriendApplication(userID).then(() => {
      Toast({
        message: Jt.t("TUIContact.拒绝成功"),
        type: TOAST_TYPE.SUCCESS
      });
    }).catch((error2) => {
      formatAppLog("warn", "at TUIKit/components/TUIContact/utils/index.ts:240", "accept friend application failed:", error2);
      Toast({
        message: Jt.t("TUIContact.拒绝好友申请失败"),
        type: TOAST_TYPE.ERROR
      });
    });
  };
  const dismissGroup = (groupID) => {
    Qt.dismissGroup(groupID).then(() => {
      Toast({
        message: Jt.t("TUIContact.解散群聊成功"),
        type: TOAST_TYPE.SUCCESS
      });
      (i == null ? void 0 : i.updateContactSearch) && (i == null ? void 0 : i.updateContactSearch());
    }).catch((error2) => {
      formatAppLog("warn", "at TUIKit/components/TUIContact/utils/index.ts:259", "dismiss group failed:", error2);
      Toast({
        message: Jt.t("TUIContact.解散群聊失败"),
        type: TOAST_TYPE.ERROR
      });
    });
  };
  const quitGroup = (groupID) => {
    Qt.quitGroup(groupID).then(() => {
      Toast({
        message: Jt.t("TUIContact.退出群组成功"),
        type: TOAST_TYPE.SUCCESS
      });
    }).catch((error2) => {
      formatAppLog("warn", "at TUIKit/components/TUIContact/utils/index.ts:277", "quit group failed:", error2);
      Toast({
        message: Jt.t("TUIContact.退出群组失败"),
        type: TOAST_TYPE.ERROR
      });
    });
  };
  const joinGroup = (groupID, applyMessage) => {
    Qt.joinGroup({
      groupID,
      applyMessage
    }).then((imResponse) => {
      var _a;
      switch ((_a = imResponse == null ? void 0 : imResponse.data) == null ? void 0 : _a.status) {
        case Kt.TYPES.JOIN_STATUS_WAIT_APPROVAL:
          Toast({
            message: Jt.t("TUIContact.等待管理员同意"),
            type: TOAST_TYPE.SUCCESS
          });
          break;
        case Kt.TYPES.JOIN_STATUS_SUCCESS:
          Toast({
            message: Jt.t("TUIContact.加群成功"),
            type: TOAST_TYPE.SUCCESS
          });
          break;
        case Kt.TYPES.JOIN_STATUS_ALREADY_IN_GROUP:
          Toast({
            message: Jt.t("TUIContact.您已是群成员"),
            type: TOAST_TYPE.SUCCESS
          });
          break;
      }
    }).catch((error2) => {
      formatAppLog("warn", "at TUIKit/components/TUIContact/utils/index.ts:316", "join group failed:", error2);
      Toast({
        message: "申请入群失败",
        type: TOAST_TYPE.ERROR
      });
    });
  };
  const addToBlacklist = (userID, successCallBack) => {
    Xt.addToBlacklist({
      userIDList: [userID]
    }).then(() => {
      successCallBack && successCallBack();
    }).catch((error2) => {
      formatAppLog("warn", "at TUIKit/components/TUIContact/utils/index.ts:333", "add to blacklist failed:", error2);
      Toast({
        message: Jt.t("TUIContact.加入黑名单失败"),
        type: TOAST_TYPE.ERROR
      });
    });
  };
  const removeFromBlacklist = (userID, successCallBack) => {
    Xt.removeFromBlacklist({
      userIDList: [userID]
    }).then(() => {
      successCallBack && successCallBack();
    }).catch((error2) => {
      formatAppLog("warn", "at TUIKit/components/TUIContact/utils/index.ts:353", "remove from blacklist failed:", error2);
      Toast({
        message: Jt.t("TUIContact.移除黑名单失败"),
        type: TOAST_TYPE.ERROR
      });
    });
  };
  const _sfc_main$1U = /* @__PURE__ */ vue.defineComponent({
    __name: "index",
    props: {
      item: { type: Object, required: true, default: () => ({}) },
      displayOnlineStatus: { type: Boolean, required: false, default: false }
    },
    setup(__props, { expose: __expose }) {
      __expose();
      const props2 = __props;
      const userOnlineStatusMap = vue.inject(
        "userOnlineStatusMap"
      );
      const isOnline = vue.ref(false);
      const groupType = {
        [Kt.TYPES.GRP_WORK]: "Work",
        [Kt.TYPES.GRP_AVCHATROOM]: "AVChatRoom",
        [Kt.TYPES.GRP_PUBLIC]: "Public",
        [Kt.TYPES.GRP_MEETING]: "Meeting",
        [Kt.TYPES.GRP_COMMUNITY]: "Community"
      };
      const otherContentForSow = vue.computed(() => {
        var _a, _b, _c, _d, _e3, _f2, _g2;
        let content = "";
        if (((_a = props2.item) == null ? void 0 : _a.type) === ((_b = Kt == null ? void 0 : Kt.TYPES) == null ? void 0 : _b.SNS_APPLICATION_SENT_TO_ME) || ((_c = props2.item) == null ? void 0 : _c.type) === ((_d = Kt == null ? void 0 : Kt.TYPES) == null ? void 0 : _d.SNS_APPLICATION_SENT_BY_ME)) {
          content = ((_e3 = props2.item) == null ? void 0 : _e3.wording) || "";
        } else if ((_f2 = props2.item) == null ? void 0 : _f2.groupID) {
          content = `ID:${(_g2 = props2.item) == null ? void 0 : _g2.groupID}`;
        }
        return content;
      });
      const groupTypeForShow = vue.computed(() => {
        var _a, _b;
        let type = "";
        if ((_a = props2.item) == null ? void 0 : _a.groupID) {
          type = groupType[(_b = props2.item) == null ? void 0 : _b.type];
        }
        return type;
      });
      const showApplicationStatus = vue.computed(() => {
        var _a, _b, _c, _d;
        if (((_a = props2.item) == null ? void 0 : _a.type) === ((_b = Kt == null ? void 0 : Kt.TYPES) == null ? void 0 : _b.SNS_APPLICATION_SENT_BY_ME)) {
          return {
            style: "text",
            label: "等待验证"
          };
        } else if (((_c = props2.item) == null ? void 0 : _c.type) === ((_d = Kt == null ? void 0 : Kt.TYPES) == null ? void 0 : _d.SNS_APPLICATION_SENT_TO_ME)) {
          return {
            style: "button",
            label: "同意",
            onClick: () => {
              var _a2;
              acceptFriendApplication((_a2 = props2.item) == null ? void 0 : _a2.userID);
            }
          };
        }
        return false;
      });
      vue.watch(
        () => userOnlineStatusMap == null ? void 0 : userOnlineStatusMap.value,
        () => {
          isOnline.value = getOnlineStatus();
        },
        {
          immediate: true,
          deep: true
        }
      );
      function getOnlineStatus() {
        var _a, _b, _c;
        return !!(props2.displayOnlineStatus && (userOnlineStatusMap == null ? void 0 : userOnlineStatusMap.value) && ((_a = props2.item) == null ? void 0 : _a.userID) && ((_c = (_b = userOnlineStatusMap.value) == null ? void 0 : _b[props2.item.userID]) == null ? void 0 : _c.statusType) === Kt.TYPES.USER_STATUS_ONLINE);
      }
      const __returned__ = { props: props2, userOnlineStatusMap, isOnline, groupType, otherContentForSow, groupTypeForShow, showApplicationStatus, getOnlineStatus, get TUITranslateService() {
        return Jt;
      }, Avatar, get generateAvatar() {
        return generateAvatar;
      }, get generateName() {
        return generateName;
      }, get isPC() {
        return isPC;
      } };
      Object.defineProperty(__returned__, "__isScriptSetup", { enumerable: false, value: true });
      return __returned__;
    }
  });
  function _sfc_render$1T(_ctx, _cache, $props, $setup, $data, $options) {
    return vue.openBlock(), vue.createElementBlock(
      "div",
      {
        class: vue.normalizeClass(["tui-contact-list-card", !$setup.isPC && "tui-contact-list-card-h5"])
      },
      [
        vue.createElementVNode("div", { class: "tui-contact-list-card-left" }, [
          vue.createVNode($setup["Avatar"], {
            class: "tui-contact-list-card-left-avatar",
            useSkeletonAnimation: "",
            url: $setup.generateAvatar($setup.props.item)
          }, null, 8, ["url"]),
          $setup.props.displayOnlineStatus && $setup.props.item ? (vue.openBlock(), vue.createElementBlock(
            "div",
            {
              key: 0,
              class: vue.normalizeClass({
                "online-status": true,
                "online-status-online": $setup.isOnline,
                "online-status-offline": !$setup.isOnline
              })
            },
            null,
            2
            /* CLASS */
          )) : vue.createCommentVNode("v-if", true)
        ]),
        vue.createElementVNode("div", { class: "tui-contact-list-card-main" }, [
          vue.createElementVNode(
            "div",
            { class: "tui-contact-list-card-main-name" },
            vue.toDisplayString($setup.generateName($setup.props.item)),
            1
            /* TEXT */
          ),
          $setup.otherContentForSow ? (vue.openBlock(), vue.createElementBlock(
            "div",
            {
              key: 0,
              class: "tui-contact-list-card-main-other"
            },
            vue.toDisplayString($setup.otherContentForSow),
            1
            /* TEXT */
          )) : vue.createCommentVNode("v-if", true)
        ]),
        vue.createElementVNode("div", { class: "tui-contact-list-card-right" }, [
          $setup.groupTypeForShow ? (vue.openBlock(), vue.createElementBlock(
            "div",
            {
              key: 0,
              class: "tui-contact-list-card-right-group-type"
            },
            vue.toDisplayString($setup.groupTypeForShow),
            1
            /* TEXT */
          )) : vue.createCommentVNode("v-if", true),
          $setup.showApplicationStatus ? (vue.openBlock(), vue.createElementBlock("div", {
            key: 1,
            class: "tui-contact-list-card-right-application"
          }, [
            $setup.showApplicationStatus.style === "text" ? (vue.openBlock(), vue.createElementBlock(
              "div",
              {
                key: 0,
                class: "tui-contact-list-card-right-application-text"
              },
              vue.toDisplayString($setup.TUITranslateService.t(`TUIContact.${$setup.showApplicationStatus.label}`)),
              1
              /* TEXT */
            )) : $setup.showApplicationStatus.style === "button" ? (vue.openBlock(), vue.createElementBlock(
              "button",
              {
                key: 1,
                class: "tui-contact-list-card-right-application-button",
                onClick: _cache[0] || (_cache[0] = vue.withModifiers((...args) => $setup.showApplicationStatus.onClick && $setup.showApplicationStatus.onClick(...args), ["stop"]))
              },
              vue.toDisplayString($setup.TUITranslateService.t(`TUIContact.${$setup.showApplicationStatus.label}`)),
              1
              /* TEXT */
            )) : vue.createCommentVNode("v-if", true)
          ])) : vue.createCommentVNode("v-if", true)
        ])
      ],
      2
      /* CLASS */
    );
  }
  const ContactListItem = /* @__PURE__ */ _export_sfc(_sfc_main$1U, [["render", _sfc_render$1T], ["__scopeId", "data-v-cbb84739"], ["__file", "C:/Users/Administrator/Desktop/Project Folder/ZXHand/ZXHandwritting_APP_uniapp/TUIKit/components/TUIContact/contact-list/contact-list-item/index.vue"]]);
  function deepCopy(data, hash = /* @__PURE__ */ new WeakMap()) {
    if (typeof data !== "object" || data === null || data === void 0) {
      return data;
    }
    if (hash.has(data)) {
      return hash.get(data);
    }
    const newData = Object.create(Object.getPrototypeOf(data));
    const dataKeys = Object.keys(data);
    dataKeys.forEach((value) => {
      const currentDataValue = data[value];
      if (typeof currentDataValue !== "object" || currentDataValue === null) {
        newData[value] = currentDataValue;
      } else if (Array.isArray(currentDataValue)) {
        newData[value] = [...currentDataValue];
      } else if (currentDataValue instanceof Set) {
        newData[value] = /* @__PURE__ */ new Set([...currentDataValue]);
      } else if (currentDataValue instanceof Map) {
        newData[value] = new Map([...currentDataValue]);
      } else {
        hash.set(data, data);
        newData[value] = deepCopy(currentDataValue, hash);
      }
    });
    return newData;
  }
  const isCreateGroupCustomMessage = (message2) => {
    var _a;
    return message2.type === Kt.TYPES.MSG_CUSTOM && ((_a = message2 == null ? void 0 : message2.getMessageContent()) == null ? void 0 : _a.businessID) === "group_create";
  };
  function isEnabledMessageReadReceiptGlobal() {
    return zt.getData(o$2.USER, "displayMessageReadReceipt") && zt.getData(o$2.APP, "enabledMessageReadReceipt");
  }
  function shallowCopyMessage(message2) {
    return Object.assign({}, message2);
  }
  function calculateTimestamp(timestamp) {
    const todayZero = (/* @__PURE__ */ new Date()).setHours(0, 0, 0, 0);
    const thisYear = new Date(
      (/* @__PURE__ */ new Date()).getFullYear(),
      0,
      1,
      0,
      0,
      0,
      0
    ).getTime();
    const target = new Date(timestamp);
    const oneDay2 = 24 * 60 * 60 * 1e3;
    const oneWeek = 7 * oneDay2;
    const diff = todayZero - target.getTime();
    function formatNum(num) {
      return num < 10 ? "0" + num : num.toString();
    }
    if (diff <= 0) {
      return `${formatNum(target.getHours())}:${formatNum(target.getMinutes())}`;
    } else if (diff <= oneDay2) {
      return `${Jt.t("time.昨天")} ${formatNum(
        target.getHours()
      )}:${formatNum(target.getMinutes())}`;
    } else if (diff <= oneWeek - oneDay2) {
      const weekdays = [
        "星期日",
        "星期一",
        "星期二",
        "星期三",
        "星期四",
        "星期五",
        "星期六"
      ];
      const weekday = weekdays[target.getDay()];
      return `${Jt.t("time." + weekday)} ${formatNum(
        target.getHours()
      )}:${formatNum(target.getMinutes())}`;
    } else if (target.getTime() >= thisYear) {
      return `${target.getMonth() + 1}/${target.getDate()} ${formatNum(
        target.getHours()
      )}:${formatNum(target.getMinutes())}`;
    } else {
      return `${target.getFullYear()}/${target.getMonth() + 1}/${target.getDate()} ${formatNum(target.getHours())}:${formatNum(
        target.getMinutes()
      )}`;
    }
  }
  const _sfc_main$1T = /* @__PURE__ */ vue.defineComponent({
    __name: "index",
    setup(__props, { expose: __expose }) {
      __expose();
      const currentContactListKey = vue.ref("");
      const currentContactInfo = vue.ref({});
      const contactListMap = vue.ref({
        friendApplicationList: {
          key: "friendApplicationList",
          title: "新的联系人",
          list: [],
          unreadCount: 0
        },
        blackList: {
          key: "blackList",
          title: "黑名单",
          list: []
        },
        groupList: {
          key: "groupList",
          title: "我的群聊",
          list: []
        },
        friendList: {
          key: "friendList",
          title: "我的好友",
          list: []
        }
      });
      const contactSearchingStatus = vue.ref(false);
      const contactSearchResult = vue.ref();
      const displayOnlineStatus = vue.ref(false);
      const userOnlineStatusMap = vue.ref();
      const isContactSearchNoResult = vue.computed(() => {
        var _a, _b, _c, _d;
        return !((_b = (_a = contactSearchResult == null ? void 0 : contactSearchResult.value) == null ? void 0 : _a.user) == null ? void 0 : _b.list[0]) && !((_d = (_c = contactSearchResult == null ? void 0 : contactSearchResult.value) == null ? void 0 : _c.group) == null ? void 0 : _d.list[0]);
      });
      vue.onMounted(() => {
        zt.watch(o$2.APP, {
          enabledCustomerServicePlugin: onCustomerServiceCommercialPluginUpdated
        });
        zt.watch(o$2.GRP, {
          groupList: onGroupListUpdated
        });
        zt.watch(o$2.USER, {
          userBlacklist: onUserBlacklistUpdated,
          displayOnlineStatus: onDisplayOnlineStatusUpdated,
          userStatusList: onUserStatusListUpdated
        });
        zt.watch(o$2.FRIEND, {
          friendList: onFriendListUpdated,
          friendApplicationList: onFriendApplicationListUpdated,
          friendApplicationUnreadCount: onFriendApplicationUnreadCountUpdated
        });
        zt.watch(o$2.CUSTOM, {
          currentContactSearchingStatus: onCurrentContactSearchingStatusUpdated,
          currentContactSearchResult: onCurrentContactSearchResultUpdated,
          currentContactListKey: onCurrentContactListKeyUpdated,
          currentContactInfo: onCurrentContactInfoUpdated
        });
      });
      vue.onUnmounted(() => {
        zt.unwatch(o$2.APP, {
          enabledCustomerServicePlugin: onCustomerServiceCommercialPluginUpdated
        });
        zt.unwatch(o$2.GRP, {
          groupList: onGroupListUpdated
        });
        zt.unwatch(o$2.USER, {
          userBlacklist: onUserBlacklistUpdated,
          displayOnlineStatus: onDisplayOnlineStatusUpdated,
          userStatusList: onUserStatusListUpdated
        });
        zt.unwatch(o$2.FRIEND, {
          friendList: onFriendListUpdated,
          friendApplicationList: onFriendApplicationListUpdated,
          friendApplicationUnreadCount: onFriendApplicationUnreadCountUpdated
        });
        zt.unwatch(o$2.CUSTOM, {
          currentContactSearchingStatus: onCurrentContactSearchingStatusUpdated,
          currentContactSearchResult: onCurrentContactSearchResultUpdated,
          currentContactListKey: onCurrentContactListKeyUpdated,
          currentContactInfo: onCurrentContactInfoUpdated
        });
      });
      function toggleCurrentContactList(key) {
        if (currentContactListKey.value === key) {
          currentContactListKey.value = "";
          currentContactInfo.value = {};
          zt.update(o$2.CUSTOM, "currentContactListKey", "");
          zt.update(
            o$2.CUSTOM,
            "currentContactInfo",
            {}
          );
        } else {
          currentContactListKey.value = key;
          zt.update(o$2.CUSTOM, "currentContactListKey", key);
          if (key === "friendApplicationList") {
            es.setFriendApplicationRead();
          }
        }
      }
      function selectItem(item) {
        var _a, _b, _c, _d, _e3, _f2, _g2, _h2;
        currentContactInfo.value = item;
        if (contactSearchingStatus.value) {
          let targetListItem;
          if ((_a = currentContactInfo.value) == null ? void 0 : _a.userID) {
            targetListItem = (_d = (_c = (_b = contactListMap.value) == null ? void 0 : _b.friendList) == null ? void 0 : _c.list) == null ? void 0 : _d.find(
              (item2) => {
                var _a2;
                return (item2 == null ? void 0 : item2.userID) === ((_a2 = currentContactInfo.value) == null ? void 0 : _a2.userID);
              }
            );
          } else if ((_e3 = currentContactInfo.value) == null ? void 0 : _e3.groupID) {
            targetListItem = (_h2 = (_g2 = (_f2 = contactListMap.value) == null ? void 0 : _f2.groupList) == null ? void 0 : _g2.list) == null ? void 0 : _h2.find(
              (item2) => {
                var _a2;
                return (item2 == null ? void 0 : item2.groupID) === ((_a2 = currentContactInfo.value) == null ? void 0 : _a2.groupID);
              }
            );
          }
          if (targetListItem) {
            currentContactInfo.value = targetListItem;
          }
        }
        zt.update(
          o$2.CUSTOM,
          "currentContactInfo",
          currentContactInfo.value
        );
      }
      function onDisplayOnlineStatusUpdated(status) {
        displayOnlineStatus.value = status;
      }
      function onUserStatusListUpdated(list) {
        if ((list == null ? void 0 : list.size) > 0) {
          userOnlineStatusMap.value = Object.fromEntries(list == null ? void 0 : list.entries());
        }
      }
      function onCustomerServiceCommercialPluginUpdated(isEnabled) {
        if (!isEnabled) {
          return;
        }
        const contactListExtensionID = E$1.TUIContact.EXTENSION.CONTACT_LIST.EXT_ID;
        const tuiContactExtensionList = R$1.getExtensionList(
          contactListExtensionID
        );
        const customerData = tuiContactExtensionList.find((extension) => {
          const { name, accountList = [] } = extension.data || {};
          return name === "customer" && accountList.length > 0;
        });
        if (customerData) {
          const { data, text } = customerData;
          const { accountList } = data || {};
          Xt.getUserProfile({ userIDList: accountList }).then((res) => {
            if (res.data.length > 0) {
              const customerList = {
                title: text,
                list: res.data.map((item, index2) => {
                  return {
                    ...item,
                    renderKey: generateRenderKey("customerList", item, index2),
                    infoKeyList: [],
                    btnKeyList: ["enterC2CConversation"]
                  };
                }),
                key: "customerList"
              };
              contactListMap.value = { ...contactListMap.value, customerList };
            }
          }).catch(() => {
          });
        }
      }
      function onGroupListUpdated(groupList) {
        updateContactListMap("groupList", groupList);
      }
      function onUserBlacklistUpdated(userBlacklist) {
        updateContactListMap("blackList", userBlacklist);
      }
      function onFriendApplicationUnreadCountUpdated(friendApplicationUnreadCount) {
        contactListMap.value.friendApplicationList.unreadCount = friendApplicationUnreadCount;
      }
      function onFriendListUpdated(friendList) {
        updateContactListMap("friendList", friendList);
      }
      function onFriendApplicationListUpdated(friendApplicationList) {
        updateContactListMap("friendApplicationList", friendApplicationList);
      }
      function updateContactListMap(key, list) {
        contactListMap.value[key].list = list;
        contactListMap.value[key].list.map(
          (item, index2) => item.renderKey = generateRenderKey(key, item, index2)
        );
        updateCurrentContactInfoFromList(contactListMap.value[key].list, key);
      }
      function updateCurrentContactInfoFromList(list, type) {
        var _a, _b;
        if (!((_a = currentContactInfo.value) == null ? void 0 : _a.userID) && !((_b = currentContactInfo.value) == null ? void 0 : _b.groupID)) {
          return;
        }
        if (type === currentContactListKey.value || contactSearchingStatus.value) {
          currentContactInfo.value = (list == null ? void 0 : list.find(
            (item) => {
              var _a2, _b2;
              return (item == null ? void 0 : item.groupID) && (item == null ? void 0 : item.groupID) === ((_a2 = currentContactInfo.value) == null ? void 0 : _a2.groupID) || (item == null ? void 0 : item.userID) && (item == null ? void 0 : item.userID) === ((_b2 = currentContactInfo.value) == null ? void 0 : _b2.userID);
            }
          )) || {};
          zt.update(
            o$2.CUSTOM,
            "currentContactInfo",
            currentContactInfo.value
          );
        }
      }
      function generateRenderKey(contactListMapKey, contactInfo, index2) {
        return `${contactListMapKey}-${contactInfo.userID || contactInfo.groupID || "index" + index2}`;
      }
      function onCurrentContactSearchResultUpdated(searchResult) {
        contactSearchResult.value = searchResult;
      }
      function onCurrentContactSearchingStatusUpdated(searchingStatus) {
        contactSearchingStatus.value = searchingStatus;
        zt.update(
          o$2.CUSTOM,
          "currentContactInfo",
          {}
        );
        zt.update(o$2.CUSTOM, "currentContactListKey", "");
      }
      function onCurrentContactInfoUpdated(contactInfo) {
        currentContactInfo.value = contactInfo;
      }
      function onCurrentContactListKeyUpdated(contactListKey) {
        currentContactListKey.value = contactListKey;
      }
      vue.provide("userOnlineStatusMap", userOnlineStatusMap);
      const __returned__ = { currentContactListKey, currentContactInfo, contactListMap, contactSearchingStatus, contactSearchResult, displayOnlineStatus, userOnlineStatusMap, isContactSearchNoResult, toggleCurrentContactList, selectItem, onDisplayOnlineStatusUpdated, onUserStatusListUpdated, onCustomerServiceCommercialPluginUpdated, onGroupListUpdated, onUserBlacklistUpdated, onFriendApplicationUnreadCountUpdated, onFriendListUpdated, onFriendApplicationListUpdated, updateContactListMap, updateCurrentContactInfoFromList, generateRenderKey, onCurrentContactSearchResultUpdated, onCurrentContactSearchingStatusUpdated, onCurrentContactInfoUpdated, onCurrentContactListKeyUpdated, get TUITranslateService() {
        return Jt;
      }, Icon: Icon$1, get downSVG() {
        return downSVG;
      }, get rightSVG() {
        return rightIcon;
      }, ContactListItem, get deepCopy() {
        return deepCopy;
      }, get isPC() {
        return isPC;
      } };
      Object.defineProperty(__returned__, "__isScriptSetup", { enumerable: false, value: true });
      return __returned__;
    }
  });
  function _sfc_render$1S(_ctx, _cache, $props, $setup, $data, $options) {
    return !$setup.contactSearchingStatus ? (vue.openBlock(), vue.createElementBlock(
      "ul",
      {
        key: 0,
        class: vue.normalizeClass(["tui-contact-list", !$setup.isPC && "tui-contact-list-h5"])
      },
      [
        (vue.openBlock(true), vue.createElementBlock(
          vue.Fragment,
          null,
          vue.renderList($setup.contactListMap, (contactListObj, key) => {
            return vue.openBlock(), vue.createElementBlock("li", {
              key,
              class: "tui-contact-list-item"
            }, [
              vue.createElementVNode("header", {
                class: "tui-contact-list-item-header",
                onClick: ($event) => $setup.toggleCurrentContactList(key)
              }, [
                vue.createElementVNode("div", { class: "tui-contact-list-item-header-left" }, [
                  vue.createVNode($setup["Icon"], {
                    file: $setup.currentContactListKey === key ? $setup.downSVG : $setup.rightSVG,
                    width: "16px",
                    height: "16px"
                  }, null, 8, ["file"]),
                  vue.createElementVNode(
                    "div",
                    null,
                    vue.toDisplayString($setup.TUITranslateService.t(`TUIContact.${contactListObj.title}`)),
                    1
                    /* TEXT */
                  )
                ]),
                vue.createElementVNode("div", { class: "tui-contact-list-item-header-right" }, [
                  contactListObj.unreadCount ? (vue.openBlock(), vue.createElementBlock(
                    "span",
                    {
                      key: 0,
                      class: "tui-contact-list-item-header-right-unread"
                    },
                    vue.toDisplayString(contactListObj.unreadCount),
                    1
                    /* TEXT */
                  )) : vue.createCommentVNode("v-if", true)
                ])
              ], 8, ["onClick"]),
              vue.createElementVNode(
                "ul",
                {
                  class: vue.normalizeClass(["tui-contact-list-item-main", $setup.currentContactListKey === key ? "" : "hidden"])
                },
                [
                  (vue.openBlock(true), vue.createElementBlock(
                    vue.Fragment,
                    null,
                    vue.renderList(contactListObj.list, (contactListItem) => {
                      return vue.openBlock(), vue.createElementBlock("li", {
                        key: contactListItem.renderKey,
                        class: vue.normalizeClass(["tui-contact-list-item-main-item", ["selected"]]),
                        onClick: ($event) => $setup.selectItem(contactListItem)
                      }, [
                        (vue.openBlock(), vue.createBlock($setup["ContactListItem"], {
                          key: contactListItem.renderKey,
                          item: $setup.deepCopy(contactListItem),
                          displayOnlineStatus: $setup.displayOnlineStatus && key === "friendList"
                        }, null, 8, ["item", "displayOnlineStatus"]))
                      ], 8, ["onClick"]);
                    }),
                    128
                    /* KEYED_FRAGMENT */
                  ))
                ],
                2
                /* CLASS */
              )
            ]);
          }),
          128
          /* KEYED_FRAGMENT */
        ))
      ],
      2
      /* CLASS */
    )) : (vue.openBlock(), vue.createElementBlock("ul", {
      key: 1,
      class: "tui-contact-list"
    }, [
      (vue.openBlock(true), vue.createElementBlock(
        vue.Fragment,
        null,
        vue.renderList($setup.contactSearchResult, (item, key) => {
          return vue.openBlock(), vue.createElementBlock("li", {
            key,
            class: "tui-contact-list-item"
          }, [
            item.list[0] ? (vue.openBlock(), vue.createElementBlock("div", {
              key: 0,
              class: "tui-contact-search-list"
            }, [
              vue.createElementVNode(
                "div",
                { class: "tui-contact-search-list-title" },
                vue.toDisplayString($setup.TUITranslateService.t(`TUIContact.${item.label}`)),
                1
                /* TEXT */
              ),
              (vue.openBlock(true), vue.createElementBlock(
                vue.Fragment,
                null,
                vue.renderList(item.list, (listItem, index2) => {
                  return vue.openBlock(), vue.createElementBlock("div", {
                    key: index2,
                    class: vue.normalizeClass(["tui-contact-search-list-item", ["selected"]]),
                    onClick: ($event) => $setup.selectItem(listItem)
                  }, [
                    vue.createVNode($setup["ContactListItem"], {
                      item: listItem,
                      displayOnlineStatus: false
                    }, null, 8, ["item"])
                  ], 8, ["onClick"]);
                }),
                128
                /* KEYED_FRAGMENT */
              ))
            ])) : vue.createCommentVNode("v-if", true)
          ]);
        }),
        128
        /* KEYED_FRAGMENT */
      )),
      $setup.isContactSearchNoResult ? (vue.openBlock(), vue.createElementBlock(
        "div",
        {
          key: 0,
          class: "tui-contact-search-list-default"
        },
        vue.toDisplayString($setup.TUITranslateService.t("TUIContact.无搜索结果")),
        1
        /* TEXT */
      )) : vue.createCommentVNode("v-if", true)
    ]));
  }
  const ContactList = /* @__PURE__ */ _export_sfc(_sfc_main$1T, [["render", _sfc_render$1S], ["__scopeId", "data-v-2682c040"], ["__file", "C:/Users/Administrator/Desktop/Project Folder/ZXHand/ZXHandwritting_APP_uniapp/TUIKit/components/TUIContact/contact-list/index.vue"]]);
  const contactMoreInfoConfig = {
    // set friends' remark
    setRemark: {
      key: "setRemark",
      label: "备注名",
      data: "",
      labelPosition: CONTACT_INFO_LABEL_POSITION.LEFT,
      editable: true,
      editType: CONTACT_INFO_MORE_EDIT_TYPE.INPUT,
      editing: false,
      editSubmitHandler: (props2) => {
        var _a, _b, _c, _d, _e3, _f2;
        if (props2 == null ? void 0 : props2.isBothFriend) {
          const newRemarkValue = (_a = props2 == null ? void 0 : props2.item) == null ? void 0 : _a.data;
          updateFriendRemark((_b = props2 == null ? void 0 : props2.contactInfoData) == null ? void 0 : _b.userID, newRemarkValue);
          ((_c = props2 == null ? void 0 : props2.item) == null ? void 0 : _c.editing) && (props2.item.editing = false);
          ((_d = props2 == null ? void 0 : props2.item) == null ? void 0 : _d.data) && (props2.item.data = (_e3 = props2 == null ? void 0 : props2.contactInfoData) == null ? void 0 : _e3.remark);
        } else {
          ((_f2 = props2 == null ? void 0 : props2.item) == null ? void 0 : _f2.editing) && (props2.item.editing = false);
        }
      }
    },
    // blocked list
    blackList: {
      key: "blackList",
      label: "加入黑名单",
      data: false,
      labelPosition: CONTACT_INFO_LABEL_POSITION.LEFT,
      editable: true,
      editType: CONTACT_INFO_MORE_EDIT_TYPE.SWITCH,
      editing: true,
      editSubmitHandler: (props2) => {
        var _a, _b;
        if (props2 == null ? void 0 : props2.isInBlackList) {
          removeFromBlacklist((_a = props2 == null ? void 0 : props2.contactInfoData) == null ? void 0 : _a.userID);
        } else {
          addToBlacklist((_b = props2 == null ? void 0 : props2.contactInfoData) == null ? void 0 : _b.userID);
          zt.update(o$2.CUSTOM, "currentContactListKey", "blackList");
        }
      }
    },
    // Fill in verification words (applicant)
    setWords: {
      key: "setWords",
      label: "请填写验证信息",
      data: "",
      labelPosition: CONTACT_INFO_LABEL_POSITION.TOP,
      editable: true,
      editType: CONTACT_INFO_MORE_EDIT_TYPE.TEXTAREA,
      editing: true
    },
    // Display verification words (application recipient)
    displayWords: {
      key: "displayWords",
      label: "验证信息",
      data: "",
      labelPosition: CONTACT_INFO_LABEL_POSITION.LEFT,
      editable: false
    }
  };
  const contactButtonConfig = {
    // ---------------------
    // group command config
    // ---------------------
    dismissGroup: {
      key: "dismissGroup",
      label: "解散群聊",
      type: CONTACT_INFO_BUTTON_TYPE.CANCEL,
      onClick: (props2) => {
        var _a;
        dismissGroup((_a = props2 == null ? void 0 : props2.contactInfoData) == null ? void 0 : _a.groupID);
      }
    },
    quitGroup: {
      key: "quitGroup",
      label: "退出群聊",
      type: CONTACT_INFO_BUTTON_TYPE.CANCEL,
      onClick: (props2) => {
        var _a;
        quitGroup((_a = props2 == null ? void 0 : props2.contactInfoData) == null ? void 0 : _a.groupID);
      }
    },
    joinGroup: {
      key: "joinGroup",
      label: "发送申请",
      type: CONTACT_INFO_BUTTON_TYPE.SUBMIT,
      onClick: (props2) => {
        var _a, _b;
        joinGroup(
          (_a = props2 == null ? void 0 : props2.contactInfoData) == null ? void 0 : _a.groupID,
          (_b = props2 == null ? void 0 : props2.contactInfoMoreList[0]) == null ? void 0 : _b.data
        );
      }
    },
    joinAVChatGroup: {
      key: "joinAVChatGroup",
      label: "加入直播群",
      type: CONTACT_INFO_BUTTON_TYPE.SUBMIT,
      onClick: (props2) => {
        var _a;
        joinGroup((_a = props2 == null ? void 0 : props2.contactInfoData) == null ? void 0 : _a.groupID);
      }
    },
    enterGroupConversation: {
      key: "enterGroupConversation",
      label: "进入群聊",
      type: CONTACT_INFO_BUTTON_TYPE.SUBMIT,
      onClick: (props2) => {
        enterConversation(props2 == null ? void 0 : props2.contactInfoData);
      }
    },
    // ---------------------
    // friend command config
    // ---------------------
    addFriend: {
      key: "addFriend",
      label: "发送申请",
      type: CONTACT_INFO_BUTTON_TYPE.SUBMIT,
      onClick: (props2) => {
        var _a, _b, _c;
        addFriend({
          to: (_a = props2 == null ? void 0 : props2.contactInfoData) == null ? void 0 : _a.userID,
          source: "AddSource_Type_Web",
          remark: (_b = props2 == null ? void 0 : props2.contactInfoMoreList[1]) == null ? void 0 : _b.data,
          wording: (_c = props2 == null ? void 0 : props2.contactInfoMoreList[0]) == null ? void 0 : _c.data
        });
      }
    },
    deleteFriend: {
      key: "deleteFriend",
      label: "删除好友",
      type: CONTACT_INFO_BUTTON_TYPE.CANCEL,
      onClick: (props2) => {
        var _a;
        deleteFriend((_a = props2 == null ? void 0 : props2.contactInfoData) == null ? void 0 : _a.userID);
      }
    },
    enterC2CConversation: {
      key: "enterC2CConversation",
      label: "发送消息",
      type: CONTACT_INFO_BUTTON_TYPE.SUBMIT,
      onClick: (props2) => {
        enterConversation(props2 == null ? void 0 : props2.contactInfoData);
      }
    },
    // ---------------------
    // friend application command config
    // ---------------------
    acceptFriendApplication: {
      key: "acceptFriendApplication",
      label: "同意",
      type: CONTACT_INFO_BUTTON_TYPE.SUBMIT,
      onClick: (props2) => {
        var _a;
        acceptFriendApplication((_a = props2 == null ? void 0 : props2.contactInfoData) == null ? void 0 : _a.userID);
        zt.update(o$2.CUSTOM, "currentContactListKey", "friendList");
      }
    },
    refuseFriendApplication: {
      key: "refuseFriendApplication",
      label: "拒绝",
      type: CONTACT_INFO_BUTTON_TYPE.CANCEL,
      onClick: (props2) => {
        var _a;
        refuseFriendApplication((_a = props2 == null ? void 0 : props2.contactInfoData) == null ? void 0 : _a.userID);
      }
    }
  };
  const editIcon = "/assets/edit.4601124c.svg";
  const _sfc_main$1S = /* @__PURE__ */ vue.defineComponent({
    __name: "index",
    props: {
      value: {
        type: Boolean,
        default: false
      }
    },
    setup(__props, { expose: __expose }) {
      __expose();
      const __returned__ = {};
      Object.defineProperty(__returned__, "__isScriptSetup", { enumerable: false, value: true });
      return __returned__;
    }
  });
  function _sfc_render$1R(_ctx, _cache, $props, $setup, $data, $options) {
    return vue.openBlock(), vue.createElementBlock(
      vue.Fragment,
      null,
      [
        vue.createCommentVNode(" This component only supports external changes to prop value to change the switch state, to avoid the situation where the switchbar display state does not match the expected state due to internal asynchronous problems "),
        vue.createElementVNode(
          "div",
          {
            class: vue.normalizeClass(["tui-switch", $props.value ? "tui-switch-checked" : "tui-switch-no-checked"])
          },
          null,
          2
          /* CLASS */
        )
      ],
      2112
      /* STABLE_FRAGMENT, DEV_ROOT_FRAGMENT */
    );
  }
  const SwitchBar = /* @__PURE__ */ _export_sfc(_sfc_main$1S, [["render", _sfc_render$1R], ["__scopeId", "data-v-49c188d8"], ["__file", "C:/Users/Administrator/Desktop/Project Folder/ZXHand/ZXHandwritting_APP_uniapp/TUIKit/components/common/SwitchBar/index.vue"]]);
  const _sfc_main$1R = /* @__PURE__ */ vue.defineComponent({
    __name: "index",
    emits: ["switchConversation"],
    setup(__props, { expose: __expose, emit: __emit }) {
      __expose();
      const emits2 = __emit;
      const contactInfoData = vue.ref({});
      const contactInfoBasicList = vue.ref([]);
      const contactInfoMoreList = vue.ref([]);
      const contactInfoButtonList = vue.ref([]);
      const setEditing = (item) => {
        item.editing = true;
      };
      const isGroup = vue.computed(
        () => {
          var _a;
          return ((_a = contactInfoData.value) == null ? void 0 : _a.groupID) ? true : false;
        }
      );
      const isApplication = vue.computed(() => {
        return isApplicationType(contactInfoData == null ? void 0 : contactInfoData.value);
      });
      const isBothFriend = vue.ref(false);
      const isGroupMember = vue.computed(() => {
        var _a, _b;
        return ((_b = (_a = contactInfoData.value) == null ? void 0 : _a.selfInfo) == null ? void 0 : _b.userID) ? true : false;
      });
      const isInBlackList = vue.computed(() => {
        var _a;
        return !isGroup.value && ((_a = blackList.value) == null ? void 0 : _a.findIndex(
          (item) => {
            var _a2;
            return (item == null ? void 0 : item.userID) === ((_a2 = contactInfoData.value) == null ? void 0 : _a2.userID);
          }
        )) >= 0;
      });
      const blackList = vue.ref([]);
      vue.onMounted(() => {
        zt.watch(o$2.CUSTOM, {
          currentContactInfo: onCurrentContactInfoUpdated
        });
        zt.watch(o$2.USER, {
          userBlacklist: onUserBlacklistUpdated
        });
      });
      vue.onUnmounted(() => {
        zt.unwatch(o$2.CUSTOM, {
          currentContactInfo: onCurrentContactInfoUpdated
        });
        zt.unwatch(o$2.USER, {
          userBlacklist: onUserBlacklistUpdated
        });
      });
      const resetContactInfoUIData = () => {
        contactInfoData.value = {};
        contactInfoBasicList.value = [];
        contactInfoMoreList.value = [];
        contactInfoButtonList.value = [];
      };
      const resetContactSearchingUIData = () => {
        zt.update(o$2.CUSTOM, "currentContactInfo", {});
        zt.update(o$2.CUSTOM, "currentContactSearchingStatus", false);
        (i == null ? void 0 : i.closeSearching) && (i == null ? void 0 : i.closeSearching());
      };
      const onContactInfoEmitSubmit = (item) => {
        item.editSubmitHandler && item.editSubmitHandler({
          item,
          contactInfoData: contactInfoData.value,
          isBothFriend: isBothFriend.value,
          isInBlackList: isInBlackList.value
        });
      };
      const onContactInfoButtonClicked = (item) => {
        item.onClick && item.onClick({
          contactInfoData: contactInfoData.value,
          contactInfoMoreList: contactInfoMoreList.value
        });
        if (item.key === "enterGroupConversation" || item.key === "enterC2CConversation") {
          emits2("switchConversation", contactInfoData.value);
          resetContactSearchingUIData();
        }
      };
      const generateMoreInfo = async () => {
        var _a, _b, _c, _d;
        if (!isApplication.value) {
          if (!isGroup.value && !isBothFriend.value && !isInBlackList.value || isGroup.value && !isGroupMember.value && ((_a = contactInfoData.value) == null ? void 0 : _a.type) !== ((_b = Kt == null ? void 0 : Kt.TYPES) == null ? void 0 : _b.GRP_AVCHATROOM)) {
            contactMoreInfoConfig.setWords.data = "";
            contactInfoMoreList.value.push(contactMoreInfoConfig.setWords);
          }
          if (!isGroup.value && !isInBlackList.value) {
            contactMoreInfoConfig.setRemark.data = ((_c = contactInfoData.value) == null ? void 0 : _c.remark) || "";
            contactMoreInfoConfig.setRemark.editing = false;
            contactInfoMoreList.value.push(contactMoreInfoConfig.setRemark);
          }
          if (!isGroup.value && (isBothFriend.value || isInBlackList.value)) {
            contactMoreInfoConfig.blackList.data = isInBlackList.value || false;
            contactInfoMoreList.value.push(contactMoreInfoConfig.blackList);
          }
        } else {
          contactMoreInfoConfig.displayWords.data = ((_d = contactInfoData.value) == null ? void 0 : _d.wording) || "";
          contactInfoMoreList.value.push(contactMoreInfoConfig.displayWords);
        }
      };
      const generateButton = () => {
        var _a, _b, _c, _d, _e3, _f2, _g2, _h2, _i3, _j2, _k2, _l2, _m2, _n3, _o3;
        if (isInBlackList.value) {
          return;
        }
        if (isApplication.value) {
          if (((_a = contactInfoData.value) == null ? void 0 : _a.type) === ((_b = Kt == null ? void 0 : Kt.TYPES) == null ? void 0 : _b.SNS_APPLICATION_SENT_TO_ME)) {
            (_c = contactInfoButtonList == null ? void 0 : contactInfoButtonList.value) == null ? void 0 : _c.push(
              contactButtonConfig.refuseFriendApplication
            );
            (_d = contactInfoButtonList == null ? void 0 : contactInfoButtonList.value) == null ? void 0 : _d.push(
              contactButtonConfig.acceptFriendApplication
            );
          }
        } else {
          if (isGroup.value && isGroupMember.value) {
            switch ((_f2 = (_e3 = contactInfoData.value) == null ? void 0 : _e3.selfInfo) == null ? void 0 : _f2.role) {
              case "Owner":
                (_g2 = contactInfoButtonList == null ? void 0 : contactInfoButtonList.value) == null ? void 0 : _g2.push(contactButtonConfig.dismissGroup);
                break;
              default:
                (_h2 = contactInfoButtonList == null ? void 0 : contactInfoButtonList.value) == null ? void 0 : _h2.push(contactButtonConfig.quitGroup);
                break;
            }
            (_i3 = contactInfoButtonList == null ? void 0 : contactInfoButtonList.value) == null ? void 0 : _i3.push(
              contactButtonConfig.enterGroupConversation
            );
          } else if (!isGroup.value && isBothFriend.value) {
            (_j2 = contactInfoButtonList == null ? void 0 : contactInfoButtonList.value) == null ? void 0 : _j2.push(contactButtonConfig.deleteFriend);
            (_k2 = contactInfoButtonList == null ? void 0 : contactInfoButtonList.value) == null ? void 0 : _k2.push(
              contactButtonConfig.enterC2CConversation
            );
          } else {
            if (isGroup.value) {
              (_n3 = contactInfoButtonList == null ? void 0 : contactInfoButtonList.value) == null ? void 0 : _n3.push(
                ((_l2 = contactInfoData.value) == null ? void 0 : _l2.type) === ((_m2 = Kt == null ? void 0 : Kt.TYPES) == null ? void 0 : _m2.GRP_AVCHATROOM) ? contactButtonConfig.joinAVChatGroup : contactButtonConfig.joinGroup
              );
            } else {
              (_o3 = contactInfoButtonList == null ? void 0 : contactInfoButtonList.value) == null ? void 0 : _o3.push(contactButtonConfig.addFriend);
            }
          }
        }
      };
      function onUserBlacklistUpdated(userBlacklist) {
        blackList.value = userBlacklist;
      }
      async function onCurrentContactInfoUpdated(contactInfo) {
        var _a;
        if (contactInfoData.value && contactInfo && JSON.stringify(contactInfoData.value) === JSON.stringify(contactInfo)) {
          return;
        }
        resetContactInfoUIData();
        contactInfoData.value = deepCopy(contactInfo) || {};
        if (!contactInfoData.value || ((_a = Object.keys(contactInfoData.value)) == null ? void 0 : _a.length) === 0) {
          return;
        }
        contactInfoBasicList.value = generateContactInfoBasic(contactInfoData.value);
        isBothFriend.value = await isFriend(contactInfoData.value);
        generateMoreInfo();
        generateButton();
        if (contactInfo.infoKeyList) {
          contactInfoMoreList.value = contactInfo.infoKeyList.map((key) => {
            return contactMoreInfoConfig[key];
          });
        }
        if (contactInfo.btnKeyList) {
          contactInfoButtonList.value = contactInfo.btnKeyList.map((key) => {
            return contactButtonConfig[key];
          });
        }
      }
      const __returned__ = { emits: emits2, contactInfoData, contactInfoBasicList, contactInfoMoreList, contactInfoButtonList, setEditing, isGroup, isApplication, isBothFriend, isGroupMember, isInBlackList, blackList, resetContactInfoUIData, resetContactSearchingUIData, onContactInfoEmitSubmit, onContactInfoButtonClicked, generateMoreInfo, generateButton, onUserBlacklistUpdated, onCurrentContactInfoUpdated, get TUITranslateService() {
        return Jt;
      }, get isPC() {
        return isPC;
      }, get generateAvatar() {
        return generateAvatar;
      }, get generateContactInfoName() {
        return generateContactInfoName;
      }, Icon: Icon$1, get editSVG() {
        return editIcon;
      }, get backSVG() {
        return backSVG;
      }, SwitchBar, get CONTACT_INFO_LABEL_POSITION() {
        return CONTACT_INFO_LABEL_POSITION;
      }, get CONTACT_INFO_MORE_EDIT_TYPE() {
        return CONTACT_INFO_MORE_EDIT_TYPE;
      }, get CONTACT_INFO_BUTTON_TYPE() {
        return CONTACT_INFO_BUTTON_TYPE;
      } };
      Object.defineProperty(__returned__, "__isScriptSetup", { enumerable: false, value: true });
      return __returned__;
    }
  });
  function _sfc_render$1Q(_ctx, _cache, $props, $setup, $data, $options) {
    return typeof $setup.contactInfoData === "object" && Object.keys($setup.contactInfoData).length ? (vue.openBlock(), vue.createElementBlock(
      "div",
      {
        key: 0,
        class: vue.normalizeClass(["tui-contact-info", !$setup.isPC && "tui-contact-info-h5"])
      },
      [
        !$setup.isPC ? (vue.openBlock(), vue.createElementBlock(
          "div",
          {
            key: 0,
            class: vue.normalizeClass([
              "tui-contact-info-header",
              !$setup.isPC && "tui-contact-info-h5-header"
            ])
          },
          [
            vue.createElementVNode(
              "div",
              {
                class: vue.normalizeClass([
                  "tui-contact-info-header-icon",
                  !$setup.isPC && "tui-contact-info-h5-header-icon"
                ]),
                onClick: $setup.resetContactSearchingUIData
              },
              [
                vue.createVNode($setup["Icon"], { file: $setup.backSVG }, null, 8, ["file"])
              ],
              2
              /* CLASS */
            ),
            vue.createElementVNode(
              "div",
              {
                class: vue.normalizeClass([
                  "tui-contact-info-header-title",
                  !$setup.isPC && "tui-contact-info-h5-header-title"
                ])
              },
              vue.toDisplayString($setup.TUITranslateService.t("TUIContact.添加好友/群聊")),
              3
              /* TEXT, CLASS */
            )
          ],
          2
          /* CLASS */
        )) : vue.createCommentVNode("v-if", true),
        vue.createElementVNode(
          "div",
          {
            class: vue.normalizeClass(["tui-contact-info-basic", !$setup.isPC && "tui-contact-info-h5-basic"])
          },
          [
            vue.createElementVNode(
              "div",
              {
                class: vue.normalizeClass([
                  "tui-contact-info-basic-text",
                  !$setup.isPC && "tui-contact-info-h5-basic-text"
                ])
              },
              [
                vue.createElementVNode(
                  "div",
                  {
                    class: vue.normalizeClass([
                      "tui-contact-info-basic-text-name",
                      !$setup.isPC && "tui-contact-info-h5-basic-text-name"
                    ])
                  },
                  vue.toDisplayString($setup.generateContactInfoName($setup.contactInfoData)),
                  3
                  /* TEXT, CLASS */
                ),
                (vue.openBlock(true), vue.createElementBlock(
                  vue.Fragment,
                  null,
                  vue.renderList($setup.contactInfoBasicList, (item) => {
                    return vue.openBlock(), vue.createElementBlock(
                      "div",
                      {
                        key: item.label,
                        class: vue.normalizeClass([
                          "tui-contact-info-basic-text-other",
                          !$setup.isPC && "tui-contact-info-h5-basic-text-other"
                        ])
                      },
                      vue.toDisplayString(`${$setup.TUITranslateService.t(`TUIContact.${item.label}`)}:
          ${item.data}`),
                      3
                      /* TEXT, CLASS */
                    );
                  }),
                  128
                  /* KEYED_FRAGMENT */
                ))
              ],
              2
              /* CLASS */
            ),
            vue.createElementVNode("img", {
              class: vue.normalizeClass([
                "tui-contact-info-basic-avatar",
                !$setup.isPC && "tui-contact-info-h5-basic-avatar"
              ]),
              src: $setup.generateAvatar($setup.contactInfoData)
            }, null, 10, ["src"])
          ],
          2
          /* CLASS */
        ),
        $setup.contactInfoMoreList[0] ? (vue.openBlock(), vue.createElementBlock(
          "div",
          {
            key: 1,
            class: vue.normalizeClass(["tui-contact-info-more", !$setup.isPC && "tui-contact-info-h5-more"])
          },
          [
            (vue.openBlock(true), vue.createElementBlock(
              vue.Fragment,
              null,
              vue.renderList($setup.contactInfoMoreList, (item) => {
                return vue.openBlock(), vue.createElementBlock(
                  "div",
                  {
                    key: item.key,
                    class: vue.normalizeClass([
                      "tui-contact-info-more-item",
                      !$setup.isPC && "tui-contact-info-h5-more-item",
                      item.labelPosition === $setup.CONTACT_INFO_LABEL_POSITION.TOP ? "tui-contact-info-more-item-top" : "tui-contact-info-more-item-left"
                    ])
                  },
                  [
                    vue.createElementVNode(
                      "div",
                      {
                        class: vue.normalizeClass([
                          "tui-contact-info-more-item-label",
                          !$setup.isPC && "tui-contact-info-h5-more-item-label"
                        ])
                      },
                      vue.toDisplayString(`${$setup.TUITranslateService.t(`TUIContact.${item.label}`)}`),
                      3
                      /* TEXT, CLASS */
                    ),
                    vue.createElementVNode(
                      "div",
                      {
                        class: vue.normalizeClass([
                          "tui-contact-info-more-item-content",
                          !$setup.isPC && "tui-contact-info-h5-more-item-content"
                        ])
                      },
                      [
                        !item.editing ? (vue.openBlock(), vue.createElementBlock(
                          "div",
                          {
                            key: 0,
                            class: vue.normalizeClass([
                              "tui-contact-info-more-item-content-text",
                              !$setup.isPC && "tui-contact-info-h5-more-item-content-text"
                            ])
                          },
                          [
                            vue.createElementVNode(
                              "div",
                              {
                                class: vue.normalizeClass([
                                  "tui-contact-info-more-item-content-text-data",
                                  !$setup.isPC && "tui-contact-info-h5-more-item-content-text-data"
                                ])
                              },
                              vue.toDisplayString(item.data),
                              3
                              /* TEXT, CLASS */
                            ),
                            item.editable ? (vue.openBlock(), vue.createElementBlock("div", {
                              key: 0,
                              class: vue.normalizeClass([
                                "tui-contact-info-more-item-content-text-icon",
                                !$setup.isPC && "tui-contact-info-h5-more-item-content-text-icon"
                              ]),
                              onClick: ($event) => $setup.setEditing(item)
                            }, [
                              vue.createVNode($setup["Icon"], {
                                file: $setup.editSVG,
                                width: "14px",
                                height: "14px"
                              }, null, 8, ["file"])
                            ], 10, ["onClick"])) : vue.createCommentVNode("v-if", true)
                          ],
                          2
                          /* CLASS */
                        )) : item.editType === $setup.CONTACT_INFO_MORE_EDIT_TYPE.INPUT ? vue.withDirectives((vue.openBlock(), vue.createElementBlock("input", {
                          key: 1,
                          "onUpdate:modelValue": ($event) => item.data = $event,
                          class: vue.normalizeClass([
                            "tui-contact-info-more-item-content-input",
                            !$setup.isPC && "tui-contact-info-h5-more-item-content-input"
                          ]),
                          type: "text",
                          onConfirm: ($event) => $setup.onContactInfoEmitSubmit(item),
                          onKeyup: vue.withKeys(($event) => $setup.onContactInfoEmitSubmit(item), ["enter"])
                        }, null, 42, ["onUpdate:modelValue", "onConfirm", "onKeyup"])), [
                          [vue.vModelText, item.data]
                        ]) : item.editType === $setup.CONTACT_INFO_MORE_EDIT_TYPE.TEXTAREA ? vue.withDirectives((vue.openBlock(), vue.createElementBlock("textarea", {
                          key: 2,
                          "onUpdate:modelValue": ($event) => item.data = $event,
                          class: vue.normalizeClass([
                            "tui-contact-info-more-item-content-textarea",
                            !$setup.isPC && "tui-contact-info-h5-more-item-content-textarea"
                          ]),
                          "confirm-type": "done"
                        }, null, 10, ["onUpdate:modelValue"])), [
                          [vue.vModelText, item.data]
                        ]) : item.editType === $setup.CONTACT_INFO_MORE_EDIT_TYPE.SWITCH ? (vue.openBlock(), vue.createElementBlock("div", {
                          key: 3,
                          onClick: ($event) => $setup.onContactInfoEmitSubmit(item)
                        }, [
                          vue.createVNode($setup["SwitchBar"], {
                            value: item.data
                          }, null, 8, ["value"])
                        ], 8, ["onClick"])) : vue.createCommentVNode("v-if", true)
                      ],
                      2
                      /* CLASS */
                    )
                  ],
                  2
                  /* CLASS */
                );
              }),
              128
              /* KEYED_FRAGMENT */
            ))
          ],
          2
          /* CLASS */
        )) : vue.createCommentVNode("v-if", true),
        vue.createElementVNode(
          "div",
          {
            class: vue.normalizeClass([
              "tui-contact-info-button",
              !$setup.isPC && "tui-contact-info-h5-button"
            ])
          },
          [
            (vue.openBlock(true), vue.createElementBlock(
              vue.Fragment,
              null,
              vue.renderList($setup.contactInfoButtonList, (item) => {
                return vue.openBlock(), vue.createElementBlock("button", {
                  key: item.key,
                  class: vue.normalizeClass([
                    "tui-contact-info-button-item",
                    !$setup.isPC && "tui-contact-info-h5-button-item",
                    item.type === $setup.CONTACT_INFO_BUTTON_TYPE.CANCEL ? `tui-contact-info-button-item-cancel` : `tui-contact-info-button-item-submit`
                  ]),
                  onClick: ($event) => $setup.onContactInfoButtonClicked(item)
                }, vue.toDisplayString($setup.TUITranslateService.t(`TUIContact.${item.label}`)), 11, ["onClick"]);
              }),
              128
              /* KEYED_FRAGMENT */
            ))
          ],
          2
          /* CLASS */
        )
      ],
      2
      /* CLASS */
    )) : vue.createCommentVNode("v-if", true);
  }
  const ContactInfo = /* @__PURE__ */ _export_sfc(_sfc_main$1R, [["render", _sfc_render$1Q], ["__scopeId", "data-v-e2a6c8d8"], ["__file", "C:/Users/Administrator/Desktop/Project Folder/ZXHand/ZXHandwritting_APP_uniapp/TUIKit/components/TUIContact/contact-info/index.vue"]]);
  const _sfc_main$1Q = /* @__PURE__ */ vue.defineComponent({
    __name: "index",
    props: {
      // web/h5 single page application display format, uniapp please ignore
      displayType: {
        type: String,
        default: "contactList",
        // "contactList" /  "selectFriend"
        require: false
      }
    },
    emits: ["switchConversation"],
    setup(__props, { expose: __expose, emit: __emit }) {
      __expose();
      const emits2 = __emit;
      const props2 = __props;
      const displayTypeRef = vue.ref(props2.displayType || "contactList");
      const isShowSelectFriend = vue.ref(false);
      const isShowContactList = vue.ref(true);
      const isShowContactInfo = vue.ref(true);
      const currentTabIndex = vue.ref(1);
      const tabs = vue.ref([
        { label: "消息", icon: "/static/message.png" },
        { label: "通讯录", icon: "/static/profile-selected.png" }
        // { label: "设置", icon: "/path/to/icon3.png" },
      ]);
      const onTabSelected = (index2) => {
        currentTabIndex.value = index2;
        if (index2 === 0) {
          i == null ? void 0 : i.navigateTo({
            url: "/TUIKit/components/TUIConversation/index"
          });
        }
      };
      vue.watchEffect(() => {
        isShowContactList.value = (props2 == null ? void 0 : props2.displayType) !== "selectFriend";
      });
      zt.watch(o$2.CUSTOM, {
        isShowSelectFriendComponent: (data) => {
          var _a;
          if (!isUniFrameWork && (props2 == null ? void 0 : props2.displayType) === "selectFriend") {
            isShowSelectFriend.value = data;
            isShowContactList.value = false;
            return;
          }
          if (data) {
            isShowSelectFriend.value = true;
            if (isUniFrameWork) {
              displayTypeRef.value = "selectFriend";
              i == null ? void 0 : i.hideTabBar();
            }
          } else {
            isShowSelectFriend.value = false;
            if (isUniFrameWork) {
              displayTypeRef.value = props2.displayType;
              (_a = i == null ? void 0 : i.showTabBar()) == null ? void 0 : _a.catch(() => {
              });
            }
          }
        },
        currentContactInfo: (contactInfo) => {
          var _a;
          isShowContactInfo.value = isPC || contactInfo && typeof contactInfo === "object" && ((_a = Object.keys(contactInfo)) == null ? void 0 : _a.length) > 0;
        }
      });
      const switchConversation = (data) => {
        isUniFrameWork && (i == null ? void 0 : i.navigateTo({
          url: "/TUIKit/components/TUIChat/index"
        }));
        emits2("switchConversation", data);
      };
      const __returned__ = { emits: emits2, props: props2, displayTypeRef, isShowSelectFriend, isShowContactList, isShowContactInfo, currentTabIndex, tabs, onTabSelected, switchConversation, get isPC() {
        return isPC;
      }, SelectFriend, ContactSearch, ContactList, ContactInfo };
      Object.defineProperty(__returned__, "__isScriptSetup", { enumerable: false, value: true });
      return __returned__;
    }
  });
  function _sfc_render$1P(_ctx, _cache, $props, $setup, $data, $options) {
    return vue.openBlock(), vue.createElementBlock("view", null, [
      $setup.isShowSelectFriend ? (vue.openBlock(), vue.createBlock($setup["SelectFriend"], { key: 0 })) : $setup.isShowContactList ? (vue.openBlock(), vue.createElementBlock(
        "div",
        {
          key: 1,
          class: vue.normalizeClass(["tui-contact", !$setup.isPC && "tui-contact-h5"])
        },
        [
          vue.createElementVNode(
            "div",
            {
              class: vue.normalizeClass(["tui-contact-left", !$setup.isPC && "tui-contact-h5-left"])
            },
            [
              vue.createVNode($setup["ContactSearch"]),
              vue.createVNode($setup["ContactList"], {
                class: vue.normalizeClass(["tui-contact-left-list", !$setup.isPC && "tui-contact-h5-left-list"])
              }, null, 8, ["class"])
            ],
            2
            /* CLASS */
          ),
          vue.createCommentVNode(` <div v-if="isShowContactInfo" :class="['tui-contact-right', !isPC && 'tui-contact-h5-right']">\r
        <ContactInfo @switchConversation="switchConversation" />\r
      </div> `),
          $setup.isShowContactInfo ? (vue.openBlock(), vue.createElementBlock(
            "div",
            {
              key: 0,
              class: vue.normalizeClass(["tui-contact-right", !$setup.isPC && "tui-contact-h5-right"])
            },
            [
              vue.createVNode($setup["ContactInfo"], { onSwitchConversation: $setup.switchConversation })
            ],
            2
            /* CLASS */
          )) : vue.createCommentVNode("v-if", true)
        ],
        2
        /* CLASS */
      )) : vue.createCommentVNode("v-if", true),
      vue.createCommentVNode(' <button v-for="item in contactInfoButtonList" :key="item.key" :class="[\r\n          \'tui-contact-info-button-item\',\r\n          !isPC && \'tui-contact-info-h5-button-item\',\r\n          item.type === CONTACT_INFO_BUTTON_TYPE.CANCEL\r\n            ? `tui-contact-info-button-item-cancel`\r\n            : `tui-contact-info-button-item-submit`,\r\n        ]" @click="onContactInfoButtonClicked(item)">\r\n      {{ TUITranslateService.t(`TUIContact.${item.label}`) }}\r\n    </button> '),
      vue.createCommentVNode(' <TabBar :tabs="tabs" :currentIndex="currentTabIndex" @tab-selected="onTabSelected" /> ')
    ]);
  }
  const TUIContact$3 = /* @__PURE__ */ _export_sfc(_sfc_main$1Q, [["render", _sfc_render$1P], ["__scopeId", "data-v-32d81a7d"], ["__file", "C:/Users/Administrator/Desktop/Project Folder/ZXHand/ZXHandwritting_APP_uniapp/TUIKit/components/TUIContact/index.vue"]]);
  const _sfc_main$1P = {
    components: { TUIContact: TUIContact$3 },
    data() {
      return {
        statusBarHeight: "",
        btnyes: true,
        input_text: "",
        friends_List: [
          {
            name: "王老师",
            id: "000000",
            head: "https://lanhu-dds-backend.oss-cn-beijing.aliyuncs.com/merge_image/imgs/19217f29299e465481d28ae91dbf317b_mergeImage.png"
          },
          {
            name: "王老师",
            id: "000000",
            head: "https://lanhu-dds-backend.oss-cn-beijing.aliyuncs.com/merge_image/imgs/19217f29299e465481d28ae91dbf317b_mergeImage.png"
          }
        ]
      };
    },
    onLoad() {
      this.statusBarHeight = getApp().globalData.top;
    },
    methods: {
      input_search(event) {
        formatAppLog("log", "at pages/pagesall/home/search.vue:71", event.detail.value);
        this.input_text = event.detail.value;
        if (this.input_text == "") {
          this.btnyes = true;
        } else if (this.input_text != "") {
          this.btnyes = false;
        }
      },
      add_friend() {
        uni.navigateTo({
          url: "/pages/pagesall/home/add_friend"
        });
      },
      cancel_lation() {
        uni.navigateBack();
      }
    }
  };
  function _sfc_render$1O(_ctx, _cache, $props, $setup, $data, $options) {
    const _component_TUIContact = vue.resolveComponent("TUIContact");
    return vue.openBlock(), vue.createElementBlock(
      vue.Fragment,
      null,
      [
        vue.createCommentVNode(' <view class="btnbox">\r\n    <img src="https://lanhu.oss-cn-beijing.aliyuncs.com/SketchPng0ac4c131284679fa0f7412d62e239e026e1af50accd921fa8c94da8d9d529b26" alt="" class="btns_img" />\r\n    <input type="text" placeholder="请输入搜索ID" class="input1" prefix="search" @input="input_search" />\r\n\r\n    <view class="" v-if="btnyes" @click="cancel_lation">\r\n      <text class="btn">取消</text>\r\n    </view>\r\n    <view class="" v-else>\r\n      <text class="btn">搜索</text>\r\n    </view>\r\n  </view> '),
        vue.createElementVNode("view", null, [
          vue.createElementVNode(
            "view",
            {
              style: vue.normalizeStyle("height:" + ($data.statusBarHeight + 5) + "px;")
            },
            null,
            4
            /* STYLE */
          ),
          vue.createVNode(_component_TUIContact)
        ]),
        vue.createCommentVNode(' <view class="friends" v-for="(item,index) in friends_List" :key="index">\r\n		<view class="friendsbox" @click="friendsgoback">\r\n			<view class="friendsbox2">\r\n				<view class="friendsbox_img">\r\n					<img :src="item.head" alt="" />\r\n				</view>\r\n\r\n				<view class="friendsinter">\r\n					<view class="friends_text1">\r\n						{{item.name}}\r\n					</view>\r\n					<view class="friends_text2">\r\n						ID:{{item.id}}\r\n					</view>\r\n\r\n				</view>\r\n			</view>\r\n\r\n			<text class="friends_text3" @click="add_friend">添加好友</text>\r\n		</view>\r\n	</view> ')
      ],
      2112
      /* STABLE_FRAGMENT, DEV_ROOT_FRAGMENT */
    );
  }
  const PagesPagesallHomeSearch = /* @__PURE__ */ _export_sfc(_sfc_main$1P, [["render", _sfc_render$1O], ["__file", "C:/Users/Administrator/Desktop/Project Folder/ZXHand/ZXHandwritting_APP_uniapp/pages/pagesall/home/search.vue"]]);
  const _sfc_main$1O = {};
  function _sfc_render$1N(_ctx, _cache) {
    return " 我是扫一扫 ";
  }
  const PagesPagesallHomeSacnpage = /* @__PURE__ */ _export_sfc(_sfc_main$1O, [["render", _sfc_render$1N], ["__file", "C:/Users/Administrator/Desktop/Project Folder/ZXHand/ZXHandwritting_APP_uniapp/pages/pagesall/home/sacnpage.vue"]]);
  const _sfc_main$1N = {
    data() {
      return {
        statusBarHeight: ""
      };
    },
    onLoad() {
      this.statusBarHeight = getApp().globalData.top;
    },
    methods: {
      goback() {
        uni.navigateBack();
      },
      mycode() {
        uni.navigateTo({
          url: "/pages/pagesall/home/mycode"
        });
      }
    }
  };
  function _sfc_render$1M(_ctx, _cache, $props, $setup, $data, $options) {
    return vue.openBlock(), vue.createElementBlock("view", { class: "codepage" }, [
      vue.createElementVNode(
        "view",
        {
          style: vue.normalizeStyle("height:" + ($data.statusBarHeight + 5) + "px;")
        },
        null,
        4
        /* STYLE */
      ),
      vue.createElementVNode("view", { class: "code_titlebox" }, [
        vue.createElementVNode("view", {
          class: "messImg",
          onClick: _cache[0] || (_cache[0] = (...args) => $options.goback && $options.goback(...args))
        }, [
          vue.createElementVNode("img", {
            src: "https://lanhu.oss-cn-beijing.aliyuncs.com/SketchPnge1553c1d8d43568ee582b54f1deab731573c8804790b09e299c2e73eda1cfa68",
            alt: ""
          })
        ]),
        vue.createElementVNode("view", { class: "code_title" }, " 分享二维码 ")
      ]),
      vue.createElementVNode("view", { class: "code_codebox" }, [
        vue.createElementVNode("view", { class: "code_img" }, [
          vue.createElementVNode("img", {
            src: "https://lanhu.oss-cn-beijing.aliyuncs.com/SketchPngcd993bafb56f0fa9ca43f6a3a3f5885980722e955fcc6ed400fa9b64a364b72e",
            alt: ""
          })
        ]),
        vue.createElementVNode("view", { class: "code_titileimg" }, [
          vue.createElementVNode("img", {
            src: "https://lanhu-dds-backend.oss-cn-beijing.aliyuncs.com/merge_image/imgs/a1f75ab65caa4ac6afc5909f8472ecba_mergeImage.png",
            alt: ""
          }),
          vue.createElementVNode("view", { class: "code_name" }, [
            vue.createElementVNode("view", { style: { "font-weight": "500", "font-size": "28rpx", "color": "#000000" } }, "刘易阳的二维码"),
            vue.createElementVNode("view", { style: { "font-weight": "400", "font-size": "16rpx", "color": "#666666", "margin-top": "10rpx" } }, "分享给老师们加个好友吧 ")
          ])
        ]),
        vue.createElementVNode("view", { class: "code_codeimg" }, [
          vue.createElementVNode("img", {
            src: "https://lanhu.oss-cn-beijing.aliyuncs.com/SketchPngdec58e091c33964c716ceeb24df93a33629b032a848ee6ada66281e68aeaa069",
            alt: ""
          })
        ])
      ]),
      vue.createElementVNode("view", { class: "code_baocun" }, [
        vue.createElementVNode("img", {
          src: "https://lanhu.oss-cn-beijing.aliyuncs.com/SketchPnga09d8270200e68c37da10c6fc926c63f90e314b103034a125a42216d2610bbbf",
          alt: ""
        }),
        vue.createElementVNode("text", null, "保存到手机")
      ])
    ]);
  }
  const PagesPagesallHomeMycode = /* @__PURE__ */ _export_sfc(_sfc_main$1N, [["render", _sfc_render$1M], ["__file", "C:/Users/Administrator/Desktop/Project Folder/ZXHand/ZXHandwritting_APP_uniapp/pages/pagesall/home/mycode.vue"]]);
  const _sfc_main$1M = {
    data() {
      return {
        messList: [],
        // 初始化为空数组
        statusBarHeight: ""
      };
    },
    onLoad() {
      this.statusBarHeight = getApp().globalData.top;
      this.loadNoticeList();
    },
    methods: {
      goback() {
        uni.navigateBack();
      },
      async adverbtn(event, index2) {
        formatAppLog("log", "at pages/pagesall/home/adverMess.vue:57", event, index2);
        const selectedNotice = this.messList[index2];
        formatAppLog("log", "at pages/pagesall/home/adverMess.vue:59", selectedNotice.id);
        uni.navigateTo({
          url: `/pages/pagesall/home/adver_detail?id=${selectedNotice.id}`
        });
      },
      mycode() {
        uni.navigateTo({
          url: "/pages/pagesall/home/mycode"
        });
      },
      async loadNoticeList() {
        try {
          const store = useStore();
          const response = await fetchNoticeList();
          this.messList = response.rows;
          store.setMessageList(this.messList);
        } catch (error2) {
          formatAppLog("error", "at pages/pagesall/home/adverMess.vue:76", "获取公告消息失败:", error2);
        }
      }
    }
  };
  function _sfc_render$1L(_ctx, _cache, $props, $setup, $data, $options) {
    return vue.openBlock(), vue.createElementBlock("view", { class: "codepage" }, [
      vue.createElementVNode(
        "view",
        {
          style: vue.normalizeStyle("height:" + ($data.statusBarHeight + 5) + "px;")
        },
        null,
        4
        /* STYLE */
      ),
      vue.createElementVNode("view", { class: "code_titlebox" }, [
        vue.createElementVNode("view", {
          class: "messImg",
          onClick: _cache[0] || (_cache[0] = (...args) => $options.goback && $options.goback(...args))
        }, [
          vue.createElementVNode("img", {
            src: "https://lanhu.oss-cn-beijing.aliyuncs.com/SketchPng427bd6433cc6e0a8e82f63b3174b2c817dc9c299bd0c4414c8d258f46cf46f94",
            alt: ""
          })
        ]),
        vue.createElementVNode("view", { class: "code_title" }, " 公告消息 ")
      ]),
      $data.messList.length > 0 ? (vue.openBlock(true), vue.createElementBlock(
        vue.Fragment,
        { key: 0 },
        vue.renderList($data.messList, (item, index2) => {
          return vue.openBlock(), vue.createElementBlock("view", {
            class: "adverbox",
            key: index2
          }, [
            vue.createElementVNode("view", { class: "adver_time" }, [
              vue.createElementVNode("view", {
                class: "adver_hour",
                style: { "text-align": "center", "font-weight": "400", "font-size": "20rpx", "color": "#000000", "margin": "28rpx 0 28rpx 0" }
              }, [
                vue.createElementVNode(
                  "text",
                  null,
                  vue.toDisplayString(item.createtime),
                  1
                  /* TEXT */
                )
              ]),
              vue.createElementVNode("view", { class: "adver_content" }, [
                vue.createElementVNode(
                  "view",
                  { class: "adver_text1" },
                  vue.toDisplayString(item.title),
                  1
                  /* TEXT */
                ),
                vue.createElementVNode(
                  "view",
                  { class: "adver_text2" },
                  vue.toDisplayString(item.description),
                  1
                  /* TEXT */
                ),
                vue.createElementVNode("view", { class: "line" }, [
                  vue.createElementVNode("img", {
                    src: "https://lanhu.oss-cn-beijing.aliyuncs.com/SketchPng754b004becd9b25a8ebdc9d2cb98f423d3fa6fdf022dd0a97d950d38fe548f62",
                    alt: ""
                  })
                ]),
                vue.createElementVNode("view", {
                  class: "adver_btn",
                  onClick: ($event) => $options.adverbtn(_ctx.event, index2)
                }, " 查看详情 ", 8, ["onClick"])
              ])
            ])
          ]);
        }),
        128
        /* KEYED_FRAGMENT */
      )) : (vue.openBlock(), vue.createElementBlock("view", {
        key: 1,
        class: "kong",
        style: { "display": "flex", "justify-content": "center", "align-items": "center", "height": "100vh" }
      }, [
        vue.createElementVNode("image", {
          style: { "margin-top": "-600rpx" },
          src: _imports_0$5,
          mode: "aspectFit"
        }),
        vue.createCommentVNode(' <view class="bg_img"></view> ')
      ]))
    ]);
  }
  const PagesPagesallHomeAdverMess = /* @__PURE__ */ _export_sfc(_sfc_main$1M, [["render", _sfc_render$1L], ["__scopeId", "data-v-6857b9a9"], ["__file", "C:/Users/Administrator/Desktop/Project Folder/ZXHand/ZXHandwritting_APP_uniapp/pages/pagesall/home/adverMess.vue"]]);
  const _sfc_main$1L = {
    data() {
      return {
        messageList: [],
        // 存储消息列表
        selectedMessage: null,
        // 存储选中的公告
        statusBarHeight: ""
      };
    },
    onLoad(options) {
      this.statusBarHeight = getApp().globalData.top;
      const store = useStore();
      this.messageList = store.messageList;
      const messageId = options.id;
      this.selectedMessage = this.messageList.find((message2) => message2.id.toString() === messageId.toString());
    },
    methods: {
      goback() {
        uni.navigateBack();
      }
    }
  };
  function _sfc_render$1K(_ctx, _cache, $props, $setup, $data, $options) {
    return vue.openBlock(), vue.createElementBlock("view", { class: "code_page" }, [
      vue.createElementVNode(
        "view",
        {
          style: vue.normalizeStyle("height:" + ($data.statusBarHeight + 5) + "px;")
        },
        null,
        4
        /* STYLE */
      ),
      vue.createElementVNode("view", { class: "code_titlebox" }, [
        vue.createElementVNode("view", {
          class: "messImg",
          onClick: _cache[0] || (_cache[0] = (...args) => $options.goback && $options.goback(...args))
        }, [
          vue.createElementVNode("img", {
            src: "https://lanhu.oss-cn-beijing.aliyuncs.com/SketchPng427bd6433cc6e0a8e82f63b3174b2c817dc9c299bd0c4414c8d258f46cf46f94",
            alt: ""
          })
        ]),
        vue.createElementVNode(
          "view",
          { class: "code_title" },
          vue.toDisplayString($data.selectedMessage.title),
          1
          /* TEXT */
        )
      ]),
      vue.createElementVNode("view", { class: "detail_title" }, [
        vue.createElementVNode(
          "text",
          { style: { "font-weight": "500", "font-size": "32rpx", "color": "#000000", "width": "70%", "overflow": "hidden", "white-space": "nowrap", "text-overflow": "ellipsis" } },
          vue.toDisplayString($data.selectedMessage.description),
          1
          /* TEXT */
        ),
        vue.createElementVNode("view", { class: "detail_time" }, [
          vue.createElementVNode(
            "view",
            { class: "time_1" },
            vue.toDisplayString($data.selectedMessage.createtime),
            1
            /* TEXT */
          ),
          vue.createCommentVNode(' <view class="time_2">\r\n          {{mours}}\r\n        </view> ')
        ])
      ]),
      vue.createElementVNode("div", {
        class: "detail_box",
        innerHTML: $data.selectedMessage.content
      }, null, 8, ["innerHTML"])
    ]);
  }
  const PagesPagesallHomeAdverDetail = /* @__PURE__ */ _export_sfc(_sfc_main$1L, [["render", _sfc_render$1K], ["__file", "C:/Users/Administrator/Desktop/Project Folder/ZXHand/ZXHandwritting_APP_uniapp/pages/pagesall/home/adver_detail.vue"]]);
  const _sfc_main$1K = {
    data() {
      return {
        friend_heard: "https://lanhu-dds-backend.oss-cn-beijing.aliyuncs.com/merge_image/imgs/26483a4d5dc54c63ae2af524e81ebb4d_mergeImage.png",
        friend_name: "张老师",
        friend_id: "1232222",
        statusBarHeight: ""
      };
    },
    onLoad() {
      this.statusBarHeight = getApp().globalData.top;
    },
    methods: {
      fri_goback() {
        uni.navigateBack();
      }
    }
  };
  function _sfc_render$1J(_ctx, _cache, $props, $setup, $data, $options) {
    return vue.openBlock(), vue.createElementBlock("view", null, [
      vue.createElementVNode(
        "view",
        {
          style: vue.normalizeStyle("height:" + ($data.statusBarHeight + 5) + "px;")
        },
        null,
        4
        /* STYLE */
      ),
      vue.createElementVNode("view", {
        class: "friend_goback",
        onClick: _cache[0] || (_cache[0] = (...args) => $options.fri_goback && $options.fri_goback(...args))
      }, [
        vue.createElementVNode("img", {
          src: "https://lanhu.oss-cn-beijing.aliyuncs.com/SketchPng427bd6433cc6e0a8e82f63b3174b2c817dc9c299bd0c4414c8d258f46cf46f94",
          alt: ""
        })
      ]),
      vue.createElementVNode("view", { class: "friend_name" }, [
        vue.createElementVNode("img", {
          src: $data.friend_heard,
          alt: ""
        }, null, 8, ["src"]),
        vue.createElementVNode(
          "view",
          {
            class: "fri_text1",
            style: { "margin-top": "8rpx" }
          },
          vue.toDisplayString($data.friend_name),
          1
          /* TEXT */
        ),
        vue.createElementVNode(
          "view",
          {
            class: "fri_text2",
            style: { "margin-top": "8rpx" }
          },
          " ID:" + vue.toDisplayString($data.friend_id),
          1
          /* TEXT */
        )
      ]),
      vue.createElementVNode("view", { class: "test_verify" }, [
        vue.createElementVNode("view", { class: "verify_text" }, " 验证信息: "),
        vue.createElementVNode("view", { class: "verify_input" }, [
          vue.createElementVNode("input", {
            type: "text",
            placeholder: "书法一班刘易阳"
          })
        ])
      ]),
      vue.createElementVNode("view", { class: "centerbox" }, [
        vue.createElementVNode("view", { class: "friend_btn" }, [
          vue.createElementVNode("text", { style: { "font-weight": "500", "font-size": "28rpx", "color": "#FFFFFF" } }, "添加好友")
        ])
      ])
    ]);
  }
  const PagesPagesallHomeAddFriend = /* @__PURE__ */ _export_sfc(_sfc_main$1K, [["render", _sfc_render$1J], ["__file", "C:/Users/Administrator/Desktop/Project Folder/ZXHand/ZXHandwritting_APP_uniapp/pages/pagesall/home/add_friend.vue"]]);
  const _sfc_main$1J = {
    components: {
      timeline,
      timelineItem
    },
    data() {
      return {
        statusBarHeight: "",
        images: [
          "/static/img/swiper1.png",
          "https://lanhu.oss-cn-beijing.aliyuncs.com/SketchPngdadd194d15ae0a321cf1b69b42b82fbdb401e127f68d9e091f73b2ef2c6682a6",
          "/static/img/swiper1.png"
        ],
        infolist: [
          {
            title: "坚持练习书法的一百个理由",
            content: "书法比赛将在2024年7月15号开始本次举办自河南、浙江、广东、山西、湖南...",
            titleimg: "https://lanhu.oss-cn-beijing.aliyuncs.com/SketchPng73002970eb6951969634d1ac818f9fbd983ad92340d21cf601ab0d495647806c",
            timeImg: "https://lanhu.oss-cn-beijing.aliyuncs.com/SketchPng9124bf95026b34308d6bd993d7c3774578aa0f9fdf293cc08d4cb043bc1ba5a8",
            ressImg: "https://lanhu.oss-cn-beijing.aliyuncs.com/SketchPng5b0a65fd47f768b4c8f59ba6e2c415f9fe8dd593587d9ad6bbcd9f647066dc01",
            infotime: "2024-06-14",
            inforess: "湛江市-麻章区-东风路校区",
            infoNumber: "10万人已观看",
            infoImg: "https://lanhu.oss-cn-beijing.aliyuncs.com/SketchPng580a34d876cda0a5b37d451367934eb478865bb7b4b80bedde3f71fcaa5c8775",
            jiantouimg: "https://lanhu.oss-cn-beijing.aliyuncs.com/SketchPng6deab9d71966dbbdc8297bb42543232fd5ab80e8f1b6e7650f9a66310b4f656e"
          },
          {
            title: "坚持练习书法的五百个理由",
            content: "书法比赛将在2024年7月15号开始本次举办自河南、浙江、广东、山西、湖南...",
            titleimg: "https://lanhu.oss-cn-beijing.aliyuncs.com/SketchPng73002970eb6951969634d1ac818f9fbd983ad92340d21cf601ab0d495647806c",
            timeImg: "https://lanhu.oss-cn-beijing.aliyuncs.com/SketchPng9124bf95026b34308d6bd993d7c3774578aa0f9fdf293cc08d4cb043bc1ba5a8",
            ressImg: "https://lanhu.oss-cn-beijing.aliyuncs.com/SketchPng5b0a65fd47f768b4c8f59ba6e2c415f9fe8dd593587d9ad6bbcd9f647066dc01",
            infotime: "2024-06-23",
            inforess: "湛江市-丰台区-城景路校区",
            infoNumber: "10万人已观看",
            infoImg: "https://lanhu.oss-cn-beijing.aliyuncs.com/SketchPng580a34d876cda0a5b37d451367934eb478865bb7b4b80bedde3f71fcaa5c8775",
            jiantouimg: "https://lanhu.oss-cn-beijing.aliyuncs.com/SketchPng6deab9d71966dbbdc8297bb42543232fd5ab80e8f1b6e7650f9a66310b4f656e"
          }
        ],
        site_imgList: [
          {
            site_img: "https://lanhu-dds-backend.oss-cn-beijing.aliyuncs.com/merge_image/imgs/52c3b49276f64677810162df6b253e1c_mergeImage.png",
            title: "书法家张子豪现场观看指导"
          },
          {
            site_img: "https://lanhu-dds-backend.oss-cn-beijing.aliyuncs.com/merge_image/imgs/52c3b49276f64677810162df6b253e1c_mergeImage.png",
            title: "书法家张子豪现场观看指导"
          },
          {
            site_img: "https://lanhu-dds-backend.oss-cn-beijing.aliyuncs.com/merge_image/imgs/52c3b49276f64677810162df6b253e1c_mergeImage.png",
            title: "书法家张子豪现场观看指导"
          }
        ],
        scrollTop: 0,
        old: {
          scrollTop: 0
        },
        matchDetail: {
          match_date: {
            data: []
            // 初始化为空数组
          },
          // 可以根据需要添加更多数组
          match_news: [{}],
          match_scene: {}
          // 示例数组2
        }
      };
    },
    onLoad() {
      this.statusBarHeight = getApp().globalData.top;
    },
    computed: {
      // 从 Pinia 中获取存储的下标
      selectedIndex() {
        const store = useStore();
        return store.selectedSwiperIndex;
      }
    },
    mounted() {
      this.getMatchDetail(this.selectedIndex);
    },
    methods: {
      async getMatchDetail(id) {
        try {
          formatAppLog("log", "at pages/pagesall/home/game.vue:186", "请求比赛详情，当前下标:", id);
          const response = await fetchMatchDetail(id);
          this.matchDetail = response.items;
          if (this.matchDetail.match_news && Array.isArray(this.matchDetail.match_news)) {
            this.matchDetail.match_news.forEach((item) => {
              item.titleimg = "https://lanhu.oss-cn-beijing.aliyuncs.com/SketchPng73002970eb6951969634d1ac818f9fbd983ad92340d21cf601ab0d495647806c";
              item.timeImg = "https://lanhu.oss-cn-beijing.aliyuncs.com/SketchPng9124bf95026b34308d6bd993d7c3774578aa0f9fdf293cc08d4cb043bc1ba5a8";
            });
          }
          formatAppLog("log", "at pages/pagesall/home/game.vue:195", "获取到的比赛详情:", this.matchDetail);
        } catch (error2) {
          formatAppLog("error", "at pages/pagesall/home/game.vue:198", "请求接口出错:", error2);
          uni.showToast({
            title: "获取比赛详情失败",
            icon: "none",
            duration: 2e3
          });
        }
      },
      goback() {
        uni.navigateBack();
      },
      scroll: function(e2) {
        formatAppLog("log", "at pages/pagesall/home/game.vue:211", e2);
        this.old.scrollTop = e2.detail.scrollTop;
      }
    }
  };
  function _sfc_render$1I(_ctx, _cache, $props, $setup, $data, $options) {
    const _component_timelineItem = vue.resolveComponent("timelineItem");
    const _component_timeline = vue.resolveComponent("timeline");
    return vue.openBlock(), vue.createElementBlock(
      vue.Fragment,
      null,
      [
        vue.createElementVNode("view", { class: "code_titlebox" }, [
          vue.createElementVNode(
            "view",
            {
              style: vue.normalizeStyle("height:" + ($data.statusBarHeight + 5) + "px;")
            },
            null,
            4
            /* STYLE */
          ),
          vue.createElementVNode("view", {
            class: "messImg",
            onClick: _cache[0] || (_cache[0] = (...args) => $options.goback && $options.goback(...args))
          }, [
            vue.createElementVNode("img", {
              src: "https://lanhu.oss-cn-beijing.aliyuncs.com/SketchPng427bd6433cc6e0a8e82f63b3174b2c817dc9c299bd0c4414c8d258f46cf46f94",
              alt: ""
            })
          ]),
          vue.createElementVNode("view", { class: "code_title" }, " 赛事比赛 ")
        ]),
        vue.createElementVNode("view", { class: "swibox" }, [
          vue.createElementVNode("swiper", {
            class: "swiper-container",
            "indicator-dots": "true",
            autoplay: "true",
            interval: "3000",
            circular: "true",
            "indicator-color": "#ddd",
            "indicator-active-color": "#333"
          }, [
            (vue.openBlock(true), vue.createElementBlock(
              vue.Fragment,
              null,
              vue.renderList($data.images, (item, index2) => {
                return vue.openBlock(), vue.createElementBlock("swiper-item", { key: index2 }, [
                  vue.createElementVNode("image", {
                    src: item,
                    class: "swiper-image"
                  }, null, 8, ["src"])
                ]);
              }),
              128
              /* KEYED_FRAGMENT */
            ))
          ])
        ]),
        vue.createElementVNode("view", { class: "game_time" }, [
          vue.createElementVNode("text", { style: { "font-weight": "500", "font-size": "36rpx", "color": "#000000" } }, "活动时间安排")
        ]),
        vue.createVNode(_component_timeline, null, {
          default: vue.withCtx(() => [
            $data.matchDetail.match_date.data[0] ? (vue.openBlock(), vue.createBlock(_component_timelineItem, {
              key: 0,
              leftTime: $data.matchDetail.match_date.data[0].title,
              color: " #84F257"
            }, {
              default: vue.withCtx(() => [
                vue.createElementVNode(
                  "view",
                  { class: "tips" },
                  vue.toDisplayString($data.matchDetail.match_date.data[0].s_date) + "——" + vue.toDisplayString($data.matchDetail.match_date.data[0].e_date),
                  1
                  /* TEXT */
                )
              ]),
              _: 1
              /* STABLE */
            }, 8, ["leftTime"])) : vue.createCommentVNode("v-if", true),
            $data.matchDetail.match_date.data[1] ? (vue.openBlock(), vue.createBlock(_component_timelineItem, {
              key: 1,
              leftTime: $data.matchDetail.match_date.data[1].title,
              color: "#84F257"
            }, {
              default: vue.withCtx(() => [
                vue.createElementVNode(
                  "view",
                  { class: "tips" },
                  vue.toDisplayString($data.matchDetail.match_date.data[1].s_date) + "——" + vue.toDisplayString($data.matchDetail.match_date.data[1].e_date),
                  1
                  /* TEXT */
                )
              ]),
              _: 1
              /* STABLE */
            }, 8, ["leftTime"])) : vue.createCommentVNode("v-if", true),
            $data.matchDetail.match_date.data[2] ? (vue.openBlock(), vue.createBlock(_component_timelineItem, {
              key: 2,
              leftTime: $data.matchDetail.match_date.data[2].title,
              leftlist1: $data.matchDetail.match_date.data[2].title,
              leftlist2: $data.matchDetail.match_date.data[2].title,
              color: "#F25757"
            }, {
              default: vue.withCtx(() => [
                vue.createElementVNode(
                  "view",
                  { class: "tips" },
                  vue.toDisplayString($data.matchDetail.match_date.data[2].s_date) + "——" + vue.toDisplayString($data.matchDetail.match_date.data[2].e_date),
                  1
                  /* TEXT */
                )
              ]),
              _: 1
              /* STABLE */
            }, 8, ["leftTime", "leftlist1", "leftlist2"])) : vue.createCommentVNode("v-if", true),
            $data.matchDetail.match_date.data[3] ? (vue.openBlock(), vue.createBlock(_component_timelineItem, {
              key: 3,
              leftTime: $data.matchDetail.match_date.data[3].title,
              leftlist1: $data.matchDetail.match_date.data[3].title,
              leftlist2: $data.matchDetail.match_date.data[3].title,
              color: "#F25757"
            }, {
              default: vue.withCtx(() => [
                vue.createElementVNode(
                  "view",
                  { class: "tips" },
                  vue.toDisplayString($data.matchDetail.match_date.data[3].s_date) + "——" + vue.toDisplayString($data.matchDetail.match_date.data[3].e_date),
                  1
                  /* TEXT */
                )
              ]),
              _: 1
              /* STABLE */
            }, 8, ["leftTime", "leftlist1", "leftlist2"])) : vue.createCommentVNode("v-if", true),
            vue.createVNode(_component_timelineItem, {
              leftTime: "颁奖晚会",
              color: "#5791F2"
            }, {
              default: vue.withCtx(() => [
                vue.createElementVNode("view", { class: "tips" }, "2024.08.01——2024.08.02")
              ]),
              _: 1
              /* STABLE */
            })
          ]),
          _: 1
          /* STABLE */
        }),
        vue.createElementVNode("view", { class: "infobox" }, [
          (vue.openBlock(true), vue.createElementBlock(
            vue.Fragment,
            null,
            vue.renderList($data.matchDetail.match_news, (item, index2) => {
              return vue.openBlock(), vue.createElementBlock("view", {
                class: "infolistbox",
                key: index2
              }, [
                vue.createElementVNode("view", { class: "infostr" }, [
                  vue.createElementVNode("view", { class: "huatibox" }, [
                    vue.createElementVNode("img", {
                      src: item.titleimg,
                      alt: ""
                    }, null, 8, ["src"]),
                    vue.createElementVNode(
                      "text",
                      { style: { "font-size": "32rpx", "font-weight": "500" } },
                      vue.toDisplayString(item.title),
                      1
                      /* TEXT */
                    )
                  ]),
                  vue.createElementVNode("view", { class: "paddbox" }, [
                    vue.createElementVNode(
                      "view",
                      { class: "titleText" },
                      vue.toDisplayString(item.description),
                      1
                      /* TEXT */
                    ),
                    vue.createElementVNode("view", { class: "huatibox" }, [
                      vue.createElementVNode("img", {
                        src: item.timeImg,
                        alt: ""
                      }, null, 8, ["src"]),
                      vue.createElementVNode(
                        "text",
                        { style: { "font-weight": "400", "font-size": "24rpx", "color": "#666666", "font-style": "normal", "margin-left": "10rpx" } },
                        vue.toDisplayString(item.addtime),
                        1
                        /* TEXT */
                      )
                    ])
                  ])
                ]),
                vue.createElementVNode("view", { class: "infoImg" }, [
                  vue.createElementVNode("view", { class: "proImg" }, [
                    vue.createElementVNode("img", {
                      src: item.infoImg,
                      alt: ""
                    }, null, 8, ["src"])
                  ])
                ])
              ]);
            }),
            128
            /* KEYED_FRAGMENT */
          ))
        ]),
        vue.createElementVNode("view", { class: "event_site" }, [
          vue.createElementVNode("view", { class: "site_title" }, " 活动现场 "),
          vue.createElementVNode("view", null, [
            vue.createElementVNode(
              "scroll-view",
              {
                class: "scroll-view_H",
                "scroll-x": "true",
                onScroll: _cache[1] || (_cache[1] = (...args) => $options.scroll && $options.scroll(...args)),
                "scroll-left": "120",
                "show-scrollbar": "true"
              },
              [
                (vue.openBlock(true), vue.createElementBlock(
                  vue.Fragment,
                  null,
                  vue.renderList($data.matchDetail.match_scene, (item, index2) => {
                    return vue.openBlock(), vue.createElementBlock("view", {
                      id: "demo1",
                      class: "scroll-view-item_H uni-bg-red",
                      key: index2
                    }, [
                      vue.createElementVNode("img", {
                        src: item.thumb,
                        alt: ""
                      }, null, 8, ["src"]),
                      vue.createElementVNode(
                        "view",
                        { class: "img_text" },
                        vue.toDisplayString(item.title),
                        1
                        /* TEXT */
                      )
                    ]);
                  }),
                  128
                  /* KEYED_FRAGMENT */
                ))
              ],
              32
              /* NEED_HYDRATION */
            )
          ])
        ])
      ],
      64
      /* STABLE_FRAGMENT */
    );
  }
  const PagesPagesallHomeGame = /* @__PURE__ */ _export_sfc(_sfc_main$1J, [["render", _sfc_render$1I], ["__file", "C:/Users/Administrator/Desktop/Project Folder/ZXHand/ZXHandwritting_APP_uniapp/pages/pagesall/home/game.vue"]]);
  const _imports_0$2 = "/static/img/advio.png";
  const _imports_1 = "/static/img/Frame.png";
  const _sfc_main$1I = {
    data() {
      return {
        statusBarHeight: "",
        messages_stu: [
          {
            username: "刘易阳",
            type: "text",
            status: "l",
            avatar: "https://lanhu-dds-backend.oss-cn-beijing.aliyuncs.com/merge_image/imgs/cf805a0bbe4b4f17abb1c215c9ec2df7_mergeImage.png",
            text: "刘易阳你今天表现不错哦1111111111111111111111111111111111111111111111",
            time: 1683791638972
          },
          {
            username: "刘易阳",
            type: "text",
            status: "l",
            avatar: "https://lanhu-dds-backend.oss-cn-beijing.aliyuncs.com/merge_image/imgs/cf805a0bbe4b4f17abb1c215c9ec2df7_mergeImage.png",
            text: "刘易阳你今天表现不错哦1111111111111111111111111111111111111111111111",
            time: 1683793245623
          },
          {
            username: "刘易阳",
            type: "text",
            status: "l",
            avatar: "https://lanhu-dds-backend.oss-cn-beijing.aliyuncs.com/merge_image/imgs/cf805a0bbe4b4f17abb1c215c9ec2df7_mergeImage.png",
            text: "刘易阳你今天表现不错哦1111111111111111111111111111111111111111111111",
            time: 1683793245623
          },
          {
            username: "刘易阳",
            type: "text",
            status: "l",
            avatar: "https://lanhu-dds-backend.oss-cn-beijing.aliyuncs.com/merge_image/imgs/cf805a0bbe4b4f17abb1c215c9ec2df7_mergeImage.png",
            text: "刘易阳你今天表现不错哦",
            time: 1683793245623
          },
          {
            username: "刘易阳",
            type: "img",
            status: "r",
            avatar: "https://lanhu-dds-backend.oss-cn-beijing.aliyuncs.com/merge_image/imgs/7872400aa4644186b920b0121d6a5136_mergeImage.png",
            text: "https://lanhu.oss-cn-beijing.aliyuncs.com/SketchPng580a34d876cda0a5b37d451367934eb478865bb7b4b80bedde3f71fcaa5c8775",
            time: 1683793245623
          },
          {
            username: "刘易阳",
            type: "text",
            status: "l",
            avatar: "https://lanhu-dds-backend.oss-cn-beijing.aliyuncs.com/merge_image/imgs/cf805a0bbe4b4f17abb1c215c9ec2df7_mergeImage.png",
            text: "刘易阳你今天表现不错哦1111111111111111111111111111111111111111111111",
            time: 1683793245623
          },
          {
            username: "刘易阳",
            type: "text",
            status: "r",
            avatar: "https://lanhu-dds-backend.oss-cn-beijing.aliyuncs.com/merge_image/imgs/7872400aa4644186b920b0121d6a5136_mergeImage.png",
            text: "刘易阳你今天表现不错哦1111111111111111111111111111111111111111111111",
            time: 1683793245623
          },
          {
            username: "刘易阳",
            type: "text",
            status: "l",
            avatar: "https://lanhu-dds-backend.oss-cn-beijing.aliyuncs.com/merge_image/imgs/cf805a0bbe4b4f17abb1c215c9ec2df7_mergeImage.png",
            text: "刘易阳你今天表现不错哦1111111111111111111111111111111111111111111111",
            time: 1683793245623
          },
          {
            username: "刘易阳",
            type: "text",
            status: "r",
            avatar: "https://lanhu-dds-backend.oss-cn-beijing.aliyuncs.com/merge_image/imgs/7872400aa4644186b920b0121d6a5136_mergeImage.png",
            text: "刘易阳你今天表现不错哦1111111111111111111111111111111111111111111111",
            time: 1683793245623
          }
          // 其他学生消息...
        ],
        inputMessage: "",
        chat_name: "书法一班刘老师",
        change: true,
        poaMessgae: "poaMessgae",
        scrollViewHeight: "",
        startTime: null,
        longPressDuration: 6e3,
        // 定义长按的阈值（毫秒）,
        show: true
      };
    },
    methods: {
      onload() {
        this.statusBarHeight = getApp().globalData.top;
        formatAppLog("log", "at pages/pagesall/home/chat.vue:151", "1111");
        this.scrollToBottom();
        this.poalast();
        this.getHeight(".chat_box");
      },
      formatDate(value) {
        if (typeof value == "undefined") {
          return "";
        } else {
          let date2 = new Date(value);
          let now2 = /* @__PURE__ */ new Date();
          let y2 = date2.getFullYear();
          let MM = date2.getMonth() + 1;
          MM = MM < 10 ? "0" + MM : MM;
          let d2 = date2.getDate();
          d2 = d2 < 10 ? "0" + d2 : d2;
          let h2 = date2.getHours();
          h2 = h2 < 10 ? "0" + h2 : h2;
          let m2 = date2.getMinutes();
          m2 = m2 < 10 ? "0" + m2 : m2;
          date2.getSeconds();
          if (now2.getDate() - d2 == 1 && now2 - date2 < 1728e5) {
            return "昨天" + h2 + ":" + m2;
          } else if (now2 - date2 < 864e5) {
            return h2 + ":" + m2;
          } else if (now2 - date2 >= 864e5 && now2 - date2 < 31536e6) {
            return MM + "-" + d2 + " " + h2 + ":" + m2;
          } else if (now2 - date2 >= 31536e6) {
            return y2 + "-" + MM + "-" + d2 + " " + h2 + ":" + m2;
          }
        }
      },
      onSend() {
        let mess = {
          text: this.inputMessage,
          status: "r",
          type: "text",
          avatar: "https://lanhu-dds-backend.oss-cn-beijing.aliyuncs.com/merge_image/imgs/7872400aa4644186b920b0121d6a5136_mergeImage.png",
          time: /* @__PURE__ */ new Date() - 0
        };
        this.sendmessage(JSON.stringify(mess));
        this.inputMessage = "";
      },
      sendmessage(e2) {
        formatAppLog("log", "at pages/pagesall/home/chat.vue:206", e2);
        this.messages_stu.push(JSON.parse(e2));
        this.scrollToBottom();
        this.poalast();
      },
      scrollToBottom() {
        this.$nextTick(() => {
          const scrollView = this.$refs.messageList;
          if (scrollView) {
            scrollView.scrollTop = scrollView.scrollHeight;
          }
        });
      },
      poalast() {
        this.$nextTick(() => {
          this.poaMessgae = "";
          setTimeout(() => {
            this.poaMessgae = "poaMessgae";
          }, 50);
        });
      },
      input_change() {
        if (this.change == true) {
          formatAppLog("log", "at pages/pagesall/home/chat.vue:233", this.change);
          this.change = false;
          formatAppLog("log", "at pages/pagesall/home/chat.vue:235", this.change);
        } else if (this.change == false) {
          this.change = true;
        }
      },
      inputchange() {
        if (this.change == true) {
          formatAppLog("log", "at pages/pagesall/home/chat.vue:242", this.change);
          this.change = false;
          formatAppLog("log", "at pages/pagesall/home/chat.vue:244", this.change);
        } else if (this.change == false) {
          this.change = true;
        }
      },
      handleTouchStart() {
        formatAppLog("log", "at pages/pagesall/home/chat.vue:250", "1111");
        this.startTime = (/* @__PURE__ */ new Date()).getTime();
      },
      handleTouchEnd() {
        formatAppLog("log", "at pages/pagesall/home/chat.vue:254", "1111");
        if (this.startTime) {
          let endTime = (/* @__PURE__ */ new Date()).getTime();
          let duration1 = (endTime - this.startTime) / 1e3;
          let duration = Math.round(duration1);
          if (duration < 1) {
            formatAppLog("log", "at pages/pagesall/home/chat.vue:260", "时间太短了");
          } else {
            formatAppLog("log", "at pages/pagesall/home/chat.vue:262", `${duration}`);
            let mess = {
              username: "刘易阳",
              type: "record",
              status: "r",
              // type 区分消息类型
              avatar: "https://lanhu-dds-backend.oss-cn-beijing.aliyuncs.com/merge_image/imgs/7872400aa4644186b920b0121d6a5136_mergeImage.png",
              text: duration,
              time: /* @__PURE__ */ new Date() - 0
            };
            this.messages_stu.push(mess);
            this.poalast();
          }
          this.startTime = null;
        }
      },
      chat_goback() {
        uni.navigateBack();
      }
    },
    mounted() {
      formatAppLog("log", "at pages/pagesall/home/chat.vue:287", "1111");
      this.poalast();
    }
  };
  function _sfc_render$1H(_ctx, _cache, $props, $setup, $data, $options) {
    return vue.openBlock(), vue.createElementBlock("view", {
      class: "chat_box",
      "scroll-into-view": $data.poaMessgae
    }, [
      vue.createElementVNode(
        "view",
        {
          style: vue.normalizeStyle("height:" + ($data.statusBarHeight + 5) + "px;")
        },
        null,
        4
        /* STYLE */
      ),
      vue.createElementVNode("view", { class: "chat_title_box" }, [
        vue.createElementVNode("view", { class: "chat_title" }, [
          vue.createElementVNode("view", {
            class: "chat_title_img",
            onClick: _cache[0] || (_cache[0] = (...args) => $options.chat_goback && $options.chat_goback(...args))
          }, [
            vue.createElementVNode("img", {
              src: "https://lanhu.oss-cn-beijing.aliyuncs.com/SketchPng427bd6433cc6e0a8e82f63b3174b2c817dc9c299bd0c4414c8d258f46cf46f94",
              alt: ""
            })
          ]),
          vue.createElementVNode("view", { class: "chat_head_img" }, [
            vue.createElementVNode("img", {
              src: "https://lanhu-dds-backend.oss-cn-beijing.aliyuncs.com/merge_image/imgs/cf805a0bbe4b4f17abb1c215c9ec2df7_mergeImage.png",
              alt: ""
            })
          ]),
          vue.createElementVNode(
            "view",
            { class: "chat_name" },
            vue.toDisplayString($data.chat_name),
            1
            /* TEXT */
          )
        ])
      ]),
      vue.createElementVNode("view", { class: "chat-container" }, [
        vue.createElementVNode("scroll-view", {
          ref: "messageList",
          "scroll-y": " true",
          class: "message-list",
          "scroll-into-view": $data.poaMessgae
        }, [
          (vue.openBlock(true), vue.createElementBlock(
            vue.Fragment,
            null,
            vue.renderList($data.messages_stu, (item, index2) => {
              return vue.openBlock(), vue.createElementBlock("view", {
                key: index2,
                class: "message-item_stu"
              }, [
                index2 == 0 || item.time - $data.messages_stu[index2 - 1].time >= 3e5 ? (vue.openBlock(), vue.createElementBlock("view", {
                  key: 0,
                  class: "time"
                }, [
                  vue.createElementVNode(
                    "view",
                    null,
                    vue.toDisplayString($options.formatDate(item.time)),
                    1
                    /* TEXT */
                  )
                ])) : vue.createCommentVNode("v-if", true),
                vue.createElementVNode("view", {
                  class: "content1",
                  id: item.status == "l" ? "l" : "r"
                }, [
                  item.type == "img" ? (vue.openBlock(), vue.createElementBlock("view", {
                    key: 0,
                    class: "text"
                  }, [
                    vue.createElementVNode("img", {
                      src: "https://lanhu.oss-cn-beijing.aliyuncs.com/SketchPng580a34d876cda0a5b37d451367934eb478865bb7b4b80bedde3f71fcaa5c8775",
                      alt: ""
                    })
                  ])) : vue.createCommentVNode("v-if", true),
                  item.type == "record" ? (vue.openBlock(), vue.createElementBlock("view", {
                    key: 1,
                    class: "advio"
                  }, [
                    vue.createElementVNode(
                      "view",
                      { class: "" },
                      vue.toDisplayString(item.text) + ' " ',
                      1
                      /* TEXT */
                    ),
                    vue.createElementVNode("img", {
                      src: _imports_0$2,
                      alt: ""
                    })
                  ])) : vue.createCommentVNode("v-if", true),
                  item.type == "text" ? (vue.openBlock(), vue.createElementBlock(
                    "view",
                    {
                      key: 2,
                      class: "text"
                    },
                    vue.toDisplayString(item.text),
                    1
                    /* TEXT */
                  )) : vue.createCommentVNode("v-if", true),
                  vue.createElementVNode("view", {
                    class: "avatar",
                    style: { "margin-left": "20rpx" }
                  }, [
                    vue.createElementVNode("image", {
                      src: item.avatar
                    }, null, 8, ["src"])
                  ])
                ], 8, ["id"])
              ]);
            }),
            128
            /* KEYED_FRAGMENT */
          )),
          vue.createElementVNode("view", { id: "poaMessgae" }),
          vue.createCommentVNode(" 仅用于定位到消息最后一条 ")
        ], 8, ["scroll-into-view"]),
        vue.createElementVNode("view", { class: "input-container" }, [
          vue.createElementVNode("view", { class: "chat_input" }, [
            $data.change ? (vue.openBlock(), vue.createElementBlock("img", {
              key: 0,
              src: "https://lanhu.oss-cn-beijing.aliyuncs.com/SketchPng8336930e00a2e304b3bd63727ff79ab21eb7c0da57bcc1da2dc88adc00ef2cbe",
              alt: "",
              onClick: _cache[1] || (_cache[1] = (...args) => $options.input_change && $options.input_change(...args))
            })) : (vue.openBlock(), vue.createElementBlock("img", {
              key: 1,
              src: _imports_1,
              alt: "",
              srcset: "",
              onClick: _cache[2] || (_cache[2] = (...args) => $options.inputchange && $options.inputchange(...args))
            })),
            $data.change ? vue.withDirectives((vue.openBlock(), vue.createElementBlock(
              "input",
              {
                key: 2,
                "onUpdate:modelValue": _cache[3] || (_cache[3] = ($event) => $data.inputMessage = $event),
                placeholder: "发消息...",
                onFocus: _cache[4] || (_cache[4] = (...args) => $options.scrollToBottom && $options.scrollToBottom(...args)),
                "confirm-type": "send",
                onConfirm: _cache[5] || (_cache[5] = (...args) => $options.onSend && $options.onSend(...args))
              },
              null,
              544
              /* NEED_HYDRATION, NEED_PATCH */
            )), [
              [vue.vModelText, $data.inputMessage]
            ]) : (vue.openBlock(), vue.createElementBlock(
              "view",
              {
                key: 3,
                class: "voice",
                onTouchstart: _cache[6] || (_cache[6] = (...args) => $options.handleTouchStart && $options.handleTouchStart(...args)),
                onTouchend: _cache[7] || (_cache[7] = (...args) => $options.handleTouchEnd && $options.handleTouchEnd(...args))
              },
              " 按住说话 ",
              32
              /* NEED_HYDRATION */
            )),
            vue.createElementVNode("img", {
              src: "https://lanhu.oss-cn-beijing.aliyuncs.com/SketchPng59f0b59c28758e28c9970d6e3110b53be29f04b99fded460a8f2a1cd5b32d1da",
              alt: "",
              class: "btn_img"
            })
          ])
        ])
      ])
    ], 8, ["scroll-into-view"]);
  }
  const PagesPagesallHomeChat = /* @__PURE__ */ _export_sfc(_sfc_main$1I, [["render", _sfc_render$1H], ["__file", "C:/Users/Administrator/Desktop/Project Folder/ZXHand/ZXHandwritting_APP_uniapp/pages/pagesall/home/chat.vue"]]);
  const _imports_0$1 = "/static/img/noVideo.png";
  const _sfc_main$1H = {
    data() {
      return {
        images: [
          "/static/img/swiper1.png",
          "https://lanhu.oss-cn-beijing.aliyuncs.com/SketchPngdadd194d15ae0a321cf1b69b42b82fbdb401e127f68d9e091f73b2ef2c6682a6",
          "/static/img/swiper1.png"
        ],
        listdata: [{
          biaoti: "书法综合突破集训营(赠教学视频)",
          laoshi: " 书法综合突破集训营主导讲师刘老师经验丰富…",
          star: "2024.8.22",
          end: "2024.8.24",
          hearimg: "https://lanhu.oss-cn-beijing.aliyuncs.com/SketchPngf75020ee967309de69964375963839256bf76467ffccdabe9efe77aefea8f6e1",
          techerimg: "https://lanhu.oss-cn-beijing.aliyuncs.com/SketchPng580a34d876cda0a5b37d451367934eb478865bb7b4b80bedde3f71fcaa5c8775",
          teachername: "李衣裳",
          pers: "2034",
          money: "免费",
          online: "线上",
          planum: "26000",
          quenum: "15999"
        }],
        hours: "",
        minutes: "",
        seconds: "",
        intervalId: null,
        // 保存计时器ID
        audioContext: null,
        // 用于存储音频上下文的引用
        videoContext: null,
        // 用于存储音频上下文的引用
        learnList: {
          font_data: null,
          // 
          info: {}
          // 初始化为一个数组，用于存储其他相关信息
        },
        homeworkFinishTime: null,
        statusBarHeight: ""
      };
    },
    onLoad() {
      this.statusBarHeight = getApp().globalData.top;
      this.startCountdown();
      this.audioContext = uni.createInnerAudioContext();
      this.loadHomeworkAudio();
    },
    onUnload() {
      this.stopCountdown();
      this.audioContext.destroy();
    },
    mounted() {
      this.loadHomeworkAudio();
    },
    methods: {
      async submitHomework() {
        uni.chooseImage({
          count: 1,
          // 选择的图片数量
          sourceType: ["camera", "album"],
          // 选择的来源，'camera' 表示使用摄像头
          success: (res) => {
            this.images = res.tempFilePaths;
            this.uploadImage(res.tempFilePaths[0]);
          },
          fail: (err) => {
            formatAppLog("error", "at pages/pagesall/course/go_learn.vue:131", "选择图片失败:", err);
          }
        });
      },
      async uploadImage(filePath) {
        try {
          const uploadResult = await uni.uploadFile({
            url: "http://admin.zexishuhua.com/api/user/submithomework",
            // 替换为您的上传接口
            filePath,
            name: "file",
            // 根据后端要求设置文件字段的名称
            formData: {
              homework_id: this.learnList.info.id,
              // 将 homework_id 添加到 formData 中
              token: uni.getStorageSync("token")
              // 其他需要发送的数据
            }
          });
          const response = JSON.parse(uploadResult.data);
          if (response.code === 1) {
            uni.showToast({
              title: response.msg,
              // 从接口返回的消息
              icon: "none",
              duration: 2e3
              // 提示显示2秒
            });
          } else {
            uni.showToast({
              title: "上传失败，请重试",
              // 默认的失败提示
              icon: "none",
              duration: 2e3
              // 提示显示2秒
            });
          }
        } catch (error2) {
          formatAppLog("error", "at pages/pagesall/course/go_learn.vue:171", "上传失败:", error2);
          uni.showToast({
            title: "上传异常，请稍后再试",
            icon: "none",
            duration: 2e3
            // 提示显示2秒
          });
        }
      },
      async loadHomeworkAudio() {
        try {
          const response = await fetchHomeworkAudio();
          this.learnList.font_data = [];
          this.learnList.info = [];
          this.learnList.font_data = response.items.font_data || {};
          this.learnList.info = response.items[0];
          formatAppLog("log", "at pages/pagesall/course/go_learn.vue:196", "Font Data:", this.learnList.font_data);
          formatAppLog("log", "at pages/pagesall/course/go_learn.vue:197", "Info Data:", this.learnList.info);
          formatAppLog("log", "at pages/pagesall/course/go_learn.vue:198", this.learnList.font_data[0].voice_url);
          this.homeworkFinishTime = this.learnList.info.homeworkFinishTime;
          if (this.learnList.font_data.length > 0) {
            const audioSrc = this.learnList.font_data[0].voice_url;
            this.audioContext.src = audioSrc;
          }
        } catch (error2) {
          formatAppLog("error", "at pages/pagesall/course/go_learn.vue:207", "获取作业失败:", error2);
        }
      },
      // loadHomeworkAudio() {
      //   const audioSrc = 'https://lv-sycdn.kuwo.cn/54b050f63f0cf2c46e7ad4a70bb2fb29/6734043a/resource/30106/trackmedia/M800001DZgUf2NfnXZ.mp3'; // 这里替换为动态获取的路径
      //   this.audioContext.src = audioSrc; // 设置音频源地址
      // },
      playAudio() {
        this.audioContext.play();
      },
      pauseAudio() {
        this.audioContext.pause();
      },
      stopAudio() {
        this.audioContext.stop();
      },
      formatTime(value) {
        return value.toString().padStart(2, "0");
      },
      updateCountdown() {
        let end = new Date(this.homeworkFinishTime);
        let now2 = /* @__PURE__ */ new Date();
        let timeDiff = end - now2;
        if (timeDiff > 0) {
          let totalSeconds = Math.floor(timeDiff / 1e3);
          let hours = Math.floor(totalSeconds / 3600);
          let minutes = Math.floor(totalSeconds % 3600 / 60);
          let seconds = totalSeconds % 60;
          this.hours = this.formatTime(hours);
          this.minutes = this.formatTime(minutes);
          this.seconds = this.formatTime(seconds);
        } else {
          this.hours = "00";
          this.minutes = "00";
          this.seconds = "00";
        }
      },
      startCountdown() {
        this.updateCountdown();
        this.intervalId = setInterval(this.updateCountdown, 1e3);
      },
      stopCountdown() {
        if (this.intervalId) {
          clearInterval(this.intervalId);
          this.intervalId = null;
        }
      },
      back_learn() {
        uni.navigateBack();
      },
      btnsignup() {
      }
    }
  };
  function _sfc_render$1G(_ctx, _cache, $props, $setup, $data, $options) {
    return vue.openBlock(), vue.createElementBlock("view", null, [
      vue.createElementVNode(
        "view",
        {
          style: vue.normalizeStyle("height:" + ($data.statusBarHeight + 5) + "px;")
        },
        null,
        4
        /* STYLE */
      ),
      $data.learnList && $data.learnList.font_data && $data.learnList.font_data.length > 0 ? (vue.openBlock(), vue.createElementBlock("view", { key: 0 }, [
        vue.createElementVNode("view", { class: "learn_title" }, [
          vue.createElementVNode("img", {
            src: "https://lanhu-dds-backend.oss-cn-beijing.aliyuncs.com/merge_image/imgs/abf07bd571444c73aceb1d1b20093538_mergeImage.png",
            alt: "",
            onClick: _cache[0] || (_cache[0] = (...args) => $options.back_learn && $options.back_learn(...args))
          }),
          vue.createElementVNode("view", null, "视频学习")
        ]),
        vue.createCommentVNode(" 确保在这里先检查 learnList 和 learnList.font_data 是否存在 "),
        $data.learnList && $data.learnList.font_data && $data.learnList.font_data.length > 0 ? (vue.openBlock(), vue.createElementBlock("video", {
          key: 0,
          onPlay: _cache[1] || (_cache[1] = (...args) => $options.playAudio && $options.playAudio(...args)),
          onPause: _cache[2] || (_cache[2] = (...args) => $options.pauseAudio && $options.pauseAudio(...args)),
          onEnded: _cache[3] || (_cache[3] = (...args) => $options.stopAudio && $options.stopAudio(...args)),
          class: "learn_video",
          src: $data.learnList.font_data[0].video,
          muted: "true"
        }, null, 40, ["src"])) : vue.createCommentVNode("v-if", true),
        vue.createElementVNode(
          "view",
          { class: "learn_text" },
          vue.toDisplayString($data.learnList.info.content),
          1
          /* TEXT */
        ),
        vue.createElementVNode("view", { class: "actiClass" }, [
          vue.createElementVNode("view", { class: "act_itme" }, [
            vue.createElementVNode("view", { class: "list_index" }, [
              vue.createElementVNode("view", { class: "act_Img" }, [
                vue.createElementVNode("img", {
                  src: $data.learnList.info.sub_image,
                  alt: ""
                }, null, 8, ["src"]),
                vue.createElementVNode("view", { class: "act_Teacher" }, [
                  vue.createElementVNode(
                    "text",
                    null,
                    vue.toDisplayString($data.learnList.info.teacher_name),
                    1
                    /* TEXT */
                  ),
                  vue.createElementVNode("text", { style: { "font-size": "20rpx", "margin-top": "10rpx" } }, "授课")
                ]),
                vue.createElementVNode("view", { class: "act_time" }, [
                  vue.createElementVNode("text", { style: { "font-size": "24rpx" } }, "距结束还剩:"),
                  vue.createElementVNode("view", { class: "time_textbox" }, [
                    vue.createElementVNode(
                      "text",
                      { style: { "font-size": "20rpx", "padding": "3rpx 5rpx 3rpx 5rpx", "border-radius": "5rpx" } },
                      vue.toDisplayString($data.hours),
                      1
                      /* TEXT */
                    ),
                    vue.createElementVNode("text", { style: { "font-size": "20rpx", "background-color": "#fff", "color": "#F53C38" } }, ":"),
                    vue.createElementVNode(
                      "text",
                      { style: { "font-size": "20rpx", "padding": "3rpx 5rpx 3rpx 5rpx", "border-radius": "5rpx" } },
                      vue.toDisplayString($data.minutes),
                      1
                      /* TEXT */
                    ),
                    vue.createElementVNode("text", { style: { "font-size": "20rpx", "background-color": "#fff", "color": "#F53C38" } }, ":"),
                    vue.createElementVNode(
                      "text",
                      { style: { "font-size": "20rpx", "padding": "3rpx 5rpx 3rpx 5rpx", "border-radius": "5rpx" } },
                      vue.toDisplayString($data.seconds),
                      1
                      /* TEXT */
                    )
                  ])
                ])
              ])
            ]),
            vue.createElementVNode("view", { class: "peo_text" }, " 已有30人学习 ")
          ])
        ]),
        vue.createElementVNode("view", { class: "input_leabox" }, [
          vue.createElementVNode("view", { class: "ipt_learn" }, [
            vue.createElementVNode("textarea", {
              type: "text",
              placeholder: "本次横撇斜钩教学视频：相关作业就是多写多练多练多写",
              class: "input_padd"
            })
          ]),
          vue.createElementVNode("view", {
            class: "btn_leabox",
            onClick: _cache[4] || (_cache[4] = (...args) => $options.submitHomework && $options.submitHomework(...args))
          }, " 提交作业 ")
        ])
      ])) : (vue.openBlock(), vue.createElementBlock("view", {
        key: 1,
        class: "kong",
        style: { "display": "flex", "justify-content": "center", "align-items": "center", "height": "100vh" }
      }, [
        vue.createElementVNode("image", {
          style: { "width": "400rpx", "height": "400rpx" },
          src: _imports_0$1,
          mode: "aspectFit"
        })
      ]))
    ]);
  }
  const PagesPagesallCourseGoLearn = /* @__PURE__ */ _export_sfc(_sfc_main$1H, [["render", _sfc_render$1G], ["__file", "C:/Users/Administrator/Desktop/Project Folder/ZXHand/ZXHandwritting_APP_uniapp/pages/pagesall/course/go_learn.vue"]]);
  const fontData = [
    {
      "font_class": "arrow-down",
      "unicode": ""
    },
    {
      "font_class": "arrow-left",
      "unicode": ""
    },
    {
      "font_class": "arrow-right",
      "unicode": ""
    },
    {
      "font_class": "arrow-up",
      "unicode": ""
    },
    {
      "font_class": "auth",
      "unicode": ""
    },
    {
      "font_class": "auth-filled",
      "unicode": ""
    },
    {
      "font_class": "back",
      "unicode": ""
    },
    {
      "font_class": "bars",
      "unicode": ""
    },
    {
      "font_class": "calendar",
      "unicode": ""
    },
    {
      "font_class": "calendar-filled",
      "unicode": ""
    },
    {
      "font_class": "camera",
      "unicode": ""
    },
    {
      "font_class": "camera-filled",
      "unicode": ""
    },
    {
      "font_class": "cart",
      "unicode": ""
    },
    {
      "font_class": "cart-filled",
      "unicode": ""
    },
    {
      "font_class": "chat",
      "unicode": ""
    },
    {
      "font_class": "chat-filled",
      "unicode": ""
    },
    {
      "font_class": "chatboxes",
      "unicode": ""
    },
    {
      "font_class": "chatboxes-filled",
      "unicode": ""
    },
    {
      "font_class": "chatbubble",
      "unicode": ""
    },
    {
      "font_class": "chatbubble-filled",
      "unicode": ""
    },
    {
      "font_class": "checkbox",
      "unicode": ""
    },
    {
      "font_class": "checkbox-filled",
      "unicode": ""
    },
    {
      "font_class": "checkmarkempty",
      "unicode": ""
    },
    {
      "font_class": "circle",
      "unicode": ""
    },
    {
      "font_class": "circle-filled",
      "unicode": ""
    },
    {
      "font_class": "clear",
      "unicode": ""
    },
    {
      "font_class": "close",
      "unicode": ""
    },
    {
      "font_class": "closeempty",
      "unicode": ""
    },
    {
      "font_class": "cloud-download",
      "unicode": ""
    },
    {
      "font_class": "cloud-download-filled",
      "unicode": ""
    },
    {
      "font_class": "cloud-upload",
      "unicode": ""
    },
    {
      "font_class": "cloud-upload-filled",
      "unicode": ""
    },
    {
      "font_class": "color",
      "unicode": ""
    },
    {
      "font_class": "color-filled",
      "unicode": ""
    },
    {
      "font_class": "compose",
      "unicode": ""
    },
    {
      "font_class": "contact",
      "unicode": ""
    },
    {
      "font_class": "contact-filled",
      "unicode": ""
    },
    {
      "font_class": "down",
      "unicode": ""
    },
    {
      "font_class": "bottom",
      "unicode": ""
    },
    {
      "font_class": "download",
      "unicode": ""
    },
    {
      "font_class": "download-filled",
      "unicode": ""
    },
    {
      "font_class": "email",
      "unicode": ""
    },
    {
      "font_class": "email-filled",
      "unicode": ""
    },
    {
      "font_class": "eye",
      "unicode": ""
    },
    {
      "font_class": "eye-filled",
      "unicode": ""
    },
    {
      "font_class": "eye-slash",
      "unicode": ""
    },
    {
      "font_class": "eye-slash-filled",
      "unicode": ""
    },
    {
      "font_class": "fire",
      "unicode": ""
    },
    {
      "font_class": "fire-filled",
      "unicode": ""
    },
    {
      "font_class": "flag",
      "unicode": ""
    },
    {
      "font_class": "flag-filled",
      "unicode": ""
    },
    {
      "font_class": "folder-add",
      "unicode": ""
    },
    {
      "font_class": "folder-add-filled",
      "unicode": ""
    },
    {
      "font_class": "font",
      "unicode": ""
    },
    {
      "font_class": "forward",
      "unicode": ""
    },
    {
      "font_class": "gear",
      "unicode": ""
    },
    {
      "font_class": "gear-filled",
      "unicode": ""
    },
    {
      "font_class": "gift",
      "unicode": ""
    },
    {
      "font_class": "gift-filled",
      "unicode": ""
    },
    {
      "font_class": "hand-down",
      "unicode": ""
    },
    {
      "font_class": "hand-down-filled",
      "unicode": ""
    },
    {
      "font_class": "hand-up",
      "unicode": ""
    },
    {
      "font_class": "hand-up-filled",
      "unicode": ""
    },
    {
      "font_class": "headphones",
      "unicode": ""
    },
    {
      "font_class": "heart",
      "unicode": ""
    },
    {
      "font_class": "heart-filled",
      "unicode": ""
    },
    {
      "font_class": "help",
      "unicode": ""
    },
    {
      "font_class": "help-filled",
      "unicode": ""
    },
    {
      "font_class": "home",
      "unicode": ""
    },
    {
      "font_class": "home-filled",
      "unicode": ""
    },
    {
      "font_class": "image",
      "unicode": ""
    },
    {
      "font_class": "image-filled",
      "unicode": ""
    },
    {
      "font_class": "images",
      "unicode": ""
    },
    {
      "font_class": "images-filled",
      "unicode": ""
    },
    {
      "font_class": "info",
      "unicode": ""
    },
    {
      "font_class": "info-filled",
      "unicode": ""
    },
    {
      "font_class": "left",
      "unicode": ""
    },
    {
      "font_class": "link",
      "unicode": ""
    },
    {
      "font_class": "list",
      "unicode": ""
    },
    {
      "font_class": "location",
      "unicode": ""
    },
    {
      "font_class": "location-filled",
      "unicode": ""
    },
    {
      "font_class": "locked",
      "unicode": ""
    },
    {
      "font_class": "locked-filled",
      "unicode": ""
    },
    {
      "font_class": "loop",
      "unicode": ""
    },
    {
      "font_class": "mail-open",
      "unicode": ""
    },
    {
      "font_class": "mail-open-filled",
      "unicode": ""
    },
    {
      "font_class": "map",
      "unicode": ""
    },
    {
      "font_class": "map-filled",
      "unicode": ""
    },
    {
      "font_class": "map-pin",
      "unicode": ""
    },
    {
      "font_class": "map-pin-ellipse",
      "unicode": ""
    },
    {
      "font_class": "medal",
      "unicode": ""
    },
    {
      "font_class": "medal-filled",
      "unicode": ""
    },
    {
      "font_class": "mic",
      "unicode": ""
    },
    {
      "font_class": "mic-filled",
      "unicode": ""
    },
    {
      "font_class": "micoff",
      "unicode": ""
    },
    {
      "font_class": "micoff-filled",
      "unicode": ""
    },
    {
      "font_class": "minus",
      "unicode": ""
    },
    {
      "font_class": "minus-filled",
      "unicode": ""
    },
    {
      "font_class": "more",
      "unicode": ""
    },
    {
      "font_class": "more-filled",
      "unicode": ""
    },
    {
      "font_class": "navigate",
      "unicode": ""
    },
    {
      "font_class": "navigate-filled",
      "unicode": ""
    },
    {
      "font_class": "notification",
      "unicode": ""
    },
    {
      "font_class": "notification-filled",
      "unicode": ""
    },
    {
      "font_class": "paperclip",
      "unicode": ""
    },
    {
      "font_class": "paperplane",
      "unicode": ""
    },
    {
      "font_class": "paperplane-filled",
      "unicode": ""
    },
    {
      "font_class": "person",
      "unicode": ""
    },
    {
      "font_class": "person-filled",
      "unicode": ""
    },
    {
      "font_class": "personadd",
      "unicode": ""
    },
    {
      "font_class": "personadd-filled",
      "unicode": ""
    },
    {
      "font_class": "personadd-filled-copy",
      "unicode": ""
    },
    {
      "font_class": "phone",
      "unicode": ""
    },
    {
      "font_class": "phone-filled",
      "unicode": ""
    },
    {
      "font_class": "plus",
      "unicode": ""
    },
    {
      "font_class": "plus-filled",
      "unicode": ""
    },
    {
      "font_class": "plusempty",
      "unicode": ""
    },
    {
      "font_class": "pulldown",
      "unicode": ""
    },
    {
      "font_class": "pyq",
      "unicode": ""
    },
    {
      "font_class": "qq",
      "unicode": ""
    },
    {
      "font_class": "redo",
      "unicode": ""
    },
    {
      "font_class": "redo-filled",
      "unicode": ""
    },
    {
      "font_class": "refresh",
      "unicode": ""
    },
    {
      "font_class": "refresh-filled",
      "unicode": ""
    },
    {
      "font_class": "refreshempty",
      "unicode": ""
    },
    {
      "font_class": "reload",
      "unicode": ""
    },
    {
      "font_class": "right",
      "unicode": ""
    },
    {
      "font_class": "scan",
      "unicode": ""
    },
    {
      "font_class": "search",
      "unicode": ""
    },
    {
      "font_class": "settings",
      "unicode": ""
    },
    {
      "font_class": "settings-filled",
      "unicode": ""
    },
    {
      "font_class": "shop",
      "unicode": ""
    },
    {
      "font_class": "shop-filled",
      "unicode": ""
    },
    {
      "font_class": "smallcircle",
      "unicode": ""
    },
    {
      "font_class": "smallcircle-filled",
      "unicode": ""
    },
    {
      "font_class": "sound",
      "unicode": ""
    },
    {
      "font_class": "sound-filled",
      "unicode": ""
    },
    {
      "font_class": "spinner-cycle",
      "unicode": ""
    },
    {
      "font_class": "staff",
      "unicode": ""
    },
    {
      "font_class": "staff-filled",
      "unicode": ""
    },
    {
      "font_class": "star",
      "unicode": ""
    },
    {
      "font_class": "star-filled",
      "unicode": ""
    },
    {
      "font_class": "starhalf",
      "unicode": ""
    },
    {
      "font_class": "trash",
      "unicode": ""
    },
    {
      "font_class": "trash-filled",
      "unicode": ""
    },
    {
      "font_class": "tune",
      "unicode": ""
    },
    {
      "font_class": "tune-filled",
      "unicode": ""
    },
    {
      "font_class": "undo",
      "unicode": ""
    },
    {
      "font_class": "undo-filled",
      "unicode": ""
    },
    {
      "font_class": "up",
      "unicode": ""
    },
    {
      "font_class": "top",
      "unicode": ""
    },
    {
      "font_class": "upload",
      "unicode": ""
    },
    {
      "font_class": "upload-filled",
      "unicode": ""
    },
    {
      "font_class": "videocam",
      "unicode": ""
    },
    {
      "font_class": "videocam-filled",
      "unicode": ""
    },
    {
      "font_class": "vip",
      "unicode": ""
    },
    {
      "font_class": "vip-filled",
      "unicode": ""
    },
    {
      "font_class": "wallet",
      "unicode": ""
    },
    {
      "font_class": "wallet-filled",
      "unicode": ""
    },
    {
      "font_class": "weibo",
      "unicode": ""
    },
    {
      "font_class": "weixin",
      "unicode": ""
    }
  ];
  const getVal = (val) => {
    const reg = /^[0-9]*$/g;
    return typeof val === "number" || reg.test(val) ? val + "px" : val;
  };
  const _sfc_main$1G = {
    name: "UniIcons",
    emits: ["click"],
    props: {
      type: {
        type: String,
        default: ""
      },
      color: {
        type: String,
        default: "#333333"
      },
      size: {
        type: [Number, String],
        default: 16
      },
      customPrefix: {
        type: String,
        default: ""
      },
      fontFamily: {
        type: String,
        default: ""
      }
    },
    data() {
      return {
        icons: fontData
      };
    },
    computed: {
      unicode() {
        let code2 = this.icons.find((v2) => v2.font_class === this.type);
        if (code2) {
          return code2.unicode;
        }
        return "";
      },
      iconSize() {
        return getVal(this.size);
      },
      styleObj() {
        if (this.fontFamily !== "") {
          return `color: ${this.color}; font-size: ${this.iconSize}; font-family: ${this.fontFamily};`;
        }
        return `color: ${this.color}; font-size: ${this.iconSize};`;
      }
    },
    methods: {
      _onClick() {
        this.$emit("click");
      }
    }
  };
  function _sfc_render$1F(_ctx, _cache, $props, $setup, $data, $options) {
    return vue.openBlock(), vue.createElementBlock(
      "text",
      {
        style: vue.normalizeStyle($options.styleObj),
        class: vue.normalizeClass(["uni-icons", ["uniui-" + $props.type, $props.customPrefix, $props.customPrefix ? $props.type : ""]]),
        onClick: _cache[0] || (_cache[0] = (...args) => $options._onClick && $options._onClick(...args))
      },
      [
        vue.renderSlot(_ctx.$slots, "default", {}, void 0, true)
      ],
      6
      /* CLASS, STYLE */
    );
  }
  const __easycom_0$1 = /* @__PURE__ */ _export_sfc(_sfc_main$1G, [["render", _sfc_render$1F], ["__scopeId", "data-v-d31e1c47"], ["__file", "C:/Users/Administrator/Desktop/Project Folder/ZXHand/ZXHandwritting_APP_uniapp/uni_modules/uni-icons/components/uni-icons/uni-icons.vue"]]);
  const _sfc_main$1F = {
    name: "UniRate",
    props: {
      isFill: {
        // 星星的类型，是否镂空
        type: [Boolean, String],
        default: true
      },
      color: {
        // 星星未选中的颜色
        type: String,
        default: "#ececec"
      },
      activeColor: {
        // 星星选中状态颜色
        type: String,
        default: "#ffca3e"
      },
      disabledColor: {
        // 星星禁用状态颜色
        type: String,
        default: "#c0c0c0"
      },
      size: {
        // 星星的大小
        type: [Number, String],
        default: 24
      },
      value: {
        // 当前评分
        type: [Number, String],
        default: 0
      },
      modelValue: {
        // 当前评分
        type: [Number, String],
        default: 0
      },
      max: {
        // 最大评分
        type: [Number, String],
        default: 5
      },
      margin: {
        // 星星的间距
        type: [Number, String],
        default: 0
      },
      disabled: {
        // 是否可点击
        type: [Boolean, String],
        default: false
      },
      readonly: {
        // 是否只读
        type: [Boolean, String],
        default: false
      },
      allowHalf: {
        // 是否显示半星
        type: [Boolean, String],
        default: false
      },
      touchable: {
        // 是否支持滑动手势
        type: [Boolean, String],
        default: true
      }
    },
    data() {
      return {
        valueSync: "",
        userMouseFristMove: true,
        userRated: false,
        userLastRate: 1
      };
    },
    watch: {
      value(newVal) {
        this.valueSync = Number(newVal);
      },
      modelValue(newVal) {
        this.valueSync = Number(newVal);
      }
    },
    computed: {
      stars() {
        const value = this.valueSync ? this.valueSync : 0;
        const starList = [];
        const floorValue = Math.floor(value);
        const ceilValue = Math.ceil(value);
        for (let i2 = 0; i2 < this.max; i2++) {
          if (floorValue > i2) {
            starList.push({
              activeWitch: "100%"
            });
          } else if (ceilValue - 1 === i2) {
            starList.push({
              activeWitch: (value - floorValue) * 100 + "%"
            });
          } else {
            starList.push({
              activeWitch: "0"
            });
          }
        }
        return starList;
      },
      marginNumber() {
        return Number(this.margin);
      }
    },
    created() {
      this.valueSync = Number(this.value || this.modelValue);
      this._rateBoxLeft = 0;
      this._oldValue = null;
    },
    mounted() {
      setTimeout(() => {
        this._getSize();
      }, 100);
    },
    methods: {
      touchstart(e2) {
        if (this.readonly || this.disabled)
          return;
        const {
          clientX,
          screenX
        } = e2.changedTouches[0];
        this._getRateCount(clientX || screenX);
      },
      touchmove(e2) {
        if (this.readonly || this.disabled || !this.touchable)
          return;
        const {
          clientX,
          screenX
        } = e2.changedTouches[0];
        this._getRateCount(clientX || screenX);
      },
      /**
       * 兼容 PC @tian
       */
      mousedown(e2) {
      },
      mousemove(e2) {
      },
      mouseleave(e2) {
      },
      /**
       * 获取星星个数
       */
      _getRateCount(clientX) {
        this._getSize();
        const size = Number(this.size);
        if (isNaN(size)) {
          return new Error("size 属性只能设置为数字");
        }
        const rateMoveRange = clientX - this._rateBoxLeft;
        let index2 = parseInt(rateMoveRange / (size + this.marginNumber));
        index2 = index2 < 0 ? 0 : index2;
        index2 = index2 > this.max ? this.max : index2;
        const range2 = parseInt(rateMoveRange - (size + this.marginNumber) * index2);
        let value = 0;
        if (this._oldValue === index2 && !this.PC)
          return;
        this._oldValue = index2;
        if (this.allowHalf) {
          if (range2 > size / 2) {
            value = index2 + 1;
          } else {
            value = index2 + 0.5;
          }
        } else {
          value = index2 + 1;
        }
        value = Math.max(0.5, Math.min(value, this.max));
        this.valueSync = value;
        this._onChange();
      },
      /**
       * 触发动态修改
       */
      _onChange() {
        this.$emit("input", this.valueSync);
        this.$emit("update:modelValue", this.valueSync);
        this.$emit("change", {
          value: this.valueSync
        });
      },
      /**
       * 获取星星距离屏幕左侧距离
       */
      _getSize() {
        uni.createSelectorQuery().in(this).select(".uni-rate").boundingClientRect().exec((ret) => {
          if (ret) {
            this._rateBoxLeft = ret[0].left;
          }
        });
      }
    }
  };
  function _sfc_render$1E(_ctx, _cache, $props, $setup, $data, $options) {
    const _component_uni_icons = resolveEasycom(vue.resolveDynamicComponent("uni-icons"), __easycom_0$1);
    return vue.openBlock(), vue.createElementBlock("view", null, [
      vue.createElementVNode(
        "view",
        {
          ref: "uni-rate",
          class: "uni-rate"
        },
        [
          (vue.openBlock(true), vue.createElementBlock(
            vue.Fragment,
            null,
            vue.renderList($options.stars, (star2, index2) => {
              return vue.openBlock(), vue.createElementBlock(
                "view",
                {
                  class: vue.normalizeClass(["uni-rate__icon", { "uni-cursor-not-allowed": $props.disabled }]),
                  style: vue.normalizeStyle({ "margin-right": $options.marginNumber + "px" }),
                  key: index2,
                  onTouchstart: _cache[0] || (_cache[0] = vue.withModifiers((...args) => $options.touchstart && $options.touchstart(...args), ["stop"])),
                  onTouchmove: _cache[1] || (_cache[1] = vue.withModifiers((...args) => $options.touchmove && $options.touchmove(...args), ["stop"])),
                  onMousedown: _cache[2] || (_cache[2] = vue.withModifiers((...args) => $options.mousedown && $options.mousedown(...args), ["stop"])),
                  onMousemove: _cache[3] || (_cache[3] = vue.withModifiers((...args) => $options.mousemove && $options.mousemove(...args), ["stop"])),
                  onMouseleave: _cache[4] || (_cache[4] = (...args) => $options.mouseleave && $options.mouseleave(...args))
                },
                [
                  vue.createVNode(_component_uni_icons, {
                    color: $props.color,
                    size: $props.size,
                    type: $props.isFill ? "star-filled" : "star"
                  }, null, 8, ["color", "size", "type"]),
                  vue.createElementVNode(
                    "view",
                    {
                      style: vue.normalizeStyle({ width: star2.activeWitch }),
                      class: "uni-rate__icon-on"
                    },
                    [
                      vue.createVNode(_component_uni_icons, {
                        color: $props.disabled ? $props.disabledColor : $props.activeColor,
                        size: $props.size,
                        type: "star-filled"
                      }, null, 8, ["color", "size"])
                    ],
                    4
                    /* STYLE */
                  )
                ],
                38
                /* CLASS, STYLE, NEED_HYDRATION */
              );
            }),
            128
            /* KEYED_FRAGMENT */
          ))
        ],
        512
        /* NEED_PATCH */
      )
    ]);
  }
  const __easycom_0 = /* @__PURE__ */ _export_sfc(_sfc_main$1F, [["render", _sfc_render$1E], ["__scopeId", "data-v-5c8fbdf3"], ["__file", "C:/Users/Administrator/Desktop/Project Folder/ZXHand/ZXHandwritting_APP_uniapp/uni_modules/uni-rate/components/uni-rate/uni-rate.vue"]]);
  const _sfc_main$1E = {
    data() {
      return {
        canvasRef: null,
        // canvas 的引用
        stu_List: [{
          name: "刘琪琦",
          id: "1008601"
        }],
        score_List: [{
          title: "重心",
          score: 5
        }, {
          title: "位置",
          score: 4
        }, {
          title: "形态",
          score: 3
        }, {
          title: "笔画",
          score: 2
        }, {
          title: "大小",
          score: 1
        }],
        comprehensiveLevel: "",
        // imageSrc: '/static/logo.png',
        imagePath: null,
        token: null,
        pageMark: 0,
        // 卷面分
        canvasWidth: 0,
        // canvas 的宽度
        canvasHeight: 0,
        // canvas 的高度，根据图片比例动态设置
        chooseImageWidth: 0,
        // px
        chooseImageHeight: 0,
        // px
        ocrResults: null,
        wordMarks: null,
        scrollTop: 0,
        mouseX: 0,
        mouseY: 0,
        evaluationDesc: "",
        statusBarHeight: ""
      };
    },
    computed: {
      userInfo() {
        const store = useStore();
        return store.userinfo;
      }
    },
    mounted() {
      this.getToken();
      this.store = useStore();
      formatAppLog("log", "at pages/pagesall/aiDete/aiResult.vue:124", this.store.resultDivData, typeof this.store.resultDivData);
      let scoreText = this.store.evaluationDesc;
      formatAppLog("log", "at pages/pagesall/aiDete/aiResult.vue:135", scoreText);
      if (scoreText) {
        const scores = {
          综合得分: null,
          重心得分: null,
          形态得分: null,
          大小得分: null,
          位置得分: null,
          笔画得分: null
        };
        const regex = /(综合得分|重心得分|形态得分|大小得分|位置得分|笔画得分)[^\d]*(\d+)/g;
        let match;
        while ((match = regex.exec(scoreText)) !== null) {
          const scoreType = match[1];
          const scoreValue = parseInt(match[2], 10);
          if (scores.hasOwnProperty(scoreType)) {
            scores[scoreType] = scoreValue;
          }
        }
        const getComprehensiveLevel = (score) => {
          return score >= 60 ? "优" : "差";
        };
        if (scores.综合得分 !== null) {
          this.comprehensiveLevel = getComprehensiveLevel(scores.综合得分);
        }
        const getOtherLevel = (score) => {
          if (score >= 80)
            return 5;
          if (score >= 60)
            return 4;
          if (score >= 40)
            return 3;
          if (score >= 20)
            return 2;
          return 1;
        };
        const scoreMap = {
          "重心": scores.重心得分,
          "位置": scores.位置得分,
          "形态": scores.形态得分,
          "笔画": scores.笔画得分,
          "大小": scores.大小得分
        };
        this.score_List.forEach((item) => {
          const score = scoreMap[item.title];
          if (score !== void 0) {
            item.score = getOtherLevel(score);
          }
        });
      }
    },
    onLoad() {
      const systemInfo = uni.getSystemInfoSync();
      this.canvasWidth = systemInfo.windowWidth;
      this.chooseImage();
      this.statusBarHeight = getApp().globalData.top;
    },
    // methods: {
    //   handleCanvasClick() {
    //     __f__('log','at pages/pagesall/aiDete/aiResult.vue:200',125464646)
    //   }
    // },
    methods: {
      getToken() {
        uni.getStorage({
          key: "token",
          // 存储的 key 名
          success: (res) => {
            this.token = res.data;
            formatAppLog("log", "at pages/pagesall/aiDete/aiResult.vue:210", "获取的 token:", this.token);
          },
          fail: (err) => {
            formatAppLog("error", "at pages/pagesall/aiDete/aiResult.vue:213", "获取 token 失败:", err);
          }
        });
      },
      chooseImage() {
        this.pageMark = 0;
        uni.chooseImage({
          count: 1,
          sizeType: ["compressed"],
          sourceType: ["album", "camera"],
          success: (res) => {
            this.imageSrc = res.tempFilePaths[0];
            this.imagePath = res.tempFilePaths[0];
            formatAppLog("log", "at pages/pagesall/aiDete/aiResult.vue:227", "choose file path ", res.tempFiles[0].path);
            formatAppLog("log", "at pages/pagesall/aiDete/aiResult.vue:228", "choose file size ", res.tempFiles[0].size);
            uni.getImageInfo({
              src: res.tempFilePaths[0],
              success: (image2) => {
                formatAppLog("log", "at pages/pagesall/aiDete/aiResult.vue:235", "choose image width", image2.width);
                formatAppLog("log", "at pages/pagesall/aiDete/aiResult.vue:236", "choose image height", image2.height);
                this.chooseImageWidth = image2.width;
                this.chooseImageHeight = image2.height;
                const aspectRatio = this.chooseImageHeight / this.chooseImageWidth;
                this.canvasHeight = this.canvasWidth * aspectRatio;
                setTimeout(() => {
                  this.drawImage();
                  this.submitForm();
                }, 100);
              }
            });
          },
          fail: (err) => {
            formatAppLog("error", "at pages/pagesall/aiDete/aiResult.vue:252", "选择图片失败：", err);
          }
        });
      },
      // login() {
      //   uni.request({
      //     url: 'https://open.pixsmart.cn:6802/sdkMgr/auth/signin',
      //     method: 'POST',
      //     header: {
      //       'Content-Type': 'application/json'
      //     },
      //     data: {
      //       apiKey: user,
      //       apiSecret: pass
      //     },
      //     success: (res) => {
      //       if (res.data.code === 0) {
      //         this.token = res.data.data.accessToken;
      //         __f__('log','at pages/pagesall/aiDete/aiResult.vue:270','登录成功', this.token);
      //       } else {
      //         __f__('log','at pages/pagesall/aiDete/aiResult.vue:272','登录失败', res.data.message);
      //         uni.showToast({
      //           title: '登录失败',
      //           icon: 'none'
      //         });
      //       }
      //     },
      //     fail: (error) => {
      //       __f__('error','at pages/pagesall/aiDete/aiResult.vue:280','登录请求失败', error);
      //       uni.showToast({
      //         title: '请求失败',
      //         icon: 'none'
      //       });
      //     }
      //   });
      // },
      submitForm() {
        if (!this.imagePath) {
          return uni.showToast({
            title: "请先选择图片",
            icon: "none"
          });
        }
        if (!this.token) {
          return uni.showToast({
            title: "请先登录",
            icon: "none"
          });
        }
        uni.uploadFile({
          url: "http://admin.zexishuhua.com/api/common/detecthomework",
          // url: 'http://www.zexiart.com/api/common/detecthomework',
          filePath: this.imagePath,
          name: "file",
          header: {
            "token": `${this.token}`
          },
          formData: {
            "sdk": "WordEvaluation",
            "device_id": "test_device_id",
            // 随便填
            "isCheckExamNum": "false",
            "font": 0
            // "userId": user,
          },
          success: (uploadFileRes) => {
            const response = JSON.parse(uploadFileRes.data);
            if (response.code == 0) {
              this.pageMark = response.data.pageMark;
              this.ocrResults = response.data.ocrResults;
              this.wordMarks = response.data.wordMarks;
              this.drawImageWithData();
            }
          },
          fail: (err) => {
            formatAppLog("error", "at pages/pagesall/aiDete/aiResult.vue:328", "提交失败：", err);
            uni.showToast({
              title: "提交失败",
              icon: "none"
            });
          }
        });
      },
      drawImage() {
        const ctx = uni.createCanvasContext("myCanvas");
        ctx.clearRect(0, 0, this.canvasWidth, this.canvasHeight);
        ctx.drawImage(this.imagePath, 0, 0, this.canvasWidth, this.canvasHeight);
        ctx.draw(false, () => {
          formatAppLog("log", "at pages/pagesall/aiDete/aiResult.vue:342", "draw image success");
        });
      },
      handleCanvasClick(event) {
        const query = uni.createSelectorQuery().in(this);
        query.select("#myScrollView").scrollOffset((data) => {
          formatAppLog("log", "at pages/pagesall/aiDete/aiResult.vue:349", event);
          formatAppLog("log", "at pages/pagesall/aiDete/aiResult.vue:350", event.target);
          formatAppLog("log", "at pages/pagesall/aiDete/aiResult.vue:351", event.detail.x, event.detail.y);
          formatAppLog("log", "at pages/pagesall/aiDete/aiResult.vue:352", event.target.offsetLeft, event.target.offsetTop);
          const x2 = event.detail.x - event.target.offsetLeft;
          const y2 = event.detail.y - event.target.offsetTop;
          formatAppLog("log", "at pages/pagesall/aiDete/aiResult.vue:355", "x", x2);
          formatAppLog("log", "at pages/pagesall/aiDete/aiResult.vue:356", "y", y2);
          formatAppLog("log", "at pages/pagesall/aiDete/aiResult.vue:357", data);
          this.mouseX = x2;
          this.mouseY = y2 + data.scrollTop;
          this.drawImageWithData();
        }).exec();
      },
      drawImageWithData() {
        const ctx = uni.createCanvasContext("myCanvas");
        ctx.clearRect(0, 0, this.canvasWidth, this.canvasHeight);
        ctx.drawImage(this.imagePath, 0, 0, this.canvasWidth, this.canvasHeight);
        if (!this.ocrResults && !this.wordMarks) {
          return;
        }
        formatAppLog("log", "at pages/pagesall/aiDete/aiResult.vue:373", "mouseX", this.mouseX);
        formatAppLog("log", "at pages/pagesall/aiDete/aiResult.vue:374", "mouseY", this.mouseY);
        this.chooseImageHeight / this.chooseImageWidth;
        const scale = this.canvasWidth / this.chooseImageWidth;
        this.ocrResults.forEach((ocr, i2) => {
          const word = this.wordMarks[i2];
          let x2 = ocr.points[0] * scale;
          let y2 = ocr.points[1] * scale;
          let width = (ocr.points[4] - ocr.points[0]) * scale;
          let height = (ocr.points[5] - ocr.points[1]) * scale;
          let displayText;
          if (word.mark > 80) {
            displayText = "优";
          } else if (word.mark >= 60) {
            displayText = "良";
          } else {
            displayText = "学习";
          }
          if (this.mouseX >= x2 && this.mouseX <= x2 + width && this.mouseY >= y2 && this.mouseY <= y2 + height) {
            ctx.strokeStyle = "blue";
            ctx.fillStyle = "blue";
            ctx.strokeRect(x2, y2, width, height);
            ctx.fillText(displayText, x2, y2 + 25);
            this.drawMask("wordMask", ocr.label, word.base64Mark);
            this.showWordsInfo(ocr, word);
            const encoder = new TextEncoder();
            const encodedData = encoder.encode(ocr.label);
            const base64Label = btoa(String.fromCharCode(...encodedData));
            formatAppLog("log", "at pages/pagesall/aiDete/aiResult.vue:413", `你点击了文字 "${ocr.label}"，分数: ${word.mark}，Base64格式: ${base64Label}`);
            if (displayText === "学习") {
              let params = {
                fonts: base64Label
              };
              formatAppLog("log", "at pages/pagesall/aiDete/aiResult.vue:418", 11111);
              goStudy(params).then((response) => {
                formatAppLog("log", "at pages/pagesall/aiDete/aiResult.vue:420", "学习成功:", response);
                const { msg } = response;
                formatAppLog("log", "at pages/pagesall/aiDete/aiResult.vue:423", msg);
                if (response.code === 1) {
                  uni.navigateTo({
                    url: "/pages/pagesall/course/go_learn"
                    // 替换为实际的页面路径
                  });
                } else {
                  uni.showToast({
                    title: msg,
                    icon: "error"
                  });
                }
              }).catch((error2) => {
              });
            }
          } else {
            if (word.mark < 70) {
              ctx.strokeStyle = "red";
              ctx.fillStyle = "red";
            } else {
              ctx.strokeStyle = "#2e8b57";
              ctx.fillStyle = "#2e8b57";
            }
            ctx.strokeRect(x2, y2, width, height);
            ctx.fillText(displayText, x2, y2 + 25);
          }
        });
        if (this.mouseX == 0 && this.mouseY == 0 && this.ocrResults.length > 0) {
          this.drawMask("wordMask", this.ocrResults[0].label, this.wordMarks[0].base64Mark);
          this.showWordsInfo(this.ocrResults[0], this.wordMarks[0]);
        }
        ctx.draw(false, () => {
          formatAppLog("log", "at pages/pagesall/aiDete/aiResult.vue:466", "draw image success");
        });
      },
      drawMask(canvasId, label, base64String) {
        const ctx = uni.createCanvasContext("wordMask", this);
        ctx.clearRect(0, 0, 128, 128);
        ctx.setFillStyle("#ffffff");
        ctx.fillRect(0, 0, 128, 128);
        const x2 = 128 / 2;
        const y2 = 128 / 2;
        ctx.setFillStyle("#FF5733");
        ctx.font = "106px simkai";
        ctx.setFontSize(106);
        ctx.setTextAlign("center");
        ctx.setTextBaseline("middle");
        ctx.fillText(label, x2, y2);
        const binaryData = atob(base64String);
        const byteArray = new Uint8Array(binaryData.length);
        for (var i2 = 0; i2 < binaryData.length; i2++) {
          byteArray[i2] = binaryData.charCodeAt(i2);
        }
        function draw() {
          let bits = displayBits(byteArray);
          drawBinaryImage(bits);
          function drawBinaryImage(bits2) {
            for (let i3 = 0; i3 < 128; ++i3) {
              for (let j2 = 0; j2 < 128; ++j2) {
                let bit = bits2[128 * i3 + j2];
                if (bit === 0) {
                  const colorValue = bit === 0 ? 0 : 255;
                  ctx.setFillStyle(`rgb(${colorValue}, ${colorValue}, ${colorValue})`);
                  ctx.fillRect(j2, i3, 1, 1);
                }
              }
            }
          }
          function displayBits(uint8Array) {
            const bitValues = [];
            for (let i3 = 0; i3 < uint8Array.length; i3++) {
              for (let j2 = 7; j2 >= 0; j2--) {
                const bit = uint8Array[i3] >> j2 & 1;
                bitValues.push(bit);
              }
            }
            return bitValues;
          }
        }
        draw();
        ctx.draw(false, () => {
          formatAppLog("log", "at pages/pagesall/aiDete/aiResult.vue:526", "draw mask success");
          useStore();
          const canvasElement = this.$refs.aiBox;
          formatAppLog("log", "at pages/pagesall/aiDete/aiResult.vue:529", canvasElement);
        });
      },
      showWordsInfo(ocrResult, wordMark) {
        let sb = [];
        sb.push(ocrResult.label + "\n");
        if (wordMark.mark <= 0) {
          sb.push("暂无识别字的评测数据\n");
        }
        sb.push("综合得分 " + wordMark.mark + "\n");
        sb.push("重心得分 " + wordMark.centerMark);
        if (wordMark.centerInfo === 0) {
          sb.push("良好");
        } else if (wordMark.centerInfo === 1) {
          sb.push("偏上");
        } else if (wordMark.centerInfo === 2) {
          sb.push("偏下");
        } else if (wordMark.centerInfo === 3) {
          sb.push("偏左");
        } else if (wordMark.centerInfo === 4) {
          sb.push("偏右");
        }
        sb.push("\n");
        sb.push("形态得分 " + wordMark.rateMark);
        if (wordMark.rateInfo === 0) {
          sb.push("良好");
        } else if (wordMark.rateInfo === 1) {
          sb.push("太宽");
        } else if (wordMark.rateInfo === 2) {
          sb.push("太瘦");
        }
        sb.push("\n");
        sb.push("大小得分 " + wordMark.areaMark);
        if (wordMark.areaInfo === 0) {
          sb.push("良好");
        } else if (wordMark.areaInfo === 1) {
          sb.push("太小");
        } else if (wordMark.areaInfo === 2) {
          sb.push("太大");
        }
        sb.push("\n");
        sb.push("位置得分 " + wordMark.posMark);
        if (wordMark.posInfo === 0) {
          sb.push("良好");
        } else if (wordMark.posInfo === 1) {
          sb.push("偏上");
        } else if (wordMark.posInfo === 2) {
          sb.push("偏下");
        } else if (wordMark.posInfo === 3) {
          sb.push("偏左");
        } else if (wordMark.posInfo === 4) {
          sb.push("偏右");
        }
        sb.push("\n");
        sb.push("笔画得分 " + wordMark.conFMark);
        if (wordMark.conFInfo === 0) {
          sb.push("良好");
        } else if (wordMark.conFInfo === 1) {
          sb.push("不良");
        }
        sb.push("\n");
        this.evaluationDesc = sb.join("");
        const store = useStore();
        store.setEvaluationDesc(this.evaluationDesc);
      }
    }
  };
  function _sfc_render$1D(_ctx, _cache, $props, $setup, $data, $options) {
    const _component_uni_rate = resolveEasycom(vue.resolveDynamicComponent("uni-rate"), __easycom_0);
    return vue.openBlock(), vue.createElementBlock("scroll-view", {
      id: "myScrollView",
      "scroll-y": "true",
      style: { "height": "100vh" }
    }, [
      vue.createElementVNode(
        "view",
        {
          style: vue.normalizeStyle("height:" + ($data.statusBarHeight + 5) + "px;")
        },
        null,
        4
        /* STYLE */
      ),
      vue.createElementVNode("view", { class: "res_box" }, [
        vue.createElementVNode("view", { class: "res_box2" }, [
          vue.createElementVNode("img", {
            src: "https://lanhu.oss-cn-beijing.aliyuncs.com/SketchPnge1553c1d8d43568ee582b54f1deab731573c8804790b09e299c2e73eda1cfa68",
            alt: "",
            onClick: _cache[0] || (_cache[0] = (...args) => _ctx.res_goback && _ctx.res_goback(...args))
          }),
          vue.createElementVNode("view", { class: "res_text" }, " AI测评结果 ")
        ]),
        vue.createElementVNode("view", { class: "res_box3" }, [
          vue.createElementVNode("view", { class: "res_heard" }, [
            vue.createElementVNode("img", {
              style: { "border-radius": "50%" },
              src: $options.userInfo.avatar,
              alt: ""
            }, null, 8, ["src"]),
            vue.createElementVNode("view", { class: "head_text" }, [
              vue.createElementVNode(
                "view",
                { class: "text_1" },
                vue.toDisplayString($options.userInfo.nickname),
                1
                /* TEXT */
              ),
              vue.createElementVNode(
                "view",
                { class: "text_2" },
                " ID:" + vue.toDisplayString($options.userInfo.id),
                1
                /* TEXT */
              )
            ])
          ]),
          vue.createElementVNode("view", { class: "score_box" }, [
            vue.createElementVNode("view", { class: "score_box1" }, [
              vue.createElementVNode(
                "view",
                { class: "score_text" },
                vue.toDisplayString($data.comprehensiveLevel),
                1
                /* TEXT */
              ),
              vue.createElementVNode("img", {
                src: "https://lanhu.oss-cn-beijing.aliyuncs.com/SketchPngfe293373ca510260bf25cf15905e96d33c640dc3b4be40d673f30a4860f69215",
                alt: ""
              }),
              vue.createElementVNode("img", {
                src: "https://lanhu.oss-cn-beijing.aliyuncs.com/SketchPngfe293373ca510260bf25cf15905e96d33c640dc3b4be40d673f30a4860f69215",
                alt: ""
              })
            ]),
            vue.createElementVNode("view", { class: "scoring_box" }, [
              (vue.openBlock(true), vue.createElementBlock(
                vue.Fragment,
                null,
                vue.renderList($data.score_List, (item, index2) => {
                  return vue.openBlock(), vue.createElementBlock("view", {
                    class: "xingxing1",
                    key: index2
                  }, [
                    vue.createElementVNode(
                      "view",
                      { class: "xingxing" },
                      vue.toDisplayString(item.title),
                      1
                      /* TEXT */
                    ),
                    vue.createVNode(_component_uni_rate, {
                      readonly: true,
                      size: "20",
                      value: item.score
                    }, null, 8, ["value"])
                  ]);
                }),
                128
                /* KEYED_FRAGMENT */
              ))
            ])
          ]),
          vue.createElementVNode("textarea", {
            type: "text",
            class: "ipt_res",
            placeholder: "  重心写的很棒，注意整体形态，笔画再加长一些，加油！你距离成功仅仅一步之遥，多跟泽曦名师学习，相信可以写的更好！"
          })
        ])
      ]),
      vue.createCommentVNode(' <view style="display: flex;">\r\n      <canvas ref="wordMask" canvas-id="wordMask" id="wordMask" style="width: 128px; height: 128px; border: 1px solid red;"></canvas>\r\n      <text class="pageDesc">{{evaluationDesc}}</text>\r\n    </view> '),
      vue.createElementVNode("view", null, [
        vue.createElementVNode(
          "canvas",
          {
            ref: "myCanvas",
            "canvas-id": "myCanvas",
            id: "myCanvas",
            style: vue.normalizeStyle({ width: "100vw", height: $data.canvasHeight + "px" }),
            onClick: _cache[1] || (_cache[1] = (...args) => $options.handleCanvasClick && $options.handleCanvasClick(...args))
          },
          null,
          4
          /* STYLE */
        )
      ])
    ]);
  }
  const PagesPagesallAiDeteAiResult = /* @__PURE__ */ _export_sfc(_sfc_main$1E, [["render", _sfc_render$1D], ["__file", "C:/Users/Administrator/Desktop/Project Folder/ZXHand/ZXHandwritting_APP_uniapp/pages/pagesall/aiDete/aiResult.vue"]]);
  const _sfc_main$1D = {
    data() {
      return {
        statusBarHeight: "",
        searchQuery: "",
        hotCities: ["北京", "上海", "广州", "深圳", "西安", "郑州", "重庆", "武汉"],
        allCities: [
          {
            name: "阿坝",
            pinyin: "A"
          },
          {
            name: "阿城",
            pinyin: "A"
          },
          {
            name: "阿克苏",
            pinyin: "A"
          },
          {
            name: "阿拉善盟",
            pinyin: "A"
          },
          {
            name: "阿勒泰",
            pinyin: "A"
          },
          {
            name: "阿里",
            pinyin: "A"
          },
          {
            name: "北京市",
            pinyin: "B"
          },
          {
            name: "上海市",
            pinyin: "S"
          },
          {
            name: "广州市",
            pinyin: "G"
          },
          {
            name: "深圳市",
            pinyin: "S"
          },
          {
            name: "西安市",
            pinyin: "X"
          },
          {
            name: "郑州市",
            pinyin: "Z"
          }
          // 更多城市...
        ],
        filteredCities: []
      };
    },
    onLoad() {
      this.statusBarHeight = getApp().globalData.top;
    },
    mounted() {
      this.filteredCities = this.allCities;
    },
    methods: {
      filterCities() {
        this.filteredCities = this.allCities.filter(
          (city) => city.name.includes(this.searchQuery)
        );
      },
      goToCityDetail(city) {
        const pages2 = getCurrentPages();
        const prevPage = pages2[pages2.length - 2];
        prevPage.updateSelectedCity(city);
        uni.switchTab({
          url: "/pages/pagesall/oper"
        });
      }
    },
    computed: {
      sortedCities() {
        const grouped = {};
        this.filteredCities.forEach((city) => {
          const firstLetter = city.pinyin;
          if (!grouped[firstLetter]) {
            grouped[firstLetter] = [];
          }
          grouped[firstLetter].push(city);
        });
        return grouped;
      }
    }
  };
  function _sfc_render$1C(_ctx, _cache, $props, $setup, $data, $options) {
    return vue.openBlock(), vue.createElementBlock("view", { class: "container" }, [
      vue.createElementVNode(
        "view",
        {
          style: vue.normalizeStyle("height:" + ($data.statusBarHeight + 5) + "px;")
        },
        null,
        4
        /* STYLE */
      ),
      vue.createElementVNode("view", { class: "search-bar" }, [
        vue.createElementVNode("text", null, "选择城市"),
        vue.withDirectives(vue.createElementVNode(
          "input",
          {
            type: "text",
            "onUpdate:modelValue": _cache[0] || (_cache[0] = ($event) => $data.searchQuery = $event),
            placeholder: "请输入城市",
            onInput: _cache[1] || (_cache[1] = (...args) => $options.filterCities && $options.filterCities(...args))
          },
          null,
          544
          /* NEED_HYDRATION, NEED_PATCH */
        ), [
          [vue.vModelText, $data.searchQuery]
        ])
      ]),
      vue.createElementVNode("view", { class: "current-location" }, [
        vue.createElementVNode("text", null, "当前位置"),
        vue.createElementVNode("view", { class: "city-tag" }, "湛江市")
      ]),
      vue.createElementVNode("view", { class: "hot-cities" }, [
        vue.createElementVNode("text", null, "热门城市"),
        vue.createElementVNode("view", { class: "city-list" }, [
          (vue.openBlock(true), vue.createElementBlock(
            vue.Fragment,
            null,
            vue.renderList($data.hotCities, (city, index2) => {
              return vue.openBlock(), vue.createElementBlock("text", {
                class: "city-tag",
                key: index2,
                onClick: ($event) => $options.goToCityDetail(city)
              }, vue.toDisplayString(city), 9, ["onClick"]);
            }),
            128
            /* KEYED_FRAGMENT */
          ))
        ])
      ]),
      (vue.openBlock(true), vue.createElementBlock(
        vue.Fragment,
        null,
        vue.renderList($options.sortedCities, (cities, letter2) => {
          return vue.openBlock(), vue.createElementBlock("view", {
            class: "city-list-group",
            key: letter2
          }, [
            vue.createElementVNode(
              "text",
              null,
              vue.toDisplayString(letter2),
              1
              /* TEXT */
            ),
            (vue.openBlock(true), vue.createElementBlock(
              vue.Fragment,
              null,
              vue.renderList(cities, (city, index2) => {
                return vue.openBlock(), vue.createElementBlock("view", {
                  onClick: ($event) => $options.goToCityDetail(city.name),
                  key: index2,
                  class: "city"
                }, vue.toDisplayString(city.name), 9, ["onClick"]);
              }),
              128
              /* KEYED_FRAGMENT */
            ))
          ]);
        }),
        128
        /* KEYED_FRAGMENT */
      )),
      vue.createCommentVNode(" 可继续添加更多的城市列表分组 ")
    ]);
  }
  const PagesPagesallSelectCity = /* @__PURE__ */ _export_sfc(_sfc_main$1D, [["render", _sfc_render$1C], ["__scopeId", "data-v-506f7517"], ["__file", "C:/Users/Administrator/Desktop/Project Folder/ZXHand/ZXHandwritting_APP_uniapp/pages/pagesall/SelectCity.vue"]]);
  const _sfc_main$1C = {
    props: {
      placeholder: {
        type: String,
        default: "请输入"
      },
      disabled: {
        type: Boolean,
        default: true
      },
      modelValue: {
        type: String,
        default: ""
      },
      type: {
        // 新增 type 属性
        type: String,
        default: "text"
        // 默认设置为 
      }
    },
    setup(props2, {
      emit
    }) {
      const isDisabled = vue.ref(props2.disabled);
      const currentValue = vue.ref(props2.modelValue);
      const inputType = vue.ref(props2.type);
      const updateValue = () => {
        emit("update:modelValue", currentValue.value);
      };
      const enableInput = () => {
        isDisabled.value = false;
      };
      vue.watch(
        () => props2.modelValue,
        (newValue) => {
          currentValue.value = newValue;
        }
      );
      vue.watch(
        () => props2.disabled,
        (newDisabled) => {
          isDisabled.value = newDisabled;
        }
      );
      vue.watch(
        () => props2.type,
        (newType) => {
          inputType.value = newType;
        }
      );
      return {
        isDisabled,
        currentValue,
        updateValue,
        enableInput,
        inputType
        // 需要返回 inputType 以供模板使用
      };
    }
  };
  function _sfc_render$1B(_ctx, _cache, $props, $setup, $data, $options) {
    return vue.openBlock(), vue.createElementBlock("view", { class: "input-container" }, [
      vue.withDirectives(vue.createElementVNode("input", {
        type: $setup.inputType,
        placeholder: $props.placeholder,
        disabled: $setup.isDisabled,
        class: "custom-input",
        "onUpdate:modelValue": _cache[0] || (_cache[0] = ($event) => $setup.currentValue = $event),
        onInput: _cache[1] || (_cache[1] = (...args) => $setup.updateValue && $setup.updateValue(...args))
      }, null, 40, ["type", "placeholder", "disabled"]), [
        [vue.vModelDynamic, $setup.currentValue]
      ]),
      vue.createCommentVNode(' <uni-easyinput class="custom-input" :type="inputType" v-model="currentValue" :disabled="isDisabled" :placeholder="placeholder" @input="updateValue"></uni-easyinput> '),
      vue.createElementVNode("image", {
        class: "icon_1",
        referrerpolicy: "no-referrer",
        src: "https://lanhu.oss-cn-beijing.aliyuncs.com/SketchPng020f3b0f7825fdd6e79b0361c149b486540d9894e91feb72f43c076696f9d05f",
        style: { "width": "28rpx", "height": "28rpx" },
        onClick: _cache[2] || (_cache[2] = (...args) => $setup.enableInput && $setup.enableInput(...args))
      })
    ]);
  }
  const CustomInput = /* @__PURE__ */ _export_sfc(_sfc_main$1C, [["render", _sfc_render$1B], ["__scopeId", "data-v-e4d394b7"], ["__file", "C:/Users/Administrator/Desktop/Project Folder/ZXHand/ZXHandwritting_APP_uniapp/components/CustomInput/CustomInput.vue"]]);
  const _sfc_main$1B = {
    __name: "BottomSheet",
    props: {
      isVisible: {
        type: Boolean,
        default: false
      },
      options: {
        type: Array,
        default: () => []
      },
      fontColor: {
        type: String,
        default: "#000"
        // 默认字体颜色
      }
    },
    emits: ["update:isVisible", "optionSelected"],
    setup(__props, { expose: __expose, emit: __emit }) {
      __expose();
      const props2 = __props;
      const emit = __emit;
      const close = () => {
        emit("update:isVisible", false);
      };
      const selectOption = (option) => {
        emit("optionSelected", option);
        close();
      };
      const moveStop = () => {
      };
      const __returned__ = { props: props2, emit, close, selectOption, moveStop };
      Object.defineProperty(__returned__, "__isScriptSetup", { enumerable: false, value: true });
      return __returned__;
    }
  };
  function _sfc_render$1A(_ctx, _cache, $props, $setup, $data, $options) {
    return vue.openBlock(), vue.createElementBlock("view", null, [
      vue.createCommentVNode(" 背景遮罩层 "),
      $props.isVisible ? (vue.openBlock(), vue.createElementBlock("view", {
        key: 0,
        class: "overlay",
        onClick: $setup.close
      })) : vue.createCommentVNode("v-if", true),
      vue.createElementVNode(
        "view",
        {
          class: vue.normalizeClass(["bottom-sheet", { "is-active": $props.isVisible }]),
          onTouchmove: vue.withModifiers($setup.moveStop, ["stop", "prevent"])
        },
        [
          vue.createElementVNode("view", { class: "content" }, [
            vue.createElementVNode("view", { class: "options" }, [
              (vue.openBlock(true), vue.createElementBlock(
                vue.Fragment,
                null,
                vue.renderList($props.options, (item, index2) => {
                  return vue.openBlock(), vue.createElementBlock("view", {
                    class: "option",
                    key: index2,
                    onClick: ($event) => $setup.selectOption(item.text),
                    style: vue.normalizeStyle({ color: $props.fontColor })
                  }, [
                    item.imageSrc ? (vue.openBlock(), vue.createElementBlock("image", {
                      key: 0,
                      src: item.imageSrc,
                      class: "option-image"
                    }, null, 8, ["src"])) : vue.createCommentVNode("v-if", true),
                    vue.createElementVNode(
                      "text",
                      null,
                      vue.toDisplayString(item.text),
                      1
                      /* TEXT */
                    )
                  ], 12, ["onClick"]);
                }),
                128
                /* KEYED_FRAGMENT */
              ))
            ]),
            vue.createElementVNode(
              "button",
              {
                style: vue.normalizeStyle({ color: $props.fontColor }),
                class: "close-button",
                onClick: $setup.close
              },
              "取消",
              4
              /* STYLE */
            )
          ])
        ],
        34
        /* CLASS, NEED_HYDRATION */
      )
    ]);
  }
  const BottomSheet = /* @__PURE__ */ _export_sfc(_sfc_main$1B, [["render", _sfc_render$1A], ["__scopeId", "data-v-8531473b"], ["__file", "C:/Users/Administrator/Desktop/Project Folder/ZXHand/ZXHandwritting_APP_uniapp/components/BottomSheet/BottomSheet.vue"]]);
  const _sfc_main$1A = {
    __name: "PersonalData",
    setup(__props, { expose: __expose }) {
      __expose();
      const store = useStore();
      const statusBarHeight = vue.ref();
      onLoad(() => {
        statusBarHeight.value = getApp().globalData.top;
      });
      const formData = vue.reactive({
        name: "张三",
        // 模拟数据
        age: 33,
        // 模拟数据
        referrer: "李老师",
        // 模拟数据
        phone: "13812345678",
        // 模拟数据
        password: "12315",
        value: ""
      });
      const isActionSheetVisible = vue.ref(false);
      const actionSheetOptions = vue.ref([
        {
          text: "拍照"
        },
        {
          text: "从手机相册选择"
        }
      ]);
      const isDisabled1 = vue.ref(true);
      const isDisabled2 = vue.ref(true);
      const isDisabled = vue.ref(true);
      const dateYear = vue.ref("年/月/日");
      const giftmoren = vue.ref("选择校区");
      const selectedValue = vue.ref("请选择班级");
      const datetimePicker = vue.ref(null);
      const giftindex = vue.ref(0);
      const giftArray = vue.ref();
      const multiArray = vue.ref();
      const multiIndex = vue.ref();
      const refelist = vue.ref({});
      const avatarUrl = vue.ref("");
      const retPass = async () => {
        await uni.navigateTo({
          url: "/pages/login/ratpass"
        });
      };
      const open2 = () => {
        datetimePicker.value.open();
        formatAppLog("log", "at pages/pagesall/mypage/PersonalData.vue:136", datetimePicker.value);
      };
      const togglePicker = () => {
        isDisabled1.value = !isDisabled1.value;
      };
      const togglePickerclass = () => {
        isDisabled2.value = !isDisabled2.value;
      };
      const getlogin = () => {
        formatAppLog("log", "at pages/pagesall/mypage/PersonalData.vue:158", refelist.value);
        uni.navigateBack();
      };
      const giftPickerChange = (e2, giftArray2) => {
        formatAppLog("log", "at pages/pagesall/mypage/PersonalData.vue:163", "picker发送选择改变，携带值为", e2.detail.value);
        let index2 = e2.detail.value;
        giftindex.value = index2;
        giftmoren.value = giftArray2[index2].title;
      };
      const chooseAvatar = () => {
        isActionSheetVisible.value = true;
      };
      const handleOptionSelect = (option) => {
        if (option === "拍照") {
          takePhoto();
        } else {
          pickImageFromAlbum();
        }
        formatAppLog("log", "at pages/pagesall/mypage/PersonalData.vue:181", "选择的选项:", option);
      };
      const takePhoto = () => {
        uni.chooseImage({
          count: 1,
          sourceType: ["camera"],
          success: async (res) => {
            formatAppLog("log", "at pages/pagesall/mypage/PersonalData.vue:189", res, "+++++++++");
            uni.uploadFile({
              url: "http://admin.zexishuhua.com/api/common/upload",
              //仅为示例，非真实的接口地址
              filePath: res.tempFilePaths[0],
              name: "file",
              formData: {
                "token": uni.getStorageSync("token")
              },
              success: (uploadFileRes) => {
                formatAppLog("log", "at pages/pagesall/mypage/PersonalData.vue:198", uploadFileRes.data);
                avatarUrl.value = res.tempFilePaths[0];
              }
            });
          },
          fail: (error2) => {
            formatAppLog("error", "at pages/pagesall/mypage/PersonalData.vue:204", "拍照失败:", error2);
          }
        });
      };
      const pickImageFromAlbum = () => {
        uni.chooseImage({
          count: 1,
          sourceType: ["album"],
          success: async (res) => {
            formatAppLog("log", "at pages/pagesall/mypage/PersonalData.vue:214", res, "+++++++++");
            if (res.tempFilePaths.length === 0) {
              formatAppLog("error", "at pages/pagesall/mypage/PersonalData.vue:216", "未选择任何图片");
              return;
            }
            uni.uploadFile({
              url: "http://admin.zexishuhua.com/api/common/upload",
              //仅为示例，非真实的接口地址
              filePath: res.tempFilePaths[0],
              name: "file",
              formData: {
                "token": uni.getStorageSync("token")
              },
              success: (uploadFileRes) => {
                formatAppLog("log", "at pages/pagesall/mypage/PersonalData.vue:227", uploadFileRes.data);
                avatarUrl.value = res.tempFilePaths[0];
              }
            });
          },
          fail: (error2) => {
            formatAppLog("error", "at pages/pagesall/mypage/PersonalData.vue:234", "选择图片失败:", error2);
          }
        });
      };
      const onClassChange = (event) => {
        multiIndex.value = event.detail.value;
        if (isNaN(multiIndex.value) || multiIndex.value.length === 0) {
          selectedValue.value = multiArray.value[0].title;
          classlyId.value = multiArray.value[0].id;
        } else {
          selectedValue.value = multiArray.value[multiIndex.value].title;
          classlyId.value = multiArray.value[multiIndex.value].id;
        }
      };
      const confirm = (e2) => {
        let date2 = new Date(e2.value);
        let y2 = date2.getFullYear();
        let MM = date2.getMonth() + 1;
        MM = MM < 10 ? "0" + MM : MM;
        let d2 = date2.getDate();
        d2 = d2 < 10 ? "0" + d2 : d2;
        date2.getHours();
        date2.getMinutes();
        date2.getSeconds();
        let newtime2 = y2 + "." + MM + "." + d2;
        dateYear.value = newtime2;
      };
      vue.onMounted(async () => {
        formatAppLog("log", "at pages/pagesall/mypage/PersonalData.vue:274", store.campusData);
        giftArray.value = store.campusData;
        formatAppLog("log", "at pages/pagesall/mypage/PersonalData.vue:276", giftArray.value);
        multiArray.value = store.classData;
        try {
          const userInfo = await fetchUserInfo();
          formatAppLog("log", "at pages/pagesall/mypage/PersonalData.vue:280", userInfo);
          formData.name = userInfo.data.nickname;
          formData.age = userInfo.data.age;
          formData.referrer = userInfo.data.referee;
          formData.phone = userInfo.data.mobile;
          formData.password = userInfo.data.password;
          const birthDate = new Date(userInfo.data.birthday);
          formatAppLog("log", "at pages/pagesall/mypage/PersonalData.vue:290", birthDate);
          const y2 = birthDate.getFullYear();
          const MM = (birthDate.getMonth() + 1).toString().padStart(2, "0");
          const d2 = birthDate.getDate().toString().padStart(2, "0");
          formatAppLog("log", "at pages/pagesall/mypage/PersonalData.vue:294", y2, MM, d2);
          dateYear.value = `${y2}.${MM}.${d2}`;
          const campus = store.campusData.find((item) => item.id === userInfo.data.school_id);
          if (campus) {
            giftmoren.value = campus.title;
            giftindex.value = store.campusData.indexOf(campus);
          }
          formatAppLog("log", "at pages/pagesall/mypage/PersonalData.vue:307", store.classData);
          formatAppLog("log", "at pages/pagesall/mypage/PersonalData.vue:308", userInfo.data.classly_id);
          const classItem = store.classData.find((item) => item.id === userInfo.data.classly_id);
          formatAppLog("log", "at pages/pagesall/mypage/PersonalData.vue:311", classItem);
          if (classItem) {
            const classIndex = store.classData.indexOf(classItem);
            selectedValue.value = classItem.title;
            multiIndex.value = [classIndex];
          }
        } catch (error2) {
          formatAppLog("error", "at pages/pagesall/mypage/PersonalData.vue:318", "获取用户信息失败:", error2);
        }
      });
      const __returned__ = { store, statusBarHeight, formData, isActionSheetVisible, actionSheetOptions, isDisabled1, isDisabled2, isDisabled, dateYear, giftmoren, selectedValue, datetimePicker, giftindex, giftArray, multiArray, multiIndex, refelist, avatarUrl, retPass, open: open2, togglePicker, togglePickerclass, getlogin, giftPickerChange, chooseAvatar, handleOptionSelect, takePhoto, pickImageFromAlbum, onClassChange, confirm, ref: vue.ref, reactive: vue.reactive, onMounted: vue.onMounted, get CustomInput() {
        return CustomInput;
      }, get BottomSheet() {
        return BottomSheet;
      }, get fetchUserInfo() {
        return fetchUserInfo;
      }, get uploadImage() {
        return uploadImage;
      }, get useStore() {
        return useStore;
      }, get onLoad() {
        return onLoad;
      } };
      Object.defineProperty(__returned__, "__isScriptSetup", { enumerable: false, value: true });
      return __returned__;
    }
  };
  function _sfc_render$1z(_ctx, _cache, $props, $setup, $data, $options) {
    const _component_uv_datetime_picker = resolveEasycom(vue.resolveDynamicComponent("uv-datetime-picker"), __easycom_0$4);
    return vue.openBlock(), vue.createElementBlock("view", null, [
      vue.createElementVNode(
        "view",
        {
          style: vue.normalizeStyle("height:" + ($setup.statusBarHeight + 5) + "px;")
        },
        null,
        4
        /* STYLE */
      ),
      vue.createElementVNode("view", null, [
        vue.createElementVNode("view", { style: { "height": "100rpx" } }),
        vue.createVNode(_component_uv_datetime_picker, {
          ref: "datetimePicker",
          modelValue: $setup.formData.value,
          "onUpdate:modelValue": _cache[0] || (_cache[0] = ($event) => $setup.formData.value = $event),
          mode: "date",
          minDate: 946695809e3,
          onConfirm: $setup.confirm
        }, null, 8, ["modelValue"]),
        vue.createVNode($setup["BottomSheet"], {
          style: { "font-weight": "400" },
          isVisible: $setup.isActionSheetVisible,
          options: $setup.actionSheetOptions,
          "onUpdate:isVisible": _cache[1] || (_cache[1] = ($event) => $setup.isActionSheetVisible = $event),
          onOptionSelected: $setup.handleOptionSelect
        }, null, 8, ["isVisible", "options"]),
        vue.createElementVNode("view", { class: "container" }, [
          vue.createElementVNode("view", { class: "form" }, [
            vue.createElementVNode("view", { class: "textTitle" }, [
              vue.createElementVNode("view", { class: "title1" }, " 更换头像 ")
            ]),
            vue.createElementVNode("view", { class: "textlogin" }, [
              vue.createElementVNode("view", {
                class: "img1",
                onClick: $setup.chooseAvatar
              }, [
                vue.createElementVNode("img", {
                  style: { "width": "192rpx", "height": "192rpx", "border-radius": "50%" },
                  src: $setup.avatarUrl,
                  alt: ""
                }, null, 8, ["src"]),
                vue.createCommentVNode(' <img src="https://lanhu.oss-cn-beijing.aliyuncs.com/SketchPng37fd122e911efbf5a6c9a5907384d8c8ed78d7e5b8bc971416d09e8e914fe7a3" alt="" /> '),
                vue.createCommentVNode(' <img v-else src="https://lanhu.oss-cn-beijing.aliyuncs.com/SketchPngccb17aadab169aefc90146fec8d12c387bab7ca72b9085f1b18a2a993cef6316" alt="" /> '),
                vue.createElementVNode("view", { class: "imgtext1" }, " 男 ")
              ])
            ]),
            vue.createElementVNode("view", { class: "title" }, "姓名"),
            vue.createElementVNode("view", { class: "input_po" }, [
              vue.createVNode($setup["CustomInput"], {
                modelValue: $setup.formData.name,
                "onUpdate:modelValue": _cache[2] || (_cache[2] = ($event) => $setup.formData.name = $event),
                placeholder: "输入姓名",
                disabled: true
              }, null, 8, ["modelValue"])
            ]),
            vue.createElementVNode("view", { class: "title" }, "年龄"),
            vue.createElementVNode("view", { class: "input_po" }, [
              vue.createVNode($setup["CustomInput"], {
                modelValue: $setup.formData.age,
                "onUpdate:modelValue": _cache[3] || (_cache[3] = ($event) => $setup.formData.age = $event),
                placeholder: "例如:12",
                disabled: true
              }, null, 8, ["modelValue"])
            ]),
            vue.createElementVNode("view", { class: "title" }, "出生年月日"),
            vue.createElementVNode("view", { class: "input_po" }, [
              vue.createElementVNode(
                "view",
                {
                  class: vue.normalizeClass([{ "disabled": $setup.isDisabled }, "image-text_1 flex-row justify-between input"])
                },
                [
                  vue.createElementVNode(
                    "text",
                    null,
                    vue.toDisplayString($setup.dateYear),
                    1
                    /* TEXT */
                  )
                ],
                2
                /* CLASS */
              ),
              vue.createElementVNode("image", {
                class: "icon_1",
                referrerpolicy: "no-referrer",
                src: "https://lanhu.oss-cn-beijing.aliyuncs.com/SketchPng020f3b0f7825fdd6e79b0361c149b486540d9894e91feb72f43c076696f9d05f",
                style: { "width": "28rpx", "height": "28rpx" },
                onClick: _cache[4] || (_cache[4] = ($event) => !$setup.isDisabled ? null : $setup.open())
              })
            ]),
            vue.createElementVNode("view", { class: "title" }, "校区"),
            vue.createElementVNode("view", { class: "input_po" }, [
              vue.createElementVNode("view", { class: "input" }, [
                vue.createElementVNode("picker", {
                  disabled: $setup.isDisabled1,
                  onChange: _cache[5] || (_cache[5] = ($event) => $setup.giftPickerChange($event, $setup.giftArray)),
                  value: $setup.giftindex,
                  range: $setup.giftArray && $setup.giftArray.map((item) => item.title),
                  "range-key": "gift"
                }, [
                  vue.createElementVNode(
                    "view",
                    { class: "uni-input text-group_2" },
                    vue.toDisplayString($setup.giftmoren),
                    1
                    /* TEXT */
                  )
                ], 40, ["disabled", "value", "range"])
              ]),
              vue.createElementVNode("image", {
                class: "icon_1",
                referrerpolicy: "no-referrer",
                src: "https://lanhu.oss-cn-beijing.aliyuncs.com/SketchPng020f3b0f7825fdd6e79b0361c149b486540d9894e91feb72f43c076696f9d05f",
                style: { "width": "28rpx", "height": "28rpx" },
                onClick: $setup.togglePicker
              })
            ]),
            vue.createElementVNode("view", { class: "title" }, "班级"),
            vue.createElementVNode("view", { class: "input_po" }, [
              vue.createElementVNode("view", { class: "uni-list-cell-db input" }, [
                vue.createElementVNode("picker", {
                  mode: "selector",
                  onChange: $setup.onClassChange,
                  value: $setup.multiIndex,
                  range: $setup.multiArray && $setup.multiArray.map((item) => item.title),
                  disabled: $setup.isDisabled2
                }, [
                  vue.createElementVNode(
                    "view",
                    { class: "uni-input" },
                    vue.toDisplayString($setup.selectedValue),
                    1
                    /* TEXT */
                  )
                ], 40, ["value", "range", "disabled"])
              ]),
              vue.createElementVNode("image", {
                class: "icon_1",
                referrerpolicy: "no-referrer",
                src: "https://lanhu.oss-cn-beijing.aliyuncs.com/SketchPng020f3b0f7825fdd6e79b0361c149b486540d9894e91feb72f43c076696f9d05f",
                style: { "width": "28rpx", "height": "28rpx" },
                onClick: $setup.togglePickerclass
              })
            ]),
            vue.createElementVNode("view", { class: "title" }, "推荐人"),
            vue.createElementVNode("view", { class: "input_po" }, [
              vue.createVNode($setup["CustomInput"], {
                modelValue: $setup.formData.referrer,
                "onUpdate:modelValue": _cache[6] || (_cache[6] = ($event) => $setup.formData.referrer = $event),
                placeholder: "输入推荐人",
                disabled: true
              }, null, 8, ["modelValue"])
            ]),
            vue.createElementVNode("view", { class: "title" }, "手机号"),
            vue.createElementVNode("view", { class: "input_po" }, [
              vue.createVNode($setup["CustomInput"], {
                modelValue: $setup.formData.phone,
                "onUpdate:modelValue": _cache[7] || (_cache[7] = ($event) => $setup.formData.phone = $event),
                placeholder: "输入手机号",
                disabled: true
              }, null, 8, ["modelValue"])
            ]),
            vue.createElementVNode("button", {
              class: "login-button",
              onClick: $setup.getlogin
            }, "完成")
          ]),
          vue.createElementVNode("view", { class: "footer" })
        ])
      ])
    ]);
  }
  const PagesPagesallMypagePersonalData = /* @__PURE__ */ _export_sfc(_sfc_main$1A, [["render", _sfc_render$1z], ["__file", "C:/Users/Administrator/Desktop/Project Folder/ZXHand/ZXHandwritting_APP_uniapp/pages/pagesall/mypage/PersonalData.vue"]]);
  const _sfc_main$1z = {
    data() {
      return {
        statusBarHeight: 0
      };
    },
    onLoad() {
      this.statusBarHeight = getApp().globalData.top;
    },
    methods: {
      goBack() {
        uni.navigateBack();
      },
      goToPage(page2) {
        uni.navigateTo({
          url: `/pages/pagesall/mypage/${page2}`
        });
      }
    }
  };
  function _sfc_render$1y(_ctx, _cache, $props, $setup, $data, $options) {
    return vue.openBlock(), vue.createElementBlock("view", { class: "container" }, [
      vue.createElementVNode(
        "view",
        {
          style: vue.normalizeStyle("height:" + ($data.statusBarHeight + 5) + "px;")
        },
        null,
        4
        /* STYLE */
      ),
      vue.createCommentVNode(' <view class="header">\r\n			<text class="back" @click="goBack">＜</text>\r\n			<text class="title">设置</text>\r\n		</view> '),
      vue.createElementVNode("view", { class: "list" }, [
        vue.createElementVNode("view", {
          class: "item",
          onClick: _cache[0] || (_cache[0] = ($event) => $options.goToPage("privacy"))
        }, [
          vue.createElementVNode("text", null, "隐私"),
          vue.createElementVNode("text", { class: "arrow" }, "＞")
        ]),
        vue.createElementVNode("view", {
          class: "item",
          onClick: _cache[1] || (_cache[1] = ($event) => $options.goToPage("changePassword"))
        }, [
          vue.createElementVNode("text", null, "修改密码"),
          vue.createElementVNode("text", { class: "arrow" }, "＞")
        ]),
        vue.createElementVNode("view", {
          class: "item",
          onClick: _cache[2] || (_cache[2] = ($event) => $options.goToPage("changePhone"))
        }, [
          vue.createElementVNode("text", null, "修改手机号"),
          vue.createElementVNode("text", { class: "arrow" }, "＞")
        ]),
        vue.createElementVNode("view", {
          class: "item",
          onClick: _cache[3] || (_cache[3] = ($event) => $options.goToPage("complaint"))
        }, [
          vue.createElementVNode("text", null, "投诉意见"),
          vue.createElementVNode("text", { class: "arrow" }, "＞")
        ]),
        vue.createElementVNode("view", {
          class: "item",
          onClick: _cache[4] || (_cache[4] = ($event) => $options.goToPage("contactUs"))
        }, [
          vue.createElementVNode("text", null, "联系我们"),
          vue.createElementVNode("text", { class: "arrow" }, "＞")
        ]),
        vue.createElementVNode("view", {
          class: "item",
          onClick: _cache[5] || (_cache[5] = ($event) => $options.goToPage("aboutUs"))
        }, [
          vue.createElementVNode("text", null, "关于我们"),
          vue.createElementVNode("text", { class: "arrow" }, "＞")
        ])
      ])
    ]);
  }
  const PagesPagesallMypageSet = /* @__PURE__ */ _export_sfc(_sfc_main$1z, [["render", _sfc_render$1y], ["__file", "C:/Users/Administrator/Desktop/Project Folder/ZXHand/ZXHandwritting_APP_uniapp/pages/pagesall/mypage/Set.vue"]]);
  const _sfc_main$1y = {
    data() {
      return {
        statusBarHeight: "",
        oldPassword: "",
        // 用于存储旧密码
        newPassword: "",
        // 用于存储新密码
        qrPassword: ""
      };
    },
    onLoad() {
      this.statusBarHeight = getApp().globalData.top;
    },
    methods: {
      async submit() {
        try {
          if (this.oldPassword === "" || this.newPassword === "") {
            uni.showToast({
              title: "密码不能为空",
              icon: "none"
            });
            return;
          }
          if (this.newPassword === "" || this.qrPassword === "") {
            uni.showToast({
              title: "密码不一致",
              icon: "none"
            });
            return;
          }
          const response = await fetchFindPassword({
            type: "oldpassword",
            newpassword: this.newPassword,
            oldpassword: this.oldPassword
          });
          formatAppLog("log", "at pages/pagesall/mypage/changePassword.vue:53", response);
          if (response.code === 1) {
            uni.showToast({
              title: response.msg,
              icon: "success"
            });
            uni.navigateBack();
          } else {
            uni.showToast({
              title: response.msg,
              icon: "error"
            });
          }
        } catch (error2) {
          formatAppLog("error", "at pages/pagesall/mypage/changePassword.vue:70", "修改密码接口失败：", error2);
        }
      }
    }
  };
  function _sfc_render$1x(_ctx, _cache, $props, $setup, $data, $options) {
    return vue.openBlock(), vue.createElementBlock("view", { class: "container" }, [
      vue.createElementVNode(
        "view",
        {
          style: vue.normalizeStyle("height:" + ($data.statusBarHeight + 5) + "px;")
        },
        null,
        4
        /* STYLE */
      ),
      vue.createElementVNode("view", { class: "form" }, [
        vue.withDirectives(vue.createElementVNode(
          "input",
          {
            type: "password",
            placeholder: "请输入旧密码",
            class: "input",
            "onUpdate:modelValue": _cache[0] || (_cache[0] = ($event) => $data.oldPassword = $event)
          },
          null,
          512
          /* NEED_PATCH */
        ), [
          [vue.vModelText, $data.oldPassword]
        ]),
        vue.withDirectives(vue.createElementVNode(
          "input",
          {
            type: "password",
            placeholder: "请输入新密码",
            class: "input",
            "onUpdate:modelValue": _cache[1] || (_cache[1] = ($event) => $data.newPassword = $event)
          },
          null,
          512
          /* NEED_PATCH */
        ), [
          [vue.vModelText, $data.newPassword]
        ]),
        vue.withDirectives(vue.createElementVNode(
          "input",
          {
            type: "password",
            placeholder: "请重新确认密码",
            class: "input",
            "onUpdate:modelValue": _cache[2] || (_cache[2] = ($event) => $data.qrPassword = $event)
          },
          null,
          512
          /* NEED_PATCH */
        ), [
          [vue.vModelText, $data.qrPassword]
        ]),
        vue.createElementVNode("button", {
          class: "submit-button",
          onClick: _cache[3] || (_cache[3] = (...args) => $options.submit && $options.submit(...args))
        }, "完成")
      ])
    ]);
  }
  const PagesPagesallMypageChangePassword = /* @__PURE__ */ _export_sfc(_sfc_main$1y, [["render", _sfc_render$1x], ["__scopeId", "data-v-ee7d6e78"], ["__file", "C:/Users/Administrator/Desktop/Project Folder/ZXHand/ZXHandwritting_APP_uniapp/pages/pagesall/mypage/changePassword.vue"]]);
  const _sfc_main$1x = {
    data() {
      return {
        phone: "",
        code: "",
        isCodeSent: false,
        countdown: 60,
        timer: null,
        getCodeButtonText: "获取验证码",
        statusBarHeight: ""
      };
    },
    onLoad() {
      this.statusBarHeight = getApp().globalData.top;
    },
    methods: {
      goBack() {
        uni.navigateBack();
      },
      async getCode() {
        if (!/^1[3-9]\d{9}$/.test(this.phone)) {
          uni.showToast({
            title: "手机号格式不正确",
            icon: "none"
          });
          return;
        }
        try {
          const response = await fetchVerificationCode({
            mobile: this.phone,
            event: "changemobile"
          });
          formatAppLog("log", "at pages/pagesall/mypage/changePhone.vue:55", response);
          if (response.code === 1) {
            uni.showToast({
              title: response.msg || "验证码发送成功",
              icon: "success",
              // 提示图标类型
              duration: 2e3
              // 持续时间
            });
            this.isCodeSent = true;
            startCountdown();
          } else {
            uni.showToast({
              title: response.msg || "发送验证码失败，请重试",
              icon: "none",
              // 提示图标类型
              duration: 2e3
              // 持续时间
            });
          }
        } catch (error2) {
        }
      },
      startCountdown() {
        this.isCodeSent = true;
        this.getCodeButtonText = `${this.countdown}秒`;
        this.timer = setInterval(() => {
          this.countdown--;
          this.getCodeButtonText = `${this.countdown}秒`;
          if (this.countdown <= 0) {
            clearInterval(this.timer);
            this.isCodeSent = false;
            this.countdown = 60;
            this.getCodeButtonText = "获取验证码";
          }
        }, 1e3);
      },
      async submit() {
        if (!this.code) {
          uni.showToast({
            title: "请输入验证码",
            icon: "none"
          });
          return;
        }
        const response = await updatePhone({
          mobile: this.phone,
          captcha: this.code
        });
        if (response.code === 1) {
          this.isCodeSent = true;
          startCountdown();
          uni.showToast({
            title: response.msg,
            icon: "none",
            duration: 2e3
            // 持续时间
          });
          uni.navigateBack();
        } else {
          uni.showToast({
            title: response.msg || "发送验证码失败，请重试",
            icon: "none",
            // 提示图标类型
            duration: 2e3
            // 持续时间
          });
        }
      }
    }
  };
  function _sfc_render$1w(_ctx, _cache, $props, $setup, $data, $options) {
    return vue.openBlock(), vue.createElementBlock("view", { class: "container" }, [
      vue.createElementVNode(
        "view",
        {
          style: vue.normalizeStyle("height:" + ($data.statusBarHeight + 5) + "px;")
        },
        null,
        4
        /* STYLE */
      ),
      vue.createElementVNode("view", { class: "form" }, [
        vue.createElementVNode("view", { class: "input-container" }, [
          vue.withDirectives(vue.createElementVNode(
            "input",
            {
              type: "text",
              placeholder: "请输入新的手机号",
              class: "input",
              "onUpdate:modelValue": _cache[0] || (_cache[0] = ($event) => $data.phone = $event)
            },
            null,
            512
            /* NEED_PATCH */
          ), [
            [vue.vModelText, $data.phone]
          ]),
          vue.createElementVNode("button", {
            class: "get-code-button",
            disabled: $data.isCodeSent,
            onClick: _cache[1] || (_cache[1] = (...args) => $options.getCode && $options.getCode(...args))
          }, vue.toDisplayString($data.getCodeButtonText), 9, ["disabled"])
        ]),
        vue.withDirectives(vue.createElementVNode(
          "input",
          {
            type: "text",
            placeholder: "请输入验证码",
            class: "input",
            "onUpdate:modelValue": _cache[2] || (_cache[2] = ($event) => $data.code = $event)
          },
          null,
          512
          /* NEED_PATCH */
        ), [
          [vue.vModelText, $data.code]
        ]),
        vue.createElementVNode("button", {
          class: "submit-button",
          onClick: _cache[3] || (_cache[3] = (...args) => $options.submit && $options.submit(...args))
        }, "完成")
      ])
    ]);
  }
  const PagesPagesallMypageChangePhone = /* @__PURE__ */ _export_sfc(_sfc_main$1x, [["render", _sfc_render$1w], ["__scopeId", "data-v-09c01343"], ["__file", "C:/Users/Administrator/Desktop/Project Folder/ZXHand/ZXHandwritting_APP_uniapp/pages/pagesall/mypage/changePhone.vue"]]);
  const _sfc_main$1w = {
    __name: "complaint",
    setup(__props, { expose: __expose }) {
      __expose();
      const statusBarHeight = vue.ref();
      onLoad(() => {
        statusBarHeight.value = getApp().globalData.top;
      });
      const feedback = vue.ref("");
      const charCount = vue.ref(0);
      const updateCharCount = () => {
        charCount.value = feedback.value.length;
      };
      const showToast2 = (title, icon) => {
        uni.showToast({
          title,
          icon
        });
      };
      const submitFeedback = async () => {
        if (!feedback.value.trim()) {
          return showToast2("请输入投诉意见", "none");
        }
        try {
          await submitComplaint({ data: feedback.value });
          showToast2("投诉意见已提交", "success");
        } catch (error2) {
          showToast2("提交失败，请稍后再试", "none");
          formatAppLog("error", "at pages/pagesall/mypage/complaint.vue:45", "提交反馈失败:", error2);
        }
      };
      const __returned__ = { statusBarHeight, feedback, charCount, updateCharCount, showToast: showToast2, submitFeedback, ref: vue.ref, get submitComplaint() {
        return submitComplaint;
      }, get onLoad() {
        return onLoad;
      } };
      Object.defineProperty(__returned__, "__isScriptSetup", { enumerable: false, value: true });
      return __returned__;
    }
  };
  function _sfc_render$1v(_ctx, _cache, $props, $setup, $data, $options) {
    return vue.openBlock(), vue.createElementBlock("view", { class: "container" }, [
      vue.createElementVNode(
        "view",
        {
          style: vue.normalizeStyle("height:" + ($setup.statusBarHeight + 5) + "px;")
        },
        null,
        4
        /* STYLE */
      ),
      vue.createElementVNode("view", { class: "form" }, [
        vue.withDirectives(vue.createElementVNode(
          "textarea",
          {
            class: "textarea",
            placeholder: "请输入您的投诉意见",
            "onUpdate:modelValue": _cache[0] || (_cache[0] = ($event) => $setup.feedback = $event),
            onInput: $setup.updateCharCount
          },
          null,
          544
          /* NEED_HYDRATION, NEED_PATCH */
        ), [
          [vue.vModelText, $setup.feedback]
        ]),
        vue.createElementVNode(
          "text",
          { class: "char-count" },
          vue.toDisplayString($setup.charCount) + "/1000",
          1
          /* TEXT */
        ),
        vue.createElementVNode("button", {
          class: "submit-button",
          onClick: $setup.submitFeedback
        }, "提交")
      ])
    ]);
  }
  const PagesPagesallMypageComplaint = /* @__PURE__ */ _export_sfc(_sfc_main$1w, [["render", _sfc_render$1v], ["__scopeId", "data-v-26164389"], ["__file", "C:/Users/Administrator/Desktop/Project Folder/ZXHand/ZXHandwritting_APP_uniapp/pages/pagesall/mypage/complaint.vue"]]);
  const _sfc_main$1v = {
    components: {
      BottomSheet
    },
    data() {
      return {
        statusBarHeight: "",
        isActionSheetVisible: false,
        actionSheetOptions: [{
          text: null,
          imageSrc: "https://lanhu.oss-cn-beijing.aliyuncs.com/SketchPng508af3211aff2093c82948b6b714248f4e7c9dd737836b3b8d1449d9c81c5b12"
        }]
      };
    },
    onLoad() {
      this.statusBarHeight = getApp().globalData.top;
      this.getContactUs();
    },
    methods: {
      async getContactUs() {
        try {
          const response = await fetchContactUs();
          formatAppLog("log", "at pages/pagesall/mypage/contactUs.vue:37", response);
          this.actionSheetOptions.text = response.tel;
          formatAppLog("log", "at pages/pagesall/mypage/contactUs.vue:39", this.actionSheetOptions.text);
        } catch (error2) {
          formatAppLog("error", "at pages/pagesall/mypage/contactUs.vue:41", "获取关于我们的接口失败：", error2);
        }
      },
      showActionSheet() {
        this.isActionSheetVisible = true;
      },
      handleOptionSelect() {
        this.makePhoneCall();
      },
      makePhoneCall() {
        uni.makePhoneCall({
          phoneNumber: "4000000000",
          success: () => {
            formatAppLog("log", "at pages/pagesall/mypage/contactUs.vue:55", "拨打电话成功");
          },
          fail: () => {
            formatAppLog("log", "at pages/pagesall/mypage/contactUs.vue:58", "拨打电话失败");
          }
        });
      }
    }
  };
  function _sfc_render$1u(_ctx, _cache, $props, $setup, $data, $options) {
    const _component_bottom_sheet = vue.resolveComponent("bottom-sheet");
    return vue.openBlock(), vue.createElementBlock("view", { class: "container" }, [
      vue.createElementVNode(
        "view",
        {
          style: vue.normalizeStyle("height:" + ($data.statusBarHeight + 5) + "px;")
        },
        null,
        4
        /* STYLE */
      ),
      vue.createElementVNode("view", { class: "content_box" }, [
        vue.createElementVNode("text", null, "客服电话"),
        vue.createElementVNode(
          "text",
          {
            class: "phone-number",
            onClick: _cache[0] || (_cache[0] = (...args) => $options.showActionSheet && $options.showActionSheet(...args))
          },
          vue.toDisplayString($data.actionSheetOptions.text),
          1
          /* TEXT */
        )
      ]),
      vue.createVNode(_component_bottom_sheet, {
        isVisible: $data.isActionSheetVisible,
        options: $data.actionSheetOptions,
        fontColor: "#5791F2",
        "onUpdate:isVisible": _cache[1] || (_cache[1] = ($event) => $data.isActionSheetVisible = $event),
        onOptionSelected: $options.handleOptionSelect
      }, null, 8, ["isVisible", "options", "onOptionSelected"])
    ]);
  }
  const PagesPagesallMypageContactUs = /* @__PURE__ */ _export_sfc(_sfc_main$1v, [["render", _sfc_render$1u], ["__scopeId", "data-v-9e2cb335"], ["__file", "C:/Users/Administrator/Desktop/Project Folder/ZXHand/ZXHandwritting_APP_uniapp/pages/pagesall/mypage/contactUs.vue"]]);
  const _sfc_main$1u = {
    data() {
      return {
        constants: null,
        statusBarHeight: ""
      };
    },
    onLoad() {
      this.statusBarHeight = getApp().globalData.top;
      this.getAboutUs();
    },
    methods: {
      async getAboutUs() {
        try {
          const response = await fetchAboutUs();
          formatAppLog("log", "at pages/pagesall/mypage/aboutUs.vue:32", response);
          this.constants = response;
          formatAppLog("log", "at pages/pagesall/mypage/aboutUs.vue:34", this.constants);
        } catch (error2) {
          formatAppLog("error", "at pages/pagesall/mypage/aboutUs.vue:36", "获取关于我们的接口失败：", error2);
        }
      }
    }
  };
  function _sfc_render$1t(_ctx, _cache, $props, $setup, $data, $options) {
    return vue.openBlock(), vue.createElementBlock("view", { class: "page" }, [
      vue.createElementVNode(
        "view",
        {
          style: vue.normalizeStyle("height:" + ($data.statusBarHeight + 5) + "px;")
        },
        null,
        4
        /* STYLE */
      ),
      vue.createElementVNode("view", { class: "box1" }, [
        vue.createElementVNode("image", {
          class: "image_2",
          referrerpolicy: "no-referrer",
          src: $data.constants.downloadurl
        }, null, 8, ["src"]),
        vue.createElementVNode(
          "text",
          { class: "text-group_2" },
          vue.toDisplayString($data.constants.content),
          1
          /* TEXT */
        )
      ]),
      vue.createElementVNode("view", { class: "box2" }, [
        vue.createElementVNode(
          "text",
          { class: "text2" },
          "当前版本：" + vue.toDisplayString($data.constants.newversion),
          1
          /* TEXT */
        )
      ])
    ]);
  }
  const PagesPagesallMypageAboutUs = /* @__PURE__ */ _export_sfc(_sfc_main$1u, [["render", _sfc_render$1t], ["__file", "C:/Users/Administrator/Desktop/Project Folder/ZXHand/ZXHandwritting_APP_uniapp/pages/pagesall/mypage/aboutUs.vue"]]);
  const _imports_0 = "/static/img/scan.png";
  const _sfc_main$1t = {
    components: {
      TUIChat1
    },
    data() {
      return {
        classGroupListListLength: null,
        statusBarHeight: ""
        // class_List: [{
        //   className: '书法一班班级群',
        //   massage: '刘易阳:王老师你教的真好啊',
        //   head: 'https://lanhu-dds-backend.oss-cn-beijing.aliyuncs.com/merge_image/imgs/19217f29299e465481d28ae91dbf317b_mergeImage.png'
        // },
        // {
        //   className: '书法二班班级群',
        //   massage: '刘易阳:王老师你教的真好啊',
        //   head: 'https://lanhu-dds-backend.oss-cn-beijing.aliyuncs.com/merge_image/imgs/19217f29299e465481d28ae91dbf317b_mergeImage.png'
        // },
        // {
        //   className: '书法三班班级群',
        //   massage: '刘易阳:王老师你教的真好啊',
        //   head: 'https://lanhu-dds-backend.oss-cn-beijing.aliyuncs.com/merge_image/imgs/19217f29299e465481d28ae91dbf317b_mergeImage.png'
        // },
        // {
        //   className: '书法四班班级群',
        //   massage: '刘易阳:王老师你教的真好啊',
        //   head: 'https://lanhu-dds-backend.oss-cn-beijing.aliyuncs.com/merge_image/imgs/19217f29299e465481d28ae91dbf317b_mergeImage.png'
        // },
        // {
        //   className: '书法五班班级群',
        //   massage: '刘易阳:王老师你教的真好啊',
        //   head: 'https://lanhu-dds-backend.oss-cn-beijing.aliyuncs.com/merge_image/imgs/19217f29299e465481d28ae91dbf317b_mergeImage.png'
        // }]
      };
    },
    onLoad() {
      this.statusBarHeight = getApp().globalData.top;
    },
    methods: {
      mycode() {
        uni.navigateTo({
          url: "/pages/pagesall/home/mycode"
        });
      },
      goback() {
        uni.navigateBack();
      }
    }
  };
  function _sfc_render$1s(_ctx, _cache, $props, $setup, $data, $options) {
    const _component_TUIChat1 = vue.resolveComponent("TUIChat1");
    return vue.openBlock(), vue.createElementBlock("view", { class: "class-group" }, [
      vue.createElementVNode(
        "view",
        {
          style: vue.normalizeStyle("height:" + ($data.statusBarHeight + 5) + "px;")
        },
        null,
        4
        /* STYLE */
      ),
      vue.createElementVNode("view", { class: "mess_Title" }, [
        vue.createElementVNode("view", {
          class: "messImg",
          onClick: _cache[0] || (_cache[0] = (...args) => $options.goback && $options.goback(...args))
        }, [
          vue.createElementVNode("img", {
            src: "https://lanhu.oss-cn-beijing.aliyuncs.com/SketchPng427bd6433cc6e0a8e82f63b3174b2c817dc9c299bd0c4414c8d258f46cf46f94",
            alt: ""
          })
        ]),
        vue.createElementVNode("view", { class: "title_text" }, " 班级群 "),
        vue.createElementVNode("view", { class: "title_img" }, [
          vue.createElementVNode("image", {
            style: { "width": "36rpx", "height": "36rpx" },
            src: _imports_0,
            mode: "aspectFit",
            onClick: _cache[1] || (_cache[1] = (...args) => $options.mycode && $options.mycode(...args))
          }),
          vue.createElementVNode("image", {
            style: { "width": "36rpx", "height": "36rpx" },
            src: _imports_1$2,
            mode: "aspectFit",
            onClick: _cache[2] || (_cache[2] = (...args) => _ctx.btnscan && _ctx.btnscan(...args))
          }),
          vue.createElementVNode("image", {
            style: { "width": "36rpx", "height": "36rpx" },
            src: _imports_2$1,
            mode: "aspectFit"
          }),
          vue.createCommentVNode(' <img src="https://lanhu.oss-cn-beijing.aliyuncs.com/SketchPng321758fb81a047a63eed79ffbd8a9de39b6d95d0adc9749329922655c760bb3a" alt="" @click="mycode" />\r\n        <img src="https://lanhu.oss-cn-beijing.aliyuncs.com/SketchPng5e1b57899cb5b9cd47a8d4e301f4f736efd47c45ca7713a43d00721e94370714" alt="" />\r\n        <img src="https://lanhu.oss-cn-beijing.aliyuncs.com/SketchPng60de4c6690251e592eeb3edf5e89b8b74e18a9d17717d9949db1edcb3fcd23bd" alt="" /> ')
        ])
      ]),
      vue.createCommentVNode(' <msglist :msgList="class_List"/> '),
      vue.createElementVNode("view", { style: { "padding": "0 28rpx" } }, [
        vue.createVNode(_component_TUIChat1)
      ])
    ]);
  }
  const PagesPagesallMypageClassGroup = /* @__PURE__ */ _export_sfc(_sfc_main$1t, [["render", _sfc_render$1s], ["__file", "C:/Users/Administrator/Desktop/Project Folder/ZXHand/ZXHandwritting_APP_uniapp/pages/pagesall/mypage/classGroup.vue"]]);
  const _sfc_main$1s = {
    name: "histlist",
    props: {
      histList: {
        type: Array,
        default: []
      }
    },
    data() {
      return {};
    },
    onload() {
    },
    methods: {
      toCorr() {
        uni.navigateTo({
          url: "/pages/pagesall/mypage/correction"
        });
      }
    }
  };
  function _sfc_render$1r(_ctx, _cache, $props, $setup, $data, $options) {
    return vue.openBlock(), vue.createElementBlock("view", { class: "box-list" }, [
      (vue.openBlock(true), vue.createElementBlock(
        vue.Fragment,
        null,
        vue.renderList($props.histList, (item, index2) => {
          return vue.openBlock(), vue.createElementBlock("view", {
            class: "boxlist",
            key: index2,
            onClick: _cache[0] || (_cache[0] = (...args) => $options.toCorr && $options.toCorr(...args))
          }, [
            vue.createElementVNode("view", { class: "boxlistImg" }, [
              vue.createElementVNode("img", {
                src: item.img,
                alt: ""
              }, null, 8, ["src"])
            ]),
            vue.createElementVNode(
              "view",
              { class: "boxlistText1" },
              vue.toDisplayString(item.title),
              1
              /* TEXT */
            ),
            vue.createElementVNode("view", { class: "boxlistText2" }, [
              vue.createElementVNode(
                "text",
                null,
                vue.toDisplayString(item.date ? item.date : item.teacherName),
                1
                /* TEXT */
              ),
              vue.createElementVNode("view", { class: "boxlistText3" }, [
                vue.createElementVNode("text", null, "评测:"),
                vue.createElementVNode(
                  "text",
                  { class: "boxlistText4" },
                  vue.toDisplayString(item.grade),
                  1
                  /* TEXT */
                )
              ])
            ])
          ]);
        }),
        128
        /* KEYED_FRAGMENT */
      ))
    ]);
  }
  const myhistList = /* @__PURE__ */ _export_sfc(_sfc_main$1s, [["render", _sfc_render$1r], ["__scopeId", "data-v-df6b140b"], ["__file", "C:/Users/Administrator/Desktop/Project Folder/ZXHand/ZXHandwritting_APP_uniapp/pages/pagesall/mypage/compontents/histList.vue"]]);
  const _sfc_main$1r = {
    components: {
      myhistList
    },
    data() {
      return {
        statusBarHeight: "",
        AIassessmentList: [],
        teacherList: [],
        params: {
          page: 1,
          limit: 4
        },
        params1: {
          page: 1,
          limit: 4
        }
      };
    },
    mounted() {
      this.getAIassessmentList();
    },
    onLoad() {
      this.statusBarHeight = getApp().globalData.top;
    },
    methods: {
      async getAIassessmentList() {
        try {
          const res = await fetchMyAIWork(this.params);
          const res1 = await fetchMyHistoryHomework(this.params1);
          formatAppLog("log", "at pages/pagesall/mypage/historyAssessment.vue:74", res1);
          this.AIassessmentList = res.items.map((item) => ({
            img: item.origin_img || "",
            // 确保有 img 属性
            title: item.title || "未命名",
            // 确保有 title 属性
            date: item.addtime || "未知日期",
            // 确保有 date 属性
            grade: item.result >= 80 ? "优秀" : "良好"
          }));
          this.teacherList = res1.items.map((item) => ({
            img: item.origin_img || "",
            // 确保有 img 属性
            title: item.title || "未命名",
            // 确保有 title 属性
            date: item.addtime || "未知日期",
            // 确保有 date 属性
            grade: item.result >= 80 ? "优秀" : "良好"
          }));
        } catch (e2) {
        }
      },
      hist_goback() {
        uni.navigateBack();
      },
      aihist() {
        uni.navigateTo({
          url: "/pages/pagesall/mypage/AIhist"
        });
      },
      teacherhist() {
        uni.navigateTo({
          url: "/pages/pagesall/mypage/teacherHist"
        });
      }
    }
  };
  function _sfc_render$1q(_ctx, _cache, $props, $setup, $data, $options) {
    const _component_myhistList = vue.resolveComponent("myhistList");
    return vue.openBlock(), vue.createElementBlock("view", null, [
      vue.createElementVNode("view", { class: "hist_Title" }, [
        vue.createElementVNode(
          "view",
          {
            style: vue.normalizeStyle("height:" + ($data.statusBarHeight + 5) + "px;")
          },
          null,
          4
          /* STYLE */
        ),
        vue.createElementVNode("view", {
          class: "histImg",
          onClick: _cache[0] || (_cache[0] = (...args) => $options.hist_goback && $options.hist_goback(...args))
        }, [
          vue.createElementVNode("img", {
            src: "https://lanhu.oss-cn-beijing.aliyuncs.com/SketchPng427bd6433cc6e0a8e82f63b3174b2c817dc9c299bd0c4414c8d258f46cf46f94",
            alt: ""
          })
        ]),
        vue.createElementVNode("view", { class: "hist_text" }, " 历史测评 ")
      ]),
      vue.createElementVNode("view", { class: "histbox" }, [
        vue.createElementVNode("text", { class: "box-text1" }, "AI检测"),
        vue.createElementVNode("text", {
          class: "box-text2",
          onClick: _cache[1] || (_cache[1] = (...args) => $options.aihist && $options.aihist(...args))
        }, "更多")
      ]),
      $data.AIassessmentList.length > 0 ? (vue.openBlock(), vue.createElementBlock("view", {
        key: 0,
        style: { "height": "580rpx", "overflow": "hidden" }
      }, [
        vue.createVNode(_component_myhistList, { histList: $data.AIassessmentList }, null, 8, ["histList"])
      ])) : (vue.openBlock(), vue.createElementBlock("view", {
        key: 1,
        class: "kong",
        style: { "display": "flex", "justify-content": "center", "align-items": "center", "height": "500rpx" }
      }, [
        vue.createElementVNode("image", {
          style: { "width": "400rpx", "height": "400rpx" },
          src: _imports_0$6,
          mode: "aspectFit"
        })
      ])),
      vue.createElementVNode("view", { class: "histbox" }, [
        vue.createElementVNode("text", { class: "box-text1" }, "老师审阅"),
        vue.createElementVNode("text", {
          class: "box-text2",
          onClick: _cache[2] || (_cache[2] = (...args) => $options.teacherhist && $options.teacherhist(...args))
        }, "更多")
      ]),
      $data.teacherList.length > 0 ? (vue.openBlock(), vue.createElementBlock("view", {
        key: 2,
        style: { "height": "580rpx", "overflow": "hidden" }
      }, [
        vue.createVNode(_component_myhistList, { histList: $data.teacherList }, null, 8, ["histList"])
      ])) : (vue.openBlock(), vue.createElementBlock("view", {
        key: 3,
        class: "kong",
        style: { "display": "flex", "justify-content": "center", "align-items": "center", "height": "500rpx" }
      }, [
        vue.createElementVNode("image", {
          style: { "width": "400rpx", "height": "400rpx" },
          src: _imports_0$6,
          mode: "aspectFit"
        })
      ]))
    ]);
  }
  const PagesPagesallMypageHistoryAssessment = /* @__PURE__ */ _export_sfc(_sfc_main$1r, [["render", _sfc_render$1q], ["__file", "C:/Users/Administrator/Desktop/Project Folder/ZXHand/ZXHandwritting_APP_uniapp/pages/pagesall/mypage/historyAssessment.vue"]]);
  const _sfc_main$1q = {
    components: {
      myhistList
    },
    data() {
      return {
        statusBarHeight: "",
        AIhistList: [],
        params: {
          page: 1,
          limit: 10
        },
        isLoading: false
      };
    },
    onLoad() {
      this.statusBarHeight = getApp().globalData.top;
      this.getAIassessmentList(), this.isLoading = false;
    },
    onPullDownRefresh() {
      this.getAIassessmentList();
      uni.stopPullDownRefresh();
    },
    onReachBottom() {
      if (this.isLoading)
        return;
      this.params.page++;
      const currentLength = this.AIhistList.length;
      this.getAIassessmentList().then(() => {
        if (this.AIhistList.length === currentLength) {
          this.isLoading = true;
        } else {
          this.isLoading = false;
        }
      }).catch(() => {
        this.isLoading = false;
      });
    },
    methods: {
      async getAIassessmentList() {
        try {
          const res = await fetchMyAIWork(this.params);
          formatAppLog("log", "at pages/pagesall/mypage/AIhist.vue:79", res);
          if (res.items && res.items.length > 0) {
            const newItems = res.items.map((item) => ({
              img: item.origin_img || "",
              // 确保有 img 属性
              title: item.title || "未命名",
              // 确保有 title 属性
              date: item.addtime || "未知日期",
              // 确保有 date 属性
              grade: item.result >= 80 ? "优秀" : "良好"
            }));
            this.AIhistList = [...this.AIhistList, ...newItems];
          } else {
            uni.showToast({
              title: "没有更多数据",
              icon: "none",
              duration: 2e3
              // 持续时间，单位为毫秒
            });
          }
        } catch (e2) {
          formatAppLog("error", "at pages/pagesall/mypage/AIhist.vue:101", e2);
        }
      },
      goback() {
        uni.navigateBack();
      }
    }
  };
  function _sfc_render$1p(_ctx, _cache, $props, $setup, $data, $options) {
    const _component_myhistList = vue.resolveComponent("myhistList");
    return vue.openBlock(), vue.createElementBlock(
      vue.Fragment,
      null,
      [
        vue.createElementVNode("view", { class: "AI_Title" }, [
          vue.createElementVNode(
            "view",
            {
              style: vue.normalizeStyle("height:" + ($data.statusBarHeight + 5) + "px;")
            },
            null,
            4
            /* STYLE */
          ),
          vue.createElementVNode("view", {
            class: "aiImg",
            onClick: _cache[0] || (_cache[0] = (...args) => $options.goback && $options.goback(...args))
          }, [
            vue.createElementVNode("img", {
              src: "https://lanhu.oss-cn-beijing.aliyuncs.com/SketchPng427bd6433cc6e0a8e82f63b3174b2c817dc9c299bd0c4414c8d258f46cf46f94",
              alt: ""
            })
          ]),
          vue.createElementVNode("view", { class: "ai_text" }, " AI历史测评 ")
        ]),
        vue.createElementVNode("view", { class: "aihist-box" }, [
          vue.createElementVNode("input", {
            type: "text",
            onClick: _cache[1] || (_cache[1] = (...args) => _ctx.searchCity && _ctx.searchCity(...args)),
            class: "aihist_input",
            placeholder: "请输入要查找的城市"
          })
        ]),
        $data.AIhistList.length > 0 ? (vue.openBlock(), vue.createElementBlock("view", { key: 0 }, [
          vue.createVNode(_component_myhistList, { histList: $data.AIhistList }, null, 8, ["histList"])
        ])) : (vue.openBlock(), vue.createElementBlock("view", {
          key: 1,
          class: "kong",
          style: { "display": "flex", "justify-content": "center", "align-items": "center", "height": "500rpx" }
        }, [
          vue.createElementVNode("image", {
            style: { "width": "400rpx", "height": "400rpx" },
            src: _imports_0$6,
            mode: "aspectFit"
          })
        ]))
      ],
      64
      /* STABLE_FRAGMENT */
    );
  }
  const PagesPagesallMypageAIhist = /* @__PURE__ */ _export_sfc(_sfc_main$1q, [["render", _sfc_render$1p], ["__file", "C:/Users/Administrator/Desktop/Project Folder/ZXHand/ZXHandwritting_APP_uniapp/pages/pagesall/mypage/AIhist.vue"]]);
  const _sfc_main$1p = {
    components: {
      myhistList
    },
    data() {
      return {
        statusBarHeight: "",
        teacherhistList: []
      };
    },
    onLoad() {
      this.statusBarHeight = getApp().globalData.top;
    },
    onPullDownRefresh() {
      this.getAIassessmentList();
      uni.stopPullDownRefresh();
    },
    onReachBottom() {
      if (this.isLoading)
        return;
      this.params.page++;
      const currentLength = this.teacherhistList.length;
      this.getAIassessmentList().then(() => {
        if (this.teacherhistList.length === currentLength) {
          this.isLoading = true;
        } else {
          this.isLoading = false;
        }
      }).catch(() => {
        this.isLoading = false;
      });
    },
    methods: {
      async getAIassessmentList() {
        try {
          const res = await fetchMyHistoryHomework(this.params);
          formatAppLog("log", "at pages/pagesall/mypage/teacherHist.vue:71", res);
          if (res.items && res.items.length > 0) {
            const newItems = res.items.map((item) => ({
              img: item.origin_img || "",
              // 确保有 img 属性
              title: item.title || "未命名",
              // 确保有 title 属性
              date: item.addtime || "未知日期",
              // 确保有 date 属性
              grade: item.result >= 80 ? "优秀" : "良好"
            }));
            this.teacherhistList = [...this.teacherhistList, ...newItems];
          } else {
            uni.showToast({
              title: "没有更多数据",
              icon: "none",
              duration: 2e3
              // 持续时间，单位为毫秒
            });
          }
        } catch (e2) {
          formatAppLog("error", "at pages/pagesall/mypage/teacherHist.vue:93", e2);
        }
      },
      teacherhist_goback() {
        uni.navigateBack();
      }
    }
  };
  function _sfc_render$1o(_ctx, _cache, $props, $setup, $data, $options) {
    const _component_myhistList = vue.resolveComponent("myhistList");
    return vue.openBlock(), vue.createElementBlock(
      vue.Fragment,
      null,
      [
        vue.createElementVNode("view", { class: "teacher_Title" }, [
          vue.createElementVNode(
            "view",
            {
              style: vue.normalizeStyle("height:" + ($data.statusBarHeight + 5) + "px;")
            },
            null,
            4
            /* STYLE */
          ),
          vue.createElementVNode("view", {
            class: "teacherImg",
            onClick: _cache[0] || (_cache[0] = (...args) => $options.teacherhist_goback && $options.teacherhist_goback(...args))
          }, [
            vue.createElementVNode("img", {
              src: "https://lanhu.oss-cn-beijing.aliyuncs.com/SketchPng427bd6433cc6e0a8e82f63b3174b2c817dc9c299bd0c4414c8d258f46cf46f94",
              alt: ""
            })
          ]),
          vue.createElementVNode("view", { class: "teacher_text" }, " 老师历史审阅 ")
        ]),
        vue.createCommentVNode(' <view class="teacherhist-box">\r\n    <input type="text" @click="searchCity" class="teacherhist_input" placeholder="请输入要查找的城市" />\r\n  </view> '),
        $data.teacherhistList.length > 0 ? (vue.openBlock(), vue.createElementBlock("view", { key: 0 }, [
          vue.createVNode(_component_myhistList, { histList: $data.teacherhistList }, null, 8, ["histList"])
        ])) : (vue.openBlock(), vue.createElementBlock("view", {
          key: 1,
          class: "kong",
          style: { "display": "flex", "justify-content": "center", "align-items": "center", "height": "500rpx" }
        }, [
          vue.createElementVNode("image", {
            style: { "width": "400rpx", "height": "400rpx" },
            src: _imports_0$6,
            mode: "aspectFit"
          })
        ]))
      ],
      64
      /* STABLE_FRAGMENT */
    );
  }
  const PagesPagesallMypageTeacherHist = /* @__PURE__ */ _export_sfc(_sfc_main$1p, [["render", _sfc_render$1o], ["__file", "C:/Users/Administrator/Desktop/Project Folder/ZXHand/ZXHandwritting_APP_uniapp/pages/pagesall/mypage/teacherHist.vue"]]);
  const _sfc_main$1o = {
    data() {
      return {
        statusBarHeight: "",
        temworkList: [],
        workList: [],
        isLoading: false,
        params: {
          page: 1,
          limit: 6
        },
        params1: {
          page: 1,
          limit: 6
        }
      };
    },
    onPullDownRefresh() {
      this.loadMyTemporaryHomework();
      uni.stopPullDownRefresh();
    },
    onReachBottom() {
      if (this.isLoading)
        return;
      this.params.page++;
      this.params1.page++;
      const currentLength = this.temworkList.length;
      const currentLength1 = this.workList.length;
      this.loadMyTemporaryHomework().then(() => {
        const newLength1 = this.temworkList.length;
        const newLength2 = this.workList.length;
        if (newLength1 === currentLength && newLength2 === currentLength1) {
          this.isLoading = true;
          uni.showToast({
            title: "没有更多数据",
            icon: "none",
            duration: 2e3
            // 持续时间，单位为毫秒
          });
        } else {
          this.isLoading = false;
        }
      }).catch(() => {
        this.isLoading = false;
      });
    },
    onLoad() {
      this.statusBarHeight = getApp().globalData.top;
      this.isLoading = false;
    },
    mounted() {
      this.loadMyTemporaryHomework();
    },
    methods: {
      goToVideoPage(id) {
        uni.navigateTo({
          url: `/pages/pagesall/course/go_learn?id=${id}`
          // 使用模板字符串构建URL
        });
      },
      goToVideoPage1(id) {
        uni.navigateTo({
          url: `/pages/pagesall/course/go_learn?id=${id}`
          // 使用模板字符串构建URL
        });
      },
      async loadMyTemporaryHomework() {
        try {
          const response = await fetchMyTemporaryHomework(this.params);
          const HistoryHomework = await fetchMyHistoryHomework(this.params1);
          if (response.items && response.items.length > 0) {
            const existingIds = new Set(this.temworkList.map((item) => item.id));
            const newItems = response.items.filter((item) => !existingIds.has(item.id)).map((item) => ({
              ...item
              // 复制其他属性
              // 其他字段
            }));
            this.temworkList = [...this.temworkList, ...newItems];
          } else {
          }
          if (HistoryHomework.items && HistoryHomework.items.length > 0) {
            const existingIds1 = new Set(this.temworkList.map((item) => item.id));
            const newItems1 = HistoryHomework.items.filter((item) => !existingIds1.has(item.id)).map((item) => ({
              ...item
              // 复制其他属性
              // 其他字段
            }));
            this.workList = [...this.workList, ...newItems1];
          } else {
          }
          formatAppLog("log", "at pages/pagesall/mypage/myHomework.vue:182", "教师信息:", this.temworkList);
          formatAppLog("log", "at pages/pagesall/mypage/myHomework.vue:183", "雪花酥呢个:", this.workList);
        } catch (error2) {
          formatAppLog("error", "at pages/pagesall/mypage/myHomework.vue:185", "获取教学消息失败:", error2);
        }
      },
      work_goback() {
        uni.navigateBack();
      }
    }
  };
  function _sfc_render$1n(_ctx, _cache, $props, $setup, $data, $options) {
    return vue.openBlock(), vue.createElementBlock("view", null, [
      vue.createElementVNode(
        "view",
        {
          style: vue.normalizeStyle("height:" + ($data.statusBarHeight + 5) + "px;")
        },
        null,
        4
        /* STYLE */
      ),
      vue.createElementVNode("view", { class: "homework_Title" }, [
        vue.createElementVNode("view", {
          class: "homeworkImg",
          onClick: _cache[0] || (_cache[0] = (...args) => $options.work_goback && $options.work_goback(...args))
        }, [
          vue.createElementVNode("img", {
            src: "https://lanhu.oss-cn-beijing.aliyuncs.com/SketchPng427bd6433cc6e0a8e82f63b3174b2c817dc9c299bd0c4414c8d258f46cf46f94",
            alt: ""
          })
        ]),
        vue.createElementVNode("view", { class: "homework_Title_text" }, " 我的作业 ")
      ]),
      vue.createElementVNode("view", { class: "homeworktbox" }, [
        vue.createElementVNode("text", { class: "box-text1" }, "临时作业")
      ]),
      $data.temworkList.length > 0 ? (vue.openBlock(), vue.createElementBlock("view", { key: 0 }, [
        vue.createElementVNode("view", { class: "tem-list" }, [
          (vue.openBlock(true), vue.createElementBlock(
            vue.Fragment,
            null,
            vue.renderList($data.temworkList, (item, index2) => {
              return vue.openBlock(), vue.createElementBlock("view", {
                class: "temlist",
                key: index2,
                onClick: ($event) => $options.goToVideoPage(item.id)
              }, [
                vue.createElementVNode("view", { class: "temlistImg" }, [
                  vue.createElementVNode("img", {
                    src: item.sub_image,
                    alt: ""
                  }, null, 8, ["src"])
                ]),
                vue.createElementVNode(
                  "view",
                  { class: "temlistText1" },
                  vue.toDisplayString(item.content),
                  1
                  /* TEXT */
                ),
                vue.createElementVNode("view", { class: "temlistText2" }, [
                  vue.createElementVNode(
                    "text",
                    null,
                    "讲师：" + vue.toDisplayString(item.teacher_name),
                    1
                    /* TEXT */
                  ),
                  vue.createElementVNode(
                    "text",
                    null,
                    vue.toDisplayString((new Date(item.finish_time).getMonth() + 1).toString().padStart(2, "0") + "-" + new Date(item.finish_time).getDate().toString().padStart(2, "0")),
                    1
                    /* TEXT */
                  )
                ])
              ], 8, ["onClick"]);
            }),
            128
            /* KEYED_FRAGMENT */
          ))
        ])
      ])) : (vue.openBlock(), vue.createElementBlock("view", {
        key: 1,
        class: "kong",
        style: { "display": "flex", "justify-content": "center", "align-items": "center", "height": "500rpx" }
      }, [
        vue.createElementVNode("image", {
          style: { "width": "400rpx", "height": "400rpx" },
          src: _imports_0$6,
          mode: "aspectFit"
        })
      ])),
      vue.createElementVNode("view", { class: "homeworktbox" }, [
        vue.createElementVNode("text", { class: "box-text1" }, "近期作业")
      ]),
      $data.workList.length > 0 ? (vue.openBlock(), vue.createElementBlock("view", { key: 2 }, [
        vue.createElementVNode("view", { class: "tem-list" }, [
          (vue.openBlock(true), vue.createElementBlock(
            vue.Fragment,
            null,
            vue.renderList($data.workList, (item, index2) => {
              return vue.openBlock(), vue.createElementBlock("view", {
                class: "temlist",
                key: index2,
                onClick: ($event) => $options.goToVideoPage1(item.id)
              }, [
                vue.createElementVNode("view", { class: "temlistImg" }, [
                  vue.createElementVNode("img", {
                    src: item.img,
                    alt: ""
                  }, null, 8, ["src"])
                ]),
                vue.createElementVNode(
                  "view",
                  { class: "temlistText1" },
                  vue.toDisplayString(item.title),
                  1
                  /* TEXT */
                ),
                vue.createElementVNode("view", { class: "boxlistText3" }, [
                  vue.createElementVNode("text", { class: "boxlistText4" }, "优秀")
                ]),
                vue.createElementVNode("view", { class: "temlistText2" }, [
                  vue.createElementVNode(
                    "text",
                    null,
                    vue.toDisplayString(item.teacher),
                    1
                    /* TEXT */
                  )
                ])
              ], 8, ["onClick"]);
            }),
            128
            /* KEYED_FRAGMENT */
          ))
        ])
      ])) : (vue.openBlock(), vue.createElementBlock("view", {
        key: 3,
        class: "kong",
        style: { "display": "flex", "justify-content": "center", "align-items": "center", "height": "500rpx" }
      }, [
        vue.createElementVNode("image", {
          style: { "width": "400rpx", "height": "400rpx" },
          src: _imports_0$6,
          mode: "aspectFit"
        })
      ]))
    ]);
  }
  const PagesPagesallMypageMyHomework = /* @__PURE__ */ _export_sfc(_sfc_main$1o, [["render", _sfc_render$1n], ["__file", "C:/Users/Administrator/Desktop/Project Folder/ZXHand/ZXHandwritting_APP_uniapp/pages/pagesall/mypage/myHomework.vue"]]);
  const _sfc_main$1n = {
    components: {
      myhistList
    },
    data() {
      return {
        statusBarHeight: "",
        indivimsg_heard: "https://lanhu-dds-backend.oss-cn-beijing.aliyuncs.com/merge_image/imgs/26483a4d5dc54c63ae2af524e81ebb4d_mergeImage.png",
        indivimsg_name: "刘易阳-田园路校区",
        indivimsg_id: "0000002",
        current: 0,
        items: ["AI检查", "老师审阅"],
        AIhistList: [
          {
            img: "https://lanhu-dds-backend.oss-cn-beijing.aliyuncs.com/merge_image/imgs/fdef5ff762634f9f883ddd89c8af057a_mergeImage.png",
            title: "书法练习第一课",
            date: "2024-07-1"
          },
          {
            img: "https://lanhu-dds-backend.oss-cn-beijing.aliyuncs.com/merge_image/imgs/e5923dca4d594da3abf115ee5a05cf14_mergeImage.png",
            title: "书法练习第二课",
            date: "2024-07-1"
          },
          {
            img: "https://lanhu-dds-backend.oss-cn-beijing.aliyuncs.com/merge_image/imgs/e5923dca4d594da3abf115ee5a05cf14_mergeImage.png",
            title: "书法练习第三课",
            date: "2024-07-1"
          },
          {
            img: "https://lanhu-dds-backend.oss-cn-beijing.aliyuncs.com/merge_image/imgs/fdef5ff762634f9f883ddd89c8af057a_mergeImage.png",
            title: "书法练习第四课",
            date: "2024-07-1"
          },
          {
            img: "https://lanhu-dds-backend.oss-cn-beijing.aliyuncs.com/merge_image/imgs/fdef5ff762634f9f883ddd89c8af057a_mergeImage.png",
            title: "书法练习第一课",
            date: "2024-07-1"
          },
          {
            img: "https://lanhu-dds-backend.oss-cn-beijing.aliyuncs.com/merge_image/imgs/e5923dca4d594da3abf115ee5a05cf14_mergeImage.png",
            title: "书法练习第二课",
            date: "2024-07-1"
          }
        ],
        teacherhistList: [
          {
            img: "https://lanhu-dds-backend.oss-cn-beijing.aliyuncs.com/merge_image/imgs/e5923dca4d594da3abf115ee5a05cf14_mergeImage.png",
            title: "有进步继续努力",
            teacherName: "王老师"
          },
          {
            img: "https://lanhu-dds-backend.oss-cn-beijing.aliyuncs.com/merge_image/imgs/fdef5ff762634f9f883ddd89c8af057a_mergeImage.png",
            title: "有进步继续努力",
            teacherName: "王老师"
          },
          {
            img: "https://lanhu-dds-backend.oss-cn-beijing.aliyuncs.com/merge_image/imgs/fdef5ff762634f9f883ddd89c8af057a_mergeImage.png",
            title: "有进步继续努力",
            teacherName: "王老师"
          },
          {
            img: "https://lanhu-dds-backend.oss-cn-beijing.aliyuncs.com/merge_image/imgs/e5923dca4d594da3abf115ee5a05cf14_mergeImage.png",
            title: "有进步继续努力",
            teacherName: "王老师"
          },
          {
            img: "https://lanhu-dds-backend.oss-cn-beijing.aliyuncs.com/merge_image/imgs/e5923dca4d594da3abf115ee5a05cf14_mergeImage.png",
            title: "有进步继续努力",
            teacherName: "王老师"
          },
          {
            img: "https://lanhu-dds-backend.oss-cn-beijing.aliyuncs.com/merge_image/imgs/fdef5ff762634f9f883ddd89c8af057a_mergeImage.png",
            title: "有进步继续努力",
            teacherName: "王老师"
          },
          {
            img: "https://lanhu-dds-backend.oss-cn-beijing.aliyuncs.com/merge_image/imgs/e5923dca4d594da3abf115ee5a05cf14_mergeImage.png",
            title: "有进步继续努力",
            teacherName: "王老师"
          },
          {
            img: "https://lanhu-dds-backend.oss-cn-beijing.aliyuncs.com/merge_image/imgs/fdef5ff762634f9f883ddd89c8af057a_mergeImage.png",
            title: "有进步继续努力",
            teacherName: "王老师"
          }
        ]
      };
    },
    onLoad() {
      this.statusBarHeight = getApp().globalData.top;
    },
    methods: {
      ind_goback() {
        uni.navigateBack();
      },
      onClickItem(e2) {
        if (this.current !== e2.currentIndex) {
          this.current = e2.currentIndex;
        }
      }
    }
  };
  function _sfc_render$1m(_ctx, _cache, $props, $setup, $data, $options) {
    const _component_uni_segmented_control = resolveEasycom(vue.resolveDynamicComponent("uni-segmented-control"), __easycom_0$2);
    const _component_uni_section = vue.resolveComponent("uni-section");
    const _component_myhistList = vue.resolveComponent("myhistList");
    return vue.openBlock(), vue.createElementBlock("view", { class: "indmsg" }, [
      vue.createElementVNode(
        "view",
        {
          style: vue.normalizeStyle("height:" + ($data.statusBarHeight + 5) + "px;")
        },
        null,
        4
        /* STYLE */
      ),
      vue.createElementVNode("view", { class: "msg_Title" }, [
        vue.createElementVNode("view", {
          class: "msgImg",
          onClick: _cache[0] || (_cache[0] = (...args) => $options.ind_goback && $options.ind_goback(...args))
        }, [
          vue.createElementVNode("img", {
            src: "https://lanhu.oss-cn-beijing.aliyuncs.com/SketchPng427bd6433cc6e0a8e82f63b3174b2c817dc9c299bd0c4414c8d258f46cf46f94",
            alt: ""
          })
        ]),
        vue.createElementVNode("view", { class: "msg_text" }, " 刘易阳信息 ")
      ]),
      vue.createElementVNode("view", { class: "bg_left" }),
      vue.createElementVNode("view", { class: "bg_right" }),
      vue.createElementVNode("view", { class: "bg_center" }),
      vue.createElementVNode("view", { class: "indivimsg_name" }, [
        vue.createElementVNode("img", {
          src: $data.indivimsg_heard,
          alt: ""
        }, null, 8, ["src"]),
        vue.createElementVNode(
          "view",
          {
            class: "msg_text1",
            style: { "margin-top": "8rpx" }
          },
          vue.toDisplayString($data.indivimsg_name),
          1
          /* TEXT */
        ),
        vue.createElementVNode(
          "view",
          {
            class: "msg_text2",
            style: { "margin-top": "8rpx" }
          },
          " ID:" + vue.toDisplayString($data.indivimsg_id),
          1
          /* TEXT */
        ),
        vue.createElementVNode("view", { class: "textflex" }, [
          vue.createElementVNode("view", { class: "msgtext3" }, " 书法一班 "),
          vue.createElementVNode("view", { class: "msgtext4" }, " 11岁 ")
        ])
      ]),
      vue.createElementVNode("view", { class: "worksmsg" }, [
        vue.createVNode(_component_uni_section, {
          title: "实心标签",
          type: "line"
        }, {
          default: vue.withCtx(() => [
            vue.createElementVNode("view", { class: "uni-padding-wrap uni-common-mt" }, [
              vue.createVNode(_component_uni_segmented_control, {
                class: "uni_center",
                style: { "border-bottom": "0.5rpx solid #EEEEEE" },
                current: $data.current,
                values: $data.items,
                "active-color": "#5791F2",
                styleType: "text",
                onClickItem: $options.onClickItem
              }, null, 8, ["current", "values", "onClickItem"]),
              $data.current === 0 ? (vue.openBlock(), vue.createElementBlock("view", {
                key: 0,
                class: "indi_oper"
              })) : vue.createCommentVNode("v-if", true),
              $data.current === 1 ? (vue.openBlock(), vue.createElementBlock("view", {
                key: 1,
                class: "indi_oper1"
              })) : vue.createCommentVNode("v-if", true)
            ])
          ]),
          _: 1
          /* STABLE */
        }),
        $data.current === 0 ? (vue.openBlock(), vue.createElementBlock("view", {
          key: 0,
          class: "AIlist"
        }, [
          vue.createVNode(_component_myhistList, { histList: $data.AIhistList }, null, 8, ["histList"])
        ])) : vue.createCommentVNode("v-if", true),
        $data.current !== 0 ? (vue.openBlock(), vue.createElementBlock("view", {
          key: 1,
          class: "AIlist"
        }, [
          vue.createVNode(_component_myhistList, { histList: $data.teacherhistList }, null, 8, ["histList"])
        ])) : vue.createCommentVNode("v-if", true)
      ])
    ]);
  }
  const PagesPagesallMypageIndividualmsg = /* @__PURE__ */ _export_sfc(_sfc_main$1n, [["render", _sfc_render$1m], ["__file", "C:/Users/Administrator/Desktop/Project Folder/ZXHand/ZXHandwritting_APP_uniapp/pages/pagesall/mypage/individualmsg.vue"]]);
  const _sfc_main$1m = {
    data() {
      return {
        corrlist: 4,
        limit: 5,
        // 你可以根据需要赋值
        page: 1,
        // 你可以根据需要赋值
        statusBarHeight: ""
      };
    },
    onLoad() {
      this.statusBarHeight = getApp().globalData.top;
      this.getMyHistoryHomework();
    },
    methods: {
      async getMyHistoryHomework() {
        try {
          const response = await fetchMyHistoryHomework({ limit: this.limit, page: this.page });
          formatAppLog("log", "at pages/pagesall/mypage/correction.vue:71", response);
          this.corrlist = response.items;
          formatAppLog("log", "at pages/pagesall/mypage/correction.vue:73", this.corrlist);
        } catch (error2) {
          formatAppLog("error", "at pages/pagesall/mypage/correction.vue:75", "获取关于我们的接口失败：", error2);
        }
      },
      corr_goback() {
        uni.navigateBack();
      }
    }
  };
  function _sfc_render$1l(_ctx, _cache, $props, $setup, $data, $options) {
    return vue.openBlock(), vue.createElementBlock("view", null, [
      vue.createElementVNode(
        "view",
        {
          style: vue.normalizeStyle("height:" + ($data.statusBarHeight + 5) + "px;")
        },
        null,
        4
        /* STYLE */
      ),
      vue.createElementVNode("view", { class: "corr_Title" }, [
        vue.createElementVNode("view", {
          class: "corrImg",
          onClick: _cache[0] || (_cache[0] = (...args) => $options.corr_goback && $options.corr_goback(...args))
        }, [
          vue.createElementVNode("img", {
            src: "https://lanhu.oss-cn-beijing.aliyuncs.com/SketchPng427bd6433cc6e0a8e82f63b3174b2c817dc9c299bd0c4414c8d258f46cf46f94",
            alt: ""
          })
        ]),
        vue.createElementVNode("view", { class: "corr_text" }, " 批改作业 ")
      ]),
      vue.createElementVNode("view", { class: "corr-banner" }),
      $data.corrlist.length > 0 ? (vue.openBlock(), vue.createElementBlock("view", { key: 0 }, [
        (vue.openBlock(true), vue.createElementBlock(
          vue.Fragment,
          null,
          vue.renderList($data.corrlist, (item) => {
            return vue.openBlock(), vue.createElementBlock("view", {
              class: "corr-work",
              key: item
            }, [
              vue.createElementVNode("view", { class: "box_3 flex-col" }, [
                vue.createElementVNode("view", { class: "section_2 flex-col" }, [
                  vue.createElementVNode("image", {
                    class: "image_2",
                    referrerpolicy: "no-referrer",
                    src: "https://lanhu.oss-cn-beijing.aliyuncs.com/SketchPnga8bdcdc42cb8abff5e083a6b06d4babd504f55028e66bd740598ca6e4c215f63"
                  }),
                  vue.createElementVNode("view", { class: "section_3 flex-col justify-center" }, [
                    vue.createElementVNode("view", { class: "box_4 flex-col" }, [
                      vue.createElementVNode("text", { class: "text_4" }, "飞"),
                      vue.createElementVNode("image", {
                        class: "image_3",
                        referrerpolicy: "no-referrer",
                        src: "https://lanhu.oss-cn-beijing.aliyuncs.com/SketchPng6cc8f7834ef7b5d3491c2d4dd44cb93fc443519c40d959f937e54216c0d0b745"
                      })
                    ])
                  ])
                ])
              ]),
              vue.createElementVNode("view", { class: "worktext" }, [
                vue.createElementVNode("view", null, [
                  vue.createElementVNode("text", { class: "workText3" }, "评测:"),
                  vue.createElementVNode("text", { class: "workText4" }, "优秀")
                ]),
                vue.createElementVNode("view", { class: "workinput" }, [
                  vue.createElementVNode("view", { style: { "font-size": "20rpx" } }, "请输入评语"),
                  vue.createElementVNode("view", { style: { "font-size": "20rpx", "width": "466rpx", "text-align": "right" } }, "0/30")
                ])
              ])
            ]);
          }),
          128
          /* KEYED_FRAGMENT */
        ))
      ])) : (vue.openBlock(), vue.createElementBlock("view", {
        key: 1,
        class: "kong",
        style: { "display": "flex", "justify-content": "center", "align-items": "center", "height": "800rpx" }
      }, [
        vue.createElementVNode("image", {
          style: { "width": "400rpx", "height": "400rpx" },
          src: _imports_0$6,
          mode: "aspectFit"
        })
      ]))
    ]);
  }
  const PagesPagesallMypageCorrection = /* @__PURE__ */ _export_sfc(_sfc_main$1m, [["render", _sfc_render$1l], ["__file", "C:/Users/Administrator/Desktop/Project Folder/ZXHand/ZXHandwritting_APP_uniapp/pages/pagesall/mypage/correction.vue"]]);
  const _sfc_main$1l = {
    name: "histlist",
    props: {
      msgList: {
        type: Array,
        default: []
      }
    },
    data() {
      return {};
    }
  };
  function _sfc_render$1k(_ctx, _cache, $props, $setup, $data, $options) {
    return vue.openBlock(true), vue.createElementBlock(
      vue.Fragment,
      null,
      vue.renderList($props.msgList, (item, index2) => {
        return vue.openBlock(), vue.createElementBlock("view", {
          class: "classList",
          key: index2
        }, [
          vue.createElementVNode("view", {
            class: "classbox",
            onClick: _cache[0] || (_cache[0] = (...args) => _ctx.classgoback && _ctx.classgoback(...args))
          }, [
            vue.createElementVNode("view", { class: "classbox2" }, [
              vue.createElementVNode("view", { class: "classbox_img" }, [
                vue.createElementVNode("img", {
                  src: item.head,
                  alt: ""
                }, null, 8, ["src"])
              ]),
              vue.createElementVNode("view", { class: "classinter" }, [
                vue.createElementVNode("view", { class: "class_text1" }, [
                  vue.createElementVNode(
                    "text",
                    { class: "text-classname" },
                    vue.toDisplayString(item.teacher_name),
                    1
                    /* TEXT */
                  ),
                  vue.createElementVNode("text", { class: "text-hours" }, "6-15")
                ]),
                vue.createElementVNode(
                  "view",
                  { class: "class_text2" },
                  vue.toDisplayString(item.massage),
                  1
                  /* TEXT */
                )
              ])
            ])
          ])
        ]);
      }),
      128
      /* KEYED_FRAGMENT */
    );
  }
  const msglist = /* @__PURE__ */ _export_sfc(_sfc_main$1l, [["render", _sfc_render$1k], ["__scopeId", "data-v-e82ea4c5"], ["__file", "C:/Users/Administrator/Desktop/Project Folder/ZXHand/ZXHandwritting_APP_uniapp/pages/pagesall/mypage/compontents/msglist.vue"]]);
  const _sfc_main$1k = {
    components: {
      msglist,
      TUIChat: TUIConversation$3
    },
    data() {
      return {
        statusBarHeight: "",
        // myteacher_List: [{
        //   className: '书法一班刘老师',
        //   massage: '刘易阳:王老师你教的真好啊',
        //   head: 'https://lanhu-dds-backend.oss-cn-beijing.aliyuncs.com/merge_image/imgs/19217f29299e465481d28ae91dbf317b_mergeImage.png'
        // },
        // {
        //   className: '书法一班刘老师',
        //   massage: '刘易阳:王老师你教的真好啊',
        //   head: 'https://lanhu-dds-backend.oss-cn-beijing.aliyuncs.com/merge_image/imgs/19217f29299e465481d28ae91dbf317b_mergeImage.png'
        // },
        // {
        //   className: '书法一班刘老师',
        //   massage: '刘易阳:王老师你教的真好啊',
        //   head: 'https://lanhu-dds-backend.oss-cn-beijing.aliyuncs.com/merge_image/imgs/19217f29299e465481d28ae91dbf317b_mergeImage.png'
        // },
        // {
        //   className: '书法一班刘老师',
        //   massage: '刘易阳:王老师你教的真好啊',
        //   head: 'https://lanhu-dds-backend.oss-cn-beijing.aliyuncs.com/merge_image/imgs/19217f29299e465481d28ae91dbf317b_mergeImage.png'
        // },
        // {
        //   className: '书法一班刘老师',
        //   massage: '刘易阳:王老师你教的真好啊',
        //   head: 'https://lanhu-dds-backend.oss-cn-beijing.aliyuncs.com/merge_image/imgs/19217f29299e465481d28ae91dbf317b_mergeImage.png'
        // }]
        myteacher_List: [],
        teacherListLength: null
      };
    },
    onLoad() {
      this.statusBarHeight = getApp().globalData.top;
    },
    mounted() {
      this.loadTeacherMessages();
    },
    methods: {
      btnsearch() {
        uni.navigateTo({
          url: "/pages/pagesall/home/search"
        });
      },
      mycode() {
        uni.navigateTo({
          url: "/pages/pagesall/home/mycode"
        });
      },
      btnscan() {
        uni.scanCode({
          success: (res) => {
            formatAppLog("log", "at pages/pagesall/mypage/teachermsg.vue:99", "条码类型：" + res.scanType);
            formatAppLog("log", "at pages/pagesall/mypage/teachermsg.vue:100", "条码内容：" + res.result);
          },
          fail: (error2) => {
            uni.showToast({
              title: error2.errMsg || "扫码失败",
              icon: "none",
              duration: 2e3
            });
          }
        });
      },
      async loadTeacherMessages() {
        try {
          const response = await fetchMyTeacher();
          this.myteacher_List = response.items || [];
          formatAppLog("log", "at pages/pagesall/mypage/teachermsg.vue:116", "教师信息:", this.myteacher_List);
        } catch (error2) {
          formatAppLog("error", "at pages/pagesall/mypage/teachermsg.vue:118", "获取教学消息失败:", error2);
        }
      },
      teacher_goback() {
        uni.navigateBack();
      }
    }
  };
  function _sfc_render$1j(_ctx, _cache, $props, $setup, $data, $options) {
    const _component_TUIChat = vue.resolveComponent("TUIChat");
    return vue.openBlock(), vue.createElementBlock("view", null, [
      vue.createElementVNode(
        "view",
        {
          style: vue.normalizeStyle("height:" + ($data.statusBarHeight + 5) + "px;")
        },
        null,
        4
        /* STYLE */
      ),
      vue.createElementVNode("view", { class: "mess_Title" }, [
        vue.createElementVNode("view", {
          class: "messImg",
          onClick: _cache[0] || (_cache[0] = (...args) => $options.teacher_goback && $options.teacher_goback(...args))
        }, [
          vue.createElementVNode("img", {
            src: "https://lanhu.oss-cn-beijing.aliyuncs.com/SketchPng427bd6433cc6e0a8e82f63b3174b2c817dc9c299bd0c4414c8d258f46cf46f94",
            alt: ""
          })
        ]),
        vue.createElementVNode("view", { class: "title_text" }, " 我的老师 "),
        vue.createElementVNode("view", { class: "title_img" }, [
          vue.createElementVNode("image", {
            style: { "width": "36rpx", "height": "36rpx" },
            src: _imports_0,
            mode: "aspectFit",
            onClick: _cache[1] || (_cache[1] = (...args) => $options.mycode && $options.mycode(...args))
          }),
          vue.createElementVNode("image", {
            style: { "width": "36rpx", "height": "36rpx" },
            src: _imports_1$2,
            mode: "aspectFit",
            onClick: _cache[2] || (_cache[2] = (...args) => $options.btnscan && $options.btnscan(...args))
          }),
          vue.createElementVNode("image", {
            style: { "width": "36rpx", "height": "36rpx" },
            src: _imports_2$1,
            mode: "aspectFit",
            onClick: _cache[3] || (_cache[3] = (...args) => $options.btnsearch && $options.btnsearch(...args))
          })
        ])
      ]),
      vue.createCommentVNode(' <view v-if="myteacher_List.length>0">\r\n      <msglist :msgList="myteacher_List" />\r\n    </view> '),
      vue.createElementVNode("view", {
        style: { "padding": "28rpx" },
        class: "container"
      }, [
        vue.createCommentVNode(' <MessageList :messages="messagesList" /> '),
        vue.createVNode(_component_TUIChat)
      ]),
      vue.createCommentVNode(' <view v-else class="kong" style="display: flex; justify-content: center; align-items: center; height: 500rpx;">\r\n      <image style="width:400rpx;height: 400rpx;" src="@/static/img/noTea.png" mode="aspectFit" />\r\n    </view> ')
    ]);
  }
  const PagesPagesallMypageTeachermsg = /* @__PURE__ */ _export_sfc(_sfc_main$1k, [["render", _sfc_render$1j], ["__file", "C:/Users/Administrator/Desktop/Project Folder/ZXHand/ZXHandwritting_APP_uniapp/pages/pagesall/mypage/teachermsg.vue"]]);
  const _sfc_main$1j = /* @__PURE__ */ vue.defineComponent({
    __name: "index",
    props: ["isGroup"],
    emits: ["openGroupManagement"],
    setup(__props, { expose: __expose, emit: __emit }) {
      __expose();
      const emits2 = __emit;
      const props2 = __props;
      const currentConversation = vue.ref();
      const typingStatus = vue.ref(false);
      onNavigationBarButtonTap(() => {
        if (props2.isGroup) {
          emits2("openGroupManagement");
        }
      });
      const pages2 = getCurrentPages();
      const currentPage = pages2[pages2.length - 1];
      const currentWebview = currentPage.$getAppWebview();
      if (!props2.isGroup) {
        currentWebview.setStyle({
          titleNView: {
            ...currentWebview.getStyle().titleNView,
            buttons: []
          }
        });
      }
      const setChatHeaderContent = (content) => {
        i == null ? void 0 : i.setNavigationBarTitle({
          title: content || "云通信 IM"
        });
      };
      vue.onMounted(() => {
        zt.watch(o$2.CONV, {
          currentConversation: onCurrentConversationUpdated
        });
        zt.watch(o$2.CHAT, {
          typingStatus: onTypingStatusUpdated
        });
      });
      vue.onUnmounted(() => {
        zt.unwatch(o$2.CONV, {
          currentConversation: onCurrentConversationUpdated
        });
        zt.unwatch(o$2.CHAT, {
          typingStatus: onTypingStatusUpdated
        });
      });
      onLoad(() => {
        var _a;
        setChatHeaderContent((_a = currentConversation.value) == null ? void 0 : _a.getShowName());
      });
      function onCurrentConversationUpdated(conversation) {
        var _a;
        currentConversation.value = conversation;
        if (!typingStatus.value) {
          setChatHeaderContent((_a = currentConversation == null ? void 0 : currentConversation.value) == null ? void 0 : _a.getShowName());
        }
      }
      function onTypingStatusUpdated(status) {
        var _a;
        typingStatus.value = status;
        if (typingStatus.value) {
          setChatHeaderContent(Jt.t("TUIChat.对方正在输入"));
        } else {
          setChatHeaderContent((_a = currentConversation.value) == null ? void 0 : _a.getShowName());
        }
      }
      const __returned__ = { emits: emits2, props: props2, currentConversation, typingStatus, pages: pages2, currentPage, currentWebview, setChatHeaderContent, onCurrentConversationUpdated, onTypingStatusUpdated };
      Object.defineProperty(__returned__, "__isScriptSetup", { enumerable: false, value: true });
      return __returned__;
    }
  });
  function _sfc_render$1i(_ctx, _cache, $props, $setup, $data, $options) {
    return vue.openBlock(), vue.createElementBlock("view", { style: { "display": "none" } });
  }
  const ChatHeader = /* @__PURE__ */ _export_sfc(_sfc_main$1j, [["render", _sfc_render$1i], ["__file", "C:/Users/Administrator/Desktop/Project Folder/ZXHand/ZXHandwritting_APP_uniapp/TUIKit/components/TUIChat/chat-header/index.vue"]]);
  const Link$1 = {
    product: {
      label: "产品文档",
      url: "https://cloud.tencent.com/document/product/269/1499#.E7.BE.A4.E7.BB.84.E5.8A.9F.E8.83.BD"
    },
    customMessage: {
      label: "自定义消息",
      url: "https://web.sdk.qcloud.com/im/doc/zh-cn/SDK.html#createCustomMessage"
    },
    complaint: {
      label: "点此投诉",
      url: "https://cloud.tencent.com/apply/p/xc3oaubi98g"
    },
    implement: {
      label: "集成TUICallKit",
      url: "https://cloud.tencent.com/document/product/269/79861"
    },
    purchase: {
      label: "开通腾讯实时音视频服务",
      url: "https://cloud.tencent.com/document/product/1640/79968"
    }
  };
  const _sfc_main$1i = /* @__PURE__ */ vue.defineComponent({
    __name: "message-container",
    props: {
      sender: { type: String, required: true, default: "" },
      avatar: { type: String, required: true, default: "" },
      type: { type: String, required: true },
      time: { type: Number, required: true }
    },
    setup(__props, { expose: __expose }) {
      __expose();
      const props2 = __props;
      const TYPES2 = Kt.TYPES;
      const isNoPadding = vue.computed(() => {
        return [TYPES2.MSG_IMAGE, TYPES2.MSG_VIDEO, TYPES2.MSG_MERGER].includes(props2.type);
      });
      const __returned__ = { props: props2, TYPES: TYPES2, isNoPadding, Avatar, get calculateTimestamp() {
        return calculateTimestamp;
      } };
      Object.defineProperty(__returned__, "__isScriptSetup", { enumerable: false, value: true });
      return __returned__;
    }
  });
  function _sfc_render$1h(_ctx, _cache, $props, $setup, $data, $options) {
    return vue.openBlock(), vue.createElementBlock("div", { class: "simple-message-container" }, [
      vue.createElementVNode("div", { class: "simple-message-avatar" }, [
        vue.createVNode($setup["Avatar"], {
          url: $setup.props.avatar
        }, null, 8, ["url"])
      ]),
      vue.createElementVNode("div", null, [
        vue.createElementVNode(
          "div",
          { class: "simple-message-sender" },
          vue.toDisplayString($setup.props.sender),
          1
          /* TEXT */
        ),
        vue.createElementVNode("div", { class: "simple-message-body" }, [
          vue.createElementVNode(
            "div",
            {
              class: vue.normalizeClass({
                "simple-message-content": true,
                "no-padding": $setup.isNoPadding
              })
            },
            [
              vue.renderSlot(_ctx.$slots, "default", {}, void 0, true)
            ],
            2
            /* CLASS */
          ),
          vue.createElementVNode(
            "div",
            { class: "timestamp" },
            vue.toDisplayString($setup.calculateTimestamp($setup.props.time * 1e3)),
            1
            /* TEXT */
          )
        ])
      ])
    ]);
  }
  const MessageContainer = /* @__PURE__ */ _export_sfc(_sfc_main$1i, [["render", _sfc_render$1h], ["__scopeId", "data-v-79409a32"], ["__file", "C:/Users/Administrator/Desktop/Project Folder/ZXHand/ZXHandwritting_APP_uniapp/TUIKit/components/TUIChat/message-list/message-elements/simple-message-list/message-container.vue"]]);
  const _sfc_main$1h = /* @__PURE__ */ vue.defineComponent({
    __name: "index",
    props: {
      visible: { type: Boolean, required: true, default: true },
      popDirection: { type: String, required: true, default: "bottom" },
      useMask: { type: Boolean, required: false, default: true },
      isFullScreen: { type: Boolean, required: false, skipCheck: true, default: true },
      overlayColor: { type: null, required: false },
      drawerStyle: { type: Object, required: false, default: () => ({}) }
    },
    emits: ["onOverlayClick"],
    setup(__props, { expose: __expose, emit: __emit }) {
      var _a;
      const emits2 = __emit;
      const props2 = __props;
      const drawerDomRef = vue.ref();
      const overlayDomInstanceRef = vue.ref();
      const isDrawerShow = vue.ref(false);
      const styles = vue.ref(props2.drawerStyle[props2.popDirection] || {});
      vue.watch(() => props2.visible, (visible) => {
        if (visible) {
          isDrawerShow.value = true;
        } else {
          setTimeout(() => {
            isDrawerShow.value = false;
          }, 150);
        }
      }, {
        immediate: true
      });
      function onOverlayClick(e2) {
        emits2("onOverlayClick", e2);
      }
      __expose({
        drawerDomRef,
        overlayDomRef: (_a = overlayDomInstanceRef.value) == null ? void 0 : _a.overlayDomRef
      });
      const __returned__ = { emits: emits2, props: props2, drawerDomRef, overlayDomInstanceRef, isDrawerShow, styles, onOverlayClick, Overlay };
      Object.defineProperty(__returned__, "__isScriptSetup", { enumerable: false, value: true });
      return __returned__;
    }
  });
  function _sfc_render$1g(_ctx, _cache, $props, $setup, $data, $options) {
    return vue.openBlock(), vue.createBlock($setup["Overlay"], {
      ref: "overlayDomInstanceRef",
      visible: $setup.props.visible,
      useMask: $setup.props.useMask,
      maskColor: $setup.props.overlayColor,
      isFullScreen: $setup.props.isFullScreen,
      onOnOverlayClick: $setup.onOverlayClick
    }, {
      default: vue.withCtx(() => [
        $setup.isDrawerShow ? (vue.openBlock(), vue.createElementBlock(
          "div",
          {
            key: 0,
            ref: "drawerDomRef",
            class: vue.normalizeClass({
              "drawer": true,
              "origin-bottom": $setup.props.popDirection === "bottom",
              "origin-right": $setup.props.popDirection === "right",
              "slide-bottom": $props.visible && $setup.props.popDirection === "bottom",
              "slide-right": $props.visible && $setup.props.popDirection === "right"
            }),
            style: vue.normalizeStyle({
              minHeight: $setup.styles.minHeight,
              maxHeight: $setup.styles.maxHeight,
              borderRadius: $setup.styles.borderRadius,
              boxShadow: $setup.styles.boxShadow,
              width: $setup.styles.width
            })
          },
          [
            vue.createElementVNode("div", { class: "drawer-container" }, [
              vue.renderSlot(_ctx.$slots, "default", {}, void 0, true)
            ])
          ],
          6
          /* CLASS, STYLE */
        )) : vue.createCommentVNode("v-if", true)
      ]),
      _: 3
      /* FORWARDED */
    }, 8, ["visible", "useMask", "maskColor", "isFullScreen"]);
  }
  const Drawer = /* @__PURE__ */ _export_sfc(_sfc_main$1h, [["render", _sfc_render$1g], ["__scopeId", "data-v-c011f16d"], ["__file", "C:/Users/Administrator/Desktop/Project Folder/ZXHand/ZXHandwritting_APP_uniapp/TUIKit/components/common/Drawer/index.vue"]]);
  const _sfc_main$1g = /* @__PURE__ */ vue.defineComponent({
    __name: "index",
    props: {
      renderData: { type: Object, required: true },
      disabled: { type: Boolean, required: false, default: false },
      messageItem: { type: Object, required: false, default: () => ({}) }
    },
    emits: ["assignMessageIDInUniapp"],
    setup(__props, { expose: __expose, emit: __emit }) {
      __expose();
      const emits2 = __emit;
      const props2 = __props;
      const isMessageListVisible = vue.ref(false);
      function openMergeDetail() {
        if (props2.disabled) {
          return;
        }
        if (!isUniFrameWork) {
          isMessageListVisible.value = true;
        } else {
          emits2("assignMessageIDInUniapp", props2.messageItem.ID);
        }
      }
      function closeMergeDetail() {
        isMessageListVisible.value = false;
      }
      const __returned__ = { emits: emits2, props: props2, isMessageListVisible, openMergeDetail, closeMergeDetail, get TUITranslateService() {
        return Jt;
      }, Overlay, Drawer, SimpleMessageList, get isH5() {
        return isH5;
      }, get isPC() {
        return isPC;
      }, get isUniFrameWork() {
        return isUniFrameWork;
      }, get transformTextWithKeysToEmojiNames() {
        return transformTextWithKeysToEmojiNames;
      } };
      Object.defineProperty(__returned__, "__isScriptSetup", { enumerable: false, value: true });
      return __returned__;
    }
  });
  function _sfc_render$1f(_ctx, _cache, $props, $setup, $data, $options) {
    return vue.openBlock(), vue.createElementBlock("div", null, [
      vue.createElementVNode("div", {
        class: "message-record-container",
        onClick: $setup.openMergeDetail
      }, [
        vue.createElementVNode(
          "div",
          { class: "record-title" },
          vue.toDisplayString($setup.props.renderData.title),
          1
          /* TEXT */
        ),
        vue.createElementVNode("div", { class: "record-abstract-container" }, [
          (vue.openBlock(true), vue.createElementBlock(
            vue.Fragment,
            null,
            vue.renderList($setup.props.renderData.abstractList.slice(0, 7), (item, index2) => {
              return vue.openBlock(), vue.createElementBlock(
                "div",
                {
                  key: index2,
                  class: "record-abstract-item"
                },
                vue.toDisplayString($setup.transformTextWithKeysToEmojiNames(item)),
                1
                /* TEXT */
              );
            }),
            128
            /* KEYED_FRAGMENT */
          ))
        ]),
        vue.createElementVNode(
          "div",
          { class: "record-footer" },
          vue.toDisplayString($setup.TUITranslateService.t("TUIChat.聊天记录")),
          1
          /* TEXT */
        )
      ]),
      !$setup.props.disabled && $setup.isPC ? (vue.openBlock(), vue.createBlock($setup["Overlay"], {
        key: 0,
        visible: $setup.isMessageListVisible,
        onOnOverlayClick: _cache[0] || (_cache[0] = ($event) => $setup.isMessageListVisible = false)
      }, {
        default: vue.withCtx(() => [
          vue.createVNode($setup["SimpleMessageList"], {
            isMounted: $setup.isMessageListVisible,
            renderData: $setup.props.renderData,
            messageID: $setup.props.messageItem.ID,
            onCloseOverlay: $setup.closeMergeDetail
          }, null, 8, ["isMounted", "renderData", "messageID"])
        ]),
        _: 1
        /* STABLE */
      }, 8, ["visible"])) : !$setup.props.disabled && $setup.isH5 && !$setup.isUniFrameWork ? (vue.openBlock(), vue.createBlock($setup["Drawer"], {
        key: 1,
        visible: $setup.isMessageListVisible,
        isFullScreen: true,
        overlayColor: "transparent",
        popDirection: "right"
      }, {
        default: vue.withCtx(() => [
          vue.createVNode($setup["SimpleMessageList"], {
            isMounted: $setup.isMessageListVisible,
            renderData: $setup.props.renderData,
            messageID: $setup.props.messageItem.ID,
            onCloseOverlay: $setup.closeMergeDetail
          }, null, 8, ["isMounted", "renderData", "messageID"])
        ]),
        _: 1
        /* STABLE */
      }, 8, ["visible"])) : vue.createCommentVNode("v-if", true)
    ]);
  }
  const MessageRecord = /* @__PURE__ */ _export_sfc(_sfc_main$1g, [["render", _sfc_render$1f], ["__scopeId", "data-v-2d2bd7ef"], ["__file", "C:/Users/Administrator/Desktop/Project Folder/ZXHand/ZXHandwritting_APP_uniapp/TUIKit/components/TUIChat/message-list/message-elements/message-record/index.vue"]]);
  const _sfc_main$1f = /* @__PURE__ */ vue.defineComponent({
    __name: "index",
    props: {
      messageID: { type: String, required: false, default: "" },
      isMounted: { type: Boolean, required: false, default: false }
    },
    emits: ["closeOverlay"],
    setup(__props, { expose: __expose, emit: __emit }) {
      __expose();
      const emits2 = __emit;
      const props2 = __props;
      const TYPES2 = Kt.TYPES;
      const isDownloadOccurError = vue.ref(false);
      const messageListStack = vue.ref([]);
      const currentMergeMessageInfo = vue.ref({
        title: "",
        messageList: []
      });
      const simpleMessageListRef = vue.ref();
      vue.watch(() => messageListStack.value.length, async (newValue) => {
        isDownloadOccurError.value = false;
        if (newValue < 1) {
          return;
        }
        const stackTopMessageInfo = messageListStack.value[messageListStack.value.length - 1];
        if (stackTopMessageInfo.downloadKey && stackTopMessageInfo.messageList.length === 0) {
          try {
            const res = await Zt.downloadMergedMessages({
              payload: stackTopMessageInfo,
              type: Kt.TYPES.MSG_MERGER
            });
            messageListStack.value[messageListStack.value.length - 1] = res.payload;
          } catch (error2) {
            isDownloadOccurError.value = true;
          }
        }
        currentMergeMessageInfo.value = messageListStack.value[messageListStack.value.length - 1];
      });
      vue.watch(() => props2.isMounted, (newValue) => {
        if (newValue) {
          if (!props2.messageID) {
            throw new Error("messageID is required when first render of simple-message-list.");
          }
          const sdkMessagePayload = zt.getMessageModel(props2.messageID).getMessage().payload;
          messageListStack.value = [sdkMessagePayload];
        } else {
          messageListStack.value = [];
        }
      }, {
        immediate: true
      });
      const isReturn = vue.computed(() => {
        return messageListStack.value.length > 1;
      });
      const isMergeMessageInfoLoaded = vue.computed(() => {
        var _a;
        return ((_a = currentMergeMessageInfo.value) == null ? void 0 : _a.messageList) ? currentMergeMessageInfo.value.messageList.length > 0 : false;
      });
      function entryNextLevel(e2, sdkMessage) {
        messageListStack.value.push(sdkMessage.messageBody[0].payload);
        e2.stopPropagation();
      }
      function backPreviousLevel() {
        messageListStack.value.pop();
        if (messageListStack.value.length < 1) {
          emits2("closeOverlay");
        }
      }
      function previewVideoInUniapp(url2) {
        if (isUniFrameWork) {
          const encodedUrl = encodeURIComponent(url2);
          uni.navigateTo({
            url: `/TUIKit/components/TUIChat/video-play?videoUrl=${encodedUrl}`
          });
        }
      }
      function resolveBigFaceUrl(bigFaceKey) {
        let url2 = "";
        if (bigFaceKey.indexOf("@custom") > -1) {
          url2 = CUSTOM_BIG_EMOJI_URL + bigFaceKey;
        } else {
          url2 = DEFAULT_BIG_EMOJI_URL + bigFaceKey;
          if (url2.indexOf("@2x") === -1) {
            url2 += "@2x.png";
          } else {
            url2 += ".png";
          }
        }
        return url2;
      }
      const __returned__ = { emits: emits2, props: props2, TYPES: TYPES2, isDownloadOccurError, messageListStack, currentMergeMessageInfo, simpleMessageListRef, isReturn, isMergeMessageInfoLoaded, entryNextLevel, backPreviousLevel, previewVideoInUniapp, resolveBigFaceUrl, get TUITranslateService() {
        return Jt;
      }, get addIcon() {
        return backSVG;
      }, get playIcon() {
        return playIcon;
      }, Icon: Icon$1, MessageContainer, MessageRecord, get parseTextToRenderArray() {
        return parseTextToRenderArray;
      }, get isMobile() {
        return isMobile;
      }, get isUniFrameWork() {
        return isUniFrameWork;
      } };
      Object.defineProperty(__returned__, "__isScriptSetup", { enumerable: false, value: true });
      return __returned__;
    }
  });
  function _sfc_render$1e(_ctx, _cache, $props, $setup, $data, $options) {
    return vue.openBlock(), vue.createElementBlock(
      "div",
      {
        class: vue.normalizeClass({
          "simple-message-list-container": true,
          "simple-message-list-container-mobile": $setup.isMobile
        })
      },
      [
        vue.createElementVNode("div", { class: "header-container" }, [
          vue.createElementVNode("span", {
            class: "back",
            onClick: $setup.backPreviousLevel
          }, [
            vue.createVNode($setup["Icon"], {
              class: "close-icon",
              file: $setup.addIcon,
              size: "18px"
            }, null, 8, ["file"]),
            $setup.isReturn ? (vue.openBlock(), vue.createElementBlock(
              "span",
              { key: 0 },
              vue.toDisplayString($setup.TUITranslateService.t("TUIChat.返回")),
              1
              /* TEXT */
            )) : (vue.openBlock(), vue.createElementBlock(
              "span",
              { key: 1 },
              vue.toDisplayString($setup.TUITranslateService.t("TUIChat.关闭")),
              1
              /* TEXT */
            ))
          ]),
          vue.createElementVNode(
            "span",
            { class: "title" },
            vue.toDisplayString($setup.currentMergeMessageInfo.title),
            1
            /* TEXT */
          )
        ]),
        $setup.isDownloadOccurError ? (vue.openBlock(), vue.createElementBlock("div", { key: 0 }, " Load Merge Message Error ")) : $setup.isMergeMessageInfoLoaded ? (vue.openBlock(), vue.createElementBlock(
          "div",
          {
            key: 1,
            ref: "simpleMessageListRef",
            class: "message-list"
          },
          [
            (vue.openBlock(true), vue.createElementBlock(
              vue.Fragment,
              null,
              vue.renderList($setup.currentMergeMessageInfo.messageList, (item) => {
                return vue.openBlock(), vue.createElementBlock("div", {
                  key: item.ID,
                  class: vue.normalizeClass({
                    "message-item": true
                  })
                }, [
                  vue.createVNode($setup["MessageContainer"], {
                    sender: item.nick,
                    avatar: item.avatar,
                    type: item.messageBody[0].type,
                    time: item.time
                  }, {
                    default: vue.withCtx(() => [
                      vue.createCommentVNode(" text "),
                      item.messageBody[0].type === $setup.TYPES.MSG_TEXT ? (vue.openBlock(), vue.createElementBlock("div", {
                        key: 0,
                        class: "message-text"
                      }, [
                        (vue.openBlock(true), vue.createElementBlock(
                          vue.Fragment,
                          null,
                          vue.renderList($setup.parseTextToRenderArray(item.messageBody[0].payload["text"]), (textInfo, index2) => {
                            return vue.openBlock(), vue.createElementBlock("span", {
                              key: index2,
                              class: "message-text-container"
                            }, [
                              textInfo.type === "text" ? (vue.openBlock(), vue.createElementBlock(
                                "span",
                                {
                                  key: 0,
                                  class: "text"
                                },
                                vue.toDisplayString(textInfo.content),
                                1
                                /* TEXT */
                              )) : (vue.openBlock(), vue.createElementBlock("img", {
                                key: 1,
                                class: "simple-emoji",
                                src: textInfo.content,
                                alt: "small-face"
                              }, null, 8, ["src"]))
                            ]);
                          }),
                          128
                          /* KEYED_FRAGMENT */
                        ))
                      ])) : item.messageBody[0].type === $setup.TYPES.MSG_IMAGE ? (vue.openBlock(), vue.createElementBlock(
                        vue.Fragment,
                        { key: 1 },
                        [
                          vue.createCommentVNode(" image "),
                          vue.createElementVNode("div", { class: "message-image" }, [
                            vue.createElementVNode("img", {
                              class: "image",
                              src: item.messageBody[0].payload["imageInfoArray"][2]["url"],
                              mode: "widthFix",
                              alt: "image"
                            }, null, 8, ["src"])
                          ])
                        ],
                        2112
                        /* STABLE_FRAGMENT, DEV_ROOT_FRAGMENT */
                      )) : item.messageBody[0].type === $setup.TYPES.MSG_VIDEO ? (vue.openBlock(), vue.createElementBlock(
                        vue.Fragment,
                        { key: 2 },
                        [
                          vue.createCommentVNode(" video "),
                          vue.createElementVNode("div", { class: "message-video" }, [
                            $setup.isUniFrameWork ? (vue.openBlock(), vue.createElementBlock("div", {
                              key: 0,
                              onClick: ($event) => $setup.previewVideoInUniapp(item.messageBody[0].payload["remoteVideoUrl"])
                            }, [
                              vue.createElementVNode("image", {
                                class: "image",
                                src: item.messageBody[0].payload["thumbUrl"],
                                mode: "widthFix",
                                alt: "image"
                              }, null, 8, ["src"]),
                              vue.createVNode($setup["Icon"], {
                                class: "video-play-icon",
                                file: $setup.playIcon
                              }, null, 8, ["file"])
                            ], 8, ["onClick"])) : (vue.openBlock(), vue.createElementBlock("video", {
                              key: 1,
                              class: "video",
                              controls: "",
                              poster: item.messageBody[0].payload["thumbUrl"]
                            }, [
                              vue.createElementVNode("source", {
                                src: item.messageBody[0].payload["remoteVideoUrl"],
                                type: "video/mp4"
                              }, null, 8, ["src"])
                            ], 8, ["poster"]))
                          ])
                        ],
                        2112
                        /* STABLE_FRAGMENT, DEV_ROOT_FRAGMENT */
                      )) : item.messageBody[0].type === $setup.TYPES.MSG_AUDIO ? (vue.openBlock(), vue.createElementBlock(
                        vue.Fragment,
                        { key: 3 },
                        [
                          vue.createCommentVNode(" audio "),
                          vue.createElementVNode("div", { class: "message-audio" }, [
                            vue.createElementVNode(
                              "span",
                              null,
                              vue.toDisplayString($setup.TUITranslateService.t("TUIChat.语音")) + " ",
                              1
                              /* TEXT */
                            ),
                            vue.createElementVNode(
                              "span",
                              null,
                              vue.toDisplayString(item.messageBody[0].payload.second) + "s",
                              1
                              /* TEXT */
                            )
                          ])
                        ],
                        2112
                        /* STABLE_FRAGMENT, DEV_ROOT_FRAGMENT */
                      )) : item.messageBody[0].type === $setup.TYPES.MSG_FACE ? (vue.openBlock(), vue.createElementBlock(
                        vue.Fragment,
                        { key: 4 },
                        [
                          vue.createCommentVNode(" big face "),
                          vue.createElementVNode("div", { class: "message-face" }, [
                            vue.createElementVNode("img", {
                              class: "image",
                              src: $setup.resolveBigFaceUrl(item.messageBody[0].payload.data),
                              alt: "face"
                            }, null, 8, ["src"])
                          ])
                        ],
                        2112
                        /* STABLE_FRAGMENT, DEV_ROOT_FRAGMENT */
                      )) : item.messageBody[0].type === $setup.TYPES.MSG_FILE ? (vue.openBlock(), vue.createElementBlock(
                        vue.Fragment,
                        { key: 5 },
                        [
                          vue.createCommentVNode(" file "),
                          vue.createElementVNode(
                            "div",
                            { class: "message-file" },
                            vue.toDisplayString($setup.TUITranslateService.t("TUIChat.[文件]")),
                            1
                            /* TEXT */
                          )
                        ],
                        2112
                        /* STABLE_FRAGMENT, DEV_ROOT_FRAGMENT */
                      )) : item.messageBody[0].type === $setup.TYPES.MSG_LOCATION ? (vue.openBlock(), vue.createElementBlock(
                        vue.Fragment,
                        { key: 6 },
                        [
                          vue.createCommentVNode(" location "),
                          vue.createElementVNode(
                            "div",
                            null,
                            vue.toDisplayString($setup.TUITranslateService.t("TUIChat.[地理位置]")),
                            1
                            /* TEXT */
                          )
                        ],
                        2112
                        /* STABLE_FRAGMENT, DEV_ROOT_FRAGMENT */
                      )) : item.messageBody[0].type === $setup.TYPES.MSG_MERGER ? (vue.openBlock(), vue.createElementBlock(
                        vue.Fragment,
                        { key: 7 },
                        [
                          vue.createCommentVNode(" merger "),
                          vue.createElementVNode("div", {
                            class: "message-merger",
                            onClickCapture: ($event) => $setup.entryNextLevel($event, item)
                          }, [
                            vue.createVNode($setup["MessageRecord"], {
                              disabled: "",
                              renderData: item.messageBody[0].payload
                            }, null, 8, ["renderData"])
                          ], 40, ["onClickCapture"])
                        ],
                        2112
                        /* STABLE_FRAGMENT, DEV_ROOT_FRAGMENT */
                      )) : item.messageBody[0].type === $setup.TYPES.MSG_CUSTOM ? (vue.openBlock(), vue.createElementBlock(
                        vue.Fragment,
                        { key: 8 },
                        [
                          vue.createCommentVNode(" custom "),
                          vue.createElementVNode(
                            "div",
                            null,
                            vue.toDisplayString($setup.TUITranslateService.t("TUIChat.[自定义消息]")),
                            1
                            /* TEXT */
                          )
                        ],
                        2112
                        /* STABLE_FRAGMENT, DEV_ROOT_FRAGMENT */
                      )) : vue.createCommentVNode("v-if", true)
                    ]),
                    _: 2
                    /* DYNAMIC */
                  }, 1032, ["sender", "avatar", "type", "time"])
                ]);
              }),
              128
              /* KEYED_FRAGMENT */
            ))
          ],
          512
          /* NEED_PATCH */
        )) : vue.createCommentVNode("v-if", true)
      ],
      2
      /* CLASS */
    );
  }
  const SimpleMessageList = /* @__PURE__ */ _export_sfc(_sfc_main$1f, [["render", _sfc_render$1e], ["__scopeId", "data-v-6bc34766"], ["__file", "C:/Users/Administrator/Desktop/Project Folder/ZXHand/ZXHandwritting_APP_uniapp/TUIKit/components/TUIChat/message-list/message-elements/simple-message-list/index.vue"]]);
  const _sfc_main$1e = /* @__PURE__ */ vue.defineComponent({
    __name: "index",
    props: {
      groupID: { type: String, required: true, default: "" }
    },
    setup(__props, { expose: __expose }) {
      __expose();
      const props2 = __props;
      const drawerDomInstanceRef = vue.ref();
      const groupApplicationCount = vue.ref(0);
      const isGroupApplicationDrawerShow = vue.ref(false);
      const customGroupApplicationList = vue.ref([]);
      vue.watch(isGroupApplicationDrawerShow, (newVal) => {
        if (newVal) {
          generateCustomGroupApplicationList().then((list) => {
            customGroupApplicationList.value = list;
            groupApplicationCount.value = list.length;
          });
        }
      });
      vue.watch(() => customGroupApplicationList.value.length, (newVal, oldVal) => {
        if (oldVal > 0 && newVal === 0) {
          isGroupApplicationDrawerShow.value = false;
        }
      });
      async function getCurrentGroupApplicationList() {
        const result = await Qt.getGroupApplicationList();
        const currentGroupApplicationList = result.data.applicationList.filter((application) => application.groupID === props2.groupID);
        return currentGroupApplicationList;
      }
      function toggleGroupApplicationDrawerShow() {
        isGroupApplicationDrawerShow.value = !isGroupApplicationDrawerShow.value;
      }
      async function generateCustomGroupApplicationList() {
        const applicationList = await getCurrentGroupApplicationList();
        if (applicationList.length === 0) {
          return [];
        }
        const userIDList = applicationList.map((application) => application.applicationType === 0 ? application.applicant : application.userID);
        const { data: userProfileList } = await Xt.getUserProfile({ userIDList });
        const mappingFromUserID2Profile = {};
        userProfileList.forEach((profile) => {
          mappingFromUserID2Profile[profile.userID] = profile;
        });
        const groupApplicationList = applicationList.map((application) => {
          const profile = mappingFromUserID2Profile[application.applicationType === 0 ? application.applicant : application.userID];
          return {
            nick: profile.nick || profile.userID || "anonymous",
            avatar: profile.avatar || "",
            isRemoved: false,
            application
          };
        });
        return groupApplicationList;
      }
      function handleApplication(customApplication, action, index2) {
        Qt.handleGroupApplication({
          handleAction: action,
          application: customApplication.application
        }).then(() => {
          customGroupApplicationList.value[index2].isRemoved = true;
          setTimeout(() => {
            customGroupApplicationList.value.splice(index2, 1);
            groupApplicationCount.value -= 1;
          }, 150);
        }).catch(() => {
        });
      }
      vue.onMounted(() => {
        getCurrentGroupApplicationList().then((applicationList) => {
          groupApplicationCount.value = applicationList.length;
        });
        zt.watch(o$2.GRP, {
          groupSystemNoticeList: onGroupSystemNoticeListUpdated
        });
      });
      vue.onUnmounted(() => {
        zt.unwatch(o$2.GRP, {
          groupSystemNoticeList: onGroupSystemNoticeListUpdated
        });
      });
      function onGroupSystemNoticeListUpdated() {
        generateCustomGroupApplicationList().then((list) => {
          customGroupApplicationList.value = list;
          groupApplicationCount.value = list.length;
        });
      }
      const __returned__ = { props: props2, drawerDomInstanceRef, groupApplicationCount, isGroupApplicationDrawerShow, customGroupApplicationList, getCurrentGroupApplicationList, toggleGroupApplicationDrawerShow, generateCustomGroupApplicationList, handleApplication, onGroupSystemNoticeListUpdated, get TUITranslateService() {
        return Jt;
      }, Icon: Icon$1, Avatar, Drawer, get closeIcon() {
        return closeIcon$1;
      }, get isPC() {
        return isPC;
      }, get isMobile() {
        return isMobile;
      } };
      Object.defineProperty(__returned__, "__isScriptSetup", { enumerable: false, value: true });
      return __returned__;
    }
  });
  function _sfc_render$1d(_ctx, _cache, $props, $setup, $data, $options) {
    return vue.openBlock(), vue.createElementBlock("div", null, [
      $setup.groupApplicationCount > 0 ? (vue.openBlock(), vue.createElementBlock("div", {
        key: 0,
        class: "application-tips"
      }, [
        vue.createElementVNode(
          "div",
          null,
          vue.toDisplayString($setup.groupApplicationCount) + vue.toDisplayString($setup.TUITranslateService.t("TUIChat.条入群申请")),
          1
          /* TEXT */
        ),
        vue.createElementVNode(
          "div",
          {
            class: "application-tips-btn",
            onClick: $setup.toggleGroupApplicationDrawerShow
          },
          vue.toDisplayString($setup.TUITranslateService.t("TUIChat.点击处理")),
          1
          /* TEXT */
        )
      ])) : vue.createCommentVNode("v-if", true),
      vue.createVNode($setup["Drawer"], {
        ref: "drawerDomInstanceRef",
        visible: $setup.isGroupApplicationDrawerShow,
        zIndex: 998,
        popDirection: $setup.isMobile ? "bottom" : "right",
        isFullScreen: $setup.isMobile,
        overlayColor: $setup.isMobile ? void 0 : "transparent",
        drawerStyle: {
          bottom: {
            minHeight: "60vh",
            maxHeight: "80vh",
            borderRadius: "12px 12px 0 0"
          },
          right: {
            width: "360px",
            borderRadius: "12px 0 0 12px",
            boxShadow: "0 0 10px 0 #d0d0d0"
          }
        },
        onOnOverlayClick: $setup.toggleGroupApplicationDrawerShow
      }, {
        default: vue.withCtx(() => [
          vue.createElementVNode("div", {
            class: vue.normalizeClass({
              "application-contaienr": true
            })
          }, [
            vue.createElementVNode("header", { class: "application-header" }, [
              vue.createElementVNode("div", { onClick: $setup.toggleGroupApplicationDrawerShow }, [
                $setup.isPC ? (vue.openBlock(), vue.createBlock($setup["Icon"], {
                  key: 0,
                  file: $setup.closeIcon,
                  size: "16px"
                }, null, 8, ["file"])) : (vue.openBlock(), vue.createElementBlock(
                  "div",
                  { key: 1 },
                  vue.toDisplayString($setup.TUITranslateService.t("关闭")),
                  1
                  /* TEXT */
                ))
              ])
            ]),
            vue.createElementVNode("main", null, [
              (vue.openBlock(true), vue.createElementBlock(
                vue.Fragment,
                null,
                vue.renderList($setup.customGroupApplicationList, (item, index2) => {
                  return vue.openBlock(), vue.createElementBlock(
                    "div",
                    {
                      key: item.nick,
                      class: vue.normalizeClass({
                        "application-item": true,
                        "removed": item.isRemoved
                      })
                    },
                    [
                      vue.createVNode($setup["Avatar"], {
                        style: {
                          flex: "0 0 auto"
                        },
                        url: item.avatar,
                        useSkeletonAnimation: true
                      }, null, 8, ["url"]),
                      vue.createElementVNode("div", { class: "application-item-info" }, [
                        vue.createElementVNode(
                          "div",
                          { class: "application-item-nick" },
                          vue.toDisplayString(item.nick),
                          1
                          /* TEXT */
                        ),
                        vue.createElementVNode(
                          "div",
                          { class: "application-item-note" },
                          vue.toDisplayString($setup.TUITranslateService.t("TUIChat.申请加入")),
                          1
                          /* TEXT */
                        )
                      ]),
                      vue.createElementVNode("div", { class: "application-item-operation" }, [
                        vue.createElementVNode("div", {
                          class: "agree",
                          onClick: ($event) => $setup.handleApplication(item, "Agree", index2)
                        }, vue.toDisplayString($setup.TUITranslateService.t("TUIChat.同意")), 9, ["onClick"]),
                        vue.createElementVNode("div", {
                          class: "reject",
                          onClick: ($event) => $setup.handleApplication(item, "Reject", index2)
                        }, vue.toDisplayString($setup.TUITranslateService.t("TUIChat.拒绝")), 9, ["onClick"])
                      ])
                    ],
                    2
                    /* CLASS */
                  );
                }),
                128
                /* KEYED_FRAGMENT */
              ))
            ])
          ])
        ]),
        _: 1
        /* STABLE */
      }, 8, ["visible", "popDirection", "isFullScreen", "overlayColor"])
    ]);
  }
  const MessageGroupApplication = /* @__PURE__ */ _export_sfc(_sfc_main$1e, [["render", _sfc_render$1d], ["__scopeId", "data-v-4c42d719"], ["__file", "C:/Users/Administrator/Desktop/Project Folder/ZXHand/ZXHandwritting_APP_uniapp/TUIKit/components/TUIChat/message-list/message-group-application/index.vue"]]);
  const _sfc_main$1d = /* @__PURE__ */ vue.defineComponent({
    __name: "message-text",
    props: {
      content: { type: Object, required: true, default: () => ({}) }
    },
    setup(__props, { expose: __expose }) {
      __expose();
      const props2 = __props;
      const data = vue.ref();
      vue.watchEffect(() => {
        var _a;
        data.value = props2.content;
        (_a = data.value.text) == null ? void 0 : _a.forEach((item) => {
          if (item.name === "img" && (item == null ? void 0 : item.type) === "custom") {
            {
              formatAppLog("warn", "at TUIKit/components/TUIChat/message-list/message-elements/message-text.vue:26", "CUSTOM_BASIC_EMOJI_URL is required for custom emoji, please check your CUSTOM_BASIC_EMOJI_URL.");
            }
          }
        });
      });
      const __returned__ = { props: props2, data, get isPC() {
        return isPC;
      } };
      Object.defineProperty(__returned__, "__isScriptSetup", { enumerable: false, value: true });
      return __returned__;
    }
  });
  function _sfc_render$1c(_ctx, _cache, $props, $setup, $data, $options) {
    return vue.openBlock(), vue.createElementBlock(
      "div",
      {
        class: vue.normalizeClass(["message-text-container", $setup.isPC && "text-select"])
      },
      [
        (vue.openBlock(true), vue.createElementBlock(
          vue.Fragment,
          null,
          vue.renderList($setup.data.text, (item, index2) => {
            return vue.openBlock(), vue.createElementBlock("span", { key: index2 }, [
              item.name === "text" ? (vue.openBlock(), vue.createElementBlock(
                "span",
                {
                  key: 0,
                  class: "text"
                },
                vue.toDisplayString(item.text),
                1
                /* TEXT */
              )) : (vue.openBlock(), vue.createElementBlock("img", {
                key: 1,
                class: "emoji",
                src: item.src,
                alt: item.emojiKey
              }, null, 8, ["src", "alt"]))
            ]);
          }),
          128
          /* KEYED_FRAGMENT */
        ))
      ],
      2
      /* CLASS */
    );
  }
  const MessageText = /* @__PURE__ */ _export_sfc(_sfc_main$1d, [["render", _sfc_render$1c], ["__scopeId", "data-v-e1772b65"], ["__file", "C:/Users/Administrator/Desktop/Project Folder/ZXHand/ZXHandwritting_APP_uniapp/TUIKit/components/TUIChat/message-list/message-elements/message-text.vue"]]);
  const DEFAULT_MAX_SIZE = 155;
  const _sfc_main$1c = /* @__PURE__ */ vue.defineComponent({
    __name: "message-image",
    props: {
      content: { type: Object, required: true, default: () => ({}) },
      messageItem: { type: Object, required: true, default: () => ({}) }
    },
    emits: ["previewImage"],
    setup(__props, { expose: __expose, emit: __emit }) {
      __expose();
      const emits2 = __emit;
      const props2 = __props;
      const imageStyles = vue.ref({ width: "auto", height: "auto" });
      const genImageStyles = (value) => {
        const { width, height } = value;
        if (width === 0 || height === 0) {
          return;
        }
        let imageWidth = 0;
        let imageHeight = 0;
        if (width >= height) {
          imageWidth = DEFAULT_MAX_SIZE;
          imageHeight = DEFAULT_MAX_SIZE * height / width;
        } else {
          imageWidth = DEFAULT_MAX_SIZE * width / height;
          imageHeight = DEFAULT_MAX_SIZE;
        }
        imageStyles.value.width = imageWidth + "px";
        imageStyles.value.height = imageHeight + "px";
      };
      vue.watchEffect(() => {
        genImageStyles(props2.content);
      });
      const imageLoad = (event) => {
        genImageStyles(event.detail);
      };
      const handleImagePreview = () => {
        var _a;
        if (((_a = props2.messageItem) == null ? void 0 : _a.status) === "success" || props2.messageItem.progress === 1) {
          emits2("previewImage");
        }
      };
      const __returned__ = { emits: emits2, props: props2, DEFAULT_MAX_SIZE, imageStyles, genImageStyles, imageLoad, handleImagePreview };
      Object.defineProperty(__returned__, "__isScriptSetup", { enumerable: false, value: true });
      return __returned__;
    }
  });
  function _sfc_render$1b(_ctx, _cache, $props, $setup, $data, $options) {
    return vue.openBlock(), vue.createElementBlock("div", {
      class: "image-container",
      onClick: $setup.handleImagePreview
    }, [
      vue.createElementVNode("image", {
        class: "message-image",
        mode: "aspectFit",
        src: $setup.props.content.url,
        style: vue.normalizeStyle({ width: $setup.imageStyles.width, height: $setup.imageStyles.height }),
        onLoad: $setup.imageLoad
      }, null, 44, ["src"])
    ]);
  }
  const MessageImage = /* @__PURE__ */ _export_sfc(_sfc_main$1c, [["render", _sfc_render$1b], ["__scopeId", "data-v-4e6bf9de"], ["__file", "C:/Users/Administrator/Desktop/Project Folder/ZXHand/ZXHandwritting_APP_uniapp/TUIKit/components/TUIChat/message-list/message-elements/message-image.vue"]]);
  const audioIcon$1 = "/assets/msg-audio.ac2cd1c9.svg";
  const _sfc_main$1b = /* @__PURE__ */ vue.defineComponent({
    __name: "message-audio",
    props: {
      broadcastNewAudioSrc: { type: String, required: true },
      messageItem: { type: Object, required: true, default: () => ({}) },
      content: { type: Object, required: true, default: () => ({}) }
    },
    emits: ["getGlobalAudioContext", "setAudioPlayed"],
    setup(__props, { expose: __expose, emit: __emit }) {
      __expose();
      const emits2 = __emit;
      const props2 = __props;
      const audioMap = /* @__PURE__ */ new Map();
      const isAudioPlaying = vue.ref(false);
      vue.onUnmounted(() => {
        var _a;
        const audioContext = getAudio();
        if (isAudioPlaying.value) {
          stopAudio();
        }
        (_a = audioContext == null ? void 0 : audioContext.destroy) == null ? void 0 : _a.call(audioContext);
        audioMap.delete("audio");
      });
      vue.watch(() => props2.broadcastNewAudioSrc, (newSrc) => {
        if (newSrc !== props2.content.url && isAudioPlaying.value) {
          stopAudio();
          isAudioPlaying.value = false;
        }
      });
      function toggleClick() {
        emits2("getGlobalAudioContext", audioMap, { newAudioSrc: props2.content.url });
        if (props2.messageItem.hasRiskContent || !props2.content.url) {
          Toast({
            message: "暂不支持播放"
          });
          return;
        }
        const audioContext = getAudio();
        if (!audioContext) {
          audioMap.set("audio", uni.createInnerAudioContext());
          initAudioSrc();
        }
        toggleAudioPlayState();
      }
      function toggleAudioPlayState() {
        if (!isAudioPlaying.value) {
          playAudio();
        } else {
          stopAudio();
        }
      }
      function initAudioSrc() {
        const audioContext = getAudio();
        if (!audioContext) {
          return;
        }
        audioContext.src = props2.content.url;
        isAudioPlaying.value = false;
        audioContext.onPlay(onAudioPlay);
        audioContext.onStop(onAudioStop);
        audioContext.onEnded(onAudioEnded);
        audioContext.onError(onAudioError);
      }
      function playAudio() {
        const audioContext = getAudio();
        if (!audioContext) {
          return;
        }
        audioContext.play();
        if (props2.messageItem.flow === "in") {
          emits2("setAudioPlayed", props2.messageItem.ID);
        }
      }
      function stopAudio() {
        const audioContext = getAudio();
        if (!audioContext) {
          return;
        }
        try {
          audioContext.stop();
        } catch {
        }
      }
      function onAudioPlay() {
        isAudioPlaying.value = true;
      }
      function onAudioStop() {
        isAudioPlaying.value = false;
      }
      function onAudioEnded() {
        isAudioPlaying.value = false;
      }
      function onAudioError() {
        formatAppLog("warn", "at TUIKit/components/TUIChat/message-list/message-elements/message-audio.vue:145", "audio played error");
      }
      function getAudio() {
        return audioMap.get("audio");
      }
      const __returned__ = { emits: emits2, props: props2, audioMap, isAudioPlaying, toggleClick, toggleAudioPlayState, initAudioSrc, playAudio, stopAudio, onAudioPlay, onAudioStop, onAudioEnded, onAudioError, getAudio, Icon: Icon$1, get audioIcon() {
        return audioIcon$1;
      } };
      Object.defineProperty(__returned__, "__isScriptSetup", { enumerable: false, value: true });
      return __returned__;
    }
  });
  function _sfc_render$1a(_ctx, _cache, $props, $setup, $data, $options) {
    return vue.openBlock(), vue.createElementBlock(
      "div",
      {
        class: vue.normalizeClass({
          "message-audio": true,
          "reserve": $setup.props.messageItem.flow === "out"
        }),
        onClick: $setup.toggleClick
      },
      [
        vue.createElementVNode("div", { class: "audio-icon-container" }, [
          vue.createElementVNode(
            "div",
            {
              class: vue.normalizeClass({ "mask": true, "play": $setup.isAudioPlaying })
            },
            null,
            2
            /* CLASS */
          ),
          vue.createVNode($setup["Icon"], {
            class: "icon",
            width: "15px",
            height: "20px",
            file: $setup.audioIcon
          }, null, 8, ["file"])
        ]),
        vue.createElementVNode(
          "div",
          {
            class: "time",
            style: vue.normalizeStyle({ width: `${$setup.props.content.second * 5}px` })
          },
          vue.toDisplayString($setup.props.content.second || 1) + ' " ',
          5
          /* TEXT, STYLE */
        )
      ],
      2
      /* CLASS */
    );
  }
  const MessageAudio = /* @__PURE__ */ _export_sfc(_sfc_main$1b, [["render", _sfc_render$1a], ["__scopeId", "data-v-066fcccf"], ["__file", "C:/Users/Administrator/Desktop/Project Folder/ZXHand/ZXHandwritting_APP_uniapp/TUIKit/components/TUIChat/message-list/message-elements/message-audio.vue"]]);
  const files = "/assets/file-light.7beeea9d.svg";
  const _sfc_main$1a = /* @__PURE__ */ vue.defineComponent({
    __name: "message-file",
    props: {
      content: { type: Object, required: true, default: () => ({}) },
      messageItem: { type: Object, required: true, default: () => ({}) }
    },
    setup(__props, { expose: __expose }) {
      __expose();
      const props2 = __props;
      const download2 = () => {
        if (props2.messageItem.hasRiskContent) {
          return;
        }
        const option = {
          mode: "cors",
          headers: new Headers({
            "Content-Type": "application/x-www-form-urlencoded"
          })
        };
        if (window == null ? void 0 : window.fetch) {
          fetch(props2.content.url, option).then((res) => res.blob()).then((blob) => {
            const a2 = document.createElement("a");
            const url2 = window.URL.createObjectURL(blob);
            a2.href = url2;
            a2.download = props2.content.name;
            a2.click();
          });
        } else {
          const a2 = document.createElement("a");
          a2.href = props2.content.url;
          a2.target = "_blank";
          a2.download = props2.content.name;
          a2.click();
        }
      };
      const __returned__ = { props: props2, download: download2, get TUITranslateService() {
        return Jt;
      }, Icon: Icon$1, get files() {
        return files;
      } };
      Object.defineProperty(__returned__, "__isScriptSetup", { enumerable: false, value: true });
      return __returned__;
    }
  });
  function _sfc_render$19(_ctx, _cache, $props, $setup, $data, $options) {
    return vue.openBlock(), vue.createElementBlock("div", {
      class: "file-message-montainer",
      title: $setup.TUITranslateService.t("TUIChat.单击下载"),
      onClick: $setup.download
    }, [
      vue.createVNode($setup["Icon"], {
        file: $setup.files,
        class: "file-icon"
      }, null, 8, ["file"]),
      vue.createElementVNode("div", null, [
        vue.createElementVNode(
          "div",
          null,
          vue.toDisplayString($setup.props.content.name),
          1
          /* TEXT */
        ),
        vue.createElementVNode(
          "div",
          null,
          vue.toDisplayString($setup.props.content.size),
          1
          /* TEXT */
        )
      ])
    ], 8, ["title"]);
  }
  const MessageFile = /* @__PURE__ */ _export_sfc(_sfc_main$1a, [["render", _sfc_render$19], ["__scopeId", "data-v-f3d5b3bc"], ["__file", "C:/Users/Administrator/Desktop/Project Folder/ZXHand/ZXHandwritting_APP_uniapp/TUIKit/components/TUIChat/message-list/message-elements/message-file.vue"]]);
  const _sfc_main$19 = /* @__PURE__ */ vue.defineComponent({
    __name: "message-face",
    props: {
      content: {
        type: Object,
        default: () => ({})
      }
    },
    setup(__props, { expose: __expose }) {
      __expose();
      const props2 = __props;
      const url2 = vue.ref(props2.content.url);
      vue.onMounted(() => {
        if (props2.content.type === "custom") {
          {
            formatAppLog("warn", "at TUIKit/components/TUIChat/message-list/message-elements/message-face.vue:23", "CUSTOM_BIG_EMOJI_URL is required for custom emoji, please check your CUSTOM_BIG_EMOJI_URL.");
          }
        }
      });
      const __returned__ = { props: props2, url: url2 };
      Object.defineProperty(__returned__, "__isScriptSetup", { enumerable: false, value: true });
      return __returned__;
    }
  });
  function _sfc_render$18(_ctx, _cache, $props, $setup, $data, $options) {
    return vue.openBlock(), vue.createElementBlock("div", { class: "message-image" }, [
      vue.createElementVNode("img", {
        mode: "aspectFit",
        class: "message-image",
        src: $setup.url
      }, null, 8, ["src"])
    ]);
  }
  const MessageFace = /* @__PURE__ */ _export_sfc(_sfc_main$19, [["render", _sfc_render$18], ["__scopeId", "data-v-4ad96015"], ["__file", "C:/Users/Administrator/Desktop/Project Folder/ZXHand/ZXHandwritting_APP_uniapp/TUIKit/components/TUIChat/message-list/message-elements/message-face.vue"]]);
  const _sfc_main$18 = /* @__PURE__ */ vue.defineComponent({
    __name: "message-custom",
    props: {
      messageItem: { type: Object, required: true, default: void 0 },
      content: { type: null, required: true, default: void 0 }
    },
    setup(__props, { expose: __expose }) {
      __expose();
      const props2 = __props;
      const custom = vue.ref();
      const message2 = vue.ref();
      const extension = vue.ref();
      const isCustom = vue.ref({
        businessID: ""
      });
      vue.watchEffect(() => {
        custom.value = props2.content;
        message2.value = props2.messageItem;
        const { payload } = props2.messageItem;
        isCustom.value = payload.data || "";
        isCustom.value = JSONToObject$1(payload.data);
        if (payload.data === CHAT_MSG_CUSTOM_TYPE.SERVICE) {
          extension.value = JSONToObject$1(payload.extension);
        }
      });
      const openLink = (url2) => {
        window.open(url2);
      };
      const __returned__ = { props: props2, custom, message: message2, extension, isCustom, openLink, get TUITranslateService() {
        return Jt;
      }, get isUrl() {
        return isUrl;
      }, get CHAT_MSG_CUSTOM_TYPE() {
        return CHAT_MSG_CUSTOM_TYPE;
      }, Icon: Icon$1, get star() {
        return starLightIcon;
      } };
      Object.defineProperty(__returned__, "__isScriptSetup", { enumerable: false, value: true });
      return __returned__;
    }
  });
  function _sfc_render$17(_ctx, _cache, $props, $setup, $data, $options) {
    return vue.openBlock(), vue.createElementBlock("div", { class: "custom" }, [
      $setup.isCustom.businessID === $setup.CHAT_MSG_CUSTOM_TYPE.SERVICE ? (vue.openBlock(), vue.createElementBlock("div", { key: 0 }, [
        vue.createElementVNode("h1", null, [
          vue.createElementVNode(
            "label",
            null,
            vue.toDisplayString($setup.extension.title),
            1
            /* TEXT */
          ),
          $setup.extension.hyperlinks_text ? (vue.openBlock(), vue.createElementBlock("a", {
            key: 0,
            href: $setup.extension.hyperlinks_text.value,
            target: "view_window"
          }, vue.toDisplayString($setup.extension.hyperlinks_text.key), 9, ["href"])) : vue.createCommentVNode("v-if", true)
        ]),
        $setup.extension.item && $setup.extension.item.length > 0 ? (vue.openBlock(), vue.createElementBlock("ul", { key: 0 }, [
          (vue.openBlock(true), vue.createElementBlock(
            vue.Fragment,
            null,
            vue.renderList($setup.extension.item, (item, index2) => {
              return vue.openBlock(), vue.createElementBlock("li", { key: index2 }, [
                $setup.isUrl(item.value) ? (vue.openBlock(), vue.createElementBlock("a", {
                  key: 0,
                  href: item.value,
                  target: "view_window"
                }, vue.toDisplayString(item.key), 9, ["href"])) : (vue.openBlock(), vue.createElementBlock(
                  "p",
                  { key: 1 },
                  vue.toDisplayString(item.key),
                  1
                  /* TEXT */
                ))
              ]);
            }),
            128
            /* KEYED_FRAGMENT */
          ))
        ])) : vue.createCommentVNode("v-if", true),
        vue.createElementVNode(
          "article",
          null,
          vue.toDisplayString($setup.extension.description),
          1
          /* TEXT */
        )
      ])) : $setup.isCustom.businessID === $setup.CHAT_MSG_CUSTOM_TYPE.EVALUATE ? (vue.openBlock(), vue.createElementBlock("div", {
        key: 1,
        class: "evaluate"
      }, [
        vue.createElementVNode(
          "h1",
          null,
          vue.toDisplayString($setup.TUITranslateService.t("message.custom.对本次服务评价")),
          1
          /* TEXT */
        ),
        vue.createElementVNode("ul", { class: "evaluate-list" }, [
          (vue.openBlock(true), vue.createElementBlock(
            vue.Fragment,
            null,
            vue.renderList(Math.max($setup.isCustom.score, 0), (item, index2) => {
              return vue.openBlock(), vue.createElementBlock("li", {
                key: index2,
                class: "evaluate-list-item"
              }, [
                vue.createVNode($setup["Icon"], {
                  file: $setup.star,
                  class: "file-icon"
                }, null, 8, ["file"])
              ]);
            }),
            128
            /* KEYED_FRAGMENT */
          ))
        ]),
        vue.createElementVNode(
          "article",
          null,
          vue.toDisplayString($setup.isCustom.comment),
          1
          /* TEXT */
        )
      ])) : $setup.isCustom.businessID === $setup.CHAT_MSG_CUSTOM_TYPE.ORDER ? (vue.openBlock(), vue.createElementBlock("div", {
        key: 2,
        class: "order",
        onClick: _cache[0] || (_cache[0] = ($event) => $setup.openLink($setup.isCustom.link))
      }, [
        vue.createElementVNode("img", {
          src: $setup.isCustom.imageUrl
        }, null, 8, ["src"]),
        vue.createElementVNode("main", null, [
          vue.createElementVNode(
            "h1",
            null,
            vue.toDisplayString($setup.isCustom.title),
            1
            /* TEXT */
          ),
          vue.createElementVNode(
            "p",
            null,
            vue.toDisplayString($setup.isCustom.description),
            1
            /* TEXT */
          ),
          vue.createElementVNode(
            "span",
            null,
            vue.toDisplayString($setup.isCustom.price),
            1
            /* TEXT */
          )
        ])
      ])) : $setup.isCustom.businessID === $setup.CHAT_MSG_CUSTOM_TYPE.LINK ? (vue.openBlock(), vue.createElementBlock("div", {
        key: 3,
        class: "textLink"
      }, [
        vue.createElementVNode(
          "p",
          null,
          vue.toDisplayString($setup.isCustom.text),
          1
          /* TEXT */
        ),
        vue.createElementVNode("a", {
          href: $setup.isCustom.link,
          target: "view_window"
        }, vue.toDisplayString($setup.TUITranslateService.t("message.custom.查看详情>>")), 9, ["href"])
      ])) : (vue.openBlock(), vue.createElementBlock("span", {
        key: 4,
        innerHTML: $props.content.custom
      }, null, 8, ["innerHTML"]))
    ]);
  }
  const MessageCustom = /* @__PURE__ */ _export_sfc(_sfc_main$18, [["render", _sfc_render$17], ["__scopeId", "data-v-abd5dfdc"], ["__file", "C:/Users/Administrator/Desktop/Project Folder/ZXHand/ZXHandwritting_APP_uniapp/TUIKit/components/TUIChat/message-list/message-elements/message-custom.vue"]]);
  const _sfc_main$17 = /* @__PURE__ */ vue.defineComponent({
    __name: "message-tip",
    props: {
      content: {
        type: Object,
        default: () => ({})
      }
    },
    setup(__props, { expose: __expose }) {
      __expose();
      const props2 = __props;
      const tipContent = vue.computed(() => {
        var _a, _b;
        return ((_a = props2.content) == null ? void 0 : _a.text) || ((_b = props2.content) == null ? void 0 : _b.custom) || "";
      });
      const __returned__ = { props: props2, tipContent };
      Object.defineProperty(__returned__, "__isScriptSetup", { enumerable: false, value: true });
      return __returned__;
    }
  });
  function _sfc_render$16(_ctx, _cache, $props, $setup, $data, $options) {
    return vue.openBlock(), vue.createElementBlock("div", { class: "message-tip" }, [
      vue.createElementVNode(
        "span",
        null,
        vue.toDisplayString($setup.tipContent),
        1
        /* TEXT */
      )
    ]);
  }
  const MessageTip = /* @__PURE__ */ _export_sfc(_sfc_main$17, [["render", _sfc_render$16], ["__scopeId", "data-v-9169fd29"], ["__file", "C:/Users/Administrator/Desktop/Project Folder/ZXHand/ZXHandwritting_APP_uniapp/TUIKit/components/TUIChat/message-list/message-elements/message-tip.vue"]]);
  class TUIChatConfig {
    constructor() {
      this.chatType = "";
      this.features = {
        DownloadFile: true,
        CopyMessage: true,
        DeleteMessage: true,
        RevokeMessage: true,
        QuoteMessage: true,
        ForwardMessage: true,
        TranslateMessage: true,
        VoiceToText: true,
        MultiSelection: true,
        EmojiReaction: true,
        InputEmoji: true,
        InputStickers: true,
        InputImage: true,
        InputVoice: true,
        InputVideo: true,
        InputFile: true,
        InputEvaluation: true,
        InputQuickReplies: true,
        InputMention: true,
        MessageSearch: true,
        ReadStatus: true
      };
      this.theme = "light";
    }
    static getInstance() {
      if (!TUIChatConfig.instance) {
        TUIChatConfig.instance = new TUIChatConfig();
      }
      return TUIChatConfig.instance;
    }
    setChatType(chatType) {
      this.chatType = chatType;
    }
    getChatType() {
      return this.chatType;
    }
    hideTUIChatFeatures(features) {
      if (!features) {
        return;
      }
      features.forEach((feature) => {
        if (this.features[feature]) {
          this.features[feature] = false;
        }
      });
    }
    getFeatureConfig(key) {
      if (key) {
        return this.features[key];
      }
      return this.features;
    }
    setTheme(theme) {
      this.theme = theme;
    }
    getTheme() {
      return this.theme;
    }
  }
  const ChatConfig = TUIChatConfig.getInstance();
  ChatConfig.hideTUIChatFeatures.bind(ChatConfig);
  var ReadState = /* @__PURE__ */ ((ReadState2) => {
    ReadState2[ReadState2["Read"] = 0] = "Read";
    ReadState2[ReadState2["Unread"] = 1] = "Unread";
    ReadState2[ReadState2["AllRead"] = 2] = "AllRead";
    ReadState2[ReadState2["NotShow"] = 3] = "NotShow";
    ReadState2[ReadState2["PartiallyRead"] = 4] = "PartiallyRead";
    return ReadState2;
  })(ReadState || {});
  const _sfc_main$16 = /* @__PURE__ */ vue.defineComponent({
    __name: "index",
    props: {
      message: { type: Object, required: true, default: () => ({}) }
    },
    emits: ["openReadUserPanel"],
    setup(__props, { expose: __expose, emit: __emit }) {
      __expose();
      const emits2 = __emit;
      const props2 = __props;
      const ReadStatus2 = ChatConfig.getFeatureConfig("ReadStatus");
      const TYPES2 = Kt.TYPES;
      const isDisplayMessageReadReceipt = vue.ref(zt.getData(o$2.USER, "displayMessageReadReceipt"));
      vue.onMounted(() => {
        zt.watch(o$2.USER, {
          displayMessageReadReceipt: onDisplayMessageReadReceiptUpdate
        });
      });
      vue.onUnmounted(() => {
        zt.unwatch(o$2.USER, {
          displayMessageReadReceipt: onDisplayMessageReadReceiptUpdate
        });
      });
      const isShowReadStatus = vue.computed(() => {
        if (!ReadStatus2) {
          return false;
        }
        if (!isDisplayMessageReadReceipt.value) {
          return false;
        }
        const {
          ID,
          type,
          flow,
          status,
          hasRiskContent,
          conversationID,
          conversationType,
          needReadReceipt = false
        } = props2.message;
        if (hasRiskContent) {
          return false;
        }
        const { groupProfile } = zt.getConversationModel(conversationID) || {};
        if ((groupProfile == null ? void 0 : groupProfile.type) === TYPES2.GRP_AVCHATROOM || (groupProfile == null ? void 0 : groupProfile.type) === TYPES2.GRP_COMMUNITY) {
          return false;
        }
        if (type === TYPES2.MSG_CUSTOM) {
          const message2 = zt.getMessageModel(ID);
          if ((message2 == null ? void 0 : message2.getSignalingInfo()) !== null) {
            return false;
          }
        }
        if (flow !== "out" || status !== "success") {
          return false;
        }
        if (conversationType === "GROUP") {
          return needReadReceipt;
        } else if (conversationType === "C2C") {
          return true;
        }
        return false;
      });
      const readState = vue.computed(() => {
        const { conversationType, needReadReceipt = false, isPeerRead = false } = props2.message;
        const { readCount = 0, unreadCount = 0, isPeerRead: isReceiptPeerRead = false } = props2.message.readReceiptInfo;
        if (conversationType === "C2C") {
          if (needReadReceipt) {
            return isReceiptPeerRead ? 0 : 1;
          } else {
            return isPeerRead ? 0 : 1;
          }
        } else if (conversationType === "GROUP") {
          if (needReadReceipt) {
            if (readCount === 0) {
              return 1;
            } else if (unreadCount === 0) {
              return 2;
            } else {
              return 4;
            }
          } else {
            return 3;
          }
        }
        return 1;
      });
      const readStatusText = vue.computed(() => {
        const { readCount = 0 } = props2.message.readReceiptInfo;
        switch (readState.value) {
          case 0:
            return Jt.t("TUIChat.已读");
          case 1:
            return Jt.t("TUIChat.未读");
          case 2:
            return Jt.t("TUIChat.全部已读");
          case 4:
            return `${readCount}${Jt.t("TUIChat.人已读")}`;
          default:
            return "";
        }
      });
      const isUseUnreadStyle = vue.computed(() => {
        const { conversationType } = props2.message;
        if (conversationType === "C2C") {
          return readState.value !== 0;
        } else if (conversationType === "GROUP") {
          return readState.value !== 2;
        }
        return false;
      });
      const isHoverFingerPointer = vue.computed(() => {
        return props2.message.needReadReceipt && props2.message.conversationType === "GROUP" && (readState.value === 4 || readState.value === 1);
      });
      function openReadUserPanel() {
        if (isHoverFingerPointer.value) {
          emits2("openReadUserPanel");
        }
      }
      function onDisplayMessageReadReceiptUpdate(isDisplay) {
        isDisplayMessageReadReceipt.value = isDisplay;
      }
      const __returned__ = { emits: emits2, props: props2, ReadStatus: ReadStatus2, ReadState, TYPES: TYPES2, isDisplayMessageReadReceipt, isShowReadStatus, readState, readStatusText, isUseUnreadStyle, isHoverFingerPointer, openReadUserPanel, onDisplayMessageReadReceiptUpdate };
      Object.defineProperty(__returned__, "__isScriptSetup", { enumerable: false, value: true });
      return __returned__;
    }
  });
  function _sfc_render$15(_ctx, _cache, $props, $setup, $data, $options) {
    return vue.withDirectives((vue.openBlock(), vue.createElementBlock(
      "div",
      {
        class: vue.normalizeClass({
          "message-label": true,
          "unread": $setup.isUseUnreadStyle,
          "finger-point": $setup.isHoverFingerPointer
        }),
        onClick: $setup.openReadUserPanel
      },
      [
        vue.createElementVNode(
          "span",
          null,
          vue.toDisplayString($setup.readStatusText),
          1
          /* TEXT */
        )
      ],
      2
      /* CLASS */
    )), [
      [vue.vShow, $setup.isShowReadStatus]
    ]);
  }
  const ReadStatus = /* @__PURE__ */ _export_sfc(_sfc_main$16, [["render", _sfc_render$15], ["__scopeId", "data-v-bb856aa1"], ["__file", "C:/Users/Administrator/Desktop/Project Folder/ZXHand/ZXHandwritting_APP_uniapp/TUIKit/components/TUIChat/message-list/message-elements/read-status/index.vue"]]);
  var MessageQuoteTypeEnum = /* @__PURE__ */ ((MessageQuoteTypeEnum2) => {
    MessageQuoteTypeEnum2[MessageQuoteTypeEnum2["TYPE_NONE"] = 0] = "TYPE_NONE";
    MessageQuoteTypeEnum2[MessageQuoteTypeEnum2["TYPE_TEXT"] = 1] = "TYPE_TEXT";
    MessageQuoteTypeEnum2[MessageQuoteTypeEnum2["TYPE_CUSTOM"] = 2] = "TYPE_CUSTOM";
    MessageQuoteTypeEnum2[MessageQuoteTypeEnum2["TYPE_IMAGE"] = 3] = "TYPE_IMAGE";
    MessageQuoteTypeEnum2[MessageQuoteTypeEnum2["TYPE_SOUND"] = 4] = "TYPE_SOUND";
    MessageQuoteTypeEnum2[MessageQuoteTypeEnum2["TYPE_VIDEO"] = 5] = "TYPE_VIDEO";
    MessageQuoteTypeEnum2[MessageQuoteTypeEnum2["TYPE_FILE"] = 6] = "TYPE_FILE";
    MessageQuoteTypeEnum2[MessageQuoteTypeEnum2["TYPE_LOCATION"] = 7] = "TYPE_LOCATION";
    MessageQuoteTypeEnum2[MessageQuoteTypeEnum2["TYPE_FACE"] = 8] = "TYPE_FACE";
    MessageQuoteTypeEnum2[MessageQuoteTypeEnum2["TYPE_GROUP_TIPS"] = 9] = "TYPE_GROUP_TIPS";
    MessageQuoteTypeEnum2[MessageQuoteTypeEnum2["TYPE_MERGER"] = 10] = "TYPE_MERGER";
    return MessageQuoteTypeEnum2;
  })(MessageQuoteTypeEnum || {});
  const _sfc_main$15 = /* @__PURE__ */ vue.defineComponent({
    __name: "index",
    props: {
      message: { type: Object, required: true, default: () => ({}) }
    },
    emits: ["scrollTo", "blinkMessage"],
    setup(__props, { expose: __expose, emit: __emit }) {
      __expose();
      const emits2 = __emit;
      const props2 = __props;
      let selfAddValue = 0;
      const messageQuoteText = vue.ref("");
      const hasQuoteContent = vue.ref(false);
      const messageQuoteContent = vue.ref({});
      const isMessageRevoked = vue.computed(() => {
        var _a;
        try {
          const cloudCustomData = JSON.parse(((_a = props2.message) == null ? void 0 : _a.cloudCustomData) || "{}");
          const quotedMessageModel = zt.getMessageModel(cloudCustomData.messageReply.messageID);
          return quotedMessageModel == null ? void 0 : quotedMessageModel.isRevoked;
        } catch (error2) {
          return true;
        }
      });
      vue.onMounted(() => {
        var _a;
        try {
          const cloudCustomData = JSON.parse(((_a = props2.message) == null ? void 0 : _a.cloudCustomData) || "{}");
          hasQuoteContent.value = Boolean(cloudCustomData.messageReply);
          if (hasQuoteContent.value) {
            messageQuoteContent.value = cloudCustomData.messageReply;
            messageQuoteText.value = performQuoteContent(messageQuoteContent.value);
          }
        } catch (error2) {
          hasQuoteContent.value = false;
        }
      });
      function performQuoteContent(params) {
        let messageKey = "";
        let quoteContent = "";
        switch (params.messageType) {
          case MessageQuoteTypeEnum.TYPE_TEXT:
            messageKey = "[文本]";
            break;
          case MessageQuoteTypeEnum.TYPE_CUSTOM:
            messageKey = "[自定义消息]";
            break;
          case MessageQuoteTypeEnum.TYPE_IMAGE:
            messageKey = "[图片]";
            break;
          case MessageQuoteTypeEnum.TYPE_SOUND:
            messageKey = "[音频]";
            break;
          case MessageQuoteTypeEnum.TYPE_VIDEO:
            messageKey = "[视频]";
            break;
          case MessageQuoteTypeEnum.TYPE_FILE:
            messageKey = "[文件]";
            break;
          case MessageQuoteTypeEnum.TYPE_LOCATION:
            messageKey = "[地理位置]";
            break;
          case MessageQuoteTypeEnum.TYPE_FACE:
            messageKey = "[动画表情]";
            break;
          case MessageQuoteTypeEnum.TYPE_GROUP_TIPS:
            messageKey = "[群提示]";
            break;
          case MessageQuoteTypeEnum.TYPE_MERGER:
            messageKey = "[聊天记录]";
            break;
          default:
            messageKey = "[消息]";
            break;
        }
        if ([
          MessageQuoteTypeEnum.TYPE_TEXT,
          MessageQuoteTypeEnum.TYPE_MERGER
        ].includes(params.messageType)) {
          quoteContent = params.messageAbstract;
        }
        return quoteContent ? quoteContent : Jt.t(`TUIChat.${messageKey}`);
      }
      async function scrollToOriginalMessage() {
        var _a;
        if (isMessageRevoked.value) {
          return;
        }
        const originMessageID = (_a = messageQuoteContent.value) == null ? void 0 : _a.messageID;
        const currentMessageList = zt.getData(o$2.CHAT, "messageList");
        const isOriginalMessageInScreen = currentMessageList.some((msg) => msg.ID === originMessageID);
        if (originMessageID && isOriginalMessageInScreen) {
          try {
            const scrollViewRect = await b("#messageScrollList", "messageList");
            const originalMessageRect = await b("#tui-" + originMessageID, "messageList");
            const { scrollTop } = await T("#messageScrollList", "messageList");
            const finalScrollTop = originalMessageRect.top + scrollTop - scrollViewRect.top - selfAddValue++ % 2;
            const isNeedScroll = originalMessageRect.top < scrollViewRect.top;
            if (!isUniFrameWork && window) {
              const scrollView = document.getElementById("messageScrollList");
              if (isNeedScroll && scrollView) {
                scrollView.scrollTop = finalScrollTop;
              }
            } else if (isUniFrameWork && isNeedScroll) {
              emits2("scrollTo", finalScrollTop);
            }
            emits2("blinkMessage", originMessageID);
          } catch (error2) {
            formatAppLog("error", "at TUIKit/components/TUIChat/message-list/message-elements/message-quote/index.vue:144", error2);
          }
        } else {
          Toast({
            message: Jt.t("TUIChat.无法定位到原消息"),
            type: TOAST_TYPE.WARNING
          });
        }
      }
      const __returned__ = { emits: emits2, props: props2, get selfAddValue() {
        return selfAddValue;
      }, set selfAddValue(v2) {
        selfAddValue = v2;
      }, messageQuoteText, hasQuoteContent, messageQuoteContent, isMessageRevoked, performQuoteContent, scrollToOriginalMessage, get TUITranslateService() {
        return Jt;
      }, get transformTextWithKeysToEmojiNames() {
        return transformTextWithKeysToEmojiNames;
      } };
      Object.defineProperty(__returned__, "__isScriptSetup", { enumerable: false, value: true });
      return __returned__;
    }
  });
  function _sfc_render$14(_ctx, _cache, $props, $setup, $data, $options) {
    return $setup.hasQuoteContent ? (vue.openBlock(), vue.createElementBlock(
      "div",
      {
        key: 0,
        class: vue.normalizeClass({
          "reference-content": true,
          "reverse": $props.message.flow === "out"
        }),
        onClick: $setup.scrollToOriginalMessage
      },
      [
        $setup.isMessageRevoked ? (vue.openBlock(), vue.createElementBlock(
          "div",
          {
            key: 0,
            class: "revoked-text"
          },
          vue.toDisplayString($setup.TUITranslateService.t("TUIChat.引用内容已撤回")),
          1
          /* TEXT */
        )) : (vue.openBlock(), vue.createElementBlock(
          "div",
          {
            key: 1,
            class: "max-double-line"
          },
          vue.toDisplayString($setup.messageQuoteContent.messageSender) + ": " + vue.toDisplayString($setup.transformTextWithKeysToEmojiNames($setup.messageQuoteText)),
          1
          /* TEXT */
        ))
      ],
      2
      /* CLASS */
    )) : vue.createCommentVNode("v-if", true);
  }
  const MessageQuote$1 = /* @__PURE__ */ _export_sfc(_sfc_main$15, [["render", _sfc_render$14], ["__scopeId", "data-v-3506872c"], ["__file", "C:/Users/Administrator/Desktop/Project Folder/ZXHand/ZXHandwritting_APP_uniapp/TUIKit/components/TUIChat/message-list/message-elements/message-quote/index.vue"]]);
  const _Translator = class _Translator {
    constructor() {
      this.isUseCache = true;
      this.translationCache = /* @__PURE__ */ new Map();
    }
    static getInstance() {
      if (!_Translator.instance) {
        _Translator.instance = new _Translator();
      }
      return _Translator.instance;
    }
    async get(message2) {
      if (this.isUseCache) {
        const cache = this.translationCache.get(message2.ID);
        if (cache !== void 0) {
          return cache;
        }
      }
      const currentMessage = zt.getMessageModel(message2.ID);
      if (!currentMessage) {
        return [];
      }
      const { text } = currentMessage.getMessageContent() || {};
      const textList = [];
      const splittingList = await this.getNickList(currentMessage);
      for (let i2 = 0; i2 < text.length; ++i2) {
        const item = text[i2];
        if (item.name === "img") {
          textList.push({ type: "face", value: item.src });
          continue;
        }
        const { transSplitingList, atNickList } = this.getSplitResult(item.text, splittingList);
        for (let j2 = 0; j2 < transSplitingList.length; ++j2) {
          textList.push({ type: "text", value: transSplitingList[j2] });
          if (j2 < atNickList.length) {
            textList.push({ type: "mention", value: atNickList[j2] });
          }
        }
      }
      const needTranslateTextIndex = [];
      const needTranslateText = textList.filter((item, index2) => {
        if (item.type === "text" && item.value.trim() !== "") {
          needTranslateTextIndex.push(index2);
          return true;
        }
        return false;
      }).map((item) => item.value);
      if (needTranslateText.length === 0) {
        this.translationCache.set(currentMessage.ID, textList);
        return textList;
      }
      const translationResult = await this.getTranslationStandard(needTranslateText);
      translationResult.forEach((item, index2) => {
        textList[needTranslateTextIndex[index2]].value = item;
      });
      this.translationCache.set(currentMessage.ID, textList);
      return textList;
    }
    /**
     * Clears the translation cache.
     */
    clear() {
      this.translationCache.clear();
    }
    disableCache() {
      this.isUseCache = false;
    }
    enableCache() {
      this.isUseCache = true;
    }
    getTranslationStandard(originTextList) {
      return new Promise((resolve, reject) => {
        Zt.translateText({
          sourceTextList: originTextList,
          sourceLanguage: "auto"
        }).then((response) => {
          const {
            data: { translatedTextList }
          } = response;
          resolve(translatedTextList);
        }).catch((error2) => {
          reject(error2);
        });
      });
    }
    /**
     * the nick list is used to split the text by @ + {nick or userID}
     * @param message
     * @returns e.g. ['@james', '@john']
     */
    async getNickList(message2) {
      const splittingList = [];
      const { atUserList = [] } = message2;
      const atAllID = Kt.TYPES.MSG_AT_ALL;
      if (atUserList.includes(atAllID)) {
        splittingList.push(`@${Jt.t("TUIChat.所有人")}`);
      }
      if (atUserList.length > 0) {
        const { data: userProfileList } = await Xt.getUserProfile({ userIDList: atUserList });
        userProfileList.forEach((user) => {
          const atNick = `@${user.nick || user.userID}`;
          splittingList.push(atNick);
        });
      }
      return [...new Set(splittingList)];
    }
    /**
     * Splits the given text into substrings based on the provided splitString array.
     *
     * @param {string} text - The text to be split.
     * @param {string[]} splitString - The array of strings to split the text by.
     * @return {{ transSplitingList: string[]; atNickList: string[] }} - An object containing two arrays:
     *   - transSplitingList: An array of substrings extracted from the text.
     *   - atNickList: An array of split strings that were found in the text.
     */
    getSplitResult(text, splitString) {
      let searchStartPos = 0;
      const transSplitingList = [];
      const atNickList = [];
      while (searchStartPos < text.length) {
        const nextAtCharPos = text.indexOf("@", searchStartPos);
        if (nextAtCharPos === -1) {
          transSplitingList.push(text.substring(searchStartPos));
          break;
        }
        let found = false;
        for (let i2 = 0; i2 < splitString.length; ++i2) {
          const pos = text.indexOf(splitString[i2], nextAtCharPos);
          if (pos !== -1 && pos === nextAtCharPos) {
            transSplitingList.push(text.substring(searchStartPos, pos));
            atNickList.push(splitString[i2]);
            searchStartPos = pos + splitString[i2].length;
            found = true;
            break;
          }
        }
        if (!found) {
          transSplitingList.push(text.substring(searchStartPos));
          break;
        }
      }
      return {
        transSplitingList,
        atNickList
      };
    }
  };
  _Translator.instance = void 0;
  let Translator = _Translator;
  const translator = Translator.getInstance();
  const _sfc_main$14 = /* @__PURE__ */ vue.defineComponent({
    __name: "translation-content",
    props: {
      message: { type: Object, required: true, default: () => ({}) },
      translationContentVisible: { type: Boolean, required: true },
      isSingleTranslation: { type: Boolean, required: true },
      translationWrapperRef: { type: null, required: true }
    },
    setup(__props, { expose: __expose }) {
      __expose();
      const props2 = __props;
      const translationFinished = vue.ref(false);
      const translationErrorText = vue.ref("");
      const translationTextList = vue.ref([]);
      vue.watch(() => props2.translationContentVisible, (newVal) => {
        if (newVal) {
          translator.get(props2.message).then((result) => {
            translationFinished.value = true;
            translationTextList.value = result;
          }).catch((err) => {
            translationFinished.value = true;
            emits("toggleErrorStatus", true);
            translationErrorText.value = err.message;
          });
        }
      }, { immediate: true });
      const __returned__ = { props: props2, translationFinished, translationErrorText, translationTextList, get TUITranslateService() {
        return Jt;
      } };
      Object.defineProperty(__returned__, "__isScriptSetup", { enumerable: false, value: true });
      return __returned__;
    }
  });
  function _sfc_render$13(_ctx, _cache, $props, $setup, $data, $options) {
    return vue.openBlock(), vue.createElementBlock("div", { class: "message-translation-container" }, [
      $setup.translationFinished ? (vue.openBlock(), vue.createElementBlock("div", {
        key: 0,
        id: `translation-content-${$setup.props.message.ID}`,
        class: vue.normalizeClass({
          "translation-content": true,
          "occur": true
        })
      }, [
        $setup.translationTextList.length > 0 ? (vue.openBlock(true), vue.createElementBlock(
          vue.Fragment,
          { key: 0 },
          vue.renderList($setup.translationTextList, (text, index2) => {
            return vue.openBlock(), vue.createElementBlock("span", { key: index2 }, [
              text.type === "face" ? (vue.openBlock(), vue.createElementBlock("img", {
                key: 0,
                class: "text-face",
                src: text.value
              }, null, 8, ["src"])) : (vue.openBlock(), vue.createElementBlock(
                "span",
                {
                  key: 1,
                  class: "text-plain"
                },
                vue.toDisplayString(text.value),
                1
                /* TEXT */
              ))
            ]);
          }),
          128
          /* KEYED_FRAGMENT */
        )) : (vue.openBlock(), vue.createElementBlock(
          vue.Fragment,
          { key: 1 },
          [
            vue.createTextVNode(
              vue.toDisplayString($setup.translationErrorText),
              1
              /* TEXT */
            )
          ],
          64
          /* STABLE_FRAGMENT */
        ))
      ], 8, ["id"])) : vue.createCommentVNode("v-if", true),
      vue.createElementVNode(
        "div",
        {
          class: vue.normalizeClass({
            "loading": true,
            "loading-end": $setup.translationFinished
          })
        },
        vue.toDisplayString($setup.TUITranslateService.t("TUIChat.翻译中")) + "... ",
        3
        /* TEXT, CLASS */
      )
    ]);
  }
  const TranslationContent = /* @__PURE__ */ _export_sfc(_sfc_main$14, [["render", _sfc_render$13], ["__scopeId", "data-v-ef640ceb"], ["__file", "C:/Users/Administrator/Desktop/Project Folder/ZXHand/ZXHandwritting_APP_uniapp/TUIKit/components/TUIChat/message-list/message-elements/message-translate/translation-content.vue"]]);
  const checkIcon = "/assets/check-sm.bfc05916.svg";
  const _sfc_main$13 = /* @__PURE__ */ vue.defineComponent({
    __name: "index",
    props: {
      message: { type: Object, required: true, default: () => ({}) }
    },
    setup(__props, { expose: __expose }) {
      __expose();
      const props2 = __props;
      const translationVisible = vue.ref(false);
      const hasTranslationError = vue.ref(false);
      const translationWrapperRef = vue.ref();
      let isSingleTranslation = true;
      vue.onMounted(() => {
        zt.watch(o$2.CHAT, {
          translateTextInfo: onMessageTranslationUpdated
        });
      });
      vue.onUnmounted(() => {
        zt.unwatch(o$2.CHAT, {
          translateTextInfo: onMessageTranslationUpdated
        });
      });
      function toggleErrorStatus(hasError) {
        hasTranslationError.value = hasError;
      }
      function onMessageTranslationUpdated(info) {
        if (info === void 0)
          return;
        isSingleTranslation = false;
        const translationInfoList = info.get(props2.message.conversationID) || [];
        for (let i2 = 0; i2 < translationInfoList.length; ++i2) {
          const { messageID, visible } = translationInfoList[i2];
          if (messageID === props2.message.ID && visible !== void 0) {
            if (translationInfoList.length === 1 && visible) {
              isSingleTranslation = true;
            }
            hasTranslationError.value = false;
            translationVisible.value = visible;
            break;
          }
        }
      }
      const __returned__ = { props: props2, translationVisible, hasTranslationError, translationWrapperRef, get isSingleTranslation() {
        return isSingleTranslation;
      }, set isSingleTranslation(v2) {
        isSingleTranslation = v2;
      }, toggleErrorStatus, onMessageTranslationUpdated, get TUITranslateService() {
        return Jt;
      }, Icon: Icon$1, TranslationContent, get checkIcon() {
        return checkIcon;
      } };
      Object.defineProperty(__returned__, "__isScriptSetup", { enumerable: false, value: true });
      return __returned__;
    }
  });
  function _sfc_render$12(_ctx, _cache, $props, $setup, $data, $options) {
    return $setup.translationVisible ? (vue.openBlock(), vue.createElementBlock(
      "div",
      {
        key: 0,
        ref: "translationWrapperRef",
        class: vue.normalizeClass({
          "message-translation": true,
          "reverse": $setup.props.message.flow === "out",
          "error": $setup.hasTranslationError
        })
      },
      [
        vue.createVNode($setup["TranslationContent"], {
          message: $setup.props.message,
          translationContentVisible: $setup.translationVisible,
          translationWrapperRef: $setup.translationWrapperRef,
          isSingleTranslation: $setup.isSingleTranslation,
          onToggleErrorStatus: $setup.toggleErrorStatus
        }, null, 8, ["message", "translationContentVisible", "translationWrapperRef", "isSingleTranslation"]),
        vue.createElementVNode("div", { class: "copyright" }, [
          vue.createVNode($setup["Icon"], {
            file: $setup.checkIcon,
            size: "13px"
          }, null, 8, ["file"]),
          vue.createElementVNode(
            "div",
            { class: "copyright-text" },
            vue.toDisplayString($setup.TUITranslateService.t("TUIChat.由IM提供翻译支持")),
            1
            /* TEXT */
          )
        ])
      ],
      2
      /* CLASS */
    )) : vue.createCommentVNode("v-if", true);
  }
  const MessageTranslate = /* @__PURE__ */ _export_sfc(_sfc_main$13, [["render", _sfc_render$12], ["__scopeId", "data-v-955a2daf"], ["__file", "C:/Users/Administrator/Desktop/Project Folder/ZXHand/ZXHandwritting_APP_uniapp/TUIKit/components/TUIChat/message-list/message-elements/message-translate/index.vue"]]);
  const _Convertor = class _Convertor {
    constructor() {
      this.isUseCache = true;
      this.convertCache = /* @__PURE__ */ new Map();
    }
    static getInstance() {
      if (!_Convertor.instance) {
        _Convertor.instance = new _Convertor();
      }
      return _Convertor.instance;
    }
    async get(message2) {
      if (this.isUseCache) {
        const cache = this.convertCache.get(message2.ID);
        if (cache !== void 0) {
          return cache;
        }
      }
      const currentMessage = zt.getMessageModel(message2.ID);
      if (!currentMessage) {
        return Promise.reject("message not found");
      }
      const response = await Zt.convertVoiceToText({
        message: currentMessage
      });
      let { data: { result } = {} } = response;
      if (result) {
        this.convertCache.set(currentMessage.ID, result);
      } else {
        result = "";
      }
      return result;
    }
    clear() {
      this.convertCache.clear();
    }
    disableCache() {
      this.isUseCache = false;
    }
    enableCache() {
      this.isUseCache = true;
    }
  };
  _Convertor.instance = void 0;
  let Convertor = _Convertor;
  const convertor = Convertor.getInstance();
  const _sfc_main$12 = /* @__PURE__ */ vue.defineComponent({
    __name: "convert-content",
    props: {
      message: { type: Object, required: true, default: () => ({}) },
      contentVisible: { type: Boolean, required: true }
    },
    emits: ["toggleErrorStatus"],
    setup(__props, { expose: __expose, emit: __emit }) {
      __expose();
      const emits2 = __emit;
      const props2 = __props;
      const convertFinished = vue.ref(false);
      const convertText2 = vue.ref("");
      vue.watch(() => props2.contentVisible, (newVal) => {
        if (newVal) {
          convertor.get(props2.message).then((text) => {
            convertFinished.value = true;
            convertText2.value = text;
          }).catch((err) => {
            convertFinished.value = true;
            emits2("toggleErrorStatus", true);
            convertText2.value = err.message;
          });
        }
      }, {
        immediate: true
      });
      const __returned__ = { emits: emits2, props: props2, convertFinished, convertText: convertText2, get TUITranslateService() {
        return Jt;
      } };
      Object.defineProperty(__returned__, "__isScriptSetup", { enumerable: false, value: true });
      return __returned__;
    }
  });
  function _sfc_render$11(_ctx, _cache, $props, $setup, $data, $options) {
    return vue.openBlock(), vue.createElementBlock("div", { class: "message-convert-container" }, [
      $setup.convertFinished ? (vue.openBlock(), vue.createElementBlock(
        "div",
        {
          key: 0,
          class: vue.normalizeClass({
            "convert-content": true,
            "occur": true
          })
        },
        vue.toDisplayString($setup.convertText),
        1
        /* TEXT */
      )) : vue.createCommentVNode("v-if", true),
      vue.createElementVNode(
        "div",
        {
          class: vue.normalizeClass({
            "loading": true,
            "loading-end": $setup.convertFinished
          })
        },
        vue.toDisplayString($setup.TUITranslateService.t("TUIChat.转换中")) + "... ",
        3
        /* TEXT, CLASS */
      )
    ]);
  }
  const ConvertContent = /* @__PURE__ */ _export_sfc(_sfc_main$12, [["render", _sfc_render$11], ["__scopeId", "data-v-02f04f6f"], ["__file", "C:/Users/Administrator/Desktop/Project Folder/ZXHand/ZXHandwritting_APP_uniapp/TUIKit/components/TUIChat/message-list/message-elements/message-convert/convert-content.vue"]]);
  const _sfc_main$11 = /* @__PURE__ */ vue.defineComponent({
    __name: "index",
    props: {
      message: { type: Object, required: true, default: () => ({}) }
    },
    setup(__props, { expose: __expose }) {
      __expose();
      const props2 = __props;
      const convertVisible = vue.ref(false);
      const hasConvertError = vue.ref(false);
      const convertWrapperRef = vue.ref();
      let isSingleConvert = true;
      vue.onMounted(() => {
        zt.watch(o$2.CHAT, {
          voiceToTextInfo: onMessageConvertUpdated
        });
      });
      vue.onUnmounted(() => {
        zt.unwatch(o$2.CHAT, {
          voiceToTextInfo: onMessageConvertUpdated
        });
      });
      function toggleErrorStatus(hasError) {
        hasConvertError.value = hasError;
      }
      function onMessageConvertUpdated(info) {
        if (info === void 0)
          return;
        isSingleConvert = false;
        const convertInfoList = info.get(props2.message.conversationID) || [];
        for (let i2 = 0; i2 < convertInfoList.length; ++i2) {
          const { messageID, visible } = convertInfoList[i2];
          if (messageID === props2.message.ID && visible !== void 0) {
            if (convertInfoList.length === 1 && visible) {
              isSingleConvert = true;
            }
            hasConvertError.value = false;
            convertVisible.value = visible;
            break;
          }
        }
      }
      const __returned__ = { props: props2, convertVisible, hasConvertError, convertWrapperRef, get isSingleConvert() {
        return isSingleConvert;
      }, set isSingleConvert(v2) {
        isSingleConvert = v2;
      }, toggleErrorStatus, onMessageConvertUpdated, ConvertContent };
      Object.defineProperty(__returned__, "__isScriptSetup", { enumerable: false, value: true });
      return __returned__;
    }
  });
  function _sfc_render$10(_ctx, _cache, $props, $setup, $data, $options) {
    return $setup.convertVisible ? (vue.openBlock(), vue.createElementBlock(
      "div",
      {
        key: 0,
        ref: "convertWrapperRef",
        class: vue.normalizeClass({
          "message-convert": true,
          "reverse": $setup.props.message.flow === "out",
          "error": $setup.hasConvertError
        })
      },
      [
        vue.createVNode($setup["ConvertContent"], {
          message: $setup.props.message,
          contentVisible: $setup.convertVisible,
          isSingleConvert: $setup.isSingleConvert,
          convertWrapperRef: $setup.convertWrapperRef,
          onToggleErrorStatus: $setup.toggleErrorStatus
        }, null, 8, ["message", "contentVisible", "isSingleConvert", "convertWrapperRef"])
      ],
      2
      /* CLASS */
    )) : vue.createCommentVNode("v-if", true);
  }
  const MessageConvert = /* @__PURE__ */ _export_sfc(_sfc_main$11, [["render", _sfc_render$10], ["__scopeId", "data-v-5d339368"], ["__file", "C:/Users/Administrator/Desktop/Project Folder/ZXHand/ZXHandwritting_APP_uniapp/TUIKit/components/TUIChat/message-list/message-elements/message-convert/index.vue"]]);
  const radioIcon = "/assets/radio.0422f0b5.svg";
  const _sfc_main$10 = /* @__PURE__ */ vue.defineComponent({
    __name: "index",
    props: {
      isSelected: { type: Boolean, required: true }
    },
    emits: ["onChange"],
    setup(__props, { expose: __expose, emit: __emit }) {
      __expose();
      const emits2 = __emit;
      const props2 = __props;
      function toggleSelect() {
        emits2("onChange", !props2.isSelected);
      }
      const __returned__ = { emits: emits2, props: props2, toggleSelect, Icon: Icon$1, get radioIcon() {
        return radioIcon;
      } };
      Object.defineProperty(__returned__, "__isScriptSetup", { enumerable: false, value: true });
      return __returned__;
    }
  });
  function _sfc_render$$(_ctx, _cache, $props, $setup, $data, $options) {
    return vue.openBlock(), vue.createElementBlock("div", {
      class: "radio-select",
      onClick: $setup.toggleSelect
    }, [
      !$setup.props.isSelected ? (vue.openBlock(), vue.createElementBlock("div", {
        key: 0,
        class: "radio-no-select"
      })) : (vue.openBlock(), vue.createBlock($setup["Icon"], {
        key: 1,
        file: $setup.radioIcon,
        size: "20px"
      }, null, 8, ["file"]))
    ]);
  }
  const RadioSelect = /* @__PURE__ */ _export_sfc(_sfc_main$10, [["render", _sfc_render$$], ["__scopeId", "data-v-169aff8a"], ["__file", "C:/Users/Administrator/Desktop/Project Folder/ZXHand/ZXHandwritting_APP_uniapp/TUIKit/components/common/RadioSelect/index.vue"]]);
  const loadingIcon = "/assets/loading.2a143778.png";
  const riskImageReplaceUrl = "https://web.sdk.qcloud.com/component/TUIKit/assets/has_risk_default.png";
  const _sfc_main$$ = /* @__PURE__ */ vue.defineComponent({
    __name: "message-bubble",
    props: {
      messageItem: { type: Object, required: true, default: () => ({}) },
      content: { type: null, required: false, default: () => ({}) },
      classNameList: { type: Array, required: false, default: () => [] },
      blinkMessageIDList: { type: Array, required: false, default: () => [] },
      isMultipleSelectMode: { type: Boolean, required: false, default: false },
      isAudioPlayed: { type: Boolean, required: false, skipCheck: true, default: false },
      multipleSelectedMessageIDList: { type: Array, required: false, default: () => [] }
    },
    emits: ["resendMessage", "blinkMessage", "setReadReceiptPanelVisible", "changeSelectMessageIDList", "scrollTo"],
    setup(__props, { expose: __expose, emit: __emit }) {
      __expose();
      const emits2 = __emit;
      const props2 = __props;
      const TYPES2 = Kt.TYPES;
      const needLoadingIconMessageType = [
        TYPES2.MSG_LOCATION,
        TYPES2.MSG_TEXT,
        TYPES2.MSG_CUSTOM,
        TYPES2.MSG_MERGER,
        TYPES2.MSG_FACE
      ];
      const { blinkMessageIDList, messageItem: message2 } = vue.toRefs(props2);
      const isMultipleSelected = vue.computed(() => {
        return props2.multipleSelectedMessageIDList.includes(message2.value.ID);
      });
      const isDisplayUnplayMark = vue.computed(() => {
        return message2.value.flow === "in" && message2.value.status === "success" && message2.value.type === TYPES2.MSG_AUDIO && !props2.isAudioPlayed;
      });
      const containerClassNameList = vue.computed(() => {
        return [
          "message-bubble",
          isMultipleSelected.value ? "multiple-selected" : "",
          ...props2.classNameList
        ];
      });
      const isNoPadding = vue.computed(() => {
        return [TYPES2.MSG_IMAGE, TYPES2.MSG_VIDEO, TYPES2.MSG_MERGER].includes(message2.value.type);
      });
      const riskContentText = vue.computed(() => {
        let content = Jt.t("TUIChat.涉及敏感内容") + ", ";
        if (message2.value.flow === "out") {
          content += Jt.t("TUIChat.发送失败");
        } else {
          content += Jt.t(
            message2.value.type === TYPES2.MSG_AUDIO ? "TUIChat.无法收听" : "TUIChat.无法查看"
          );
        }
        return content;
      });
      const isBlink = vue.computed(() => {
        var _a, _b;
        if ((_a = message2.value) == null ? void 0 : _a.ID) {
          return (_b = blinkMessageIDList == null ? void 0 : blinkMessageIDList.value) == null ? void 0 : _b.includes(message2.value.ID);
        }
        return false;
      });
      function toggleMultipleSelect(isSelected) {
        emits2("changeSelectMessageIDList", {
          type: isSelected ? "add" : "remove",
          messageID: message2.value.ID
        });
      }
      function resendMessage() {
        var _a;
        if (!((_a = message2.value) == null ? void 0 : _a.hasRiskContent)) {
          emits2("resendMessage");
        }
      }
      function blinkMessage(messageID) {
        emits2("blinkMessage", messageID);
      }
      function scrollTo(scrollHeight) {
        emits2("scrollTo", scrollHeight);
      }
      function openReadUserPanel() {
        emits2("setReadReceiptPanelVisible", true, message2.value);
      }
      const __returned__ = { emits: emits2, props: props2, TYPES: TYPES2, riskImageReplaceUrl, needLoadingIconMessageType, blinkMessageIDList, message: message2, isMultipleSelected, isDisplayUnplayMark, containerClassNameList, isNoPadding, riskContentText, isBlink, toggleMultipleSelect, resendMessage, blinkMessage, scrollTo, openReadUserPanel, Icon: Icon$1, ReadStatus, MessageQuote: MessageQuote$1, Avatar, MessageTranslate, MessageConvert, RadioSelect, get loadingIcon() {
        return loadingIcon;
      }, get shallowCopyMessage() {
        return shallowCopyMessage;
      }, get isPC() {
        return isPC;
      } };
      Object.defineProperty(__returned__, "__isScriptSetup", { enumerable: false, value: true });
      return __returned__;
    }
  });
  function _sfc_render$_(_ctx, _cache, $props, $setup, $data, $options) {
    return vue.openBlock(), vue.createElementBlock(
      "div",
      {
        class: vue.normalizeClass($setup.containerClassNameList)
      },
      [
        vue.createCommentVNode(" multiple select radio "),
        $setup.props.isMultipleSelectMode ? (vue.openBlock(), vue.createBlock($setup["RadioSelect"], {
          key: 0,
          class: "multiple-select-radio",
          isSelected: $setup.isMultipleSelected,
          onOnChange: $setup.toggleMultipleSelect
        }, null, 8, ["isSelected"])) : vue.createCommentVNode("v-if", true),
        vue.createElementVNode(
          "div",
          {
            class: vue.normalizeClass({
              "control-reverse": $setup.message.flow === "out"
            })
          },
          [
            vue.createCommentVNode(" message-bubble-container "),
            vue.createElementVNode("div", { class: "message-bubble-content" }, [
              vue.createElementVNode(
                "div",
                {
                  class: vue.normalizeClass(["message-bubble-main-content", [$setup.message.flow === "in" ? "" : "reverse"]])
                },
                [
                  vue.createVNode($setup["Avatar"], {
                    useSkeletonAnimation: "",
                    url: $setup.message.avatar || "",
                    style: { flex: "0 0 auto" }
                  }, null, 8, ["url"]),
                  vue.createElementVNode("main", {
                    class: "message-body",
                    onClick: _cache[1] || (_cache[1] = vue.withModifiers(() => {
                    }, ["stop"]))
                  }, [
                    $setup.message.flow === "in" && $setup.message.conversationType === "GROUP" ? (vue.openBlock(), vue.createElementBlock(
                      "div",
                      {
                        key: 0,
                        class: "message-body-nick-name"
                      },
                      vue.toDisplayString($setup.props.content.showName),
                      1
                      /* TEXT */
                    )) : vue.createCommentVNode("v-if", true),
                    vue.createElementVNode(
                      "div",
                      {
                        class: vue.normalizeClass(["message-body-main", $setup.message.flow === "out" && "message-body-main-reverse"])
                      },
                      [
                        vue.createElementVNode(
                          "div",
                          {
                            class: vue.normalizeClass([
                              "blink",
                              "message-body-content",
                              $setup.message.flow === "out" ? "content-out" : "content-in",
                              $setup.message.hasRiskContent && "content-has-risk",
                              $setup.isNoPadding ? "content-no-padding" : "",
                              $setup.isNoPadding && $setup.isBlink ? "blink-shadow" : "",
                              !$setup.isNoPadding && $setup.isBlink ? "blink-content" : ""
                            ])
                          },
                          [
                            vue.createElementVNode("div", { class: "content-main" }, [
                              ($setup.message.type === $setup.TYPES.MSG_IMAGE || $setup.message.type === $setup.TYPES.MSG_VIDEO) && $setup.message.hasRiskContent ? (vue.openBlock(), vue.createElementBlock(
                                "img",
                                {
                                  key: 0,
                                  class: vue.normalizeClass(["message-risk-replace", !$setup.isPC && "message-risk-replace-h5"]),
                                  src: $setup.riskImageReplaceUrl
                                },
                                null,
                                2
                                /* CLASS */
                              )) : vue.renderSlot(_ctx.$slots, "default", { key: 1 }, void 0, true)
                            ]),
                            vue.createCommentVNode(" Risk Content Tips "),
                            $setup.message.hasRiskContent ? (vue.openBlock(), vue.createElementBlock(
                              "div",
                              {
                                key: 0,
                                class: "content-has-risk-tips"
                              },
                              vue.toDisplayString($setup.riskContentText),
                              1
                              /* TEXT */
                            )) : vue.createCommentVNode("v-if", true)
                          ],
                          2
                          /* CLASS */
                        ),
                        vue.createCommentVNode(" audio unplay mark "),
                        $setup.isDisplayUnplayMark ? (vue.openBlock(), vue.createElementBlock("div", {
                          key: 0,
                          class: "audio-unplay-mark"
                        })) : vue.createCommentVNode("v-if", true),
                        vue.createCommentVNode(" Fail Icon "),
                        $setup.message.status === "fail" || $setup.message.hasRiskContent ? (vue.openBlock(), vue.createElementBlock("div", {
                          key: 1,
                          class: "message-label fail",
                          onClick: _cache[0] || (_cache[0] = ($event) => $setup.resendMessage())
                        }, " ! ")) : vue.createCommentVNode("v-if", true),
                        vue.createCommentVNode(" Loading Icon "),
                        $setup.message.status === "unSend" && $setup.needLoadingIconMessageType.includes($setup.message.type) ? (vue.openBlock(), vue.createBlock($setup["Icon"], {
                          key: 2,
                          class: "message-label loading-circle",
                          file: $setup.loadingIcon,
                          width: "15px",
                          height: "15px"
                        }, null, 8, ["file"])) : vue.createCommentVNode("v-if", true),
                        vue.createCommentVNode(" Read & Unread "),
                        vue.createVNode($setup["ReadStatus"], {
                          class: "message-label align-self-bottom",
                          message: $setup.shallowCopyMessage($setup.message),
                          onOpenReadUserPanel: $setup.openReadUserPanel
                        }, null, 8, ["message"])
                      ],
                      2
                      /* CLASS */
                    )
                  ])
                ],
                2
                /* CLASS */
              ),
              vue.createCommentVNode(" message extra area "),
              vue.createElementVNode("div", { class: "message-bubble-extra-content" }, [
                vue.createCommentVNode(" extra: message translation "),
                vue.createVNode($setup["MessageTranslate"], {
                  class: vue.normalizeClass($setup.message.flow === "out" ? "reverse" : "flex-row"),
                  message: $setup.message
                }, null, 8, ["class", "message"]),
                vue.createCommentVNode(" extra: message convert voice to text "),
                vue.createVNode($setup["MessageConvert"], {
                  class: vue.normalizeClass($setup.message.flow === "out" ? "reverse" : "flex-row"),
                  message: $setup.message
                }, null, 8, ["class", "message"]),
                vue.createCommentVNode(" extra: message quote "),
                vue.createVNode($setup["MessageQuote"], {
                  class: vue.normalizeClass($setup.message.flow === "out" ? "reverse" : "flex-row"),
                  message: $setup.message,
                  onBlinkMessage: $setup.blinkMessage,
                  onScrollTo: $setup.scrollTo
                }, null, 8, ["class", "message"])
              ])
            ])
          ],
          2
          /* CLASS */
        )
      ],
      2
      /* CLASS */
    );
  }
  const MessageBubble = /* @__PURE__ */ _export_sfc(_sfc_main$$, [["render", _sfc_render$_], ["__scopeId", "data-v-51fb22b7"], ["__file", "C:/Users/Administrator/Desktop/Project Folder/ZXHand/ZXHandwritting_APP_uniapp/TUIKit/components/TUIChat/message-list/message-elements/message-bubble.vue"]]);
  const _sfc_main$_ = /* @__PURE__ */ vue.defineComponent({
    __name: "message-location",
    props: {
      content: {
        type: Object,
        default: () => ({})
      }
    },
    setup(__props, { expose: __expose }) {
      __expose();
      const props2 = __props;
      const data = vue.ref();
      vue.watchEffect(() => {
        data.value = props2.content;
      });
      const __returned__ = { props: props2, data };
      Object.defineProperty(__returned__, "__isScriptSetup", { enumerable: false, value: true });
      return __returned__;
    }
  });
  function _sfc_render$Z(_ctx, _cache, $props, $setup, $data, $options) {
    return vue.openBlock(), vue.createElementBlock("a", {
      class: "message-location",
      href: $setup.data.href,
      target: "_blank",
      title: "点击查看详情"
    }, [
      vue.createElementVNode(
        "span",
        { class: "el-icon-location-outline" },
        vue.toDisplayString($setup.data.description),
        1
        /* TEXT */
      ),
      vue.createElementVNode("img", {
        src: $setup.data.url
      }, null, 8, ["src"])
    ], 8, ["href"]);
  }
  const MessageLocation = /* @__PURE__ */ _export_sfc(_sfc_main$_, [["render", _sfc_render$Z], ["__scopeId", "data-v-4337995a"], ["__file", "C:/Users/Administrator/Desktop/Project Folder/ZXHand/ZXHandwritting_APP_uniapp/TUIKit/components/TUIChat/message-list/message-elements/message-location.vue"]]);
  const _sfc_main$Z = /* @__PURE__ */ vue.defineComponent({
    __name: "message-timestamp",
    props: {
      currTime: {
        type: Number,
        default: 0
      },
      prevTime: {
        type: Number,
        default: 0
      }
    },
    setup(__props, { expose: __expose }) {
      __expose();
      const props2 = __props;
      const { currTime, prevTime } = vue.toRefs(props2);
      const timestampShowFlag = vue.ref(false);
      const timestampShowContent = vue.ref("");
      const handleItemTime = (currTime2, prevTime2) => {
        timestampShowFlag.value = false;
        if (currTime2 <= 0) {
          return "";
        } else if (!prevTime2 || prevTime2 <= 0) {
          timestampShowFlag.value = true;
          return calculateTimestamp(currTime2 * 1e3);
        } else {
          const minDiffToShow = 10 * 60;
          const diff = currTime2 - prevTime2;
          if (diff >= minDiffToShow) {
            timestampShowFlag.value = true;
            return calculateTimestamp(currTime2 * 1e3);
          }
        }
        return "";
      };
      vue.watch(
        () => [currTime.value, prevTime.value],
        (newVal, oldVal) => {
          if ((newVal == null ? void 0 : newVal.toString()) === (oldVal == null ? void 0 : oldVal.toString())) {
            return;
          } else {
            timestampShowContent.value = handleItemTime(
              currTime.value,
              prevTime.value
            );
          }
        },
        {
          immediate: true
        }
      );
      const __returned__ = { props: props2, currTime, prevTime, timestampShowFlag, timestampShowContent, handleItemTime };
      Object.defineProperty(__returned__, "__isScriptSetup", { enumerable: false, value: true });
      return __returned__;
    }
  });
  function _sfc_render$Y(_ctx, _cache, $props, $setup, $data, $options) {
    return $setup.timestampShowFlag ? (vue.openBlock(), vue.createElementBlock(
      "div",
      {
        key: 0,
        class: "message-timestamp"
      },
      vue.toDisplayString($setup.timestampShowContent),
      1
      /* TEXT */
    )) : vue.createCommentVNode("v-if", true);
  }
  const MessageTimestamp = /* @__PURE__ */ _export_sfc(_sfc_main$Z, [["render", _sfc_render$Y], ["__scopeId", "data-v-2f98379f"], ["__file", "C:/Users/Administrator/Desktop/Project Folder/ZXHand/ZXHandwritting_APP_uniapp/TUIKit/components/TUIChat/message-list/message-elements/message-timestamp.vue"]]);
  const _sfc_main$Y = /* @__PURE__ */ vue.defineComponent({
    __name: "message-video",
    props: {
      content: { type: Object, required: true, default: () => ({}) },
      messageItem: { type: Object, required: true, default: () => ({}) }
    },
    setup(__props, { expose: __expose }) {
      __expose();
      const props2 = __props;
      function handlerVideoPlay() {
        const encodedUrl = encodeURIComponent(props2.content.url);
        uni.navigateTo({
          url: `/TUIKit/components/TUIChat/video-play?videoUrl=${encodedUrl}`
        });
      }
      const __returned__ = { props: props2, handlerVideoPlay, Icon: Icon$1, get playIcon() {
        return playIcon;
      } };
      Object.defineProperty(__returned__, "__isScriptSetup", { enumerable: false, value: true });
      return __returned__;
    }
  });
  function _sfc_render$X(_ctx, _cache, $props, $setup, $data, $options) {
    return vue.openBlock(), vue.createElementBlock("div", { class: "message-video" }, [
      vue.createElementVNode("div", {
        class: "message-video-box",
        onClick: $setup.handlerVideoPlay
      }, [
        vue.createElementVNode("image", {
          src: $setup.props.content.snapshotUrl,
          class: "message-video-box"
        }, null, 8, ["src"]),
        $setup.props.messageItem.status === "success" || $setup.props.messageItem.progress === 1 ? (vue.openBlock(), vue.createBlock($setup["Icon"], {
          key: 0,
          class: "video-play",
          file: $setup.playIcon
        }, null, 8, ["file"])) : vue.createCommentVNode("v-if", true)
      ])
    ]);
  }
  const MessageVideo = /* @__PURE__ */ _export_sfc(_sfc_main$Y, [["render", _sfc_render$X], ["__scopeId", "data-v-c500d966"], ["__file", "C:/Users/Administrator/Desktop/Project Folder/ZXHand/ZXHandwritting_APP_uniapp/TUIKit/components/TUIChat/message-list/message-elements/message-video.vue"]]);
  const delIcon$1 = "/assets/msg-del.8e1884b8.svg";
  const copyIcon = "/assets/msg-copy.91b797d7.svg";
  const quoteIcon = "/assets/msg-quote.6ed4649b.svg";
  const revokeIcon = "/assets/msg-revoke.a0b46d31.svg";
  const forwardIcon = "/assets/msg-forward.b9d14da1.svg";
  const translateIcon = "/assets/translate.a0cfa550.svg";
  const multipleSelectIcon = "/assets/multiple-select.63011d60.svg";
  const convertText = "/assets/convertText_zh.ea05cc29.svg";
  const _sfc_main$X = /* @__PURE__ */ vue.defineComponent({
    __name: "index",
    props: {
      messageItem: { type: Object, required: true, default: () => ({}) },
      isMultipleSelectMode: { type: Boolean, required: true, default: false }
    },
    emits: ["toggleMultipleSelectMode"],
    setup(__props, { expose: __expose, emit: __emit }) {
      const emits2 = __emit;
      const props2 = __props;
      const featureConfig = ChatConfig.getFeatureConfig();
      const TYPES2 = Kt.TYPES;
      const actionItems = vue.ref([
        {
          key: "open",
          text: Jt.t("TUIChat.打开"),
          iconUrl: copyIcon,
          renderCondition() {
            var _a;
            if (!featureConfig.DownloadFile || !message2.value)
              return false;
            return isPC && (((_a = message2.value) == null ? void 0 : _a.type) === TYPES2.MSG_FILE || message2.value.type === TYPES2.MSG_VIDEO || message2.value.type === TYPES2.MSG_IMAGE);
          },
          clickEvent: openMessage
        },
        {
          key: "copy",
          text: Jt.t("TUIChat.复制"),
          iconUrl: copyIcon,
          renderCondition() {
            if (!featureConfig.CopyMessage || !message2.value)
              return false;
            return message2.value.type === TYPES2.MSG_TEXT;
          },
          clickEvent: copyMessage
        },
        {
          key: "revoke",
          text: Jt.t("TUIChat.撤回"),
          iconUrl: revokeIcon,
          renderCondition() {
            if (!featureConfig.RevokeMessage || !message2.value)
              return false;
            return message2.value.flow === "out" && message2.value.status === "success";
          },
          clickEvent: revokeMessage
        },
        {
          key: "delete",
          text: Jt.t("TUIChat.删除"),
          iconUrl: delIcon$1,
          renderCondition() {
            if (!featureConfig.DeleteMessage || !message2.value)
              return false;
            return message2.value.status === "success";
          },
          clickEvent: deleteMessage
        },
        {
          key: "forward",
          text: Jt.t("TUIChat.转发"),
          iconUrl: forwardIcon,
          renderCondition() {
            if (!featureConfig.ForwardMessage || !message2.value)
              return false;
            return message2.value.status === "success";
          },
          clickEvent: forwardSingleMessage
        },
        {
          key: "quote",
          text: Jt.t("TUIChat.引用"),
          iconUrl: quoteIcon,
          renderCondition() {
            if (!featureConfig.QuoteMessage || !message2.value)
              return false;
            const _message = zt.getMessageModel(message2.value.ID);
            return message2.value.status === "success" && !_message.getSignalingInfo();
          },
          clickEvent: quoteMessage
        },
        {
          key: "translate",
          text: Jt.t("TUIChat.翻译"),
          visible: false,
          iconUrl: translateIcon,
          renderCondition() {
            if (!featureConfig.TranslateMessage || !message2.value)
              return false;
            return message2.value.status === "success" && message2.value.type === TYPES2.MSG_TEXT;
          },
          clickEvent: translateMessage
        },
        {
          key: "convert",
          text: Jt.t("TUIChat.转文字"),
          visible: false,
          iconUrl: convertText,
          renderCondition() {
            if (!featureConfig.VoiceToText || !message2.value)
              return false;
            return message2.value.status === "success" && message2.value.type === TYPES2.MSG_AUDIO;
          },
          clickEvent: convertVoiceToText
        },
        {
          key: "multi-select",
          text: Jt.t("TUIChat.多选"),
          iconUrl: multipleSelectIcon,
          renderCondition() {
            if (!featureConfig.MultiSelection || !message2.value)
              return false;
            return message2.value.status === "success";
          },
          clickEvent: multipleSelectMessage
        }
      ]);
      const message2 = vue.ref();
      const messageToolDom = vue.ref();
      vue.onMounted(() => {
        zt.watch(o$2.CHAT, {
          translateTextInfo: onMessageTranslationInfoUpdated,
          voiceToTextInfo: onMessageConvertInfoUpdated
        });
      });
      vue.onUnmounted(() => {
        zt.unwatch(o$2.CHAT, {
          translateTextInfo: onMessageTranslationInfoUpdated,
          voiceToTextInfo: onMessageConvertInfoUpdated
        });
      });
      vue.watchEffect(() => {
        message2.value = zt.getMessageModel(props2.messageItem.ID);
      });
      const isAllActionItemInvalid = vue.computed(() => {
        for (let i2 = 0; i2 < actionItems.value.length; ++i2) {
          if (actionItems.value[i2].renderCondition()) {
            return false;
          }
        }
        return true;
      });
      function getFunction(index2) {
        actionItems.value[index2].clickEvent();
      }
      function openMessage() {
        var _a;
        let url2 = "";
        switch ((_a = message2.value) == null ? void 0 : _a.type) {
          case Kt.TYPES.MSG_FILE:
            url2 = message2.value.payload.fileUrl;
            break;
          case Kt.TYPES.MSG_VIDEO:
            url2 = message2.value.payload.remoteVideoUrl;
            break;
          case Kt.TYPES.MSG_IMAGE:
            url2 = message2.value.payload.imageInfoArray[0].url;
            break;
        }
        window == null ? void 0 : window.open(url2, "_blank");
      }
      function revokeMessage() {
        if (!message2.value)
          return;
        const messageModel = zt.getMessageModel(message2.value.ID);
        messageModel.revokeMessage().then(() => {
          enableSampleTaskStatus("revokeMessage");
        }).catch((error2) => {
          if (error2.code === 20016 || error2.code === 10031) {
            const message22 = Jt.t("TUIChat.已过撤回时限");
            Toast({
              message: message22,
              type: TOAST_TYPE.ERROR
            });
          }
        });
      }
      function deleteMessage() {
        if (!message2.value)
          return;
        const messageModel = zt.getMessageModel(message2.value.ID);
        messageModel.deleteMessage();
      }
      async function copyMessage() {
        var _a, _b;
        if (isUniFrameWork) {
          i == null ? void 0 : i.setClipboardData({
            data: transformTextWithKeysToEmojiNames((_b = (_a = message2.value) == null ? void 0 : _a.payload) == null ? void 0 : _b.text)
          });
        }
      }
      function beforeCopy(key) {
        if (key !== "copy" || isH5) {
          return;
        }
      }
      function forwardSingleMessage() {
        if (!message2.value)
          return;
        zt.update(o$2.CUSTOM, "singleForwardMessageID", message2.value.ID);
      }
      function quoteMessage() {
        if (!message2.value)
          return;
        message2.value.quoteMessage();
      }
      function translateMessage() {
        const enable = zt.getData(o$2.APP, "enabledTranslationPlugin");
        if (!enable) {
          Toast({
            message: Jt.t("TUIChat.请开通翻译功能"),
            type: TOAST_TYPE.WARNING
          });
          return;
        }
        if (!message2.value)
          return;
        const index2 = actionItems.value.findIndex((item) => item.key === "translate");
        zt.update(o$2.CHAT, "translateTextInfo", {
          conversationID: message2.value.conversationID,
          messageID: message2.value.ID,
          visible: !actionItems.value[index2].visible
        });
      }
      function convertVoiceToText() {
        const enable = zt.getData(o$2.APP, "enabledVoiceToText");
        if (!enable) {
          Toast({
            message: Jt.t("TUIChat.请开通语音转文字功能")
          });
          return;
        }
        if (!message2.value)
          return;
        const index2 = actionItems.value.findIndex((item) => item.key === "convert");
        zt.update(o$2.CHAT, "voiceToTextInfo", {
          conversationID: message2.value.conversationID,
          messageID: message2.value.ID,
          visible: !actionItems.value[index2].visible
        });
      }
      function multipleSelectMessage() {
        emits2("toggleMultipleSelectMode");
      }
      function onMessageTranslationInfoUpdated(info) {
        if (info === void 0)
          return;
        const translationInfoList = info.get(props2.messageItem.conversationID) || [];
        const idx = actionItems.value.findIndex((item) => item.key === "translate");
        for (let i2 = 0; i2 < translationInfoList.length; ++i2) {
          const { messageID, visible } = translationInfoList[i2];
          if (messageID === props2.messageItem.ID) {
            actionItems.value[idx].text = Jt.t(visible ? "TUIChat.隐藏" : "TUIChat.翻译");
            actionItems.value[idx].visible = !!visible;
            return;
          }
        }
        actionItems.value[idx].text = Jt.t("TUIChat.翻译");
      }
      function onMessageConvertInfoUpdated(info) {
        if (info === void 0)
          return;
        const convertInfoList = info.get(props2.messageItem.conversationID) || [];
        const idx = actionItems.value.findIndex((item) => item.key === "convert");
        for (let i2 = 0; i2 < convertInfoList.length; ++i2) {
          const { messageID, visible } = convertInfoList[i2];
          if (messageID === props2.messageItem.ID) {
            actionItems.value[idx].text = Jt.t(visible ? "TUIChat.隐藏" : "TUIChat.转文字");
            actionItems.value[idx].visible = !!visible;
            return;
          }
        }
        actionItems.value[idx].text = Jt.t("TUIChat.转文字");
      }
      __expose({
        messageToolDom
      });
      const __returned__ = { emits: emits2, props: props2, featureConfig, TYPES: TYPES2, actionItems, message: message2, messageToolDom, isAllActionItemInvalid, getFunction, openMessage, revokeMessage, deleteMessage, copyMessage, beforeCopy, forwardSingleMessage, quoteMessage, translateMessage, convertVoiceToText, multipleSelectMessage, onMessageTranslationInfoUpdated, onMessageConvertInfoUpdated, Icon: Icon$1, get isPC() {
        return isPC;
      } };
      Object.defineProperty(__returned__, "__isScriptSetup", { enumerable: false, value: true });
      return __returned__;
    }
  });
  function _sfc_render$W(_ctx, _cache, $props, $setup, $data, $options) {
    return !$setup.isAllActionItemInvalid && !$props.messageItem.hasRiskContent ? (vue.openBlock(), vue.createElementBlock(
      "div",
      {
        key: 0,
        ref: "messageToolDom",
        class: vue.normalizeClass(["dialog-item", !$setup.isPC ? "dialog-item-h5" : "dialog-item-web"])
      },
      [
        $setup.featureConfig.EmojiReaction ? vue.renderSlot(_ctx.$slots, "TUIEmojiPlugin", { key: 0 }, void 0, true) : vue.createCommentVNode("v-if", true),
        vue.createElementVNode(
          "div",
          {
            class: vue.normalizeClass(["dialog-item-list", !$setup.isPC ? "dialog-item-list-h5" : "dialog-item-list-web"])
          },
          [
            (vue.openBlock(true), vue.createElementBlock(
              vue.Fragment,
              null,
              vue.renderList($setup.actionItems, (item, index2) => {
                return vue.openBlock(), vue.createElementBlock(
                  vue.Fragment,
                  null,
                  [
                    item.renderCondition() ? (vue.openBlock(), vue.createElementBlock("div", {
                      key: item.key,
                      class: "list-item",
                      onClick: ($event) => $setup.getFunction(index2),
                      onMousedown: ($event) => $setup.beforeCopy(item.key)
                    }, [
                      vue.createVNode($setup["Icon"], {
                        file: item.iconUrl,
                        size: "15px"
                      }, null, 8, ["file"]),
                      vue.createElementVNode(
                        "span",
                        { class: "list-item-text" },
                        vue.toDisplayString(item.text),
                        1
                        /* TEXT */
                      )
                    ], 40, ["onClick", "onMousedown"])) : vue.createCommentVNode("v-if", true)
                  ],
                  64
                  /* STABLE_FRAGMENT */
                );
              }),
              256
              /* UNKEYED_FRAGMENT */
            ))
          ],
          2
          /* CLASS */
        )
      ],
      2
      /* CLASS */
    )) : vue.createCommentVNode("v-if", true);
  }
  const MessageTool = /* @__PURE__ */ _export_sfc(_sfc_main$X, [["render", _sfc_render$W], ["__scopeId", "data-v-a62b3471"], ["__file", "C:/Users/Administrator/Desktop/Project Folder/ZXHand/ZXHandwritting_APP_uniapp/TUIKit/components/TUIChat/message-list/message-tool/index.vue"]]);
  const _sfc_main$W = /* @__PURE__ */ vue.defineComponent({
    __name: "message-revoked",
    props: {
      isEdit: {
        type: Boolean,
        default: () => false
      },
      messageItem: {
        type: Object,
        default: () => ({})
      }
    },
    emits: ["messageEdit"],
    setup(__props, { expose: __expose, emit: __emit }) {
      __expose();
      const props2 = __props;
      const message2 = vue.ref();
      const isEditMsg = vue.ref(false);
      const emits2 = __emit;
      vue.watchEffect(() => {
        message2.value = props2.messageItem;
        isEditMsg.value = props2.isEdit;
      });
      const messageEdit = () => {
        emits2("messageEdit");
      };
      const __returned__ = { props: props2, message: message2, isEditMsg, emits: emits2, messageEdit, get TUITranslateService() {
        return Jt;
      } };
      Object.defineProperty(__returned__, "__isScriptSetup", { enumerable: false, value: true });
      return __returned__;
    }
  });
  function _sfc_render$V(_ctx, _cache, $props, $setup, $data, $options) {
    return vue.openBlock(), vue.createElementBlock("div", { class: "revoke" }, [
      $setup.message.flow === "in" ? (vue.openBlock(), vue.createElementBlock(
        "span",
        { key: 0 },
        vue.toDisplayString($setup.message.nick || $setup.message.from),
        1
        /* TEXT */
      )) : $setup.message.from === $setup.message.revoker ? (vue.openBlock(), vue.createElementBlock(
        "span",
        { key: 1 },
        vue.toDisplayString($setup.TUITranslateService.t("TUIChat.您")),
        1
        /* TEXT */
      )) : (vue.openBlock(), vue.createElementBlock(
        "span",
        { key: 2 },
        vue.toDisplayString($setup.message.revoker),
        1
        /* TEXT */
      )),
      vue.createElementVNode(
        "span",
        null,
        vue.toDisplayString($setup.TUITranslateService.t("TUIChat.撤回了一条消息")),
        1
        /* TEXT */
      ),
      $setup.message.flow === "out" && $setup.isEditMsg ? (vue.openBlock(), vue.createElementBlock(
        "span",
        {
          key: 3,
          class: "edit",
          onClick: $setup.messageEdit
        },
        vue.toDisplayString($setup.TUITranslateService.t("TUIChat.重新编辑")),
        1
        /* TEXT */
      )) : vue.createCommentVNode("v-if", true)
    ]);
  }
  const MessageRevoked = /* @__PURE__ */ _export_sfc(_sfc_main$W, [["render", _sfc_render$V], ["__scopeId", "data-v-e1a956f2"], ["__file", "C:/Users/Administrator/Desktop/Project Folder/ZXHand/ZXHandwritting_APP_uniapp/TUIKit/components/TUIChat/message-list/message-tool/message-revoked.vue"]]);
  const CUSTOM_MESSAGE_SRC = {
    // 公众号
    OFFICIAL_ACCOUNT: "1",
    // 小程序
    MINI_APP: "2",
    // 小程序服务号
    MINI_APP_SERVICE_ACCOUNT: "3",
    // 后台内部
    BACKEND_INTERNAL: "4",
    // 网页
    WEB: "5",
    // 会话消息分割
    SESSION_MESSAGE_SLICE: "6",
    // 小程序自动触发
    MINI_APP_AUTO: "7",
    // 内部会话
    INTERNAL: "8",
    // 菜单消息
    MENU: "9",
    // 菜单选择
    MENU_SELECTED: "10",
    // 客户端在线状态
    CLIENT_STATE: "11",
    // 输入状态
    TYPING_STATE: "12",
    // 文本机器人
    ROBOT: "13",
    // 分支消息
    BRANCH: "15",
    // 分支消息, 兼容后台返回数据
    BRANCH_NUMBER: 15,
    MEMBER: "17",
    // 没有客服在线
    NO_SEAT_ONLINE: "18",
    // 会话结束
    END: "19",
    // 超时结束
    TIMEOUT: "20",
    //
    FROM_INPUT: "21",
    // 卡片
    PRODUCT_CARD: "22",
    //
    SATISFACTION_CON: "23",
    //
    USER_SATISFACTION: "24"
  };
  const RATING_TEMPLATE_TYPE = {
    // 星星
    STAR: 1,
    // 数字
    NUMBER: 2
  };
  const TYPES = {
    MSG_CUSTOM: "TIMCustomElem"
  };
  function isJSON(str) {
    if (typeof str === "string") {
      try {
        const data = JSON.parse(str);
        if (data) {
          return true;
        }
        return false;
      } catch (error2) {
        return false;
      }
    }
    return false;
  }
  function JSONToObject(str) {
    if (!isJSON(str)) {
      return str;
    }
    return JSON.parse(str);
  }
  function isCustomerServiceMessage(message2) {
    var _a;
    const customerServicePayload = JSONToObject((_a = message2 == null ? void 0 : message2.payload) == null ? void 0 : _a.data);
    return Number(customerServicePayload == null ? void 0 : customerServicePayload.customerServicePlugin) === 0 || Number(customerServicePayload == null ? void 0 : customerServicePayload.chatbotPlugin) === 1;
  }
  const isMessageRating = (message2) => {
    var _a;
    const customerServicePayload = JSONToObject((_a = message2 == null ? void 0 : message2.payload) == null ? void 0 : _a.data);
    return isCustomerServiceMessage(message2) && customerServicePayload.src === CUSTOM_MESSAGE_SRC.MENU;
  };
  const isMessageInvisible = (message2) => {
    var _a, _b;
    const customerServicePayload = JSONToObject((_a = message2 == null ? void 0 : message2.payload) == null ? void 0 : _a.data);
    const robotCommandArray = ["feedback", "updateBotStatus"];
    const whiteList = [
      CUSTOM_MESSAGE_SRC.MENU,
      CUSTOM_MESSAGE_SRC.BRANCH,
      CUSTOM_MESSAGE_SRC.BRANCH_NUMBER,
      CUSTOM_MESSAGE_SRC.FROM_INPUT,
      CUSTOM_MESSAGE_SRC.PRODUCT_CARD
    ];
    const isCustomerMessage = (message2 == null ? void 0 : message2.type) === TYPES.MSG_CUSTOM;
    const isExistWhiteList = whiteList.includes(customerServicePayload == null ? void 0 : customerServicePayload.src);
    const isRobot = (customerServicePayload == null ? void 0 : customerServicePayload.src) === CUSTOM_MESSAGE_SRC.ROBOT && robotCommandArray.indexOf((_b = customerServicePayload == null ? void 0 : customerServicePayload.content) == null ? void 0 : _b.command) !== -1;
    return isCustomerMessage && (!isExistWhiteList || isRobot);
  };
  let TUICustomerServer$1 = (_u = class {
    constructor() {
      __publicField(this, "customerServiceAccounts");
      formatAppLog("log", "at TUIKit/tui-customer-service-plugin/server.ts:12", "TUICustomerServer.init ok");
      R$1.registerService(E$1.TUICustomerServicePlugin.SERVICE.NAME, this);
      R$1.registerExtension(E$1.TUIContact.EXTENSION.CONTACT_LIST.EXT_ID, this);
      this.customerServiceAccounts = ["@im_agent#online_shopping_mall", "@im_agent#online_doctor"];
    }
    static getInstance() {
      if (!_u.instance) {
        _u.instance = new _u();
      }
      return _u.instance;
    }
    // 设置 客服号
    setCustomerServiceAccounts(accounts) {
      this.customerServiceAccounts = accounts;
    }
    // 获取 客服号
    getCustomerServiceAccounts() {
      return this.customerServiceAccounts;
    }
    // 判断当前会话是不是客服会话
    isCustomerConversation(conversationID) {
      const userID = conversationID && conversationID.slice(3) || "";
      return this.customerServiceAccounts.indexOf(userID) > -1;
    }
    // 判断当前消息是不是客服消息
    isCustomerServicePluginMessage(message2) {
      if (!message2 || !this.isCustomerConversation(message2.conversationID)) {
        return false;
      }
      return isCustomerServiceMessage(message2) || isMessageInvisible(message2);
    }
    onGetExtension(extensionID) {
      if (extensionID === E$1.TUIContact.EXTENSION.CONTACT_LIST.EXT_ID) {
        return [
          {
            weight: 0,
            icon: "",
            text: "客服号",
            data: {
              name: "customer",
              accountList: this.customerServiceAccounts
            }
          }
        ];
      }
    }
    onCall(method, params) {
      switch (method) {
        case E$1.TUICustomerServicePlugin.SERVICE.METHOD.ACTIVE_CONVERSATION:
          if (this.isCustomerConversation(params.conversationID)) {
            R$1.callService({
              serviceName: E$1.TUIChat.SERVICE.NAME,
              method: E$1.TUIChat.SERVICE.METHOD.SET_CHAT_TYPE,
              params: { chatType: "customerService" }
            });
            R$1.callService({
              serviceName: E$1.TUIChat.SERVICE.NAME,
              method: E$1.TUIChat.SERVICE.METHOD.SEND_CUSTOM_MESSAGE,
              params: {
                to: params.conversationID.slice(3),
                conversationType: "C2C",
                payload: {
                  data: JSON.stringify({ src: "7" })
                }
              }
            });
          }
          break;
      }
    }
  }, __publicField(_u, "instance"), _u);
  const TUICustomerServer = TUICustomerServer$1.getInstance();
  const isCustomerServicePluginMessage = TUICustomerServer.isCustomerServicePluginMessage.bind(TUICustomerServer);
  TUICustomerServer.setCustomerServiceAccounts.bind(TUICustomerServer);
  TUICustomerServer.getCustomerServiceAccounts.bind(TUICustomerServer);
  function isCallMessage(message2) {
    var _a;
    const payloadData = JSONToObject$1((_a = message2 == null ? void 0 : message2.payload) == null ? void 0 : _a.data);
    if ((payloadData == null ? void 0 : payloadData.businessID) === 1 && (payloadData == null ? void 0 : payloadData.data)) {
      const payloadDataData = JSONToObject$1(payloadData.data);
      if (payloadDataData.businessID === "av_call") {
        return true;
      }
    }
    return false;
  }
  function isRoomSignalingMessage(message2) {
    var _a;
    const payloadData = JSONToObject$1((_a = message2 == null ? void 0 : message2.payload) == null ? void 0 : _a.data);
    return (payloadData == null ? void 0 : payloadData.businessID) === "ROOM_INVITE_ACTION" || (payloadData == null ? void 0 : payloadData.businessID) === "tuikit_engine_room";
  }
  function isRoomCardMessage(message2) {
    var _a;
    const payloadData = JSONToObject$1((_a = message2 == null ? void 0 : message2.payload) == null ? void 0 : _a.data);
    return (payloadData == null ? void 0 : payloadData.businessID) === "group_room_message";
  }
  function isPluginMessage(message2) {
    return message2.type === Kt.TYPES.MSG_CUSTOM && (isCallMessage(message2) || isCustomerServicePluginMessage(message2) || isRoomCardMessage(message2) || isRoomSignalingMessage(message2));
  }
  const _sfc_main$V = /* @__PURE__ */ vue.defineComponent({
    __name: "message-plugin-layout",
    props: {
      message: { type: Object, required: true, default: () => ({}) },
      showStyle: { type: String, required: true, default: "" },
      bubbleClassNameList: { type: Array, required: false, default: () => [] },
      blinkMessageIDList: { type: Array, required: false, default: () => [] }
    },
    emits: ["resendMessage", "handleToggleMessageItem", "handleH5LongPress"],
    setup(__props, { expose: __expose, emit: __emit }) {
      __expose();
      const props2 = __props;
      const emits2 = __emit;
      const messageModel = vue.computed(() => {
        var _a;
        return zt.getMessageModel((_a = props2.message) == null ? void 0 : _a.ID);
      });
      const resendMessage = (message2) => {
        emits2("resendMessage", message2);
      };
      const handleToggleMessageItem = (e2, message2, isLongpress = false) => {
        emits2("handleToggleMessageItem", e2, message2, isLongpress);
      };
      const handleH5LongPress = (e2, message2, type) => {
        emits2("handleH5LongPress", e2, message2, type);
      };
      const __returned__ = { props: props2, emits: emits2, messageModel, resendMessage, handleToggleMessageItem, handleH5LongPress, MessageBubble, get isUniFrameWork() {
        return isUniFrameWork;
      } };
      Object.defineProperty(__returned__, "__isScriptSetup", { enumerable: false, value: true });
      return __returned__;
    }
  });
  function _sfc_render$U(_ctx, _cache, $props, $setup, $data, $options) {
    return vue.openBlock(), vue.createElementBlock("div", { class: "message-plugin" }, [
      vue.createCommentVNode(" The following is displayed in the form of messageTip "),
      $setup.props.showStyle === "tip" ? (vue.openBlock(), vue.createElementBlock("div", {
        key: 0,
        class: "message-plugin-tip"
      }, [
        vue.renderSlot(_ctx.$slots, "messageTip", {}, void 0, true)
      ])) : $setup.props.showStyle === "bubble" ? (vue.openBlock(), vue.createElementBlock(
        vue.Fragment,
        { key: 1 },
        [
          vue.createCommentVNode(" The following is displayed in the form of messageBubble "),
          vue.createElementVNode(
            "div",
            {
              class: "message-plugin-bubble-content",
              onLongpress: _cache[1] || (_cache[1] = ($event) => $setup.handleToggleMessageItem($event, $setup.messageModel, true)),
              onContextmenu: _cache[2] || (_cache[2] = vue.withModifiers(($event) => $setup.handleToggleMessageItem($event, $setup.messageModel), ["prevent", "right"])),
              onTouchstart: _cache[3] || (_cache[3] = ($event) => $setup.handleH5LongPress($event, $setup.messageModel, "touchstart")),
              onTouchend: _cache[4] || (_cache[4] = ($event) => $setup.handleH5LongPress($event, $setup.messageModel, "touchend")),
              onMouseover: _cache[5] || (_cache[5] = ($event) => $setup.handleH5LongPress($event, $setup.messageModel, "touchend"))
            },
            [
              vue.createVNode($setup["MessageBubble"], {
                messageItem: $setup.messageModel,
                content: $setup.messageModel.getMessageContent(),
                blinkMessageIDList: $setup.props.blinkMessageIDList,
                classNameList: $setup.props.bubbleClassNameList,
                onResendMessage: _cache[0] || (_cache[0] = ($event) => $setup.resendMessage($setup.messageModel))
              }, {
                messageElement: vue.withCtx(() => [
                  !$setup.isUniFrameWork ? vue.renderSlot(_ctx.$slots, "messageBubble", { key: 0 }, void 0, true) : vue.createCommentVNode("v-if", true)
                ]),
                default: vue.withCtx(() => [
                  $setup.isUniFrameWork ? vue.renderSlot(_ctx.$slots, "messageBubble", { key: 0 }, void 0, true) : vue.createCommentVNode("v-if", true)
                ]),
                _: 3
                /* FORWARDED */
              }, 8, ["messageItem", "content", "blinkMessageIDList", "classNameList"])
            ],
            32
            /* NEED_HYDRATION */
          )
        ],
        2112
        /* STABLE_FRAGMENT, DEV_ROOT_FRAGMENT */
      )) : vue.createCommentVNode("v-if", true)
    ]);
  }
  const MessagePluginLayout = /* @__PURE__ */ _export_sfc(_sfc_main$V, [["render", _sfc_render$U], ["__scopeId", "data-v-60deb703"], ["__file", "C:/Users/Administrator/Desktop/Project Folder/ZXHand/ZXHandwritting_APP_uniapp/TUIKit/plugins/plugin-components/message-plugin-layout.vue"]]);
  const _sfc_main$U = /* @__PURE__ */ vue.defineComponent({
    __name: "message-call-group",
    props: {
      message: { type: Object, required: true, default: () => ({}) },
      signalingInfo: { type: null, required: true, default: () => ({}) },
      customContent: { type: null, required: true, default: () => ({}) },
      blinkMessageIDList: { type: Array, required: false, default: () => [] }
    },
    setup(__props, { expose: __expose }) {
      __expose();
      const props2 = __props;
      const TYPES2 = Kt.TYPES;
      const isCallMessage2 = vue.computed(() => !!props2.signalingInfo);
      const conversationType = vue.computed(() => {
        var _a;
        return (_a = props2.message) == null ? void 0 : _a.conversationType;
      });
      const custom = vue.computed(() => {
        var _a;
        return (_a = props2.customContent) == null ? void 0 : _a.custom;
      });
      const isBlink = vue.computed(() => {
        var _a, _b;
        if ((_a = props2.message) == null ? void 0 : _a.ID) {
          return (_b = props2.blinkMessageIDList) == null ? void 0 : _b.includes(props2.message.ID);
        }
        return false;
      });
      const __returned__ = { props: props2, TYPES: TYPES2, isCallMessage: isCallMessage2, conversationType, custom, isBlink };
      Object.defineProperty(__returned__, "__isScriptSetup", { enumerable: false, value: true });
      return __returned__;
    }
  });
  function _sfc_render$T(_ctx, _cache, $props, $setup, $data, $options) {
    return $setup.isCallMessage && $setup.conversationType === $setup.TYPES.CONV_GROUP ? (vue.openBlock(), vue.createElementBlock(
      "div",
      {
        key: 0,
        class: vue.normalizeClass({ "blink-text": $setup.isBlink })
      },
      vue.toDisplayString($setup.custom),
      3
      /* TEXT, CLASS */
    )) : vue.createCommentVNode("v-if", true);
  }
  const MessageCallGroup = /* @__PURE__ */ _export_sfc(_sfc_main$U, [["render", _sfc_render$T], ["__scopeId", "data-v-80245e9e"], ["__file", "C:/Users/Administrator/Desktop/Project Folder/ZXHand/ZXHandwritting_APP_uniapp/TUIKit/plugins/plugin-components/message-call/message-call-group.vue"]]);
  const callVideoSVG = "/assets/call-video.6c7799e9.svg";
  const callVoiceSVG = "/assets/call-voice.f8912d47.svg";
  const chatOfflinePushInfo = {
    androidInfo: {
      sound: "private_ring.mp3",
      XiaoMiChannelID: "high_custom_1",
      OPPOChannelID: "tuikit"
    },
    apnsInfo: {
      sound: "01.caf",
      image: "https://web.sdk.qcloud.com/im/demo/latest/faviconnew.png"
    }
  };
  const callOfflinePushInfo = {
    title: "call",
    description: "you have a call",
    androidSound: "private_ring",
    androidOPPOChannelID: "tuikit",
    iOSSound: "01.caf"
  };
  const DEFAULT_DESC = {
    [Kt.TYPES.MSG_TEXT]: "[文本]",
    [Kt.TYPES.MSG_FACE]: "[动画表情]",
    [Kt.TYPES.MSG_IMAGE]: "[图片]",
    [Kt.TYPES.MSG_FILE]: "[文件]",
    [Kt.TYPES.MSG_AUDIO]: "[语音]",
    [Kt.TYPES.MSG_VIDEO]: "[视频]",
    [Kt.TYPES.MSG_LOCATION]: "[地理位置]",
    [Kt.TYPES.MSG_MERGER]: "[聊天记录]",
    [Kt.TYPES.MSG_CUSTOM]: "[自定义消息]"
  };
  var PUSH_SCENE = /* @__PURE__ */ ((PUSH_SCENE2) => {
    PUSH_SCENE2["CHAT"] = "chat";
    PUSH_SCENE2["CALL"] = "call";
    return PUSH_SCENE2;
  })(PUSH_SCENE || {});
  let OfflinePushInfoManager$1 = (_v = class {
    constructor() {
      this.name = "OfflinePushInfoManager";
      this.offlinePushInfo = {};
      this.offlinePushInfo = {
        [PUSH_SCENE.CHAT]: chatOfflinePushInfo,
        [PUSH_SCENE.CALL]: callOfflinePushInfo
      };
    }
    static getInstance() {
      if (!_v.instance) {
        _v.instance = new _v();
      }
      return _v.instance;
    }
    getOfflinePushInfo(scene) {
      if (!Object.values(PUSH_SCENE).includes(scene)) {
        formatAppLog("error", "at TUIKit/components/TUIChat/offlinePushInfoManager/offlinePushInfoManager.ts:32", `${this.name} getOfflinePushInfo scene: ${scene} is invalid`);
        return null;
      }
      return this.offlinePushInfo[scene];
    }
    genTitle(conversation, userInfo) {
      let title = conversation == null ? void 0 : conversation.getShowName();
      if (conversation.type === Kt.TYPES.CONV_C2C) {
        title = (userInfo == null ? void 0 : userInfo.nick) || (userInfo == null ? void 0 : userInfo.userID);
      }
      return title;
    }
    genDesc(messageType, payload) {
      let desc = "";
      if (messageType === Kt.TYPES.MSG_TEXT) {
        desc = transformTextWithKeysToEmojiNames(payload.text);
      }
      if (messageType === Kt.TYPES.MSG_CUSTOM) {
        desc = payload.description;
      }
      return desc || Jt.t(`TUIChat.${DEFAULT_DESC[messageType]}`);
    }
    create(options) {
      var _a;
      const { conversation, messageType = "", payload = {} } = options || {};
      const userInfo = zt.getData(o$2.USER, "userProfile");
      const entity = {
        sender: conversation.type === Kt.TYPES.CONV_GROUP ? (_a = conversation.groupProfile) == null ? void 0 : _a.groupID : userInfo == null ? void 0 : userInfo.userID,
        nickName: userInfo == null ? void 0 : userInfo.nick,
        chatType: conversation.type === Kt.TYPES.CONV_GROUP ? 2 : 1,
        version: 1,
        action: 1
      };
      return {
        title: this.genTitle(conversation, userInfo),
        description: this.genDesc(messageType, payload),
        extension: JSON.stringify({ entity }),
        ...this.offlinePushInfo[PUSH_SCENE.CHAT]
      };
    }
  }, _v.instance = null, _v);
  const OfflinePushInfoManager = OfflinePushInfoManager$1.getInstance();
  const _sfc_main$T = /* @__PURE__ */ vue.defineComponent({
    __name: "message-call-c2c",
    props: {
      message: {
        type: Object,
        default: () => ({})
      },
      signalingInfo: {
        type: Object,
        default: () => ({})
      },
      customContent: {
        type: Object,
        default: () => ({})
      }
    },
    setup(__props, { expose: __expose }) {
      __expose();
      const props2 = __props;
      const TYPES2 = vue.ref(Kt.TYPES);
      const isCallMessage2 = vue.computed(() => props2.signalingInfo != null);
      const callInfo = vue.computed(() => {
        var _a, _b;
        const callType = (_b = JSONToObject$1((_a = props2.signalingInfo) == null ? void 0 : _a.data)) == null ? void 0 : _b.call_type;
        switch (callType) {
          case 1:
            return {
              type: 1,
              icon: callVoiceSVG
            };
          case 2:
            return {
              type: 2,
              icon: callVideoSVG
            };
        }
        return {
          type: 0,
          icon: ""
        };
      });
      const conversationType = vue.computed(() => {
        var _a;
        return (_a = props2.message) == null ? void 0 : _a.conversationType;
      });
      const custom = vue.computed(() => {
        var _a;
        return (_a = props2.customContent) == null ? void 0 : _a.custom;
      });
      const callAgain = () => {
        var _a, _b, _c, _d;
        if (conversationType.value === Kt.TYPES.CONV_C2C) {
          const userID = ((_a = props2.message) == null ? void 0 : _a.flow) === "out" ? (_b = props2.message) == null ? void 0 : _b.to : (_c = props2.message) == null ? void 0 : _c.from;
          R$1.callService({
            serviceName: E$1.TUICalling.SERVICE.NAME,
            method: E$1.TUICalling.SERVICE.METHOD.START_CALL,
            params: {
              userIDList: [userID],
              type: (_d = callInfo == null ? void 0 : callInfo.value) == null ? void 0 : _d.type,
              callParams: {
                offlinePushInfo: OfflinePushInfoManager.getOfflinePushInfo(PUSH_SCENE.CALL)
              }
            }
          });
        }
      };
      const __returned__ = { props: props2, TYPES: TYPES2, isCallMessage: isCallMessage2, callInfo, conversationType, custom, callAgain, Icon: Icon$1 };
      Object.defineProperty(__returned__, "__isScriptSetup", { enumerable: false, value: true });
      return __returned__;
    }
  });
  function _sfc_render$S(_ctx, _cache, $props, $setup, $data, $options) {
    return $setup.isCallMessage && $setup.conversationType === $setup.TYPES.CONV_C2C ? (vue.openBlock(), vue.createElementBlock(
      "div",
      {
        key: 0,
        class: vue.normalizeClass(["call", ["call-" + $setup.conversationType, $props.message.flow === "out" && "call-reverse"]]),
        onClick: $setup.callAgain
      },
      [
        vue.createElementVNode(
          "div",
          {
            class: vue.normalizeClass(["icon", $props.message.flow === "out" && $setup.callInfo.type === 2 && "icon-reverse"])
          },
          [
            vue.createVNode($setup["Icon"], {
              file: $setup.callInfo.icon
            }, null, 8, ["file"])
          ],
          2
          /* CLASS */
        ),
        vue.createElementVNode(
          "span",
          { class: "call-content" },
          vue.toDisplayString($setup.custom),
          1
          /* TEXT */
        )
      ],
      2
      /* CLASS */
    )) : vue.createCommentVNode("v-if", true);
  }
  const MessageCallC2C = /* @__PURE__ */ _export_sfc(_sfc_main$T, [["render", _sfc_render$S], ["__scopeId", "data-v-6d96978f"], ["__file", "C:/Users/Administrator/Desktop/Project Folder/ZXHand/ZXHandwritting_APP_uniapp/TUIKit/plugins/plugin-components/message-call/message-call-c2c.vue"]]);
  const iconRight = "/assets/iconRight.eac74a1a.svg";
  h() === "pc";
  h() === "h5";
  h() === "wechat";
  const isApp = h() === "app";
  const _sfc_main$S = {
    props: {
      src: {
        type: String,
        default: ""
      },
      width: {
        type: String,
        default: "16px"
      },
      height: {
        type: String,
        default: "16px"
      }
    },
    setup(props2) {
      return {
        props: props2,
        isApp
      };
    }
  };
  function _sfc_render$R(_ctx, _cache, $props, $setup, $data, $options) {
    return vue.openBlock(), vue.createElementBlock(
      vue.Fragment,
      null,
      [
        vue.createCommentVNode("本地 icon 资源, uniapp 打包到 app 仅支持标签 image, 打包小程序和 H5 均可支持标签 img "),
        vue.createElementVNode("div", { class: "common-icon-container" }, [
          $setup.isApp ? (vue.openBlock(), vue.createElementBlock("image", {
            key: 0,
            class: "common-icon",
            src: $setup.props.src,
            style: vue.normalizeStyle({ width: $setup.props.width, height: $setup.props.height })
          }, null, 12, ["src"])) : (vue.openBlock(), vue.createElementBlock("img", {
            key: 1,
            class: "common-icon",
            src: $setup.props.src,
            style: vue.normalizeStyle({ width: $setup.props.width, height: $setup.props.height })
          }, null, 12, ["src"]))
        ])
      ],
      2112
      /* STABLE_FRAGMENT, DEV_ROOT_FRAGMENT */
    );
  }
  const Icon = /* @__PURE__ */ _export_sfc(_sfc_main$S, [["render", _sfc_render$R], ["__scopeId", "data-v-d0031c07"], ["__file", "C:/Users/Administrator/Desktop/Project Folder/ZXHand/ZXHandwritting_APP_uniapp/TUIKit/tui-customer-service-plugin/components/customer-icon.vue"]]);
  const _sfc_main$R = {
    components: {
      Icon
    },
    props: {
      payload: {
        type: Object,
        default: () => ({})
      }
    },
    emits: ["sendMessage"],
    setup(props2, { emit }) {
      const content = vue.computed(() => {
        var _a;
        return ((_a = props2 == null ? void 0 : props2.payload) == null ? void 0 : _a.content) || {
          header: void 0,
          items: []
        };
      });
      const handleContentListItemClick = (branch) => {
        emit("sendMessage", { text: branch.content });
      };
      return {
        content,
        handleContentListItemClick,
        iconRight
      };
    }
  };
  function _sfc_render$Q(_ctx, _cache, $props, $setup, $data, $options) {
    const _component_Icon = vue.resolveComponent("Icon");
    return vue.openBlock(), vue.createElementBlock("div", { class: "branch-card" }, [
      $setup.content.header || $setup.content.title ? (vue.openBlock(), vue.createElementBlock(
        "p",
        {
          key: 0,
          class: "branch-title"
        },
        vue.toDisplayString($setup.content.header || $setup.content.title),
        1
        /* TEXT */
      )) : vue.createCommentVNode("v-if", true),
      (vue.openBlock(true), vue.createElementBlock(
        vue.Fragment,
        null,
        vue.renderList($setup.content.items, (item, index2) => {
          return vue.openBlock(), vue.createElementBlock("div", {
            key: index2,
            class: "branch-item",
            style: vue.normalizeStyle({ borderWidth: $setup.content.header ? "1px 0 0px 0" : "0px 0 1px 0" }),
            onClick: ($event) => $setup.handleContentListItemClick(item)
          }, [
            vue.createTextVNode(
              vue.toDisplayString(item.content) + " ",
              1
              /* TEXT */
            ),
            vue.createVNode(_component_Icon, { src: $setup.iconRight }, null, 8, ["src"])
          ], 12, ["onClick"]);
        }),
        128
        /* KEYED_FRAGMENT */
      ))
    ]);
  }
  const MessageBranch = /* @__PURE__ */ _export_sfc(_sfc_main$R, [["render", _sfc_render$Q], ["__scopeId", "data-v-6f02fddd"], ["__file", "C:/Users/Administrator/Desktop/Project Folder/ZXHand/ZXHandwritting_APP_uniapp/TUIKit/tui-customer-service-plugin/components/message-branch.vue"]]);
  const _sfc_main$Q = {
    props: {
      title: {
        type: String,
        default: ""
      },
      list: {
        type: Array,
        default: () => []
      }
    },
    emits: ["input-click"],
    setup(props2, { emit }) {
      const listItemClick = (branch) => {
        emit("input-click", branch);
      };
      return {
        props: props2,
        listItemClick
      };
    }
  };
  function _sfc_render$P(_ctx, _cache, $props, $setup, $data, $options) {
    return vue.openBlock(), vue.createElementBlock("div", null, [
      $setup.props.title ? (vue.openBlock(), vue.createElementBlock(
        "p",
        {
          key: 0,
          class: "card-title"
        },
        vue.toDisplayString($setup.props.title),
        1
        /* TEXT */
      )) : vue.createCommentVNode("v-if", true),
      (vue.openBlock(true), vue.createElementBlock(
        vue.Fragment,
        null,
        vue.renderList($setup.props.list, (item, index2) => {
          return vue.openBlock(), vue.createElementBlock("div", {
            key: index2,
            class: "form-branch-item",
            onClick: ($event) => $setup.listItemClick(item)
          }, vue.toDisplayString(item.content), 9, ["onClick"]);
        }),
        128
        /* KEYED_FRAGMENT */
      ))
    ]);
  }
  const FormBranch = /* @__PURE__ */ _export_sfc(_sfc_main$Q, [["render", _sfc_render$P], ["__scopeId", "data-v-2cb857c2"], ["__file", "C:/Users/Administrator/Desktop/Project Folder/ZXHand/ZXHandwritting_APP_uniapp/TUIKit/tui-customer-service-plugin/components/message-form/form-branch.vue"]]);
  const _sfc_main$P = {
    props: {
      title: {
        type: String,
        default: ""
      }
    },
    emits: ["input-submit"],
    setup(props2, { emit }) {
      const disabled = vue.ref(false);
      const text = vue.ref("");
      const listItemClick = () => {
        disabled.value = true;
        emit("input-submit", text.value);
      };
      return {
        disabled,
        text,
        listItemClick,
        props: props2
      };
    }
  };
  function _sfc_render$O(_ctx, _cache, $props, $setup, $data, $options) {
    return vue.openBlock(), vue.createElementBlock("div", null, [
      vue.createElementVNode(
        "div",
        { class: "card-title" },
        vue.toDisplayString($setup.props.title),
        1
        /* TEXT */
      ),
      vue.createElementVNode("div", { class: "form-input-box" }, [
        vue.withDirectives(vue.createElementVNode(
          "input",
          {
            "onUpdate:modelValue": _cache[0] || (_cache[0] = ($event) => $setup.text = $event),
            class: "form-input"
          },
          null,
          512
          /* NEED_PATCH */
        ), [
          [vue.vModelText, $setup.text]
        ]),
        vue.createElementVNode("button", {
          class: "form-button",
          disabled: $setup.disabled,
          onClick: _cache[1] || (_cache[1] = (...args) => $setup.listItemClick && $setup.listItemClick(...args))
        }, null, 8, ["disabled"])
      ])
    ]);
  }
  const FormInput = /* @__PURE__ */ _export_sfc(_sfc_main$P, [["render", _sfc_render$O], ["__scopeId", "data-v-cc82813b"], ["__file", "C:/Users/Administrator/Desktop/Project Folder/ZXHand/ZXHandwritting_APP_uniapp/TUIKit/tui-customer-service-plugin/components/message-form/form-input.vue"]]);
  const _sfc_main$O = {
    components: {
      FormBranch,
      FormInput
    },
    props: {
      payload: {
        type: Object,
        default: () => ({})
      }
    },
    emits: ["sendMessage"],
    setup(props2, { emit }) {
      const content = vue.computed(() => {
        var _a;
        return ((_a = props2.payload) == null ? void 0 : _a.content) || {
          type: 0,
          header: "",
          items: []
        };
      });
      const handleContentListItemClick = (branch) => {
        emit("sendMessage", { text: branch.content });
      };
      const handleFormSaveInputSubmit = (text) => {
        emit("sendMessage", { text });
      };
      return {
        content,
        handleContentListItemClick,
        handleFormSaveInputSubmit
      };
    }
  };
  function _sfc_render$N(_ctx, _cache, $props, $setup, $data, $options) {
    const _component_FormBranch = vue.resolveComponent("FormBranch");
    const _component_FormInput = vue.resolveComponent("FormInput");
    return $setup.content.type === 1 ? (vue.openBlock(), vue.createElementBlock("div", {
      key: 0,
      class: "message-form"
    }, [
      vue.createVNode(_component_FormBranch, {
        title: $setup.content.header,
        list: $setup.content.items,
        onInputClick: $setup.handleContentListItemClick
      }, null, 8, ["title", "list", "onInputClick"])
    ])) : (vue.openBlock(), vue.createElementBlock("div", {
      key: 1,
      class: "message-form"
    }, [
      vue.createVNode(_component_FormInput, {
        title: $setup.content.header,
        onInputSubmit: $setup.handleFormSaveInputSubmit
      }, null, 8, ["title", "onInputSubmit"])
    ]));
  }
  const MessageForm = /* @__PURE__ */ _export_sfc(_sfc_main$O, [["render", _sfc_render$N], ["__scopeId", "data-v-2d3e393d"], ["__file", "C:/Users/Administrator/Desktop/Project Folder/ZXHand/ZXHandwritting_APP_uniapp/TUIKit/tui-customer-service-plugin/components/message-form/index.vue"]]);
  const _sfc_main$N = {
    props: {
      payload: {
        type: Object,
        default: () => ({})
      }
    },
    emits: ["sendMessage"],
    setup(props2) {
      const jumpProductCard = () => {
        if (window) {
          window.open(props2.payload.content.url, "_blank");
        } else {
          uni && uni.navigateTo({ url: `/TUIKit/components/TUIChat/web-view?url=${props2.payload.content.url}` });
        }
      };
      return {
        props: props2,
        isApp,
        jumpProductCard
      };
    }
  };
  function _sfc_render$M(_ctx, _cache, $props, $setup, $data, $options) {
    return vue.openBlock(), vue.createElementBlock("div", {
      class: "message-product-card",
      onClick: _cache[0] || (_cache[0] = (...args) => $setup.jumpProductCard && $setup.jumpProductCard(...args))
    }, [
      $setup.isApp ? (vue.openBlock(), vue.createElementBlock("image", {
        key: 0,
        class: "product-img",
        src: $setup.props.payload.content.pic
      }, null, 8, ["src"])) : (vue.openBlock(), vue.createElementBlock("img", {
        key: 1,
        class: "product-img",
        src: $setup.props.payload.content.pic
      }, null, 8, ["src"])),
      vue.createElementVNode("div", { class: "product-card-information" }, [
        vue.createElementVNode(
          "div",
          { class: "product-card-title" },
          vue.toDisplayString($setup.props.payload.content.header),
          1
          /* TEXT */
        ),
        vue.createElementVNode(
          "div",
          { class: "product-card-description" },
          vue.toDisplayString($setup.props.payload.content.desc),
          1
          /* TEXT */
        )
      ])
    ]);
  }
  const MessageProductCard = /* @__PURE__ */ _export_sfc(_sfc_main$N, [["render", _sfc_render$M], ["__scopeId", "data-v-24d6579f"], ["__file", "C:/Users/Administrator/Desktop/Project Folder/ZXHand/ZXHandwritting_APP_uniapp/TUIKit/tui-customer-service-plugin/components/message-product-card.vue"]]);
  const _sfc_main$M = {
    components: {
      MessageBranch,
      MessageForm,
      MessageProductCard
    },
    props: {
      message: {
        type: Object,
        default: () => ({})
      }
    },
    emits: ["sendMessage"],
    setup(props2, { emit }) {
      const payload = vue.computed(() => {
        var _a, _b;
        return props2.message && JSONToObject((_b = (_a = props2.message) == null ? void 0 : _a.payload) == null ? void 0 : _b.data);
      });
      const sendTextMessage = (text) => {
        emit("sendMessage", text);
      };
      return {
        payload,
        sendTextMessage,
        CUSTOM_MESSAGE_SRC
      };
    }
  };
  function _sfc_render$L(_ctx, _cache, $props, $setup, $data, $options) {
    const _component_MessageBranch = vue.resolveComponent("MessageBranch");
    const _component_MessageForm = vue.resolveComponent("MessageForm");
    const _component_MessageProductCard = vue.resolveComponent("MessageProductCard");
    return vue.openBlock(), vue.createElementBlock("div", { class: "custom" }, [
      $setup.payload.src === $setup.CUSTOM_MESSAGE_SRC.BRANCH || $setup.payload.src === $setup.CUSTOM_MESSAGE_SRC.BRANCH_NUMBER ? (vue.openBlock(), vue.createElementBlock("div", { key: 0 }, [
        vue.createVNode(_component_MessageBranch, {
          payload: $setup.payload,
          onSendMessage: $setup.sendTextMessage
        }, null, 8, ["payload", "onSendMessage"])
      ])) : vue.createCommentVNode("v-if", true),
      $setup.payload.src === $setup.CUSTOM_MESSAGE_SRC.FROM_INPUT ? (vue.openBlock(), vue.createElementBlock("div", { key: 1 }, [
        vue.createVNode(_component_MessageForm, {
          payload: $setup.payload,
          onSendMessage: $setup.sendTextMessage
        }, null, 8, ["payload", "onSendMessage"])
      ])) : vue.createCommentVNode("v-if", true),
      $setup.payload.src === $setup.CUSTOM_MESSAGE_SRC.PRODUCT_CARD ? (vue.openBlock(), vue.createElementBlock("div", { key: 2 }, [
        vue.createVNode(_component_MessageProductCard, { payload: $setup.payload }, null, 8, ["payload"])
      ])) : vue.createCommentVNode("v-if", true)
    ]);
  }
  const MessageCustomerService$1 = /* @__PURE__ */ _export_sfc(_sfc_main$M, [["render", _sfc_render$L], ["__file", "C:/Users/Administrator/Desktop/Project Folder/ZXHand/ZXHandwritting_APP_uniapp/TUIKit/tui-customer-service-plugin/components/message-customer-service.vue"]]);
  const star = "/assets/star.0d13712b.png";
  const starLine = "/assets/starLine.f4211758.png";
  const _sfc_main$L = {
    components: {
      Icon
    },
    props: {
      ratingTemplate: {
        type: Object,
        default: () => ({})
      }
    },
    emits: ["sendMessage"],
    setup(props2, { emit }) {
      const hasReply = vue.ref(false);
      const sessionId = vue.ref("");
      const value = vue.ref(-1);
      const hoverValue = vue.ref(-1);
      const hasExpire = vue.ref(false);
      vue.watchEffect(() => {
        sessionId.value = props2.ratingTemplate.sessionId || "";
        if (props2.ratingTemplate.selected != void 0) {
          for (let i2 = 0; i2 < props2.ratingTemplate.menu.length; i2++) {
            if (props2.ratingTemplate.menu[i2].id == props2.ratingTemplate.selected.id) {
              hasReply.value = true;
              value.value = i2;
              break;
            }
          }
        }
        const timestamp = Math.floor((/* @__PURE__ */ new Date()).getTime() / 1e3);
        if (timestamp > props2.ratingTemplate.expireTime) {
          hasExpire.value = true;
        }
      });
      const desc = vue.computed(() => {
        var _a;
        return (_a = props2.ratingTemplate) == null ? void 0 : _a.menu.map((item) => {
          return item.content;
        });
      });
      const starList = vue.computed(() => {
        var _a;
        return (_a = props2.ratingTemplate) == null ? void 0 : _a.menu.map((item, index2) => {
          if (hoverValue.value !== -1) {
            return index2 <= hoverValue.value ? 1 : 0;
          } else {
            return index2 <= value.value ? 1 : 0;
          }
        });
      });
      const setValue = (val) => {
        if (hasReply.value) {
          return;
        }
        value.value = val;
      };
      const setHoverValue = (value2) => {
        if (hasReply.value) {
          return;
        }
        hoverValue.value = value2;
      };
      const submitRatingStar = async () => {
        if (value.value < 0) {
          return;
        }
        const submitData = {
          data: JSON.stringify({
            src: CUSTOM_MESSAGE_SRC.MENU_SELECTED,
            menuSelected: {
              id: props2.ratingTemplate.menu[value.value].id,
              content: props2.ratingTemplate.menu[value.value].content,
              sessionId: sessionId.value
            },
            customerServicePlugin: 0
          })
        };
        hasReply.value = true;
        emit("sendMessage", submitData);
      };
      return {
        props: props2,
        hasReply,
        sessionId,
        value,
        hoverValue,
        hasExpire,
        desc,
        starList,
        setValue,
        setHoverValue,
        submitRatingStar,
        star,
        starLine
      };
    }
  };
  function _sfc_render$K(_ctx, _cache, $props, $setup, $data, $options) {
    const _component_Icon = vue.resolveComponent("Icon");
    return vue.openBlock(), vue.createElementBlock("div", { class: "message-rating-star" }, [
      vue.createElementVNode(
        "p",
        { class: "rating-head" },
        vue.toDisplayString($setup.props.ratingTemplate.head),
        1
        /* TEXT */
      ),
      vue.createElementVNode("div", { class: "rating-card" }, [
        vue.createElementVNode("span", { class: "card-title" }, "请对本次服务进行评价"),
        vue.createElementVNode("div", { class: "card-wrapper" }, [
          vue.createElementVNode("div", { style: { "max-width": "200px" } }, [
            (vue.openBlock(true), vue.createElementBlock(
              vue.Fragment,
              null,
              vue.renderList($setup.starList, (item, index2) => {
                return vue.openBlock(), vue.createElementBlock("div", {
                  key: index2,
                  style: { "display": "inline-block" },
                  onClick: ($event) => $setup.setValue(index2),
                  onMouseenter: ($event) => $setup.setHoverValue(index2),
                  onMouseleave: _cache[0] || (_cache[0] = ($event) => $setup.setHoverValue(-1))
                }, [
                  item === 1 ? (vue.openBlock(), vue.createBlock(_component_Icon, {
                    key: 0,
                    src: $setup.star,
                    width: "30px",
                    height: "30px"
                  }, null, 8, ["src"])) : (vue.openBlock(), vue.createBlock(_component_Icon, {
                    key: 1,
                    src: $setup.starLine,
                    width: "30px",
                    height: "30px"
                  }, null, 8, ["src"]))
                ], 40, ["onClick", "onMouseenter"]);
              }),
              128
              /* KEYED_FRAGMENT */
            ))
          ])
        ]),
        vue.createElementVNode(
          "div",
          { style: { marginTop: "10px", marginBottom: "10px" } },
          vue.toDisplayString($setup.hoverValue === -1 ? $setup.value === -1 ? "如果满意请给好评哦～" : $setup.desc[$setup.value] : $setup.desc[$setup.hoverValue]),
          1
          /* TEXT */
        ),
        vue.createElementVNode("button", {
          class: "submit-button",
          disabled: $setup.hasReply || $setup.hasExpire,
          onClick: _cache[1] || (_cache[1] = (...args) => $setup.submitRatingStar && $setup.submitRatingStar(...args))
        }, " 提交评价 ", 8, ["disabled"])
      ]),
      $setup.hasReply ? (vue.openBlock(), vue.createElementBlock(
        "p",
        {
          key: 0,
          class: "rating-tail",
          style: {
            marginTop: "20px"
          }
        },
        vue.toDisplayString($setup.props.ratingTemplate.tail),
        1
        /* TEXT */
      )) : vue.createCommentVNode("v-if", true)
    ]);
  }
  const RatingStar = /* @__PURE__ */ _export_sfc(_sfc_main$L, [["render", _sfc_render$K], ["__scopeId", "data-v-da3c7d81"], ["__file", "C:/Users/Administrator/Desktop/Project Folder/ZXHand/ZXHandwritting_APP_uniapp/TUIKit/tui-customer-service-plugin/components/message-rating/message-rating-star.vue"]]);
  const _sfc_main$K = {
    props: {
      ratingTemplate: {
        type: Object,
        default: () => ({})
      }
    },
    emits: ["sendMessage"],
    setup(props2, { emit }) {
      const hasReply = vue.ref(false);
      const sessionId = vue.ref("");
      const selectValue = vue.ref(-1);
      const hoverValue = vue.ref(-1);
      const hasExpire = vue.ref(false);
      const desc = vue.computed(() => {
        var _a;
        return (_a = props2.ratingTemplate) == null ? void 0 : _a.menu.map((item) => item.content);
      });
      const numberList = vue.computed(() => {
        var _a;
        return (_a = props2.ratingTemplate) == null ? void 0 : _a.menu.map((item, index2) => index2);
      });
      vue.watchEffect(() => {
        sessionId.value = props2.ratingTemplate.sessionId || "";
        if (props2.ratingTemplate.selected != void 0) {
          for (let i2 = 0; i2 < props2.ratingTemplate.menu.length; i2++) {
            if (props2.ratingTemplate.menu[i2].id == props2.ratingTemplate.selected.id) {
              hasReply.value = true;
              selectValue.value = i2;
              break;
            }
          }
        }
        const timestamp = Math.floor((/* @__PURE__ */ new Date()).getTime() / 1e3);
        if (timestamp > props2.ratingTemplate.expireTime) {
          hasExpire.value = true;
        }
      });
      const setValue = (val) => {
        if (!hasReply.value) {
          selectValue.value = val;
        }
      };
      const setHoverValue = (value) => {
        if (!hasReply.value) {
          hoverValue.value = value;
        }
      };
      const submitRatingStar = () => {
        if (selectValue.value >= 0) {
          const submitData = {
            data: JSON.stringify({
              src: CUSTOM_MESSAGE_SRC.MENU_SELECTED,
              menuSelected: {
                id: props2.ratingTemplate.menu[selectValue.value].id,
                content: props2.ratingTemplate.menu[selectValue.value].content,
                sessionId: sessionId.value
              },
              customerServicePlugin: 0
            })
          };
          hasReply.value = true;
          emit("sendMessage", submitData);
        }
      };
      return {
        props: props2,
        hasReply,
        sessionId,
        selectValue,
        hoverValue,
        hasExpire,
        desc,
        numberList,
        setValue,
        setHoverValue,
        submitRatingStar
      };
    }
  };
  function _sfc_render$J(_ctx, _cache, $props, $setup, $data, $options) {
    return vue.openBlock(), vue.createElementBlock("div", { class: "message-rating-star" }, [
      vue.createElementVNode(
        "p",
        { class: "rating-head" },
        vue.toDisplayString($setup.props.ratingTemplate.head),
        1
        /* TEXT */
      ),
      vue.createElementVNode("div", { class: "rating-card" }, [
        vue.createElementVNode("span", { class: "card-title" }, "请对本次服务进行评价"),
        vue.createElementVNode("div", { class: "card-wrapper" }, [
          vue.createElementVNode("div", { style: { "max-width": "250px" } }, [
            (vue.openBlock(true), vue.createElementBlock(
              vue.Fragment,
              null,
              vue.renderList($setup.numberList, (item, index2) => {
                return vue.openBlock(), vue.createElementBlock("div", {
                  key: index2,
                  class: vue.normalizeClass({
                    "active": !(index2 !== $setup.selectValue && index2 !== $setup.hoverValue),
                    "de-active": index2 !== $setup.selectValue && index2 !== $setup.hoverValue
                  }),
                  style: vue.normalizeStyle({
                    marginLeft: index2 === 0 ? "0px" : "20px",
                    margin: "5px"
                  }),
                  onClick: ($event) => $setup.setValue(index2),
                  onMouseenter: ($event) => $setup.setHoverValue(index2),
                  onMouseleave: _cache[0] || (_cache[0] = ($event) => $setup.setHoverValue(-1))
                }, vue.toDisplayString(item + 1), 47, ["onClick", "onMouseenter"]);
              }),
              128
              /* KEYED_FRAGMENT */
            ))
          ])
        ]),
        vue.createElementVNode(
          "div",
          { style: { marginTop: "10px", marginBottom: "10px" } },
          vue.toDisplayString($setup.hoverValue === -1 ? $setup.selectValue === -1 ? "如果满意请给好评哦～" : $setup.desc[$setup.selectValue] : $setup.desc[$setup.hoverValue]),
          1
          /* TEXT */
        ),
        vue.createElementVNode("button", {
          class: "submit-button",
          disabled: $setup.hasReply || $setup.hasExpire,
          onClick: _cache[1] || (_cache[1] = (...args) => $setup.submitRatingStar && $setup.submitRatingStar(...args))
        }, " 提交评价 ", 8, ["disabled"])
      ]),
      $setup.hasReply ? (vue.openBlock(), vue.createElementBlock(
        "p",
        {
          key: 0,
          class: "rating-tail",
          style: {
            marginTop: "20px"
          }
        },
        vue.toDisplayString($setup.props.ratingTemplate.tail),
        1
        /* TEXT */
      )) : vue.createCommentVNode("v-if", true)
    ]);
  }
  const RatingNumber = /* @__PURE__ */ _export_sfc(_sfc_main$K, [["render", _sfc_render$J], ["__scopeId", "data-v-1a21fdf4"], ["__file", "C:/Users/Administrator/Desktop/Project Folder/ZXHand/ZXHandwritting_APP_uniapp/TUIKit/tui-customer-service-plugin/components/message-rating/message-rating-number.vue"]]);
  const _sfc_main$J = {
    components: {
      RatingStar,
      RatingNumber
    },
    props: {
      message: {
        type: Object,
        default: () => ({})
      }
    },
    emits: ["sendMessage"],
    setup(props2, { emit }) {
      const ratingTemplate = vue.computed(() => {
        const data = props2.message && JSONToObject(props2.message.payload.data);
        return data == null ? void 0 : data.menuContent;
      });
      const sendCustomMessage = (data) => {
        emit("sendMessage", data);
      };
      return {
        sendCustomMessage,
        ratingTemplate,
        RATING_TEMPLATE_TYPE
      };
    }
  };
  function _sfc_render$I(_ctx, _cache, $props, $setup, $data, $options) {
    const _component_RatingStar = vue.resolveComponent("RatingStar");
    const _component_RatingNumber = vue.resolveComponent("RatingNumber");
    return $setup.ratingTemplate.type === $setup.RATING_TEMPLATE_TYPE.STAR ? (vue.openBlock(), vue.createBlock(_component_RatingStar, {
      key: 0,
      ratingTemplate: $setup.ratingTemplate,
      onSendMessage: $setup.sendCustomMessage
    }, null, 8, ["ratingTemplate", "onSendMessage"])) : (vue.openBlock(), vue.createBlock(_component_RatingNumber, {
      key: 1,
      ratingTemplate: $setup.ratingTemplate,
      onSendMessage: $setup.sendCustomMessage
    }, null, 8, ["ratingTemplate", "onSendMessage"]));
  }
  const MessageRating = /* @__PURE__ */ _export_sfc(_sfc_main$J, [["render", _sfc_render$I], ["__file", "C:/Users/Administrator/Desktop/Project Folder/ZXHand/ZXHandwritting_APP_uniapp/TUIKit/tui-customer-service-plugin/components/message-rating/index.vue"]]);
  const _sfc_main$I = {
    components: {
      MessageCustomerService: MessageCustomerService$1,
      MessageRating
    },
    props: {
      message: {
        type: Object,
        default: () => ({})
      }
    },
    setup(props2) {
      const sendTextMessage = (payload) => {
        R$1.callService({
          serviceName: E$1.TUIChat.SERVICE.NAME,
          method: E$1.TUIChat.SERVICE.METHOD.SEND_TEXT_MESSAGE,
          params: { payload }
        });
      };
      const sendCustomMessage = (payload) => {
        R$1.callService({
          serviceName: E$1.TUIChat.SERVICE.NAME,
          method: E$1.TUIChat.SERVICE.METHOD.SEND_CUSTOM_MESSAGE,
          params: { payload }
        });
      };
      return {
        props: props2,
        sendTextMessage,
        sendCustomMessage,
        isCustomerServiceMessage,
        isMessageRating
      };
    }
  };
  function _sfc_render$H(_ctx, _cache, $props, $setup, $data, $options) {
    const _component_MessageRating = vue.resolveComponent("MessageRating");
    const _component_MessageCustomerService = vue.resolveComponent("MessageCustomerService");
    return vue.openBlock(), vue.createElementBlock("div", { class: "message-custom" }, [
      $setup.isMessageRating($setup.props.message) ? (vue.openBlock(), vue.createBlock(_component_MessageRating, {
        key: 0,
        message: $setup.props.message,
        onSendMessage: $setup.sendCustomMessage
      }, null, 8, ["message", "onSendMessage"])) : $setup.isCustomerServiceMessage($setup.props.message) ? (vue.openBlock(), vue.createBlock(_component_MessageCustomerService, {
        key: 1,
        message: $setup.props.message,
        onSendMessage: $setup.sendTextMessage
      }, null, 8, ["message", "onSendMessage"])) : vue.createCommentVNode("v-if", true)
    ]);
  }
  const TUICustomerServicePlugin = /* @__PURE__ */ _export_sfc(_sfc_main$I, [["render", _sfc_render$H], ["__file", "C:/Users/Administrator/Desktop/Project Folder/ZXHand/ZXHandwritting_APP_uniapp/TUIKit/tui-customer-service-plugin/index.vue"]]);
  const _sfc_main$H = /* @__PURE__ */ vue.defineComponent({
    __name: "message-customer-service",
    props: {
      message: { type: Object, required: true, default: () => ({}) }
    },
    setup(__props, { expose: __expose }) {
      __expose();
      const props2 = __props;
      const __returned__ = { props: props2, TUICustomerServicePlugin };
      Object.defineProperty(__returned__, "__isScriptSetup", { enumerable: false, value: true });
      return __returned__;
    }
  });
  function _sfc_render$G(_ctx, _cache, $props, $setup, $data, $options) {
    return vue.openBlock(), vue.createBlock($setup["TUICustomerServicePlugin"], {
      message: $setup.props.message
    }, null, 8, ["message"]);
  }
  const MessageCustomerService = /* @__PURE__ */ _export_sfc(_sfc_main$H, [["render", _sfc_render$G], ["__scopeId", "data-v-d1833b46"], ["__file", "C:/Users/Administrator/Desktop/Project Folder/ZXHand/ZXHandwritting_APP_uniapp/TUIKit/plugins/plugin-components/message-customer/message-customer-service.vue"]]);
  const _sfc_main$G = /* @__PURE__ */ vue.defineComponent({
    __name: "message-room-default",
    props: {
      message: { type: Object, required: true, default: () => ({}) }
    },
    setup(__props, { expose: __expose }) {
      __expose();
      const props2 = __props;
      const __returned__ = { props: props2, get TUITranslateService() {
        return Jt;
      }, get isUniFrameWork() {
        return isUniFrameWork;
      } };
      Object.defineProperty(__returned__, "__isScriptSetup", { enumerable: false, value: true });
      return __returned__;
    }
  });
  function _sfc_render$F(_ctx, _cache, $props, $setup, $data, $options) {
    return vue.openBlock(), vue.createElementBlock(
      "div",
      {
        class: vue.normalizeClass([
          "room-default",
          $setup.isUniFrameWork && "room-default-uni",
          $setup.props.message.flow === "in" ? "room-default-in" : "room-default-out"
        ])
      },
      vue.toDisplayString($setup.TUITranslateService.t("message.custom.自定义消息")),
      3
      /* TEXT, CLASS */
    );
  }
  const MessageRoom = /* @__PURE__ */ _export_sfc(_sfc_main$G, [["render", _sfc_render$F], ["__scopeId", "data-v-bc20f5ec"], ["__file", "C:/Users/Administrator/Desktop/Project Folder/ZXHand/ZXHandwritting_APP_uniapp/TUIKit/plugins/plugin-components/message-room/message-room-default.vue"]]);
  const _sfc_main$F = /* @__PURE__ */ vue.defineComponent({
    __name: "message-plugin",
    props: {
      message: { type: Object, required: true, default: () => ({}) },
      blinkMessageIDList: { type: Array, required: false, default: () => [] }
    },
    emits: ["resendMessage", "handleToggleMessageItem", "handleH5LongPress"],
    setup(__props, { expose: __expose, emit: __emit }) {
      __expose();
      const props2 = __props;
      const emits2 = __emit;
      const messageModel = vue.computed(() => zt.getMessageModel(props2.message.ID));
      const messageSignalingInfo = vue.computed(() => {
        var _a;
        return (_a = messageModel == null ? void 0 : messageModel.value) == null ? void 0 : _a.getSignalingInfo();
      });
      const messageCustomContent = vue.computed(() => {
        var _a;
        return (_a = messageModel == null ? void 0 : messageModel.value) == null ? void 0 : _a.getMessageContent();
      });
      const pluginMessageType = vue.computed(() => {
        var _a;
        let typeObj = { pluginType: "", showStyle: "" };
        if (isCallMessage(messageModel.value)) {
          typeObj = {
            pluginType: "call",
            showStyle: ((_a = messageModel.value) == null ? void 0 : _a.conversationType) === Kt.TYPES.CONV_GROUP ? "tip" : "bubble"
          };
        } else if (isRoomCardMessage(messageModel.value)) {
          typeObj = {
            pluginType: "room",
            showStyle: "bubble"
          };
        } else if (isCustomerServicePluginMessage(messageModel.value)) {
          typeObj = {
            pluginType: "customer",
            showStyle: isMessageInvisible(messageModel.value) ? "" : "bubble"
          };
        }
        return typeObj;
      });
      const resendMessage = (message2) => {
        emits2("resendMessage", message2);
      };
      const handleToggleMessageItem = (e2, message2, isLongpress = false) => {
        emits2("handleToggleMessageItem", e2, message2, isLongpress);
      };
      const handleH5LongPress = (e2, message2, type) => {
        emits2("handleH5LongPress", e2, message2, type);
      };
      const __returned__ = { props: props2, emits: emits2, messageModel, messageSignalingInfo, messageCustomContent, pluginMessageType, resendMessage, handleToggleMessageItem, handleH5LongPress, MessagePluginLayout, MessageCallGroup, MessageCallC2C, MessageCustomerService, MessageRoom };
      Object.defineProperty(__returned__, "__isScriptSetup", { enumerable: false, value: true });
      return __returned__;
    }
  });
  function _sfc_render$E(_ctx, _cache, $props, $setup, $data, $options) {
    return vue.openBlock(), vue.createBlock($setup["MessagePluginLayout"], {
      message: $setup.props.message,
      showStyle: $setup.pluginMessageType.showStyle,
      bubbleClassNameList: [$setup.pluginMessageType.pluginType === "room" ? "message-bubble-room" : ""],
      onResendMessage: $setup.resendMessage,
      onHandleToggleMessageItem: $setup.handleToggleMessageItem,
      onHandleH5LongPress: $setup.handleH5LongPress
    }, {
      messageTip: vue.withCtx(() => [
        vue.createVNode($setup["MessageCallGroup"], {
          message: $setup.props.message,
          signalingInfo: $setup.messageSignalingInfo,
          customContent: $setup.messageCustomContent,
          blinkMessageIDList: $setup.props.blinkMessageIDList
        }, null, 8, ["message", "signalingInfo", "customContent", "blinkMessageIDList"])
      ]),
      messageBubble: vue.withCtx(() => [
        $setup.pluginMessageType.pluginType === "call" ? (vue.openBlock(), vue.createBlock($setup["MessageCallC2C"], {
          key: 0,
          message: $setup.props.message,
          signalingInfo: $setup.messageSignalingInfo,
          customContent: $setup.messageCustomContent
        }, null, 8, ["message", "signalingInfo", "customContent"])) : vue.createCommentVNode("v-if", true),
        $setup.pluginMessageType.pluginType === "customer" ? (vue.openBlock(), vue.createBlock($setup["MessageCustomerService"], {
          key: 1,
          message: $setup.props.message
        }, null, 8, ["message"])) : vue.createCommentVNode("v-if", true),
        $setup.pluginMessageType.pluginType === "room" ? (vue.openBlock(), vue.createBlock($setup["MessageRoom"], {
          key: 2,
          message: $setup.props.message
        }, null, 8, ["message"])) : vue.createCommentVNode("v-if", true)
      ]),
      _: 1
      /* STABLE */
    }, 8, ["message", "showStyle", "bubbleClassNameList"]);
  }
  const MessagePlugin = /* @__PURE__ */ _export_sfc(_sfc_main$F, [["render", _sfc_render$E], ["__scopeId", "data-v-f303f15f"], ["__file", "C:/Users/Administrator/Desktop/Project Folder/ZXHand/ZXHandwritting_APP_uniapp/TUIKit/plugins/plugin-components/message-plugin.vue"]]);
  const closeIcon = "/assets/icon-close.00e2ef94.svg";
  const _sfc_main$E = /* @__PURE__ */ vue.defineComponent({
    __name: "index",
    props: {
      isFetching: { type: Boolean, required: true, default: false },
      isTerminateObserve: { type: Boolean, required: false, default: false }
    },
    emits: ["onExposed"],
    setup(__props, { expose: __expose, emit: __emit }) {
      var _a;
      __expose();
      const emits2 = __emit;
      const props2 = __props;
      let observer = null;
      const selfDomRef = vue.ref();
      const thisInstance = ((_a = vue.getCurrentInstance()) == null ? void 0 : _a.proxy) || vue.getCurrentInstance();
      vue.onMounted(() => {
        if (props2.isTerminateObserve) {
          return;
        }
        if (!isUniFrameWork) {
          observer = new IntersectionObserver(([entry]) => {
            if (entry.isIntersecting) {
              emits2("onExposed");
            }
          }, {
            threshold: 1
          });
          if (selfDomRef.value) {
            observer.observe(selfDomRef.value);
          }
        } else {
          observer = uni.createIntersectionObserver(thisInstance).relativeToViewport();
          observer.observe(".fetch-more-block", () => {
            emits2("onExposed");
          });
        }
      });
      vue.onUnmounted(() => {
        if (observer) {
          observer.disconnect();
          observer = null;
        }
      });
      vue.watch(() => props2.isTerminateObserve, (isTerminateObserve) => {
        if (!observer) {
          return;
        }
        if (isTerminateObserve) {
          observer.disconnect();
        } else if (selfDomRef.value) {
          observer.disconnect();
          if (!isUniFrameWork) {
            observer.observe(selfDomRef.value);
          } else {
            observer.observe(".fetch-more-block", () => {
              emits2("onExposed");
            });
          }
        }
      });
      const __returned__ = { emits: emits2, props: props2, get observer() {
        return observer;
      }, set observer(v2) {
        observer = v2;
      }, selfDomRef, thisInstance, get TUITranslateService() {
        return Jt;
      } };
      Object.defineProperty(__returned__, "__isScriptSetup", { enumerable: false, value: true });
      return __returned__;
    }
  });
  function _sfc_render$D(_ctx, _cache, $props, $setup, $data, $options) {
    return vue.openBlock(), vue.createElementBlock(
      "div",
      {
        ref: "selfDomRef",
        class: "fetch-more-block"
      },
      [
        $setup.props.isFetching ? vue.renderSlot(_ctx.$slots, "fetching", { key: 0 }, () => [
          vue.createElementVNode(
            "div",
            null,
            vue.toDisplayString($setup.TUITranslateService.t("TUIChat.正在加载")),
            1
            /* TEXT */
          )
        ], true) : vue.renderSlot(_ctx.$slots, "fetchEnd", { key: 1 }, () => [
          vue.createElementVNode(
            "div",
            null,
            vue.toDisplayString($setup.TUITranslateService.t("TUIChat.加载结束")),
            1
            /* TEXT */
          )
        ], true)
      ],
      512
      /* NEED_PATCH */
    );
  }
  const FetchMore = /* @__PURE__ */ _export_sfc(_sfc_main$E, [["render", _sfc_render$D], ["__scopeId", "data-v-ab2918f1"], ["__file", "C:/Users/Administrator/Desktop/Project Folder/ZXHand/ZXHandwritting_APP_uniapp/TUIKit/components/common/FetchMore/index.vue"]]);
  const _sfc_main$D = /* @__PURE__ */ vue.defineComponent({
    __name: "index",
    props: {
      message: { type: Object, required: true, default: () => ({}) }
    },
    emits: ["setReadReceiptPanelVisible"],
    setup(__props, { expose: __expose, emit: __emit }) {
      __expose();
      const emits2 = __emit;
      const props2 = __props;
      let lastUnreadCursor = "";
      let lastReadCursor = "";
      const tabNameList = ["unread", "read"];
      const isListFetchCompleted = {
        unread: false,
        read: false,
        close: false
      };
      const isPullDownFetching = vue.ref(false);
      const isPanelClose = vue.ref(false);
      const isFirstLoadFinished = vue.ref(false);
      const isStopFetchMore = vue.ref(false);
      const currentTabName = vue.ref("unread");
      const tabInfo = vue.ref(generateInitalTabInfo());
      vue.onMounted(async () => {
        await initAndRefetchReceiptInfomation();
        vue.nextTick(() => {
          isFirstLoadFinished.value = true;
        });
      });
      vue.watch(
        () => props2.message.readReceiptInfo.readCount,
        () => {
          initAndRefetchReceiptInfomation();
        }
      );
      async function fetchGroupMessageRecriptMemberListByType(readType = "all") {
        const message2 = zt.getMessageModel(props2.message.ID);
        let unreadResult = {};
        let readResult = {};
        if (readType === "all" || readType === "unread") {
          unreadResult = await Zt.getGroupMessageReadMemberList({
            message: message2,
            filter: 1,
            cursor: lastUnreadCursor,
            count: 100
          });
          if (unreadResult) {
            lastUnreadCursor = unreadResult.data.cursor;
            if (unreadResult.data.isCompleted) {
              isListFetchCompleted.unread = true;
            }
          }
        }
        if (readType === "all" || readType === "read") {
          readResult = await Zt.getGroupMessageReadMemberList({
            message: message2,
            filter: 0,
            cursor: lastReadCursor,
            count: 100
          });
          if (readResult) {
            lastReadCursor = readResult.data.cursor;
            if (readResult.data.isCompleted) {
              isListFetchCompleted.read = true;
            }
          }
        }
        const { unreadCount: totalUnreadCount, readCount: totalReadCount } = message2.readReceiptInfo;
        return {
          unreadResult: {
            count: totalUnreadCount,
            ...unreadResult.data
          },
          readResult: {
            count: totalReadCount,
            ...readResult.data
          }
        };
      }
      async function pullDownFetchMoreData() {
        if (isListFetchCompleted[currentTabName.value] || isPullDownFetching.value) {
          return;
        }
        isPullDownFetching.value = true;
        if (currentTabName.value === "unread" || currentTabName.value === "read") {
          const { unreadResult, readResult } = await fetchGroupMessageRecriptMemberListByType(currentTabName.value);
          checkStopFetchMore();
          try {
            tabInfo.value.unread.memberList = tabInfo.value.unread.memberList.concat(unreadResult.unreadUserInfoList || []);
            tabInfo.value.read.memberList = tabInfo.value.read.memberList.concat(readResult.readUserInfoList || []);
          } finally {
            isPullDownFetching.value = false;
          }
        }
      }
      async function initAndRefetchReceiptInfomation() {
        lastUnreadCursor = "";
        lastReadCursor = "";
        isStopFetchMore.value = false;
        isListFetchCompleted.unread = false;
        isListFetchCompleted.read = false;
        const { unreadResult, readResult } = await fetchGroupMessageRecriptMemberListByType("all");
        checkStopFetchMore();
        resetTabInfo("read", readResult.count, readResult.readUserInfoList);
        resetTabInfo("unread", unreadResult.count, unreadResult.unreadUserInfoList);
        resetTabInfo("close");
      }
      function checkStopFetchMore() {
        if (isListFetchCompleted.read && isListFetchCompleted.unread) {
          isStopFetchMore.value = true;
        }
      }
      function resetTabInfo(tabName, count, memberList) {
        tabInfo.value[tabName].count = count;
        tabInfo.value[tabName].memberList = memberList || [];
      }
      function generateInitalTabInfo() {
        return {
          read: {
            tabName: Jt.t("TUIChat.已读"),
            count: void 0,
            memberList: []
          },
          unread: {
            tabName: Jt.t("TUIChat.未读"),
            count: void 0,
            memberList: []
          },
          close: {
            tabName: Jt.t("TUIChat.关闭"),
            count: void 0,
            memberList: []
          }
        };
      }
      function toggleTabName(tabName) {
        currentTabName.value = tabName;
      }
      function closeReadReceiptPanel() {
        isPanelClose.value = true;
        setTimeout(() => {
          emits2("setReadReceiptPanelVisible", false);
        }, 200);
      }
      const __returned__ = { emits: emits2, props: props2, get lastUnreadCursor() {
        return lastUnreadCursor;
      }, set lastUnreadCursor(v2) {
        lastUnreadCursor = v2;
      }, get lastReadCursor() {
        return lastReadCursor;
      }, set lastReadCursor(v2) {
        lastReadCursor = v2;
      }, tabNameList, isListFetchCompleted, isPullDownFetching, isPanelClose, isFirstLoadFinished, isStopFetchMore, currentTabName, tabInfo, fetchGroupMessageRecriptMemberListByType, pullDownFetchMoreData, initAndRefetchReceiptInfomation, checkStopFetchMore, resetTabInfo, generateInitalTabInfo, toggleTabName, closeReadReceiptPanel, get TUITranslateService() {
        return Jt;
      }, get closeIcon() {
        return closeIcon;
      }, Icon: Icon$1, Overlay, Avatar, FetchMore, get isMobile() {
        return isMobile;
      }, get isUniFrameWork() {
        return isUniFrameWork;
      } };
      Object.defineProperty(__returned__, "__isScriptSetup", { enumerable: false, value: true });
      return __returned__;
    }
  });
  function _sfc_render$C(_ctx, _cache, $props, $setup, $data, $options) {
    return vue.openBlock(), vue.createBlock($setup["Overlay"], {
      maskColor: "transparent",
      onOnOverlayClick: $setup.closeReadReceiptPanel
    }, {
      default: vue.withCtx(() => [
        vue.createElementVNode(
          "div",
          {
            class: vue.normalizeClass({
              "read-receipt-panel": true,
              "read-receipt-panel-mobile": $setup.isMobile,
              "read-receipt-panel-uni": $setup.isUniFrameWork,
              "read-receipt-panel-close-mobile": $setup.isMobile && $setup.isPanelClose
            })
          },
          [
            vue.createElementVNode("div", { class: "header" }, [
              vue.createElementVNode(
                "div",
                { class: "header-text" },
                vue.toDisplayString($setup.TUITranslateService.t("TUIChat.消息详情")),
                1
                /* TEXT */
              ),
              vue.createElementVNode("div", { class: "header-close-icon" }, [
                vue.createVNode($setup["Icon"], {
                  size: "12px",
                  hotAreaSize: "8",
                  file: $setup.closeIcon,
                  onOnClick: $setup.closeReadReceiptPanel
                }, null, 8, ["file"])
              ])
            ]),
            vue.createElementVNode("div", { class: "read-status-counter-container" }, [
              (vue.openBlock(), vue.createElementBlock(
                vue.Fragment,
                null,
                vue.renderList($setup.tabNameList, (tabName) => {
                  return vue.createElementVNode("div", {
                    key: tabName,
                    class: vue.normalizeClass({
                      "read-status-counter": true,
                      "active": tabName === $setup.currentTabName
                    }),
                    onClick: ($event) => $setup.toggleTabName(tabName)
                  }, [
                    vue.createElementVNode(
                      "div",
                      { class: "status-text" },
                      vue.toDisplayString($setup.tabInfo[tabName].tabName),
                      1
                      /* TEXT */
                    ),
                    vue.createElementVNode(
                      "div",
                      { class: "status-count" },
                      vue.toDisplayString($setup.tabInfo[tabName].count === void 0 ? "" : $setup.tabInfo[tabName].count),
                      1
                      /* TEXT */
                    )
                  ], 10, ["onClick"]);
                }),
                64
                /* STABLE_FRAGMENT */
              ))
            ]),
            vue.createElementVNode("div", { class: "read-status-member-list" }, [
              $setup.tabInfo[$setup.currentTabName].count === 0 && $setup.isFirstLoadFinished ? (vue.openBlock(), vue.createElementBlock(
                "div",
                {
                  key: 0,
                  class: "empty-list-tip"
                },
                " - " + vue.toDisplayString($setup.TUITranslateService.t("TUIChat.空")) + " - ",
                1
                /* TEXT */
              )) : $setup.isFirstLoadFinished ? (vue.openBlock(), vue.createElementBlock(
                vue.Fragment,
                { key: 1 },
                [
                  $setup.currentTabName === "unread" ? (vue.openBlock(true), vue.createElementBlock(
                    vue.Fragment,
                    { key: 0 },
                    vue.renderList($setup.tabInfo[$setup.currentTabName].memberList, (item) => {
                      return vue.openBlock(), vue.createElementBlock("div", {
                        key: item.userID,
                        class: "read-status-member-container"
                      }, [
                        vue.createVNode($setup["Avatar"], {
                          class: "read-status-avatar",
                          useSkeletonAnimation: "",
                          url: item.avatar || ""
                        }, null, 8, ["url"]),
                        vue.createElementVNode(
                          "div",
                          { class: "username" },
                          vue.toDisplayString(item.nick || item.userID),
                          1
                          /* TEXT */
                        )
                      ]);
                    }),
                    128
                    /* KEYED_FRAGMENT */
                  )) : vue.createCommentVNode("v-if", true),
                  $setup.currentTabName === "read" ? (vue.openBlock(true), vue.createElementBlock(
                    vue.Fragment,
                    { key: 1 },
                    vue.renderList($setup.tabInfo[$setup.currentTabName].memberList, (item) => {
                      return vue.openBlock(), vue.createElementBlock("div", {
                        key: item.userID,
                        class: "read-status-member-container"
                      }, [
                        vue.createVNode($setup["Avatar"], {
                          class: "read-status-avatar",
                          useSkeletonAnimation: "",
                          url: item.avatar
                        }, null, 8, ["url"]),
                        vue.createElementVNode(
                          "div",
                          { class: "username" },
                          vue.toDisplayString(item.nick || item.userID),
                          1
                          /* TEXT */
                        )
                      ]);
                    }),
                    128
                    /* KEYED_FRAGMENT */
                  )) : vue.createCommentVNode("v-if", true)
                ],
                64
                /* STABLE_FRAGMENT */
              )) : vue.createCommentVNode("v-if", true),
              $setup.isFirstLoadFinished ? (vue.openBlock(), vue.createElementBlock("div", {
                key: 2,
                class: "fetch-more-container"
              }, [
                vue.createVNode($setup["FetchMore"], {
                  isFetching: $setup.isPullDownFetching,
                  isTerminateObserve: $setup.isStopFetchMore,
                  onOnExposed: $setup.pullDownFetchMoreData
                }, null, 8, ["isFetching", "isTerminateObserve"])
              ])) : vue.createCommentVNode("v-if", true)
            ])
          ],
          2
          /* CLASS */
        )
      ]),
      _: 1
      /* STABLE */
    });
  }
  const ReadReceiptPanel = /* @__PURE__ */ _export_sfc(_sfc_main$D, [["render", _sfc_render$C], ["__scopeId", "data-v-8316d693"], ["__file", "C:/Users/Administrator/Desktop/Project Folder/ZXHand/ZXHandwritting_APP_uniapp/TUIKit/components/TUIChat/message-list/read-receipt-panel/index.vue"]]);
  const doubleArrowIcon = "/assets/double-arrow.a1a15b8b.svg";
  const _sfc_main$C = /* @__PURE__ */ vue.defineComponent({
    __name: "index",
    emits: ["scrollToLatestMessage"],
    setup(__props, { expose: __expose, emit: __emit }) {
      const emits2 = __emit;
      const messageList = vue.ref([]);
      const currentConversationID = vue.ref("");
      const currentLastMessageTime = vue.ref(0);
      const newMessageCount = vue.ref(0);
      const isScrollOverOneScreen = vue.ref(false);
      const isExistLastMessage = vue.ref(false);
      const isScrollButtonVisible = vue.ref(false);
      const scrollButtonContent = vue.computed(
        () => newMessageCount.value ? `${newMessageCount.value}${Jt.t("TUIChat.条新消息")}` : Jt.t("TUIChat.回到最新位置")
      );
      vue.watch(
        () => [isScrollOverOneScreen.value, isExistLastMessage.value],
        () => {
          isScrollButtonVisible.value = isScrollOverOneScreen.value || isExistLastMessage.value;
          if (!isScrollButtonVisible.value) {
            resetNewMessageCount();
          }
        },
        { immediate: true }
      );
      vue.onMounted(() => {
        zt.watch(o$2.CHAT, {
          messageList: onMessageListUpdated,
          newMessageList: onNewMessageListUpdated
        });
        zt.watch(o$2.CONV, {
          currentConversation: onCurrentConversationUpdated
        });
      });
      vue.onUnmounted(() => {
        zt.unwatch(o$2.CHAT, {
          messageList: onMessageListUpdated,
          newMessageList: onNewMessageListUpdated
        });
        zt.unwatch(o$2.CONV, {
          currentConversation: onCurrentConversationUpdated
        });
      });
      function isTypingMessage(message2) {
        var _a, _b;
        return ((_b = JSONToObject$1((_a = message2.payload) == null ? void 0 : _a.data)) == null ? void 0 : _b.businessID) === "user_typing_status";
      }
      function onMessageListUpdated(newMessageList) {
        var _a, _b;
        messageList.value = newMessageList || [];
        const lastMessage = (_b = messageList.value) == null ? void 0 : _b[((_a = messageList.value) == null ? void 0 : _a.length) - 1];
        isExistLastMessage.value = !!(lastMessage && (lastMessage == null ? void 0 : lastMessage.time) < (currentLastMessageTime == null ? void 0 : currentLastMessageTime.value));
      }
      function onNewMessageListUpdated(newMessageList) {
        if (Array.isArray(newMessageList) && isScrollButtonVisible.value) {
          newMessageList.forEach((message2) => {
            if (message2 && message2.conversationID === currentConversationID.value && !message2.isDeleted && !message2.isRevoked && !isTypingMessage(message2)) {
              newMessageCount.value += 1;
            }
          });
        }
      }
      function onCurrentConversationUpdated(conversation) {
        var _a;
        if ((conversation == null ? void 0 : conversation.conversationID) !== currentConversationID.value) {
          resetNewMessageCount();
        }
        currentConversationID.value = (conversation == null ? void 0 : conversation.conversationID) || "";
        currentLastMessageTime.value = ((_a = conversation == null ? void 0 : conversation.lastMessage) == null ? void 0 : _a.lastTime) || 0;
      }
      async function judgeScrollOverOneScreen(e2) {
        var _a, _b, _c, _d, _e3;
        if (e2.target) {
          try {
            const { height } = await b(`#${(_a = e2.target) == null ? void 0 : _a.id}`, "messageList") || {};
            const scrollHeight = ((_b = e2.target) == null ? void 0 : _b.scrollHeight) || ((_c = e2.detail) == null ? void 0 : _c.scrollHeight);
            const scrollTop = ((_d = e2.target) == null ? void 0 : _d.scrollTop) || ((_e3 = e2.detail) == null ? void 0 : _e3.scrollTop) || 0;
            if (scrollHeight - scrollTop > 2 * height) {
              isScrollOverOneScreen.value = true;
              return;
            }
            isScrollOverOneScreen.value = false;
          } catch (error2) {
            isScrollOverOneScreen.value = false;
          }
        }
      }
      function resetMessageSource() {
        if (zt.getData(o$2.CHAT, "messageSource") !== void 0) {
          zt.update(o$2.CHAT, "messageSource", void 0);
        }
      }
      function resetNewMessageCount() {
        newMessageCount.value = 0;
      }
      function scrollToMessageListBottom() {
        resetMessageSource();
        resetNewMessageCount();
        emits2("scrollToLatestMessage");
      }
      __expose({
        judgeScrollOverOneScreen,
        isScrollButtonVisible
      });
      const __returned__ = { emits: emits2, messageList, currentConversationID, currentLastMessageTime, newMessageCount, isScrollOverOneScreen, isExistLastMessage, isScrollButtonVisible, scrollButtonContent, isTypingMessage, onMessageListUpdated, onNewMessageListUpdated, onCurrentConversationUpdated, judgeScrollOverOneScreen, resetMessageSource, resetNewMessageCount, scrollToMessageListBottom, Icon: Icon$1, get doubleArrowIcon() {
        return doubleArrowIcon;
      } };
      Object.defineProperty(__returned__, "__isScriptSetup", { enumerable: false, value: true });
      return __returned__;
    }
  });
  function _sfc_render$B(_ctx, _cache, $props, $setup, $data, $options) {
    return $setup.isScrollButtonVisible ? (vue.openBlock(), vue.createElementBlock("div", {
      key: 0,
      class: "scroll-button",
      onClick: $setup.scrollToMessageListBottom
    }, [
      vue.createVNode($setup["Icon"], {
        width: "10px",
        height: "10px",
        file: $setup.doubleArrowIcon
      }, null, 8, ["file"]),
      vue.createElementVNode(
        "div",
        { class: "scroll-button-text" },
        vue.toDisplayString($setup.scrollButtonContent),
        1
        /* TEXT */
      )
    ])) : vue.createCommentVNode("v-if", true);
  }
  const ScrollButton = /* @__PURE__ */ _export_sfc(_sfc_main$C, [["render", _sfc_render$B], ["__scopeId", "data-v-59f2ce7f"], ["__file", "C:/Users/Administrator/Desktop/Project Folder/ZXHand/ZXHandwritting_APP_uniapp/TUIKit/components/TUIChat/message-list/scroll-button/index.vue"]]);
  const _sfc_main$B = /* @__PURE__ */ vue.defineComponent({
    __name: "index",
    props: {
      content: { type: Object, required: true, default: () => ({}) },
      messageItem: { type: Object, required: true, default: () => ({}) }
    },
    setup(__props, { expose: __expose }) {
      __expose();
      const props2 = __props;
      const __returned__ = { props: props2, get isUniFrameWork() {
        return isUniFrameWork;
      } };
      Object.defineProperty(__returned__, "__isScriptSetup", { enumerable: false, value: true });
      return __returned__;
    }
  });
  function _sfc_render$A(_ctx, _cache, $props, $setup, $data, $options) {
    return vue.openBlock(), vue.createElementBlock("div", { class: "progress-message" }, [
      vue.renderSlot(_ctx.$slots, "default", {}, void 0, true),
      $setup.props.messageItem.status === "unSend" && $setup.props.messageItem.progress < 1 ? (vue.openBlock(), vue.createElementBlock("div", {
        key: 0,
        class: "progress-container"
      }, [
        !$setup.isUniFrameWork ? (vue.openBlock(), vue.createElementBlock("progress", {
          key: 0,
          class: "progress",
          value: $setup.props.messageItem.progress,
          max: "1"
        }, null, 8, ["value"])) : (vue.openBlock(), vue.createElementBlock("progress", {
          key: 1,
          activeColor: "#006EFF",
          class: "progress-common",
          percent: Math.round($setup.props.messageItem.progress * 100)
        }, null, 8, ["percent"]))
      ])) : vue.createCommentVNode("v-if", true)
    ]);
  }
  const ProgressMessage = /* @__PURE__ */ _export_sfc(_sfc_main$B, [["render", _sfc_render$A], ["__scopeId", "data-v-99d7e968"], ["__file", "C:/Users/Administrator/Desktop/Project Folder/ZXHand/ZXHandwritting_APP_uniapp/TUIKit/components/common/ProgressMessage/index.vue"]]);
  const _ChatStorage = class _ChatStorage {
    constructor() {
      this.chatStorage = null;
    }
    static getInstance() {
      if (!_ChatStorage.instance) {
        _ChatStorage.instance = new _ChatStorage();
      }
      return _ChatStorage.instance;
    }
    getChatStorage(key) {
      if (!this.chatStorage) {
        this.chatStorage = this.getChatStorageFromLocalStorage();
      }
      if (key) {
        return this.chatStorage[key];
      } else {
        throw new Error("No key provided");
      }
    }
    setChatStorage(key, value) {
      if (!this.chatStorage) {
        this.chatStorage = this.getChatStorageFromLocalStorage();
      }
      this.chatStorage[key] = value;
      try {
        if (isUniFrameWork) {
          i.setStorageSync(_ChatStorage.CHAT_STORAGE_KEY, JSON.stringify(this.chatStorage));
        } else {
          localStorage.setItem(_ChatStorage.CHAT_STORAGE_KEY, JSON.stringify(this.chatStorage));
        }
      } catch (error2) {
        throw new Error("Fail to set chat storage");
      }
    }
    getChatStorageFromLocalStorage() {
      let chatStorageString = "";
      if (isUniFrameWork) {
        chatStorageString = i.getStorageSync(_ChatStorage.CHAT_STORAGE_KEY) || "";
      } else {
        chatStorageString = localStorage.getItem(_ChatStorage.CHAT_STORAGE_KEY) || "";
      }
      if (!chatStorageString) {
        return {};
      }
      try {
        this.chatStorage = JSON.parse(chatStorageString);
      } catch (error2) {
        this.chatStorage = {};
      }
      return this.chatStorage;
    }
  };
  _ChatStorage.instance = null;
  _ChatStorage.CHAT_STORAGE_KEY = "TUI_CHAT_STORAGE";
  let ChatStorage = _ChatStorage;
  const chatStorage = ChatStorage.getInstance();
  const _sfc_main$A = /* @__PURE__ */ vue.defineComponent({
    __name: "index",
    props: {
      isGroup: { type: Boolean, required: true, default: false },
      groupID: { type: String, required: true, default: "" },
      isNotInGroup: { type: Boolean, required: true, default: false },
      isMultipleSelectMode: { type: Boolean, required: true, default: false }
    },
    emits: ["closeInputToolBar", "handleEditor", "toggleMultipleSelectMode"],
    setup(__props, { expose: __expose, emit: __emit }) {
      var _a;
      const emits2 = __emit;
      const props2 = __props;
      let selfAddValue = 0;
      let observer = null;
      let groupType;
      const sentReceiptMessageID = /* @__PURE__ */ new Set();
      const isOfficial = zt.getData(o$2.APP, "isOfficial");
      const thisInstance = ((_a = vue.getCurrentInstance()) == null ? void 0 : _a.proxy) || vue.getCurrentInstance();
      const messageList = vue.ref();
      const multipleSelectedMessageIDList = vue.ref([]);
      const isCompleted = vue.ref(false);
      const currentConversationID = vue.ref("");
      const toggleID = vue.ref("");
      const scrollTop = vue.ref(5e3);
      const TYPES2 = vue.ref(Kt.TYPES);
      const isLoadingMessage = vue.ref(false);
      const isLongpressing = vue.ref(false);
      const blinkMessageIDList = vue.ref([]);
      const messageTarget = vue.ref();
      const scrollButtonInstanceRef = vue.ref();
      const historyFirstMessageID = vue.ref("");
      const isShowSimpleMessageList = vue.ref(false);
      const simpleMessageListRenderMessageID = vue.ref();
      const audioPlayedMapping = vue.ref({});
      const broadcastNewAudioSrc = vue.ref("");
      const readStatusMessage = vue.ref();
      const isShowReadUserStatusPanel = vue.ref(false);
      const reSendDialogShow = vue.ref(false);
      const resendMessageData = vue.ref();
      const scrollToBottom = () => {
        scrollTop.value += 300;
        const timer2 = setTimeout(() => {
          scrollTop.value += 1;
          clearTimeout(timer2);
        }, 300);
      };
      const onCurrentConversationIDUpdated = (conversationID) => {
        currentConversationID.value = conversationID;
        if (isEnabledMessageReadReceiptGlobal()) {
          const { groupProfile } = zt.getConversationModel(conversationID) || {};
          groupType = groupProfile == null ? void 0 : groupProfile.type;
        }
        if (Object.keys(audioPlayedMapping.value).length > 0) {
          chatStorage.setChatStorage("audioPlayedMapping", audioPlayedMapping.value);
        }
      };
      vue.onMounted(() => {
        audioPlayedMapping.value = chatStorage.getChatStorage("audioPlayedMapping") || {};
        zt.watch(o$2.CHAT, {
          messageList: onMessageListUpdated,
          messageSource: onMessageSourceUpdated,
          isCompleted: onChatCompletedUpdated
        });
        zt.watch(o$2.CONV, {
          currentConversationID: onCurrentConversationIDUpdated
        });
        E("messageList", thisInstance);
        uni.$on("scroll-to-bottom", scrollToLatestMessage);
      });
      vue.onUnmounted(() => {
        zt.unwatch(o$2.CHAT, {
          messageList: onMessageListUpdated,
          isCompleted: onChatCompletedUpdated
        });
        zt.unwatch(o$2.CONV, {
          currentConversationID: onCurrentConversationIDUpdated
        });
        observer == null ? void 0 : observer.disconnect();
        observer = null;
        uni.$off("scroll-to-bottom");
        if (Object.keys(audioPlayedMapping.value).length > 0) {
          chatStorage.setChatStorage("audioPlayedMapping", audioPlayedMapping.value);
        }
      });
      const handelScrollListScroll = throttle(
        function(e2) {
          var _a2;
          (_a2 = scrollButtonInstanceRef.value) == null ? void 0 : _a2.judgeScrollOverOneScreen(e2);
        },
        500,
        { leading: true }
      );
      function getGlobalAudioContext(audioMap, options) {
        if (options == null ? void 0 : options.newAudioSrc) {
          broadcastNewAudioSrc.value = options.newAudioSrc;
        }
      }
      async function onMessageListUpdated(list) {
        var _a2, _b, _c;
        observer == null ? void 0 : observer.disconnect();
        messageList.value = list.filter((message2) => !message2.isDeleted).map((message2) => {
          message2.vueForRenderKey = `${message2.ID}`;
          return message2;
        });
        const newLastMessage = (_b = messageList.value) == null ? void 0 : _b[((_a2 = messageList.value) == null ? void 0 : _a2.length) - 1];
        if (messageTarget.value) {
          scrollAndBlinkMessage(messageTarget.value);
        } else if (!isLoadingMessage.value && !(((_c = scrollButtonInstanceRef.value) == null ? void 0 : _c.isScrollButtonVisible) && (newLastMessage == null ? void 0 : newLastMessage.flow) === "in")) {
          vue.nextTick(() => {
            scrollToBottom();
          });
        }
        if (isEnabledMessageReadReceiptGlobal()) {
          vue.nextTick(() => bindIntersectionObserver());
        }
      }
      async function scrollToLatestMessage() {
        try {
          const { scrollHeight } = await T(
            "#messageScrollList",
            "messageList"
          );
          if (scrollHeight) {
            scrollTop.value === scrollHeight ? scrollTop.value = scrollHeight + 1 : scrollTop.value = scrollHeight;
          } else {
            scrollToBottom();
          }
        } catch (error2) {
          scrollToBottom();
        }
      }
      async function onMessageSourceUpdated(message2) {
        messageTarget.value = message2;
        scrollAndBlinkMessage(messageTarget.value);
      }
      function scrollAndBlinkMessage(message2) {
        var _a2;
        if ((_a2 = messageList.value) == null ? void 0 : _a2.some(
          (messageListItem) => (messageListItem == null ? void 0 : messageListItem.ID) === (message2 == null ? void 0 : message2.ID)
        )) {
          vue.nextTick(async () => {
            await scrollToTargetMessage(message2);
            await blinkMessage(message2 == null ? void 0 : message2.ID);
            messageTarget.value = void 0;
          });
        }
      }
      function onChatCompletedUpdated(flag2) {
        isCompleted.value = flag2;
      }
      const getHistoryMessageList = () => {
        var _a2, _b;
        isLoadingMessage.value = true;
        const currentFirstMessageID = ((_b = (_a2 = messageList.value) == null ? void 0 : _a2[0]) == null ? void 0 : _b.ID) || "";
        Zt.getMessageList().then(() => {
          vue.nextTick(() => {
            historyFirstMessageID.value = currentFirstMessageID;
            const timer2 = setTimeout(() => {
              historyFirstMessageID.value = "";
              isLoadingMessage.value = false;
              clearTimeout(timer2);
            }, 500);
          });
        });
      };
      const openComplaintLink = () => {
      };
      const handleToggleMessageItem = (e2, message2, index2, isLongpress = false) => {
        if (props2.isMultipleSelectMode || props2.isNotInGroup) {
          return;
        }
        if (isLongpress) {
          isLongpressing.value = true;
        }
        toggleID.value = message2.ID;
      };
      let timer;
      const handleH5LongPress = (e2, message2, index2, type) => {
        if (props2.isMultipleSelectMode || props2.isNotInGroup) {
          return;
        }
        if (!isH5)
          return;
        function longPressHandler() {
          clearTimeout(timer);
          handleToggleMessageItem(e2, message2, index2, true);
        }
        function touchStartHandler() {
          timer = setTimeout(longPressHandler, 500);
        }
        function touchEndHandler() {
          clearTimeout(timer);
        }
        switch (type) {
          case "touchstart":
            touchStartHandler();
            break;
          case "touchend":
            touchEndHandler();
            setTimeout(() => {
              isLongpressing.value = false;
            }, 200);
            break;
        }
      };
      const handleEdit = (message2) => {
        emits2("handleEditor", message2, "reedit");
      };
      const resendMessage = (message2) => {
        reSendDialogShow.value = true;
        resendMessageData.value = message2;
      };
      const handleImagePreview = (index2) => {
        if (!messageList.value) {
          return;
        }
        const imageMessageIndex = [];
        const imageMessageList = messageList.value.filter((item, index22) => {
          if (!item.isRevoked && !item.hasRiskContent && item.type === TYPES2.value.MSG_IMAGE) {
            imageMessageIndex.push(index22);
            return true;
          }
          return false;
        });
        uni.previewImage({
          current: imageMessageIndex.indexOf(index2),
          urls: imageMessageList.map((message2) => {
            var _a2;
            return (_a2 = message2.payload.imageInfoArray) == null ? void 0 : _a2[2].url;
          }),
          indicator: "number"
        });
      };
      const resendMessageConfirm = () => {
        reSendDialogShow.value = !reSendDialogShow.value;
        const messageModel = resendMessageData.value;
        messageModel.resendMessage();
      };
      function blinkMessage(messageID) {
        return new Promise((resolve) => {
          const index2 = blinkMessageIDList.value.indexOf(messageID);
          if (index2 < 0) {
            blinkMessageIDList.value.push(messageID);
            const timer2 = setTimeout(() => {
              blinkMessageIDList.value.splice(
                blinkMessageIDList.value.indexOf(messageID),
                1
              );
              clearTimeout(timer2);
              resolve();
            }, 3e3);
          }
        });
      }
      function scrollTo(scrollHeight) {
        scrollTop.value = scrollHeight;
      }
      async function bindIntersectionObserver() {
        if (!messageList.value || messageList.value.length === 0) {
          return;
        }
        if (groupType === TYPES2.value.GRP_AVCHATROOM || groupType === TYPES2.value.GRP_COMMUNITY) {
          return;
        }
        observer == null ? void 0 : observer.disconnect();
        observer = uni.createIntersectionObserver(thisInstance, {
          threshold: [0.7],
          observeAll: true
          // In Uni-app, the `safetip` is also included, so a negative margin is needed to exclude it.
        }).relativeTo("#messageScrollList", { top: -70 });
        observer == null ? void 0 : observer.observe(".message-li.in .message-bubble-container", (res) => {
          var _a2;
          if (sentReceiptMessageID.has(res.id)) {
            return;
          }
          const matchingMessage = messageList.value.find((message2) => {
            return res.id.indexOf(message2.ID) > -1;
          });
          if (matchingMessage && matchingMessage.needReadReceipt && matchingMessage.flow === "in" && !((_a2 = matchingMessage.readReceiptInfo) == null ? void 0 : _a2.isPeerRead)) {
            Zt.sendMessageReadReceipt([matchingMessage]);
            sentReceiptMessageID.add(res.id);
          }
        });
      }
      function setReadReceiptPanelVisible(visible, message2) {
        if (visible && props2.isNotInGroup) {
          return;
        }
        if (!visible) {
          readStatusMessage.value = void 0;
        } else {
          readStatusMessage.value = message2;
        }
        isShowReadUserStatusPanel.value = visible;
      }
      async function scrollToTargetMessage(message2) {
        const targetMessageID = message2.ID;
        const isTargetMessageInScreen = messageList.value && messageList.value.some((msg) => msg.ID === targetMessageID);
        if (targetMessageID && isTargetMessageInScreen) {
          const timer2 = setTimeout(async () => {
            try {
              const scrollViewRect = await b(
                "#messageScrollList",
                "messageList"
              );
              const originalMessageRect = await b(
                "#tui-" + targetMessageID,
                "messageList"
              );
              const { scrollTop: scrollTop2 } = await T(
                "#messageScrollList",
                "messageList"
              );
              const finalScrollTop = originalMessageRect.top + scrollTop2 - scrollViewRect.top - selfAddValue++ % 2;
              scrollTo(finalScrollTop);
              clearTimeout(timer2);
            } catch (error2) {
            }
          }, 500);
        } else {
          Toast({
            message: Jt.t("TUIChat.无法定位到原消息"),
            type: TOAST_TYPE.WARNING
          });
        }
      }
      function onMessageListBackgroundClick() {
        emits2("closeInputToolBar");
      }
      vue.watch(() => props2.isMultipleSelectMode, (newValue) => {
        if (!newValue) {
          changeSelectMessageIDList({
            type: "clearAll",
            messageID: ""
          });
        }
      });
      function changeSelectMessageIDList({ type, messageID }) {
        if (type === "clearAll") {
          multipleSelectedMessageIDList.value = [];
        } else if (type === "add" && !multipleSelectedMessageIDList.value.includes(messageID)) {
          multipleSelectedMessageIDList.value.push(messageID);
        } else if (type === "remove") {
          multipleSelectedMessageIDList.value = multipleSelectedMessageIDList.value.filter((id) => id !== messageID);
        }
      }
      function mergeForwardMessage() {
        zt.update(o$2.CUSTOM, "multipleForwardMessageID", {
          isMergeForward: true,
          messageIDList: multipleSelectedMessageIDList.value
        });
      }
      function oneByOneForwardMessage() {
        zt.update(o$2.CUSTOM, "multipleForwardMessageID", {
          isMergeForward: false,
          messageIDList: multipleSelectedMessageIDList.value
        });
      }
      function assignMessageIDInUniapp(messageID) {
        simpleMessageListRenderMessageID.value = messageID;
        isShowSimpleMessageList.value = true;
      }
      function setAudioPlayed(messageID) {
        audioPlayedMapping.value[messageID] = true;
      }
      __expose({
        oneByOneForwardMessage,
        mergeForwardMessage,
        scrollToLatestMessage
      });
      const __returned__ = { emits: emits2, props: props2, get selfAddValue() {
        return selfAddValue;
      }, set selfAddValue(v2) {
        selfAddValue = v2;
      }, get observer() {
        return observer;
      }, set observer(v2) {
        observer = v2;
      }, get groupType() {
        return groupType;
      }, set groupType(v2) {
        groupType = v2;
      }, sentReceiptMessageID, isOfficial, thisInstance, messageList, multipleSelectedMessageIDList, isCompleted, currentConversationID, toggleID, scrollTop, TYPES: TYPES2, isLoadingMessage, isLongpressing, blinkMessageIDList, messageTarget, scrollButtonInstanceRef, historyFirstMessageID, isShowSimpleMessageList, simpleMessageListRenderMessageID, audioPlayedMapping, broadcastNewAudioSrc, readStatusMessage, isShowReadUserStatusPanel, reSendDialogShow, resendMessageData, scrollToBottom, onCurrentConversationIDUpdated, handelScrollListScroll, getGlobalAudioContext, onMessageListUpdated, scrollToLatestMessage, onMessageSourceUpdated, scrollAndBlinkMessage, onChatCompletedUpdated, getHistoryMessageList, openComplaintLink, handleToggleMessageItem, get timer() {
        return timer;
      }, set timer(v2) {
        timer = v2;
      }, handleH5LongPress, handleEdit, resendMessage, handleImagePreview, resendMessageConfirm, blinkMessage, scrollTo, bindIntersectionObserver, setReadReceiptPanelVisible, scrollToTargetMessage, onMessageListBackgroundClick, changeSelectMessageIDList, mergeForwardMessage, oneByOneForwardMessage, assignMessageIDInUniapp, setAudioPlayed, get TUITranslateService() {
        return Jt;
      }, get Link() {
        return Link$1;
      }, SimpleMessageList, MessageGroupApplication, MessageText, MessageImage, MessageAudio, MessageRecord, MessageFile, MessageFace, MessageCustom, MessageTip, MessageBubble, MessageLocation, MessageTimestamp, MessageVideo, MessageTool, MessageRevoked, MessagePlugin, ReadReceiptPanel, ScrollButton, get isPluginMessage() {
        return isPluginMessage;
      }, Dialog, Drawer, ProgressMessage, get isCreateGroupCustomMessage() {
        return isCreateGroupCustomMessage;
      }, get deepCopy() {
        return deepCopy;
      }, get isPC() {
        return isPC;
      }, get isMobile() {
        return isMobile;
      } };
      Object.defineProperty(__returned__, "__isScriptSetup", { enumerable: false, value: true });
      return __returned__;
    }
  });
  function _sfc_render$z(_ctx, _cache, $props, $setup, $data, $options) {
    return vue.openBlock(), vue.createElementBlock(
      "div",
      {
        class: vue.normalizeClass({
          "tui-chat": true,
          "tui-chat-h5": $setup.isMobile
        }),
        onClick: $setup.onMessageListBackgroundClick
      },
      [
        vue.createCommentVNode(" <JoinGroupCard /> "),
        vue.createElementVNode("div", { class: "tui-chat-main" }, [
          $setup.isOfficial ? (vue.openBlock(), vue.createElementBlock("div", {
            key: 0,
            class: "tui-chat-safe-tips"
          }, [
            vue.createElementVNode(
              "span",
              null,
              vue.toDisplayString($setup.TUITranslateService.t(
                "TUIChat.【安全提示】本 APP 仅用于体验腾讯云即时通信 IM 产品功能，不可用于业务洽谈与拓展。请勿轻信汇款、中奖等涉及钱款的信息，勿轻易拨打陌生电话，谨防上当受骗。"
              )),
              1
              /* TEXT */
            ),
            vue.createElementVNode(
              "a",
              {
                onClick: _cache[0] || (_cache[0] = ($event) => $setup.openComplaintLink($setup.Link.complaint))
              },
              vue.toDisplayString($setup.TUITranslateService.t("TUIChat.点此投诉")),
              1
              /* TEXT */
            )
          ])) : vue.createCommentVNode("v-if", true),
          $props.isGroup ? (vue.openBlock(), vue.createBlock($setup["MessageGroupApplication"], {
            key: $setup.props.groupID,
            groupID: $setup.props.groupID
          }, null, 8, ["groupID"])) : vue.createCommentVNode("v-if", true),
          vue.createElementVNode("scroll-view", {
            id: "messageScrollList",
            class: "tui-message-list",
            "scroll-y": "true",
            "scroll-top": $setup.scrollTop,
            "scroll-into-view": `tui-${$setup.historyFirstMessageID}`,
            onScroll: _cache[3] || (_cache[3] = (...args) => $setup.handelScrollListScroll && $setup.handelScrollListScroll(...args))
          }, [
            !$setup.isCompleted ? (vue.openBlock(), vue.createElementBlock(
              "p",
              {
                key: 0,
                class: "message-more",
                onClick: $setup.getHistoryMessageList
              },
              vue.toDisplayString($setup.TUITranslateService.t("TUIChat.查看更多")),
              1
              /* TEXT */
            )) : vue.createCommentVNode("v-if", true),
            (vue.openBlock(true), vue.createElementBlock(
              vue.Fragment,
              null,
              vue.renderList($setup.messageList, (item, index2) => {
                return vue.openBlock(), vue.createElementBlock("li", {
                  id: `tui-${item.ID}`,
                  key: item.vueForRenderKey,
                  class: vue.normalizeClass("message-li " + item.flow)
                }, [
                  vue.createVNode($setup["MessageTimestamp"], {
                    currTime: item.time,
                    prevTime: index2 > 0 ? $setup.messageList[index2 - 1].time : 0
                  }, null, 8, ["currTime", "prevTime"]),
                  vue.createElementVNode("div", {
                    class: "message-item",
                    onClick: _cache[2] || (_cache[2] = ($event) => $setup.toggleID = "")
                  }, [
                    item.type === $setup.TYPES.MSG_GRP_TIP || $setup.isCreateGroupCustomMessage(item) ? (vue.openBlock(), vue.createBlock($setup["MessageTip"], {
                      key: 0,
                      content: item.getMessageContent()
                    }, null, 8, ["content"])) : !item.isRevoked && !$setup.isPluginMessage(item) ? (vue.openBlock(), vue.createElementBlock("div", {
                      key: 1,
                      id: `msg-bubble-${item.ID}`,
                      class: "message-bubble-container",
                      onLongpress: ($event) => $setup.handleToggleMessageItem($event, item, index2, true),
                      onTouchstart: ($event) => $setup.handleH5LongPress($event, item, index2, "touchstart"),
                      onTouchend: ($event) => $setup.handleH5LongPress($event, item, index2, "touchend"),
                      onMouseover: ($event) => $setup.handleH5LongPress($event, item, index2, "touchend")
                    }, [
                      vue.createVNode($setup["MessageBubble"], {
                        messageItem: $setup.deepCopy(item),
                        content: item.getMessageContent(),
                        isAudioPlayed: $setup.audioPlayedMapping[item.ID],
                        blinkMessageIDList: $setup.blinkMessageIDList,
                        isMultipleSelectMode: $props.isMultipleSelectMode,
                        multipleSelectedMessageIDList: $setup.multipleSelectedMessageIDList,
                        onResendMessage: ($event) => $setup.resendMessage(item),
                        onBlinkMessage: $setup.blinkMessage,
                        onScrollTo: $setup.scrollTo,
                        onChangeSelectMessageIDList: $setup.changeSelectMessageIDList,
                        onSetReadReceiptPanelVisible: $setup.setReadReceiptPanelVisible
                      }, {
                        default: vue.withCtx(() => [
                          item.type === $setup.TYPES.MSG_TEXT ? (vue.openBlock(), vue.createBlock($setup["MessageText"], {
                            key: 0,
                            content: item.getMessageContent()
                          }, null, 8, ["content"])) : item.type === $setup.TYPES.MSG_IMAGE ? (vue.openBlock(), vue.createBlock($setup["ProgressMessage"], {
                            key: 1,
                            content: item.getMessageContent(),
                            messageItem: $setup.deepCopy(item)
                          }, {
                            default: vue.withCtx(() => [
                              vue.createVNode($setup["MessageImage"], {
                                content: item.getMessageContent(),
                                messageItem: item,
                                onPreviewImage: ($event) => $setup.handleImagePreview(index2)
                              }, null, 8, ["content", "messageItem", "onPreviewImage"])
                            ]),
                            _: 2
                            /* DYNAMIC */
                          }, 1032, ["content", "messageItem"])) : item.type === $setup.TYPES.MSG_VIDEO ? (vue.openBlock(), vue.createBlock($setup["ProgressMessage"], {
                            key: 2,
                            content: item.getMessageContent(),
                            messageItem: $setup.deepCopy(item)
                          }, {
                            default: vue.withCtx(() => [
                              vue.createVNode($setup["MessageVideo"], {
                                content: item.getMessageContent(),
                                messageItem: item
                              }, null, 8, ["content", "messageItem"])
                            ]),
                            _: 2
                            /* DYNAMIC */
                          }, 1032, ["content", "messageItem"])) : item.type === $setup.TYPES.MSG_AUDIO ? (vue.openBlock(), vue.createBlock($setup["MessageAudio"], {
                            key: 3,
                            content: item.getMessageContent(),
                            messageItem: item,
                            broadcastNewAudioSrc: $setup.broadcastNewAudioSrc,
                            onSetAudioPlayed: $setup.setAudioPlayed,
                            onGetGlobalAudioContext: $setup.getGlobalAudioContext
                          }, null, 8, ["content", "messageItem", "broadcastNewAudioSrc"])) : item.type === $setup.TYPES.MSG_MERGER ? (vue.openBlock(), vue.createBlock($setup["MessageRecord"], {
                            key: 4,
                            renderData: item.payload,
                            messageItem: item,
                            onAssignMessageIDInUniapp: $setup.assignMessageIDInUniapp
                          }, null, 8, ["renderData", "messageItem"])) : item.type === $setup.TYPES.MSG_FILE ? (vue.openBlock(), vue.createBlock($setup["MessageFile"], {
                            key: 5,
                            content: item.getMessageContent()
                          }, null, 8, ["content"])) : item.type === $setup.TYPES.MSG_FACE ? (vue.openBlock(), vue.createBlock($setup["MessageFace"], {
                            key: 6,
                            content: item.getMessageContent()
                          }, null, 8, ["content"])) : item.type === $setup.TYPES.MSG_LOCATION ? (vue.openBlock(), vue.createBlock($setup["MessageLocation"], {
                            key: 7,
                            content: item.getMessageContent()
                          }, null, 8, ["content"])) : item.type === $setup.TYPES.MSG_CUSTOM ? (vue.openBlock(), vue.createBlock($setup["MessageCustom"], {
                            key: 8,
                            content: item.getMessageContent(),
                            messageItem: item
                          }, null, 8, ["content", "messageItem"])) : vue.createCommentVNode("v-if", true)
                        ]),
                        _: 2
                        /* DYNAMIC */
                      }, 1032, ["messageItem", "content", "isAudioPlayed", "blinkMessageIDList", "isMultipleSelectMode", "multipleSelectedMessageIDList", "onResendMessage"])
                    ], 40, ["id", "onLongpress", "onTouchstart", "onTouchend", "onMouseover"])) : !item.isRevoked && $setup.isPluginMessage(item) ? (vue.openBlock(), vue.createBlock($setup["MessagePlugin"], {
                      key: 2,
                      message: item,
                      onResendMessage: $setup.resendMessage,
                      onHandleToggleMessageItem: $setup.handleToggleMessageItem,
                      onHandleH5LongPress: $setup.handleH5LongPress
                    }, null, 8, ["message"])) : (vue.openBlock(), vue.createBlock($setup["MessageRevoked"], {
                      key: 3,
                      isEdit: item.type === $setup.TYPES.MSG_TEXT,
                      messageItem: item,
                      onMessageEdit: ($event) => $setup.handleEdit(item)
                    }, null, 8, ["isEdit", "messageItem", "onMessageEdit"])),
                    vue.createCommentVNode(" message tool "),
                    item.ID === $setup.toggleID ? (vue.openBlock(), vue.createBlock($setup["MessageTool"], {
                      key: 4,
                      class: vue.normalizeClass({
                        "message-tool": true,
                        "message-tool-out": item.flow === "out",
                        "message-tool-in": item.flow === "in"
                      }),
                      messageItem: item,
                      isMultipleSelectMode: $props.isMultipleSelectMode,
                      onToggleMultipleSelectMode: _cache[1] || (_cache[1] = () => $setup.emits("toggleMultipleSelectMode"))
                    }, null, 8, ["class", "messageItem", "isMultipleSelectMode"])) : vue.createCommentVNode("v-if", true)
                  ])
                ], 10, ["id"]);
              }),
              128
              /* KEYED_FRAGMENT */
            ))
          ], 40, ["scroll-top", "scroll-into-view"]),
          vue.createCommentVNode(" scroll button "),
          vue.createVNode(
            $setup["ScrollButton"],
            {
              ref: "scrollButtonInstanceRef",
              onScrollToLatestMessage: $setup.scrollToLatestMessage
            },
            null,
            512
            /* NEED_PATCH */
          ),
          $setup.reSendDialogShow ? (vue.openBlock(), vue.createBlock($setup["Dialog"], {
            key: 2,
            show: $setup.reSendDialogShow,
            isH5: !$setup.isPC,
            center: true,
            isHeaderShow: $setup.isPC,
            onSubmit: _cache[4] || (_cache[4] = ($event) => $setup.resendMessageConfirm()),
            "onUpdate:show": _cache[5] || (_cache[5] = (e2) => $setup.reSendDialogShow = e2)
          }, {
            default: vue.withCtx(() => [
              vue.createElementVNode(
                "p",
                { class: "delDialog-title" },
                vue.toDisplayString($setup.TUITranslateService.t("TUIChat.确认重发该消息？")),
                1
                /* TEXT */
              )
            ]),
            _: 1
            /* STABLE */
          }, 8, ["show", "isH5", "isHeaderShow"])) : vue.createCommentVNode("v-if", true),
          vue.createCommentVNode(" read receipt panel "),
          $setup.isShowReadUserStatusPanel ? (vue.openBlock(), vue.createBlock($setup["ReadReceiptPanel"], {
            key: 3,
            message: Object.assign({}, $setup.readStatusMessage),
            onSetReadReceiptPanelVisible: $setup.setReadReceiptPanelVisible
          }, null, 8, ["message"])) : vue.createCommentVNode("v-if", true),
          vue.createCommentVNode(" simple message list "),
          vue.createVNode($setup["Drawer"], {
            visible: $setup.isShowSimpleMessageList,
            overlayColor: "transparent",
            popDirection: "right"
          }, {
            default: vue.withCtx(() => [
              vue.createVNode($setup["SimpleMessageList"], {
                style: { height: "100%" },
                isMounted: $setup.isShowSimpleMessageList,
                messageID: $setup.simpleMessageListRenderMessageID,
                onCloseOverlay: _cache[6] || (_cache[6] = ($event) => $setup.isShowSimpleMessageList = false)
              }, null, 8, ["isMounted", "messageID"])
            ]),
            _: 1
            /* STABLE */
          }, 8, ["visible"])
        ])
      ],
      2
      /* CLASS */
    );
  }
  const MessageList = /* @__PURE__ */ _export_sfc(_sfc_main$A, [["render", _sfc_render$z], ["__scopeId", "data-v-c85b5b22"], ["__file", "C:/Users/Administrator/Desktop/Project Folder/ZXHand/ZXHandwritting_APP_uniapp/TUIKit/components/TUIChat/message-list/index.vue"]]);
  const _ConversationDraftManager = class _ConversationDraftManager {
    constructor() {
      this.quoteMessageMap = /* @__PURE__ */ new Map();
    }
    static getInstance() {
      if (!_ConversationDraftManager.instance) {
        _ConversationDraftManager.instance = new _ConversationDraftManager();
      }
      return _ConversationDraftManager.instance;
    }
    setStore(conversationID, draftContent, abstract, quoteMessage) {
      var _a, _b;
      if (conversationID && (this.isEditorNotEmpty(draftContent) || ((_a = quoteMessage == null ? void 0 : quoteMessage.message) == null ? void 0 : _a.ID))) {
        let additionalDraftInfo = {};
        if ((_b = quoteMessage == null ? void 0 : quoteMessage.message) == null ? void 0 : _b.ID) {
          this.quoteMessageMap.set(quoteMessage.message.ID, quoteMessage.message);
          additionalDraftInfo = { messageID: quoteMessage.message.ID, type: quoteMessage.type };
        }
        const draftParams = {
          conversationID,
          draftInfo: {
            html: draftContent,
            abstract,
            ...additionalDraftInfo
          }
        };
        Wt.setConversationDraft(draftParams);
        zt.update(o$2.CHAT, "quoteMessage", { message: void 0, type: "quote" });
      }
    }
    getStore(conversationID, setEditorContentCallback) {
      const conversation = zt.getConversationModel(conversationID);
      if (!conversation) {
        return;
      }
      if (conversation.conversationID && conversation.draftText) {
        const draftObject = JSONToObject$1(conversation.draftText);
        zt.update(o$2.CHAT, "quoteMessage", { message: this.quoteMessageMap.get(draftObject.messageID) || void 0, type: draftObject.type });
        setEditorContentCallback(draftObject.html);
      }
      Wt.setConversationDraft({ conversationID: conversation.conversationID });
    }
    generateAbstract(editorContent) {
      let abstract = "";
      editorContent == null ? void 0 : editorContent.forEach((item) => {
        switch (item.type) {
          case "text":
            abstract += transformTextWithKeysToEmojiNames(item.payload.text || "");
            break;
          case "image":
            abstract += Jt.t("TUIChat.图片");
            break;
          case "video":
            abstract += Jt.t("TUIChat.视频");
            break;
          case "file":
            abstract += Jt.t("TUIChat.文件");
            break;
        }
      });
      return abstract;
    }
    isEditorNotEmpty(editorHTML) {
      return editorHTML && !editorHTML.includes("is-empty") && editorHTML !== "<p></p>";
    }
  };
  _ConversationDraftManager.instance = null;
  let ConversationDraftManager = _ConversationDraftManager;
  const DraftManager = ConversationDraftManager.getInstance();
  const sendMessageErrorCodeMap = /* @__PURE__ */ new Map([
    [3123, "文本包含本地审核拦截词"],
    [4004, "图片消息失败,无效的图片格式"],
    [4005, "文件消息失败,禁止发送违规封禁的文件"],
    [7004, "文件不存在,请检查文件路径是否正确"],
    [7005, "文件大小超出了限制,如果上传文件,最大限制是100MB"],
    [8001, "消息长度超出限制,消息长度不要超过12K"],
    [80001, "消息或者资料中文本存在敏感内容,发送失败"],
    [80004, "消息中图片存在敏感内容,发送失败"]
  ]);
  const sendMessages = async (messageList, currentConversation) => {
    if (zt.getData(o$2.CHAT, "messageSource")) {
      zt.update(o$2.CHAT, "messageSource", void 0);
    }
    messageList == null ? void 0 : messageList.forEach(async (content) => {
      var _a, _b, _c, _d, _e3, _f2, _g2;
      try {
        const options = {
          to: ((_a = currentConversation == null ? void 0 : currentConversation.groupProfile) == null ? void 0 : _a.groupID) || ((_b = currentConversation == null ? void 0 : currentConversation.userProfile) == null ? void 0 : _b.userID),
          conversationType: currentConversation == null ? void 0 : currentConversation.type,
          payload: {},
          needReadReceipt: isEnabledMessageReadReceiptGlobal()
        };
        let textMessageContent;
        const sendMessageOptions = {
          offlinePushInfo: {}
        };
        const offlinePushInfoCreateParams = {
          conversation: currentConversation,
          payload: content.payload,
          messageType: ""
        };
        switch (content == null ? void 0 : content.type) {
          case "text":
            textMessageContent = JSON.parse(JSON.stringify((_c = content.payload) == null ? void 0 : _c.text));
            if (!textMessageContent) {
              break;
            }
            options.payload = {
              text: textMessageContent
            };
            offlinePushInfoCreateParams.messageType = Kt.TYPES.MSG_TEXT;
            sendMessageOptions.offlinePushInfo = OfflinePushInfoManager.create(offlinePushInfoCreateParams);
            if ((_d = content.payload) == null ? void 0 : _d.atUserList) {
              options.payload.atUserList = content.payload.atUserList;
              await Zt.sendTextAtMessage(options, sendMessageOptions);
            } else {
              await Zt.sendTextMessage(options, sendMessageOptions);
            }
            break;
          case "image":
            options.payload = {
              file: (_e3 = content.payload) == null ? void 0 : _e3.file
            };
            offlinePushInfoCreateParams.messageType = Kt.TYPES.MSG_IMAGE;
            sendMessageOptions.offlinePushInfo = OfflinePushInfoManager.create(offlinePushInfoCreateParams);
            await Zt.sendImageMessage(options, sendMessageOptions);
            break;
          case "video":
            options.payload = {
              file: (_f2 = content.payload) == null ? void 0 : _f2.file
            };
            offlinePushInfoCreateParams.messageType = Kt.TYPES.MSG_VIDEO;
            sendMessageOptions.offlinePushInfo = OfflinePushInfoManager.create(offlinePushInfoCreateParams);
            await Zt.sendVideoMessage(options, sendMessageOptions);
            break;
          case "file":
            options.payload = {
              file: (_g2 = content.payload) == null ? void 0 : _g2.file
            };
            offlinePushInfoCreateParams.messageType = Kt.TYPES.MSG_FILE;
            sendMessageOptions.offlinePushInfo = OfflinePushInfoManager.create(offlinePushInfoCreateParams);
            await Zt.sendFileMessage(options, sendMessageOptions);
            break;
          default:
            break;
        }
        enableSampleTaskStatus("sendMessage");
      } catch (error2) {
        Toast({
          message: sendMessageErrorCodeMap.get(error2 == null ? void 0 : error2.code) ? Jt.t(`TUIChat.${sendMessageErrorCodeMap.get(error2.code)}`) : error2 == null ? void 0 : error2.message,
          type: TOAST_TYPE.ERROR
        });
        if (zt.getData(o$2.CHAT, "quoteMessage")) {
          zt.update(o$2.CHAT, "quoteMessage", {});
        }
      }
    });
  };
  const sendTyping = (inputContentEmpty, inputBlur) => {
    if (!inputContentEmpty && !inputBlur) {
      Zt.enterTypingState();
    } else {
      Zt.leaveTypingState();
    }
  };
  const _sfc_main$z = /* @__PURE__ */ vue.defineComponent({
    __name: "message-input-editor",
    props: {
      placeholder: {
        type: String,
        default: "this is placeholder"
      },
      replayOrReferenceMessage: {
        type: Object,
        default: () => ({}),
        required: false
      },
      isMuted: {
        type: Boolean,
        default: true
      },
      muteText: {
        type: String,
        default: ""
      },
      enableInput: {
        type: Boolean,
        default: true
      },
      enableAt: {
        type: Boolean,
        default: true
      },
      enableTyping: {
        type: Boolean,
        default: true
      },
      isGroup: {
        type: Boolean,
        default: false
      }
    },
    emits: ["onTyping", "onFocus", "onAt"],
    setup(__props, { expose: __expose, emit: __emit }) {
      const props2 = __props;
      const emits2 = __emit;
      const inputText = vue.ref("");
      const inputRef = vue.ref();
      const inputBlur = vue.ref(true);
      const inputContentEmpty = vue.ref(true);
      const allInsertedAtInfo = /* @__PURE__ */ new Map();
      const currentConversation = vue.ref();
      const currentConversationID = vue.ref("");
      const currentQuoteMessage = vue.ref();
      vue.onMounted(() => {
        zt.watch(o$2.CONV, {
          currentConversation: onCurrentConversationUpdated
        });
        zt.watch(o$2.CHAT, {
          quoteMessage: onQuoteMessageUpdated
        });
        uni.$on("insert-emoji", (data) => {
          var _a;
          inputText.value += (_a = data == null ? void 0 : data.emoji) == null ? void 0 : _a.name;
        });
        uni.$on("send-message-in-emoji-picker", () => {
          handleSendMessage();
        });
      });
      vue.onUnmounted(() => {
        if (currentConversationID.value) {
          DraftManager.setStore(currentConversationID.value, inputText.value, inputText.value, currentQuoteMessage.value);
        }
        uni.$off("insertEmoji");
        uni.$off("send-message-in-emoji-picker");
        zt.unwatch(o$2.CONV, {
          currentConversation: onCurrentConversationUpdated
        });
        zt.unwatch(o$2.CHAT, {
          quoteMessage: onQuoteMessageUpdated
        });
        reset();
      });
      const handleSendMessage = () => {
        const messageList = getEditorContent();
        resetEditor();
        sendMessages(messageList, currentConversation.value);
      };
      const insertAt = (atInfo) => {
        if (!(allInsertedAtInfo == null ? void 0 : allInsertedAtInfo.has(atInfo == null ? void 0 : atInfo.id))) {
          allInsertedAtInfo == null ? void 0 : allInsertedAtInfo.set(atInfo == null ? void 0 : atInfo.id, atInfo == null ? void 0 : atInfo.label);
        }
        inputText.value += atInfo == null ? void 0 : atInfo.label;
      };
      const getEditorContent = () => {
        let text = inputText.value;
        text = transformTextWithEmojiNamesToKeys(text);
        const atUserList = [];
        allInsertedAtInfo == null ? void 0 : allInsertedAtInfo.forEach((value, key) => {
          if (text == null ? void 0 : text.includes("@" + value)) {
            atUserList.push(key);
          }
        });
        const payload = {
          text
        };
        if (atUserList == null ? void 0 : atUserList.length) {
          payload.atUserList = atUserList;
        }
        return [
          {
            type: "text",
            payload
          }
        ];
      };
      const resetEditor = () => {
        inputText.value = "";
        inputContentEmpty.value = true;
        allInsertedAtInfo == null ? void 0 : allInsertedAtInfo.clear();
      };
      const setEditorContent = (content) => {
        inputText.value = content;
      };
      const onBlur = () => {
        inputBlur.value = true;
      };
      const onFocus = (e2) => {
        var _a;
        inputBlur.value = false;
        emits2("onFocus", (_a = e2 == null ? void 0 : e2.detail) == null ? void 0 : _a.height);
      };
      const isEditorContentEmpty = () => {
        var _a;
        inputContentEmpty.value = ((_a = inputText == null ? void 0 : inputText.value) == null ? void 0 : _a.length) ? false : true;
      };
      const onInput = (e2) => {
        var _a;
        const text = (_a = e2 == null ? void 0 : e2.detail) == null ? void 0 : _a.value;
        isEditorContentEmpty();
        if (props2.isGroup && (text.endsWith("@") || text.endsWith("@\n"))) {
          i == null ? void 0 : i.hideKeyboard();
          emits2("onAt", true);
        }
      };
      vue.watch(
        () => [inputContentEmpty.value, inputBlur.value],
        (newVal, oldVal) => {
          if (newVal !== oldVal) {
            emits2("onTyping", inputContentEmpty.value, inputBlur.value);
          }
        },
        {
          immediate: true,
          deep: true
        }
      );
      function onCurrentConversationUpdated(conversation) {
        const prevConversationID = currentConversationID.value;
        currentConversation.value = conversation;
        currentConversationID.value = conversation == null ? void 0 : conversation.conversationID;
        if (prevConversationID !== currentConversationID.value) {
          if (prevConversationID) {
            DraftManager.setStore(
              prevConversationID,
              inputText.value,
              inputText.value,
              currentQuoteMessage.value
            );
          }
          resetEditor();
          if (currentConversationID.value) {
            DraftManager.getStore(currentConversationID.value, setEditorContent);
          }
        }
      }
      function onQuoteMessageUpdated(options) {
        currentQuoteMessage.value = options;
      }
      function reset() {
        inputBlur.value = true;
        currentConversation.value = null;
        currentConversationID.value = "";
        currentQuoteMessage.value = null;
        resetEditor();
      }
      __expose({
        insertAt,
        resetEditor,
        setEditorContent,
        getEditorContent
      });
      const __returned__ = { props: props2, emits: emits2, inputText, inputRef, inputBlur, inputContentEmpty, allInsertedAtInfo, currentConversation, currentConversationID, currentQuoteMessage, handleSendMessage, insertAt, getEditorContent, resetEditor, setEditorContent, onBlur, onFocus, isEditorContentEmpty, onInput, onCurrentConversationUpdated, onQuoteMessageUpdated, reset, get isPC() {
        return isPC;
      } };
      Object.defineProperty(__returned__, "__isScriptSetup", { enumerable: false, value: true });
      return __returned__;
    }
  });
  function _sfc_render$y(_ctx, _cache, $props, $setup, $data, $options) {
    return vue.openBlock(), vue.createElementBlock(
      "div",
      {
        class: vue.normalizeClass({
          "message-input-container": true,
          "message-input-container-h5": !$setup.isPC
        })
      },
      [
        $setup.props.isMuted ? (vue.openBlock(), vue.createElementBlock(
          "div",
          {
            key: 0,
            class: "message-input-mute"
          },
          vue.toDisplayString($setup.props.muteText),
          1
          /* TEXT */
        )) : vue.createCommentVNode("v-if", true),
        vue.withDirectives(vue.createElementVNode("input", {
          id: "editor",
          ref: "inputRef",
          "onUpdate:modelValue": _cache[0] || (_cache[0] = ($event) => $setup.inputText = $event),
          "adjust-position": true,
          "cursor-spacing": "20",
          "confirm-type": "send",
          "confirm-hold": true,
          maxlength: "140",
          type: "text",
          "placeholder-class": "input-placeholder",
          class: "message-input-area",
          placeholder: $setup.props.placeholder,
          "auto-blur": "",
          onConfirm: $setup.handleSendMessage,
          onInput: $setup.onInput,
          onBlur: $setup.onBlur,
          onFocus: $setup.onFocus
        }, null, 40, ["placeholder"]), [
          [vue.vModelText, $setup.inputText]
        ])
      ],
      2
      /* CLASS */
    );
  }
  const MessageInputEditor = /* @__PURE__ */ _export_sfc(_sfc_main$z, [["render", _sfc_render$y], ["__scopeId", "data-v-6acc9af1"], ["__file", "C:/Users/Administrator/Desktop/Project Folder/ZXHand/ZXHandwritting_APP_uniapp/TUIKit/components/TUIChat/message-input/message-input-editor.vue"]]);
  const _sfc_main$y = /* @__PURE__ */ vue.defineComponent({
    __name: "index",
    props: {
      // Whether to display the bottom pop-up dialog box
      show: {
        type: Boolean,
        default: false
      },
      // Whether a mask layer is required, the default is true
      modal: {
        type: Boolean,
        default: true
      },
      // Popup box content area height (excluding mask), default is fit-content
      height: {
        type: String,
        default: "fit-content"
      },
      // Whether the pop-up dialog box can be closed by clicking outside, the default is true
      // uniapp only supports closing the pop-up dialog box by clicking the mask
      closeByClickOutside: {
        type: Boolean,
        default: true
      },
      // The rounded angle of the top border corners is 0px by default, i.e. right angle by default
      borderRadius: {
        type: String,
        default: "0px"
      },
      title: {
        type: String,
        default: ""
      },
      // Whether to display the top close button, not displayed by default
      showHeaderCloseButton: {
        type: Boolean,
        default: false
      },
      // Whether to display the submit button at the bottom, not displayed by default
      showFooterSubmitButton: {
        type: Boolean,
        default: false
      },
      // Bottom submit button text, only valid when showFooterSubmitButton is true
      submitButtonContent: {
        type: String,
        default: () => Jt.t("确定")
      }
    },
    emits: ["onOpen", "onClose", "onSubmit"],
    setup(__props, { expose: __expose, emit: __emit }) {
      __expose();
      const props2 = __props;
      const emits2 = __emit;
      const dialogRef = vue.ref();
      vue.watch(
        () => props2.show,
        (newVal, oldVal) => {
          if (newVal === oldVal) {
            return;
          }
          switch (newVal) {
            case true:
              emits2("onOpen", dialogRef);
              vue.nextTick(() => {
                if (isH5 && !isUniFrameWork) {
                  if (props2.closeByClickOutside) {
                    R.listen({
                      domRefs: dialogRef.value,
                      handler: closeBottomPopup
                    });
                  }
                }
              });
              break;
            case false:
              emits2("onClose", dialogRef);
              break;
          }
        }
      );
      const closeBottomPopup = () => {
        if (isUniFrameWork || isH5) {
          emits2("onClose", dialogRef);
        }
      };
      const submit = () => {
        emits2("onSubmit");
        closeBottomPopup();
      };
      const __returned__ = { props: props2, emits: emits2, dialogRef, closeBottomPopup, submit, get TUITranslateService() {
        return Jt;
      }, get isPC() {
        return isPC;
      }, get isUniFrameWork() {
        return isUniFrameWork;
      } };
      Object.defineProperty(__returned__, "__isScriptSetup", { enumerable: false, value: true });
      return __returned__;
    }
  });
  function _sfc_render$x(_ctx, _cache, $props, $setup, $data, $options) {
    return $setup.props.show ? (vue.openBlock(), vue.createElementBlock("div", { key: 0 }, [
      !$setup.isPC ? (vue.openBlock(), vue.createElementBlock(
        "div",
        {
          key: 0,
          class: vue.normalizeClass([
            "bottom-popup",
            !$setup.isPC && "bottom-popup-h5",
            !$setup.isPC && $setup.props.modal && "bottom-popup-modal",
            $setup.isUniFrameWork && "bottom-popup-uni"
          ]),
          onClick: $setup.closeBottomPopup
        },
        [
          vue.createElementVNode(
            "div",
            {
              ref: "dialogRef",
              class: vue.normalizeClass(["bottom-popup-main", !$setup.isPC && "bottom-popup-h5-main"]),
              style: vue.normalizeStyle({
                height: $setup.props.height,
                borderTopLeftRadius: $setup.props.borderRadius,
                borderTopRightRadius: $setup.props.borderRadius
              }),
              onClick: _cache[0] || (_cache[0] = vue.withModifiers(() => {
              }, ["stop"]))
            },
            [
              $props.title || $props.showHeaderCloseButton ? (vue.openBlock(), vue.createElementBlock("div", {
                key: 0,
                class: "header"
              }, [
                $props.title ? (vue.openBlock(), vue.createElementBlock(
                  "div",
                  {
                    key: 0,
                    class: "header-title"
                  },
                  vue.toDisplayString($props.title),
                  1
                  /* TEXT */
                )) : vue.createCommentVNode("v-if", true),
                $props.showHeaderCloseButton ? (vue.openBlock(), vue.createElementBlock(
                  "div",
                  {
                    key: 1,
                    class: "header-close",
                    onClick: $setup.closeBottomPopup
                  },
                  vue.toDisplayString($setup.TUITranslateService.t("关闭")),
                  1
                  /* TEXT */
                )) : vue.createCommentVNode("v-if", true)
              ])) : vue.createCommentVNode("v-if", true),
              vue.renderSlot(_ctx.$slots, "default", {}, void 0, true),
              $props.showFooterSubmitButton ? (vue.openBlock(), vue.createElementBlock("div", {
                key: 1,
                class: "footer"
              }, [
                vue.createElementVNode(
                  "div",
                  {
                    class: "footer-submit",
                    onClick: $setup.submit
                  },
                  vue.toDisplayString($props.submitButtonContent),
                  1
                  /* TEXT */
                )
              ])) : vue.createCommentVNode("v-if", true)
            ],
            6
            /* CLASS, STYLE */
          )
        ],
        2
        /* CLASS */
      )) : vue.renderSlot(_ctx.$slots, "default", { key: 1 }, void 0, true)
    ])) : vue.createCommentVNode("v-if", true);
  }
  const BottomPopup = /* @__PURE__ */ _export_sfc(_sfc_main$y, [["render", _sfc_render$x], ["__scopeId", "data-v-6d2e47d7"], ["__file", "C:/Users/Administrator/Desktop/Project Folder/ZXHand/ZXHandwritting_APP_uniapp/TUIKit/components/common/BottomPopup/index.vue"]]);
  const _sfc_main$x = /* @__PURE__ */ vue.defineComponent({
    __name: "index",
    emits: ["onAtListOpen", "insertAt"],
    setup(__props, { expose: __expose, emit: __emit }) {
      const emits2 = __emit;
      const MessageInputAt2 = vue.ref();
      const memberListItems = vue.ref();
      const showAtList = vue.ref(false);
      const memberList = vue.ref();
      const allMemberList = vue.ref();
      const showMemberList = vue.ref();
      const isGroup = vue.ref(false);
      const position = vue.ref({
        left: 0,
        top: 0
      });
      const selectedIndex = vue.ref(0);
      const currentConversationID = vue.ref("");
      const all = {
        userID: Kt.TYPES.MSG_AT_ALL,
        nick: "所有人",
        isAll: true,
        avatar: "https://web.sdk.qcloud.com/im/assets/images/at.svg"
      };
      zt.watch(o$2.CONV, {
        currentConversationID: (id) => {
          var _a, _b;
          if (id !== currentConversationID.value) {
            currentConversationID.value = id;
            memberList.value = [];
            allMemberList.value = [];
            showMemberList.value = [];
            isGroup.value = false;
            zt.update(o$2.CUSTOM, "memberList", memberList.value);
            if ((_a = currentConversationID == null ? void 0 : currentConversationID.value) == null ? void 0 : _a.startsWith("GROUP")) {
              isGroup.value = true;
              const groupID = (_b = currentConversationID == null ? void 0 : currentConversationID.value) == null ? void 0 : _b.substring(5);
              Qt.switchGroup(groupID);
            } else {
              Qt.switchGroup("");
            }
          }
        }
      });
      zt.watch(o$2.GRP, {
        currentGroupMemberList: (list) => {
          memberList.value = list;
          allMemberList.value = [all, ...memberList.value];
          showMemberList.value = allMemberList.value;
          zt.update(o$2.CUSTOM, "memberList", memberList.value);
        }
      });
      const toggleAtList = (show) => {
        if (!isGroup.value) {
          return;
        }
        showAtList.value = show;
        if (showAtList.value) {
          emits2("onAtListOpen");
        }
      };
      const handleAtListPosition = (positionData) => {
        position.value = positionData;
      };
      const setCurrentSelectIndex = (index2) => {
        var _a, _b;
        selectedIndex.value = index2;
        (_b = (_a = memberListItems.value) == null ? void 0 : _a[selectedIndex.value]) == null ? void 0 : _b.scrollIntoView(false);
      };
      const setShowMemberList = (list) => {
        showMemberList.value = list;
      };
      i.toggleAtList = toggleAtList;
      i.handleAtListPosition = handleAtListPosition;
      i.setCurrentSelectIndex = setCurrentSelectIndex;
      i.setShowMemberList = setShowMemberList;
      __expose({
        toggleAtList
      });
      vue.watch(
        () => [position.value, MessageInputAt2 == null ? void 0 : MessageInputAt2.value],
        () => {
          var _a;
          if (isH5 || !(MessageInputAt2 == null ? void 0 : MessageInputAt2.value) || !((_a = MessageInputAt2 == null ? void 0 : MessageInputAt2.value) == null ? void 0 : _a.style)) {
            return;
          }
          MessageInputAt2.value.style.left = position.value.left + "px";
          MessageInputAt2.value.style.top = position.value.top - MessageInputAt2.value.clientHeight + "px";
        }
      );
      const closeAt = () => {
        showAtList.value = false;
        showMemberList.value = allMemberList.value;
        position.value = {
          left: 0,
          top: 0
        };
      };
      const selectItem = (index2) => {
        var _a;
        if (isPC && i.selectItem) {
          i.selectItem(index2);
        } else {
          if ((_a = showMemberList == null ? void 0 : showMemberList.value) == null ? void 0 : _a.length) {
            const item = showMemberList == null ? void 0 : showMemberList.value[index2];
            emits2("insertAt", {
              id: item == null ? void 0 : item.userID,
              label: (item == null ? void 0 : item.nick) || (item == null ? void 0 : item.userID)
            });
          }
        }
        closeAt();
      };
      const handleMemberAvatar = (item) => {
        return (item == null ? void 0 : item.avatar) || "https://web.sdk.qcloud.com/component/TUIKit/assets/avatar_21.png";
      };
      const handleMemberName = (item) => {
        return (item == null ? void 0 : item.nick) ? item == null ? void 0 : item.nick : item == null ? void 0 : item.userID;
      };
      const __returned__ = { emits: emits2, MessageInputAt: MessageInputAt2, memberListItems, showAtList, memberList, allMemberList, showMemberList, isGroup, position, selectedIndex, currentConversationID, all, toggleAtList, handleAtListPosition, setCurrentSelectIndex, setShowMemberList, closeAt, selectItem, handleMemberAvatar, handleMemberName, get TUITranslateService() {
        return Jt;
      }, get isPC() {
        return isPC;
      }, BottomPopup };
      Object.defineProperty(__returned__, "__isScriptSetup", { enumerable: false, value: true });
      return __returned__;
    }
  });
  function _sfc_render$w(_ctx, _cache, $props, $setup, $data, $options) {
    return vue.openBlock(), vue.createBlock($setup["BottomPopup"], {
      show: $setup.showAtList,
      onOnClose: $setup.closeAt
    }, {
      default: vue.withCtx(() => [
        vue.createElementVNode(
          "div",
          {
            ref: "MessageInputAt",
            class: vue.normalizeClass([$setup.isPC ? "message-input-at" : "message-input-at-h5"])
          },
          [
            vue.createElementVNode(
              "div",
              {
                ref: "dialog",
                class: "member-list"
              },
              [
                !$setup.isPC ? (vue.openBlock(), vue.createElementBlock("header", {
                  key: 0,
                  class: "member-list-title"
                }, [
                  vue.createElementVNode(
                    "span",
                    { class: "title" },
                    vue.toDisplayString($setup.TUITranslateService.t("TUIChat.选择提醒的人")),
                    1
                    /* TEXT */
                  )
                ])) : vue.createCommentVNode("v-if", true),
                vue.createElementVNode("ul", { class: "member-list-box" }, [
                  (vue.openBlock(true), vue.createElementBlock(
                    vue.Fragment,
                    null,
                    vue.renderList($setup.showMemberList, (item, index2) => {
                      return vue.openBlock(), vue.createElementBlock("li", {
                        key: index2,
                        ref_for: true,
                        ref: "memberListItems",
                        class: vue.normalizeClass(["member-list-box-body", [index2 === $setup.selectedIndex && "selected"]]),
                        onClick: ($event) => $setup.selectItem(index2)
                      }, [
                        vue.createElementVNode("img", {
                          class: "member-list-box-body-avatar",
                          src: $setup.handleMemberAvatar(item)
                        }, null, 8, ["src"]),
                        vue.createElementVNode(
                          "span",
                          { class: "member-list-box-body-name" },
                          vue.toDisplayString($setup.handleMemberName(item)),
                          1
                          /* TEXT */
                        )
                      ], 10, ["onClick"]);
                    }),
                    128
                    /* KEYED_FRAGMENT */
                  ))
                ])
              ],
              512
              /* NEED_PATCH */
            )
          ],
          2
          /* CLASS */
        )
      ]),
      _: 1
      /* STABLE */
    }, 8, ["show"]);
  }
  const MessageInputAt = /* @__PURE__ */ _export_sfc(_sfc_main$x, [["render", _sfc_render$w], ["__scopeId", "data-v-7a11d573"], ["__file", "C:/Users/Administrator/Desktop/Project Folder/ZXHand/ZXHandwritting_APP_uniapp/TUIKit/components/TUIChat/message-input/message-input-at/index.vue"]]);
  const audioIcon = "/assets/audio.3e97d529.svg";
  const _sfc_main$w = /* @__PURE__ */ vue.defineComponent({
    __name: "message-input-audio",
    props: {
      isEnableAudio: { type: Boolean, required: true, default: false }
    },
    emits: ["changeDisplayType"],
    setup(__props, { expose: __expose, emit: __emit }) {
      __expose();
      const emits2 = __emit;
      const props2 = __props;
      let recordTime = 0;
      let isManualCancelBySlide = false;
      let recordTimer;
      let firstTouchPageY = -1;
      let isFingerTouchingScreen = false;
      let isFirstAuthrizedRecord = false;
      const recorderManager = i == null ? void 0 : i.getRecorderManager();
      const isRecording = vue.ref(false);
      const touchBarText = vue.ref("按住说话");
      const modalText = vue.ref("正在录音");
      const isAudioTouchBarShow = vue.ref(false);
      const currentConversation = vue.ref();
      const recordConfig = {
        // Duration of the recording, in ms, with a maximum value of 600000 (10 minutes)
        duration: 6e4,
        // Sampling rate
        sampleRate: 44100,
        // Number of recording channels
        numberOfChannels: 1,
        // Encoding bit rate
        encodeBitRate: 192e3,
        // Audio format
        // Select this format to create audio messages that can be interoperable across all chat platforms (Android, iOS, WeChat Mini Programs, and Web).
        format: "mp3"
      };
      function switchAudio() {
        emits2("changeDisplayType", props2.isEnableAudio ? "editor" : "audio");
      }
      vue.onMounted(() => {
        recorderManager.onStart(onRecorderStart);
        recorderManager.onStop(onRecorderStop);
        recorderManager.onError(onRecorderError);
        zt.watch(o$2.CONV, {
          currentConversation: onCurrentConverstaionUpdated
        });
      });
      vue.onUnmounted(() => {
        zt.unwatch(o$2.CONV, {
          currentConversation: onCurrentConverstaionUpdated
        });
      });
      function onCurrentConverstaionUpdated(conversation) {
        currentConversation.value = conversation;
      }
      function initRecorder() {
        initRecorderData();
        initRecorderView();
      }
      function initRecorderView() {
        isRecording.value = false;
        touchBarText.value = "按住说话";
        modalText.value = "正在录音";
      }
      function initRecorderData(options) {
        clearInterval(recordTimer);
        recordTimer = void 0;
        recordTime = 0;
        firstTouchPageY = -1;
        isManualCancelBySlide = false;
        if (!(options == null ? void 0 : options.hasError)) {
          recorderManager.stop();
        }
      }
      function handleTouchStart() {
        if (isFingerTouchingScreen) {
          isFirstAuthrizedRecord = true;
        }
      }
      function handleLongPress() {
        isFingerTouchingScreen = true;
        recorderManager.start(recordConfig);
      }
      const handleTouchMove = throttle(function(e2) {
        if (isRecording.value) {
          const pageY = e2.changedTouches[e2.changedTouches.length - 1].pageY;
          if (firstTouchPageY < 0) {
            firstTouchPageY = pageY;
          }
          const offset = firstTouchPageY - pageY;
          if (offset > 150) {
            touchBarText.value = "抬起取消";
            modalText.value = "松开手指 取消发送";
            isManualCancelBySlide = true;
          } else if (offset > 50) {
            touchBarText.value = "抬起发送";
            modalText.value = "继续上滑可取消";
            isManualCancelBySlide = false;
          } else {
            touchBarText.value = "抬起发送";
            modalText.value = "正在录音";
            isManualCancelBySlide = false;
          }
        }
      }, 100);
      function handleTouchEnd() {
        isFingerTouchingScreen = false;
        recorderManager.stop();
      }
      function onRecorderStart() {
        if (!isFingerTouchingScreen) {
          isFirstAuthrizedRecord = true;
          recorderManager.stop();
          return;
        }
        recordTimer = setInterval(() => {
          recordTime += 1;
        }, 1e3);
        touchBarText.value = "抬起发送";
        isRecording.value = true;
      }
      function onRecorderStop(res) {
        var _a, _b, _c, _d, _e3;
        if (isFirstAuthrizedRecord) {
          isFirstAuthrizedRecord = false;
          initRecorder();
          return;
        }
        if (isManualCancelBySlide || !isRecording.value) {
          initRecorder();
          return;
        }
        clearInterval(recordTimer);
        const tempFilePath = res.tempFilePath;
        const duration = res.duration ? res.duration : recordTime * 1e3;
        const fileSize = res.fileSize ? res.fileSize : 48 * recordTime / 8 * 1024;
        if (duration < 1e3) {
          Toast({
            message: "录音时间太短",
            type: TOAST_TYPE.NORMAL,
            duration: 1500
          });
        } else {
          const options = {
            to: ((_b = (_a = currentConversation == null ? void 0 : currentConversation.value) == null ? void 0 : _a.groupProfile) == null ? void 0 : _b.groupID) || ((_d = (_c = currentConversation == null ? void 0 : currentConversation.value) == null ? void 0 : _c.userProfile) == null ? void 0 : _d.userID),
            conversationType: (_e3 = currentConversation == null ? void 0 : currentConversation.value) == null ? void 0 : _e3.type,
            payload: { file: { duration, tempFilePath, fileSize } },
            needReadReceipt: isEnabledMessageReadReceiptGlobal()
          };
          Zt == null ? void 0 : Zt.sendAudioMessage(options);
        }
        initRecorder();
      }
      function onRecorderError() {
        initRecorderData({ hasError: true });
        initRecorderView();
      }
      const __returned__ = { emits: emits2, props: props2, get recordTime() {
        return recordTime;
      }, set recordTime(v2) {
        recordTime = v2;
      }, get isManualCancelBySlide() {
        return isManualCancelBySlide;
      }, set isManualCancelBySlide(v2) {
        isManualCancelBySlide = v2;
      }, get recordTimer() {
        return recordTimer;
      }, set recordTimer(v2) {
        recordTimer = v2;
      }, get firstTouchPageY() {
        return firstTouchPageY;
      }, set firstTouchPageY(v2) {
        firstTouchPageY = v2;
      }, get isFingerTouchingScreen() {
        return isFingerTouchingScreen;
      }, set isFingerTouchingScreen(v2) {
        isFingerTouchingScreen = v2;
      }, get isFirstAuthrizedRecord() {
        return isFirstAuthrizedRecord;
      }, set isFirstAuthrizedRecord(v2) {
        isFirstAuthrizedRecord = v2;
      }, recorderManager, isRecording, touchBarText, modalText, isAudioTouchBarShow, currentConversation, recordConfig, switchAudio, onCurrentConverstaionUpdated, initRecorder, initRecorderView, initRecorderData, handleTouchStart, handleLongPress, handleTouchMove, handleTouchEnd, onRecorderStart, onRecorderStop, onRecorderError, get TUITranslateService() {
        return Jt;
      }, Icon: Icon$1, get audioIcon() {
        return audioIcon;
      } };
      Object.defineProperty(__returned__, "__isScriptSetup", { enumerable: false, value: true });
      return __returned__;
    }
  });
  function _sfc_render$v(_ctx, _cache, $props, $setup, $data, $options) {
    return vue.openBlock(), vue.createElementBlock(
      "div",
      {
        class: vue.normalizeClass({
          "message-input-audio": true,
          "message-input-audio-open": $setup.isAudioTouchBarShow
        })
      },
      [
        vue.createVNode($setup["Icon"], {
          class: "audio-message-icon",
          file: $setup.audioIcon,
          size: "23px",
          hotAreaSize: "3px",
          onOnClick: $setup.switchAudio
        }, null, 8, ["file"]),
        $setup.props.isEnableAudio ? (vue.openBlock(), vue.createElementBlock(
          "view",
          {
            key: 0,
            class: "audio-input-touch-bar",
            onTouchstart: $setup.handleTouchStart,
            onLongpress: $setup.handleLongPress,
            onTouchmove: _cache[0] || (_cache[0] = (...args) => $setup.handleTouchMove && $setup.handleTouchMove(...args)),
            onTouchend: $setup.handleTouchEnd
          },
          [
            vue.createElementVNode(
              "span",
              null,
              vue.toDisplayString($setup.TUITranslateService.t(`TUIChat.${$setup.touchBarText}`)),
              1
              /* TEXT */
            ),
            $setup.isRecording ? (vue.openBlock(), vue.createElementBlock("view", {
              key: 0,
              class: "record-modal"
            }, [
              vue.createElementVNode("div", { class: "red-mask" }),
              vue.createElementVNode("view", { class: "float-element moving-slider" }),
              vue.createElementVNode(
                "view",
                { class: "float-element modal-title" },
                vue.toDisplayString($setup.TUITranslateService.t(`TUIChat.${$setup.modalText}`)),
                1
                /* TEXT */
              )
            ])) : vue.createCommentVNode("v-if", true)
          ],
          32
          /* NEED_HYDRATION */
        )) : vue.createCommentVNode("v-if", true)
      ],
      2
      /* CLASS */
    );
  }
  const MessageInputAudio = /* @__PURE__ */ _export_sfc(_sfc_main$w, [["render", _sfc_render$v], ["__scopeId", "data-v-89320e8a"], ["__file", "C:/Users/Administrator/Desktop/Project Folder/ZXHand/ZXHandwritting_APP_uniapp/TUIKit/components/TUIChat/message-input/message-input-audio.vue"]]);
  const _sfc_main$v = /* @__PURE__ */ vue.defineComponent({
    __name: "index",
    props: {
      displayType: { type: String, required: false, default: "editor" }
    },
    setup(__props, { expose: __expose }) {
      __expose();
      const props2 = __props;
      const TYPES2 = Kt.TYPES;
      const quoteMessage = vue.ref();
      vue.onMounted(() => {
        zt.watch(o$2.CHAT, {
          quoteMessage: onQuoteMessageUpdated
        });
      });
      vue.onUnmounted(() => {
        zt.unwatch(o$2.CHAT, {
          quoteMessage: onQuoteMessageUpdated
        });
      });
      const quoteContentText = vue.computed(() => {
        var _a, _b;
        let _quoteContentText;
        switch ((_a = quoteMessage.value) == null ? void 0 : _a.type) {
          case TYPES2.MSG_TEXT:
            _quoteContentText = transformTextWithKeysToEmojiNames((_b = quoteMessage.value.payload) == null ? void 0 : _b.text);
            break;
          case TYPES2.MSG_IMAGE:
            _quoteContentText = Jt.t("TUIChat.图片");
            break;
          case TYPES2.MSG_AUDIO:
            _quoteContentText = Jt.t("TUIChat.语音");
            break;
          case TYPES2.MSG_VIDEO:
            _quoteContentText = Jt.t("TUIChat.视频");
            break;
          case TYPES2.MSG_FILE:
            _quoteContentText = Jt.t("TUIChat.文件");
            break;
          case TYPES2.MSG_CUSTOM:
            _quoteContentText = Jt.t("TUIChat.自定义");
            break;
          case TYPES2.MSG_FACE:
            _quoteContentText = Jt.t("TUIChat.表情");
            break;
          case TYPES2.MSG_MERGER:
            _quoteContentText = Jt.t("TUIChat.聊天记录");
            break;
          default:
            _quoteContentText = Jt.t("TUIChat.消息");
            break;
        }
        return _quoteContentText;
      });
      function cancelQuote() {
        zt.update(o$2.CHAT, "quoteMessage", { message: void 0, type: "quote" });
      }
      function onQuoteMessageUpdated(options) {
        if ((options == null ? void 0 : options.message) && (options == null ? void 0 : options.type) === "quote") {
          quoteMessage.value = options.message;
        } else {
          quoteMessage.value = void 0;
        }
      }
      const __returned__ = { props: props2, TYPES: TYPES2, quoteMessage, quoteContentText, cancelQuote, onQuoteMessageUpdated, Icon: Icon$1, get closeIcon() {
        return closeIcon;
      }, get isH5() {
        return isH5;
      }, get isUniFrameWork() {
        return isUniFrameWork;
      } };
      Object.defineProperty(__returned__, "__isScriptSetup", { enumerable: false, value: true });
      return __returned__;
    }
  });
  function _sfc_render$u(_ctx, _cache, $props, $setup, $data, $options) {
    return Boolean($setup.quoteMessage) && $setup.props.displayType !== "audio" ? (vue.openBlock(), vue.createElementBlock(
      "div",
      {
        key: 0,
        class: vue.normalizeClass({
          "input-quote-container": true,
          "input-quote-container-uni": $setup.isUniFrameWork,
          "input-quote-container-h5": $setup.isH5
        })
      },
      [
        vue.createElementVNode("div", { class: "input-quote-content" }, [
          vue.createElementVNode(
            "div",
            { class: "max-one-line" },
            vue.toDisplayString($setup.quoteMessage.nick || $setup.quoteMessage.from) + ": " + vue.toDisplayString($setup.quoteContentText),
            1
            /* TEXT */
          ),
          vue.createVNode($setup["Icon"], {
            class: "input-quote-close-icon",
            file: $setup.closeIcon,
            width: "11px",
            height: "11px",
            onOnClick: $setup.cancelQuote
          }, null, 8, ["file"])
        ])
      ],
      2
      /* CLASS */
    )) : vue.createCommentVNode("v-if", true);
  }
  const MessageQuote = /* @__PURE__ */ _export_sfc(_sfc_main$v, [["render", _sfc_render$u], ["__scopeId", "data-v-0be2008a"], ["__file", "C:/Users/Administrator/Desktop/Project Folder/ZXHand/ZXHandwritting_APP_uniapp/TUIKit/components/TUIChat/message-input/message-input-quote/index.vue"]]);
  const faceIcon = "/assets/face-uni.e33f5632.png";
  const moreIcon = "/assets/more-uni.030c2d9a.png";
  const _sfc_main$u = /* @__PURE__ */ vue.defineComponent({
    __name: "index",
    props: {
      placeholder: { type: String, required: true, default: "this is placeholder" },
      isMuted: { type: Boolean, required: false, default: true },
      muteText: { type: String, required: false, default: "" },
      enableInput: { type: Boolean, required: false, default: true },
      enableAt: { type: Boolean, required: false, default: true },
      enableTyping: { type: Boolean, required: false, default: true },
      replyOrReference: { type: Object, required: false, default: () => ({}) },
      inputToolbarDisplayType: { type: String, required: true, default: "none" }
    },
    emits: ["changeToolbarDisplayType"],
    setup(__props, { expose: __expose, emit: __emit }) {
      const emits2 = __emit;
      const props2 = __props;
      const editor = vue.ref();
      const messageInputAtRef = vue.ref();
      const currentConversation = vue.ref();
      const isGroup = vue.ref(false);
      const displayType = vue.ref("editor");
      const featureConfig = ChatConfig.getFeatureConfig();
      const isRenderVoice = vue.ref(featureConfig.InputVoice);
      const isRenderEmojiPicker = vue.ref(featureConfig.InputEmoji || featureConfig.InputStickers);
      const isRenderMore = vue.ref(featureConfig.InputImage || featureConfig.InputVideo || featureConfig.InputEvaluation || featureConfig.InputQuickReplies);
      vue.onMounted(() => {
        zt.watch(o$2.CONV, {
          currentConversation: onCurrentConversationUpdated
        });
        zt.watch(o$2.CHAT, {
          quoteMessage: onQuoteMessageUpdated
        });
      });
      vue.onUnmounted(() => {
        zt.unwatch(o$2.CONV, {
          currentConversation: onCurrentConversationUpdated
        });
        zt.unwatch(o$2.CHAT, {
          quoteMessage: onQuoteMessageUpdated
        });
      });
      vue.watch(() => props2.inputToolbarDisplayType, (newVal) => {
        if (newVal !== "none") {
          changeDisplayType("editor");
        }
      });
      function changeDisplayType(display) {
        displayType.value = display;
        if (display === "audio") {
          emits2("changeToolbarDisplayType", "none");
        }
      }
      function changeToolbarDisplayType(displayType2) {
        emits2("changeToolbarDisplayType", displayType2);
      }
      const onTyping = (inputContentEmpty, inputBlur) => {
        sendTyping(inputContentEmpty, inputBlur);
      };
      const onAt = (show) => {
        var _a;
        (_a = messageInputAtRef == null ? void 0 : messageInputAtRef.value) == null ? void 0 : _a.toggleAtList(show);
      };
      const onFocus = () => {
        if (isH5) {
          emits2("changeToolbarDisplayType", "none");
        }
      };
      const insertEmoji = (emoji) => {
        var _a, _b;
        ((_a = editor == null ? void 0 : editor.value) == null ? void 0 : _a.addEmoji) && ((_b = editor == null ? void 0 : editor.value) == null ? void 0 : _b.addEmoji(emoji));
      };
      const insertAt = (atInfo) => {
        var _a, _b;
        ((_a = editor == null ? void 0 : editor.value) == null ? void 0 : _a.insertAt) && ((_b = editor == null ? void 0 : editor.value) == null ? void 0 : _b.insertAt(atInfo));
      };
      const onAtListOpen = () => {
        var _a, _b;
        ((_a = editor == null ? void 0 : editor.value) == null ? void 0 : _a.blur) && ((_b = editor == null ? void 0 : editor.value) == null ? void 0 : _b.blur());
      };
      const reEdit = (content) => {
        var _a, _b;
        (_a = editor == null ? void 0 : editor.value) == null ? void 0 : _a.resetEditor();
        (_b = editor == null ? void 0 : editor.value) == null ? void 0 : _b.setEditorContent(content);
      };
      function onCurrentConversationUpdated(conversation) {
        var _a;
        currentConversation.value = conversation;
        isGroup.value = ((_a = currentConversation.value) == null ? void 0 : _a.type) === Kt.TYPES.CONV_GROUP;
      }
      function onQuoteMessageUpdated(options) {
        if ((options == null ? void 0 : options.message) && (options == null ? void 0 : options.type) === "quote") {
          changeDisplayType("editor");
        }
      }
      __expose({
        insertEmoji,
        reEdit
      });
      const __returned__ = { emits: emits2, props: props2, editor, messageInputAtRef, currentConversation, isGroup, displayType, featureConfig, isRenderVoice, isRenderEmojiPicker, isRenderMore, changeDisplayType, changeToolbarDisplayType, onTyping, onAt, onFocus, insertEmoji, insertAt, onAtListOpen, reEdit, onCurrentConversationUpdated, onQuoteMessageUpdated, MessageInputEditor, MessageInputAt, MessageInputAudio, MessageQuote, Icon: Icon$1, get faceIcon() {
        return faceIcon;
      }, get moreIcon() {
        return moreIcon;
      }, get isPC() {
        return isPC;
      }, get isWeChat() {
        return isWeChat;
      }, get isApp() {
        return isApp$1;
      } };
      Object.defineProperty(__returned__, "__isScriptSetup", { enumerable: false, value: true });
      return __returned__;
    }
  });
  function _sfc_render$t(_ctx, _cache, $props, $setup, $data, $options) {
    return vue.openBlock(), vue.createElementBlock(
      "div",
      {
        class: vue.normalizeClass(["message-input", !$setup.isPC && "message-input-h5"])
      },
      [
        vue.createElementVNode("div", { class: "audio-main-content-line" }, [
          ($setup.isWeChat || $setup.isApp) && $setup.isRenderVoice ? (vue.openBlock(), vue.createBlock($setup["MessageInputAudio"], {
            key: 0,
            class: vue.normalizeClass({
              "message-input-wx-audio-open": $setup.displayType === "audio"
            }),
            isEnableAudio: $setup.displayType === "audio",
            onChangeDisplayType: $setup.changeDisplayType
          }, null, 8, ["class", "isEnableAudio"])) : vue.createCommentVNode("v-if", true),
          vue.withDirectives(vue.createVNode($setup["MessageInputEditor"], {
            ref: "editor",
            class: "message-input-editor",
            placeholder: $setup.props.placeholder,
            isMuted: $setup.props.isMuted,
            muteText: $setup.props.muteText,
            enableInput: $setup.props.enableInput,
            enableAt: $setup.props.enableAt,
            enableTyping: $setup.props.enableTyping,
            isGroup: $setup.isGroup,
            onOnTyping: $setup.onTyping,
            onOnAt: $setup.onAt,
            onOnFocus: $setup.onFocus
          }, null, 8, ["placeholder", "isMuted", "muteText", "enableInput", "enableAt", "enableTyping", "isGroup"]), [
            [vue.vShow, $setup.displayType === "editor"]
          ]),
          $setup.props.enableAt ? (vue.openBlock(), vue.createBlock(
            $setup["MessageInputAt"],
            {
              key: 1,
              ref: "messageInputAtRef",
              onInsertAt: $setup.insertAt,
              onOnAtListOpen: $setup.onAtListOpen
            },
            null,
            512
            /* NEED_PATCH */
          )) : vue.createCommentVNode("v-if", true),
          $setup.isRenderEmojiPicker ? (vue.openBlock(), vue.createBlock($setup["Icon"], {
            key: 2,
            class: "icon icon-face",
            file: $setup.faceIcon,
            size: "23px",
            hotAreaSize: "3px",
            onOnClick: _cache[0] || (_cache[0] = ($event) => $setup.changeToolbarDisplayType("emojiPicker"))
          }, null, 8, ["file"])) : vue.createCommentVNode("v-if", true),
          $setup.isRenderMore ? (vue.openBlock(), vue.createBlock($setup["Icon"], {
            key: 3,
            class: "icon icon-more",
            file: $setup.moreIcon,
            size: "23px",
            hotAreaSize: "3px",
            onOnClick: _cache[1] || (_cache[1] = ($event) => $setup.changeToolbarDisplayType("tools"))
          }, null, 8, ["file"])) : vue.createCommentVNode("v-if", true)
        ]),
        vue.createElementVNode("div", null, [
          vue.createVNode($setup["MessageQuote"], {
            style: { minWidth: 0 },
            displayType: $setup.displayType
          }, null, 8, ["displayType"])
        ])
      ],
      2
      /* CLASS */
    );
  }
  const MessageInput = /* @__PURE__ */ _export_sfc(_sfc_main$u, [["render", _sfc_render$t], ["__scopeId", "data-v-ceb9e230"], ["__file", "C:/Users/Administrator/Desktop/Project Folder/ZXHand/ZXHandwritting_APP_uniapp/TUIKit/components/TUIChat/message-input/index.vue"]]);
  const ForwardEachIcon = "/assets/forward-each.9e79e381.svg";
  const ForwardMergeIcon = "/assets/forward-merge.eef115cf.svg";
  const AddIcon = "/assets/add-circle.b2afe9dc.svg";
  const _sfc_main$t = /* @__PURE__ */ vue.defineComponent({
    __name: "index",
    emits: ["oneByOneForwardMessage", "mergeForwardMessage", "toggleMultipleSelectMode"],
    setup(__props, { expose: __expose, emit: __emit }) {
      __expose();
      const emits2 = __emit;
      const iconSize = vue.ref(isMobile ? "25px" : "30px");
      function oneByOneForwardMessage() {
        emits2("oneByOneForwardMessage");
      }
      function mergeForwardMessage() {
        emits2("mergeForwardMessage");
      }
      function cancelMultipleSelect() {
        emits2("toggleMultipleSelectMode");
      }
      const __returned__ = { emits: emits2, iconSize, oneByOneForwardMessage, mergeForwardMessage, cancelMultipleSelect, get TUITranslateService() {
        return Jt;
      }, Icon: Icon$1, get ForwardEachIcon() {
        return ForwardEachIcon;
      }, get ForwardMergeIcon() {
        return ForwardMergeIcon;
      }, get AddIcon() {
        return AddIcon;
      }, get isMobile() {
        return isMobile;
      } };
      Object.defineProperty(__returned__, "__isScriptSetup", { enumerable: false, value: true });
      return __returned__;
    }
  });
  function _sfc_render$s(_ctx, _cache, $props, $setup, $data, $options) {
    return vue.openBlock(), vue.createElementBlock(
      "div",
      {
        class: vue.normalizeClass({
          "mulitple-select-panel": true,
          "mulitple-select-panel-mobile": $setup.isMobile
        })
      },
      [
        vue.createElementVNode("div", {
          class: "forward-button",
          onClick: $setup.oneByOneForwardMessage
        }, [
          vue.createVNode($setup["Icon"], {
            file: $setup.ForwardEachIcon,
            size: $setup.iconSize
          }, null, 8, ["file", "size"]),
          vue.createElementVNode(
            "span",
            {
              class: vue.normalizeClass({
                "forward-button-text": true,
                "forward-button-text-mobile": $setup.isMobile
              })
            },
            vue.toDisplayString($setup.TUITranslateService.t("TUIChat.逐条转发")),
            3
            /* TEXT, CLASS */
          )
        ]),
        vue.createElementVNode("div", {
          class: "forward-button",
          onClick: $setup.mergeForwardMessage
        }, [
          vue.createVNode($setup["Icon"], {
            file: $setup.ForwardMergeIcon,
            size: $setup.iconSize
          }, null, 8, ["file", "size"]),
          vue.createElementVNode(
            "span",
            {
              class: vue.normalizeClass({
                "forward-button-text": true,
                "forward-button-text-mobile": $setup.isMobile
              })
            },
            vue.toDisplayString($setup.TUITranslateService.t("TUIChat.合并转发")),
            3
            /* TEXT, CLASS */
          )
        ]),
        vue.createElementVNode("div", {
          class: "forward-button",
          onClick: $setup.cancelMultipleSelect
        }, [
          vue.createVNode($setup["Icon"], {
            class: "cancel-button-icon",
            file: $setup.AddIcon,
            size: $setup.iconSize
          }, null, 8, ["file", "size"]),
          vue.createElementVNode(
            "span",
            {
              class: vue.normalizeClass({
                "forward-button-text": true,
                "forward-button-text-mobile": $setup.isMobile
              })
            },
            vue.toDisplayString($setup.TUITranslateService.t("TUIChat.取消")),
            3
            /* TEXT, CLASS */
          )
        ])
      ],
      2
      /* CLASS */
    );
  }
  const MultipleSelectPanel = /* @__PURE__ */ _export_sfc(_sfc_main$t, [["render", _sfc_render$s], ["__scopeId", "data-v-65102b30"], ["__file", "C:/Users/Administrator/Desktop/Project Folder/ZXHand/ZXHandwritting_APP_uniapp/TUIKit/components/TUIChat/mulitple-select-panel/index.vue"]]);
  const _sfc_main$s = /* @__PURE__ */ vue.defineComponent({
    __name: "index",
    emits: ["toggleMultipleSelectMode"],
    setup(__props, { expose: __expose, emit: __emit }) {
      __expose();
      const emits2 = __emit;
      let selectedToForwardMessageIDList = [];
      let isMergeForward = false;
      const isShowForwardPanel = vue.ref(false);
      const customConversationList = vue.ref();
      vue.onMounted(() => {
        zt.watch(o$2.CUSTOM, {
          singleForwardMessageID: onSingleForwardMessageIDUpdated,
          multipleForwardMessageID: onMultipleForwardMessageIDUpdated
        });
      });
      vue.onUnmounted(() => {
        zt.unwatch(o$2.CUSTOM, {
          singleForwardMessageID: onSingleForwardMessageIDUpdated,
          multipleForwardMessageID: onMultipleForwardMessageIDUpdated
        });
        clearStoreData();
      });
      function onSingleForwardMessageIDUpdated(messageID) {
        if (typeof messageID !== "undefined") {
          isMergeForward = false;
          selectedToForwardMessageIDList = [messageID];
          openForwardPanel();
        }
      }
      function onMultipleForwardMessageIDUpdated(params) {
        if (!params) {
          return;
        }
        isMergeForward = false;
        const {
          isMergeForward: _isMergeForward,
          messageIDList: selectedMessageIDList
        } = params || {};
        if ((selectedMessageIDList == null ? void 0 : selectedMessageIDList.length) > 0) {
          isMergeForward = _isMergeForward;
          selectedToForwardMessageIDList = selectedMessageIDList;
          openForwardPanel();
        } else {
          Toast({
            message: Jt.t("TUIChat.未选择消息"),
            type: TOAST_TYPE.ERROR
          });
        }
      }
      function clearStoreData() {
        zt.update(o$2.CUSTOM, "singleForwardMessageID", void 0);
        zt.update(o$2.CUSTOM, "multipleForwardMessageID", void 0);
      }
      function closeForwardPanel() {
        clearStoreData();
        isShowForwardPanel.value = false;
      }
      function openForwardPanel() {
        getTransforRenderDataList();
        isShowForwardPanel.value = true;
      }
      function finishSelected(selectedConvIDWrapperList) {
        if ((selectedConvIDWrapperList == null ? void 0 : selectedConvIDWrapperList.length) === 0)
          return;
        const selectedConversationList = selectedConvIDWrapperList.map((IDWrapper) => zt.getConversationModel(IDWrapper.userID));
        const unsentMessageQueue = selectedToForwardMessageIDList.map((messageID) => zt.getMessageModel(messageID)).sort((a2, b2) => a2.time - b2.time);
        const forwardPromises = selectedConversationList.map((conversation) => {
          const offlinePushInfoCreateParams = {
            conversation,
            messageType: Kt.TYPES.MSG_MERGER
          };
          return Zt.sendForwardMessage(
            [conversation],
            unsentMessageQueue,
            {
              needMerge: isMergeForward,
              offlinePushInfo: OfflinePushInfoManager.create(offlinePushInfoCreateParams),
              params: {
                needReadReceipt: isEnabledMessageReadReceiptGlobal()
              }
            }
          );
        });
        Promise.allSettled(forwardPromises).then((results) => {
          for (const result of results) {
            const { status } = result;
            if (status === "rejected") {
              const errorMessage = result.reason.code === 80001 ? Jt.t("TUIChat.内容包含敏感词汇") : result.reason.message;
              Toast({
                message: errorMessage,
                type: TOAST_TYPE.ERROR
              });
              break;
            }
          }
        });
        closeForwardPanel();
        emits2("toggleMultipleSelectMode", false);
      }
      function getTransforRenderDataList() {
        const conversationList = zt.getData(o$2.CONV, "conversationList");
        customConversationList.value = conversationList.map((conversation) => {
          return {
            // To achieve reusability of Transfer, userID is used here instead of ConversationID
            userID: conversation.conversationID,
            nick: conversation.getShowName(),
            avatar: conversation.getAvatar()
          };
        });
      }
      const __returned__ = { emits: emits2, get selectedToForwardMessageIDList() {
        return selectedToForwardMessageIDList;
      }, set selectedToForwardMessageIDList(v2) {
        selectedToForwardMessageIDList = v2;
      }, get isMergeForward() {
        return isMergeForward;
      }, set isMergeForward(v2) {
        isMergeForward = v2;
      }, isShowForwardPanel, customConversationList, onSingleForwardMessageIDUpdated, onMultipleForwardMessageIDUpdated, clearStoreData, closeForwardPanel, openForwardPanel, finishSelected, getTransforRenderDataList, get TUITranslateService() {
        return Jt;
      }, Overlay, Transfer, get isUniFrameWork() {
        return isUniFrameWork;
      } };
      Object.defineProperty(__returned__, "__isScriptSetup", { enumerable: false, value: true });
      return __returned__;
    }
  });
  function _sfc_render$r(_ctx, _cache, $props, $setup, $data, $options) {
    return vue.openBlock(), vue.createBlock($setup["Overlay"], {
      visible: $setup.isShowForwardPanel,
      useMask: false
    }, {
      default: vue.withCtx(() => [
        vue.createVNode($setup["Transfer"], {
          title: $setup.TUITranslateService.t("TUIChat.转发"),
          isSearch: false,
          isCustomItem: false,
          list: $setup.customConversationList,
          isHiddenBackIcon: $setup.isUniFrameWork,
          onCancel: $setup.closeForwardPanel,
          onSubmit: $setup.finishSelected
        }, null, 8, ["title", "list", "isHiddenBackIcon"])
      ]),
      _: 1
      /* STABLE */
    }, 8, ["visible"]);
  }
  const Forward = /* @__PURE__ */ _export_sfc(_sfc_main$s, [["render", _sfc_render$r], ["__file", "C:/Users/Administrator/Desktop/Project Folder/ZXHand/ZXHandwritting_APP_uniapp/TUIKit/components/TUIChat/forward/index.vue"]]);
  const _sfc_main$r = /* @__PURE__ */ vue.defineComponent({
    __name: "index",
    props: {
      iconFile: {
        type: String,
        required: true
      },
      title: {
        type: String,
        default: ""
      },
      needDialog: {
        type: Boolean,
        default: true
      },
      iconWidth: {
        type: String,
        default: "20px"
      },
      iconHeight: {
        type: String,
        default: "20px"
      },
      // Whether to display the bottom popup dialog on mobile devices
      // Invalid on PC
      needBottomPopup: {
        type: Boolean,
        default: false
      }
    },
    emits: ["onIconClick", "onDialogClose", "onDialogShow"],
    setup(__props, { expose: __expose, emit: __emit }) {
      const props2 = __props;
      const emits2 = __emit;
      const isDark = vue.ref(ChatConfig.getTheme() === "dark");
      const showDialog = vue.ref(false);
      const toolbarItemRef = vue.ref();
      const dialogRef = vue.ref();
      const toggleToolbarItem = () => {
        emits2("onIconClick", dialogRef);
        if (isPC) {
          R.listen({
            domRefs: toolbarItemRef.value,
            handler: closeToolbarItem
          });
        }
        if (!props2.needDialog) {
          return;
        }
        toggleDialogDisplay(!showDialog.value);
      };
      const closeToolbarItem = () => {
        showDialog.value = false;
        emits2("onDialogClose", dialogRef);
      };
      const toggleDialogDisplay = (showStatus) => {
        if (showDialog.value === showStatus) {
          return;
        }
        showDialog.value = showStatus;
        switch (showStatus) {
          case true:
            emits2("onDialogShow", dialogRef);
            break;
          case false:
            emits2("onDialogClose", dialogRef);
        }
      };
      const onPopupClose = () => {
        showDialog.value = false;
      };
      __expose({
        toggleDialogDisplay
      });
      const __returned__ = { props: props2, emits: emits2, isDark, showDialog, toolbarItemRef, dialogRef, toggleToolbarItem, closeToolbarItem, toggleDialogDisplay, onPopupClose, Icon: Icon$1, BottomPopup, get isPC() {
        return isPC;
      }, get isUniFrameWork() {
        return isUniFrameWork;
      } };
      Object.defineProperty(__returned__, "__isScriptSetup", { enumerable: false, value: true });
      return __returned__;
    }
  });
  function _sfc_render$q(_ctx, _cache, $props, $setup, $data, $options) {
    return vue.openBlock(), vue.createElementBlock(
      "div",
      {
        ref: "toolbarItemRef",
        class: vue.normalizeClass([
          "toolbar-item-container",
          !$setup.isPC && "toolbar-item-container-h5",
          $setup.isUniFrameWork && "toolbar-item-container-uni"
        ])
      },
      [
        vue.createElementVNode(
          "div",
          {
            class: vue.normalizeClass([
              "toolbar-item-container-icon",
              $setup.isUniFrameWork && "toolbar-item-container-uni-icon"
            ]),
            onClick: $setup.toggleToolbarItem
          },
          [
            vue.createVNode($setup["Icon"], {
              file: $setup.props.iconFile,
              class: "icon",
              width: $setup.props.iconWidth,
              height: $setup.props.iconHeight
            }, null, 8, ["file", "width", "height"])
          ],
          2
          /* CLASS */
        ),
        $setup.isUniFrameWork ? (vue.openBlock(), vue.createElementBlock(
          "div",
          {
            key: 0,
            class: vue.normalizeClass(["toolbar-item-container-uni-title"])
          },
          vue.toDisplayString($setup.props.title),
          1
          /* TEXT */
        )) : vue.createCommentVNode("v-if", true),
        vue.withDirectives(vue.createElementVNode(
          "div",
          {
            ref: "dialogRef",
            class: vue.normalizeClass([
              "toolbar-item-container-dialog",
              $setup.isDark && "toolbar-item-container-dialog-dark",
              !$setup.isPC && "toolbar-item-container-h5-dialog",
              $setup.isUniFrameWork && "toolbar-item-container-uni-dialog"
            ])
          },
          [
            $setup.props.needBottomPopup && !$setup.isPC ? (vue.openBlock(), vue.createBlock($setup["BottomPopup"], {
              key: 0,
              class: "toolbar-bottom-popup",
              show: $setup.showDialog,
              onTouchmove: _cache[0] || (_cache[0] = vue.withModifiers(() => {
              }, ["stop", "prevent"])),
              onOnClose: $setup.onPopupClose
            }, {
              default: vue.withCtx(() => [
                vue.renderSlot(_ctx.$slots, "default", {}, void 0, true)
              ]),
              _: 3
              /* FORWARDED */
            }, 8, ["show"])) : vue.renderSlot(_ctx.$slots, "default", { key: 1 }, void 0, true)
          ],
          2
          /* CLASS */
        ), [
          [vue.vShow, $setup.showDialog]
        ])
      ],
      2
      /* CLASS */
    );
  }
  const ToolbarItemContainer = /* @__PURE__ */ _export_sfc(_sfc_main$r, [["render", _sfc_render$q], ["__scopeId", "data-v-bf58df78"], ["__file", "C:/Users/Administrator/Desktop/Project Folder/ZXHand/ZXHandwritting_APP_uniapp/TUIKit/components/TUIChat/message-input-toolbar/toolbar-item-container/index.vue"]]);
  const imageIconLight = "/assets/image-light.3da9cf2c.svg";
  const imageIconDark = "/assets/image-dark.bf322028.svg";
  const imageUniIcon = "/assets/image-uni.3e951cbb.png";
  const cameraUniIcon = "/assets/camera-uni.e7fd6e1a.png";
  const _sfc_main$q = /* @__PURE__ */ vue.defineComponent({
    __name: "index",
    props: {
      // Image source: only valid for uni-app version, web version only supports selecting images from the album.
      // album: Select from album
      // camera: Take a photo using the camera
      imageSourceType: {
        type: String,
        default: "album"
      }
    },
    setup(__props, { expose: __expose }) {
      __expose();
      const props2 = __props;
      const inputRef = vue.ref();
      const currentConversation = vue.ref();
      const theme = ChatConfig.getTheme();
      const IMAGE_TOOLBAR_SHOW_MAP = {
        web_album: {
          icon: theme === "dark" ? imageIconDark : imageIconLight,
          title: "图片"
        },
        uni_album: {
          icon: imageUniIcon,
          title: "图片"
        },
        uni_camera: {
          icon: cameraUniIcon,
          title: "拍照"
        }
      };
      zt.watch(o$2.CONV, {
        currentConversation: (conversation) => {
          currentConversation.value = conversation;
        }
      });
      const imageToolbarForShow = vue.computed(() => {
        if (isUniFrameWork) {
          return props2.imageSourceType === "camera" ? IMAGE_TOOLBAR_SHOW_MAP["uni_camera"] : IMAGE_TOOLBAR_SHOW_MAP["uni_album"];
        } else {
          return IMAGE_TOOLBAR_SHOW_MAP["web_album"];
        }
      });
      const onIconClick = () => {
        var _a;
        if (isUniFrameWork) {
          if (isWeChat && (i == null ? void 0 : i.chooseMedia)) {
            i == null ? void 0 : i.chooseMedia({
              count: 1,
              mediaType: ["image"],
              sizeType: ["original", "compressed"],
              sourceType: [props2.imageSourceType],
              // Use camera or select from album.
              success: function(res) {
                sendImageMessage(res);
              }
            });
          } else {
            i == null ? void 0 : i.chooseImage({
              count: 1,
              sourceType: [props2.imageSourceType],
              // Use camera or select from album.
              success: function(res) {
                sendImageMessage(res);
              }
            });
          }
        } else {
          if ((_a = inputRef.value) == null ? void 0 : _a.click) {
            inputRef.value.click();
          }
        }
      };
      const sendImageInWeb = (e2) => {
        var _a, _b;
        if (((_b = (_a = e2 == null ? void 0 : e2.target) == null ? void 0 : _a.files) == null ? void 0 : _b.length) <= 0) {
          return;
        }
        sendImageMessage(e2 == null ? void 0 : e2.target);
        e2.target.value = "";
      };
      const sendImageMessage = (files2) => {
        var _a, _b, _c, _d, _e3;
        if (!files2) {
          return;
        }
        const options = {
          to: ((_b = (_a = currentConversation == null ? void 0 : currentConversation.value) == null ? void 0 : _a.groupProfile) == null ? void 0 : _b.groupID) || ((_d = (_c = currentConversation == null ? void 0 : currentConversation.value) == null ? void 0 : _c.userProfile) == null ? void 0 : _d.userID),
          conversationType: (_e3 = currentConversation == null ? void 0 : currentConversation.value) == null ? void 0 : _e3.type,
          payload: {
            file: files2
          },
          needReadReceipt: isEnabledMessageReadReceiptGlobal()
        };
        const offlinePushInfoCreateParams = {
          conversation: currentConversation.value,
          payload: options.payload,
          messageType: Kt.TYPES.MSG_IMAGE
        };
        const sendMessageOptions = {
          offlinePushInfo: OfflinePushInfoManager.create(offlinePushInfoCreateParams)
        };
        Zt.sendImageMessage(options, sendMessageOptions);
      };
      const __returned__ = { props: props2, inputRef, currentConversation, theme, IMAGE_TOOLBAR_SHOW_MAP, imageToolbarForShow, onIconClick, sendImageInWeb, sendImageMessage, get isPC() {
        return isPC;
      }, get isUniFrameWork() {
        return isUniFrameWork;
      }, ToolbarItemContainer };
      Object.defineProperty(__returned__, "__isScriptSetup", { enumerable: false, value: true });
      return __returned__;
    }
  });
  function _sfc_render$p(_ctx, _cache, $props, $setup, $data, $options) {
    return vue.openBlock(), vue.createBlock($setup["ToolbarItemContainer"], {
      iconFile: $setup.imageToolbarForShow.icon,
      title: $setup.imageToolbarForShow.title,
      iconWidth: $setup.isUniFrameWork ? "32px" : "20px",
      iconHeight: $setup.isUniFrameWork ? "25px" : "18px",
      needDialog: false,
      onOnIconClick: $setup.onIconClick
    }, {
      default: vue.withCtx(() => [
        !$setup.isUniFrameWork ? (vue.openBlock(), vue.createElementBlock(
          "div",
          {
            key: 0,
            class: vue.normalizeClass(["image-upload", !$setup.isPC && "image-upload-h5"])
          },
          [
            vue.createElementVNode(
              "input",
              {
                ref: "inputRef",
                title: "图片",
                type: "file",
                "data-type": "image",
                accept: "image/gif,image/jpeg,image/jpg,image/png,image/bmp,image/webp",
                onChange: $setup.sendImageInWeb
              },
              null,
              544
              /* NEED_HYDRATION, NEED_PATCH */
            )
          ],
          2
          /* CLASS */
        )) : vue.createCommentVNode("v-if", true)
      ]),
      _: 1
      /* STABLE */
    }, 8, ["iconFile", "title", "iconWidth", "iconHeight"]);
  }
  const ImageUpload = /* @__PURE__ */ _export_sfc(_sfc_main$q, [["render", _sfc_render$p], ["__scopeId", "data-v-2d15f470"], ["__file", "C:/Users/Administrator/Desktop/Project Folder/ZXHand/ZXHandwritting_APP_uniapp/TUIKit/components/TUIChat/message-input-toolbar/image-upload/index.vue"]]);
  const videoIconLight = "/assets/video-light.48615dd3.svg";
  const videoIconDark = "/assets/video-dark.e7ceead3.svg";
  const videoUniIcon = "/assets/video-uni.0b4d3e53.png";
  const _sfc_main$p = /* @__PURE__ */ vue.defineComponent({
    __name: "index",
    props: {
      // Video source, only valid for uni-app version, web version only supports selecting videos from files
      // album: Select from files
      // camera: Take a video using the camera
      videoSourceType: {
        type: String,
        default: "album"
      }
    },
    setup(__props, { expose: __expose }) {
      __expose();
      const props2 = __props;
      const inputRef = vue.ref();
      const currentConversation = vue.ref();
      zt.watch(o$2.CONV, {
        currentConversation: (conversation) => {
          currentConversation.value = conversation;
        }
      });
      const handleIcon = () => {
        if (isUniFrameWork) {
          switch (props2.videoSourceType) {
            case "album":
              return videoUniIcon;
            case "camera":
              return cameraUniIcon;
            default:
              return videoUniIcon;
          }
        } else {
          const videoIcon = ChatConfig.getTheme() === "dark" ? videoIconDark : videoIconLight;
          return videoIcon;
        }
      };
      const handleTitle = () => {
        if (isUniFrameWork && props2.videoSourceType === "camera") {
          return "录制";
        } else {
          return "视频";
        }
      };
      const onIconClick = () => {
        var _a, _b;
        if (isUniFrameWork) {
          if (isWeChat && (i == null ? void 0 : i.chooseMedia)) {
            i == null ? void 0 : i.chooseMedia({
              mediaType: ["video"],
              count: 1,
              sourceType: [props2.videoSourceType],
              maxDuration: 60,
              success: function(res) {
                sendVideoMessage(res);
              }
            });
          } else {
            i == null ? void 0 : i.chooseVideo({
              count: 1,
              sourceType: [props2.videoSourceType],
              compressed: false,
              success: function(res) {
                sendVideoMessage(res);
              }
            });
          }
        } else {
          ((_a = inputRef == null ? void 0 : inputRef.value) == null ? void 0 : _a.click) && ((_b = inputRef == null ? void 0 : inputRef.value) == null ? void 0 : _b.click());
        }
      };
      const sendVideoInWeb = (e2) => {
        var _a, _b;
        if (((_b = (_a = e2 == null ? void 0 : e2.target) == null ? void 0 : _a.files) == null ? void 0 : _b.length) <= 0) {
          return;
        }
        sendVideoMessage(e2 == null ? void 0 : e2.target);
        e2.target.value = "";
      };
      const sendVideoMessage = (file) => {
        var _a, _b, _c, _d, _e3;
        if (!file) {
          return;
        }
        const options = {
          to: ((_b = (_a = currentConversation == null ? void 0 : currentConversation.value) == null ? void 0 : _a.groupProfile) == null ? void 0 : _b.groupID) || ((_d = (_c = currentConversation == null ? void 0 : currentConversation.value) == null ? void 0 : _c.userProfile) == null ? void 0 : _d.userID),
          conversationType: (_e3 = currentConversation == null ? void 0 : currentConversation.value) == null ? void 0 : _e3.type,
          payload: {
            file
          },
          needReadReceipt: isEnabledMessageReadReceiptGlobal()
        };
        const offlinePushInfoCreateParams = {
          conversation: currentConversation.value,
          payload: options.payload,
          messageType: Kt.TYPES.MSG_VIDEO
        };
        const sendMessageOptions = {
          offlinePushInfo: OfflinePushInfoManager.create(offlinePushInfoCreateParams)
        };
        Zt.sendVideoMessage(options, sendMessageOptions);
      };
      const __returned__ = { props: props2, inputRef, currentConversation, handleIcon, handleTitle, onIconClick, sendVideoInWeb, sendVideoMessage, get isPC() {
        return isPC;
      }, get isUniFrameWork() {
        return isUniFrameWork;
      }, ToolbarItemContainer };
      Object.defineProperty(__returned__, "__isScriptSetup", { enumerable: false, value: true });
      return __returned__;
    }
  });
  function _sfc_render$o(_ctx, _cache, $props, $setup, $data, $options) {
    return vue.openBlock(), vue.createBlock($setup["ToolbarItemContainer"], {
      iconFile: $setup.handleIcon(),
      title: $setup.handleTitle(),
      needDialog: false,
      iconWidth: $setup.isUniFrameWork ? "32px" : "20px",
      iconHeight: $setup.isUniFrameWork ? $setup.props.videoSourceType === "album" ? "20px" : "25px" : "18px",
      onOnIconClick: $setup.onIconClick
    }, {
      default: vue.withCtx(() => [
        vue.createElementVNode(
          "div",
          {
            class: vue.normalizeClass(["video-upload", !$setup.isPC && "video-upload-h5"])
          },
          [
            vue.createElementVNode(
              "input",
              {
                ref: "inputRef",
                title: "视频",
                type: "file",
                "data-type": "video",
                accept: "video/*",
                onChange: $setup.sendVideoInWeb
              },
              null,
              544
              /* NEED_HYDRATION, NEED_PATCH */
            )
          ],
          2
          /* CLASS */
        )
      ]),
      _: 1
      /* STABLE */
    }, 8, ["iconFile", "title", "iconWidth", "iconHeight"]);
  }
  const VideoUpload = /* @__PURE__ */ _export_sfc(_sfc_main$p, [["render", _sfc_render$o], ["__scopeId", "data-v-11a33e36"], ["__file", "C:/Users/Administrator/Desktop/Project Folder/ZXHand/ZXHandwritting_APP_uniapp/TUIKit/components/TUIChat/message-input-toolbar/video-upload/index.vue"]]);
  const evaluateIconLight = "/assets/evalute-light.8db79ed8.svg";
  const evaluateIconDark = "/assets/evalute-dark.e265e635.svg";
  const Link = {
    product: {
      label: "产品文档",
      url: "https://cloud.tencent.com/document/product/269/1499#.E7.BE.A4.E7.BB.84.E5.8A.9F.E8.83.BD"
    },
    customMessage: {
      label: "自定义消息",
      url: "https://web.sdk.qcloud.com/im/doc/v3/zh-cn/SDK.html#createCustomMessage"
    },
    complaint: {
      label: "点此投诉",
      url: "https://cloud.tencent.com/apply/p/xc3oaubi98g"
    },
    implement: {
      label: "集成TUICallKit",
      url: "https://cloud.tencent.com/document/product/269/79861"
    },
    purchase: {
      label: "开通腾讯实时音视频服务",
      url: "https://cloud.tencent.com/document/product/1640/79968"
    }
  };
  const starIcon = "/assets/star.8a9a7e2e.png";
  const _sfc_main$o = /* @__PURE__ */ vue.defineComponent({
    __name: "index",
    props: {
      starTotal: {
        type: Number,
        default: 5
      }
    },
    emits: ["onDialogPopupShowOrHide"],
    setup(__props, { expose: __expose, emit: __emit }) {
      __expose();
      const evaluateIcon = ChatConfig.getTheme() === "dark" ? evaluateIconDark : evaluateIconLight;
      const props2 = __props;
      const emits2 = __emit;
      const container = vue.ref();
      const starList = vue.ref(props2.starTotal);
      const currentStarIndex = vue.ref(-1);
      const comment = vue.ref("");
      const currentConversation = vue.ref();
      zt.watch(o$2.CONV, {
        currentConversation: (conversation) => {
          currentConversation.value = conversation;
        }
      });
      const isEvaluateValid = vue.computed(() => comment.value.length || currentStarIndex.value >= 0);
      const onDialogShow = () => {
        emits2("onDialogPopupShowOrHide", true);
      };
      const onDialogClose = () => {
        resetEvaluate();
        emits2("onDialogPopupShowOrHide", false);
      };
      const openLink = () => {
        var _a;
        if (isPC || isH5) {
          window.open((_a = Link == null ? void 0 : Link.customMessage) == null ? void 0 : _a.url);
        }
      };
      const closeDialog = () => {
        var _a;
        (_a = container == null ? void 0 : container.value) == null ? void 0 : _a.toggleDialogDisplay(false);
      };
      const resetEvaluate = () => {
        currentStarIndex.value = -1;
        comment.value = "";
      };
      const selectStar = (starIndex) => {
        if (currentStarIndex.value === starIndex) {
          currentStarIndex.value = currentStarIndex.value - 1;
        } else {
          currentStarIndex.value = starIndex;
        }
      };
      const submitEvaluate = () => {
        var _a, _b, _c, _d, _e3, _f2;
        if (currentStarIndex.value < 0 && !comment.value.length) {
          return;
        }
        const payload = {
          data: JSON.stringify({
            businessID: CHAT_MSG_CUSTOM_TYPE.EVALUATE,
            version: 1,
            score: currentStarIndex.value + 1,
            comment: comment.value
          }),
          description: "对本次的服务评价",
          extension: "对本次的服务评价"
        };
        const options = {
          to: ((_b = (_a = currentConversation == null ? void 0 : currentConversation.value) == null ? void 0 : _a.groupProfile) == null ? void 0 : _b.groupID) || ((_d = (_c = currentConversation == null ? void 0 : currentConversation.value) == null ? void 0 : _c.userProfile) == null ? void 0 : _d.userID),
          conversationType: (_e3 = currentConversation == null ? void 0 : currentConversation.value) == null ? void 0 : _e3.type,
          payload,
          needReadReceipt: isEnabledMessageReadReceiptGlobal()
        };
        const offlinePushInfoCreateParams = {
          conversation: currentConversation.value,
          payload: options.payload,
          messageType: Kt.TYPES.MSG_CUSTOM
        };
        const sendMessageOptions = {
          offlinePushInfo: OfflinePushInfoManager.create(offlinePushInfoCreateParams)
        };
        Zt.sendCustomMessage(options, sendMessageOptions);
        (_f2 = container == null ? void 0 : container.value) == null ? void 0 : _f2.toggleDialogDisplay(false);
      };
      const __returned__ = { evaluateIcon, props: props2, emits: emits2, container, starList, currentStarIndex, comment, currentConversation, isEvaluateValid, onDialogShow, onDialogClose, openLink, closeDialog, resetEvaluate, selectStar, submitEvaluate, get TUITranslateService() {
        return Jt;
      }, ToolbarItemContainer, get Link() {
        return Link;
      }, Icon: Icon$1, get starIcon() {
        return starIcon;
      }, get starLightIcon() {
        return starLightIcon;
      }, get isPC() {
        return isPC;
      }, get isUniFrameWork() {
        return isUniFrameWork;
      } };
      Object.defineProperty(__returned__, "__isScriptSetup", { enumerable: false, value: true });
      return __returned__;
    }
  });
  function _sfc_render$n(_ctx, _cache, $props, $setup, $data, $options) {
    return vue.openBlock(), vue.createBlock($setup["ToolbarItemContainer"], {
      ref: "container",
      iconFile: $setup.evaluateIcon,
      title: "评价",
      needBottomPopup: true,
      iconWidth: $setup.isUniFrameWork ? "26px" : "20px",
      iconHeight: $setup.isUniFrameWork ? "26px" : "20px",
      onOnDialogShow: $setup.onDialogShow,
      onOnDialogClose: $setup.onDialogClose
    }, {
      default: vue.withCtx(() => [
        vue.createElementVNode(
          "div",
          {
            class: vue.normalizeClass(["evaluate", !$setup.isPC && "evaluate-h5"])
          },
          [
            vue.createElementVNode(
              "div",
              {
                class: vue.normalizeClass(["evaluate-header", !$setup.isPC && "evaluate-h5-header"])
              },
              [
                vue.createElementVNode(
                  "div",
                  {
                    class: vue.normalizeClass([
                      "evaluate-header-content",
                      !$setup.isPC && "evaluate-h5-header-content"
                    ])
                  },
                  vue.toDisplayString($setup.TUITranslateService.t("Evaluate.请对本次服务进行评价")),
                  3
                  /* TEXT, CLASS */
                ),
                !$setup.isPC ? (vue.openBlock(), vue.createElementBlock(
                  "div",
                  {
                    key: 0,
                    class: vue.normalizeClass([
                      "evaluate-header-close",
                      !$setup.isPC && "evaluate-h5-header-close"
                    ]),
                    onClick: vue.withModifiers($setup.closeDialog, ["stop"])
                  },
                  vue.toDisplayString($setup.TUITranslateService.t("关闭")),
                  3
                  /* TEXT, CLASS */
                )) : vue.createCommentVNode("v-if", true)
              ],
              2
              /* CLASS */
            ),
            vue.createElementVNode(
              "div",
              {
                class: vue.normalizeClass(["evaluate-content", !$setup.isPC && "evaluate-h5-content"])
              },
              [
                vue.createElementVNode(
                  "ul",
                  {
                    class: vue.normalizeClass([
                      "evaluate-content-list",
                      !$setup.isPC && "evaluate-h5-content-list"
                    ])
                  },
                  [
                    (vue.openBlock(true), vue.createElementBlock(
                      vue.Fragment,
                      null,
                      vue.renderList($setup.starList, (item, index2) => {
                        return vue.openBlock(), vue.createElementBlock("li", {
                          key: index2,
                          class: vue.normalizeClass([
                            "evaluate-content-list-item",
                            !$setup.isPC && "evaluate-h5-content-list-item"
                          ]),
                          onClick: vue.withModifiers(($event) => $setup.selectStar(index2), ["stop"])
                        }, [
                          index2 <= $setup.currentStarIndex ? (vue.openBlock(), vue.createBlock($setup["Icon"], {
                            key: 0,
                            file: $setup.starLightIcon,
                            width: $setup.isPC ? "20px" : "30px",
                            height: $setup.isPC ? "20px" : "30px"
                          }, null, 8, ["file", "width", "height"])) : (vue.openBlock(), vue.createBlock($setup["Icon"], {
                            key: 1,
                            file: $setup.starIcon,
                            width: $setup.isPC ? "20px" : "30px",
                            height: $setup.isPC ? "20px" : "30px"
                          }, null, 8, ["file", "width", "height"]))
                        ], 10, ["onClick"]);
                      }),
                      128
                      /* KEYED_FRAGMENT */
                    ))
                  ],
                  2
                  /* CLASS */
                ),
                vue.withDirectives(vue.createElementVNode(
                  "textarea",
                  {
                    "onUpdate:modelValue": _cache[0] || (_cache[0] = ($event) => $setup.comment = $event),
                    class: vue.normalizeClass([
                      "evaluate-content-text",
                      !$setup.isPC && "evaluate-h5-content-text"
                    ])
                  },
                  null,
                  2
                  /* CLASS */
                ), [
                  [vue.vModelText, $setup.comment]
                ]),
                vue.createElementVNode(
                  "div",
                  {
                    class: vue.normalizeClass([
                      "evaluate-content-button",
                      !$setup.isPC && "evaluate-h5-content-button"
                    ])
                  },
                  [
                    vue.createElementVNode(
                      "button",
                      {
                        class: vue.normalizeClass(["btn", $setup.isEvaluateValid ? "btn-valid" : "btn-invalid"]),
                        onClick: $setup.submitEvaluate
                      },
                      vue.toDisplayString($setup.TUITranslateService.t("Evaluate.提交评价")),
                      3
                      /* TEXT, CLASS */
                    )
                  ],
                  2
                  /* CLASS */
                )
              ],
              2
              /* CLASS */
            ),
            vue.createElementVNode(
              "div",
              {
                class: vue.normalizeClass(["evaluate-adv", !$setup.isPC && "evaluate-h5-adv"])
              },
              [
                vue.createTextVNode(
                  vue.toDisplayString($setup.TUITranslateService.t("Evaluate.服务评价工具")) + " " + vue.toDisplayString("(" + $setup.TUITranslateService.t("Evaluate.使用")) + " ",
                  1
                  /* TEXT */
                ),
                vue.createElementVNode(
                  "a",
                  {
                    onClick: _cache[1] || (_cache[1] = ($event) => $setup.openLink($setup.Link.customMessage))
                  },
                  vue.toDisplayString($setup.TUITranslateService.t(`Evaluate.${$setup.Link.customMessage.label}`)),
                  1
                  /* TEXT */
                ),
                vue.createTextVNode(
                  " " + vue.toDisplayString($setup.TUITranslateService.t("Evaluate.搭建") + ")"),
                  1
                  /* TEXT */
                )
              ],
              2
              /* CLASS */
            )
          ],
          2
          /* CLASS */
        )
      ]),
      _: 1
      /* STABLE */
    }, 8, ["iconFile", "iconWidth", "iconHeight"]);
  }
  const Evaluate$3 = /* @__PURE__ */ _export_sfc(_sfc_main$o, [["render", _sfc_render$n], ["__scopeId", "data-v-74e4698c"], ["__file", "C:/Users/Administrator/Desktop/Project Folder/ZXHand/ZXHandwritting_APP_uniapp/TUIKit/components/TUIChat/message-input-toolbar/evaluate/index.vue"]]);
  const wordsIconLight = "/assets/words-light.c8aec883.svg";
  const wordsIconDark = "/assets/words-dark.6a706f9a.svg";
  const wordsList = [
    {
      value: "在吗？在吗？在吗？重要的话说三遍。"
    },
    {
      value: "好久没聊天了，快来和我说说话～"
    },
    {
      value: "好的，就这么说定了。"
    },
    {
      value: "感恩的心，感谢有你。"
    },
    {
      value: "糟糕！是心动的感觉！"
    },
    {
      value: "心疼地抱抱自己，我太难了！"
    },
    {
      value: "没关系，别在意，事情过去就过去了。"
    },
    {
      value: "早上好，今天也是让人期待的一天呢！"
    },
    {
      value: "熬夜有什么用，又没人陪你聊天，早点休息吧。"
    }
  ];
  const _sfc_main$n = /* @__PURE__ */ vue.defineComponent({
    __name: "index",
    emits: ["onDialogPopupShowOrHide"],
    setup(__props, { expose: __expose, emit: __emit }) {
      __expose();
      const wordsIcon = ChatConfig.getTheme() === "dark" ? wordsIconDark : wordsIconLight;
      const emits2 = __emit;
      const currentConversation = vue.ref();
      const container = vue.ref();
      zt.watch(o$2.CONV, {
        currentConversation: (conversation) => {
          currentConversation.value = conversation;
        }
      });
      const selectWord = (item) => {
        var _a, _b, _c, _d, _e3, _f2;
        const options = {
          to: ((_b = (_a = currentConversation == null ? void 0 : currentConversation.value) == null ? void 0 : _a.groupProfile) == null ? void 0 : _b.groupID) || ((_d = (_c = currentConversation == null ? void 0 : currentConversation.value) == null ? void 0 : _c.userProfile) == null ? void 0 : _d.userID),
          conversationType: (_e3 = currentConversation == null ? void 0 : currentConversation.value) == null ? void 0 : _e3.type,
          payload: {
            text: Jt.t(`Words.${item.value}`)
          },
          needReadReceipt: isEnabledMessageReadReceiptGlobal()
        };
        Zt.sendTextMessage(options);
        (_f2 = container == null ? void 0 : container.value) == null ? void 0 : _f2.toggleDialogDisplay(false);
      };
      const closeDialog = () => {
        var _a;
        (_a = container == null ? void 0 : container.value) == null ? void 0 : _a.toggleDialogDisplay(false);
      };
      const onDialogShow = () => {
        emits2("onDialogPopupShowOrHide", true);
      };
      const onDialogClose = () => {
        emits2("onDialogPopupShowOrHide", false);
      };
      const __returned__ = { wordsIcon, emits: emits2, currentConversation, container, selectWord, closeDialog, onDialogShow, onDialogClose, get TUITranslateService() {
        return Jt;
      }, ToolbarItemContainer, get wordsList() {
        return wordsList;
      }, get isPC() {
        return isPC;
      }, get isUniFrameWork() {
        return isUniFrameWork;
      } };
      Object.defineProperty(__returned__, "__isScriptSetup", { enumerable: false, value: true });
      return __returned__;
    }
  });
  function _sfc_render$m(_ctx, _cache, $props, $setup, $data, $options) {
    return vue.openBlock(), vue.createBlock($setup["ToolbarItemContainer"], {
      ref: "container",
      iconFile: $setup.wordsIcon,
      title: "常用语",
      needBottomPopup: true,
      iconWidth: $setup.isUniFrameWork ? "26px" : "20px",
      iconHeight: $setup.isUniFrameWork ? "26px" : "20px",
      onOnDialogShow: $setup.onDialogShow,
      onOnDialogClose: $setup.onDialogClose
    }, {
      default: vue.withCtx(() => [
        vue.createElementVNode(
          "div",
          {
            class: vue.normalizeClass(["words", !$setup.isPC && "words-h5"])
          },
          [
            vue.createElementVNode(
              "div",
              {
                class: vue.normalizeClass(["words-header", !$setup.isPC && "words-h5-header"])
              },
              [
                vue.createElementVNode(
                  "span",
                  {
                    class: vue.normalizeClass(["words-header-title", !$setup.isPC && "words-h5-header-title"])
                  },
                  vue.toDisplayString($setup.TUITranslateService.t("Words.常用语-快捷回复工具")),
                  3
                  /* TEXT, CLASS */
                ),
                !$setup.isPC ? (vue.openBlock(), vue.createElementBlock(
                  "span",
                  {
                    key: 0,
                    class: vue.normalizeClass(["words-header-close", !$setup.isPC && "words-h5-header-close"]),
                    onClick: $setup.closeDialog
                  },
                  " 关闭 ",
                  2
                  /* CLASS */
                )) : vue.createCommentVNode("v-if", true)
              ],
              2
              /* CLASS */
            ),
            vue.createElementVNode(
              "ul",
              {
                class: vue.normalizeClass(["words-list", !$setup.isPC && "words-h5-list"])
              },
              [
                (vue.openBlock(true), vue.createElementBlock(
                  vue.Fragment,
                  null,
                  vue.renderList($setup.wordsList, (item, index2) => {
                    return vue.openBlock(), vue.createElementBlock("li", {
                      key: index2,
                      class: vue.normalizeClass(["words-list-item", !$setup.isPC && "words-h5-list-item"]),
                      onClick: ($event) => $setup.selectWord(item)
                    }, vue.toDisplayString($setup.TUITranslateService.t(`Words.${item.value}`)), 11, ["onClick"]);
                  }),
                  128
                  /* KEYED_FRAGMENT */
                ))
              ],
              2
              /* CLASS */
            )
          ],
          2
          /* CLASS */
        )
      ]),
      _: 1
      /* STABLE */
    }, 8, ["iconFile", "iconWidth", "iconHeight"]);
  }
  const Words$3 = /* @__PURE__ */ _export_sfc(_sfc_main$n, [["render", _sfc_render$m], ["__scopeId", "data-v-ac0e1580"], ["__file", "C:/Users/Administrator/Desktop/Project Folder/ZXHand/ZXHandwritting_APP_uniapp/TUIKit/components/TUIChat/message-input-toolbar/words/index.vue"]]);
  const faceIconLight = "/assets/face-light.b3a6acfa.svg";
  const faceIconDark = "/assets/face-dark.1ce4b9fa.svg";
  const _sfc_main$m = /* @__PURE__ */ vue.defineComponent({
    __name: "emoji-picker-dialog",
    emits: ["insertEmoji", "onClose", "sendMessage"],
    setup(__props, { expose: __expose, emit: __emit }) {
      var _a;
      __expose();
      const faceIcon2 = ChatConfig.getTheme() === "dark" ? faceIconDark : faceIconLight;
      const emits2 = __emit;
      const currentTabIndex = vue.ref(0);
      const currentConversation = vue.ref();
      const emojiPickerDialog = vue.ref();
      const emojiPickerListRef = vue.ref();
      const featureConfig = ChatConfig.getFeatureConfig();
      const list = vue.ref(initEmojiList());
      const currentTabItem = vue.ref(list == null ? void 0 : list.value[0]);
      const currentEmojiList = vue.ref((_a = list == null ? void 0 : list.value[0]) == null ? void 0 : _a.list);
      vue.onMounted(() => {
        zt.watch(o$2.CONV, {
          currentConversation: onCurrentConversationUpdate
        });
      });
      vue.onUnmounted(() => {
        zt.unwatch(o$2.CONV, {
          currentConversation: onCurrentConversationUpdate
        });
      });
      const toggleEmojiTab = (index2) => {
        var _a2;
        currentTabIndex.value = index2;
        currentTabItem.value = list == null ? void 0 : list.value[index2];
        currentEmojiList.value = (_a2 = list == null ? void 0 : list.value[index2]) == null ? void 0 : _a2.list;
        if (!isUniFrameWork) {
          (emojiPickerListRef == null ? void 0 : emojiPickerListRef.value) && (emojiPickerListRef.value.scrollTop = 0);
        }
      };
      const select = (item, index2) => {
        var _a2, _b, _c;
        const options = {
          emoji: { key: item, name: convertKeyToEmojiName(item) },
          type: (_a2 = currentTabItem == null ? void 0 : currentTabItem.value) == null ? void 0 : _a2.type
        };
        switch ((_b = currentTabItem == null ? void 0 : currentTabItem.value) == null ? void 0 : _b.type) {
          case EMOJI_TYPE.BASIC:
            options.url = ((_c = currentTabItem == null ? void 0 : currentTabItem.value) == null ? void 0 : _c.url) + BASIC_EMOJI_URL_MAPPING[item];
            if (isUniFrameWork) {
              uni.$emit("insert-emoji", options);
            } else {
              emits2("insertEmoji", options);
            }
            break;
          case EMOJI_TYPE.BIG:
            sendFaceMessage(index2, currentTabItem.value);
            break;
          case EMOJI_TYPE.CUSTOM:
            sendFaceMessage(index2, currentTabItem.value);
            break;
        }
        isPC && emits2("onClose");
      };
      const sendFaceMessage = (index2, listItem) => {
        var _a2, _b, _c, _d, _e3;
        const options = {
          to: ((_b = (_a2 = currentConversation == null ? void 0 : currentConversation.value) == null ? void 0 : _a2.groupProfile) == null ? void 0 : _b.groupID) || ((_d = (_c = currentConversation == null ? void 0 : currentConversation.value) == null ? void 0 : _c.userProfile) == null ? void 0 : _d.userID),
          conversationType: (_e3 = currentConversation == null ? void 0 : currentConversation.value) == null ? void 0 : _e3.type,
          payload: {
            index: listItem.emojiGroupID,
            data: listItem.list[index2]
          },
          needReadReceipt: isEnabledMessageReadReceiptGlobal()
        };
        Zt.sendFaceMessage(options);
      };
      function sendMessage() {
        uni.$emit("send-message-in-emoji-picker");
      }
      function onCurrentConversationUpdate(conversation) {
        currentConversation.value = conversation;
      }
      function initEmojiList() {
        return EMOJI_GROUP_LIST.filter((item) => {
          if (item.type === EMOJI_TYPE.BASIC) {
            return featureConfig.InputEmoji;
          }
          if (item.type === EMOJI_TYPE.BIG) {
            return featureConfig.InputStickers;
          }
        });
      }
      const __returned__ = { faceIcon: faceIcon2, emits: emits2, currentTabIndex, currentConversation, emojiPickerDialog, emojiPickerListRef, featureConfig, list, currentTabItem, currentEmojiList, toggleEmojiTab, select, sendFaceMessage, sendMessage, onCurrentConversationUpdate, initEmojiList, Icon: Icon$1, get EMOJI_TYPE() {
        return EMOJI_TYPE;
      }, get isPC() {
        return isPC;
      }, get isUniFrameWork() {
        return isUniFrameWork;
      }, get BASIC_EMOJI_URL_MAPPING() {
        return BASIC_EMOJI_URL_MAPPING;
      } };
      Object.defineProperty(__returned__, "__isScriptSetup", { enumerable: false, value: true });
      return __returned__;
    }
  });
  function _sfc_render$l(_ctx, _cache, $props, $setup, $data, $options) {
    return vue.openBlock(), vue.createElementBlock(
      "div",
      {
        ref: "emojiPickerDialog",
        class: vue.normalizeClass({
          "emoji-picker": true,
          "emoji-picker-h5": !$setup.isPC
        })
      },
      [
        vue.createElementVNode(
          "ul",
          {
            ref: "emojiPickerListRef",
            class: vue.normalizeClass(["emoji-picker-list", !$setup.isPC && "emoji-picker-h5-list"])
          },
          [
            (vue.openBlock(true), vue.createElementBlock(
              vue.Fragment,
              null,
              vue.renderList($setup.currentEmojiList, (childrenItem, childrenIndex) => {
                return vue.openBlock(), vue.createElementBlock("li", {
                  key: childrenIndex,
                  class: "emoji-picker-list-item",
                  onClick: ($event) => $setup.select(childrenItem, childrenIndex)
                }, [
                  $setup.currentTabItem.type === $setup.EMOJI_TYPE.BASIC ? (vue.openBlock(), vue.createElementBlock("img", {
                    key: 0,
                    class: "emoji",
                    src: $setup.currentTabItem.url + $setup.BASIC_EMOJI_URL_MAPPING[childrenItem]
                  }, null, 8, ["src"])) : $setup.currentTabItem.type === $setup.EMOJI_TYPE.BIG ? (vue.openBlock(), vue.createElementBlock("img", {
                    key: 1,
                    class: "emoji-big",
                    src: $setup.currentTabItem.url + childrenItem + "@2x.png"
                  }, null, 8, ["src"])) : (vue.openBlock(), vue.createElementBlock("img", {
                    key: 2,
                    class: "emoji-custom emoji-big",
                    src: $setup.currentTabItem.url + childrenItem
                  }, null, 8, ["src"]))
                ], 8, ["onClick"]);
              }),
              128
              /* KEYED_FRAGMENT */
            ))
          ],
          2
          /* CLASS */
        ),
        vue.createElementVNode("ul", { class: "emoji-picker-tab" }, [
          (vue.openBlock(true), vue.createElementBlock(
            vue.Fragment,
            null,
            vue.renderList($setup.list, (item, index2) => {
              return vue.openBlock(), vue.createElementBlock("li", {
                key: index2,
                class: "emoji-picker-tab-item",
                onClick: ($event) => $setup.toggleEmojiTab(index2)
              }, [
                item.type === $setup.EMOJI_TYPE.BASIC ? (vue.openBlock(), vue.createBlock($setup["Icon"], {
                  key: 0,
                  class: "icon",
                  file: $setup.faceIcon
                }, null, 8, ["file"])) : item.type === $setup.EMOJI_TYPE.BIG ? (vue.openBlock(), vue.createElementBlock("img", {
                  key: 1,
                  class: "icon-big",
                  src: item.url + item.list[0] + "@2x.png"
                }, null, 8, ["src"])) : (vue.openBlock(), vue.createElementBlock("img", {
                  key: 2,
                  class: "icon-custom icon-big",
                  src: item.url + item.list[0]
                }, null, 8, ["src"]))
              ], 8, ["onClick"]);
            }),
            128
            /* KEYED_FRAGMENT */
          )),
          $setup.isUniFrameWork ? (vue.openBlock(), vue.createElementBlock("li", {
            key: 0,
            class: "send-btn",
            onClick: $setup.sendMessage
          }, " 发送 ")) : vue.createCommentVNode("v-if", true)
        ])
      ],
      2
      /* CLASS */
    );
  }
  const EmojiPickerDialog = /* @__PURE__ */ _export_sfc(_sfc_main$m, [["render", _sfc_render$l], ["__scopeId", "data-v-194fb307"], ["__file", "C:/Users/Administrator/Desktop/Project Folder/ZXHand/ZXHandwritting_APP_uniapp/TUIKit/components/TUIChat/message-input-toolbar/emoji-picker/emoji-picker-dialog.vue"]]);
  const _sfc_main$l = /* @__PURE__ */ vue.defineComponent({
    __name: "index",
    props: {
      // type: voiceCall/groupCall/...
      type: {
        type: String,
        default: ""
      },
      currentConversation: {
        type: Object,
        default: () => ({})
      },
      isGroup: {
        type: Boolean,
        default: false
      }
    },
    emits: ["submit", "cancel"],
    setup(__props, { expose: __expose, emit: __emit }) {
      const props2 = __props;
      const emits2 = __emit;
      const show = vue.ref(false);
      const groupID = vue.ref("");
      const memberList = vue.ref([]);
      const searchMemberList = vue.ref([]);
      const selfUserID = vue.ref("");
      const titleMap = {
        voiceCall: "发起群语音",
        videoCall: "发起群视频"
      };
      const title = vue.computed(() => {
        return titleMap[props2.type] ? titleMap[props2.type] : "";
      });
      Xt.getUserProfile().then((res) => {
        var _a;
        if ((_a = res == null ? void 0 : res.data) == null ? void 0 : _a.userID) {
          selfUserID.value = res.data.userID;
        }
      });
      vue.watch(
        () => {
          var _a;
          return [(_a = props2 == null ? void 0 : props2.currentConversation) == null ? void 0 : _a.conversationID, show.value];
        },
        (newVal, oldVal) => {
          if (newVal && newVal !== oldVal) {
            if (props2.isGroup && show.value) {
              groupID.value = props2.currentConversation.groupProfile.groupID;
              Qt.getGroupMemberList({
                groupID: groupID.value
              }).then((res) => {
                var _a, _b;
                memberList.value = (_b = (_a = res == null ? void 0 : res.data) == null ? void 0 : _a.memberList) == null ? void 0 : _b.filter(
                  (user) => (user == null ? void 0 : user.userID) !== selfUserID.value
                );
                searchMemberList.value = memberList.value;
              });
            } else {
              groupID.value = "";
              memberList.value = [];
              searchMemberList.value = memberList.value;
            }
          }
        },
        {
          immediate: true
        }
      );
      const search = (searchInfo) => {
        var _a;
        const results = (_a = memberList.value) == null ? void 0 : _a.filter(
          (member) => (member == null ? void 0 : member.userID) === searchInfo
        );
        searchMemberList.value = (results == null ? void 0 : results.length) ? results : memberList.value;
      };
      const submit = (selectedMemberList) => {
        const userIDList = [];
        selectedMemberList == null ? void 0 : selectedMemberList.forEach((user) => {
          (user == null ? void 0 : user.userID) && userIDList.push(user.userID);
        });
        if (props2.type === "voiceCall") {
          emits2("submit", { userIDList, groupID: groupID.value, type: 1 });
        } else if (props2.type === "videoCall") {
          emits2("submit", { userIDList, groupID: groupID.value, type: 2 });
        }
        searchMemberList.value = memberList.value;
        toggleShow(false);
      };
      const cancel = () => {
        searchMemberList.value = memberList.value;
        emits2("cancel");
        toggleShow(false);
      };
      const toggleShow = (showStatus) => {
        show.value = showStatus;
      };
      __expose({
        toggleShow
      });
      const __returned__ = { props: props2, emits: emits2, show, groupID, memberList, searchMemberList, selfUserID, titleMap, title, search, submit, cancel, toggleShow, Dialog, Transfer, get isPC() {
        return isPC;
      } };
      Object.defineProperty(__returned__, "__isScriptSetup", { enumerable: false, value: true });
      return __returned__;
    }
  });
  function _sfc_render$k(_ctx, _cache, $props, $setup, $data, $options) {
    return vue.openBlock(), vue.createBlock($setup["Dialog"], {
      show: $setup.show,
      isH5: !$setup.isPC,
      isHeaderShow: false,
      isFooterShow: false,
      background: false,
      "onUpdate:show": $setup.toggleShow
    }, {
      default: vue.withCtx(() => [
        vue.createVNode($setup["Transfer"], {
          isSearch: true,
          title: $setup.title,
          list: $setup.searchMemberList,
          isH5: !$setup.isPC,
          isRadio: false,
          onSearch: $setup.search,
          onSubmit: $setup.submit,
          onCancel: $setup.cancel
        }, null, 8, ["title", "list", "isH5"])
      ]),
      _: 1
      /* STABLE */
    }, 8, ["show", "isH5"]);
  }
  const UserSelector = /* @__PURE__ */ _export_sfc(_sfc_main$l, [["render", _sfc_render$k], ["__file", "C:/Users/Administrator/Desktop/Project Folder/ZXHand/ZXHandwritting_APP_uniapp/TUIKit/components/TUIChat/message-input-toolbar/user-selector/index.vue"]]);
  const __default__ = {
    options: {
      styleIsolation: "shared"
    }
  };
  const _sfc_main$k = /* @__PURE__ */ vue.defineComponent({
    ...__default__,
    __name: "index",
    props: {
      displayType: { type: String, required: true }
    },
    setup(__props, { expose: __expose }) {
      __expose();
      const props2 = __props;
      const currentConversation = vue.ref();
      const isGroup = vue.ref(false);
      const selectorShowType = vue.ref("");
      const userSelectorRef = vue.ref();
      const currentUserSelectorExtension = vue.ref();
      const currentExtensionList = vue.ref([]);
      const isSwiperIndicatorDotsEnable = vue.ref(false);
      const featureConfig = ChatConfig.getFeatureConfig();
      const neededCountFirstPage = vue.ref(8);
      const slicePos = vue.ref(0);
      const computeToolbarPaging = () => {
        if (featureConfig.InputImage && featureConfig.InputVideo) {
          neededCountFirstPage.value -= 4;
        } else if (featureConfig.InputImage || featureConfig.InputVideo) {
          neededCountFirstPage.value -= 2;
        }
        slicePos.value = neededCountFirstPage.value;
        neededCountFirstPage.value -= currentExtensionList.value.length;
        if (neededCountFirstPage.value === 1) {
          isSwiperIndicatorDotsEnable.value = featureConfig.InputEvaluation && featureConfig.InputQuickReplies;
        } else if (neededCountFirstPage.value < 1) {
          isSwiperIndicatorDotsEnable.value = featureConfig.InputEvaluation || featureConfig.InputQuickReplies;
        }
      };
      vue.onMounted(() => {
        zt.watch(o$2.CUSTOM, {
          activeConversation: onActiveConversationUpdate
        });
      });
      vue.onUnmounted(() => {
        zt.unwatch(o$2.CUSTOM, {
          activeConversation: onActiveConversationUpdate
        });
      });
      const onActiveConversationUpdate = (conversationID) => {
        var _a;
        if (!conversationID) {
          return;
        }
        if (conversationID !== ((_a = currentConversation.value) == null ? void 0 : _a.conversationID)) {
          getExtensionList();
          computeToolbarPaging();
          currentConversation.value = zt.getConversationModel(conversationID);
          isGroup.value = conversationID.startsWith(Kt.TYPES.CONV_GROUP);
        }
      };
      const getExtensionList = () => {
        const chatType = ChatConfig.getChatType();
        const params = { chatType };
        if (chatType === E$1.TUIChat.TYPE.CUSTOMER_SERVICE) {
          params.filterVoice = true;
          params.filterVideo = true;
          enableSampleTaskStatus("customerService");
        }
        currentExtensionList.value = [
          ...R$1.getExtensionList(E$1.TUIChat.EXTENSION.INPUT_MORE.EXT_ID, params)
        ].filter((extension) => {
          var _a;
          if (((_a = extension == null ? void 0 : extension.data) == null ? void 0 : _a.name) === "search") {
            return featureConfig.MessageSearch;
          }
          return true;
        });
      };
      const onExtensionClick = (extension) => {
        var _a, _b, _c;
        const extensionModel = currentExtensionList.value.find(
          (targetExtension) => {
            var _a2, _b2;
            return ((_a2 = targetExtension == null ? void 0 : targetExtension.data) == null ? void 0 : _a2.name) === ((_b2 = extension == null ? void 0 : extension.data) == null ? void 0 : _b2.name);
          }
        );
        switch ((_a = extensionModel == null ? void 0 : extensionModel.data) == null ? void 0 : _a.name) {
          case "voiceCall":
            onCallExtensionClicked(extensionModel, 1);
            break;
          case "videoCall":
            onCallExtensionClicked(extensionModel, 2);
            break;
          case "search":
            (_c = (_b = extensionModel == null ? void 0 : extensionModel.listener) == null ? void 0 : _b.onClicked) == null ? void 0 : _c.call(_b);
            break;
        }
      };
      const onCallExtensionClicked = (extension, callType) => {
        var _a, _b, _c, _d, _e3, _f2, _g2;
        selectorShowType.value = (_a = extension == null ? void 0 : extension.data) == null ? void 0 : _a.name;
        if (((_b = currentConversation == null ? void 0 : currentConversation.value) == null ? void 0 : _b.type) === Kt.TYPES.CONV_C2C) {
          (_f2 = (_c = extension == null ? void 0 : extension.listener) == null ? void 0 : _c.onClicked) == null ? void 0 : _f2.call(_c, {
            userIDList: [(_e3 = (_d = currentConversation == null ? void 0 : currentConversation.value) == null ? void 0 : _d.conversationID) == null ? void 0 : _e3.slice(3)],
            type: callType,
            callParams: {
              offlinePushInfo: OfflinePushInfoManager.getOfflinePushInfo(PUSH_SCENE.CALL)
            }
          });
        } else if (isGroup.value) {
          currentUserSelectorExtension.value = extension;
          ((_g2 = userSelectorRef == null ? void 0 : userSelectorRef.value) == null ? void 0 : _g2.toggleShow) && userSelectorRef.value.toggleShow(true);
        }
      };
      const genExtensionIcon = (extension) => {
        return extension == null ? void 0 : extension.icon;
      };
      const genExtensionText = (extension) => {
        return extension == null ? void 0 : extension.text;
      };
      const onUserSelectorSubmit = (selectedInfo) => {
        var _a, _b, _c;
        (_c = (_b = (_a = currentUserSelectorExtension.value) == null ? void 0 : _a.listener) == null ? void 0 : _b.onClicked) == null ? void 0 : _c.call(_b, {
          ...selectedInfo,
          callParams: {
            offlinePushInfo: OfflinePushInfoManager.getOfflinePushInfo(PUSH_SCENE.CALL)
          }
        });
        currentUserSelectorExtension.value = null;
      };
      const onUserSelectorCancel = () => {
        currentUserSelectorExtension.value = null;
      };
      const handleSwiperDotShow = (showStatus) => {
        isSwiperIndicatorDotsEnable.value = neededCountFirstPage.value <= 1 && !showStatus;
      };
      const __returned__ = { props: props2, currentConversation, isGroup, selectorShowType, userSelectorRef, currentUserSelectorExtension, currentExtensionList, isSwiperIndicatorDotsEnable, featureConfig, neededCountFirstPage, slicePos, computeToolbarPaging, onActiveConversationUpdate, getExtensionList, onExtensionClick, onCallExtensionClicked, genExtensionIcon, genExtensionText, onUserSelectorSubmit, onUserSelectorCancel, handleSwiperDotShow, ImageUpload, VideoUpload, Evaluate: Evaluate$3, Words: Words$3, ToolbarItemContainer, EmojiPickerDialog, UserSelector };
      Object.defineProperty(__returned__, "__isScriptSetup", { enumerable: false, value: true });
      return __returned__;
    }
  });
  function _sfc_render$j(_ctx, _cache, $props, $setup, $data, $options) {
    return vue.openBlock(), vue.createElementBlock("div", {
      class: vue.normalizeClass([
        "message-input-toolbar",
        "message-input-toolbar-h5",
        "message-input-toolbar-uni"
      ])
    }, [
      $setup.props.displayType === "emojiPicker" ? (vue.openBlock(), vue.createElementBlock("div", { key: 0 }, [
        vue.createVNode($setup["EmojiPickerDialog"])
      ])) : (vue.openBlock(), vue.createElementBlock("div", { key: 1 }, [
        vue.createElementVNode("swiper", {
          class: vue.normalizeClass(["message-input-toolbar-swiper"]),
          "indicator-dots": $setup.isSwiperIndicatorDotsEnable,
          autoplay: false,
          circular: false
        }, [
          vue.createElementVNode("swiper-item", {
            class: vue.normalizeClass([
              "message-input-toolbar-list",
              "message-input-toolbar-h5-list",
              "message-input-toolbar-uni-list"
            ])
          }, [
            $setup.featureConfig.InputImage ? (vue.openBlock(), vue.createBlock($setup["ImageUpload"], {
              key: 0,
              imageSourceType: "camera"
            })) : vue.createCommentVNode("v-if", true),
            $setup.featureConfig.InputImage ? (vue.openBlock(), vue.createBlock($setup["ImageUpload"], {
              key: 1,
              imageSourceType: "album"
            })) : vue.createCommentVNode("v-if", true),
            $setup.featureConfig.InputVideo ? (vue.openBlock(), vue.createBlock($setup["VideoUpload"], {
              key: 2,
              videoSourceType: "album"
            })) : vue.createCommentVNode("v-if", true),
            $setup.featureConfig.InputVideo ? (vue.openBlock(), vue.createBlock($setup["VideoUpload"], {
              key: 3,
              videoSourceType: "camera"
            })) : vue.createCommentVNode("v-if", true),
            $setup.currentExtensionList.length > 0 ? (vue.openBlock(true), vue.createElementBlock(
              vue.Fragment,
              { key: 4 },
              vue.renderList($setup.currentExtensionList.slice(0, $setup.slicePos), (extension, index2) => {
                return vue.openBlock(), vue.createElementBlock("div", { key: index2 }, [
                  extension ? (vue.openBlock(), vue.createBlock($setup["ToolbarItemContainer"], {
                    key: 0,
                    iconFile: $setup.genExtensionIcon(extension),
                    title: $setup.genExtensionText(extension),
                    iconWidth: "25px",
                    iconHeight: "25px",
                    needDialog: false,
                    onOnIconClick: ($event) => $setup.onExtensionClick(extension)
                  }, null, 8, ["iconFile", "title", "onOnIconClick"])) : vue.createCommentVNode("v-if", true)
                ]);
              }),
              128
              /* KEYED_FRAGMENT */
            )) : vue.createCommentVNode("v-if", true),
            $setup.neededCountFirstPage === 1 ? (vue.openBlock(), vue.createElementBlock(
              vue.Fragment,
              { key: 5 },
              [
                $setup.featureConfig.InputEvaluation ? (vue.openBlock(), vue.createBlock($setup["Evaluate"], {
                  key: 0,
                  onOnDialogPopupShowOrHide: $setup.handleSwiperDotShow
                })) : $setup.featureConfig.InputQuickReplies ? (vue.openBlock(), vue.createBlock($setup["Words"], {
                  key: 1,
                  onOnDialogPopupShowOrHide: $setup.handleSwiperDotShow
                })) : vue.createCommentVNode("v-if", true)
              ],
              64
              /* STABLE_FRAGMENT */
            )) : vue.createCommentVNode("v-if", true),
            $setup.neededCountFirstPage > 1 ? (vue.openBlock(), vue.createElementBlock(
              vue.Fragment,
              { key: 6 },
              [
                $setup.featureConfig.InputEvaluation ? (vue.openBlock(), vue.createBlock($setup["Evaluate"], {
                  key: 0,
                  onOnDialogPopupShowOrHide: $setup.handleSwiperDotShow
                })) : vue.createCommentVNode("v-if", true),
                $setup.featureConfig.InputQuickReplies ? (vue.openBlock(), vue.createBlock($setup["Words"], {
                  key: 1,
                  onOnDialogPopupShowOrHide: $setup.handleSwiperDotShow
                })) : vue.createCommentVNode("v-if", true)
              ],
              64
              /* STABLE_FRAGMENT */
            )) : vue.createCommentVNode("v-if", true)
          ]),
          $setup.neededCountFirstPage <= 1 ? (vue.openBlock(), vue.createElementBlock("swiper-item", {
            key: 0,
            class: vue.normalizeClass([
              "message-input-toolbar-list",
              "message-input-toolbar-h5-list",
              "message-input-toolbar-uni-list"
            ])
          }, [
            (vue.openBlock(true), vue.createElementBlock(
              vue.Fragment,
              null,
              vue.renderList($setup.currentExtensionList.slice($setup.slicePos), (extension, index2) => {
                return vue.openBlock(), vue.createElementBlock("div", { key: index2 }, [
                  extension ? (vue.openBlock(), vue.createBlock($setup["ToolbarItemContainer"], {
                    key: 0,
                    iconFile: $setup.genExtensionIcon(extension),
                    title: $setup.genExtensionText(extension),
                    iconWidth: "25px",
                    iconHeight: "25px",
                    needDialog: false,
                    onOnIconClick: ($event) => $setup.onExtensionClick(extension)
                  }, null, 8, ["iconFile", "title", "onOnIconClick"])) : vue.createCommentVNode("v-if", true)
                ]);
              }),
              128
              /* KEYED_FRAGMENT */
            )),
            $setup.neededCountFirstPage === 1 ? (vue.openBlock(), vue.createElementBlock(
              vue.Fragment,
              { key: 0 },
              [
                $setup.featureConfig.InputQuickReplies ? (vue.openBlock(), vue.createBlock($setup["Words"], {
                  key: 0,
                  onOnDialogPopupShowOrHide: $setup.handleSwiperDotShow
                })) : vue.createCommentVNode("v-if", true)
              ],
              64
              /* STABLE_FRAGMENT */
            )) : (vue.openBlock(), vue.createElementBlock(
              vue.Fragment,
              { key: 1 },
              [
                $setup.featureConfig.InputEvaluation ? (vue.openBlock(), vue.createBlock($setup["Evaluate"], {
                  key: 0,
                  onOnDialogPopupShowOrHide: $setup.handleSwiperDotShow
                })) : vue.createCommentVNode("v-if", true),
                $setup.featureConfig.InputQuickReplies ? (vue.openBlock(), vue.createBlock($setup["Words"], {
                  key: 1,
                  onOnDialogPopupShowOrHide: $setup.handleSwiperDotShow
                })) : vue.createCommentVNode("v-if", true)
              ],
              64
              /* STABLE_FRAGMENT */
            ))
          ])) : vue.createCommentVNode("v-if", true)
        ], 8, ["indicator-dots"])
      ])),
      vue.createVNode($setup["UserSelector"], {
        ref: "userSelectorRef",
        type: $setup.selectorShowType,
        currentConversation: $setup.currentConversation,
        isGroup: $setup.isGroup,
        onSubmit: $setup.onUserSelectorSubmit,
        onCancel: $setup.onUserSelectorCancel
      }, null, 8, ["type", "currentConversation", "isGroup"])
    ]);
  }
  const MessageInputToolbar = /* @__PURE__ */ _export_sfc(_sfc_main$k, [["render", _sfc_render$j], ["__scopeId", "data-v-42c7481c"], ["__file", "C:/Users/Administrator/Desktop/Project Folder/ZXHand/ZXHandwritting_APP_uniapp/TUIKit/components/TUIChat/message-input-toolbar/index.vue"]]);
  const initChat = (options) => {
    const { chat: chat2 } = A.getContext();
    if (options && options.conversationID && (chat2 == null ? void 0 : chat2.isReady())) {
      const { conversationID } = options;
      if (!conversationID.startsWith("C2C") && !conversationID.startsWith("GROUP")) {
        formatAppLog("warn", "at TUIKit/components/TUIChat/entry-chat-only.ts:22", "conversationID from options is invalid.");
        return;
      }
      Wt.switchConversation(conversationID);
    }
  };
  const logout = (flag2) => {
    if (flag2) {
      return A.logout();
    }
    return Promise.resolve();
  };
  const _sfc_main$j = /* @__PURE__ */ vue.defineComponent({
    __name: "index",
    emits: ["closeChat"],
    setup(__props, { expose: __expose, emit: __emit }) {
      __expose();
      onLoad((options) => {
        initChat(options);
      });
      onUnload(() => {
        logout(false).then(() => {
        }).catch(() => {
        });
      });
      const emits2 = __emit;
      const groupID = vue.ref(void 0);
      const isGroup = vue.ref(false);
      const isNotInGroup = vue.ref(false);
      const notInGroupReason = vue.ref();
      const currentConversationID = vue.ref();
      const isMultipleSelectMode = vue.ref(false);
      const inputToolbarDisplayType = vue.ref("none");
      const messageInputRef = vue.ref();
      const messageListRef = vue.ref();
      const headerExtensionList = vue.ref([]);
      const featureConfig = ChatConfig.getFeatureConfig();
      vue.onMounted(() => {
        zt.watch(o$2.CONV, {
          currentConversationID: onCurrentConversationIDUpdate,
          currentConversation: onCurrentConversationUpdate
        });
      });
      vue.onUnmounted(() => {
        zt.unwatch(o$2.CONV, {
          currentConversationID: onCurrentConversationIDUpdate,
          currentConversation: onCurrentConversationUpdate
        });
        reset();
      });
      const isInputToolbarShow = vue.computed(() => {
        return isUniFrameWork ? inputToolbarDisplayType.value !== "none" : true;
      });
      const leaveGroupReasonText = vue.computed(() => {
        let text = "";
        switch (notInGroupReason.value) {
          case 4:
            text = Jt.t("TUIChat.您已被管理员移出群聊");
            break;
          case 5:
            text = Jt.t("TUIChat.该群聊已被解散");
            break;
          case 8:
            text = Jt.t("TUIChat.您已退出该群聊");
            break;
          default:
            text = Jt.t("TUIChat.您已退出该群聊");
            break;
        }
        return text;
      });
      const reset = () => {
        Wt.switchConversation("");
      };
      const closeChat = (conversationID) => {
        emits2("closeChat", conversationID);
        reset();
      };
      const insertEmoji = (emojiObj) => {
        var _a;
        (_a = messageInputRef.value) == null ? void 0 : _a.insertEmoji(emojiObj);
      };
      const handleEditor = (message2, type) => {
        var _a, _b, _c;
        if (!message2 || !type)
          return;
        switch (type) {
          case "reference":
            break;
          case "reply":
            break;
          case "reedit":
            if ((_a = message2 == null ? void 0 : message2.payload) == null ? void 0 : _a.text) {
              (_c = messageInputRef == null ? void 0 : messageInputRef.value) == null ? void 0 : _c.reEdit((_b = message2 == null ? void 0 : message2.payload) == null ? void 0 : _b.text);
            }
            break;
        }
      };
      const handleGroup = () => {
        headerExtensionList.value[0].listener.onClicked({ groupID: groupID.value });
      };
      function changeToolbarDisplayType(type) {
        inputToolbarDisplayType.value = inputToolbarDisplayType.value === type ? "none" : type;
        if (inputToolbarDisplayType.value !== "none" && isUniFrameWork) {
          uni.$emit("scroll-to-bottom");
        }
      }
      function scrollToLatestMessage() {
        var _a;
        (_a = messageListRef.value) == null ? void 0 : _a.scrollToLatestMessage();
      }
      function toggleMultipleSelectMode(visible) {
        isMultipleSelectMode.value = visible === void 0 ? !isMultipleSelectMode.value : visible;
      }
      function mergeForwardMessage() {
        var _a;
        (_a = messageListRef.value) == null ? void 0 : _a.mergeForwardMessage();
      }
      function oneByOneForwardMessage() {
        var _a;
        (_a = messageListRef.value) == null ? void 0 : _a.oneByOneForwardMessage();
      }
      function onCurrentConversationUpdate(conversation) {
        if ((conversation == null ? void 0 : conversation.operationType) > 0) {
          headerExtensionList.value = [];
          isNotInGroup.value = true;
          notInGroupReason.value = conversation == null ? void 0 : conversation.operationType;
        } else {
          isNotInGroup.value = false;
          notInGroupReason.value = void 0;
        }
      }
      function onCurrentConversationIDUpdate(conversationID) {
        if (currentConversationID.value === conversationID) {
          return;
        }
        isGroup.value = false;
        let conversationType = Kt.TYPES.CONV_C2C;
        if (conversationID.startsWith(Kt.TYPES.CONV_GROUP)) {
          conversationType = Kt.TYPES.CONV_GROUP;
          isGroup.value = true;
          groupID.value = conversationID.replace(Kt.TYPES.CONV_GROUP, "");
        }
        headerExtensionList.value = [];
        isMultipleSelectMode.value = false;
        ChatConfig.setChatType(conversationType);
        R$1.notifyEvent(
          E$1.TUIChat.EVENT.CHAT_STATE_CHANGED,
          E$1.TUIChat.EVENT_SUB_KEY.CHAT_OPENED,
          { groupID: groupID.value }
        );
        R$1.callService({
          serviceName: E$1.TUICustomerServicePlugin.SERVICE.NAME,
          method: E$1.TUICustomerServicePlugin.SERVICE.METHOD.ACTIVE_CONVERSATION,
          params: { conversationID }
        });
        if (ChatConfig.getChatType() === E$1.TUIChat.TYPE.ROOM) {
          if (ChatConfig.getFeatureConfig(
            E$1.TUIChat.FEATURE.InputVoice
          ) === true) {
            ChatConfig.setTheme("light");
            currentConversationID.value = "";
            return;
          }
        }
        if (ChatConfig.getChatType() === E$1.TUIChat.TYPE.GROUP) {
          headerExtensionList.value = R$1.getExtensionList(
            E$1.TUIChat.EXTENSION.CHAT_HEADER.EXT_ID
          );
        }
        zt.update(o$2.CUSTOM, "activeConversation", conversationID);
        currentConversationID.value = conversationID;
      }
      const __returned__ = { emits: emits2, groupID, isGroup, isNotInGroup, notInGroupReason, currentConversationID, isMultipleSelectMode, inputToolbarDisplayType, messageInputRef, messageListRef, headerExtensionList, featureConfig, isInputToolbarShow, leaveGroupReasonText, reset, closeChat, insertEmoji, handleEditor, handleGroup, changeToolbarDisplayType, scrollToLatestMessage, toggleMultipleSelectMode, mergeForwardMessage, oneByOneForwardMessage, onCurrentConversationUpdate, onCurrentConversationIDUpdate, get TUITranslateService() {
        return Jt;
      }, ChatHeader, MessageList, MessageInput, MultipleSelectPanel, Forward, MessageInputToolbar, get isPC() {
        return isPC;
      }, get isWeChat() {
        return isWeChat;
      }, get isUniFrameWork() {
        return isUniFrameWork;
      }, get isMobile() {
        return isMobile;
      }, get isApp() {
        return isApp$1;
      } };
      Object.defineProperty(__returned__, "__isScriptSetup", { enumerable: false, value: true });
      return __returned__;
    }
  });
  function _sfc_render$i(_ctx, _cache, $props, $setup, $data, $options) {
    return vue.openBlock(), vue.createElementBlock("div", { class: "chat" }, [
      vue.createElementVNode(
        "div",
        {
          class: vue.normalizeClass(["tui-chat", !$setup.isPC && "tui-chat-h5"])
        },
        [
          !$setup.currentConversationID ? (vue.openBlock(), vue.createElementBlock(
            "div",
            {
              key: 0,
              class: vue.normalizeClass(["tui-chat-default", !$setup.isPC && "tui-chat-h5-default"])
            },
            [
              vue.renderSlot(_ctx.$slots, "default", {}, void 0, true)
            ],
            2
            /* CLASS */
          )) : vue.createCommentVNode("v-if", true),
          $setup.currentConversationID ? (vue.openBlock(), vue.createElementBlock(
            "div",
            {
              key: 1,
              class: vue.normalizeClass(["tui-chat", !$setup.isPC && "tui-chat-h5"])
            },
            [
              vue.createVNode($setup["ChatHeader"], {
                class: vue.normalizeClass([
                  "tui-chat-header",
                  !$setup.isPC && "tui-chat-H5-header",
                  $setup.isUniFrameWork && "tui-chat-uniapp-header"
                ]),
                isGroup: $setup.isGroup,
                headerExtensionList: $setup.headerExtensionList,
                onCloseChat: $setup.closeChat,
                onOpenGroupManagement: $setup.handleGroup
              }, null, 8, ["class", "isGroup", "headerExtensionList"]),
              vue.createVNode($setup["Forward"], { onToggleMultipleSelectMode: $setup.toggleMultipleSelectMode }),
              vue.createVNode($setup["MessageList"], {
                ref: "messageListRef",
                class: vue.normalizeClass(["tui-chat-message-list", !$setup.isPC && "tui-chat-h5-message-list"]),
                isGroup: $setup.isGroup,
                groupID: $setup.groupID,
                isNotInGroup: $setup.isNotInGroup,
                isMultipleSelectMode: $setup.isMultipleSelectMode,
                onHandleEditor: $setup.handleEditor,
                onCloseInputToolBar: _cache[0] || (_cache[0] = () => $setup.changeToolbarDisplayType("none")),
                onToggleMultipleSelectMode: $setup.toggleMultipleSelectMode
              }, null, 8, ["class", "isGroup", "groupID", "isNotInGroup", "isMultipleSelectMode"]),
              $setup.isNotInGroup ? (vue.openBlock(), vue.createElementBlock(
                "div",
                {
                  key: 0,
                  class: vue.normalizeClass({
                    "tui-chat-leave-group": true,
                    "tui-chat-leave-group-mobile": $setup.isMobile
                  })
                },
                vue.toDisplayString($setup.leaveGroupReasonText),
                3
                /* TEXT, CLASS */
              )) : $setup.isMultipleSelectMode ? (vue.openBlock(), vue.createBlock($setup["MultipleSelectPanel"], {
                key: 1,
                onOneByOneForwardMessage: $setup.oneByOneForwardMessage,
                onMergeForwardMessage: $setup.mergeForwardMessage,
                onToggleMultipleSelectMode: $setup.toggleMultipleSelectMode
              })) : (vue.openBlock(), vue.createElementBlock(
                vue.Fragment,
                { key: 2 },
                [
                  $setup.isInputToolbarShow ? (vue.openBlock(), vue.createBlock($setup["MessageInputToolbar"], {
                    key: 0,
                    class: vue.normalizeClass([
                      "tui-chat-message-input-toolbar",
                      !$setup.isPC && "tui-chat-h5-message-input-toolbar",
                      $setup.isUniFrameWork && "tui-chat-uni-message-input-toolbar"
                    ]),
                    displayType: $setup.inputToolbarDisplayType,
                    onInsertEmoji: $setup.insertEmoji,
                    onChangeToolbarDisplayType: $setup.changeToolbarDisplayType,
                    onScrollToLatestMessage: $setup.scrollToLatestMessage
                  }, null, 8, ["class", "displayType"])) : vue.createCommentVNode("v-if", true),
                  vue.createVNode($setup["MessageInput"], {
                    ref: "messageInputRef",
                    class: vue.normalizeClass([
                      "tui-chat-message-input",
                      !$setup.isPC && "tui-chat-h5-message-input",
                      $setup.isUniFrameWork && "tui-chat-uni-message-input",
                      $setup.isWeChat && "tui-chat-wx-message-input"
                    ]),
                    enableAt: $setup.featureConfig.InputMention,
                    isMuted: false,
                    muteText: $setup.TUITranslateService.t("TUIChat.您已被管理员禁言"),
                    placeholder: $setup.TUITranslateService.t("TUIChat.请输入消息"),
                    inputToolbarDisplayType: $setup.inputToolbarDisplayType,
                    onChangeToolbarDisplayType: $setup.changeToolbarDisplayType
                  }, null, 8, ["class", "enableAt", "muteText", "placeholder", "inputToolbarDisplayType"])
                ],
                64
                /* STABLE_FRAGMENT */
              ))
            ],
            2
            /* CLASS */
          )) : vue.createCommentVNode("v-if", true),
          vue.createCommentVNode(" Group Management "),
          !$setup.isNotInGroup && !$setup.isApp && $setup.isUniFrameWork && $setup.isGroup && $setup.headerExtensionList.length > 0 ? (vue.openBlock(), vue.createElementBlock(
            "div",
            {
              key: 2,
              class: "group-profile",
              onClick: $setup.handleGroup
            },
            vue.toDisplayString($setup.headerExtensionList[0].text),
            1
            /* TEXT */
          )) : vue.createCommentVNode("v-if", true)
        ],
        2
        /* CLASS */
      )
    ]);
  }
  const TUIChat$3 = /* @__PURE__ */ _export_sfc(_sfc_main$j, [["render", _sfc_render$i], ["__scopeId", "data-v-04dfedea"], ["__file", "C:/Users/Administrator/Desktop/Project Folder/ZXHand/ZXHandwritting_APP_uniapp/TUIKit/components/TUIChat/index.vue"]]);
  const STORAGE_KEY = "token";
  function removeTokenStorage() {
    return new Promise((resolve, reject) => {
      wx.removeStorage({
        key: STORAGE_KEY,
        success: resolve,
        fail: reject
      });
    });
  }
  const _sfc_main$i = /* @__PURE__ */ vue.defineComponent({
    __name: "profile",
    props: {
      displayType: {
        type: String,
        default: "all"
        // "profile"/"setting"/"all"
      },
      showSetting: {
        type: Boolean,
        default: false
      }
    },
    setup(__props, { expose: __expose }) {
      __expose();
      const props2 = __props;
      const settingDomRef = vue.ref();
      const userProfile = vue.ref({});
      const settingList = vue.ref({
        editProfile: {
          value: "editProfile",
          label: "编辑资料（暂未开放）",
          onClick: (item) => {
            formatAppLog("warn", "at pages/views/profile.vue:145", "编辑资料功能努力开发中，敬请期待");
          }
        },
        allowType: {
          value: "allowType",
          label: "加我为好友时",
          selectedChild: "",
          childrenShowType: "bottomPopup",
          showChildren: false,
          onClick: (item) => {
            if (!isPC) {
              item.showChildren = true;
            }
          },
          children: {
            [Kt.TYPES.ALLOW_TYPE_ALLOW_ANY]: {
              value: Kt.TYPES.ALLOW_TYPE_ALLOW_ANY,
              label: "同意任何用户加好友",
              onClick: (item) => {
                updateMyProfile({ allowType: item.value });
              }
            },
            [Kt.TYPES.ALLOW_TYPE_NEED_CONFIRM]: {
              value: Kt.TYPES.ALLOW_TYPE_NEED_CONFIRM,
              label: "需要验证",
              onClick: (item) => {
                updateMyProfile({ allowType: item.value });
              }
            },
            [Kt.TYPES.ALLOW_TYPE_DENY_ANY]: {
              value: Kt.TYPES.ALLOW_TYPE_DENY_ANY,
              label: "拒绝任何人加好友",
              onClick: (item) => {
                updateMyProfile({ allowType: item.value });
              }
            }
          }
        },
        displayMessageReadReceipt: {
          value: "displayMessageReadReceipt",
          label: "消息阅读状态",
          selectedChild: "userLevelReadReceiptOpen",
          childrenShowType: "bottomPopup",
          showChildren: false,
          onClick(item) {
            if (!isPC) {
              item.showChildren = true;
            }
          },
          children: {
            userLevelReadReceiptOpen: {
              value: "userLevelReadReceiptOpen",
              label: "开启",
              onClick() {
                switchEnabelUserLevelReadRecript(true);
              }
            },
            userLevelReadReceiptClose: {
              value: "userLevelReadReceiptClose",
              label: "关闭",
              onClick() {
                switchEnabelUserLevelReadRecript(false);
              }
            }
          }
        },
        displayOnlineStatus: {
          value: "displayOnlineStatus",
          label: "显示在线状态",
          selectedChild: "userLevelOnlineStatusOpen",
          childrenShowType: "bottomPopup",
          showChildren: false,
          onClick(item) {
            if (!isPC) {
              item.showChildren = true;
            }
          },
          children: {
            userLevelOnlineStatusOpen: {
              value: "userLevelOnlineStatusOpen",
              label: "开启",
              onClick() {
                switchUserLevelOnlineStatus(true);
              }
            },
            userLevelOnlineStatusClose: {
              value: "userLevelOnlineStatusClose",
              label: "关闭",
              onClick() {
                switchUserLevelOnlineStatus(false);
              }
            }
          }
        },
        translateLanguage: {
          value: "translateLanguage",
          label: "翻译语言",
          selectedChild: "zh",
          childrenShowType: "bottomPopup",
          showChildren: false,
          onClick(item) {
            if (!isPC) {
              item.showChildren = true;
            }
          },
          children: {
            zh: {
              value: "zh",
              label: "中文",
              onClick() {
                switchTranslationTargetLanguage("zh");
              }
            },
            en: {
              value: "en",
              label: "English",
              onClick() {
                switchTranslationTargetLanguage("en");
              }
            },
            jp: {
              value: "jp",
              label: "日本語",
              onClick() {
                switchTranslationTargetLanguage("jp");
              }
            },
            kr: {
              value: "kr",
              label: "한국인",
              onClick() {
                switchTranslationTargetLanguage("kr");
              }
            }
          }
        },
        exit: {
          value: "exit",
          label: "退出登录",
          onClick: (item) => {
            A.logout().then(() => {
              uni.removeStorage({
                key: "userInfo"
              });
              removeTokenStorage();
              i == null ? void 0 : i.reLaunch({
                url: "/pages/views/login"
              });
            });
          }
        }
      });
      const handleSettingListItemOnClick = (item) => {
        if ((item == null ? void 0 : item.onClick) && typeof (item == null ? void 0 : item.onClick) === "function") {
          item.onClick(item);
        }
      };
      const bottomPopupOnClose = (item) => {
        item.showChildren = false;
      };
      const generateLabel = (item) => {
        var _a;
        return (_a = item == null ? void 0 : item.children[item == null ? void 0 : item.selectedChild]) == null ? void 0 : _a.label;
      };
      const updateMyProfile = (props22) => {
        Xt.updateMyProfile(props22).then((res) => {
          Toast({
            message: "更新用户资料成功",
            type: TOAST_TYPE.SUCCESS,
            duration: 0
          });
          if ("allowType" in props22) {
            settingList.value["allowType"].showChildren = false;
          }
        }).catch((err) => {
          formatAppLog("warn", "at pages/views/profile.vue:325", "更新用户资料失败", err);
          Toast({
            message: "更新用户资料失败",
            type: TOAST_TYPE.ERROR,
            duration: 0
          });
        });
      };
      zt.watch(o$2.USER, {
        userProfile: (userProfileData) => {
          var _a, _b;
          userProfile.value = userProfileData;
          if ((_a = userProfile == null ? void 0 : userProfile.value) == null ? void 0 : _a.allowType) {
            settingList.value.allowType.selectedChild = (_b = userProfile == null ? void 0 : userProfile.value) == null ? void 0 : _b.allowType;
          }
        },
        displayMessageReadReceipt(isDisplay) {
          settingList.value.displayMessageReadReceipt.selectedChild = isDisplay ? "userLevelReadReceiptOpen" : "userLevelReadReceiptClose";
        },
        displayOnlineStatus(isOnlineStatusDisplay) {
          settingList.value.displayOnlineStatus.selectedChild = isOnlineStatusDisplay ? "userLevelOnlineStatusOpen" : "userLevelOnlineStatusClose";
        }
      });
      vue.onMounted(() => {
        Xt.getUserProfile().then((res) => {
          userProfile.value = res.data;
        });
      });
      onHide(() => {
        var _a;
        for (const settingItemKey in settingList.value) {
          if ((_a = settingList == null ? void 0 : settingList.value[settingItemKey]) == null ? void 0 : _a.hasOwnProperty("showChildren")) {
            settingList.value[settingItemKey].showChildren = false;
          }
        }
      });
      function switchEnabelUserLevelReadRecript(status) {
        zt.update(o$2.USER, "displayMessageReadReceipt", status);
        settingList.value["displayMessageReadReceipt"].showChildren = false;
      }
      function switchUserLevelOnlineStatus(status) {
        Xt.switchUserStatus({ displayOnlineStatus: status });
        settingList.value["displayOnlineStatus"].showChildren = false;
      }
      function switchTranslationTargetLanguage(lang) {
        translator.clear();
        Zt.setTranslationLanguage(lang);
        settingList.value.translateLanguage.selectedChild = lang;
        settingList.value.translateLanguage.showChildren = false;
      }
      const __returned__ = { props: props2, settingDomRef, userProfile, settingList, handleSettingListItemOnClick, bottomPopupOnClose, generateLabel, updateMyProfile, switchEnabelUserLevelReadRecript, switchUserLevelOnlineStatus, switchTranslationTargetLanguage, get isPC() {
        return isPC;
      }, BottomPopup, Icon: Icon$1, get rightArrowIcon() {
        return rightIcon;
      } };
      Object.defineProperty(__returned__, "__isScriptSetup", { enumerable: false, value: true });
      return __returned__;
    }
  });
  function _sfc_render$h(_ctx, _cache, $props, $setup, $data, $options) {
    return vue.openBlock(), vue.createElementBlock(
      "div",
      {
        class: vue.normalizeClass(["TUI-profile", !$setup.isPC && "TUI-profile-h5"])
      },
      [
        $props.displayType !== "setting" ? (vue.openBlock(), vue.createElementBlock(
          "div",
          {
            key: 0,
            class: vue.normalizeClass(["TUI-profile-basic", !$setup.isPC && "TUI-profile-h5-basic"])
          },
          [
            vue.createElementVNode("img", {
              class: vue.normalizeClass([
                "TUI-profile-basic-avatar",
                !$setup.isPC && "TUI-profile-h5-basic-avatar"
              ]),
              src: $setup.userProfile.avatar || "https://web.sdk.qcloud.com/component/TUIKit/assets/avatar_21.png"
            }, null, 10, ["src"]),
            vue.createElementVNode(
              "div",
              {
                class: vue.normalizeClass([
                  "TUI-profile-basic-info",
                  !$setup.isPC && "TUI-profile-h5-basic-info"
                ])
              },
              [
                vue.createElementVNode(
                  "div",
                  {
                    class: vue.normalizeClass([
                      "TUI-profile-basic-info-nick",
                      !$setup.isPC && "TUI-profile-h5-basic-info-nick"
                    ])
                  },
                  vue.toDisplayString($setup.userProfile.nick || "-"),
                  3
                  /* TEXT, CLASS */
                ),
                vue.createElementVNode(
                  "div",
                  {
                    class: vue.normalizeClass([
                      "TUI-profile-basic-info-id",
                      !$setup.isPC && "TUI-profile-h5-basic-info-id"
                    ])
                  },
                  [
                    vue.createElementVNode(
                      "label",
                      {
                        class: vue.normalizeClass([
                          "TUI-profile-basic-info-id-label",
                          !$setup.isPC && "TUI-profile-h5-basic-info-id-label"
                        ])
                      },
                      vue.toDisplayString("用户ID") + ":",
                      2
                      /* CLASS */
                    ),
                    vue.createElementVNode(
                      "div",
                      {
                        class: vue.normalizeClass([
                          "TUI-profile-basic-info-id-value",
                          !$setup.isPC && "TUI-profile-h5-basic-info-id-value"
                        ])
                      },
                      vue.toDisplayString($setup.userProfile.userID),
                      3
                      /* TEXT, CLASS */
                    )
                  ],
                  2
                  /* CLASS */
                )
              ],
              2
              /* CLASS */
            )
          ],
          2
          /* CLASS */
        )) : vue.createCommentVNode("v-if", true),
        $props.displayType !== "profile" && (!$setup.isPC || $props.showSetting) ? (vue.openBlock(), vue.createElementBlock(
          "div",
          {
            key: 1,
            ref: "settingDomRef",
            class: vue.normalizeClass(["TUI-profile-setting", !$setup.isPC && "TUI-profile-h5-setting"])
          },
          [
            (vue.openBlock(true), vue.createElementBlock(
              vue.Fragment,
              null,
              vue.renderList($setup.settingList, (item, key) => {
                return vue.openBlock(), vue.createElementBlock(
                  "div",
                  {
                    key,
                    class: vue.normalizeClass([
                      "TUI-profile-setting-item",
                      !$setup.isPC && "TUI-profile-h5-setting-item",
                      item.value === "exit" && "TUI-profile-h5-setting-item-exit"
                    ])
                  },
                  [
                    vue.createElementVNode("div", {
                      class: vue.normalizeClass([
                        "TUI-profile-setting-item-label",
                        !$setup.isPC && "TUI-profile-h5-setting-item-label"
                      ]),
                      onClick: ($event) => $setup.handleSettingListItemOnClick(item)
                    }, [
                      vue.createElementVNode("div", {
                        class: vue.normalizeClass(["label-left"])
                      }, [
                        vue.createElementVNode(
                          "div",
                          {
                            class: vue.normalizeClass(["label-title"])
                          },
                          vue.toDisplayString(item.label),
                          1
                          /* TEXT */
                        ),
                        item.children && !$setup.isPC && item.childrenShowType === "switch" ? (vue.openBlock(), vue.createElementBlock(
                          "div",
                          {
                            key: 0,
                            class: vue.normalizeClass(["label-desc"])
                          },
                          vue.toDisplayString(item.value),
                          1
                          /* TEXT */
                        )) : vue.createCommentVNode("v-if", true)
                      ]),
                      vue.createElementVNode("div", {
                        class: vue.normalizeClass(["label-right"])
                      }, [
                        !$setup.isPC && item.children && item.selectedChild && item.childrenShowType === "bottomPopup" ? (vue.openBlock(), vue.createElementBlock(
                          "div",
                          {
                            key: 0,
                            class: vue.normalizeClass([
                              "TUI-profile-setting-item-label-value",
                              !$setup.isPC && "TUI-profile-h5-setting-item-label-value"
                            ])
                          },
                          vue.toDisplayString($setup.generateLabel(item)),
                          3
                          /* TEXT, CLASS */
                        )) : vue.createCommentVNode("v-if", true),
                        item.children ? (vue.openBlock(), vue.createBlock($setup["Icon"], {
                          key: 1,
                          file: $setup.rightArrowIcon,
                          width: "14px",
                          height: "14px",
                          style: { "width": "14px", "height": "14px", "display": "flex" }
                        }, null, 8, ["file"])) : vue.createCommentVNode("v-if", true)
                      ])
                    ], 10, ["onClick"]),
                    vue.createCommentVNode(" 移动端 children显示，分多个类型 "),
                    item.children && !$setup.isPC && item.childrenShowType === "bottomPopup" ? (vue.openBlock(), vue.createBlock($setup["BottomPopup"], {
                      key: 0,
                      show: item.showChildren,
                      onOnClose: ($event) => $setup.bottomPopupOnClose(item)
                    }, {
                      default: vue.withCtx(() => [
                        (vue.openBlock(true), vue.createElementBlock(
                          vue.Fragment,
                          null,
                          vue.renderList(item.children, (child) => {
                            return vue.openBlock(), vue.createElementBlock("div", {
                              class: vue.normalizeClass([
                                "TUI-profile-setting-item-bottom-popup",
                                !$setup.isPC && "TUI-profile-h5-setting-item-bottom-popup"
                              ]),
                              onClick: ($event) => $setup.handleSettingListItemOnClick(child)
                            }, vue.toDisplayString(child.label), 11, ["onClick"]);
                          }),
                          256
                          /* UNKEYED_FRAGMENT */
                        ))
                      ]),
                      _: 2
                      /* DYNAMIC */
                    }, 1032, ["show", "onOnClose"])) : vue.createCommentVNode("v-if", true)
                  ],
                  2
                  /* CLASS */
                );
              }),
              128
              /* KEYED_FRAGMENT */
            ))
          ],
          2
          /* CLASS */
        )) : vue.createCommentVNode("v-if", true)
      ],
      2
      /* CLASS */
    );
  }
  const PagesViewsProfile = /* @__PURE__ */ _export_sfc(_sfc_main$i, [["render", _sfc_render$h], ["__scopeId", "data-v-107270be"], ["__file", "C:/Users/Administrator/Desktop/Project Folder/ZXHand/ZXHandwritting_APP_uniapp/pages/views/profile.vue"]]);
  const _sfc_main$h = /* @__PURE__ */ vue.defineComponent({
    __name: "video-play",
    setup(__props, { expose: __expose }) {
      __expose();
      const videoData = vue.ref();
      const isShow = vue.ref(false);
      const videoContext = vue.ref();
      onLoad((option) => {
        const decodedUrl = decodeURIComponent(option == null ? void 0 : option.videoUrl);
        videoData.value = decodedUrl;
        isShow.value = true;
      });
      onReady(() => {
        isShow.value = true;
        videoContext.value = i.createVideoContext("videoEle");
      });
      const __returned__ = { videoData, isShow, videoContext };
      Object.defineProperty(__returned__, "__isScriptSetup", { enumerable: false, value: true });
      return __returned__;
    }
  });
  function _sfc_render$g(_ctx, _cache, $props, $setup, $data, $options) {
    return vue.openBlock(), vue.createElementBlock("div", { class: "dialog-video" }, [
      $setup.isShow ? (vue.openBlock(), vue.createElementBlock("video", {
        key: 0,
        id: "videoEle",
        class: "video-box",
        src: $setup.videoData,
        controls: "",
        autoplay: ""
      }, null, 8, ["src"])) : vue.createCommentVNode("v-if", true)
    ]);
  }
  const TUIKitComponentsTUIChatVideoPlay = /* @__PURE__ */ _export_sfc(_sfc_main$h, [["render", _sfc_render$g], ["__scopeId", "data-v-e40b9248"], ["__file", "C:/Users/Administrator/Desktop/Project Folder/ZXHand/ZXHandwritting_APP_uniapp/TUIKit/components/TUIChat/video-play.vue"]]);
  const _sfc_main$g = /* @__PURE__ */ vue.defineComponent({
    __name: "web-view",
    setup(__props, { expose: __expose }) {
      __expose();
      const url2 = vue.ref("");
      onLoad((option) => {
        url2.value = option && option.url;
      });
      const __returned__ = { url: url2 };
      Object.defineProperty(__returned__, "__isScriptSetup", { enumerable: false, value: true });
      return __returned__;
    }
  });
  function _sfc_render$f(_ctx, _cache, $props, $setup, $data, $options) {
    return vue.openBlock(), vue.createElementBlock("web-view", { src: $setup.url }, null, 8, ["src"]);
  }
  const TUIKitComponentsTUIChatWebView = /* @__PURE__ */ _export_sfc(_sfc_main$g, [["render", _sfc_render$f], ["__file", "C:/Users/Administrator/Desktop/Project Folder/ZXHand/ZXHandwritting_APP_uniapp/TUIKit/components/TUIChat/web-view.vue"]]);
  const groupIntroConfig = [
    {
      icon: "https://web.sdk.qcloud.com/im/assets/images/Public.svg",
      label: "陌生人社交群（Public）",
      type: Kt.TYPES.GRP_PUBLIC,
      detail: "类似 QQ 群，创建后群主可以指定群管理员，用户搜索群 ID 发起加群申请后，需要群主或管理员审批通过才能入群。详见",
      src: "产品文档"
    },
    {
      icon: "https://web.sdk.qcloud.com/im/assets/images/Meeting.svg",
      label: "临时会议群（Meeting）",
      type: Kt.TYPES.GRP_MEETING,
      detail: "创建后可以随意进出，且支持查看入群前消息；适合用于音视频会议场景、在线教育场景等与实时音视频产品结合的场景。详见",
      src: "产品文档"
    },
    {
      icon: "https://web.sdk.qcloud.com/im/assets/images/Work.svg",
      label: "好友工作群（Work）",
      type: Kt.TYPES.GRP_WORK,
      detail: "类似普通微信群，创建后仅支持已在群内的好友邀请加群，且无需被邀请方同意或群主审批。详见",
      src: "产品文档"
    },
    {
      icon: "https://web.sdk.qcloud.com/im/assets/images/AVChatroom.svg",
      label: "直播群（AVChatroom）",
      type: Kt.TYPES.GRP_AVCHATROOM,
      detail: "创建后可以随意进出，没有群成员数量上限，但不支持历史消息存储；适合与直播产品结合，用于弹幕聊天场景。详见",
      src: "产品文档"
    },
    {
      icon: "https://web.sdk.qcloud.com/im/assets/images/Community.png",
      label: "社群（Community）",
      type: Kt.TYPES.GRP_COMMUNITY,
      detail: "创建后可以随意进出，最多支持100000人，支持历史消息存储，用户搜索群 ID 发起加群申请后，无需管理员审批即可进群。详见",
      src: "产品文档"
    }
  ];
  const findGroupIntroConfig = (type) => {
    return groupIntroConfig.filter((item) => {
      return item.type === type;
    })[0];
  };
  const _sfc_main$f = /* @__PURE__ */ vue.defineComponent({
    __name: "index",
    props: {
      groupType: {
        type: String,
        default: ""
      }
    },
    emits: ["selectType"],
    setup(__props, { expose: __expose, emit: __emit }) {
      __expose();
      const props2 = __props;
      const type = groupIntroConfig;
      const selectType = vue.ref();
      const emit = __emit;
      vue.watchEffect(() => {
        selectType.value = props2.groupType;
      });
      const selected = (item) => {
        selectType.value = item.type;
        emit("selectType", item.type);
      };
      const openUrl = (link) => {
        if (!isUniFrameWork) {
          i == null ? void 0 : i.open(link);
        }
      };
      const __returned__ = { props: props2, type, selectType, emit, selected, openUrl, get TUITranslateService() {
        return Jt;
      }, get documentLink() {
        return Link;
      }, Icon: Icon$1, get selectedIcon() {
        return selectedIcon;
      } };
      Object.defineProperty(__returned__, "__isScriptSetup", { enumerable: false, value: true });
      return __returned__;
    }
  });
  function _sfc_render$e(_ctx, _cache, $props, $setup, $data, $options) {
    return vue.openBlock(), vue.createElementBlock("ul", { class: "group-introduction-list select" }, [
      (vue.openBlock(true), vue.createElementBlock(
        vue.Fragment,
        null,
        vue.renderList($setup.type, (item, index2) => {
          return vue.openBlock(), vue.createElementBlock("li", {
            key: index2,
            class: vue.normalizeClass(["select-item", [$setup.selectType === item.type && "selected"]]),
            onClick: ($event) => $setup.selected(item)
          }, [
            vue.createElementVNode("main", { class: "select-item-type" }, [
              vue.createElementVNode("div", { class: "select-item-header" }, [
                vue.createElementVNode("aside", { class: "left" }, [
                  vue.createVNode($setup["Icon"], {
                    class: "icon",
                    file: item.icon
                  }, null, 8, ["file"]),
                  vue.createElementVNode(
                    "span",
                    { class: "select-item-label" },
                    vue.toDisplayString($setup.TUITranslateService.t(`TUIGroup.${item.label}`)),
                    1
                    /* TEXT */
                  )
                ]),
                $setup.selectType === item.type ? (vue.openBlock(), vue.createBlock($setup["Icon"], {
                  key: 0,
                  file: $setup.selectedIcon
                }, null, 8, ["file"])) : vue.createCommentVNode("v-if", true)
              ]),
              vue.createElementVNode(
                "span",
                { class: "select-item-detail" },
                vue.toDisplayString($setup.TUITranslateService.t(`TUIGroup.${item.detail}`)),
                1
                /* TEXT */
              ),
              vue.createElementVNode("a", {
                class: "link",
                href: $setup.documentLink.product.url,
                target: "_blank",
                onClick: _cache[0] || (_cache[0] = ($event) => $setup.openUrl($setup.documentLink.product.url))
              }, vue.toDisplayString($setup.TUITranslateService.t(`TUIGroup.${item.src}`)), 9, ["href"])
            ])
          ], 10, ["onClick"]);
        }),
        128
        /* KEYED_FRAGMENT */
      ))
    ]);
  }
  const GroupIntroduction = /* @__PURE__ */ _export_sfc(_sfc_main$f, [["render", _sfc_render$e], ["__scopeId", "data-v-ec1da4f5"], ["__file", "C:/Users/Administrator/Desktop/Project Folder/ZXHand/ZXHandwritting_APP_uniapp/TUIKit/components/TUIGroup/create-group/group-introduction/index.vue"]]);
  const settingSVG = "/assets/setting.a15e5daf.svg";
  class TUIGroupServer {
    constructor() {
      R$1.registerService(E$1.TUIGroup.SERVICE.NAME, this);
      R$1.registerExtension(E$1.TUIChat.EXTENSION.CHAT_HEADER.EXT_ID, this);
      this.onCallParamsMap = /* @__PURE__ */ new Map();
      this.onCallCallbackMap = /* @__PURE__ */ new Map();
      this.constants = E$1;
    }
    static getInstance() {
      if (!TUIGroupServer.instance) {
        TUIGroupServer.instance = new TUIGroupServer();
      }
      return TUIGroupServer.instance;
    }
    getOnCallParams(method) {
      return this.onCallParamsMap.get(method);
    }
    getOnCallCallback(method) {
      return this.onCallCallbackMap.get(method);
    }
    async onCall(method, params, callback) {
      this.onCallParamsMap.set(method, params);
      this.onCallCallbackMap.set(method, callback);
      switch (method) {
        case E$1.TUIGroup.SERVICE.METHOD.CREATE_GROUP:
          zt.update(o$2.GRP, "isShowCreateComponent", true);
          isUniFrameWork && (i == null ? void 0 : i.reLaunch({
            url: "/TUIKit/components/TUIGroup/index"
          }));
          break;
        case E$1.TUIGroup.SERVICE.METHOD.OPEN_GROUP_MANAGEMENT:
          Qt.switchGroup(params.groupID);
          zt.update(o$2.GRP, "isShowManageComponent", true);
          isUniFrameWork && (i == null ? void 0 : i.navigateTo({
            url: "/TUIKit/components/TUIGroup/index"
          }));
          break;
        case E$1.TUIGroup.SERVICE.METHOD.SELECT_GROUP_MEMBER:
          Qt.switchGroup(params.groupID);
          zt.update(o$2.GRP, "isShowSelectComponent", true);
          isUniFrameWork && (i == null ? void 0 : i.navigateTo({
            url: "/TUIKit/components/TUIGroup/index"
          }));
          break;
      }
    }
    onGetExtension(extensionID) {
      const list = [];
      switch (extensionID) {
        case E$1.TUIChat.EXTENSION.CHAT_HEADER.EXT_ID:
          list.push({
            weight: 100,
            icon: settingSVG,
            text: "更多",
            data: {},
            listener: {
              onClicked: this.groupManage.bind(this)
            }
          });
          break;
      }
      return list;
    }
    groupManage(params) {
      R$1.callService({
        serviceName: E$1.TUIGroup.SERVICE.NAME,
        method: E$1.TUIGroup.SERVICE.METHOD.OPEN_GROUP_MANAGEMENT,
        params,
        callback: () => {
          isUniFrameWork && (i == null ? void 0 : i.navigateBack());
        }
      });
    }
  }
  const _sfc_main$e = /* @__PURE__ */ vue.defineComponent({
    __name: "index",
    setup(__props, { expose: __expose }) {
      __expose();
      const TUIGroupServer$1 = TUIGroupServer.getInstance();
      const TUIConstants = TUIGroupServer$1.constants;
      const groupInfo = vue.reactive({
        profile: {
          groupID: "",
          name: "",
          type: groupIntroConfig[0].type,
          avatar: groupIntroConfig[0].icon,
          introduction: "",
          notification: "",
          // joinOption: '',
          memberList: [],
          isSupportTopic: false
        },
        groupConfig: {
          title: "",
          value: "",
          key: "",
          type: "",
          placeholder: ""
        },
        isEdit: false
      });
      vue.watchEffect(() => {
        const params = TUIGroupServer$1.getOnCallParams(TUIConstants.TUIGroup.SERVICE.METHOD.CREATE_GROUP);
        groupInfo.profile.memberList = params.memberList;
        groupInfo.groupConfig.title = params.title;
      });
      const groupTypeDetail = vue.computed(() => {
        return findGroupIntroConfig(groupInfo.profile.type);
      });
      const headerTitle = vue.computed(() => {
        let name = "添加群聊";
        if (groupInfo.isEdit) {
          name = groupInfo.groupConfig.title;
        }
        return Jt.t(`TUIGroup.${name}`);
      });
      const createInfo = vue.computed(() => {
        const groupNameInput = {
          name: Jt.t("TUIGroup.群名称"),
          key: "name",
          placeholder: Jt.t("TUIGroup.请输入群名称")
        };
        const groupIDInput = {
          name: `${Jt.t("TUIGroup.群ID")}(${Jt.t("TUIGroup.选填")})`,
          key: "groupID",
          placeholder: Jt.t("TUIGroup.请输入群ID")
        };
        return groupInfo.profile.type === Kt.TYPES.GRP_COMMUNITY ? [groupNameInput] : [groupNameInput, groupIDInput];
      });
      const submitDisabledStatus = vue.computed(() => {
        return groupInfo.profile.name === "" && !groupInfo.isEdit;
      });
      const selected = (type) => {
        if (groupInfo.profile.type !== type) {
          groupInfo.profile.type = type;
          groupInfo.profile.avatar = findGroupIntroConfig(type).icon;
          if (groupInfo.isEdit) {
            groupInfo.groupConfig.value = type;
          }
        }
      };
      const createGroup = async (options) => {
        try {
          options.memberList = options.memberList.map((item) => {
            return { userID: item.userID };
          });
          if (options.type === Kt.TYPES.GRP_COMMUNITY) {
            delete options.groupID;
          }
          const res = await Qt.createGroup(options);
          const { type } = res.data.group;
          if (type === Kt.TYPES.GRP_AVCHATROOM) {
            await Qt.joinGroup({
              groupID: res.data.group.groupID,
              applyMessage: ""
            });
          }
          handleCompleteCreate(res.data.group);
          Toast({
            message: Jt.t("TUIGroup.群组创建成功"),
            type: TOAST_TYPE.SUCCESS
          });
        } catch (err) {
          Toast({
            message: err.message,
            type: TOAST_TYPE.ERROR
          });
        }
      };
      const submit = () => {
        const { profile } = groupInfo;
        if (groupInfo.isEdit) {
          groupInfo.profile[groupInfo.groupConfig.key] = groupInfo.groupConfig.value;
          return groupInfo.isEdit = !groupInfo.isEdit;
        } else {
          createGroup(profile);
        }
      };
      const closeCreated = () => {
        if (groupInfo.isEdit) {
          return groupInfo.isEdit = !groupInfo.isEdit;
        }
        handleCompleteCreate(null);
      };
      const edit = (label) => {
        groupInfo.isEdit = !groupInfo.isEdit;
        groupInfo.groupConfig.key = label;
        groupInfo.groupConfig.value = groupInfo.profile[label];
        switch (label) {
          case "name":
            groupInfo.groupConfig.title = "设置群名称";
            groupInfo.groupConfig.placeholder = "请输入群名称";
            groupInfo.groupConfig.type = "input";
            break;
          case "groupID":
            groupInfo.groupConfig.title = "设置群ID";
            groupInfo.groupConfig.placeholder = "请输入群ID";
            groupInfo.groupConfig.type = "input";
            break;
          case "type":
            groupInfo.groupConfig.title = "选择群类型";
            groupInfo.groupConfig.type = "select";
            break;
        }
      };
      const handleCompleteCreate = (group) => {
        zt.update(o$2.GRP, "isShowCreateComponent", false);
        const callback = TUIGroupServer$1.getOnCallCallback(TUIConstants.TUIGroup.SERVICE.METHOD.CREATE_GROUP);
        callback && callback(group);
      };
      const __returned__ = { TUIGroupServer: TUIGroupServer$1, TUIConstants, groupInfo, groupTypeDetail, headerTitle, createInfo, submitDisabledStatus, selected, createGroup, submit, closeCreated, edit, handleCompleteCreate, get TUITranslateService() {
        return Jt;
      }, get documentLink() {
        return Link;
      }, get isPC() {
        return isPC;
      }, Icon: Icon$1, get backIcon() {
        return backSVG;
      }, get closeIcon() {
        return closeIcon;
      }, get rightIcon() {
        return rightIcon;
      }, GroupIntroduction, Dialog, Avatar };
      Object.defineProperty(__returned__, "__isScriptSetup", { enumerable: false, value: true });
      return __returned__;
    }
  });
  function _sfc_render$d(_ctx, _cache, $props, $setup, $data, $options) {
    return vue.openBlock(), vue.createBlock($setup["Dialog"], {
      show: true,
      isH5: !$setup.isPC,
      isHeaderShow: false,
      isFooterShow: false,
      background: false,
      "onUpdate:show": $setup.closeCreated
    }, {
      default: vue.withCtx(() => [
        vue.createElementVNode(
          "div",
          {
            class: vue.normalizeClass(["group", [!$setup.isPC ? "group-h5" : ""]])
          },
          [
            vue.createElementVNode("div", { class: "group-box" }, [
              vue.createElementVNode("header", { class: "group-box-header" }, [
                vue.createVNode($setup["Icon"], {
                  file: $setup.isPC ? $setup.closeIcon : $setup.backIcon,
                  class: "icon-close",
                  size: "16px",
                  onOnClick: $setup.closeCreated
                }, null, 8, ["file"]),
                vue.createElementVNode(
                  "h1",
                  { class: "group-box-header-title" },
                  vue.toDisplayString($setup.headerTitle),
                  1
                  /* TEXT */
                )
              ]),
              !$setup.groupInfo.isEdit ? (vue.openBlock(), vue.createElementBlock("ul", {
                key: 0,
                class: "group-list"
              }, [
                vue.createElementVNode("li", { class: "group-list-item" }, [
                  vue.createElementVNode(
                    "label",
                    { class: "group-list-item-label" },
                    vue.toDisplayString($setup.TUITranslateService.t("TUIGroup.群头像")),
                    1
                    /* TEXT */
                  ),
                  vue.createVNode($setup["Avatar"], {
                    url: $setup.groupInfo.profile.avatar
                  }, null, 8, ["url"])
                ]),
                vue.createElementVNode("ul", null, [
                  (vue.openBlock(true), vue.createElementBlock(
                    vue.Fragment,
                    null,
                    vue.renderList($setup.createInfo, (item, index2) => {
                      return vue.openBlock(), vue.createElementBlock("li", {
                        key: index2,
                        class: "group-list-item"
                      }, [
                        vue.createElementVNode(
                          "label",
                          { class: "group-list-item-label" },
                          vue.toDisplayString(item.name),
                          1
                          /* TEXT */
                        ),
                        $setup.isPC ? vue.withDirectives((vue.openBlock(), vue.createElementBlock("input", {
                          key: 0,
                          "onUpdate:modelValue": ($event) => $setup.groupInfo.profile[item.key] = $event,
                          type: "text",
                          placeholder: item.placeholder
                        }, null, 8, ["onUpdate:modelValue", "placeholder"])), [
                          [vue.vModelText, $setup.groupInfo.profile[item.key]]
                        ]) : (vue.openBlock(), vue.createElementBlock("span", {
                          key: 1,
                          class: "group-h5-list-item-content",
                          onClick: ($event) => $setup.edit(item.key)
                        }, [
                          vue.createElementVNode(
                            "p",
                            { class: "content" },
                            vue.toDisplayString($setup.groupInfo.profile[item.key]),
                            1
                            /* TEXT */
                          ),
                          vue.createVNode($setup["Icon"], { file: $setup.rightIcon }, null, 8, ["file"])
                        ], 8, ["onClick"]))
                      ]);
                    }),
                    128
                    /* KEYED_FRAGMENT */
                  )),
                  vue.createElementVNode("li", { class: "group-list-introduction" }, [
                    vue.createElementVNode("div", { class: "group-list-item" }, [
                      vue.createElementVNode(
                        "label",
                        { class: "group-list-item-label" },
                        vue.toDisplayString($setup.TUITranslateService.t("TUIGroup.群类型")),
                        1
                        /* TEXT */
                      ),
                      $setup.isPC ? (vue.openBlock(), vue.createBlock($setup["GroupIntroduction"], {
                        key: 0,
                        groupType: $setup.groupInfo.profile.type,
                        onSelectType: $setup.selected
                      }, null, 8, ["groupType"])) : (vue.openBlock(), vue.createElementBlock("span", {
                        key: 1,
                        class: "group-h5-list-item-content",
                        onClick: _cache[0] || (_cache[0] = ($event) => $setup.edit("type"))
                      }, [
                        vue.createElementVNode(
                          "p",
                          { class: "content" },
                          vue.toDisplayString($setup.groupTypeDetail.label),
                          1
                          /* TEXT */
                        ),
                        vue.createVNode($setup["Icon"], { file: $setup.rightIcon }, null, 8, ["file"])
                      ]))
                    ]),
                    !$setup.isPC ? (vue.openBlock(), vue.createElementBlock("article", {
                      key: 0,
                      class: "group-h5-list-item-introduction"
                    }, [
                      vue.createElementVNode(
                        "label",
                        { class: "introduction-name" },
                        vue.toDisplayString($setup.groupTypeDetail.label) + "：",
                        1
                        /* TEXT */
                      ),
                      vue.createElementVNode(
                        "span",
                        { class: "introduction-detail" },
                        vue.toDisplayString($setup.groupTypeDetail.detail),
                        1
                        /* TEXT */
                      ),
                      vue.createElementVNode("a", {
                        href: $setup.documentLink.product.url,
                        target: "view_window"
                      }, vue.toDisplayString($setup.TUITranslateService.t(`TUIGroup.${$setup.groupTypeDetail.src}`)), 9, ["href"])
                    ])) : vue.createCommentVNode("v-if", true)
                  ])
                ])
              ])) : (vue.openBlock(), vue.createElementBlock(
                vue.Fragment,
                { key: 1 },
                [
                  vue.createCommentVNode(" Edit Group Name "),
                  vue.createElementVNode("div", { class: "group-list group-list-edit" }, [
                    $setup.groupInfo.groupConfig.type === "input" ? vue.withDirectives((vue.openBlock(), vue.createElementBlock("input", {
                      key: 0,
                      "onUpdate:modelValue": _cache[1] || (_cache[1] = ($event) => $setup.groupInfo.groupConfig.value = $event),
                      class: "group-name-input",
                      type: "text",
                      placeholder: $setup.TUITranslateService.t(`TUIGroup.${$setup.groupInfo.groupConfig.placeholder}`)
                    }, null, 8, ["placeholder"])), [
                      [vue.vModelText, $setup.groupInfo.groupConfig.value]
                    ]) : (vue.openBlock(), vue.createBlock($setup["GroupIntroduction"], {
                      key: 1,
                      class: "group-introduction-list",
                      groupType: $setup.groupInfo.groupConfig.value,
                      onSelectType: $setup.selected
                    }, null, 8, ["groupType"]))
                  ])
                ],
                2112
                /* STABLE_FRAGMENT, DEV_ROOT_FRAGMENT */
              )),
              vue.createElementVNode("footer", { class: "group-profile-footer" }, [
                $setup.isPC && !$setup.groupInfo.isEdit ? (vue.openBlock(), vue.createElementBlock(
                  "button",
                  {
                    key: 0,
                    class: "btn-default",
                    onClick: $setup.closeCreated
                  },
                  vue.toDisplayString($setup.TUITranslateService.t("TUIGroup.取消")),
                  1
                  /* TEXT */
                )) : vue.createCommentVNode("v-if", true),
                vue.createElementVNode("button", {
                  class: "btn-submit",
                  disabled: $setup.submitDisabledStatus,
                  onClick: $setup.submit
                }, vue.toDisplayString($setup.TUITranslateService.t("TUIGroup.确认")), 9, ["disabled"])
              ])
            ])
          ],
          2
          /* CLASS */
        )
      ]),
      _: 1
      /* STABLE */
    }, 8, ["isH5"]);
  }
  const CreateGroup = /* @__PURE__ */ _export_sfc(_sfc_main$e, [["render", _sfc_render$d], ["__scopeId", "data-v-3db83c6c"], ["__file", "C:/Users/Administrator/Desktop/Project Folder/ZXHand/ZXHandwritting_APP_uniapp/TUIKit/components/TUIGroup/create-group/index.vue"]]);
  const _sfc_main$d = /* @__PURE__ */ vue.defineComponent({
    __name: "index",
    props: {
      show: {
        type: Boolean,
        default: () => false
      }
    },
    emits: ["update:show"],
    setup(__props, { expose: __expose, emit: __emit }) {
      __expose();
      const props2 = __props;
      const showMask = vue.ref(false);
      vue.watchEffect(() => {
        showMask.value = props2.show;
      });
      const emit = __emit;
      const toggleView = () => {
        showMask.value = !showMask.value;
        emit("update:show", showMask.value);
      };
      const __returned__ = { props: props2, showMask, emit, toggleView, get isWeChat() {
        return isWeChat;
      } };
      Object.defineProperty(__returned__, "__isScriptSetup", { enumerable: false, value: true });
      return __returned__;
    }
  });
  function _sfc_render$c(_ctx, _cache, $props, $setup, $data, $options) {
    return $setup.showMask ? (vue.openBlock(), vue.createElementBlock("div", {
      key: 0,
      class: "mask",
      onClick: _cache[0] || (_cache[0] = vue.withModifiers(($event) => !$setup.isWeChat && $setup.toggleView, ["self"]))
    }, [
      vue.renderSlot(_ctx.$slots, "default", {}, void 0, true)
    ])) : vue.createCommentVNode("v-if", true);
  }
  const MaskLayer = /* @__PURE__ */ _export_sfc(_sfc_main$d, [["render", _sfc_render$c], ["__scopeId", "data-v-e3dc88b0"], ["__file", "C:/Users/Administrator/Desktop/Project Folder/ZXHand/ZXHandwritting_APP_uniapp/TUIKit/components/common/MaskLayer/index.vue"]]);
  const _sfc_main$c = /* @__PURE__ */ vue.defineComponent({
    __name: "manage-name",
    props: {
      data: {
        type: Object,
        default: () => ({})
      },
      isAuthor: {
        type: Boolean,
        default: false
      }
    },
    emits: ["update"],
    setup(__props, { expose: __expose, emit: __emit }) {
      __expose();
      const props2 = __props;
      const groupProfile = vue.ref({});
      const inputGroupName = vue.ref("");
      const isEdit = vue.ref(false);
      const nameInputRef = vue.ref(null);
      vue.watchEffect(() => {
        groupProfile.value = props2.data;
      });
      const emit = __emit;
      const updateProfile = () => {
        if (!inputGroupName.value) {
          Toast({
            message: Jt.t("TUIGroup.群名称不能为空"),
            type: TOAST_TYPE.ERROR
          });
        } else {
          if (inputGroupName.value !== groupProfile.value.name) {
            emit("update", { key: "name", value: inputGroupName.value });
            groupProfile.value.name = inputGroupName.value;
            inputGroupName.value = "";
            Toast({
              message: Jt.t("TUIGroup.群名称修改成功"),
              type: TOAST_TYPE.SUCCESS
            });
          }
          toggleEditStatus();
        }
      };
      const toggleEditStatus = () => {
        if (props2.isAuthor) {
          isEdit.value = !isEdit.value;
        }
        if (isEdit.value) {
          inputGroupName.value = groupProfile.value.name;
        }
      };
      vue.watch(
        () => isEdit.value,
        (newVal) => {
          if (newVal) {
            vue.nextTick(() => {
              var _a;
              (_a = nameInputRef.value) == null ? void 0 : _a.focus();
            });
          }
        }
      );
      const __returned__ = { props: props2, groupProfile, inputGroupName, isEdit, nameInputRef, emit, updateProfile, toggleEditStatus, get TUITranslateService() {
        return Jt;
      }, Icon: Icon$1, get editIcon() {
        return editIcon;
      }, get isMobile() {
        return isMobile;
      }, get isPC() {
        return isPC;
      } };
      Object.defineProperty(__returned__, "__isScriptSetup", { enumerable: false, value: true });
      return __returned__;
    }
  });
  function _sfc_render$b(_ctx, _cache, $props, $setup, $data, $options) {
    return vue.openBlock(), vue.createElementBlock("div", { class: "group-name" }, [
      vue.createElementVNode(
        "label",
        null,
        vue.toDisplayString($setup.TUITranslateService.t(`TUIGroup.群名称`)),
        1
        /* TEXT */
      ),
      $setup.isEdit ? (vue.openBlock(), vue.createElementBlock(
        "div",
        {
          key: 0,
          class: vue.normalizeClass({
            "edit-h5": $setup.isMobile
          })
        },
        [
          vue.createElementVNode("main", { class: "edit-h5-main" }, [
            !$setup.isPC ? (vue.openBlock(), vue.createElementBlock("header", {
              key: 0,
              class: "edit-h5-header"
            }, [
              vue.createElementVNode("aside", { class: "left" }, [
                vue.createElementVNode(
                  "h1",
                  null,
                  vue.toDisplayString($setup.TUITranslateService.t(`TUIGroup.修改群聊名称`)),
                  1
                  /* TEXT */
                ),
                vue.createElementVNode(
                  "span",
                  null,
                  vue.toDisplayString($setup.TUITranslateService.t(
                    `TUIGroup.修改群聊名称后，将在群内通知其他成员`
                  )),
                  1
                  /* TEXT */
                )
              ]),
              vue.createElementVNode(
                "span",
                {
                  class: "close",
                  onClick: $setup.toggleEditStatus
                },
                vue.toDisplayString($setup.TUITranslateService.t(`关闭`)),
                1
                /* TEXT */
              )
            ])) : vue.createCommentVNode("v-if", true),
            vue.createElementVNode("div", { class: "input-box" }, [
              $setup.isEdit ? vue.withDirectives((vue.openBlock(), vue.createElementBlock(
                "input",
                {
                  key: 0,
                  ref: "nameInputRef",
                  "onUpdate:modelValue": _cache[0] || (_cache[0] = ($event) => $setup.inputGroupName = $event),
                  class: "input",
                  type: "text",
                  onBlur: $setup.updateProfile
                },
                null,
                544
                /* NEED_HYDRATION, NEED_PATCH */
              )), [
                [vue.vModelText, $setup.inputGroupName]
              ]) : vue.createCommentVNode("v-if", true),
              !$setup.isPC ? (vue.openBlock(), vue.createElementBlock(
                "span",
                {
                  key: 1,
                  class: "tip"
                },
                vue.toDisplayString($setup.TUITranslateService.t(
                  `TUIGroup.仅限中文、字母、数字和下划线，2-20个字`
                )),
                1
                /* TEXT */
              )) : vue.createCommentVNode("v-if", true)
            ]),
            !$setup.isPC ? (vue.openBlock(), vue.createElementBlock("footer", {
              key: 1,
              class: "edit-h5-footer"
            }, [
              vue.createElementVNode(
                "button",
                {
                  class: "btn",
                  onClick: $setup.updateProfile
                },
                vue.toDisplayString($setup.TUITranslateService.t(`确认`)),
                1
                /* TEXT */
              )
            ])) : vue.createCommentVNode("v-if", true)
          ])
        ],
        2
        /* CLASS */
      )) : vue.createCommentVNode("v-if", true),
      !$setup.isEdit || !$setup.isPC ? (vue.openBlock(), vue.createElementBlock("p", {
        key: 1,
        class: "name",
        onClick: $setup.toggleEditStatus
      }, [
        vue.createElementVNode(
          "span",
          null,
          vue.toDisplayString($setup.groupProfile.name),
          1
          /* TEXT */
        ),
        $props.isAuthor ? (vue.openBlock(), vue.createBlock($setup["Icon"], {
          key: 0,
          class: "icon",
          file: $setup.editIcon,
          width: "14px",
          height: "14px"
        }, null, 8, ["file"])) : vue.createCommentVNode("v-if", true)
      ])) : vue.createCommentVNode("v-if", true)
    ]);
  }
  const ManageName = /* @__PURE__ */ _export_sfc(_sfc_main$c, [["render", _sfc_render$b], ["__scopeId", "data-v-0a71df72"], ["__file", "C:/Users/Administrator/Desktop/Project Folder/ZXHand/ZXHandwritting_APP_uniapp/TUIKit/components/TUIGroup/manage-group/manage-name.vue"]]);
  const _sfc_main$b = /* @__PURE__ */ vue.defineComponent({
    __name: "manage-notification",
    props: {
      data: {
        type: Object,
        default: () => ({})
      },
      isAuthor: {
        type: Boolean,
        default: false
      }
    },
    emits: ["update", "close"],
    setup(__props, { expose: __expose, emit: __emit }) {
      __expose();
      const props2 = __props;
      const groupProfile = vue.ref({});
      const input = vue.ref("");
      const isAuthorNotification = vue.ref(false);
      const isEdit = vue.ref(false);
      vue.watchEffect(() => {
        groupProfile.value = props2.data;
        input.value = groupProfile.value.notification;
        isAuthorNotification.value = props2.isAuthor;
      });
      const emits2 = __emit;
      const updateProfile = () => {
        if (input.value.length > 150) {
          Toast({
            message: Jt.t("TUIGroup.群公告字数超出限制，最大长度为150"),
            type: TOAST_TYPE.ERROR
          });
          return;
        }
        if (input.value && input.value !== groupProfile.value.notification) {
          emits2("update", { key: "notification", value: input.value });
          vue.nextTick(() => {
            input.value = "";
          });
        }
        isEdit.value = !isEdit.value;
      };
      const close = (tabName) => {
        emits2("close", tabName);
      };
      const __returned__ = { props: props2, groupProfile, input, isAuthorNotification, isEdit, emits: emits2, updateProfile, close, get TUITranslateService() {
        return Jt;
      }, get isUniFrameWork() {
        return isUniFrameWork;
      } };
      Object.defineProperty(__returned__, "__isScriptSetup", { enumerable: false, value: true });
      return __returned__;
    }
  });
  function _sfc_render$a(_ctx, _cache, $props, $setup, $data, $options) {
    return !$setup.isUniFrameWork ? (vue.openBlock(), vue.createElementBlock("main", {
      key: 0,
      class: "notification"
    }, [
      $setup.isEdit ? vue.withDirectives((vue.openBlock(), vue.createElementBlock(
        "textarea",
        {
          key: 0,
          "onUpdate:modelValue": _cache[0] || (_cache[0] = ($event) => $setup.input = $event),
          class: "textarea",
          onKeyup: vue.withKeys($setup.updateProfile, ["enter"])
        },
        null,
        544
        /* NEED_HYDRATION, NEED_PATCH */
      )), [
        [vue.vModelText, $setup.input]
      ]) : (vue.openBlock(), vue.createElementBlock("section", { key: 1 }, [
        !$setup.groupProfile.notification ? (vue.openBlock(), vue.createElementBlock(
          "p",
          { key: 0 },
          vue.toDisplayString($setup.TUITranslateService.t(`TUIGroup.暂无公告`)),
          1
          /* TEXT */
        )) : (vue.openBlock(), vue.createElementBlock(
          "article",
          { key: 1 },
          vue.toDisplayString($setup.groupProfile.notification),
          1
          /* TEXT */
        ))
      ])),
      $setup.isAuthorNotification ? (vue.openBlock(), vue.createElementBlock("footer", { key: 2 }, [
        $setup.isEdit ? (vue.openBlock(), vue.createElementBlock(
          "button",
          {
            key: 0,
            class: "btn",
            onClick: $setup.updateProfile
          },
          vue.toDisplayString($setup.TUITranslateService.t(`TUIGroup.发布`)),
          1
          /* TEXT */
        )) : (vue.openBlock(), vue.createElementBlock(
          "button",
          {
            key: 1,
            class: "btn",
            onClick: _cache[1] || (_cache[1] = ($event) => $setup.isEdit = !$setup.isEdit)
          },
          vue.toDisplayString($setup.TUITranslateService.t(`TUIGroup.编辑`)),
          1
          /* TEXT */
        ))
      ])) : vue.createCommentVNode("v-if", true)
    ])) : (vue.openBlock(), vue.createElementBlock("div", {
      key: 1,
      class: "edit-h5"
    }, [
      vue.createElementVNode("main", { class: "edit-h5-main" }, [
        vue.createElementVNode("header", { class: "edit-h5-header" }, [
          vue.createElementVNode("aside", { class: "left" }, [
            vue.createElementVNode(
              "h1",
              null,
              vue.toDisplayString($setup.TUITranslateService.t(`TUIGroup.群公告`)),
              1
              /* TEXT */
            )
          ]),
          vue.createElementVNode(
            "span",
            {
              class: "close",
              onClick: _cache[2] || (_cache[2] = ($event) => $setup.close("notification"))
            },
            vue.toDisplayString($setup.TUITranslateService.t(`关闭`)),
            1
            /* TEXT */
          )
        ]),
        vue.createElementVNode("div", { class: "notification" }, [
          $setup.isEdit ? vue.withDirectives((vue.openBlock(), vue.createElementBlock(
            "textarea",
            {
              key: 0,
              "onUpdate:modelValue": _cache[3] || (_cache[3] = ($event) => $setup.input = $event),
              class: vue.normalizeClass([$setup.isUniFrameWork ? "uni-height" : "", "textarea"]),
              onKeyup: vue.withKeys($setup.updateProfile, ["enter"])
            },
            null,
            34
            /* CLASS, NEED_HYDRATION */
          )), [
            [vue.vModelText, $setup.input]
          ]) : (vue.openBlock(), vue.createElementBlock("section", {
            key: 1,
            class: "row"
          }, [
            !$setup.groupProfile.notification ? (vue.openBlock(), vue.createElementBlock(
              "p",
              {
                key: 0,
                class: "row-p"
              },
              vue.toDisplayString($setup.TUITranslateService.t(`TUIGroup.暂无公告`)),
              1
              /* TEXT */
            )) : (vue.openBlock(), vue.createElementBlock(
              "article",
              { key: 1 },
              vue.toDisplayString($setup.groupProfile.notification),
              1
              /* TEXT */
            ))
          ])),
          $setup.isAuthorNotification ? (vue.openBlock(), vue.createElementBlock("footer", {
            key: 2,
            class: "footer"
          }, [
            $setup.isEdit ? (vue.openBlock(), vue.createElementBlock(
              "button",
              {
                key: 0,
                class: "btn",
                onClick: $setup.updateProfile
              },
              vue.toDisplayString($setup.TUITranslateService.t(`TUIGroup.发布`)),
              1
              /* TEXT */
            )) : (vue.openBlock(), vue.createElementBlock(
              "button",
              {
                key: 1,
                class: "btn",
                onClick: _cache[4] || (_cache[4] = ($event) => $setup.isEdit = !$setup.isEdit)
              },
              vue.toDisplayString($setup.TUITranslateService.t(`TUIGroup.编辑`)),
              1
              /* TEXT */
            ))
          ])) : vue.createCommentVNode("v-if", true)
        ])
      ])
    ]));
  }
  const ManageNotification = /* @__PURE__ */ _export_sfc(_sfc_main$b, [["render", _sfc_render$a], ["__scopeId", "data-v-7e758e1e"], ["__file", "C:/Users/Administrator/Desktop/Project Folder/ZXHand/ZXHandwritting_APP_uniapp/TUIKit/components/TUIGroup/manage-group/manage-notification.vue"]]);
  const delIcon = "/assets/del-icon.e0d1d417.svg";
  const _sfc_main$a = /* @__PURE__ */ vue.defineComponent({
    __name: "manage-member",
    props: {
      list: {
        type: Array,
        default: () => []
      },
      total: {
        type: Number,
        default: () => 0
      },
      isShowDel: {
        type: Boolean,
        default: () => false
      },
      self: {
        type: Object,
        default: () => ({})
      }
    },
    emits: ["more", "del", "handleMemberProfileShow", "close"],
    setup(__props, { expose: __expose, emit: __emit }) {
      __expose();
      const props2 = __props;
      const totalMember = vue.ref(0);
      const memberList = vue.ref([]);
      const isShowDeleteBtn = vue.ref(false);
      const selfValue = vue.ref({});
      vue.watchEffect(() => {
        totalMember.value = props2.total;
        isShowDeleteBtn.value = props2.isShowDel;
        memberList.value = props2.list;
        selfValue.value = props2.self;
      });
      const emits2 = __emit;
      const handleRoleName = (item) => {
        let name = "";
        switch (item == null ? void 0 : item.role) {
          case Kt.TYPES.GRP_MBR_ROLE_ADMIN:
            name = Jt.t("TUIGroup.管理员");
            break;
          case Kt.TYPES.GRP_MBR_ROLE_OWNER:
            name = Jt.t("TUIGroup.群主");
            break;
        }
        if (name) {
          name = `(${name})`;
        }
        if (item.userID === selfValue.value.userID) {
          name += ` (${Jt.t("TUIGroup.我")})`;
        }
        return name;
      };
      const getMore = () => {
        emits2("more");
      };
      const submit = (item) => {
        emits2("del", [item]);
      };
      const handleMemberProfileShow = (user) => {
        emits2("handleMemberProfileShow", user);
      };
      const close = (tabName) => {
        emits2("close", tabName);
      };
      const __returned__ = { props: props2, totalMember, memberList, isShowDeleteBtn, selfValue, emits: emits2, handleRoleName, getMore, submit, handleMemberProfileShow, close, get TUITranslateService() {
        return Jt;
      }, Icon: Icon$1, get delIcon() {
        return delIcon;
      }, get isUniFrameWork() {
        return isUniFrameWork;
      } };
      Object.defineProperty(__returned__, "__isScriptSetup", { enumerable: false, value: true });
      return __returned__;
    }
  });
  function _sfc_render$9(_ctx, _cache, $props, $setup, $data, $options) {
    return !$setup.isUniFrameWork ? (vue.openBlock(), vue.createElementBlock("main", {
      key: 0,
      class: "member"
    }, [
      vue.createElementVNode("ul", { class: "list" }, [
        (vue.openBlock(true), vue.createElementBlock(
          vue.Fragment,
          null,
          vue.renderList($setup.memberList, (item, index2) => {
            return vue.openBlock(), vue.createElementBlock("li", {
              key: index2,
              class: "list-item"
            }, [
              vue.createElementVNode("aside", {
                class: "aside",
                onClick: ($event) => $setup.handleMemberProfileShow(item)
              }, [
                vue.createElementVNode("img", {
                  class: "avatar",
                  src: item.avatar || "https://web.sdk.qcloud.com/component/TUIKit/assets/avatar_21.png",
                  onerror: "this.onerror=null;this.src='https://web.sdk.qcloud.com/component/TUIKit/assets/avatar_21.png'"
                }, null, 8, ["src"]),
                vue.createElementVNode(
                  "span",
                  { class: "name" },
                  vue.toDisplayString(item.nick || item.userID),
                  1
                  /* TEXT */
                ),
                vue.createElementVNode(
                  "span",
                  null,
                  vue.toDisplayString($setup.handleRoleName(item)),
                  1
                  /* TEXT */
                )
              ], 8, ["onClick"]),
              vue.createElementVNode("div", {
                onClick: ($event) => $setup.submit(item)
              }, [
                item.role !== "Owner" && $setup.isShowDeleteBtn ? (vue.openBlock(), vue.createBlock($setup["Icon"], {
                  key: 0,
                  file: $setup.delIcon,
                  width: "16px",
                  height: "16px"
                }, null, 8, ["file"])) : vue.createCommentVNode("v-if", true)
              ], 8, ["onClick"])
            ]);
          }),
          128
          /* KEYED_FRAGMENT */
        )),
        $setup.memberList.length < $setup.totalMember ? (vue.openBlock(), vue.createElementBlock(
          "li",
          {
            key: 0,
            class: "list-item",
            onClick: $setup.getMore
          },
          vue.toDisplayString($setup.TUITranslateService.t(`TUIGroup.查看更多`)),
          1
          /* TEXT */
        )) : vue.createCommentVNode("v-if", true)
      ])
    ])) : (vue.openBlock(), vue.createElementBlock("div", {
      key: 1,
      class: "edit-h5"
    }, [
      vue.createElementVNode("main", { class: "main" }, [
        vue.createElementVNode("header", { class: "edit-h5-header" }, [
          vue.createElementVNode("aside", { class: "left" }, [
            vue.createElementVNode(
              "h1",
              null,
              vue.toDisplayString($setup.TUITranslateService.t(`TUIGroup.群成员`)),
              1
              /* TEXT */
            )
          ]),
          vue.createElementVNode(
            "span",
            {
              class: "close",
              onClick: _cache[0] || (_cache[0] = ($event) => $setup.close("member"))
            },
            vue.toDisplayString($setup.TUITranslateService.t(`关闭`)),
            1
            /* TEXT */
          )
        ]),
        vue.createElementVNode("div", { class: "member" }, [
          vue.createElementVNode("ul", { class: "list list-uniapp" }, [
            (vue.openBlock(true), vue.createElementBlock(
              vue.Fragment,
              null,
              vue.renderList($setup.memberList, (item, index2) => {
                return vue.openBlock(), vue.createElementBlock("li", {
                  key: index2,
                  class: "list-item"
                }, [
                  vue.createElementVNode("aside", {
                    class: "aside",
                    onClick: ($event) => $setup.handleMemberProfileShow(item)
                  }, [
                    vue.createElementVNode("img", {
                      class: "avatar",
                      src: item.avatar || "https://web.sdk.qcloud.com/component/TUIKit/assets/avatar_21.png",
                      onerror: "this.onerror=null;this.src='https://web.sdk.qcloud.com/component/TUIKit/assets/avatar_21.png'"
                    }, null, 8, ["src"]),
                    vue.createElementVNode(
                      "span",
                      { class: "name" },
                      vue.toDisplayString(item.nick || item.userID),
                      1
                      /* TEXT */
                    ),
                    vue.createElementVNode(
                      "span",
                      null,
                      vue.toDisplayString($setup.handleRoleName(item)),
                      1
                      /* TEXT */
                    )
                  ], 8, ["onClick"]),
                  vue.createElementVNode("div", {
                    onClick: ($event) => $setup.submit(item)
                  }, [
                    item.role !== "Owner" && $setup.isShowDeleteBtn ? (vue.openBlock(), vue.createBlock($setup["Icon"], {
                      key: 0,
                      file: $setup.delIcon,
                      width: "16px",
                      height: "16px"
                    }, null, 8, ["file"])) : vue.createCommentVNode("v-if", true)
                  ], 8, ["onClick"])
                ]);
              }),
              128
              /* KEYED_FRAGMENT */
            )),
            $setup.memberList.length < $setup.totalMember ? (vue.openBlock(), vue.createElementBlock(
              "li",
              {
                key: 0,
                class: "list-item",
                onClick: $setup.getMore
              },
              vue.toDisplayString($setup.TUITranslateService.t(`TUIGroup.查看更多`)),
              1
              /* TEXT */
            )) : vue.createCommentVNode("v-if", true)
          ])
        ])
      ])
    ]));
  }
  const ManageMember = /* @__PURE__ */ _export_sfc(_sfc_main$a, [["render", _sfc_render$9], ["__scopeId", "data-v-a4ec002a"], ["__file", "C:/Users/Administrator/Desktop/Project Folder/ZXHand/ZXHandwritting_APP_uniapp/TUIKit/components/TUIGroup/manage-group/manage-member.vue"]]);
  const _sfc_main$9 = /* @__PURE__ */ vue.defineComponent({
    __name: "manage-profile",
    props: {
      userInfo: {
        type: Object,
        default: () => ({})
      }
    },
    emits: [
      "handleSwitchConversation",
      "close",
      "openConversation"
    ],
    setup(__props, { expose: __expose, emit: __emit }) {
      __expose();
      const props2 = __props;
      const isFriendShip = vue.ref(false);
      const userInfoManager = vue.ref({});
      vue.watchEffect(() => {
        userInfoManager.value = props2.userInfo;
      });
      const emits2 = __emit;
      vue.watch(
        () => props2.userInfo,
        async (newVal, oldVal) => {
          if (newVal === oldVal)
            return;
          const res = await Xt.getUserProfile({
            userIDList: [props2.userInfo.userID]
          });
          userInfoManager.value = res == null ? void 0 : res.data[0];
          checkFriend();
        },
        {
          deep: true,
          immediate: true
        }
      );
      const enter = async (ID, type) => {
        const name = `${type}${ID}`;
        Wt.getConversationProfile(name).then((res) => {
          Wt.switchConversation(res.data.conversation.conversationID).then(() => {
            zt.update(o$2.GRP, "isShowManageComponent", false);
            if (isUniFrameWork) {
              i == null ? void 0 : i.navigateBack();
            }
          });
        }).catch((err) => {
          formatAppLog("warn", "at TUIKit/components/TUIGroup/manage-group/manage-profile.vue:122", "获取会话资料失败", err.code, err.msg);
        });
      };
      const checkFriend = async () => {
        if (!userInfoManager.value.userID)
          return;
        es.checkFriend({
          userIDList: [userInfoManager.value.userID],
          type: Kt.TYPES.SNS_CHECK_TYPE_BOTH
        }).then((res) => {
          var _a, _b, _c;
          const relation = (_c = (_b = (_a = res == null ? void 0 : res.data) == null ? void 0 : _a.successUserIDList) == null ? void 0 : _b[0]) == null ? void 0 : _c.relation;
          isFriendShip.value = relation === Kt.TYPES.SNS_TYPE_BOTH_WAY;
        });
      };
      const showEnter = () => {
        return isFriendShip.value || !zt.getData(o$2.APP, "isOfficial");
      };
      const close = (tabName) => {
        emits2("close", tabName);
      };
      const __returned__ = { props: props2, isFriendShip, userInfoManager, emits: emits2, enter, checkFriend, showEnter, close, get TUITranslateService() {
        return Jt;
      }, Avatar, get isUniFrameWork() {
        return isUniFrameWork;
      } };
      Object.defineProperty(__returned__, "__isScriptSetup", { enumerable: false, value: true });
      return __returned__;
    }
  });
  function _sfc_render$8(_ctx, _cache, $props, $setup, $data, $options) {
    return !$setup.isUniFrameWork ? (vue.openBlock(), vue.createElementBlock("div", {
      key: 0,
      class: "memeber-profile"
    }, [
      vue.createElementVNode("div", { class: "memeber-profile-main" }, [
        vue.createElementVNode("img", {
          class: "avatar",
          src: $setup.userInfoManager.avatar || "https://web.sdk.qcloud.com/component/TUIKit/assets/avatar_21.png",
          onerror: "this.onerror=null;this.src='https://web.sdk.qcloud.com/component/TUIKit/assets/avatar_21.png'"
        }, null, 8, ["src"]),
        vue.createElementVNode("ul", { class: "list" }, [
          vue.createElementVNode(
            "h2",
            null,
            vue.toDisplayString($setup.userInfoManager.nick || $setup.userInfoManager.userID),
            1
            /* TEXT */
          ),
          vue.createElementVNode("li", null, [
            vue.createElementVNode("label", null, "ID："),
            vue.createElementVNode(
              "span",
              null,
              vue.toDisplayString($setup.userInfoManager.userID),
              1
              /* TEXT */
            )
          ]),
          vue.createElementVNode("li", null, [
            vue.createElementVNode(
              "label",
              null,
              vue.toDisplayString($setup.TUITranslateService.t("TUIContact.个性签名")) + "：",
              1
              /* TEXT */
            ),
            vue.createElementVNode(
              "span",
              null,
              vue.toDisplayString($setup.userInfoManager.selfSignature),
              1
              /* TEXT */
            )
          ])
        ])
      ]),
      vue.createElementVNode("div", { class: "memeber-profile-footer" }, [
        $setup.showEnter() ? (vue.openBlock(), vue.createElementBlock(
          "div",
          {
            key: 0,
            class: "button",
            onClick: _cache[0] || (_cache[0] = ($event) => $setup.enter($setup.userInfoManager.userID, "C2C"))
          },
          vue.toDisplayString($setup.TUITranslateService.t("TUIContact.发送消息")),
          1
          /* TEXT */
        )) : vue.createCommentVNode("v-if", true)
      ])
    ])) : (vue.openBlock(), vue.createElementBlock("div", {
      key: 1,
      class: "edit-h5"
    }, [
      vue.createElementVNode("main", { class: "main" }, [
        vue.createElementVNode("header", { class: "edit-h5-header" }, [
          vue.createElementVNode("aside", { class: "left" }, [
            vue.createElementVNode(
              "h1",
              null,
              vue.toDisplayString($setup.TUITranslateService.t(`TUIGroup.群成员`)),
              1
              /* TEXT */
            )
          ]),
          vue.createElementVNode(
            "span",
            {
              class: "close",
              onClick: _cache[1] || (_cache[1] = ($event) => $setup.close("profile"))
            },
            vue.toDisplayString($setup.TUITranslateService.t(`关闭`)),
            1
            /* TEXT */
          )
        ]),
        vue.createElementVNode("div", { class: "edit-h5-profile" }, [
          vue.createElementVNode("div", { class: "memeber-profile-main" }, [
            vue.createVNode($setup["Avatar"], {
              class: "avatar",
              url: $setup.userInfoManager.avatar,
              size: "60px"
            }, null, 8, ["url"]),
            vue.createElementVNode("ul", { class: "list" }, [
              vue.createElementVNode(
                "h1",
                null,
                vue.toDisplayString($setup.userInfoManager.nick || $setup.userInfoManager.userID),
                1
                /* TEXT */
              ),
              vue.createElementVNode("li", null, [
                vue.createElementVNode("label", null, "ID："),
                vue.createElementVNode(
                  "span",
                  null,
                  vue.toDisplayString($setup.userInfoManager.userID),
                  1
                  /* TEXT */
                )
              ]),
              vue.createElementVNode("li", null, [
                vue.createElementVNode(
                  "label",
                  null,
                  vue.toDisplayString($setup.TUITranslateService.t("TUIContact.个性签名")) + "：",
                  1
                  /* TEXT */
                ),
                vue.createElementVNode(
                  "span",
                  null,
                  vue.toDisplayString($setup.userInfoManager.selfSignature),
                  1
                  /* TEXT */
                )
              ])
            ])
          ]),
          vue.createElementVNode("div", { class: "memeber-profile-footer" }, [
            $setup.showEnter() ? (vue.openBlock(), vue.createElementBlock(
              "div",
              {
                key: 0,
                class: "button",
                onClick: _cache[2] || (_cache[2] = ($event) => $setup.enter($setup.userInfoManager.userID, "C2C"))
              },
              vue.toDisplayString($setup.TUITranslateService.t("TUIContact.发送消息")),
              1
              /* TEXT */
            )) : vue.createCommentVNode("v-if", true)
          ])
        ])
      ])
    ]));
  }
  const ManageProfile = /* @__PURE__ */ _export_sfc(_sfc_main$9, [["render", _sfc_render$8], ["__scopeId", "data-v-c655282f"], ["__file", "C:/Users/Administrator/Desktop/Project Folder/ZXHand/ZXHandwritting_APP_uniapp/TUIKit/components/TUIGroup/manage-group/manage-profile.vue"]]);
  const _sfc_main$8 = /* @__PURE__ */ vue.defineComponent({
    __name: "index",
    props: {
      open: {
        type: Boolean,
        default: false
      }
    },
    emits: ["change"],
    setup(__props, { expose: __expose, emit: __emit }) {
      __expose();
      const props2 = __props;
      const isSliderOpen = vue.ref(false);
      const emits2 = __emit;
      vue.watchEffect(() => {
        isSliderOpen.value = props2.open;
      });
      const toggleSlider = () => {
        isSliderOpen.value = !isSliderOpen.value;
        emits2("change", isSliderOpen.value);
      };
      const __returned__ = { props: props2, isSliderOpen, emits: emits2, toggleSlider };
      Object.defineProperty(__returned__, "__isScriptSetup", { enumerable: false, value: true });
      return __returned__;
    }
  });
  function _sfc_render$7(_ctx, _cache, $props, $setup, $data, $options) {
    return vue.openBlock(), vue.createElementBlock(
      "div",
      {
        class: vue.normalizeClass(["slider-box", [$setup.isSliderOpen && "slider-open"]]),
        onClick: $setup.toggleSlider
      },
      [
        vue.createElementVNode("span", { class: "slider-block" })
      ],
      2
      /* CLASS */
    );
  }
  const Slider = /* @__PURE__ */ _export_sfc(_sfc_main$8, [["render", _sfc_render$7], ["__scopeId", "data-v-a7f8ad37"], ["__file", "C:/Users/Administrator/Desktop/Project Folder/ZXHand/ZXHandwritting_APP_uniapp/TUIKit/components/common/Slider/index.vue"]]);
  const plusSVG = "/assets/plus.dfad243b.svg";
  const minusSVG = "/assets/minus.28312fe8.svg";
  const _sfc_main$7 = /* @__PURE__ */ vue.defineComponent({
    __name: "manage-admin",
    props: {
      member: {
        type: Object,
        default: () => {
        }
      },
      isSetMuteTime: {
        type: Boolean,
        default: () => false
      },
      currentGroup: {
        type: Object,
        default: () => {
        }
      }
    },
    emits: [
      "addAdmin",
      "removeAdmin",
      "setAllMuteTime",
      "addMute",
      "removeMute",
      "close"
    ],
    setup(__props, { expose: __expose, emit: __emit }) {
      __expose();
      const props2 = __props;
      const isAdminSetMuteTime = vue.ref(false);
      const memberAdmin = vue.ref({
        admin: [],
        member: [],
        muteMember: []
      });
      const currentGroupAdmin = vue.ref();
      vue.watchEffect(() => {
        memberAdmin.value = props2.member;
        isAdminSetMuteTime.value = props2.isSetMuteTime;
        currentGroupAdmin.value = props2.currentGroup;
      });
      const emits2 = __emit;
      const addAdmin = () => {
        emits2("addAdmin");
      };
      const removeAdmin = () => {
        emits2("removeAdmin");
      };
      const setAllMuteTime = (value) => {
        emits2("setAllMuteTime", value);
      };
      const addMute = () => {
        emits2("addMute");
      };
      const removeMute = () => {
        emits2("removeMute");
      };
      const __returned__ = { props: props2, isAdminSetMuteTime, memberAdmin, currentGroupAdmin, emits: emits2, addAdmin, removeAdmin, setAllMuteTime, addMute, removeMute, get TUITranslateService() {
        return Jt;
      }, Slider, Icon: Icon$1, get plusSVG() {
        return plusSVG;
      }, get minusSVG() {
        return minusSVG;
      } };
      Object.defineProperty(__returned__, "__isScriptSetup", { enumerable: false, value: true });
      return __returned__;
    }
  });
  function _sfc_render$6(_ctx, _cache, $props, $setup, $data, $options) {
    return vue.openBlock(), vue.createElementBlock("div", { class: "admin-main" }, [
      vue.createElementVNode("div", { class: "admin-manage" }, [
        vue.createElementVNode(
          "div",
          { class: "admin-manage-header" },
          vue.toDisplayString($setup.TUITranslateService.t(`TUIGroup.群管理员`)),
          1
          /* TEXT */
        ),
        vue.createElementVNode("ul", { class: "admin-manage-list" }, [
          (vue.openBlock(true), vue.createElementBlock(
            vue.Fragment,
            null,
            vue.renderList($setup.memberAdmin.admin, (item, index2) => {
              return vue.openBlock(), vue.createElementBlock("li", {
                key: index2,
                class: "admin-manage-list-item"
              }, [
                vue.createElementVNode("div", { class: "item-main" }, [
                  vue.createElementVNode("img", {
                    class: "item-main-avatar",
                    src: item.avatar || "https://web.sdk.qcloud.com/component/TUIKit/assets/avatar_21.png",
                    onerror: "this.onerror=null;this.src='https://web.sdk.qcloud.com/component/TUIKit/assets/avatar_21.png'"
                  }, null, 8, ["src"])
                ]),
                vue.createElementVNode(
                  "div",
                  { class: "item-name" },
                  vue.toDisplayString(item.nick || item.userID),
                  1
                  /* TEXT */
                )
              ]);
            }),
            128
            /* KEYED_FRAGMENT */
          )),
          vue.createElementVNode("li", { class: "admin-manage-list-item" }, [
            vue.createElementVNode("div", {
              class: "item-main",
              onClick: $setup.addAdmin
            }, [
              vue.createVNode($setup["Icon"], {
                file: $setup.plusSVG,
                width: "16px",
                height: "16px"
              }, null, 8, ["file"])
            ])
          ]),
          vue.createElementVNode("li", { class: "admin-manage-list-item" }, [
            $setup.memberAdmin.admin.length > 0 ? (vue.openBlock(), vue.createElementBlock("div", {
              key: 0,
              class: "item-main",
              onClick: $setup.removeAdmin
            }, [
              vue.createVNode($setup["Icon"], {
                file: $setup.minusSVG,
                width: "16px",
                height: "16px"
              }, null, 8, ["file"])
            ])) : vue.createCommentVNode("v-if", true)
          ])
        ])
      ]),
      $setup.isAdminSetMuteTime ? (vue.openBlock(), vue.createElementBlock("div", {
        key: 0,
        class: "admin-mute-all"
      }, [
        vue.createElementVNode("div", null, [
          vue.createElementVNode(
            "div",
            { class: "admin-mute-all-title" },
            vue.toDisplayString($setup.TUITranslateService.t(`TUIGroup.全员禁言`)),
            1
            /* TEXT */
          ),
          vue.createElementVNode(
            "div",
            { class: "admin-mute-all-content" },
            vue.toDisplayString($setup.TUITranslateService.t(
              `TUIGroup.全员禁言开启后，只允许群主和管理员发言。`
            )),
            1
            /* TEXT */
          )
        ]),
        vue.createVNode($setup["Slider"], {
          open: $setup.currentGroupAdmin.muteAllMembers,
          onChange: $setup.setAllMuteTime
        }, null, 8, ["open"])
      ])) : vue.createCommentVNode("v-if", true),
      $setup.isAdminSetMuteTime ? (vue.openBlock(), vue.createElementBlock("div", {
        key: 1,
        class: "admin-mute"
      }, [
        vue.createElementVNode(
          "div",
          { class: "admin-mute-header" },
          vue.toDisplayString($setup.TUITranslateService.t(`TUIGroup.单独禁言人员`)),
          1
          /* TEXT */
        ),
        vue.createElementVNode("ul", { class: "admin-mute-list" }, [
          (vue.openBlock(true), vue.createElementBlock(
            vue.Fragment,
            null,
            vue.renderList($setup.memberAdmin.muteMember, (item, index2) => {
              return vue.openBlock(), vue.createElementBlock("li", {
                key: index2,
                class: "admin-mute-list-item"
              }, [
                vue.createElementVNode("div", { class: "item-main" }, [
                  vue.createElementVNode("img", {
                    class: "item-main-avatar",
                    src: item.avatar || "https://web.sdk.qcloud.com/component/TUIKit/assets/avatar_21.png",
                    onerror: "this.onerror=null;this.src='https://web.sdk.qcloud.com/component/TUIKit/assets/avatar_21.png'"
                  }, null, 8, ["src"])
                ]),
                vue.createElementVNode(
                  "div",
                  { class: "item-name" },
                  vue.toDisplayString(item.nick || item.userID),
                  1
                  /* TEXT */
                )
              ]);
            }),
            128
            /* KEYED_FRAGMENT */
          )),
          vue.createElementVNode("li", { class: "admin-mute-list-item" }, [
            vue.createElementVNode("div", {
              class: "item-main",
              onClick: $setup.addMute
            }, [
              vue.createVNode($setup["Icon"], {
                file: $setup.plusSVG,
                width: "16px",
                height: "16px"
              }, null, 8, ["file"])
            ])
          ]),
          vue.createElementVNode("li", { class: "admin-mute-list-item" }, [
            $setup.memberAdmin.muteMember.length > 0 ? (vue.openBlock(), vue.createElementBlock("div", {
              key: 0,
              class: "item-main",
              onClick: $setup.removeMute
            }, [
              vue.createVNode($setup["Icon"], {
                file: $setup.minusSVG,
                width: "16px",
                height: "16px"
              }, null, 8, ["file"])
            ])) : vue.createCommentVNode("v-if", true)
          ])
        ])
      ])) : vue.createCommentVNode("v-if", true)
    ]);
  }
  const ManageAdmin = /* @__PURE__ */ _export_sfc(_sfc_main$7, [["render", _sfc_render$6], ["__scopeId", "data-v-bbbd882d"], ["__file", "C:/Users/Administrator/Desktop/Project Folder/ZXHand/ZXHandwritting_APP_uniapp/TUIKit/components/TUIGroup/manage-group/manage-admin.vue"]]);
  const _sfc_main$6 = /* @__PURE__ */ vue.defineComponent({
    __name: "index",
    props: {
      groupID: {
        type: String,
        default: ""
      },
      groupCurrentTab: {
        type: String,
        default: ""
      }
    },
    setup(__props, { expose: __expose }) {
      __expose();
      const TUIGroupServer$1 = TUIGroupServer.getInstance();
      const TUIConstants = TUIGroupServer$1.constants;
      const props2 = __props;
      const manageRef = vue.ref(void 0);
      const currentTab = vue.ref("");
      const editLableName = vue.ref("");
      const transferType = vue.ref("");
      const mask = vue.ref(false);
      const currentGroupID = vue.ref("");
      const userInfo = vue.ref({
        list: []
      });
      const currentMember = vue.ref({});
      const typeName = vue.ref({
        [Kt.TYPES.GRP_WORK]: "好友工作群",
        [Kt.TYPES.GRP_PUBLIC]: "陌生人社交群",
        [Kt.TYPES.GRP_MEETING]: "临时会议群",
        [Kt.TYPES.GRP_AVCHATROOM]: "直播群",
        [Kt.TYPES.GRP_COMMUNITY]: "社群",
        [Kt.TYPES.JOIN_OPTIONS_FREE_ACCESS]: "自由加入",
        [Kt.TYPES.JOIN_OPTIONS_NEED_PERMISSION]: "需要验证",
        [Kt.TYPES.JOIN_OPTIONS_DISABLE_APPLY]: "禁止加群"
      });
      const member = vue.ref({
        admin: [],
        member: [],
        muteMember: []
      });
      const transferList = vue.ref([]);
      const transferTitle = vue.ref("");
      const isSearch = vue.ref(false);
      const isRadio = vue.ref(false);
      const selectedList = vue.ref([]);
      const delDialogShow = vue.ref(false);
      const groupMemberList = vue.ref([]);
      const deletedUserList = vue.ref([]);
      const currentGroup = vue.ref();
      const currentSelfRole = vue.ref("");
      const groupIDValue = vue.ref("");
      vue.onMounted(() => {
        vue.nextTick(() => {
          if (manageRef.value && !isUniFrameWork) {
            R.listen({
              domRefs: manageRef.value,
              handler: handleCompleteManage
            });
          }
        });
      });
      zt.watch(o$2.GRP, {
        currentGroup: (group) => {
          var _a, _b;
          if (group) {
            currentGroup.value = group;
            currentSelfRole.value = (_b = (_a = currentGroup.value) == null ? void 0 : _a.selfInfo) == null ? void 0 : _b.role;
          }
        },
        currentGroupMemberList: (memberList) => {
          groupMemberList.value = memberList;
          member.value = {
            admin: [],
            member: [],
            muteMember: []
          };
          Array.from(memberList).map((item) => {
            switch (item == null ? void 0 : item.role) {
              case Kt.TYPES.GRP_MBR_ROLE_ADMIN:
                member.value.admin.push(item);
                break;
              case Kt.TYPES.GRP_MBR_ROLE_MEMBER:
                member.value.member.push(item);
                break;
            }
            return item;
          });
          const time2 = (/* @__PURE__ */ new Date()).getTime();
          member.value.muteMember = Array.from(memberList).filter(
            (item) => (item == null ? void 0 : item.muteUntil) * 1e3 - time2 > 0
          );
        }
      });
      zt.watch(o$2.CONV, {
        currentConversation: (conversation) => {
          var _a;
          groupIDValue.value = (_a = conversation == null ? void 0 : conversation.groupProfile) == null ? void 0 : _a.groupID;
        }
      });
      vue.watchEffect(() => {
        const params = TUIGroupServer$1.getOnCallParams(TUIConstants.TUIGroup.SERVICE.METHOD.OPEN_GROUP_MANAGEMENT);
        currentGroupID.value = (params == null ? void 0 : params.groupID) || groupIDValue.value;
        currentTab.value = props2.groupCurrentTab;
      });
      const TabName = vue.computed(() => {
        let name = "";
        switch (currentTab.value) {
          case "notification":
            name = "群公告";
            break;
          case "member":
            name = "群成员";
            break;
          case "profile":
            name = "群成员";
            break;
          default:
            name = "群管理";
            break;
        }
        return name;
      });
      const isOwner = vue.computed(() => {
        var _a, _b;
        const userRole = (_b = (_a = currentGroup.value) == null ? void 0 : _a.selfInfo) == null ? void 0 : _b.role;
        return userRole === Kt.TYPES.GRP_MBR_ROLE_OWNER;
      });
      const isAdmin = vue.computed(() => {
        var _a, _b;
        const userRole = (_b = (_a = currentGroup.value) == null ? void 0 : _a.selfInfo) == null ? void 0 : _b.role;
        return userRole === Kt.TYPES.GRP_MBR_ROLE_OWNER;
      });
      const isWorkGroup = vue.computed(() => {
        var _a;
        return ((_a = currentGroup.value) == null ? void 0 : _a.type) === Kt.TYPES.GRP_WORK;
      });
      const isSetMuteTime = vue.computed(() => {
        if (isWorkGroup.value || !(isOwner.value || isAdmin.value)) {
          return false;
        }
        return true;
      });
      const canDelMember = vue.computed(() => {
        var _a;
        const groupType = (_a = currentGroup == null ? void 0 : currentGroup.value) == null ? void 0 : _a.type;
        const isAVChatRoom = groupType === Kt.TYPES.GRP_AVCHATROOM;
        if (isAVChatRoom) {
          return false;
        }
        return true;
      });
      const updateProfile = async (newGroupProfile) => {
        const { key, value } = newGroupProfile;
        const options = {
          groupID: currentGroup.value.groupID,
          [key]: value
        };
        Qt.updateGroupProfile(options).then((res) => {
          currentGroup.value = res.data.group;
          editLableName.value = "";
        }).catch((error2) => {
          Toast({
            message: error2 == null ? void 0 : error2.message,
            type: TOAST_TYPE.ERROR
          });
        });
      };
      const setCurrentTab = (tabName) => {
        currentTab.value = tabName;
        editLableName.value = "";
        if (currentTab.value === "member") {
          transferType.value = "remove";
        }
        if (!currentTab.value) {
          transferType.value = "";
        }
      };
      const cancel = () => {
        toggleMask();
      };
      const toggleMask = async (type) => {
        var _a;
        selectedList.value = [];
        let memberUserIDList = [];
        switch (type) {
          case "add":
            isRadio.value = false;
            memberUserIDList = [...member.value.admin, ...member.value.member].map((item) => item.userID);
            transferList.value = (await friendList()).filter((item) => {
              return item.userID && memberUserIDList.indexOf(item.userID) < 0;
            });
            transferTitle.value = "添加成员";
            break;
          case "remove":
            isRadio.value = false;
            transferList.value = groupMemberList.value.filter(
              (item) => {
                var _a2, _b;
                return item.userID !== ((_b = (_a2 = currentGroup == null ? void 0 : currentGroup.value) == null ? void 0 : _a2.selfInfo) == null ? void 0 : _b.userID);
              }
            );
            transferTitle.value = "删除成员";
            break;
          case "addAdmin":
            isRadio.value = true;
            transferList.value = member.value.member;
            transferTitle.value = "新增管理员";
            break;
          case "removeAdmin":
            isRadio.value = true;
            transferList.value = member.value.admin;
            transferTitle.value = "移除管理员";
            break;
          case "changeOwner":
            isRadio.value = true;
            transferList.value = [...member.value.admin, ...member.value.member];
            transferTitle.value = "转让群组";
            break;
          case "addMute":
            isRadio.value = true;
            transferList.value = member.value.member;
            if (currentGroup.value.selfInfo.role === "Owner") {
              transferList.value = [...member.value.admin, ...member.value.member];
            }
            transferList.value = (_a = transferList == null ? void 0 : transferList.value) == null ? void 0 : _a.filter((item) => {
              var _a2, _b;
              return ((_b = (_a2 = member == null ? void 0 : member.value) == null ? void 0 : _a2.muteMember) == null ? void 0 : _b.indexOf(item)) < 0;
            });
            transferTitle.value = "新增禁言用户";
            break;
          case "removeMute":
            isRadio.value = true;
            transferList.value = member.value.muteMember;
            transferTitle.value = "移除禁言用户";
            break;
        }
        type && (transferType.value = type);
        mask.value = !mask.value;
      };
      const friendList = async () => {
        const imResponse = await es.getFriendList();
        const friendList2 = imResponse.data.map((item) => item == null ? void 0 : item.profile);
        return friendList2.filter(
          (item) => !userInfo.value.list.some(
            (infoItem) => infoItem.userID === item.userID
          )
        );
      };
      const canIDissmissGroup = vue.computed(() => {
        var _a, _b, _c;
        const userRole = (_b = (_a = currentGroup == null ? void 0 : currentGroup.value) == null ? void 0 : _a.selfInfo) == null ? void 0 : _b.role;
        const groupType = (_c = currentGroup == null ? void 0 : currentGroup.value) == null ? void 0 : _c.type;
        return userRole === Kt.TYPES.GRP_MBR_ROLE_OWNER && groupType !== Kt.TYPES.GRP_WORK;
      });
      const isShowAddMember = vue.computed(() => {
        var _a;
        const groupType = (_a = currentGroup == null ? void 0 : currentGroup.value) == null ? void 0 : _a.type;
        return groupType === Kt.TYPES.GRP_WORK;
      });
      const showUserNum = vue.computed(() => {
        var _a, _b;
        let num = 3;
        if (!isShowAddMember.value) {
          num += 1;
        }
        if (((_b = (_a = currentGroup == null ? void 0 : currentGroup.value) == null ? void 0 : _a.selfInfo) == null ? void 0 : _b.role) !== "Owner") {
          num += 1;
        }
        return num;
      });
      const getMember = async (type) => {
        const groupID = currentGroupID.value;
        const options = {
          groupID,
          count: 100,
          offset: type && type === "more" ? userInfo.value.list.length : 0
        };
        await Qt.getGroupMemberList(options).then((res) => {
          if (type && type === "more") {
            userInfo.value.list = [...userInfo.value.list, ...res.data.memberList];
          } else {
            userInfo.value.list = res.data.memberList;
          }
        });
      };
      const handleMemberProfileShow = (user) => {
        currentMember.value = user;
        setCurrentTab("profile");
      };
      const submit = (userList) => {
        if (transferType.value === "remove") {
          deletedUserList.value = userList;
          delDialogShow.value = !delDialogShow.value;
        } else {
          handleManage(userList, transferType.value);
        }
        mask.value = false;
      };
      const dismissGroup2 = async (group) => {
        await Qt.dismissGroup(group.groupID);
        enableSampleTaskStatus("dismissGroup");
        Toast({
          message: Jt.t("TUIGroup.群组解散成功"),
          type: TOAST_TYPE.SUCCESS
        });
        clearGroupInfo();
      };
      const clearGroupInfo = () => {
        if (isUniFrameWork) {
          i == null ? void 0 : i.switchTab({
            url: "/TUIKit/components/TUIConversation/index"
          });
        } else {
          handleCompleteManage();
          Wt.switchConversation();
        }
      };
      const setAllMuteTime = (value) => {
        updateProfile({ key: "muteAllMembers", value });
        if (value) {
          enableSampleTaskStatus("muteGroup");
          Toast({
            message: Jt.t("TUIGroup.禁言设置成功"),
            type: TOAST_TYPE.SUCCESS
          });
        } else {
          Toast({
            message: Jt.t("TUIGroup.取消禁言成功"),
            type: TOAST_TYPE.SUCCESS
          });
        }
      };
      const handleSearchMember = async (value) => {
        var _a, _b;
        let imResponse = {};
        let imMemberResponse = {};
        const options = {
          groupID: currentGroupID.value,
          userIDList: [value]
        };
        switch (transferType.value) {
          case "add":
            try {
              imMemberResponse = await Qt.getGroupMemberProfile(options);
              transferList.value = transferList.value.filter(
                (item) => {
                  var _a2;
                  return item.userID !== ((_a2 = imResponse.data[0]) == null ? void 0 : _a2.userID);
                }
              );
              transferList.value = [...transferList.value, ...imResponse.data];
              if (((_a = imMemberResponse == null ? void 0 : imMemberResponse.data) == null ? void 0 : _a.memberList.length) > 0) {
                transferList.value = transferList.value.map((item) => {
                  var _a2;
                  if (item.userID === ((_a2 = imMemberResponse == null ? void 0 : imMemberResponse.data) == null ? void 0 : _a2.memberList[0].userID)) {
                    item.isDisabled = true;
                  }
                  return item;
                });
              }
            } catch (error2) {
              const message2 = Jt.t("TUIGroup.该用户不存在");
              Toast({
                message: message2,
                type: TOAST_TYPE.ERROR
              });
            }
            break;
          case "remove":
            try {
              imResponse = await Qt.getGroupMemberProfile(options);
              if (imResponse.data.memberList.length === 0) {
                const message2 = Jt.t("TUIGroup.该用户不在群组内");
                Toast({
                  message: message2,
                  type: TOAST_TYPE.ERROR
                });
              }
              transferList.value = transferList.value.filter(
                (item) => {
                  var _a2, _b2;
                  return item.userID !== ((_b2 = (_a2 = imResponse == null ? void 0 : imResponse.data) == null ? void 0 : _a2.memberList[0]) == null ? void 0 : _b2.userID);
                }
              );
              if ((_b = imResponse == null ? void 0 : imResponse.data) == null ? void 0 : _b.memberList.length) {
                transferList.value = [
                  ...transferList.value,
                  ...imResponse.data.memberList
                ];
              }
            } catch (error2) {
              const message2 = Jt.t("TUIGroup.该用户不存在");
              Toast({
                message: message2,
                type: TOAST_TYPE.ERROR
              });
            }
            break;
        }
      };
      const handleManage = (userList, type) => {
        const userIDList = [];
        userList.map((item) => {
          userIDList.push(item.userID);
          return item;
        });
        switch (type) {
          case "add":
            addMember(userIDList);
            break;
          case "remove":
            deleteGroupMember(userIDList);
            break;
          case "addAdmin":
            handleAdmin(userList[0]);
            break;
          case "removeAdmin":
            handleAdmin(userList[0]);
            break;
          case "changeOwner":
            changeOwner(userIDList[0]);
            break;
          case "addMute":
            setMemberMuteTime(userIDList[0], "add");
            break;
          case "removeMute":
            setMemberMuteTime(userIDList[0], "remove");
            break;
        }
      };
      const addMember = async (userIDList) => {
        const options = {
          groupID: currentGroupID.value,
          userIDList
        };
        await Qt.addGroupMember(options);
      };
      const changeOwner = async (userID) => {
        const options = {
          groupID: currentGroupID.value,
          newOwnerID: userID
        };
        const imResponse = await Qt.changeGroupOwner(options);
        currentGroup.value = {};
        currentGroup.value = imResponse.data.group;
      };
      const setMemberMuteTime = async (userID, type) => {
        const options = {
          groupID: currentGroupID.value,
          userID,
          muteTime: type === "add" ? 60 * 60 * 24 * 30 : 0
        };
        await Qt.setGroupMemberMuteTime(options);
      };
      const handleAdmin = async (user) => {
        let role = "";
        switch (user.role) {
          case Kt.TYPES.GRP_MBR_ROLE_ADMIN:
            role = Kt.TYPES.GRP_MBR_ROLE_MEMBER;
            break;
          case Kt.TYPES.GRP_MBR_ROLE_MEMBER:
            role = Kt.TYPES.GRP_MBR_ROLE_ADMIN;
            break;
        }
        const options = {
          groupID: currentGroupID.value,
          userID: user.userID,
          role
        };
        await Qt.setGroupMemberRole(options);
      };
      const deleteGroupMember = async (userIDList) => {
        const options = {
          groupID: currentGroupID.value,
          userIDList,
          reason: ""
        };
        await Qt.deleteGroupMember(options);
      };
      const quitGroup2 = async (group) => {
        await Qt.quitGroup(group.groupID);
        clearGroupInfo();
      };
      const back = () => {
        if (currentTab.value) {
          setCurrentTab("");
        } else {
          handleCompleteManage();
        }
      };
      const handleCompleteManage = () => {
        zt.update(o$2.GRP, "isShowManageComponent", false);
        const callback = TUIGroupServer$1.getOnCallCallback(TUIConstants.TUIGroup.SERVICE.METHOD.OPEN_GROUP_MANAGEMENT);
        callback && callback();
      };
      const __returned__ = { TUIGroupServer: TUIGroupServer$1, TUIConstants, props: props2, manageRef, currentTab, editLableName, transferType, mask, currentGroupID, userInfo, currentMember, typeName, member, transferList, transferTitle, isSearch, isRadio, selectedList, delDialogShow, groupMemberList, deletedUserList, currentGroup, currentSelfRole, groupIDValue, TabName, isOwner, isAdmin, isWorkGroup, isSetMuteTime, canDelMember, updateProfile, setCurrentTab, cancel, toggleMask, friendList, canIDissmissGroup, isShowAddMember, showUserNum, getMember, handleMemberProfileShow, submit, dismissGroup: dismissGroup2, clearGroupInfo, setAllMuteTime, handleSearchMember, handleManage, addMember, changeOwner, setMemberMuteTime, handleAdmin, deleteGroupMember, quitGroup: quitGroup2, back, handleCompleteManage, get TUITranslateService() {
        return Jt;
      }, MaskLayer, Dialog, Transfer, ManageName, ManageNotification, ManageMember, ManageProfile, ManageAdmin, Icon: Icon$1, get backSVG() {
        return backSVG;
      }, get rightIcon() {
        return rightIcon;
      }, get isPC() {
        return isPC;
      }, get isUniFrameWork() {
        return isUniFrameWork;
      } };
      Object.defineProperty(__returned__, "__isScriptSetup", { enumerable: false, value: true });
      return __returned__;
    }
  });
  function _sfc_render$5(_ctx, _cache, $props, $setup, $data, $options) {
    return vue.openBlock(), vue.createElementBlock(
      "div",
      {
        ref: "manageRef",
        class: "manage"
      },
      [
        !$setup.isUniFrameWork || $setup.currentTab === "admin" ? (vue.openBlock(), vue.createElementBlock("header", {
          key: 0,
          class: "manage-header"
        }, [
          vue.createVNode($setup["Icon"], {
            file: $setup.backSVG,
            onOnClick: $setup.back
          }, null, 8, ["file"]),
          vue.createElementVNode(
            "div",
            { class: "manage-header-content" },
            vue.toDisplayString($setup.TUITranslateService.t(`TUIGroup.${$setup.TabName}`)),
            1
            /* TEXT */
          ),
          vue.createElementVNode("div")
        ])) : vue.createCommentVNode("v-if", true),
        !$setup.currentTab || $setup.isUniFrameWork && $setup.currentTab != "admin" ? (vue.openBlock(), vue.createElementBlock("main", {
          key: 1,
          class: "main"
        }, [
          vue.createVNode($setup["ManageName"], {
            class: "space-top",
            isAuthor: $setup.isOwner || $setup.isAdmin || $setup.isWorkGroup,
            data: $setup.currentGroup,
            onUpdate: $setup.updateProfile
          }, null, 8, ["isAuthor", "data"]),
          vue.createElementVNode("div", { class: "user-info space-top" }, [
            vue.createElementVNode("header", {
              class: "user-info-header",
              onClick: _cache[0] || (_cache[0] = ($event) => $setup.setCurrentTab("member"))
            }, [
              vue.createElementVNode(
                "label",
                { class: "user-info-header-left" },
                vue.toDisplayString($setup.TUITranslateService.t(`TUIGroup.群成员`)),
                1
                /* TEXT */
              ),
              vue.createElementVNode("div", { class: "user-info-header-right" }, [
                vue.createElementVNode(
                  "span",
                  { class: "span" },
                  vue.toDisplayString($setup.currentGroup.memberCount || $setup.groupMemberList.length) + " " + vue.toDisplayString($setup.TUITranslateService.t(`TUIGroup.人`)),
                  1
                  /* TEXT */
                ),
                vue.createVNode($setup["Icon"], { file: $setup.rightIcon }, null, 8, ["file"])
              ])
            ]),
            vue.createElementVNode("ol", { class: "user-info-list" }, [
              (vue.openBlock(true), vue.createElementBlock(
                vue.Fragment,
                null,
                vue.renderList($setup.groupMemberList.slice(0, $setup.showUserNum), (item, index2) => {
                  return vue.openBlock(), vue.createElementBlock("dl", {
                    key: index2,
                    class: "user-info-list-item"
                  }, [
                    vue.createElementVNode("dt", {
                      class: "user-info-list-item-main",
                      onClick: ($event) => $setup.handleMemberProfileShow(item)
                    }, [
                      vue.createElementVNode("img", {
                        class: "avatar",
                        src: item.avatar || "https://web.sdk.qcloud.com/component/TUIKit/assets/avatar_21.png",
                        onerror: "this.onerror=null;this.src='https://web.sdk.qcloud.com/component/TUIKit/assets/avatar_21.png'"
                      }, null, 8, ["src"])
                    ], 8, ["onClick"]),
                    vue.createElementVNode(
                      "dd",
                      { class: "user-info-list-item-info" },
                      vue.toDisplayString(item.nick || item.userID),
                      1
                      /* TEXT */
                    )
                  ]);
                }),
                128
                /* KEYED_FRAGMENT */
              )),
              $setup.isShowAddMember ? (vue.openBlock(), vue.createElementBlock("dl", {
                key: 0,
                class: "user-info-list-item"
              }, [
                vue.createElementVNode("dt", {
                  class: "avatar",
                  onClick: _cache[1] || (_cache[1] = ($event) => $setup.toggleMask("add"))
                }, " + ")
              ])) : vue.createCommentVNode("v-if", true),
              $setup.currentSelfRole === "Owner" ? (vue.openBlock(), vue.createElementBlock("dl", {
                key: 1,
                class: "user-info-list-item"
              }, [
                vue.createElementVNode("dt", {
                  class: "avatar",
                  onClick: _cache[2] || (_cache[2] = ($event) => $setup.toggleMask("remove"))
                }, " - ")
              ])) : vue.createCommentVNode("v-if", true)
            ])
          ]),
          vue.createElementVNode("ul", {
            class: "content list space-top",
            onClick: _cache[5] || (_cache[5] = ($event) => $setup.editLableName = "")
          }, [
            vue.createElementVNode("li", {
              class: "list-item",
              onClick: _cache[3] || (_cache[3] = ($event) => $setup.setCurrentTab("notification"))
            }, [
              vue.createElementVNode("aside", { class: "aside" }, [
                vue.createElementVNode(
                  "label",
                  { class: "label" },
                  vue.toDisplayString($setup.TUITranslateService.t(`TUIGroup.群公告`)),
                  1
                  /* TEXT */
                ),
                vue.createElementVNode(
                  "article",
                  { class: "article" },
                  vue.toDisplayString($setup.currentGroup.notification),
                  1
                  /* TEXT */
                )
              ]),
              vue.createVNode($setup["Icon"], {
                file: $setup.rightIcon,
                class: "end"
              }, null, 8, ["file"])
            ]),
            ($setup.isAdmin || $setup.isOwner) && $setup.isSetMuteTime ? (vue.openBlock(), vue.createElementBlock("li", {
              key: 0,
              class: "list-item",
              onClick: _cache[4] || (_cache[4] = ($event) => $setup.setCurrentTab("admin"))
            }, [
              vue.createElementVNode(
                "label",
                { class: "label" },
                vue.toDisplayString($setup.TUITranslateService.t(`TUIGroup.群管理`)),
                1
                /* TEXT */
              ),
              vue.createVNode($setup["Icon"], { file: $setup.rightIcon }, null, 8, ["file"])
            ])) : vue.createCommentVNode("v-if", true),
            vue.createElementVNode("li", { class: "list-item" }, [
              vue.createElementVNode(
                "label",
                { class: "label" },
                vue.toDisplayString($setup.TUITranslateService.t(`TUIGroup.群ID`)),
                1
                /* TEXT */
              ),
              vue.createElementVNode("div", { class: "groupID" }, [
                vue.createElementVNode(
                  "span",
                  { class: "span" },
                  vue.toDisplayString($setup.currentGroupID),
                  1
                  /* TEXT */
                )
              ])
            ]),
            vue.createElementVNode("li", { class: "list-item" }, [
              vue.createElementVNode(
                "label",
                { class: "label" },
                vue.toDisplayString($setup.TUITranslateService.t(`TUIGroup.群头像`)),
                1
                /* TEXT */
              ),
              vue.createElementVNode("img", {
                class: "avatar",
                src: $setup.currentGroup.avatar || "https://web.sdk.qcloud.com/im/demo/TUIkit/web/img/constomer.svg",
                onerror: "this.onerror=null;this.src='https://web.sdk.qcloud.com/im/demo/TUIkit/web/img/constomer.svg'"
              }, null, 8, ["src"])
            ]),
            vue.createElementVNode("li", { class: "list-item" }, [
              vue.createElementVNode(
                "label",
                { class: "label" },
                vue.toDisplayString($setup.TUITranslateService.t(`TUIGroup.群类型`)),
                1
                /* TEXT */
              ),
              vue.createElementVNode(
                "span",
                { class: "span" },
                vue.toDisplayString($setup.TUITranslateService.t(`TUIGroup.${$setup.typeName[$setup.currentGroup.type]}`)),
                1
                /* TEXT */
              )
            ]),
            vue.createElementVNode("li", { class: "list-item" }, [
              vue.createElementVNode(
                "label",
                { class: "label" },
                vue.toDisplayString($setup.TUITranslateService.t(`TUIGroup.加群方式`)),
                1
                /* TEXT */
              ),
              vue.createElementVNode(
                "span",
                { class: "span" },
                vue.toDisplayString($setup.TUITranslateService.t(
                  `TUIGroup.${$setup.typeName[$setup.currentGroup.joinOption]}`
                )),
                1
                /* TEXT */
              )
            ])
          ]),
          vue.createElementVNode("ul", { class: "footer list space-top" }, [
            $setup.currentSelfRole === "Owner" && $setup.groupMemberList.length > 1 ? (vue.openBlock(), vue.createElementBlock(
              "li",
              {
                key: 0,
                class: "list-item",
                onClick: _cache[6] || (_cache[6] = vue.withModifiers(($event) => $setup.toggleMask("changeOwner"), ["stop"]))
              },
              vue.toDisplayString($setup.TUITranslateService.t(`TUIGroup.转让群组`)),
              1
              /* TEXT */
            )) : vue.createCommentVNode("v-if", true),
            $setup.canIDissmissGroup ? (vue.openBlock(), vue.createElementBlock(
              "li",
              {
                key: 1,
                class: "list-item",
                onClick: _cache[7] || (_cache[7] = vue.withModifiers(($event) => $setup.dismissGroup($setup.currentGroup), ["stop"]))
              },
              vue.toDisplayString($setup.TUITranslateService.t(`TUIGroup.解散群聊`)),
              1
              /* TEXT */
            )) : (vue.openBlock(), vue.createElementBlock(
              "li",
              {
                key: 2,
                class: "list-item",
                onClick: _cache[8] || (_cache[8] = vue.withModifiers(($event) => $setup.quitGroup($setup.currentGroup), ["stop"]))
              },
              vue.toDisplayString($setup.TUITranslateService.t(`TUIGroup.退出群组`)),
              1
              /* TEXT */
            ))
          ])
        ])) : vue.createCommentVNode("v-if", true),
        $setup.currentTab === "member" ? (vue.openBlock(), vue.createBlock($setup["ManageMember"], {
          key: 2,
          self: $setup.currentGroup.selfInfo,
          list: $setup.groupMemberList,
          total: ~~$setup.currentGroup.memberCount,
          isShowDel: $setup.currentSelfRole === "Owner" && $setup.canDelMember,
          onMore: _cache[9] || (_cache[9] = ($event) => $setup.getMember("more")),
          onDel: $setup.submit,
          onHandleMemberProfileShow: $setup.handleMemberProfileShow,
          onClose: _cache[10] || (_cache[10] = ($event) => $setup.setCurrentTab(""))
        }, null, 8, ["self", "list", "total", "isShowDel"])) : vue.createCommentVNode("v-if", true),
        $setup.currentTab === "profile" ? (vue.openBlock(), vue.createBlock($setup["ManageProfile"], {
          key: 3,
          userInfo: $setup.currentMember,
          onClose: _cache[11] || (_cache[11] = ($event) => $setup.setCurrentTab(""))
        }, null, 8, ["userInfo"])) : vue.createCommentVNode("v-if", true),
        $setup.currentTab === "notification" ? (vue.openBlock(), vue.createBlock($setup["ManageNotification"], {
          key: 4,
          isAuthor: $setup.isOwner || $setup.isAdmin || $setup.isWorkGroup,
          data: $setup.currentGroup,
          onUpdate: $setup.updateProfile,
          onClose: _cache[12] || (_cache[12] = ($event) => $setup.setCurrentTab(""))
        }, null, 8, ["isAuthor", "data"])) : vue.createCommentVNode("v-if", true),
        $setup.currentTab === "admin" ? vue.withDirectives((vue.openBlock(), vue.createBlock($setup["ManageAdmin"], {
          key: 5,
          isSetMuteTime: $setup.isSetMuteTime,
          member: $setup.member,
          currentGroup: $setup.currentGroup,
          onAddAdmin: _cache[13] || (_cache[13] = ($event) => $setup.toggleMask("addAdmin")),
          onRemoveAdmin: _cache[14] || (_cache[14] = ($event) => $setup.toggleMask("removeAdmin")),
          onSetAllMuteTime: $setup.setAllMuteTime,
          onAddMute: _cache[15] || (_cache[15] = ($event) => $setup.toggleMask("addMute")),
          onRemoveMute: _cache[16] || (_cache[16] = ($event) => $setup.toggleMask("removeMute")),
          onClose: _cache[17] || (_cache[17] = ($event) => $setup.setCurrentTab(""))
        }, null, 8, ["isSetMuteTime", "member", "currentGroup"])), [
          [vue.vShow, $setup.isAdmin]
        ]) : vue.createCommentVNode("v-if", true),
        vue.createVNode($setup["MaskLayer"], {
          show: $setup.mask,
          "onUpdate:show": _cache[18] || (_cache[18] = (e2) => $setup.mask = e2)
        }, {
          default: vue.withCtx(() => [
            vue.createVNode($setup["Transfer"], {
              title: $setup.TUITranslateService.t(`TUIGroup.${$setup.transferTitle}`),
              list: $setup.transferList,
              isSearch: $setup.isSearch,
              isRadio: $setup.isRadio,
              selectedList: $setup.selectedList,
              isH5: !$setup.isPC,
              onSubmit: $setup.submit,
              onCancel: $setup.cancel,
              onSearch: $setup.handleSearchMember
            }, null, 8, ["title", "list", "isSearch", "isRadio", "selectedList", "isH5"])
          ]),
          _: 1
          /* STABLE */
        }, 8, ["show"]),
        vue.createVNode($setup["Dialog"], {
          class: "deleted-dialog",
          title: $setup.TUITranslateService.t(`TUIGroup.删除成员`),
          show: $setup.delDialogShow,
          isH5: !$setup.isPC,
          center: true,
          isHeaderShow: $setup.isPC,
          onSubmit: _cache[19] || (_cache[19] = ($event) => $setup.handleManage($setup.deletedUserList, "remove")),
          "onUpdate:show": _cache[20] || (_cache[20] = (e2) => $setup.delDialogShow = e2)
        }, {
          default: vue.withCtx(() => [
            $setup.deletedUserList.length === 1 ? (vue.openBlock(), vue.createElementBlock(
              "p",
              {
                key: 0,
                class: "del-dialog-title"
              },
              vue.toDisplayString($setup.TUITranslateService.t(`TUIGroup.确定从群聊中删除该成员？`)),
              1
              /* TEXT */
            )) : vue.createCommentVNode("v-if", true),
            $setup.deletedUserList.length > 1 ? (vue.openBlock(), vue.createElementBlock(
              "p",
              {
                key: 1,
                class: "del-dialog-title"
              },
              vue.toDisplayString($setup.TUITranslateService.t(`TUIGroup.确定从群聊中删除所选成员？`)),
              1
              /* TEXT */
            )) : vue.createCommentVNode("v-if", true)
          ]),
          _: 1
          /* STABLE */
        }, 8, ["title", "show", "isH5", "isHeaderShow"])
      ],
      512
      /* NEED_PATCH */
    );
  }
  const ManageGroup = /* @__PURE__ */ _export_sfc(_sfc_main$6, [["render", _sfc_render$5], ["__scopeId", "data-v-e56d1843"], ["__file", "C:/Users/Administrator/Desktop/Project Folder/ZXHand/ZXHandwritting_APP_uniapp/TUIKit/components/TUIGroup/manage-group/index.vue"]]);
  const _sfc_main$5 = /* @__PURE__ */ vue.defineComponent({
    __name: "index",
    setup(__props, { expose: __expose }) {
      __expose();
      const TUIContactServer2 = TUIGroupServer.getInstance();
      const TUIConstants = TUIContactServer2.constants;
      const needSearch = vue.ref(false);
      const memberList = vue.ref([]);
      const userList = vue.ref([]);
      const group = vue.ref({});
      const selectOptions = vue.ref({
        groupID: "",
        isRadio: false,
        isNeedSearch: false,
        title: "",
        filterUserIDList: []
      });
      const TUISearchServer2 = vue.ref(null);
      const generateSearchServer = (isNeedSearch) => {
        TUISearchServer2.value = R$1.getService(TUIConstants.TUISearch.SERVICE.NAME);
        if (TUISearchServer2.value) {
          needSearch.value = isNeedSearch;
        } else {
          formatAppLog("warn", "at TUIKit/components/TUIGroup/select-member/index.vue:41", "请添加 TUISearch 组件");
        }
      };
      vue.watchEffect(() => {
        const params = TUIContactServer2.getOnCallParams(TUIConstants.TUIContact.SERVICE.METHOD.SELECT_FRIEND);
        selectOptions.value.groupID = params.groupID;
        selectOptions.value.title = params.title;
        selectOptions.value.isRadio = params.isRadio;
        selectOptions.value.isNeedSearch = params.isNeedSearch;
        selectOptions.value.filterUserIDList = params.filterUserIDList;
        if (params.isNeedSearch) {
          generateSearchServer(params.isNeedSearch);
        }
      });
      zt.watch(o$2.GRP, {
        currentGroup: (data) => {
          group.value = data;
        },
        currentGroupMemberList: (List) => {
          memberList.value = List.map((item) => {
            if (selectOptions.value.filterUserIDList.indexOf(item.userID) > -1) {
              item.isDisabled = true;
            }
          });
          userList.value = memberList.value;
        }
      });
      const getMember = async () => {
        const groupID = group.value.groupID;
        const options = {
          groupID,
          count: 100,
          offset: memberList.value.length
        };
        await Qt.getGroupMemberList(options);
      };
      const handleSelectedResult = (memberList2) => {
        zt.update(o$2.GRP, "isShowSelectComponent", false);
        const callback = TUIContactServer2.getOnCallCallback(TUIConstants.TUIGroup.SERVICE.METHOD.SELECT_GROUP_MEMBER);
        callback && callback(memberList2);
      };
      const searchFail = () => {
        Toast({
          message: Jt.t("TUIGroup.该用户不存在"),
          type: TOAST_TYPE.ERROR
        });
        userList.value = [...memberList.value];
      };
      const handleSearch = async (val) => {
        if (!val) {
          return userList.value = memberList.value;
        }
        try {
          const imResponse = await TUISearchServer2.value.searchGroupMember(val);
          if (!imResponse.data[0]) {
            return searchFail();
          }
          userList.value = imResponse.data;
          const searchAllResult = memberList.value.filter((item) => item.userID === imResponse.data[0].userID);
          memberList.value = searchAllResult.length ? memberList.value : [...memberList.value, ...userList.value];
        } catch (error2) {
          return searchFail();
        }
      };
      const __returned__ = { TUIContactServer: TUIContactServer2, TUIConstants, needSearch, memberList, userList, group, selectOptions, TUISearchServer: TUISearchServer2, generateSearchServer, getMember, handleSelectedResult, searchFail, handleSearch, SelectUser };
      Object.defineProperty(__returned__, "__isScriptSetup", { enumerable: false, value: true });
      return __returned__;
    }
  });
  function _sfc_render$4(_ctx, _cache, $props, $setup, $data, $options) {
    return vue.openBlock(), vue.createBlock($setup["SelectUser"], {
      isRadio: $setup.selectOptions.isRadio,
      isNeedSearch: $setup.selectOptions.isNeedSearch,
      title: $setup.selectOptions.title,
      userList: $setup.userList,
      total: $setup.group.memberCount,
      onGetMore: $setup.getMember,
      onSearch: $setup.handleSearch,
      onComplete: $setup.handleSelectedResult
    }, null, 8, ["isRadio", "isNeedSearch", "title", "userList", "total"]);
  }
  const SelectMember = /* @__PURE__ */ _export_sfc(_sfc_main$5, [["render", _sfc_render$4], ["__file", "C:/Users/Administrator/Desktop/Project Folder/ZXHand/ZXHandwritting_APP_uniapp/TUIKit/components/TUIGroup/select-member/index.vue"]]);
  const _sfc_main$4 = /* @__PURE__ */ vue.defineComponent({
    __name: "index",
    setup(__props, { expose: __expose }) {
      __expose();
      const isShowCreateGroup = vue.ref(false);
      const isShowManageGroup = vue.ref(false);
      const isShowSelectMember = vue.ref(false);
      zt.watch(o$2.GRP, {
        isShowCreateComponent: (data) => {
          if (data) {
            isShowCreateGroup.value = true;
          } else {
            isShowCreateGroup.value = false;
          }
        },
        isShowManageComponent: (data) => {
          if (data) {
            isShowManageGroup.value = true;
          } else {
            isShowManageGroup.value = false;
          }
        },
        isShowSelectComponent: (data) => {
          if (data) {
            isShowSelectMember.value = true;
          } else {
            isShowSelectMember.value = false;
          }
        }
      });
      const __returned__ = { isShowCreateGroup, isShowManageGroup, isShowSelectMember, CreateGroup, ManageGroup, SelectMember };
      Object.defineProperty(__returned__, "__isScriptSetup", { enumerable: false, value: true });
      return __returned__;
    }
  });
  function _sfc_render$3(_ctx, _cache, $props, $setup, $data, $options) {
    return vue.openBlock(), vue.createElementBlock(
      "div",
      {
        class: vue.normalizeClass([($setup.isShowCreateGroup || $setup.isShowManageGroup || $setup.isShowSelectMember) && "tui-group"])
      },
      [
        $setup.isShowCreateGroup ? (vue.openBlock(), vue.createBlock($setup["CreateGroup"], { key: 0 })) : vue.createCommentVNode("v-if", true),
        $setup.isShowManageGroup ? (vue.openBlock(), vue.createBlock($setup["ManageGroup"], { key: 1 })) : vue.createCommentVNode("v-if", true),
        $setup.isShowSelectMember ? (vue.openBlock(), vue.createBlock($setup["SelectMember"], { key: 2 })) : vue.createCommentVNode("v-if", true)
      ],
      2
      /* CLASS */
    );
  }
  const TUIGroup$3 = /* @__PURE__ */ _export_sfc(_sfc_main$4, [["render", _sfc_render$3], ["__scopeId", "data-v-61238656"], ["__file", "C:/Users/Administrator/Desktop/Project Folder/ZXHand/ZXHandwritting_APP_uniapp/TUIKit/components/TUIGroup/index.vue"]]);
  const _sfc_main$3 = {
    data() {
      return {
        // messList: [], // 初始化为空数组
        infoList: [],
        // 初始化为空数组
        statusBarHeight: ""
      };
    },
    onLoad() {
      this.statusBarHeight = getApp().globalData.top;
      this.loadNoticeList();
    },
    methods: {
      goback() {
        uni.navigateBack();
      },
      async adverbtn(event, index2) {
        formatAppLog("log", "at pages/pagesall/home/informationDetails.vue:59", event, index2);
        const selectedNotice = this.infoList[index2];
        formatAppLog("log", "at pages/pagesall/home/informationDetails.vue:61", selectedNotice.id);
        uni.navigateTo({
          url: `/pages/pagesall/home/informationDetailsmess?id=${selectedNotice.id}`
        });
      },
      mycode() {
        uni.navigateTo({
          url: "/pages/pagesall/home/mycode"
        });
      },
      async loadNoticeList() {
        try {
          const store = useStore();
          this.infoList = store.infoList;
          formatAppLog("log", "at pages/pagesall/home/informationDetails.vue:75", "+++++++++++", this.infoList);
        } catch (error2) {
          formatAppLog("error", "at pages/pagesall/home/informationDetails.vue:77", "获取公告消息失败:", error2);
        }
      }
    }
  };
  function _sfc_render$2(_ctx, _cache, $props, $setup, $data, $options) {
    return vue.openBlock(), vue.createElementBlock("view", { class: "codepage" }, [
      vue.createElementVNode(
        "view",
        {
          style: vue.normalizeStyle("height:" + ($data.statusBarHeight + 5) + "px;")
        },
        null,
        4
        /* STYLE */
      ),
      vue.createElementVNode("view", { class: "code_titlebox" }, [
        vue.createElementVNode("view", {
          class: "messImg",
          onClick: _cache[0] || (_cache[0] = (...args) => $options.goback && $options.goback(...args))
        }, [
          vue.createElementVNode("img", {
            src: "https://lanhu.oss-cn-beijing.aliyuncs.com/SketchPng427bd6433cc6e0a8e82f63b3174b2c817dc9c299bd0c4414c8d258f46cf46f94",
            alt: ""
          })
        ]),
        vue.createElementVNode("view", { class: "code_title" }, " 资讯 ")
      ]),
      $data.infoList.length > 0 ? (vue.openBlock(true), vue.createElementBlock(
        vue.Fragment,
        { key: 0 },
        vue.renderList($data.infoList, (item, index2) => {
          return vue.openBlock(), vue.createElementBlock("view", {
            class: "adverbox",
            key: index2
          }, [
            vue.createElementVNode("view", { class: "adver_time" }, [
              vue.createElementVNode("view", {
                class: "adver_hour",
                style: { "text-align": "center", "font-weight": "400", "font-size": "20rpx", "color": "#000000", "margin": "28rpx 0 28rpx 0" }
              }, [
                vue.createElementVNode(
                  "text",
                  null,
                  vue.toDisplayString(item.month),
                  1
                  /* TEXT */
                ),
                vue.createElementVNode(
                  "text",
                  { style: { "margin-left": "20rpx" } },
                  vue.toDisplayString(item.hour),
                  1
                  /* TEXT */
                )
              ]),
              vue.createElementVNode("view", { class: "adver_content" }, [
                vue.createElementVNode(
                  "view",
                  { class: "adver_text1" },
                  vue.toDisplayString(item.title),
                  1
                  /* TEXT */
                ),
                vue.createElementVNode("view", null, [
                  vue.createElementVNode("image", {
                    src: item.thumb,
                    mode: "scaleToFill"
                  }, null, 8, ["src"])
                ]),
                vue.createElementVNode(
                  "view",
                  { class: "adver_text2" },
                  vue.toDisplayString(item.description),
                  1
                  /* TEXT */
                ),
                vue.createElementVNode("view", { class: "line" }, [
                  vue.createElementVNode("img", {
                    src: "https://lanhu.oss-cn-beijing.aliyuncs.com/SketchPng754b004becd9b25a8ebdc9d2cb98f423d3fa6fdf022dd0a97d950d38fe548f62",
                    alt: ""
                  })
                ]),
                vue.createElementVNode("view", {
                  class: "adver_btn",
                  onClick: ($event) => $options.adverbtn(_ctx.event, index2)
                }, " 查看详情 ", 8, ["onClick"])
              ])
            ])
          ]);
        }),
        128
        /* KEYED_FRAGMENT */
      )) : (vue.openBlock(), vue.createElementBlock("view", {
        key: 1,
        class: "kong",
        style: { "display": "flex", "justify-content": "center", "align-items": "center", "height": "100vh" }
      }, [
        vue.createElementVNode("image", {
          style: { "margin-top": "-600rpx" },
          src: _imports_0$5,
          mode: "aspectFit"
        })
      ]))
    ]);
  }
  const PagesPagesallHomeInformationDetails = /* @__PURE__ */ _export_sfc(_sfc_main$3, [["render", _sfc_render$2], ["__scopeId", "data-v-325c92fb"], ["__file", "C:/Users/Administrator/Desktop/Project Folder/ZXHand/ZXHandwritting_APP_uniapp/pages/pagesall/home/informationDetails.vue"]]);
  const _sfc_main$2 = {
    data() {
      return {
        messageList: [],
        // 存储消息列表
        selectedMessage: null,
        // 存储选中的公告
        statusBarHeight: ""
      };
    },
    onLoad(options) {
      this.statusBarHeight = getApp().globalData.top;
      const store = useStore();
      this.messageList = store.infoList;
      const messageId = options.id;
      this.selectedMessage = this.messageList.find((message2) => message2.id.toString() === messageId.toString());
      formatAppLog("log", "at pages/pagesall/home/informationDetailsmess.vue:52", this.selectedMessage);
    },
    methods: {
      goback() {
        uni.navigateBack();
      }
    }
  };
  function _sfc_render$1(_ctx, _cache, $props, $setup, $data, $options) {
    return vue.openBlock(), vue.createElementBlock("view", { class: "code_page" }, [
      vue.createElementVNode(
        "view",
        {
          style: vue.normalizeStyle("height:" + ($data.statusBarHeight + 5) + "px;")
        },
        null,
        4
        /* STYLE */
      ),
      vue.createElementVNode("view", { class: "code_titlebox" }, [
        vue.createElementVNode("view", {
          class: "messImg",
          onClick: _cache[0] || (_cache[0] = (...args) => $options.goback && $options.goback(...args))
        }, [
          vue.createElementVNode("img", {
            src: "https://lanhu.oss-cn-beijing.aliyuncs.com/SketchPng427bd6433cc6e0a8e82f63b3174b2c817dc9c299bd0c4414c8d258f46cf46f94",
            alt: ""
          })
        ]),
        vue.createElementVNode(
          "view",
          { class: "code_title" },
          vue.toDisplayString($data.selectedMessage.title),
          1
          /* TEXT */
        )
      ]),
      vue.createElementVNode("view", { class: "detail_title" }, [
        vue.createElementVNode("text", { style: { "font-weight": "500", "font-size": "32rpx", "color": "#000000", "width": "70%", "overflow": "hidden", "white-space": "nowrap", "text-overflow": "ellipsis" } }),
        vue.createElementVNode("view", { class: "detail_time" }, [
          vue.createElementVNode(
            "view",
            { class: "time_1" },
            vue.toDisplayString($data.selectedMessage.addtime),
            1
            /* TEXT */
          ),
          vue.createCommentVNode(' <view class="time_2">\n          {{mours}}\n        </view> ')
        ])
      ]),
      vue.createElementVNode("div", {
        class: "detail_box",
        innerHTML: $data.selectedMessage.content
      }, null, 8, ["innerHTML"])
    ]);
  }
  const PagesPagesallHomeInformationDetailsmess = /* @__PURE__ */ _export_sfc(_sfc_main$2, [["render", _sfc_render$1], ["__file", "C:/Users/Administrator/Desktop/Project Folder/ZXHand/ZXHandwritting_APP_uniapp/pages/pagesall/home/informationDetailsmess.vue"]]);
  const _sfc_main$1 = {
    data() {
      return {
        statusBarHeight: "",
        temworkList: [
          {
            img: "https://lanhu-dds-backend.oss-cn-beijing.aliyuncs.com/merge_image/imgs/ea7d95474d6a417b957c39bcd0690a48_mergeImage.png",
            title: '硬比书法"三点水"书写',
            teacher: "讲师:李晓华",
            date: "6-22"
          },
          {
            img: "https://lanhu-dds-backend.oss-cn-beijing.aliyuncs.com/merge_image/imgs/ea7d95474d6a417b957c39bcd0690a48_mergeImage.png",
            title: '硬比书法"三点水"书写',
            teacher: "讲师:李晓华",
            date: "6-22"
          }
        ],
        workList: [
          {
            img: "https://lanhu-dds-backend.oss-cn-beijing.aliyuncs.com/merge_image/imgs/ea7d95474d6a417b957c39bcd0690a48_mergeImage.png",
            title: "有进步继续努力",
            teacher: "审阅:李晓华老师"
          },
          {
            img: "https://lanhu-dds-backend.oss-cn-beijing.aliyuncs.com/merge_image/imgs/ea7d95474d6a417b957c39bcd0690a48_mergeImage.png",
            title: "有进步继续努力",
            teacher: "审阅:李晓华老师"
          },
          {
            img: "https://lanhu-dds-backend.oss-cn-beijing.aliyuncs.com/merge_image/imgs/ea7d95474d6a417b957c39bcd0690a48_mergeImage.png",
            title: "有进步继续努力",
            teacher: "审阅:李晓华老师"
          },
          {
            img: "https://lanhu-dds-backend.oss-cn-beijing.aliyuncs.com/merge_image/imgs/ea7d95474d6a417b957c39bcd0690a48_mergeImage.png",
            title: "有进步继续努力",
            teacher: "审阅:李晓华老师"
          }
        ]
      };
    },
    onLoad() {
      this.statusBarHeight = getApp().globalData.top;
    },
    mounted() {
      this.loadMyTemporaryHomework();
    },
    methods: {
      async loadMyTemporaryHomework() {
        try {
          const response = await fetchMyCourseList();
          this.temworkList = response.items || [];
          formatAppLog("log", "at pages/pagesall/mypage/myCourses.vue:121", "教师信息:", this.temworkList);
        } catch (error2) {
          formatAppLog("error", "at pages/pagesall/mypage/myCourses.vue:123", "获取教学消息失败:", error2);
        }
      },
      work_goback() {
        uni.navigateBack();
      }
    }
  };
  function _sfc_render(_ctx, _cache, $props, $setup, $data, $options) {
    return vue.openBlock(), vue.createElementBlock(
      vue.Fragment,
      null,
      [
        vue.createElementVNode("view", { class: "homework_Title" }, [
          vue.createElementVNode(
            "view",
            {
              style: vue.normalizeStyle("height:" + ($data.statusBarHeight + 5) + "px;")
            },
            null,
            4
            /* STYLE */
          ),
          vue.createElementVNode("view", {
            class: "homeworkImg",
            onClick: _cache[0] || (_cache[0] = (...args) => $options.work_goback && $options.work_goback(...args))
          }, [
            vue.createElementVNode("img", {
              src: "https://lanhu.oss-cn-beijing.aliyuncs.com/SketchPng427bd6433cc6e0a8e82f63b3174b2c817dc9c299bd0c4414c8d258f46cf46f94",
              alt: ""
            })
          ]),
          vue.createElementVNode("view", { class: "homework_Title_text" }, " 我的课程 ")
        ]),
        vue.createElementVNode("swiper", {
          class: "swiper-container",
          "indicator-dots": "",
          autoplay: "",
          interval: "3000",
          circular: "",
          "indicator-color": "#ddd",
          "indicator-active-color": "#333"
        }, [
          (vue.openBlock(true), vue.createElementBlock(
            vue.Fragment,
            null,
            vue.renderList(_ctx.images, (item, index2) => {
              return vue.openBlock(), vue.createElementBlock("swiper-item", {
                key: index2,
                onClick: () => _ctx.swiper_click(index2 + 1)
              }, [
                vue.createElementVNode("image", {
                  src: item.thumb,
                  class: "swiper-image"
                }, null, 8, ["src"])
              ], 8, ["onClick"]);
            }),
            128
            /* KEYED_FRAGMENT */
          ))
        ]),
        vue.createElementVNode("view", { class: "homeworktbox" }, [
          vue.createElementVNode("text", { class: "box-text1" }, "最近在看")
        ]),
        vue.createElementVNode("view", { class: "tem-list" }, [
          (vue.openBlock(true), vue.createElementBlock(
            vue.Fragment,
            null,
            vue.renderList($data.temworkList, (item, index2) => {
              return vue.openBlock(), vue.createElementBlock("view", {
                class: "temlist",
                key: index2
              }, [
                vue.createElementVNode("view", { class: "temlistImg" }, [
                  vue.createElementVNode("img", {
                    src: item.sub_image,
                    alt: ""
                  }, null, 8, ["src"])
                ]),
                vue.createElementVNode(
                  "view",
                  { class: "temlistText1" },
                  vue.toDisplayString(item.content),
                  1
                  /* TEXT */
                ),
                vue.createElementVNode("view", { class: "temlistText2" }, [
                  vue.createElementVNode(
                    "text",
                    null,
                    "讲师：" + vue.toDisplayString(item.teacher_name),
                    1
                    /* TEXT */
                  ),
                  vue.createElementVNode(
                    "text",
                    null,
                    vue.toDisplayString((new Date(item.finish_time).getMonth() + 1).toString().padStart(2, "0") + "-" + new Date(item.finish_time).getDate().toString().padStart(2, "0")),
                    1
                    /* TEXT */
                  )
                ])
              ]);
            }),
            128
            /* KEYED_FRAGMENT */
          ))
        ]),
        vue.createElementVNode("view", { class: "homeworktbox" }, [
          vue.createElementVNode("text", { class: "box-text1" }, "最新解锁")
        ]),
        vue.createElementVNode("view", { class: "tem-list" }, [
          (vue.openBlock(true), vue.createElementBlock(
            vue.Fragment,
            null,
            vue.renderList($data.workList, (item, index2) => {
              return vue.openBlock(), vue.createElementBlock("view", {
                class: "temlist",
                key: index2
              }, [
                vue.createElementVNode("view", { class: "temlistImg" }, [
                  vue.createElementVNode("img", {
                    src: item.img,
                    alt: ""
                  }, null, 8, ["src"])
                ]),
                vue.createElementVNode(
                  "view",
                  { class: "temlistText1" },
                  vue.toDisplayString(item.title),
                  1
                  /* TEXT */
                ),
                vue.createElementVNode("view", { class: "boxlistText3" }, [
                  vue.createElementVNode("text", { class: "boxlistText4" }, "优秀")
                ]),
                vue.createElementVNode("view", { class: "temlistText2" }, [
                  vue.createElementVNode(
                    "text",
                    null,
                    vue.toDisplayString(item.teacher),
                    1
                    /* TEXT */
                  )
                ])
              ]);
            }),
            128
            /* KEYED_FRAGMENT */
          ))
        ])
      ],
      64
      /* STABLE_FRAGMENT */
    );
  }
  const PagesPagesallMypageMyCourses = /* @__PURE__ */ _export_sfc(_sfc_main$1, [["render", _sfc_render], ["__file", "C:/Users/Administrator/Desktop/Project Folder/ZXHand/ZXHandwritting_APP_uniapp/pages/pagesall/mypage/myCourses.vue"]]);
  __definePage("pages/index/index", PagesIndexIndex);
  __definePage("pages/login/login", PagesLoginLogin);
  __definePage("pages/login/ratpass", PagesLoginRatpass);
  __definePage("pages/login/register", PagesLoginRegister);
  __definePage("pages/pagesall/home", PagesPagesallHome);
  __definePage("pages/pagesall/course", PagesPagesallCourse);
  __definePage("pages/pagesall/aiDete", PagesPagesallAiDete);
  __definePage("pages/pagesall/oper", PagesPagesallOper);
  __definePage("pages/pagesall/mypage", PagesPagesallMypage);
  __definePage("pages/pagesall/home/signUp", PagesPagesallHomeSignUp);
  __definePage("pages/pagesall/home/message", PagesPagesallHomeMessage);
  __definePage("pages/pagesall/home/search", PagesPagesallHomeSearch);
  __definePage("pages/pagesall/home/sacnpage", PagesPagesallHomeSacnpage);
  __definePage("pages/pagesall/home/mycode", PagesPagesallHomeMycode);
  __definePage("pages/pagesall/home/adverMess", PagesPagesallHomeAdverMess);
  __definePage("pages/pagesall/home/adver_detail", PagesPagesallHomeAdverDetail);
  __definePage("pages/pagesall/home/add_friend", PagesPagesallHomeAddFriend);
  __definePage("pages/pagesall/home/game", PagesPagesallHomeGame);
  __definePage("pages/pagesall/home/chat", PagesPagesallHomeChat);
  __definePage("pages/pagesall/course/go_learn", PagesPagesallCourseGoLearn);
  __definePage("pages/pagesall/aiDete/aiResult", PagesPagesallAiDeteAiResult);
  __definePage("pages/pagesall/SelectCity", PagesPagesallSelectCity);
  __definePage("pages/pagesall/mypage/PersonalData", PagesPagesallMypagePersonalData);
  __definePage("pages/pagesall/mypage/Set", PagesPagesallMypageSet);
  __definePage("pages/pagesall/mypage/changePassword", PagesPagesallMypageChangePassword);
  __definePage("pages/pagesall/mypage/changePhone", PagesPagesallMypageChangePhone);
  __definePage("pages/pagesall/mypage/complaint", PagesPagesallMypageComplaint);
  __definePage("pages/pagesall/mypage/contactUs", PagesPagesallMypageContactUs);
  __definePage("pages/pagesall/mypage/aboutUs", PagesPagesallMypageAboutUs);
  __definePage("pages/pagesall/mypage/classGroup", PagesPagesallMypageClassGroup);
  __definePage("pages/pagesall/mypage/historyAssessment", PagesPagesallMypageHistoryAssessment);
  __definePage("pages/pagesall/mypage/AIhist", PagesPagesallMypageAIhist);
  __definePage("pages/pagesall/mypage/teacherHist", PagesPagesallMypageTeacherHist);
  __definePage("pages/pagesall/mypage/myHomework", PagesPagesallMypageMyHomework);
  __definePage("pages/pagesall/mypage/individualmsg", PagesPagesallMypageIndividualmsg);
  __definePage("pages/pagesall/mypage/correction", PagesPagesallMypageCorrection);
  __definePage("pages/pagesall/mypage/teachermsg", PagesPagesallMypageTeachermsg);
  __definePage("TUIKit/components/TUIConversation/index", TUIConversation$3);
  __definePage("TUIKit/components/TUIChat/index", TUIChat$3);
  __definePage("TUIKit/components/TUIContact/index", TUIContact$3);
  __definePage("pages/views/profile", PagesViewsProfile);
  __definePage("TUIKit/components/TUIChat/video-play", TUIKitComponentsTUIChatVideoPlay);
  __definePage("TUIKit/components/TUIChat/web-view", TUIKitComponentsTUIChatWebView);
  __definePage("TUIKit/components/TUIGroup/index", TUIGroup$3);
  __definePage("TUIKit/components/TUISearch/index", TUISearch$3);
  __definePage("pages/pagesall/home/informationDetails", PagesPagesallHomeInformationDetails);
  __definePage("pages/pagesall/home/informationDetailsmess", PagesPagesallHomeInformationDetailsmess);
  __definePage("pages/pagesall/mypage/myCourses", PagesPagesallMypageMyCourses);
  class CallkitPluginServer {
    constructor() {
      R$1.registerEvent(E$1.TUILogin.EVENT.LOGIN_STATE_CHANGED, E$1.TUILogin.EVENT_SUB_KEY.USER_LOGIN_SUCCESS, this);
      R$1.registerService(E$1.TUICalling.SERVICE.NAME, this);
      R$1.registerExtension(E$1.TUIChat.EXTENSION.INPUT_MORE.EXT_ID, this);
    }
    /**
     * Listen for the successful notification of TUILogin.login and then log in with callkit
     */
    onNotifyEvent(eventName, subKey) {
      if (eventName === E$1.TUILogin.EVENT.LOGIN_STATE_CHANGED) {
        let SDKAppID2, userID, userSig, context;
        switch (subKey) {
          case E$1.TUILogin.EVENT_SUB_KEY.USER_LOGIN_SUCCESS:
            context = A.getContext();
            SDKAppID2 = context.SDKAppID;
            userID = context.userID;
            userSig = context.userSig;
            i.$TUICallKit && i.$TUICallKit.login({
              SDKAppID: SDKAppID2,
              userID,
              userSig
            }, (res) => {
              if (res.code === 0) {
                formatAppLog("log", "at TUIKit/plugins/extension-server/callkit.ts:32", "TUICallkit login success!");
                i.$TUICallKit.enableFloatWindow(true);
              } else {
                formatAppLog("error", "at TUIKit/plugins/extension-server/callkit.ts:36", `TUICallkit login failed,${res.msg}`);
              }
            });
            break;
        }
      }
    }
    /**
     * Native plugin callkit implements onGetExtension method
     */
    onGetExtension(extensionID, params) {
      if (!i.$TUICallKit) {
        formatAppLog("warn", "at TUIKit/plugins/extension-server/callkit.ts:49", "请检查原生插件 TencentCloud-TUICallKit 是否已集成");
        return [];
      }
      if (extensionID === E$1.TUIChat.EXTENSION.INPUT_MORE.EXT_ID) {
        const list = [];
        const voiceCallExtension = {
          weight: 1e3,
          text: "语音通话",
          icon: "https://web.sdk.qcloud.com/component/TUIKit/assets/call.png",
          data: {
            name: "voiceCall"
          },
          listener: {
            onClicked: (options) => {
              this.setCallExtension(options);
            }
          }
        };
        const videoCallExtension = {
          weight: 900,
          text: "视频通话",
          icon: "https://web.sdk.qcloud.com/component/TUIKit/assets/call-video-reverse.svg",
          data: {
            name: "videoCall"
          },
          listener: {
            onClicked: (options) => {
              this.setCallExtension(options);
            }
          }
        };
        if (!(params == null ? void 0 : params.filterVoice)) {
          list.push(voiceCallExtension);
        }
        if (!(params == null ? void 0 : params.filterVideo)) {
          list.push(videoCallExtension);
        }
        return list;
      }
    }
    /**
     * Native plugin callkit implements onCall method
     */
    onCall(method, params) {
      if (!i.$TUICallKit) {
        formatAppLog("warn", "at TUIKit/plugins/extension-server/callkit.ts:95", "请检查原生插件 TencentCloud-TUICallKit 是否已集成");
        return;
      }
      if (method === E$1.TUICalling.SERVICE.METHOD.START_CALL) {
        const { groupID = void 0, userIDList = [], type, callParams } = params;
        if (groupID) {
          i.$TUICallKit.groupCall({
            groupID,
            userIDList,
            callMediaType: type,
            callParams
          }, (res) => {
            if (res.code === 0) {
              formatAppLog("log", "at TUIKit/plugins/extension-server/callkit.ts:108", "TUICallkit groupCall success");
            } else {
              formatAppLog("error", "at TUIKit/plugins/extension-server/callkit.ts:110", `TUICallkit groupCall failed,${res.msg}`);
            }
          });
        } else if (userIDList.length === 1) {
          i.$TUICallKit.call(
            {
              userID: userIDList[0],
              callMediaType: type,
              callParams
            },
            (res) => {
              if (res.code === 0) {
                formatAppLog("log", "at TUIKit/plugins/extension-server/callkit.ts:122", "TUICallkit call success");
              } else {
                formatAppLog("log", "at TUIKit/plugins/extension-server/callkit.ts:124", `TUICallkit call failed,${res.msg}`);
              }
            }
          );
        }
      }
    }
    setCallExtension(options) {
      const { groupID = void 0, userIDList = [], type, callParams } = options;
      try {
        if (groupID) {
          i.$TUICallKit.groupCall({
            groupID,
            userIDList,
            callMediaType: type,
            callParams
          }, (res) => {
            if (res.code === 0) {
              formatAppLog("log", "at TUIKit/plugins/extension-server/callkit.ts:143", "TUICallkit groupCall success");
            } else {
              formatAppLog("log", "at TUIKit/plugins/extension-server/callkit.ts:145", `TUICallkit groupCall failed,${res.msg}`);
            }
          });
        } else if (userIDList.length === 1) {
          i.$TUICallKit.call(
            {
              userID: userIDList[0],
              callMediaType: type,
              callParams
            },
            (res) => {
              if (res.code === 0) {
                formatAppLog("log", "at TUIKit/plugins/extension-server/callkit.ts:158", "TUICallkit call success");
              } else {
                formatAppLog("log", "at TUIKit/plugins/extension-server/callkit.ts:160", `TUICallkit call failed,${res.msg}`);
              }
            }
          );
        }
      } catch (error2) {
        i.showToast({
          title: "拨打失败！",
          icon: "error"
        });
      }
    }
  }
  const TUIChat$2 = {
    "【安全提示】本 APP 仅用于体验腾讯云即时通信 IM 产品功能，不可用于业务洽谈与拓展。请勿轻信汇款、中奖等涉及钱款的信息，勿轻易拨打陌生电话，谨防上当受骗。": "【Security Tips】This APP is only used to experience the functions of Tencent Cloud Instant Messaging products, and cannot be used for business negotiation and expansion. Don't trust money-related information such as remittances and lottery wins, don't make unfamiliar phone calls easily, and beware of being deceived.",
    "按Enter发送，Ctrl+Enter换行": "Press Enter to send a message and Ctrl+Enter to start a new line",
    "表情": "[Face]",
    "查看更多": "View more",
    "撤回": "Recall",
    "撤回了一条消息": " recalled a message",
    "打开": "Open",
    "单击下载": "Click download",
    "点此投诉": "Complain",
    "点击处理": "Click action",
    "对方正在输入": "Typing...",
    "发起群视频": "Make group video call",
    "发起群语音": "Make group voice call",
    "发起通话": "Start Call",
    "发送失败": "send failed",
    "复制": "Copy",
    "该消息不存在": "The message does not exist",
    "关闭阅读状态": "Read status closed",
    "管理员开启全员禁言": "The admin enables Mute All",
    "欢迎使用TUICallKit": "Welcome to TUICallKit",
    "回到最新位置": "Back to the latest location",
    "回复": "Reply",
    "回复详情": "Replies",
    "集成TUICallKit": " Integrate TUICallKit ",
    "检测到您暂未集成TUICallKit，无法体验音视频通话功能": "It is detected that you have not integrated TUI CallKit yet, so you cannot experience the audio and video call. ",
    "结束群聊": "Edit Group Call",
    "进行体验": "to experience.",
    "经度": "Longitude",
    "拒绝": "Reject",
    "拒绝通话": "Decline Call",
    "开通腾讯实时音视频服务": "Integration Tencent Real-Time Communication",
    "聊天记录": "[Chat history]",
    "描述": "Description",
    "内容包含敏感词汇": "Content contains sensitive words",
    "您": "You",
    "您当前购买使用的套餐包暂未开通此功能": "The package you purchased does not support this ability.",
    "您当前购买使用的套餐包暂未开通群消息已读回执功能": "The package you purchased does not support the read receipt of group messages.",
    "您当前购买使用的套餐包暂未开通在线用户列表功能": "The package you purchased does not support the online user list.",
    "您已被管理员禁言": "You have been muted by the admin",
    "您有": "You have",
    "请点击": "Please click",
    "请输入消息": "Enter a message",
    "取消": "Cancel",
    "取消通话": "Cancel Call",
    "全部已读": "All read",
    "确定": "Submit",
    "确认重发该消息？": "Confirm to resend the message?",
    "人关闭阅读状态": " read status closed",
    "人未读": " unread",
    "人已读": " read",
    "删除": "Delete",
    "涉及敏感内容": "Sensitive content",
    "申请加入": "Application for join in",
    "视频": "[video]",
    "视频通话": "Video Call",
    "条回复": "replies",
    "条入群申请": "Item group application",
    "条新消息": " new messages",
    "通话时长": "Duration",
    "同意": "Agree",
    "图片": "[Image]",
    "图片消息失败,无效的图片格式": "Image message failed, invalid image format.",
    "纬度": "Latitude",
    "未读": "Unread",
    "位置": "[Location]",
    "文件": "[File]",
    "文件不存在,请检查文件路径是否正确": "The file does not exist, please check if the file path is correct.",
    "文件大小超出了限制,如果上传文件,最大限制是100MB": "The file size exceeds the limit; if uploading a file, the maximum limit is 100MB.",
    "文件消息失败,禁止发送违规封禁的文件": "File message failed, sending prohibited and banned files is not allowed.",
    "我": "I",
    "无法查看": "unable to view",
    "无法定位到原消息": "Unable to navigate to the original message",
    "无法收听": "unable to listen",
    "正在加载": "Loading...",
    "加载结束": "Load end",
    "无应答": "No Answer",
    "系统消息": "System message",
    "消息": "[message]",
    "消息或者资料中文本存在敏感内容,发送失败": "Sensitive content found in the message or information text, sending failed.",
    "消息详情": "Message Detail",
    "消息长度超出限制,消息长度不要超过12K": "Message length exceeds the limit; please keep the message length under 12K.",
    "消息中图片存在敏感内容,发送失败": " Sensitive content is found in the picture in the message, sending failed.",
    "选择提醒的人": "Select Contact",
    "已读": "Read",
    "已过撤回时限": "Withdrawal deadline has passed",
    "已接听": "Answered",
    "已拒绝": "Rejected",
    "已同意": "Approved",
    "引用": "Reference",
    "引用失败": "quote failed",
    "语音": "[Voice]",
    "语音通话": "Voice Call",
    "重新编辑": "Re-edit",
    "重新发送": "Resend",
    "转发": "Forward",
    "翻译": "Translate",
    "转文字": "Convert",
    "隐藏": "Hidden",
    "转发给": "Forward to",
    "自定义": "[custom message]",
    "自定义消息": "Custom message",
    "腾讯云 IM": "Tencent Cloud Chat",
    "空": "Empty",
    "文本包含本地审核拦截词": "Text contains local moderation blocking words",
    "按住说话": "Hold to speak",
    "抬起发送": "Release to send",
    "抬起取消": "Release to cancel",
    "正在录音": "Recording",
    "继续上滑可取消": "Continue to swipe to cancel",
    "松开手指 取消发送": "Release to cancel",
    "此机型暂不支持复制功能": "This model does not support the copy",
    "请开通翻译功能": "Please open the translation feature",
    "请开通语音转文字功能": "Please open the convert feature",
    "翻译中": "Translating",
    "转换中": "Converting",
    "由IM提供翻译支持": "support by IM",
    "所有人": "All",
    "已达到表情回应上限数量": "You have reached the max reaction limit",
    "等": "and others",
    "人": "users",
    "返回": "Back",
    "关闭": "Close",
    "多选": "Select",
    "合并转发": "Combine Forward",
    "逐条转发": "One-By-One Forward",
    "未选择消息": "No message selected",
    "[草稿]": "[Drafts]",
    "[消息]": "[Message]",
    "[文本]": "[Text]",
    "[自定义消息]": "[Custom Message]",
    "[图片]": "[Image]",
    "[音频]": "[Voice]",
    "[语音]": "[Voice]",
    "[视频]": "[Video]",
    "[文件]": "[File]",
    "[位置]": "[Location]",
    "[地理位置]": "[Location]",
    "[动画表情]": "[Animated Sticker]",
    "[群提示]": "[Group Tip]",
    "[群提示消息]": "[Group Notification]",
    "[聊天记录]": "[Chat History]",
    "引用内容已撤回": "The quoted message has been withdrawn",
    "群聊的聊天记录": "Chat history for Group Chat",
    "和": "and",
    "的聊天记录": "chat history",
    "请升级IMSDK到v2.10.1或更高版本查看此消息": "Please upgrade IMSDK to v2.10.1 or higher to view this message",
    "该群聊已被解散": "The group has been dismissed",
    "您已被管理员移出群聊": "You have been removed from the group by the admin.",
    "您已退出该群聊": "You have left the group."
  };
  const TUIConversation$2 = {
    "发起会话": "Start chat",
    "发起单聊": "New one-to-one chat",
    "发起群聊": "New group chat",
    "请输入userID": "Enter a user ID",
    "删除会话": "Delete",
    "删除后，将清空该聊天的消息记录": "Once deleted, all chat messages will be cleared.",
    "删除后，将清空该群聊的消息记录": "Once deleted, group chat history will be cleared.",
    "系统通知": "System notification",
    "置顶会话": "Pin",
    "取消置顶": "Unpin",
    "消息免打扰": "Mute Notifications",
    "取消免打扰": "Enable Notifications",
    "有人@我": "Someone @ me",
    "@所有人": "@All",
    "条": "strip",
    "我": "me",
    "网络异常，请您检查网络设置": "Network exception, please check the network settings",
    "您已被群管理员移出群聊": "You have been removed from the group chat by the group administrator",
    "该群聊已被解散": "The group chat has been disband",
    "您已退出该群聊": "You have left the group chat"
  };
  const TUIGroup$2 = {
    "输入groupID搜索": "Enter groupId search",
    "群名称": "Group name",
    "群ID": "Group ID",
    "加入群聊": "Join",
    "解散群聊": "Dissolution",
    "退出群聊": "Quit",
    "群类型": "Group type",
    "请填写验证信息": "Please fill in the verification information",
    "申请加入": "Apply Join",
    "群公告": "Group notice",
    "群成员": "Group member",
    "群管理": "Manage group",
    "好友工作群": "Work",
    "陌生人社交群": "Public",
    "临时会议群": "Meeting",
    "直播群": "AVChatRoom",
    "社群": "Community",
    "自由加入": "Join freely",
    "需要验证": "Require approval",
    "禁止加群": "Disallow group joining",
    "人": "",
    "确认": "Confirm",
    "群头像": "Group profile photo",
    "加群方式": "Group joining mode",
    "转让群组": "Transfer ownership",
    "退出群组": "Quit group",
    "群管理员": "Group admin",
    "全员禁言": "Mute All",
    "全员禁言开启后，只允许群主和管理员发言。": "If Mute All is enabled, only the group owner and admin can speak.",
    "单独禁言人员": "Mute a member",
    "删除成员": "Remove member",
    "确定从群聊中删除该成员？": "Are you sure you want to remove this member from the group chat?",
    "确定从群聊中删除所选成员？": "Are you sure you want to remove selected member(s) from the group chat?",
    "暂无公告": "No notice",
    "发布": "Post",
    "编辑": "Edit",
    "查看更多": "View more",
    "管理员": "Admin",
    "群主": "Group owner",
    "我": "me",
    "添加成员": "Add member",
    "新增管理员": "Add admin",
    "移除管理员": "Revoke admin",
    "新增禁言用户": "Add muted member",
    "移除禁言用户": "Remove muted member",
    "修改群聊名称": "Edit group name",
    "修改群聊名称后，将在群内通知其他成员": "After modifying the group chat name, other members will be notified in the group",
    "仅限中文、字母、数字和下划线，2-20个字": "Chinese, letters, numbers and underscores only, 2-20 words",
    "请先注册 TUIGroup 模块": "Please register the TUIGroup module first",
    "该用户不存在": "The user does not exist",
    "该用户不在群组内": "The user is not in the group",
    "添加群聊": "Add a group chat",
    "该群组不存在": "The group does not exist",
    "创建群聊，请注册 TUIGroup 模块": "To create a group chat, please register the TUIGroup module",
    "创建成功": "Creation successful",
    "发起多人会话（群聊）": "New group chat",
    "选填": "Optional",
    "取消": "Cancel",
    "创建": "Create",
    "类似普通微信群，创建后仅支持已在群内的好友邀请加群，且无需被邀请方同意或群主审批。详见": "Similar to a WeChat group. Users can join the group only via invitation by existing members. The invitation does not need to be agreed by the invitee or approved by the group owner. See the documentation for details.",
    "类似 QQ 群，创建后群主可以指定群管理员，用户搜索群 ID 发起加群申请后，需要群主或管理员审批通过才能入群。详见": "Similar to a QQ group. After a public group is created, the group owner can designate group admins. To join the group, a user needs to search the group ID and send a request, which needs to be approved by the group owner or an admin before the user can join the group. See the documentation for details. ",
    "创建后可以随意进出，且支持查看入群前消息；适合用于音视频会议场景、在线教育场景等与实时音视频产品结合的场景。详见": "After the group is created, a user can join and quit the group freely and can view the messages sent before joining the group. It is suitable for scenarios that integrate Tencent Real-Time Communication (TRTC), such as audio and video conferences and online education. See the documentation for details.",
    "创建后可以随意进出，没有群成员数量上限，但不支持历史消息存储；适合与直播产品结合，用于弹幕聊天场景。详见": "After creation, a user can join and quit the group freely. The group can have an unlimited number of members, but it does not store message history. It can be combined with Live Video Broadcasting (LVB) to support on-screen comment scenarios. See the documentation for details. ",
    "创建后可以随意进出，最多支持100000人，支持历史消息存储，用户搜索群 ID 发起加群申请后，无需管理员审批即可进群。详见": "After creation, you can enter and leave at will, support up to 100,000 people, support historical message storage, and after users search for group ID and initiate a group application, they can join the group without administrator approval. See product documentation for details. ",
    "产品文档": "product documentation",
    "设置群名称": "Group name",
    "请输入群名称": "Enter the group name",
    "设置群ID": "Group ID",
    "请输入群ID": "Enter the group ID",
    "选择群类型": "Group type",
    "陌生人社交群（Public）": "Stranger social group (Public)",
    "临时会议群（Meeting）": "Temporary meeting group (Meeting)",
    "好友工作群（Work）": "Friends work group (Work)",
    "直播群（AVChatroom）": "Live Streaming Group (AVChatroom)",
    "社群（Community）": "Community（Community）",
    "群组创建成功": "Create group success",
    "群组解散成功": "Dismiss group success",
    "禁言设置成功": "Mute all success",
    "取消禁言成功": "Remove mute success",
    "群名称不能为空": "Group name cannot be empty",
    "群名称修改成功": "Group name modified success",
    "群公告字数超出限制，最大长度为150": "The number of characters in the group announcement exceeds the limit, the maximum length is 150"
  };
  const TUIContact$2 = {
    "群聊通知": "Group Chat Notifications",
    "系统通知": "System Notifications",
    "我的群聊": "My Group Chats",
    "输入ID": "Enter a groupID/userID",
    "群名称": "Group name",
    "群ID": "Group ID",
    "加入群聊": "Join group chat",
    "解散群聊": "Disband group chat",
    "退出群聊": "Quit group chat",
    "进入群聊": "Enter group chat",
    "群类型": "Group type",
    "请填写验证信息": "Enter the verification info",
    "申请加入": "Request to join",
    "已申请": "Requested",
    "接受": "Accept",
    "拒绝": "Refuse",
    "已处理": "Handled",
    "添加群聊": "add group chat",
    "已加入": "joined",
    "该群组不存在": "The group does not exist",
    "加群": "join",
    "我的好友": "Friend",
    "发送消息": "Send Message",
    "个性签名": "Signature",
    "等待管理员同意": "Successful application, waiting for the administrator to agree to join the group application",
    "加群成功": "Join the group successfully",
    "您已是群成员": "You are already a group member",
    "新的联系人": "New Contacts",
    "黑名单": "Blocked List",
    "无搜索结果": "No Result",
    "客服号": "Customer Service List",
    "ID": "ID",
    "联系人": "User",
    "群聊": "Group",
    "添加好友/群聊": "Add friend/group",
    "备注名": "remark",
    "加入黑名单": "block",
    "删除好友": "Delete friend",
    "等待验证": "waiting for verification",
    "验证信息": "verification info",
    "发送申请": "Send application",
    "加入直播群": "Join AVChatRoom",
    "同意": "Agree",
    "删除好友成功": "Delete friend success",
    "删除好友失败": "Delete friend failed",
    "申请已发送": "Application has been sent",
    "申请发送失败": "Application failed to send",
    "进入会话失败": "Failed to enter session",
    "添加好友成功": "Add friend success",
    "同意好友申请失败": "Failed to agree to friend request",
    "拒绝成功": "Reject friend request success",
    "拒绝好友申请失败": "Failed to reject friend request",
    "解散群聊成功": "Dismissed group success",
    "解散群聊失败": "Dismissed group failed",
    "退出群组成功": "Quit group success",
    "退出群组失败": "Quit group failed",
    "申请入群失败": "Application to join the group failed",
    "加入黑名单失败": "Add to blocklist failed",
    "移除黑名单失败": "Remove from blocklist failed",
    "修改备注失败: 备注长度不得超过 96 字节": "Failed to modify the remark: the length of the remark cannot exceed 96 bytes",
    "修改备注成功": "Remark modified success",
    "修改备注失败": "Remark modified failed"
  };
  const TUISearch$2 = {
    搜索: "Search",
    全部: "All",
    联系人: "Contacts",
    群聊: "Groups",
    聊天记录: "Chat History",
    文本: "Text",
    文件: "File",
    其他: "Other",
    "图片/视频": "Image/Video",
    选择时间: "Select time",
    今天: "Today",
    近三天: "Nearly three days",
    近七天: "Nearly seven days",
    查看更多: "View more ",
    条相关: " related ",
    条与: " related to ",
    相关的: "keywords",
    进入聊天: "enter",
    定位到聊天位置: "Navigate to the chat position",
    搜索会话内容: "Search in conversation",
    查看更多历史记录: "View more history message",
    暂无搜索结果: "No Results",
    结果: "results",
    取消: "Cancel",
    "[文本]": "[Text Message]",
    "[图片]": "[Image Message]",
    "[语音]": "[Audio Message]",
    "[视频]": "[Video Message]",
    "[文件]": "[File Message]",
    "[自定义消息]": "[Custom Message]",
    "[系统消息]": "[System Message]",
    "[合并消息]": "[Merged Message]",
    "[位置消息]": "[Position Message]",
    "消息云端搜索失败：": "Message cloud search failed: ",
    "查找联系人失败：": "Failed to find contact: ",
    "查找群聊失败：": "Failed to find group: ",
    "进入会话失败": "Failed to enter conversation"
  };
  const component = {
    "取消": "Cancel",
    "完成": "Done",
    "已选中": "Selected",
    "人": "",
    "保存": "Save",
    "请输入userID": "Enter a userID",
    "请输入groupID": "Enter a groupID",
    "确定": "submit",
    "全选": "All",
    "已在群聊中": "exists",
    "查看更多": "More",
    "图片 url 不存在": "Image url does not exist",
    "已取消": "Cancelled",
    "获取权限失败": "Failed to obtain permission",
    "已保存至相册": "Saved to album",
    "图片下载失败": "Image download failed",
    "暂不支持下载此类型图片": "Downloading this type of pictures is not supported yet"
  };
  const time$2 = {
    "周": "week(s) ",
    "天": "day(s)",
    "小时": "hour(s) ",
    "分钟": "minute(s)",
    "刚刚": "Just now",
    "前": " ago",
    "昨天": "Yesterday",
    "星期一": "Monday",
    "星期二": "Tuesday",
    "星期三": "Wednesday",
    "星期四": "Thursday",
    "星期五": "Friday",
    "星期六": "Saturday",
    "星期日": "Sunday",
    "一月": "January",
    "二月": "February",
    "三月": "March",
    "四月": "April",
    "五月": "May",
    "六月": "June",
    "七月": "July",
    "八月": "August",
    "九月": "September",
    "十月": "October",
    "十一月": "November",
    "十二月": "December",
    "一": "Mon",
    "二": "Tues",
    "三": "Wed",
    "四": "Thur",
    "五": "Fri",
    "六": "Sat",
    "日": "Sun"
  };
  const Words$2 = {
    "请对本次服务进行评价": "Please rate this service",
    "提交评价": "Feedback",
    "常用语-快捷回复工具": "Common Expressions - Quick Reply Tool",
    "使用": "Build with",
    "自定义消息": "Custom message",
    "搭建": "",
    "在吗？在吗？在吗？重要的话说三遍。": "Are you there? ",
    "好久没聊天了，快来和我说说话～": "It’s been a long time. How about you?",
    "好的，就这么说定了。": "Okay. It's a deal.",
    "感恩的心，感谢有你。": "So grateful! ",
    "糟糕！是心动的感觉！": "Oh, no. Flipped.",
    "心疼地抱抱自己，我太难了！": "Give myself a warm hug. ",
    "没关系，别在意，事情过去就过去了。": "Take it easy.",
    "早上好，今天也是让人期待的一天呢！": "Good morning. Have a wonderful day.",
    "熬夜有什么用，又没人陪你聊天，早点休息吧。": "It's better to go to bed early."
  };
  const Evaluate$2 = {
    "请对本次服务进行评价": "Please rate this service",
    "提交评价": "Feedback",
    "服务评价工具": "Service rate tool",
    "使用": "Build with",
    "自定义消息": "Custom message",
    "搭建": "",
    "星": "Star"
  };
  const messages$6 = {
    en: {
      取消: "Cancel",
      发送: "Send",
      系统通知: "System notification",
      关闭: "Close",
      确定: "Save",
      开始时间: "Start Date",
      结束时间: "End Date",
      消息: "Messages",
      通讯录: "Contacts",
      欢迎使用腾讯云即时通信IM: "Welcome to Tencent Cloud Chat",
      TUIChat: TUIChat$2,
      TUIConversation: TUIConversation$2,
      TUIGroup: TUIGroup$2,
      TUIContact: TUIContact$2,
      message: message$2,
      component,
      time: time$2,
      Evaluate: Evaluate$2,
      Words: Words$2,
      TUISearch: TUISearch$2,
      Emoji: Emoji$1
    }
  };
  const TUIChat$1 = {
    "【安全提示】本 APP 仅用于体验腾讯云即时通信 IM 产品功能，不可用于业务洽谈与拓展。请勿轻信汇款、中奖等涉及钱款的信息，勿轻易拨打陌生电话，谨防上当受骗。": "【安全提示】本 APP 仅用于体验腾讯云即时通信 IM 产品功能，不可用于业务洽谈与拓展。请勿轻信汇款、中奖等涉及钱款的信息，勿轻易拨打陌生电话，谨防上当受骗。",
    "按Enter发送，Ctrl+Enter换行": "按Enter发送，Ctrl+Enter换行",
    "表情": "[表情]",
    "查看更多": "查看更多",
    "撤回": "撤回",
    "撤回了一条消息": "撤回了一条消息",
    "打开": "打开",
    "单击下载": "单击下载",
    "点此投诉": "点此投诉",
    "点击处理": "点击处理",
    "对方正在输入": "对方正在输入...",
    "发起群视频": "发起群视频",
    "发起群语音": "发起群语音",
    "发起通话": "发起通话",
    "发送失败": "发送失败",
    "复制": "复制",
    "该消息不存在": "该消息不存在",
    "关闭阅读状态": "关闭",
    "管理员开启全员禁言": "管理员开启全员禁言",
    "欢迎使用TUICallKit": "欢迎使用腾讯云音视频通话组件TUICallKit ",
    "回到最新位置": "回到最新位置",
    "回复": "回复",
    "回复详情": "回复详情",
    "集成TUICallKit": "集成 TUICallKit ",
    "检测到您暂未集成TUICallKit，无法体验音视频通话功能": "检测到您暂未集成TUICallKit，无法体验音视频通话功能。",
    "结束群聊": "结束群聊",
    "进行体验": "进行体验。",
    "经度": "经度",
    "拒绝": "拒绝",
    "拒绝通话": "拒绝通话",
    "开通腾讯实时音视频服务": "开通腾讯实时音视频服务",
    "聊天记录": "[聊天记录]",
    "描述": "描述",
    "内容包含敏感词汇": "内容包含敏感词汇",
    "您": "您",
    "您当前购买使用的套餐包暂未开通此功能": "您当前购买使用的套餐包暂未开通此功能。",
    "您当前购买使用的套餐包暂未开通群消息已读回执功能": "您当前购买使用的套餐包暂未开通【群消息已读回执】功能，请升级至旗舰版进行体验",
    "您当前购买使用的套餐包暂未开通在线用户列表功能": "您当前购买使用的套餐包暂未开通【在线用户列表】功能，请升级至旗舰版进行体验",
    "您已被管理员禁言": "您已被管理员禁言",
    "您有": "您有",
    "请点击": "请点击",
    "请输入消息": "请输入消息",
    "取消": "取消",
    "取消通话": "取消通话",
    "全部已读": "全部已读",
    "确定": "确定",
    "确认重发该消息？": "确认重发该消息？",
    "人关闭阅读状态": "人关闭阅读状态",
    "人未读": "人未读",
    "人已读": "人已读",
    "删除": "删除",
    "涉及敏感内容": "涉及敏感内容",
    "申请加入": "申请加入",
    "视频": "[视频]",
    "视频通话": "视频通话",
    "条回复": "条回复",
    "条入群申请": "条入群申请",
    "条新消息": "条新消息",
    "通话时长": "通话时长",
    "同意": "同意",
    "图片": "[图片]",
    "图片消息失败,无效的图片格式": "图片消息失败,无效的图片格式",
    "纬度": "纬度",
    "未读": "未读",
    "位置": "[位置]",
    "文件": "[文件]",
    "文件不存在,请检查文件路径是否正确": "文件不存在,请检查文件路径是否正确",
    "文件大小超出了限制,如果上传文件,最大限制是100MB": "文件大小超出了限制,如果上传文件,最大限制是100MB",
    "文件消息失败,禁止发送违规封禁的文件": "文件消息失败,禁止发送违规封禁的文件",
    "我": "我",
    "无法查看": "无法查看",
    "无法定位到原消息": "无法定位到原消息",
    "无法收听": "无法收听",
    "正在加载": "正在加载...",
    "加载结束": "加载结束",
    "无应答": "无应答",
    "系统消息": "系统消息",
    "消息": "message",
    "消息或者资料中文本存在敏感内容,发送失败": "消息或者资料中文本存在敏感内容,发送失败",
    "消息详情": "消息详情",
    "消息长度超出限制,消息长度不要超过12K": "消息长度超出限制,消息长度不要超过12K",
    "消息中图片存在敏感内容,发送失败": "消息中图片存在敏感内容,发送失败",
    "选择提醒的人": "选择提醒的人",
    "已读": "已读",
    "已过撤回时限": "已过撤回时限",
    "已接听": "已接听",
    "已拒绝": "已拒绝",
    "已同意": "已同意",
    "引用": "引用",
    "引用失败": "引用失败",
    "语音": "[语音]",
    "语音通话": "语音通话",
    "重新编辑": "重新编辑",
    "重新发送": "重新发送",
    "转发": "转发",
    "翻译": "翻译",
    "转文字": "转文字",
    "隐藏": "隐藏",
    "转发给": "转发给",
    "自定义": "[自定义消息]",
    "自定义消息": "自定义消息",
    "腾讯云 IM": "腾讯云 IM",
    "空": "空",
    "文本包含本地审核拦截词": "文本包含本地审核拦截词",
    "按住说话": "按住说话",
    "抬起发送": "抬起发送",
    "抬起取消": "抬起取消",
    "正在录音": "正在录音",
    "继续上滑可取消": "继续上滑可取消",
    "松开手指 取消发送": "松开手指 取消发送",
    "此机型暂不支持复制功能": "此机型暂不支持复制功能",
    "请开通翻译功能": "请开通翻译功能",
    "请开通语音转文字功能": "请开通语音转文字功能",
    "翻译中": "翻译中",
    "转换中": "转换中",
    "由IM提供翻译支持": "由IM提供翻译支持",
    "所有人": "所有人",
    "已达到表情回应上限数量": "已达到表情回应上限数量",
    "等": "等",
    "人": "人",
    "返回": "返回",
    "关闭": "关闭",
    "多选": "多选",
    "合并转发": "合并转发",
    "逐条转发": "逐条转发",
    "未选择消息": "未选择消息",
    "引用内容已撤回": "引用内容已撤回",
    "[草稿]": "[草稿]",
    "[消息]": "[消息]",
    "[文本]": "[文本]",
    "[自定义消息]": "[自定义消息]",
    "[图片]": "[图片]",
    "[音频]": "[音频]",
    "[语音]": "[语音]",
    "[视频]": "[视频]",
    "[文件]": "[文件]",
    "[位置]": "[地理位置]",
    "[地理位置]": "[地理位置]",
    "[动画表情]": "[动画表情]",
    "[群提示]": "[群提示]",
    "[群提示消息]": "[群提示消息]",
    "[聊天记录]": "[聊天记录]",
    "群聊的聊天记录": "群聊的聊天记录",
    "和": "和",
    "的聊天记录": "的聊天记录",
    "请升级IMSDK到v2.10.1或更高版本查看此消息": "请升级IMSDK到v2.10.1或更高版本查看此消息",
    "您已被管理员移出群聊": "您已被管理员移出群聊",
    "该群聊已被解散": "该群聊已被解散",
    "您已退出该群聊": "您已退出该群聊"
  };
  const TUIConversation$1 = {
    "发起会话": "发起会话",
    "发起单聊": "发起单聊",
    "发起群聊": "发起群聊",
    "请输入userID": "请输入userID",
    "删除会话": "删除会话",
    "删除后，将清空该聊天的消息记录": "删除后，将清空该聊天的消息记录",
    "删除后，将清空该群聊的消息记录": "删除后，将清空该群聊的消息记录",
    "置顶会话": "置顶会话",
    "取消置顶": "取消置顶",
    "消息免打扰": "消息免打扰",
    "取消免打扰": "取消免打扰",
    "系统通知": "系统通知",
    "有人@我": "有人@我",
    "@所有人": "@所有人",
    "条": "条",
    "我": "我",
    "网络异常，请您检查网络设置": "网络异常，请您检查网络设置",
    "您已被群管理员移出群聊": "您已被群管理员移出群聊",
    "该群聊已被解散": "该群聊已被解散",
    "您已退出该群聊": "您已退出该群聊"
  };
  const TUIGroup$1 = {
    "输入groupID搜索": "输入groupID搜索",
    "群名称": "群名称",
    "群ID": "群ID",
    "加入群聊": "加入群聊",
    "解散群聊": "解散群聊",
    "退出群聊": "退出群聊",
    "群类型": "群类型",
    "请填写验证信息": "请填写验证信息",
    "申请加入": "申请加入",
    "已申请": "已申请",
    "群公告": "群公告",
    "群成员": "群成员",
    "群管理": "群管理",
    "好友工作群": "好友工作群",
    "陌生人社交群": "陌生人社交群",
    "临时会议群": "临时会议群",
    "直播群": "直播群",
    "社群": "社群",
    "自由加入": "自由加入",
    "需要验证": "需要验证",
    "禁止加群": "禁止加群",
    "人": "人",
    "群头像": "群头像",
    "加群方式": "加群方式",
    "转让群组": "转让群组",
    "退出群组": "退出群组",
    "群管理员": "群管理员",
    "全员禁言": "全员禁言",
    "全员禁言开启后，只允许群主和管理员发言。": "全员禁言开启后，只允许群主和管理员发言。",
    "单独禁言人员": "单独禁言人员",
    "删除成员": "删除成员",
    "确定从群聊中删除该成员？": "确定从群聊中删除该成员？",
    "确定从群聊中删除所选成员？": "确定从群聊中删除所选成员？",
    "暂无公告": "暂无公告",
    "发布": "发布",
    "编辑": "编辑",
    "查看更多": "查看更多",
    "管理员": "管理员",
    "群主": "群主",
    "我": "我",
    "确认": "确认",
    "添加成员": "添加成员",
    "新增管理员": "新增管理员",
    "移除管理员": "移除管理员",
    "新增禁言用户": "新增禁言用户",
    "移除禁言用户": "移除禁言用户",
    "修改群聊名称": "修改群聊名称",
    "修改群聊名称后，将在群内通知其他成员": "修改群聊名称后，将在群内通知其他成员",
    "仅限中文、字母、数字和下划线，2-20个字": "仅限中文、字母、数字和下划线，2-20个字",
    "请先注册 TUIGroup 模块": "请先注册 TUIGroup 模块",
    "该用户不存在": "该用户不存在",
    "该用户不在群组内": "该用户不在群组内",
    "添加群聊": "添加群聊",
    "该群组不存在": "该群组不存在",
    "创建群聊，请注册 TUIGroup 模块": "创建群聊，请注册 TUIGroup 模块",
    "创建成功": "创建成功",
    "发起多人会话（群聊）": "发起多人会话（群聊）",
    "选填": "选填",
    "取消": "取消",
    "创建": "创建",
    "类似普通微信群，创建后仅支持已在群内的好友邀请加群，且无需被邀请方同意或群主审批。详见": "类似普通微信群，创建后仅支持已在群内的好友邀请加群，且无需被邀请方同意或群主审批。详见",
    "类似 QQ 群，创建后群主可以指定群管理员，用户搜索群 ID 发起加群申请后，需要群主或管理员审批通过才能入群。详见": "类似 QQ 群，创建后群主可以指定群管理员，用户搜索群 ID 发起加群申请后，需要群主或管理员审批通过才能入群。详见",
    "创建后可以随意进出，且支持查看入群前消息；适合用于音视频会议场景、在线教育场景等与实时音视频产品结合的场景。详见": "创建后可以随意进出，且支持查看入群前消息；适合用于音视频会议场景、在线教育场景等与实时音视频产品结合的场景。详见",
    "创建后可以随意进出，没有群成员数量上限，但不支持历史消息存储；适合与直播产品结合，用于弹幕聊天场景。详见": "创建后可以随意进出，没有群成员数量上限，但不支持历史消息存储；适合与直播产品结合，用于弹幕聊天场景。详见",
    "创建后可以随意进出，最多支持100000人，支持历史消息存储，用户搜索群 ID 发起加群申请后，无需管理员审批即可进群。详见": "创建后可以随意进出，最多支持100000人，支持历史消息存储，用户搜索群 ID 发起加群申请后，无需管理员审批即可进群。详见",
    "产品文档": "产品文档",
    "设置群名称": "设置群名称",
    "请输入群名称": "请输入群名称",
    "设置群ID": "设置群ID",
    "请输入群ID": "请输入群ID",
    "选择群类型": "选择群类型",
    "陌生人社交群（Public）": "陌生人社交群（Public）",
    "临时会议群（Meeting）": "临时会议群（Meeting）",
    "好友工作群（Work）": "好友工作群（Work）",
    "直播群（AVChatroom）": "直播群（AVChatroom）",
    "社群（Community）": "社群（Community）",
    "群组创建成功": "群组创建成功",
    "群组解散成功": "群组解散成功",
    "禁言设置成功": "禁言设置成功",
    "取消禁言成功": "取消禁言成功",
    "群名称不能为空": "群名称不能为空",
    "群名称修改成功": "群名称修改成功",
    "群公告字数超出限制，最大长度为150": "群公告字数超出限制，最大长度为150"
  };
  const TUIContact$1 = {
    "群聊通知": "群聊通知",
    "系统通知": "系统通知",
    "我的群聊": "我的群聊",
    "输入ID": "请输入用户/群聊 ID，回车搜索",
    "群名称": "群名称",
    "群ID": "群ID",
    "加入群聊": "加入群聊",
    "解散群聊": "解散群聊",
    "退出群聊": "退出群聊",
    "进入群聊": "进入群聊",
    "群类型": "群类型",
    "请填写验证信息": "请填写验证信息",
    "申请加入": "申请加入",
    "已申请": "已申请",
    "接受": "接受",
    "拒绝": "拒绝",
    "已处理": "已处理",
    "添加群聊": "添加群聊",
    "已加入": "已加入",
    "该群组不存在": "该群组不存在",
    "加群": "加群",
    "我的好友": "我的好友",
    "发送消息": "发送消息",
    "个性签名": "个性签名",
    "等待管理员同意": "申请成功，等待管理员同意入群申请",
    "加群成功": "加群成功",
    "您已是群成员": "您已是群成员",
    "新的联系人": "新的联系人",
    "黑名单": "黑名单",
    "无搜索结果": "无搜索结果",
    "客服号": "客服号",
    "ID": "ID",
    "联系人": "联系人",
    "群聊": "群聊",
    "添加好友/群聊": "添加好友/群聊",
    "备注名": "备注名",
    "加入黑名单": "加入黑名单",
    "删除好友": "删除好友",
    "等待验证": "等待验证",
    "验证信息": "验证信息",
    "发送申请": "发送申请",
    "加入直播群": "加入直播群",
    "同意": "同意",
    "删除好友成功": "删除好友成功",
    "删除好友失败": "删除好友失败",
    "申请已发送": "申请已发送",
    "申请发送失败": "申请发送失败",
    "进入会话失败": "进入会话失败",
    "添加好友成功": "添加好友成功",
    "同意好友申请失败": "同意好友申请失败",
    "拒绝成功": "拒绝成功",
    "拒绝好友申请失败": "拒绝好友申请失败",
    "解散群聊成功": "解散群聊成功",
    "解散群聊失败": "解散群聊失败",
    "退出群组成功": "退出群组成功",
    "退出群组失败": "退出群组失败",
    "申请入群失败": "申请入群失败",
    "加入黑名单失败": "加入黑名单失败",
    "移除黑名单失败": "移除黑名单失败",
    "修改备注失败: 备注长度不得超过 96 字节": "修改备注失败: 备注长度不得超过 96 字节",
    "修改备注成功": "修改备注成功",
    "修改备注失败": "修改备注失败"
  };
  const TUISearch$1 = {
    搜索: "搜索",
    全部: "全部",
    联系人: "联系人",
    群聊: "群聊",
    聊天记录: "聊天记录",
    文本: "文本",
    文件: "文件",
    "图片/视频": "图片/视频",
    其他: "其他",
    选择时间: "选择时间",
    今天: "今天",
    近三天: "近三天",
    近七天: "近七天",
    查看更多: "查看更多",
    条相关: "条相关",
    条与: "条与",
    相关的: "相关的",
    进入聊天: "进入聊天",
    定位到聊天位置: "定位到聊天位置",
    搜索会话内容: "搜索会话内容",
    查看更多历史记录: "查看更多历史记录",
    暂无搜索结果: "暂无搜索结果",
    结果: "结果",
    取消: "取消",
    "[文本]": "[文本]",
    "[图片]": "[图片]",
    "[语音]": "[语音]",
    "[视频]": "[视频]",
    "[文件]": "[文件]",
    "[自定义消息]": "[自定义消息]",
    "[系统消息]": "[系统消息]",
    "[合并消息]": "[合并消息]",
    "[位置消息]": "[位置消息]",
    "消息云端搜索失败：": "消息云端搜索失败：",
    "查找联系人失败：": "查找联系人失败：",
    "查找群聊失败：": "查找群聊失败：",
    "进入会话失败": "进入会话失败"
  };
  const message$1 = {
    "tip": {
      "群成员": "群成员",
      "加入群组": "加入群组",
      "退出群组": "退出群组",
      "被": "被",
      "踢出群组": "踢出群组",
      "成为管理员": "成为管理员",
      "被撤销管理员": "被撤销管理员",
      "被禁言": "被禁言",
      "被取消禁言": "被取消禁言",
      "群提示消息": "群提示消息",
      "管理员": "管理员",
      "开启全员禁言": "开启全员禁言",
      "取消全员禁言": "取消全员禁言",
      "成为新的群主": "成为新的群主",
      "修改群名为": "修改群名为",
      "发布新公告": "发布新公告",
      "把群公告修改为": "把群公告修改为",
      "申请加入群组": "申请加入群组",
      "成功加入群组": "成功加入群组",
      "被拒绝": "被拒绝",
      "你被管理员": "你被管理员",
      "群": "群",
      "解散": "解散",
      "创建群": "创建群",
      "邀请你加群": "邀请你加群",
      "你退出群组": "你退出群组",
      "你被": "你被",
      "设置为群": "设置为群",
      "的管理员": "的管理员",
      "撤销群": "撤销群",
      "的管理员身份": "的管理员身份",
      "同意加群": "同意加群",
      "拒接加群": "拒接加群",
      "自定义群系统通知": "自定义群系统通知"
    },
    "custom": {
      "自定义消息": "自定义消息",
      "通话时长": "通话时长",
      "通话结束": "通话结束",
      "切换语音通话": "切换语音通话",
      "切换视频通话": "切换视频通话",
      "发起通话": "发起通话",
      "取消通话": "取消通话",
      "已接听": "已接听",
      "拒绝通话": "拒绝通话",
      "无应答": "无应答",
      "对本次服务评价": "对本次服务评价",
      "查看详情>>": "查看详情>>",
      "已取消": "已取消",
      "对方已取消": "对方已取消",
      "已拒绝": "已拒绝",
      "对方已拒绝": "对方已拒绝",
      "对方忙线中": "对方忙线中",
      "忙线未接听": "忙线未接听",
      "对方无应答": "对方无应答",
      "超时无应答": "超时无应答"
    }
  };
  const components$1 = {
    "取消": "取消",
    "完成": "完成",
    "已选中": "已选中",
    "人": "人",
    "保存": "保存",
    "请输入userID": "请输入userID",
    "请输入groupID": "请输入groupID",
    "确定": "确定",
    "全选": "全选",
    "已在群聊中": "已在群聊中",
    "查看更多": "查看更多",
    "图片 url 不存在": "图片 url 不存在",
    "已取消": "已取消",
    "获取权限失败": "获取权限失败",
    "已保存至相册": "已保存至相册",
    "图片下载失败": "图片下载失败",
    "暂不支持下载此类型图片": "暂不支持下载此类型图片"
  };
  const time$1 = {
    "周": "周",
    "天": "天",
    "小时": "小时",
    "分钟": "分钟",
    "刚刚": "刚刚",
    "前": "前",
    "昨天": "昨天",
    "星期一": "星期一",
    "星期二": "星期二",
    "星期三": "星期三",
    "星期四": "星期四",
    "星期五": "星期五",
    "星期六": "星期六",
    "星期日": "星期日",
    "一月": "一月",
    "二月": "二月",
    "三月": "三月",
    "四月": "四月",
    "五月": "五月",
    "六月": "六月",
    "七月": "七月",
    "八月": "八月",
    "九月": "九月",
    "十月": "十月",
    "十一月": "十一月",
    "十二月": "十二月",
    "一": "一",
    "二": "二",
    "三": "三",
    "四": "四",
    "五": "五",
    "六": "六",
    "日": "日"
  };
  const Words$1 = {
    "常用语-快捷回复工具": "常用语-快捷回复工具",
    "在吗？在吗？在吗？重要的话说三遍。": "在吗？在吗？在吗？重要的话说三遍。",
    "好久没聊天了，快来和我说说话～": "好久没聊天了，快来和我说说话～",
    "好的，就这么说定了。": "好的，就这么说定了。",
    "感恩的心，感谢有你。": "感恩的心，感谢有你。",
    "糟糕！是心动的感觉！": "糟糕！是心动的感觉！",
    "心疼地抱抱自己，我太难了！": "心疼地抱抱自己，我太难了！",
    "没关系，别在意，事情过去就过去了。": "没关系，别在意，事情过去就过去了。",
    "早上好，今天也是让人期待的一天呢！": "早上好，今天也是让人期待的一天呢！",
    "熬夜有什么用，又没人陪你聊天，早点休息吧。": "熬夜有什么用，又没人陪你聊天，早点休息吧。"
  };
  const Evaluate$1 = {
    "请对本次服务进行评价": "请对本次服务进行评价",
    "提交评价": "提交评价",
    "服务评价工具": "服务评价工具",
    "使用": "使用",
    "自定义消息": "自定义消息",
    "搭建": "搭建",
    "星": "星"
  };
  const messages$5 = {
    zh_cn: {
      取消: "取消",
      发送: "发送",
      系统通知: "系统通知",
      关闭: "关闭",
      确定: "确定",
      开始时间: "开始时间",
      结束时间: "结束时间",
      消息: "消息",
      通讯录: "通讯录",
      欢迎使用腾讯云即时通信IM: "欢迎使用腾讯云即时通信IM",
      TUIChat: TUIChat$1,
      TUIConversation: TUIConversation$1,
      TUIGroup: TUIGroup$1,
      TUIContact: TUIContact$1,
      message: message$1,
      component: components$1,
      time: time$1,
      Evaluate: Evaluate$1,
      Words: Words$1,
      TUISearch: TUISearch$1,
      Emoji: Emoji$2
    }
  };
  const TUIChat = {
    "【安全提示】本 APP 仅用于体验腾讯云即时通信 IM 产品功能，不可用于业务洽谈与拓展。请勿轻信汇款、中奖等涉及钱款的信息，勿轻易拨打陌生电话，谨防上当受骗。": "【安全提示】本 APP 僅用於體驗騰訊雲即時通信 IM 產品功能，不可用於業務洽談與拓展。請勿輕信匯款、中奖等涉及錢款的信息，勿輕易撥打陌生電話，謹防上當受騙。",
    "按Enter发送，Ctrl+Enter换行": "按Enter發送，Ctrl+Enter換行",
    "表情": "[表情]",
    "查看更多": "查看更多",
    "撤回": "撤回",
    "撤回了一条消息": "撤回了一條消息",
    "打开": "打開",
    "单击下载": "單擊下載",
    "点此投诉": "點此投訴",
    "点击处理": "點擊處理",
    "对方正在输入": "對方正在輸入...",
    "发起群视频": "發起群視頻",
    "发起群语音": "發起群語音",
    "发起通话": "發起通話",
    "发送失败": "發送失敗",
    "复制": "複製",
    "该消息不存在": "該消息不存在",
    "关闭阅读状态": "關閉",
    "管理员开启全员禁言": "管理員開啟全員禁言",
    "欢迎使用TUICallKit": "歡迎使用騰訊雲音視頻通話組件TUICallKit",
    "回到最新位置": "回到最新位置",
    "回复": "回覆",
    "回复详情": "回覆詳情",
    "集成TUICallKit": "集成 TUICallKit",
    "检测到您暂未集成TUICallKit，无法体验音视频通话功能": "檢測到您暫未集成TUICallKit，無法體驗音視頻通話功能。",
    "结束群聊": "結束群聊",
    "进行体验": "進行體驗。",
    "经度": "經度",
    "拒绝": "拒絕",
    "拒绝通话": "拒絕通話",
    "开通腾讯实时音视频服务": "開通騰訊實時音視頻服務",
    "聊天记录": "[聊天記錄]",
    "描述": "描述",
    "内容包含敏感词汇": "內容包含敏感詞彙",
    "您": "您",
    "您当前购买使用的套餐包暂未开通此功能": "您當前購買使用的套餐包暫未開通此功能。",
    "您当前购买使用的套餐包暂未开通群消息已读回执功能": "您當前購買使用的套餐包暫未開通【群消息已讀回執】功能，請升級至旗艦版進行體驗",
    "您当前购买使用的套餐包暂未开通在线用户列表功能": "您當前購買使用的套餐包暫未開通【在線用戶列表】功能，請升級至旗艦版進行體驗",
    "您已被管理员禁言": "您已被管理員禁言",
    "您有": "您有",
    "请点击": "請點擊",
    "请输入消息": "請輸入消息",
    "取消": "取消",
    "取消通话": "取消通話",
    "全部已读": "全部已讀",
    "确定": "確定",
    "确认重发该消息？": "確認重發該消息？",
    "人关闭阅读状态": "人關閉閱讀狀態",
    "人未读": "人未讀",
    "人已读": "人已讀",
    "删除": "刪除",
    "涉及敏感内容": "涉及敏感內容",
    "申请加入": "申請加入",
    "视频": "[視頻]",
    "视频通话": "視頻通話",
    "条回复": "條回覆",
    "条入群申请": "條入群申請",
    "条新消息": "條新消息",
    "通话时长": "通話時長",
    "同意": "同意",
    "图片": "[圖片]",
    "图片消息失败,无效的图片格式": "圖片消息失敗,無效的圖片格式",
    "纬度": "緯度",
    "未读": "未讀",
    "位置": "[位置]",
    "文件": "[文件]",
    "文件不存在,请检查文件路径是否正确": "文件不存在,請檢查文件路徑是否正確",
    "文件大小超出了限制,如果上传文件,最大限制是100MB": "文件大小超出了限制,如果上傳文件,最大限制是100MB",
    "文件消息失败,禁止发送违规封禁的文件": "文件消息失敗,禁止發送違規封禁的文件",
    "我": "我",
    "无法查看": "無法查看",
    "无法定位到原消息": "無法定位到原消息",
    "无法收听": "無法收聽",
    "正在加载": "正在加載...",
    "加载结束": "加載結束",
    "无应答": "無應答",
    "系统消息": "系統消息",
    "消息": "message",
    "消息或者资料中文本存在敏感内容,发送失败": "消息或者資料中文本存在敏感內容,發送失敗",
    "消息详情": "消息詳情",
    "消息长度超出限制,消息长度不要超过12K": "消息長度超出限制,消息長度不要超過12K",
    "消息中图片存在敏感内容,发送失败": "消息中圖片存在敏感內容,發送失敗",
    "选择提醒的人": "選擇提醒的人",
    "已读": "已讀",
    "已过撤回时限": "已過撤回時限",
    "已接听": "已接聽",
    "已拒绝": "已拒絕",
    "已同意": "已同意",
    "引用": "引用",
    "引用失败": "引用失敗",
    "语音": "[語音]",
    "语音通话": "語音通話",
    "重新编辑": "重新編輯",
    "重新发送": "重新發送",
    "转发": "轉發",
    "翻译": "翻譯",
    "转文字": "轉文字",
    "隐藏": "隱藏",
    "转发给": "轉發給",
    "自定义": "[自定義消息]",
    "自定义消息": "自定義消息",
    "腾讯云 IM": "騰訊雲 IM",
    "空": "空",
    "文本包含本地审核拦截词": "文本包含本地審核攔截詞",
    "按住说话": "按住說話",
    "抬起发送": "抬起發送",
    "抬起取消": "抬起取消",
    "正在录音": "正在錄音",
    "继续上滑可取消": "繼續上滑可取消",
    "松开手指 取消发送": "松開手指 取消發送",
    "此机型暂不支持复制功能": "此機型暫不支持複製功能",
    "请开通翻译功能": "請開通翻譯功能",
    "请开通语音转文字功能": "請開通語音轉文字功能",
    "翻译中": "翻譯中",
    "转换中": "轉換中",
    "由IM提供翻译支持": "由IM提供翻譯支持",
    "所有人": "所有人",
    "已达到表情回应上限数量": "已達到表情回應上限數量",
    "等": "等",
    "人": "人",
    "返回": "返回",
    "关闭": "關閉",
    "多选": "多選",
    "合并转发": "合併轉發",
    "逐条转发": "逐條轉發",
    "未选择消息": "未選擇消息",
    "引用内容已撤回": "引用內容已撤回",
    "[草稿]": "[草稿]",
    "[消息]": "[消息]",
    "[文本]": "[文本]",
    "[自定义消息]": "[自定義消息]",
    "[图片]": "[圖片]",
    "[音频]": "[音頻]",
    "[语音]": "[語音]",
    "[视频]": "[視頻]",
    "[文件]": "[文件]",
    "[位置]": "[地理位置]",
    "[地理位置]": "[地理位置]",
    "[动画表情]": "[動畫表情]",
    "[群提示]": "[群提示]",
    "[群提示消息]": "[群提示消息]",
    "[聊天记录]": "[聊天記錄]",
    "群聊的聊天记录": "群聊的聊天記錄",
    "和": "和",
    "的聊天记录": "的聊天記錄",
    "请升级IMSDK到v2.10.1或更高版本查看此消息": "請升級IMSDK到v2.10.1或更高版本查看此消息",
    "您已被管理员移出群聊": "您已被管理員移出群聊",
    "该群聊已被解散": "該群聊已被解散",
    "您已退出该群聊": "您已退出該群聊"
  };
  const TUIConversation = {
    "发起会话": "發起會話",
    "发起单聊": "發起單聊",
    "发起群聊": "發起群聊",
    "请输入userID": "請輸入userID",
    "删除会话": "刪除會話",
    "删除后，将清空该聊天的消息记录": "刪除後，將清空該聊天的消息記錄",
    "删除后，将清空该群聊的消息记录": "刪除後，將清空該群聊的消息記錄",
    "置顶会话": "置頂會話",
    "取消置顶": "取消置頂",
    "消息免打扰": "消息免打擾",
    "取消免打扰": "取消免打擾",
    "系统通知": "系統通知",
    "有人@我": "有人@我",
    "@所有人": "@所有人",
    "条": "條",
    "我": "我",
    "网络异常，请您检查网络设置": "網絡異常，請您檢查網絡設置",
    "您已被群管理员移出群聊": "您已被群管理員移出群聊",
    "该群聊已被解散": "該群聊已被解散",
    "您已退出该群聊": "您已退出該群聊"
  };
  const TUIGroup = {
    "输入groupID搜索": "輸入groupID搜索",
    "群名称": "群名稱",
    "群ID": "群ID",
    "加入群聊": "加入群聊",
    "解散群聊": "解散群聊",
    "退出群聊": "退出群聊",
    "群类型": "群類型",
    "请填写验证信息": "請填寫驗證信息",
    "申请加入": "申請加入",
    "已申请": "已申請",
    "群公告": "群公告",
    "群成员": "群成員",
    "群管理": "群管理",
    "好友工作群": "好友工作群",
    "陌生人社交群": "陌生人社交群",
    "临时会议群": "臨時會議群",
    "直播群": "直播群",
    "社群": "社群",
    "自由加入": "自由加入",
    "需要验证": "需要驗證",
    "禁止加群": "禁止加群",
    "人": "人",
    "群头像": "群頭像",
    "加群方式": "加群方式",
    "转让群组": "轉讓群組",
    "退出群组": "退出群組",
    "群管理员": "群管理員",
    "全员禁言": "全員禁言",
    "全员禁言开启后，只允许群主和管理员发言。": "全員禁言開啟後，只允許群主和管理員發言。",
    "单独禁言人员": "單獨禁言人員",
    "删除成员": "刪除成員",
    "确定从群聊中删除该成员？": "確定從群聊中刪除該成員？",
    "确定从群聊中删除所选成员？": "確定從群聊中刪除所選成員？",
    "暂无公告": "暫無公告",
    "发布": "發布",
    "编辑": "編輯",
    "查看更多": "查看更多",
    "管理员": "管理員",
    "群主": "群主",
    "我": "我",
    "确认": "確認",
    "添加成员": "添加成員",
    "新增管理员": "新增管理員",
    "移除管理员": "移除管理員",
    "新增禁言用户": "新增禁言用戶",
    "移除禁言用户": "移除禁言用戶",
    "修改群聊名称": "修改群聊名稱",
    "修改群聊名称后，将在群内通知其他成员": "修改群聊名稱後，將在群內通知其他成員",
    "仅限中文、字母、数字和下划线，2-20个字": "僅限中文、字母、數字和下劃線，2-20個字",
    "请先注册 TUIGroup 模块": "請先註冊 TUIGroup 模塊",
    "该用户不存在": "該用戶不存在",
    "该用户不在群组内": "該用戶不在群組內",
    "添加群聊": "添加群聊",
    "该群组不存在": "該群組不存在",
    "创建群聊，请注册 TUIGroup 模块": "創建群聊，請註冊 TUIGroup 模塊",
    "创建成功": "創建成功",
    "发起多人会话（群聊）": "發起多人會話（群聊）",
    "选填": "選填",
    "取消": "取消",
    "创建": "創建",
    "类似普通微信群，创建后仅支持已在群内的好友邀请加群，且无需被邀请方同意或群主审批。详见": "類似普通微信群，創建後僅支持已在群內的好友邀請加群，且無需被邀請方同意或群主審批。詳見",
    "类似 QQ 群，创建后群主可以指定群管理员，用户搜索群 ID 发起加群申请后，需要群主或管理员审批通过才能入群。详见": "類似 QQ 群，創建後群主可以指定群管理員，用戶搜索群 ID 發起加群申請後，需要群主或管理員審批通過才能入群。詳見",
    "创建后可以随意进出，且支持查看入群前消息；适合用于音视频会议场景、在线教育场景等与实时音视频产品结合的场景。详见": "創建後可以隨意進出，且支持查看入群前消息；適合用於音視頻會議場景、在線教育場景等與實時音視頻產品結合的場景。詳見",
    "创建后可以随意进出，没有群成员数量上限，但不支持历史消息存储；适合与直播产品结合，用于弹幕聊天场景。详见": "創建後可以隨意進出，沒有群成員數量上限，但不支持歷史消息存儲；適合與直播產品結合，用於彈幕聊天場景。詳見",
    "创建后可以随意进出，最多支持100000人，支持历史消息存储，用户搜索群 ID 发起加群申请后，无需管理员审批即可进群。详见": "創建後可以隨意進出，最多支持100000人，支持歷史消息存儲，用戶搜索群 ID 發起加群申請後，無需管理員審批即可進群。詳見",
    "产品文档": "產品文檔",
    "设置群名称": "設置群名稱",
    "请输入群名称": "請輸入群名稱",
    "设置群ID": "設置群ID",
    "请输入群ID": "請輸入群ID",
    "选择群类型": "選擇群類型",
    "陌生人社交群（Public）": "陌生人社交群（Public）",
    "临时会议群（Meeting）": "臨時會議群（Meeting）",
    "好友工作群（Work）": "好友工作群（Work）",
    "直播群（AVChatroom）": "直播群（AVChatroom）",
    "社群（Community）": "社群（Community）",
    "群组创建成功": "群組創建成功",
    "群组解散成功": "群組解散成功",
    "禁言设置成功": "禁言設置成功",
    "取消禁言成功": "取消禁言成功",
    "群名称不能为空": "群名稱不能為空",
    "群名称修改成功": "群名稱修改成功",
    "群公告字数超出限制，最大长度为150": "群公告字數超出限制，最大長度為150"
  };
  const TUIContact = {
    "群聊通知": "群聊通知",
    "系统通知": "系統通知",
    "我的群聊": "我的群聊",
    "输入ID": "請輸入用戶/群聊 ID，回車搜索",
    "群名称": "群名稱",
    "群ID": "群ID",
    "加入群聊": "加入群聊",
    "解散群聊": "解散群聊",
    "退出群聊": "退出群聊",
    "进入群聊": "進入群聊",
    "群类型": "群類型",
    "请填写验证信息": "請填寫驗證信息",
    "申请加入": "申請加入",
    "已申请": "已申請",
    "接受": "接受",
    "拒绝": "拒絕",
    "已处理": "已處理",
    "添加群聊": "添加群聊",
    "已加入": "已加入",
    "该群组不存在": "該群組不存在",
    "加群": "加群",
    "我的好友": "我的好友",
    "发送消息": "發送消息",
    "个性签名": "個性簽名",
    "等待管理员同意": "申請成功，等待管理員同意入群申請",
    "加群成功": "加群成功",
    "您已是群成员": "您已是群成員",
    "新的联系人": "新的聯繫人",
    "黑名单": "黑名單",
    "无搜索结果": "無搜索結果",
    "客服号": "客服號",
    "ID": "ID",
    "联系人": "聯繫人",
    "群聊": "群聊",
    "添加好友/群聊": "添加好友/群聊",
    "备注名": "備註名",
    "加入黑名单": "加入黑名單",
    "删除好友": "刪除好友",
    "等待验证": "等待驗證",
    "验证信息": "驗證信息",
    "发送申请": "發送申請",
    "加入直播群": "加入直播群",
    "同意": "同意",
    "删除好友成功": "刪除好友成功",
    "删除好友失败": "刪除好友失敗",
    "申请已发送": "申請已發送",
    "申请发送失败": "申請發送失敗",
    "进入会话失败": "進入會話失敗",
    "添加好友成功": "添加好友成功",
    "同意好友申请失败": "同意好友申請失敗",
    "拒绝成功": "拒絕成功",
    "拒绝好友申请失败": "拒絕好友申請失敗",
    "解散群聊成功": "解散群聊成功",
    "解散群聊失败": "解散群聊失敗",
    "退出群组成功": "退出群組成功",
    "退出群组失败": "退出群組失敗",
    "申请入群失败": "申請入群失敗",
    "加入黑名单失败": "加入黑名單失敗",
    "移除黑名单失败": "移除黑名單失敗",
    "修改备注失败: 备注长度不得超过 96 字节": "修改備註失敗: 備註長度不得超過 96 字節",
    "修改备注成功": "修改備註成功",
    "修改备注失败": "修改備註失敗"
  };
  const TUISearch = {
    搜索: "搜索",
    全部: "全部",
    联系人: "聯繫人",
    群聊: "群聊",
    聊天记录: "聊天記錄",
    文本: "文本",
    文件: "文件",
    "图片/视频": "圖片/視頻",
    其他: "其他",
    选择时间: "選擇時間",
    今天: "今天",
    近三天: "近三天",
    近七天: "近七天",
    查看更多: "查看更多",
    条相关: "條相關",
    条与: "條與",
    相关的: "相關的",
    进入聊天: "進入聊天",
    定位到聊天位置: "定位到聊天位置",
    搜索会话内容: "搜索會話內容",
    查看更多历史记录: "查看更多歷史記錄",
    暂无搜索结果: "暫無搜索結果",
    结果: "結果",
    取消: "取消",
    "[文本]": "[文本]",
    "[图片]": "[圖片]",
    "[语音]": "[語音]",
    "[视频]": "[視頻]",
    "[文件]": "[文件]",
    "[自定义消息]": "[自定義消息]",
    "[系统消息]": "[系統消息]",
    "[合并消息]": "[合併消息]",
    "[位置消息]": "[位置消息]",
    "消息云端搜索失败：": "消息雲端搜索失敗：",
    "查找联系人失败：": "查找聯繫人失敗：",
    "查找群聊失败：": "查找群聊失敗：",
    "进入会话失败": "進入會話失敗"
  };
  const message = {
    "tip": {
      "群成员": "群成員",
      "加入群组": "加入群組",
      "退出群组": "退出群組",
      "被": "被",
      "踢出群组": "踢出群組",
      "成为管理员": "成為管理員",
      "被撤销管理员": "被撤銷管理員",
      "被禁言": "被禁言",
      "被取消禁言": "被取消禁言",
      "群提示消息": "群提示消息",
      "管理员": "管理員",
      "开启全员禁言": "開啟全員禁言",
      "取消全员禁言": "取消全員禁言",
      "成为新的群主": "成為新的群主",
      "修改群名为": "修改群名為",
      "发布新公告": "發布新公告",
      "把群公告修改为": "把群公告修改為",
      "申请加入群组": "申請加入群組",
      "成功加入群组": "成功加入群組",
      "被拒绝": "被拒絕",
      "你被管理员": "你被管理員",
      "群": "群",
      "解散": "解散",
      "创建群": "創建群",
      "邀请你加群": "邀請你加群",
      "你退出群组": "你退出群組",
      "你被": "你被",
      "设置为群": "設置為群",
      "的管理员": "的管理員",
      "撤销群": "撤銷群",
      "的管理员身份": "的管理員身份",
      "同意加群": "同意加群",
      "拒接加群": "拒接加群",
      "自定义群系统通知": "自定義群系統通知"
    },
    "custom": {
      "自定义消息": "自定義消息",
      "通话时长": "通話時長",
      "通话结束": "通話結束",
      "切换语音通话": "切換語音通話",
      "切换视频通话": "切換視頻通話",
      "发起通话": "發起通話",
      "取消通话": "取消通話",
      "已接听": "已接聽",
      "拒绝通话": "拒絕通話",
      "无应答": "無應答",
      "对本次服务评价": "對本次服務評價",
      "查看详情>>": "查看詳情>>",
      "已取消": "已取消",
      "对方已取消": "對方已取消",
      "已拒绝": "已拒絕",
      "对方已拒绝": "對方已拒絕",
      "对方忙线中": "對方忙線中",
      "忙线未接听": "忙線未接聽",
      "对方无应答": "對方無應答",
      "超时无应答": "超時無應答"
    }
  };
  const components = {
    "取消": "取消",
    "完成": "完成",
    "已选中": "已選中",
    "人": "人",
    "保存": "保存",
    "请输入userID": "請輸入userID",
    "请输入groupID": "請輸入groupID",
    "确定": "確定",
    "全选": "全選",
    "已在群聊中": "已在群聊中",
    "查看更多": "查看更多",
    "图片 url 不存在": "圖片 url 不存在",
    "已取消": "已取消",
    "获取权限失败": "獲取權限失敗",
    "已保存至相册": "已保存至相冊",
    "图片下载失败": "圖片下載失敗",
    "暂不支持下载此类型图片": "暫不支持下載此類型圖片"
  };
  const time = {
    "周": "週",
    "天": "天",
    "小时": "小時",
    "分钟": "分鐘",
    "刚刚": "剛剛",
    "前": "前",
    "昨天": "昨天",
    "星期一": "星期一",
    "星期二": "星期二",
    "星期三": "星期三",
    "星期四": "星期四",
    "星期五": "星期五",
    "星期六": "星期六",
    "星期日": "星期日",
    "一月": "一月",
    "二月": "二月",
    "三月": "三月",
    "四月": "四月",
    "五月": "五月",
    "六月": "六月",
    "七月": "七月",
    "八月": "八月",
    "九月": "九月",
    "十月": "十月",
    "十一月": "十一月",
    "十二月": "十二月",
    "一": "一",
    "二": "二",
    "三": "三",
    "四": "四",
    "五": "五",
    "六": "六",
    "日": "日"
  };
  const Words = {
    "常用语-快捷回复工具": "常用語-快捷回覆工具",
    "在吗？在吗？在吗？重要的话说三遍。": "在嗎？在嗎？在嗎？重要的話說三遍。",
    "好久没聊天了，快来和我说说话～": "好久沒聊天了，快來和我說說話～",
    "好的，就这么说定了。": "好的，就這麼說定了。",
    "感恩的心，感谢有你。": "感恩的心，感謝有你。",
    "糟糕！是心动的感觉！": "糟糕！是心動的感覺！",
    "心疼地抱抱自己，我太难了！": "心疼地抱抱自己，我太難了！",
    "没关系，别在意，事情过去就过去了。": "沒關係，別在意，事情過去就過去了。",
    "早上好，今天也是让人期待的一天呢！": "早上好，今天也是讓人期待的一天呢！",
    "熬夜有什么用，又没人陪你聊天，早点休息吧。": "熬夜有什麼用，又沒人陪你聊天，早點休息吧。"
  };
  const Evaluate = {
    "请对本次服务进行评价": "請對本次服務進行評價",
    "提交评价": "提交評價",
    "服务评价工具": "服務評價工具",
    "使用": "使用",
    "自定义消息": "自定義消息",
    "搭建": "搭建",
    "星": "星"
  };
  const Emoji = {
    "[TUIEmoji_Smile]": "[微笑]",
    "[TUIEmoji_Expect]": "[期待]",
    "[TUIEmoji_Blink]": "[眨眼]",
    "[TUIEmoji_Guffaw]": "[大笑]",
    "[TUIEmoji_KindSmile]": "[姨母笑]",
    "[TUIEmoji_Haha]": "[哈哈哈]",
    "[TUIEmoji_Cheerful]": "[愉快]",
    "[TUIEmoji_Speechless]": "[無語]",
    "[TUIEmoji_Amazed]": "[驚訝]",
    "[TUIEmoji_Sorrow]": "[悲傷]",
    "[TUIEmoji_Complacent]": "[得意]",
    "[TUIEmoji_Silly]": "[傻了]",
    "[TUIEmoji_Lustful]": "[色]",
    "[TUIEmoji_Giggle]": "[憨笑]",
    "[TUIEmoji_Kiss]": "[親親]",
    "[TUIEmoji_Wail]": "[大哭]",
    "[TUIEmoji_TearsLaugh]": "[哭笑]",
    "[TUIEmoji_Trapped]": "[困]",
    "[TUIEmoji_Mask]": "[口罩]",
    "[TUIEmoji_Fear]": "[恐懼]",
    "[TUIEmoji_BareTeeth]": "[齜牙]",
    "[TUIEmoji_FlareUp]": "[發怒]",
    "[TUIEmoji_Yawn]": "[打哈欠]",
    "[TUIEmoji_Tact]": "[機智]",
    "[TUIEmoji_Stareyes]": "[星星眼]",
    "[TUIEmoji_ShutUp]": "[閉嘴]",
    "[TUIEmoji_Sigh]": "[嘆氣]",
    "[TUIEmoji_Hehe]": "[呵呵]",
    "[TUIEmoji_Silent]": "[收聲]",
    "[TUIEmoji_Surprised]": "[驚喜]",
    "[TUIEmoji_Askance]": "[白眼]",
    "[TUIEmoji_Ok]": "[OK]",
    "[TUIEmoji_Shit]": "[便便]",
    "[TUIEmoji_Monster]": "[怪獸]",
    "[TUIEmoji_Daemon]": "[惡魔]",
    "[TUIEmoji_Rage]": "[惡魔怒]",
    "[TUIEmoji_Fool]": "[衰]",
    "[TUIEmoji_Pig]": "[豬]",
    "[TUIEmoji_Cow]": "[牛]",
    "[TUIEmoji_Ai]": "[AI]",
    "[TUIEmoji_Skull]": "[骷髏]",
    "[TUIEmoji_Bombs]": "[炸彈]",
    "[TUIEmoji_Coffee]": "[咖啡]",
    "[TUIEmoji_Cake]": "[蛋糕]",
    "[TUIEmoji_Beer]": "[啤酒]",
    "[TUIEmoji_Flower]": "[花]",
    "[TUIEmoji_Watermelon]": "[瓜]",
    "[TUIEmoji_Rich]": "[壕]",
    "[TUIEmoji_Heart]": "[愛心]",
    "[TUIEmoji_Moon]": "[月亮]",
    "[TUIEmoji_Sun]": "[太陽]",
    "[TUIEmoji_Star]": "[星星]",
    "[TUIEmoji_RedPacket]": "[紅包]",
    "[TUIEmoji_Celebrate]": "[慶祝]",
    "[TUIEmoji_Bless]": "[福]",
    "[TUIEmoji_Fortune]": "[發]",
    "[TUIEmoji_Convinced]": "[服]",
    "[TUIEmoji_Prohibit]": "[禁]",
    "[TUIEmoji_666]": "[666]",
    "[TUIEmoji_857]": "[857]",
    "[TUIEmoji_Knife]": "[刀]",
    "[TUIEmoji_Like]": "[讚]"
  };
  const messages$4 = {
    zh_tw: {
      取消: "取消",
      发送: "發送",
      系统通知: "系統通知",
      关闭: "關閉",
      确定: "確定",
      开始时间: "開始時間",
      结束时间: "結束時間",
      消息: "消息",
      通讯录: "通訊錄",
      欢迎使用腾讯云即时通信IM: "歡迎使用騰訊雲即時通信IM",
      TUIChat,
      TUIConversation,
      TUIGroup,
      TUIContact,
      message,
      component: components,
      time,
      Evaluate,
      Words,
      TUISearch,
      Emoji
    }
  };
  const messages$3 = {
    ...messages$6,
    ...messages$5,
    ...messages$4
  };
  let TUIChatKit$1 = class TUIChatKit2 {
    constructor() {
      this.TUIComponents = {};
      this.TUIPlugins = {};
      this.TUICore = R$1;
      this.TUIChatEngine = Kt;
      this.TUIGlobal = i;
      this.SDKAppID = 0;
      this.TUIGlobal._isTIMCallKit = true;
      R$1.registerEvent(E$1.TUILogin.EVENT.LOGIN_STATE_CHANGED, E$1.TUILogin.EVENT_SUB_KEY.USER_LOGIN_SUCCESS, this);
      R$1.registerEvent(E$1.TUITranslate.EVENT.LANGUAGE_CHANGED, E$1.TUITranslate.EVENT_SUB_KEY.CHANGE_SUCCESS, this);
      R$1.registerService(E$1.TUITranslatePlugin.SERVICE.NAME, 1);
      R$1.registerService(E$1.TUIVoiceToTextPlugin.SERVICE.NAME, 1);
    }
    /**
     * Listen for the success notification of TUILogin.login
     */
    onNotifyEvent(eventName, subKey, params) {
      if (eventName === E$1.TUILogin.EVENT.LOGIN_STATE_CHANGED) {
        switch (subKey) {
          case E$1.TUILogin.EVENT_SUB_KEY.USER_LOGIN_SUCCESS:
            this.login();
            break;
        }
      }
      if (eventName === E$1.TUITranslate.EVENT.LANGUAGE_CHANGED) {
        switch (subKey) {
          case E$1.TUITranslate.EVENT_SUB_KEY.CHANGE_SUCCESS:
            if (params == null ? void 0 : params.language) {
              Jt.changeLanguage(params.language);
            }
            break;
        }
      }
    }
    /**
     * init
     */
    init() {
      if (TUIChatKit2.isInitialized) {
        return;
      }
      TUIChatKit2.isInitialized = true;
      if (isApp$1) {
        new CallkitPluginServer();
      }
      Jt.provideLanguages({ ...messages$3 });
      Jt.useI18n();
      i.TUIComponents = this.TUIComponents;
      i.TUIPlugins = this.TUIPlugins;
      formatAppLog("warn", "at TUIKit/server.ts:79", "[TUIChatKit]: init success.");
    }
    /**
     * login
     */
    login() {
      const { chat: chat2, SDKAppID: SDKAppID2, userID, userSig } = A.getContext();
      this.SDKAppID = SDKAppID2;
      this.TUIChatEngine.login({
        chat: chat2,
        SDKAppID: SDKAppID2,
        userID,
        userSig
      });
      this.chat = chat2;
      return this.TUIChatEngine;
    }
    /**
     * Single component mounting
     *
     * @param {string} componentName
     * @param {any} component
     * @param {any=} env
     * @returns {TUICore} mounted instance
     */
    component(componentName, component2, env) {
      var _a, _b;
      if ((_a = this == null ? void 0 : this.TUIComponents) == null ? void 0 : _a.componentName) {
        formatAppLog(
          "warn",
          "at TUIKit/server.ts:108",
          `[TUIChatKit]: ${(_b = this == null ? void 0 : this.TUIComponents) == null ? void 0 : _b.componentName} component has already been applied to target TUIChatEngine.`
        );
      } else {
        this.TUIComponents[componentName] = component2;
        env == null ? void 0 : env.component(componentName, component2);
      }
      if (env) {
        !i.Vue && (i.Vue = env);
      }
      return this.TUIChatEngine;
    }
    /**
     * Component list mount
     *
     * @param {object} components
     * @param {any=} env: Vue2/Vue3 environment
     * @returns {TUICore} mounted instance
     */
    components(components2, env) {
      var _a;
      if (!components2 || !isObject$2(components2)) {
        formatAppLog("warn", "at TUIKit/server.ts:130", "[TUIChatKit]: components is empty or not object.");
      } else {
        (_a = Object == null ? void 0 : Object.keys(components2)) == null ? void 0 : _a.forEach((key) => {
          this.component(key, components2[key], env);
        });
      }
      return this.TUIChatEngine;
    }
    /**
     * Plugin Injection
     *
     * @param {any} TUIPlugin
     * @param {any} options
     * @returns {TUICore} mounted instance
     */
    use(TUIPluginName, TUIPlugin, options) {
      if (!this.TUICore) {
        formatAppLog(
          "warn",
          "at TUIKit/server.ts:148",
          `[TUIChatKit]: Plugin ${this.TUIPlugins[TUIPluginName]} can't be used before init.`
        );
        return;
      }
      if (this.TUIPlugins[TUIPluginName]) {
        formatAppLog(
          "warn",
          "at TUIKit/server.ts:154",
          `[TUIChatKit]: Plugin ${this.TUIPlugins[TUIPluginName]} has already been applied to target TUIChatEngine.`
        );
      } else if (TUIPlugin && isFunction(TUIPlugin == null ? void 0 : TUIPlugin.plugin)) {
        this.TUIPlugins[TUIPluginName] = TUIPlugin;
        TUIPlugin == null ? void 0 : TUIPlugin.plugin(this, options);
      } else if (isFunction(TUIPlugin)) {
        this.TUIPlugins[TUIPluginName] = TUIPlugin;
        TUIPlugin(this, options);
      } else {
        formatAppLog(
          "warn",
          "at TUIKit/server.ts:164",
          '[TUIChatKit]: A plugin must either be a function or an object with an "plugin" function.' + this.TUIPlugins[TUIPluginName] + "does not comply with the above rules."
        );
      }
      return this.TUIChatEngine;
    }
  };
  class TUIChatServer {
    constructor() {
      this.currentConversationID = "";
      this.currentMessageList = [];
      R$1.registerService(E$1.TUIChat.SERVICE.NAME, this);
      R$1.registerEvent(E$1.TUITheme.EVENT.THEME_CHANGED, E$1.TUITheme.EVENT_SUB_KEY.CHANGE_SUCCESS, this);
      R$1.registerEvent(E$1.TUIChat.EVENT.CHAT_TYPE_CHANGED, E$1.TUIChat.EVENT_SUB_KEY.CHANGE_SUCCESS, this);
      zt.watch(o$2.CONV, {
        currentConversationID: (id) => {
          this.currentConversationID = id;
        }
      });
    }
    onCall(method, params, callback) {
      let message2;
      switch (method) {
        case E$1.TUIChat.SERVICE.METHOD.UPDATE_MESSAGE_LIST:
          message2 = params.message;
          if ((message2 == null ? void 0 : message2.conversationID) === this.currentConversationID) {
            Zt.updateMessageList([message2], "push");
          }
          break;
        case E$1.TUIChat.SERVICE.METHOD.SEND_CUSTOM_MESSAGE:
          Zt.sendCustomMessage(params).then((res) => {
            callback && callback(res);
          });
          break;
        case E$1.TUIChat.SERVICE.METHOD.SEND_TEXT_MESSAGE:
          Zt.sendTextMessage(params).then((res) => {
            callback && callback(res);
          });
          break;
        case E$1.TUIChat.SERVICE.METHOD.SET_CHAT_TYPE:
          ChatConfig.setChatType(params == null ? void 0 : params.chatType);
          break;
        case E$1.TUIChat.SERVICE.METHOD.CLOSE_MESSAGE_POP_MENU:
          zt.update(o$2.CUSTOM, "isShowMessagePopMenu", false);
          break;
        case E$1.TUIChat.SERVICE.METHOD.UPDATE_MESSAGE_INFO:
          Zt.updateMessageInfo(params == null ? void 0 : params.userInfo);
          break;
      }
    }
    /**
    * Listen for the success notification.
    */
    onNotifyEvent(eventName, subKey, params) {
      if (eventName === E$1.TUITheme.EVENT.THEME_CHANGED) {
        switch (subKey) {
          case E$1.TUITheme.EVENT_SUB_KEY.CHANGE_SUCCESS:
            if (params == null ? void 0 : params.theme) {
              ChatConfig.setTheme(params.theme.toLowerCase());
            }
            break;
        }
      }
      if (eventName === E$1.TUIChat.EVENT.CHAT_TYPE_CHANGED) {
        switch (subKey) {
          case E$1.TUIChat.EVENT_SUB_KEY.CHANGE_SUCCESS:
            if (params == null ? void 0 : params.chatType) {
              ChatConfig.setChatType(params == null ? void 0 : params.chatType);
            }
            break;
        }
      }
    }
  }
  new TUIChatServer();
  class TUIConversationServer {
    constructor() {
      this.hideConversationHeader = () => {
        zt.update(o$2.CUSTOM, "isShowConversationHeader", false);
      };
      R$1.registerService(E$1.TUIConversation.SERVICE.NAME, this);
      R$1.registerExtension(E$1.TUISearch.EXTENSION.SEARCH_MORE.EXT_ID, this);
      this.onCallParamsMap = /* @__PURE__ */ new Map();
      this.onCallCallbackMap = /* @__PURE__ */ new Map();
      this.constants = E$1;
    }
    static getInstance() {
      if (!TUIConversationServer.instance) {
        TUIConversationServer.instance = new TUIConversationServer();
      }
      return TUIConversationServer.instance;
    }
    getOnCallParams(method) {
      return this.onCallParamsMap.get(method);
    }
    getOnCallCallback(method) {
      return this.onCallCallbackMap.get(method);
    }
    onCall(method, params, callback) {
      this.onCallParamsMap.set(method, params);
      this.onCallCallbackMap.set(method, callback);
      switch (method) {
        case E$1.TUIConversation.SERVICE.METHOD.CREATE_CONVERSATION:
          this.createConversation(params);
          break;
        case E$1.TUIConversation.SERVICE.METHOD.HIDE_CONVERSATION_HEADER:
          this.hideConversationHeader();
          break;
      }
    }
    onGetExtension(extensionID) {
      if (extensionID === E$1.TUISearch.EXTENSION.SEARCH_MORE.EXT_ID) {
        const list = [
          {
            weight: 100,
            icon: createC2CIcon,
            text: Jt.t("TUIConversation.发起单聊"),
            data: {
              name: CONV_CREATE_TYPE.TYPEC2C
            },
            listener: {
              onClicked: this.createConversation.bind(this)
            }
          },
          {
            weight: 100,
            icon: createGroupIcon,
            text: Jt.t("TUIConversation.发起群聊"),
            data: {
              name: CONV_CREATE_TYPE.TYPEGROUP
            },
            listener: {
              onClicked: this.createConversation.bind(this)
            }
          }
        ];
        return list;
      }
    }
    createConversation(item) {
      R$1.callService({
        serviceName: E$1.TUIContact.SERVICE.NAME,
        method: E$1.TUIContact.SERVICE.METHOD.SELECT_FRIEND,
        params: {
          title: item.text,
          isRadio: item.data.name !== CONV_CREATE_TYPE.TYPEGROUP,
          isNeedSearch: !zt.getData(o$2.APP, "isOfficial")
        },
        callback: async (memberList) => {
          if (!memberList || memberList.length === 0) {
            return this.routerForward(null);
          }
          if (item.data.name === CONV_CREATE_TYPE.TYPEGROUP) {
            this.createGroup(memberList);
          } else {
            const { userID } = memberList[0];
            await this.generateConversation(`C2C${userID}`);
            this.routerForward(`C2C${userID}`);
          }
        }
      });
    }
    createGroup(memberList) {
      R$1.callService({
        serviceName: E$1.TUIGroup.SERVICE.NAME,
        method: E$1.TUIGroup.SERVICE.METHOD.CREATE_GROUP,
        params: {
          title: Jt.t("TUIConversation.发起群聊"),
          memberList
        },
        callback: async (group) => {
          let conversationID = null;
          if (group) {
            const { groupID } = group;
            await this.generateConversation(`GROUP${groupID}`);
            conversationID = `GROUP${groupID}`;
          }
          this.routerForward(conversationID);
        }
      });
    }
    async routerForward(conversationID) {
      if (isUniFrameWork) {
        await (i == null ? void 0 : i.reLaunch({
          url: "/TUIKit/components/TUIConversation/index"
        }));
        if (conversationID) {
          i == null ? void 0 : i.navigateTo({
            url: "/TUIKit/components/TUIChat/index"
          });
        }
      }
    }
    generateConversation(conversationID) {
      Wt.switchConversation(conversationID).then(() => {
        if (conversationID.startsWith("GROUP")) {
          enableSampleTaskStatus("groupChat");
        }
        formatAppLog("warn", "at TUIKit/components/TUIConversation/server.ts:153", "打开会话成功");
      }).catch((err) => {
        formatAppLog("warn", "at TUIKit/components/TUIConversation/server.ts:156", "打开会话失败", err.code, err.msg);
      });
    }
  }
  new TUIConversationServer();
  class TUISearchServer {
    constructor() {
      R$1.registerService(E$1.TUISearch.SERVICE.NAME, this);
      R$1.registerExtension(E$1.TUIChat.EXTENSION.INPUT_MORE.EXT_ID, this);
    }
    onCall(method, params) {
      switch (method) {
        case E$1.TUISearch.SERVICE.METHOD.SEARCH_GROUP:
          return this.searchGroup(params == null ? void 0 : params.groupID);
        case E$1.TUISearch.SERVICE.METHOD.SEARCH_USER:
          return this.searchUser(params == null ? void 0 : params.userID);
        case E$1.TUISearch.SERVICE.METHOD.SEARCH_FRIEND:
          return this.searchFriend(params == null ? void 0 : params.userID);
        case E$1.TUISearch.SERVICE.METHOD.SEARCH_GROUP_MEMBER:
          return this.searchGroupMember(params == null ? void 0 : params.groupID, params == null ? void 0 : params.userID);
      }
    }
    onGetExtension(extensionID) {
      if (extensionID === E$1.TUIChat.EXTENSION.INPUT_MORE.EXT_ID) {
        const list = [];
        const searchExtension = {
          weight: 3e3,
          text: "搜索",
          icon: "https://web.sdk.qcloud.com/component/TUIKit/assets/message-search.svg",
          data: {
            name: "search"
          },
          listener: {
            onClicked: () => {
              zt.update(o$2.SEARCH, "isShowInConversationSearch", true);
              isUniFrameWork && (i == null ? void 0 : i.navigateTo({
                url: "/TUIKit/components/TUISearch/index"
              }));
            }
          }
        };
        list.push(searchExtension);
        return list;
      }
    }
    async searchFriend(userID) {
      return es.getFriendProfile({ userIDList: [userID] });
    }
    async searchUser(userID) {
      return Xt.getUserProfile({ userIDList: [userID] });
    }
    async searchGroup(groupID) {
      return Qt.searchGroupByID(groupID);
    }
    async searchGroupMember(groupID, userID) {
      return Qt.getGroupMemberProfile({
        groupID,
        userIDList: [userID]
      });
    }
  }
  new TUISearchServer();
  TUIContactServer.getInstance();
  TUIGroupServer.getInstance();
  const TUIChatKit = new TUIChatKit$1();
  TUIChatKit.init();
  const Android$2 = "Android";
  const iOS$2 = "iOS";
  const Windows$2 = "Windows";
  const Login$2 = {
    "登录": "log in",
    "登录当前账号": "Log in with current account",
    "切换其他账号": "Switch accounts",
    "我已阅读并同意": "I have read and agree to",
    "和": "and",
    "隐私条例": "Privacy Policy",
    "用户协议": "User Agreement",
    "免费体验": "Free trial",
    "体验更多Demo": "More demos",
    "访问官网": "Official website",
    "超10亿用户的信赖": "1+ billion users trust Tencent Cloud Instant Messenger",
    "一分钟": "1 Minute",
    "改2行代码，1分钟跑通demo": "Quick demo run in 1 minute with changing only 2 lines of code required",
    "每月服务客户数超过10000家": "Over 10,000 customers per month",
    "消息收发成功率": "Success rate of message sending & receiving and service reliability higher than 99.99%",
    "10亿": "1 billion",
    "每月活跃用户数超过10亿": "Over 1 billion active users per month",
    "请输入手机号": "Enter a mobile number",
    "请输入userID": "Please enter your userID",
    "请输入验证码": "Enter the verification code",
    "请输入正确的手机号": "Enter a valid mobile number",
    "请先勾选用户协议": "Agree to the User Agreement first",
    "获取验证码": "Send verification code",
    "登录失败": "Login failed",
    "登录过期": "Login expired",
    "操作失败": "failed",
    "验证码发送成功": "Verification code sent successfully",
    "发送验证码失败": "Failed to send the verification code",
    Android: Android$2,
    iOS: iOS$2,
    "小程序": "WeChat Mini Program",
    Windows: Windows$2,
    "Mac OS": "Mac OS",
    "扫描二维码下载": "Applet scanning QR code download",
    "微信扫码进入": " WeChat scanning QR code to enter",
    "点击直接下载": "Click to download directly",
    "更多客户端体验": "More client experiences",
    "微信扫一扫，免费体验腾讯云 IM 小程序": "Scan the QR code on WeChat to experience the Tencent Cloud Chat mini program for free",
    "或者截图至相册，切换微信扫一扫识别体验": "Or take a screenshot to the photo album to switch the wechat scanning recognition experience"
  };
  const messages$2 = {
    en: {
      当前语言: "English",
      即时通信: "Chat",
      即时通信IM: "Chat",
      社交娱乐: "Entertaining & Socializing",
      腾讯云: "Tencent Cloud",
      使用指引: "User Guide",
      Login: Login$2
    }
  };
  const Android$1 = "Android";
  const iOS$1 = "iOS";
  const Windows$1 = "Windows";
  const Login$1 = {
    "登录": "登录",
    "登录当前账号": "登录当前账号",
    "切换其他账号": "切换其他账号",
    "我已阅读并同意": "我已阅读并同意",
    "和": "和",
    "隐私条例": "隐私条例",
    "用户协议": "用户协议",
    "免费体验": "免费体验",
    "体验更多Demo": "体验更多Demo",
    "访问官网": "访问官网",
    "超10亿用户的信赖": "超10亿用户的信赖",
    "一分钟": "一分钟",
    "改2行代码，1分钟跑通demo": "改2行代码，1分钟跑通demo",
    "每月服务客户数超过10000家": "每月服务客户数超过10000家",
    "消息收发成功率": "消息收发成功率，服务可靠性高于99.99%",
    "10亿": "10亿",
    "每月活跃用户数超过10亿": "每月活跃用户数超过10亿",
    "请输入手机号": "请输入手机号",
    "请输入userID": "请输入userID",
    "请输入正确的手机号": "请输入正确的手机号",
    "请先勾选用户协议": "请先勾选用户协议",
    "请输入验证码": "请输入验证码",
    "获取验证码": "获取验证码",
    "登录失败": "登录失败",
    "登录过期": "登录过期",
    "操作失败": "操作失败",
    "验证码发送成功": "验证码发送成功",
    "发送验证码失败": "验证码发送失败",
    Android: Android$1,
    iOS: iOS$1,
    "小程序": "小程序",
    Windows: Windows$1,
    "Mac OS": "Mac OS",
    "扫描二维码下载": "扫描二维码下载",
    "微信扫码进入": "微信扫码进入",
    "点击直接下载": "点击直接下载",
    "更多客户端体验": "更多客户端体验",
    "微信扫一扫，免费体验腾讯云 IM 小程序": "微信扫一扫，免费体验腾讯云 IM 小程序",
    "或者截图至相册，切换微信扫一扫识别体验": "或者截图至相册，切换微信扫一扫识别体验"
  };
  const messages$1 = {
    zh_cn: {
      当前语言: "简体中文",
      即时通信: "即时通信",
      即时通信IM: "即时通信IM",
      社交娱乐: "社交娱乐",
      腾讯云: "腾讯云",
      使用指引: "使用指引",
      Login: Login$1
    }
  };
  const Android = "Android";
  const iOS = "iOS";
  const Windows = "Windows";
  const Login = {
    "登录": "登錄",
    "登录当前账号": "登錄當前賬號",
    "切换其他账号": "切換其他賬號",
    "我已阅读并同意": "我已閱讀並同意",
    "和": "和",
    "隐私条例": "隱私條例",
    "用户协议": "用戶協議",
    "免费体验": "免費體驗",
    "体验更多Demo": "體驗更多Demo",
    "访问官网": "訪問官網",
    "超10亿用户的信赖": "超10億用戶的信賴",
    "一分钟": "一分鐘",
    "改2行代码，1分钟跑通demo": "改2行代碼，1分鐘跑通demo",
    "每月服务客户数超过10000家": "每月服務客戶數超過10000家",
    "消息收发成功率": "消息收發成功率，服務可靠性高於99.99%",
    "10亿": "10億",
    "每月活跃用户数超过10亿": "每月活躍用戶數超過10億",
    "请输入手机号": "請輸入手機號",
    "请输入userID": "請輸入userID",
    "请输入正确的手机号": "請輸入正確的手機號",
    "请先勾选用户协议": "請先勾選用戶協議",
    "请输入验证码": "請輸入驗證碼",
    "获取验证码": "獲取驗證碼",
    "登录失败": "登錄失敗",
    "登录过期": "登錄過期",
    "操作失败": "操作失敗",
    "验证码发送成功": "驗證碼發送成功",
    "发送验证码失败": "驗證碼發送失敗",
    Android,
    iOS,
    "小程序": "小程序",
    Windows,
    "Mac OS": "Mac OS",
    "扫描二维码下载": "掃描二維碼下載",
    "微信扫码进入": "微信掃碼進入",
    "点击直接下载": "點擊直接下載",
    "更多客户端体验": "更多客戶端體驗",
    "微信扫一扫，免费体验腾讯云 IM 小程序": "微信掃一掃，免費體驗騰訊雲 IM 小程序",
    "或者截图至相册，切换微信扫一扫识别体验": "或者截圖至相冊，切換微信掃一掃識別體驗"
  };
  const messages = {
    zh_tw: {
      当前语言: "繁體中文",
      即时通信: "即時通信",
      即时通信IM: "即時通信IM",
      社交娱乐: "社交娛樂",
      腾讯云: "騰訊雲",
      使用指引: "使用指引",
      Login
    }
  };
  const demoLocales = {
    ...messages$2,
    ...messages$1,
    ...messages
  };
  const locales = {};
  const allLanguages = /* @__PURE__ */ new Set([
    ...Object.keys(demoLocales),
    ...Object.keys(messages$3)
  ]);
  allLanguages.forEach((lang) => {
    locales[lang] = {
      ...demoLocales[lang] || {},
      ...messages$3[lang] || {}
    };
  });
  const TIMPushConfigs = {};
  const getAndroidNotificationAuth = () => {
    const main = plus.android.runtimeMainActivity();
    let NotificationManagerCompat = plus.android.importClass(
      "android.support.v4.app.NotificationManagerCompat"
    );
    if (!NotificationManagerCompat) {
      NotificationManagerCompat = plus.android.importClass(
        "androidx.core.app.NotificationManagerCompat"
      );
    }
    const isNotificationsEnabled = NotificationManagerCompat.from(main).areNotificationsEnabled();
    if (!isNotificationsEnabled) {
      uni.showModal({
        title: "推送需要通知栏权限",
        content: "是否开启通知栏权限?",
        success: (res) => {
          if (res.confirm) {
            openAndroidNotification();
          } else if (res.cancel) {
            formatAppLog("warn", "at utils/getNotificationAuth.js:22", "用户点击取消");
          }
        }
      });
    }
  };
  const getIOSNotificationAuth = () => {
    const UIApplication = plus.ios.import("UIApplication");
    const app = UIApplication.sharedApplication();
    if (app.currentUserNotificationSettings) {
      const settings = app.currentUserNotificationSettings();
      const enabledTypes = settings == null ? void 0 : settings.plusGetAttribute("types");
      formatAppLog("log", "at utils/getNotificationAuth.js:35", "enabledTypes:" + enabledTypes);
      if (enabledTypes === 0) {
        uni.showModal({
          title: "推送需要通知栏权限",
          content: "是否开启通知栏权限?",
          success: (res) => {
            if (res.confirm) {
              openIOSNotification();
            } else if (res.cancel) {
              formatAppLog("log", "at utils/getNotificationAuth.js:44", "用户点击取消");
            }
          }
        });
      }
      plus.ios.deleteObject(settings);
    }
  };
  const getNotificationAuth = () => {
    const platform = uni.getSystemInfoSync().platform;
    if (platform === "ios") {
      getIOSNotificationAuth();
    } else if (platform === "android") {
      getAndroidNotificationAuth();
    }
  };
  const openAndroidNotification = () => {
    const main = plus.android.runtimeMainActivity();
    const pkName = main.getPackageName();
    const uid = main.getApplicationInfo().plusGetAttribute("uid");
    const Intent = plus.android.importClass("android.content.Intent");
    const Build = plus.android.importClass("android.os.Build");
    const intent = new Intent("android.settings.APP_NOTIFICATION_SETTINGS");
    if (Build.VERSION.SDK_INT >= 26) {
      intent.putExtra("android.provider.extra.APP_PACKAGE", pkName);
    } else if (Build.VERSION.SDK_INT >= 21) {
      intent.putExtra("app_package", pkName);
      intent.putExtra("app_uid", uid);
    } else {
      intent.setAction(Settings.ACTION_APPLICATION_DETAILS_SETTINGS);
      const uri = Uri.fromParts(
        "package",
        mainActivity.getPackageName(),
        null
      );
      intent.setData(uri);
    }
    main.startActivity(intent);
  };
  const openIOSNotification = () => {
    const UIApplication = plus.ios.import("UIApplication");
    const app = UIApplication.sharedApplication();
    const settings = app.currentUserNotificationSettings();
    const NSURL = plus.ios.import("NSURL");
    const appSetting = NSURL.URLWithString("app-settings:");
    const application = UIApplication.sharedApplication();
    application.openURL(appSetting);
    plus.ios.deleteObject(appSetting);
    plus.ios.deleteObject(NSURL);
    plus.ios.deleteObject(application);
    plus.ios.deleteObject(settings);
  };
  const TIMPush = requireNativePlugin("TencentCloud-TIMPush");
  formatAppLog(
    "warn",
    "at App.vue:16",
    `TencentCloud-TIMPush: uni.requireNativePlugin ${TIMPush ? "success" : "fail"}`
  );
  uni.$TIMPush = TIMPush;
  uni.$TIMPushConfigs = TIMPushConfigs;
  const enterChatConfig = {
    isLoginChat: false,
    conversationID: ""
  };
  const TUICallKit = requireNativePlugin("TencentCloud-TUICallKit");
  formatAppLog(
    "warn",
    "at App.vue:30",
    `TencentCloud-TUICallKit: uni.requireNativePlugin ${TUICallKit ? "success" : "fail"}`
  );
  uni.$TUICallKit = TUICallKit;
  Jt.provideLanguages(locales);
  Jt.useI18n();
  TUIChatKit.init();
  const SDKAppID = 1600059782;
  const secretKey = "de59c03814fa68ec61476566140ae06fdcd9f17fe05bcb33e5162571924e6246";
  uni.$chat_SDKAppID = SDKAppID;
  uni.$chat_secretKey = secretKey;
  const _sfc_main = {
    globalData: {
      windowHeight: 0,
      windowWidth: 0,
      screenHeight: 0,
      safeArea: 0,
      top: 0,
      safeAreaBottom: 0,
      //设备底部安全距离
      statusBarHeight: 0,
      pageHeight: 0,
      // platform: 0,
      tabBarHeight: 0,
      token: "",
      platform: ""
      //设备信息
    },
    onLaunch: function() {
      uni.onTabBarMidButtonTap(() => {
        uni.navigateTo({
          url: "/pages/release/release"
        });
      });
      this.getAreaSize();
      if (typeof uni.$TIMPush === "undefined") {
        formatAppLog(
          "warn",
          "at App.vue:92",
          "如果您使用推送功能，需集成 TIMPush 插件，使用真机运行并且自定义基座调试，请参考官网文档：https://cloud.tencent.com/document/product/269/103522"
        );
      } else {
        getNotificationAuth();
        uni.$on("uikitLogin", () => {
          enterChatConfig.isLoginChat = true;
          openChat(enterChatConfig);
        });
        uni.$TIMPush.setOfflinePushListener((data) => {
          const { notification = "" } = (data == null ? void 0 : data.data) || {};
          if (!notification) {
            return;
          }
          const { entity } = JSON.parse(notification);
          formatAppLog("log", "at App.vue:107", "推送消息:", 111111);
          const type = entity.chatType === 1 ? Kt.TYPES.CONV_C2C : Kt.TYPES.CONV_GROUP;
          enterChatConfig.conversationID = `${type}${entity.sender}`;
          if (enterChatConfig.isLoginChat && entity.sender) {
            openChat(enterChatConfig);
          }
        });
        loginFromStorage();
      }
    },
    onShow: function() {
      setTimeout(() => {
        plus.navigator.closeSplashscreen();
      }, 2e3);
    },
    onHide: function() {
    },
    methods: {
      getAreaSize() {
        var res = uni.getSystemInfoSync();
        formatAppLog("log", "at App.vue:137", "设备信息", res);
        this.globalData.platform = res.platform;
        formatAppLog("log", "at App.vue:139", "手机设备", this.globalData.model);
        this.globalData.windowHeight = res.windowHeight;
        this.globalData.windowWidth = res.windowWidth;
        this.globalData.screenHeight = res.screenHeight;
        this.globalData.safeArea = res.safeArea;
        this.globalData.top = res.safeArea.top;
        formatAppLog("log", "at App.vue:150", "safeAreaTop", this.globalData.top);
        this.globalData.safeAreaBottom = res.screenHeight - res.safeArea.bottom;
        this.globalData.tabBarHeight = res.screenHeight - res.windowWidth - res.statusBarHeight;
        this.globalData.statusBarHeight = res.statusBarHeight;
        this.globalData.pageHeight = this.globalData.windowHeight;
        this.globalData.platform = res.platform;
      }
    }
  };
  const App = /* @__PURE__ */ _export_sfc(_sfc_main, [["__scopeId", "data-v-f13b4d11"], ["__file", "C:/Users/Administrator/Desktop/Project Folder/ZXHand/ZXHandwritting_APP_uniapp/App.vue"]]);
  function isObject(v2) {
    return typeof v2 === "object" && v2 !== null;
  }
  function normalizeOptions(options, factoryOptions) {
    options = isObject(options) ? options : /* @__PURE__ */ Object.create(null);
    return new Proxy(options, {
      get(target, key, receiver) {
        if (key === "key")
          return Reflect.get(target, key, receiver);
        return Reflect.get(target, key, receiver) || Reflect.get(factoryOptions, key, receiver);
      }
    });
  }
  function get(state, path) {
    return path.reduce((obj, p2) => {
      return obj == null ? void 0 : obj[p2];
    }, state);
  }
  function set(state, path, val) {
    return path.slice(0, -1).reduce((obj, p2) => {
      if (/^(__proto__)$/.test(p2))
        return {};
      else
        return obj[p2] = obj[p2] || {};
    }, state)[path[path.length - 1]] = val, state;
  }
  function pick(baseState, paths) {
    return paths.reduce((substate, path) => {
      const pathArray = path.split(".");
      return set(substate, pathArray, get(baseState, pathArray));
    }, {});
  }
  function parsePersistence(factoryOptions, store) {
    return (o2) => {
      var _a;
      try {
        const {
          storage = localStorage,
          beforeRestore = void 0,
          afterRestore = void 0,
          serializer = {
            serialize: JSON.stringify,
            deserialize: JSON.parse
          },
          key = store.$id,
          paths = null,
          debug = false
        } = o2;
        return {
          storage,
          beforeRestore,
          afterRestore,
          serializer,
          key: ((_a = factoryOptions.key) != null ? _a : (k2) => k2)(typeof key == "string" ? key : key(store.$id)),
          paths,
          debug
        };
      } catch (e2) {
        if (o2.debug)
          formatAppLog("error", "at uni_modules/pinia-plugin-unistorage/index.js:65", "[pinia-plugin-persistedstate]", e2);
        return null;
      }
    };
  }
  function hydrateStore(store, { storage, serializer, key, debug }) {
    try {
      const fromStorage = storage == null ? void 0 : storage.getItem(key);
      if (fromStorage)
        store.$patch(serializer == null ? void 0 : serializer.deserialize(fromStorage));
    } catch (e2) {
      if (debug)
        formatAppLog("error", "at uni_modules/pinia-plugin-unistorage/index.js:77", "[pinia-plugin-persistedstate]", e2);
    }
  }
  function persistState(state, { storage, serializer, key, paths, debug }) {
    try {
      const toStore = Array.isArray(paths) ? pick(state, paths) : state;
      storage.setItem(key, serializer.serialize(toStore));
    } catch (e2) {
      if (debug)
        formatAppLog("error", "at uni_modules/pinia-plugin-unistorage/index.js:86", "[pinia-plugin-persistedstate]", e2);
    }
  }
  function createPersistedState(factoryOptions = {}) {
    return (context) => {
      const { auto = false } = factoryOptions;
      const {
        options: { persist = auto },
        store,
        pinia
      } = context;
      if (!persist)
        return;
      if (!(store.$id in pinia.state.value)) {
        const original_store = pinia._s.get(store.$id.replace("__hot:", ""));
        if (original_store)
          Promise.resolve().then(() => original_store.$persist());
        return;
      }
      const persistences = (Array.isArray(persist) ? persist.map((p2) => normalizeOptions(p2, factoryOptions)) : [normalizeOptions(persist, factoryOptions)]).map(parsePersistence(factoryOptions, store)).filter(Boolean);
      store.$persist = () => {
        persistences.forEach((persistence) => {
          persistState(store.$state, persistence);
        });
      };
      store.$hydrate = ({ runHooks = true } = {}) => {
        persistences.forEach((persistence) => {
          const { beforeRestore, afterRestore } = persistence;
          if (runHooks)
            beforeRestore == null ? void 0 : beforeRestore(context);
          hydrateStore(store, persistence);
          if (runHooks)
            afterRestore == null ? void 0 : afterRestore(context);
        });
      };
      persistences.forEach((persistence) => {
        const { beforeRestore, afterRestore } = persistence;
        beforeRestore == null ? void 0 : beforeRestore(context);
        hydrateStore(store, persistence);
        afterRestore == null ? void 0 : afterRestore(context);
        store.$subscribe(
          (_mutation, state) => {
            persistState(state, persistence);
          },
          {
            detached: true
          }
        );
      });
    };
  }
  function createUnistorage(globalOptions = {}) {
    const persistedState = createPersistedState({
      storage: {
        getItem(key) {
          return uni.getStorageSync(key);
        },
        setItem(key, value) {
          uni.setStorageSync(key, value);
        }
      },
      serializer: {
        deserialize: JSON.parse,
        serialize: JSON.stringify
      },
      ...globalOptions
    });
    return (ctx) => {
      if (ctx.options.unistorage) {
        ctx.options.persist = ctx.options.unistorage;
      }
      return persistedState(ctx);
    };
  }
  function createApp() {
    const app = vue.createVueApp(App);
    const pinia = createPinia();
    pinia.use(createUnistorage());
    app.use(pinia);
    return {
      app
    };
  }
  const { app: __app__, Vuex: __Vuex__, Pinia: __Pinia__ } = createApp();
  uni.Vuex = __Vuex__;
  uni.Pinia = __Pinia__;
  __app__.provide("__globalStyles", __uniConfig.styles);
  __app__._component.mpType = "app";
  __app__._component.render = () => {
  };
  __app__.mount("#app");
})(Vue);
